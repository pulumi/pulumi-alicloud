// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource will help you to manage a ManagedKubernetes Cluster in Alibaba Cloud Kubernetes Service.
 *
 * > **NOTE:** Available since v1.26.0.
 *
 * > **NOTE:** It is recommended to create a cluster with zero worker nodes, and then use a node pool to manage the cluster nodes.
 *
 * > **NOTE:** Kubernetes cluster only supports VPC network and it can access internet while creating kubernetes cluster.
 * A Nat Gateway and configuring a SNAT for it can ensure one VPC network access internet. If there is no nat gateway in the
 * VPC, you can set `newNatGateway` to "true" to create one automatically.
 *
 * > **NOTE:** Creating kubernetes cluster need to install several packages and it will cost about 15 minutes. Please be patient.
 *
 * > **NOTE:** From version 1.9.4, the provider supports to download kube config, client certificate, client key and cluster ca certificate
 * after creating cluster successfully, and you can put them into the specified location, like '~/.kube/config'.
 *
 * > **NOTE:** From version 1.20.0, the provider supports disabling internet load balancer for API Server by setting `false` to `slbInternetEnabled`.
 *
 * > **NOTE:** If you want to manage Kubernetes, you can use Kubernetes Provider.
 *
 * > **NOTE:** You need to activate several other products and confirm Authorization Policy used by Container Service before using this resource.
 * Please refer to the `Authorization management` and `Cluster management` sections in the [Document Center](https://www.alibabacloud.com/help/doc-detail/86488.htm).
 *
 * > **NOTE:** From version 1.72.0, Some parameters have been removed from resource,You can check them below and re-import the cluster if necessary.
 *
 * > **NOTE:** From version 1.120.0, Support for cluster migration from Standard cluster to professional.
 *
 * > **NOTE:** From version 1.177.0+, `runtime`,`enableSsh`,`rdsInstances`,`excludeAutoscalerNodes`,`workerNumber`,`workerInstanceTypes`,`password`,`keyName`,`kmsEncryptedPassword`,`kmsEncryptionContext`,`workerInstanceChargeType`,`workerPeriod`,`workerPeriodUnit`,`workerAutoRenew`,`workerAutoRenewPeriod`,`workerDiskCategory`,`workerDiskSize`,`workerDataDisks`,`nodeNameMode`,`nodePortRange`,`osType`,`platform`,`imageId`,`cpuPolicy`,`userData`,`taints`,`workerDiskPerformanceLevel`,`workerDiskSnapshotPolicyId`,`installCloudMonitor` are deprecated.
 * We Suggest you using resource **`alicloud.cs.NodePool`** to manage your cluster worker nodes.
 *
 * > **NOTE:** From version 1.212.0, `runtime`,`enableSsh`,`rdsInstances`,`excludeAutoscalerNodes`,`workerNumber`,`workerInstanceTypes`,`password`,`keyName`,`kmsEncryptedPassword`,`kmsEncryptionContext`,`workerInstanceChargeType`,`workerPeriod`,`workerPeriodUnit`,`workerAutoRenew`,`workerAutoRenewPeriod`,`workerDiskCategory`,`workerDiskSize`,`workerDataDisks`,`nodeNameMode`,`nodePortRange`,`osType`,`platform`,`imageId`,`cpuPolicy`,`userData`,`taints`,`workerDiskPerformanceLevel`,`workerDiskSnapshotPolicyId`,`installCloudMonitor`,`kubeConfig`,`availabilityZone` are removed.
 * Please use resource **`alicloud.cs.NodePool`** to manage your cluster worker nodes.
 *
 * ## Import
 *
 * Kubernetes managed cluster can be imported using the id, e.g. Then complete the main.tf accords to the result of `pulumi preview`.
 *
 * ```sh
 * $ pulumi import alicloud:cs/managedKubernetes:ManagedKubernetes main cluster_id
 * ```
 */
export class ManagedKubernetes extends pulumi.CustomResource {
    /**
     * Get an existing ManagedKubernetes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedKubernetesState, opts?: pulumi.CustomResourceOptions): ManagedKubernetes {
        return new ManagedKubernetes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cs/managedKubernetes:ManagedKubernetes';

    /**
     * Returns true if the given object is an instance of ManagedKubernetes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedKubernetes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedKubernetes.__pulumiType;
    }

    public readonly addons!: pulumi.Output<outputs.cs.ManagedKubernetesAddon[] | undefined>;
    public readonly apiAudiences!: pulumi.Output<string[] | undefined>;
    /**
     * (Available in 1.105.0+) Nested attribute containing certificate authority data for your cluster.
     */
    public /*out*/ readonly certificateAuthority!: pulumi.Output<outputs.cs.ManagedKubernetesCertificateAuthority>;
    /**
     * The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
     */
    public readonly clientCert!: pulumi.Output<string | undefined>;
    /**
     * The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
     */
    public readonly clientKey!: pulumi.Output<string | undefined>;
    public readonly clusterCaCert!: pulumi.Output<string | undefined>;
    /**
     * cluster local domain
     */
    public readonly clusterDomain!: pulumi.Output<string | undefined>;
    public readonly clusterSpec!: pulumi.Output<string>;
    /**
     * Map of kubernetes cluster connection information.
     */
    public /*out*/ readonly connections!: pulumi.Output<outputs.cs.ManagedKubernetesConnections>;
    public readonly controlPlaneLogComponents!: pulumi.Output<string[] | undefined>;
    public readonly controlPlaneLogProject!: pulumi.Output<string>;
    public readonly controlPlaneLogTtl!: pulumi.Output<string>;
    public readonly customSan!: pulumi.Output<string | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    public readonly enableRrsa!: pulumi.Output<boolean | undefined>;
    /**
     * disk encryption key, only in ack-pro
     */
    public readonly encryptionProviderKey!: pulumi.Output<string | undefined>;
    public readonly isEnterpriseSecurityGroup!: pulumi.Output<boolean>;
    public readonly loadBalancerSpec!: pulumi.Output<string | undefined>;
    public readonly maintenanceWindow!: pulumi.Output<outputs.cs.ManagedKubernetesMaintenanceWindow>;
    /**
     * Node name.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string | undefined>;
    /**
     * The ID of nat gateway used to launch kubernetes cluster.
     */
    public /*out*/ readonly natGatewayId!: pulumi.Output<string>;
    public readonly newNatGateway!: pulumi.Output<boolean | undefined>;
    public readonly nodeCidrMask!: pulumi.Output<number | undefined>;
    public readonly podCidr!: pulumi.Output<string | undefined>;
    public readonly podVswitchIds!: pulumi.Output<string[] | undefined>;
    public readonly proxyMode!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly retainResources!: pulumi.Output<string[] | undefined>;
    /**
     * (Optional, Available in v1.185.0+) Nested attribute containing RRSA related data for your cluster.
     */
    public /*out*/ readonly rrsaMetadata!: pulumi.Output<outputs.cs.ManagedKubernetesRrsaMetadata>;
    public readonly securityGroupId!: pulumi.Output<string>;
    public readonly serviceAccountIssuer!: pulumi.Output<string | undefined>;
    public readonly serviceCidr!: pulumi.Output<string | undefined>;
    /**
     * (Deprecated) The ID of load balancer.
     *
     * @deprecated Field 'slb_id' has been deprecated from provider version 1.9.2. New field 'slb_internet' replaces it.
     */
    public /*out*/ readonly slbId!: pulumi.Output<string>;
    /**
     * The public ip of load balancer.
     */
    public /*out*/ readonly slbInternet!: pulumi.Output<string>;
    public readonly slbInternetEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of private load balancer where the current cluster master node is located.
     */
    public /*out*/ readonly slbIntranet!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly timezone!: pulumi.Output<string | undefined>;
    public readonly userCa!: pulumi.Output<string | undefined>;
    public readonly version!: pulumi.Output<string>;
    /**
     * The ID of VPC where the current cluster is located.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    /**
     * The RamRole Name attached to worker node.
     */
    public /*out*/ readonly workerRamRoleName!: pulumi.Output<string>;
    public readonly workerVswitchIds!: pulumi.Output<string[]>;

    /**
     * Create a ManagedKubernetes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedKubernetesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedKubernetesArgs | ManagedKubernetesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedKubernetesState | undefined;
            resourceInputs["addons"] = state ? state.addons : undefined;
            resourceInputs["apiAudiences"] = state ? state.apiAudiences : undefined;
            resourceInputs["certificateAuthority"] = state ? state.certificateAuthority : undefined;
            resourceInputs["clientCert"] = state ? state.clientCert : undefined;
            resourceInputs["clientKey"] = state ? state.clientKey : undefined;
            resourceInputs["clusterCaCert"] = state ? state.clusterCaCert : undefined;
            resourceInputs["clusterDomain"] = state ? state.clusterDomain : undefined;
            resourceInputs["clusterSpec"] = state ? state.clusterSpec : undefined;
            resourceInputs["connections"] = state ? state.connections : undefined;
            resourceInputs["controlPlaneLogComponents"] = state ? state.controlPlaneLogComponents : undefined;
            resourceInputs["controlPlaneLogProject"] = state ? state.controlPlaneLogProject : undefined;
            resourceInputs["controlPlaneLogTtl"] = state ? state.controlPlaneLogTtl : undefined;
            resourceInputs["customSan"] = state ? state.customSan : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["enableRrsa"] = state ? state.enableRrsa : undefined;
            resourceInputs["encryptionProviderKey"] = state ? state.encryptionProviderKey : undefined;
            resourceInputs["isEnterpriseSecurityGroup"] = state ? state.isEnterpriseSecurityGroup : undefined;
            resourceInputs["loadBalancerSpec"] = state ? state.loadBalancerSpec : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["natGatewayId"] = state ? state.natGatewayId : undefined;
            resourceInputs["newNatGateway"] = state ? state.newNatGateway : undefined;
            resourceInputs["nodeCidrMask"] = state ? state.nodeCidrMask : undefined;
            resourceInputs["podCidr"] = state ? state.podCidr : undefined;
            resourceInputs["podVswitchIds"] = state ? state.podVswitchIds : undefined;
            resourceInputs["proxyMode"] = state ? state.proxyMode : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["retainResources"] = state ? state.retainResources : undefined;
            resourceInputs["rrsaMetadata"] = state ? state.rrsaMetadata : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["serviceAccountIssuer"] = state ? state.serviceAccountIssuer : undefined;
            resourceInputs["serviceCidr"] = state ? state.serviceCidr : undefined;
            resourceInputs["slbId"] = state ? state.slbId : undefined;
            resourceInputs["slbInternet"] = state ? state.slbInternet : undefined;
            resourceInputs["slbInternetEnabled"] = state ? state.slbInternetEnabled : undefined;
            resourceInputs["slbIntranet"] = state ? state.slbIntranet : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["userCa"] = state ? state.userCa : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["workerRamRoleName"] = state ? state.workerRamRoleName : undefined;
            resourceInputs["workerVswitchIds"] = state ? state.workerVswitchIds : undefined;
        } else {
            const args = argsOrState as ManagedKubernetesArgs | undefined;
            if ((!args || args.workerVswitchIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workerVswitchIds'");
            }
            resourceInputs["addons"] = args ? args.addons : undefined;
            resourceInputs["apiAudiences"] = args ? args.apiAudiences : undefined;
            resourceInputs["clientCert"] = args ? args.clientCert : undefined;
            resourceInputs["clientKey"] = args ? args.clientKey : undefined;
            resourceInputs["clusterCaCert"] = args ? args.clusterCaCert : undefined;
            resourceInputs["clusterDomain"] = args ? args.clusterDomain : undefined;
            resourceInputs["clusterSpec"] = args ? args.clusterSpec : undefined;
            resourceInputs["controlPlaneLogComponents"] = args ? args.controlPlaneLogComponents : undefined;
            resourceInputs["controlPlaneLogProject"] = args ? args.controlPlaneLogProject : undefined;
            resourceInputs["controlPlaneLogTtl"] = args ? args.controlPlaneLogTtl : undefined;
            resourceInputs["customSan"] = args ? args.customSan : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["enableRrsa"] = args ? args.enableRrsa : undefined;
            resourceInputs["encryptionProviderKey"] = args ? args.encryptionProviderKey : undefined;
            resourceInputs["isEnterpriseSecurityGroup"] = args ? args.isEnterpriseSecurityGroup : undefined;
            resourceInputs["loadBalancerSpec"] = args ? args.loadBalancerSpec : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["newNatGateway"] = args ? args.newNatGateway : undefined;
            resourceInputs["nodeCidrMask"] = args ? args.nodeCidrMask : undefined;
            resourceInputs["podCidr"] = args ? args.podCidr : undefined;
            resourceInputs["podVswitchIds"] = args ? args.podVswitchIds : undefined;
            resourceInputs["proxyMode"] = args ? args.proxyMode : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["retainResources"] = args ? args.retainResources : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["serviceAccountIssuer"] = args ? args.serviceAccountIssuer : undefined;
            resourceInputs["serviceCidr"] = args ? args.serviceCidr : undefined;
            resourceInputs["slbInternetEnabled"] = args ? args.slbInternetEnabled : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["userCa"] = args ? args.userCa : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["workerVswitchIds"] = args ? args.workerVswitchIds : undefined;
            resourceInputs["certificateAuthority"] = undefined /*out*/;
            resourceInputs["connections"] = undefined /*out*/;
            resourceInputs["natGatewayId"] = undefined /*out*/;
            resourceInputs["rrsaMetadata"] = undefined /*out*/;
            resourceInputs["slbId"] = undefined /*out*/;
            resourceInputs["slbInternet"] = undefined /*out*/;
            resourceInputs["slbIntranet"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
            resourceInputs["workerRamRoleName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedKubernetes.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedKubernetes resources.
 */
export interface ManagedKubernetesState {
    addons?: pulumi.Input<pulumi.Input<inputs.cs.ManagedKubernetesAddon>[]>;
    apiAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Available in 1.105.0+) Nested attribute containing certificate authority data for your cluster.
     */
    certificateAuthority?: pulumi.Input<inputs.cs.ManagedKubernetesCertificateAuthority>;
    /**
     * The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
     */
    clientCert?: pulumi.Input<string>;
    /**
     * The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
     */
    clientKey?: pulumi.Input<string>;
    clusterCaCert?: pulumi.Input<string>;
    /**
     * cluster local domain
     */
    clusterDomain?: pulumi.Input<string>;
    clusterSpec?: pulumi.Input<string>;
    /**
     * Map of kubernetes cluster connection information.
     */
    connections?: pulumi.Input<inputs.cs.ManagedKubernetesConnections>;
    controlPlaneLogComponents?: pulumi.Input<pulumi.Input<string>[]>;
    controlPlaneLogProject?: pulumi.Input<string>;
    controlPlaneLogTtl?: pulumi.Input<string>;
    customSan?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    enableRrsa?: pulumi.Input<boolean>;
    /**
     * disk encryption key, only in ack-pro
     */
    encryptionProviderKey?: pulumi.Input<string>;
    isEnterpriseSecurityGroup?: pulumi.Input<boolean>;
    loadBalancerSpec?: pulumi.Input<string>;
    maintenanceWindow?: pulumi.Input<inputs.cs.ManagedKubernetesMaintenanceWindow>;
    /**
     * Node name.
     */
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    /**
     * The ID of nat gateway used to launch kubernetes cluster.
     */
    natGatewayId?: pulumi.Input<string>;
    newNatGateway?: pulumi.Input<boolean>;
    nodeCidrMask?: pulumi.Input<number>;
    podCidr?: pulumi.Input<string>;
    podVswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
    proxyMode?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    retainResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional, Available in v1.185.0+) Nested attribute containing RRSA related data for your cluster.
     */
    rrsaMetadata?: pulumi.Input<inputs.cs.ManagedKubernetesRrsaMetadata>;
    securityGroupId?: pulumi.Input<string>;
    serviceAccountIssuer?: pulumi.Input<string>;
    serviceCidr?: pulumi.Input<string>;
    /**
     * (Deprecated) The ID of load balancer.
     *
     * @deprecated Field 'slb_id' has been deprecated from provider version 1.9.2. New field 'slb_internet' replaces it.
     */
    slbId?: pulumi.Input<string>;
    /**
     * The public ip of load balancer.
     */
    slbInternet?: pulumi.Input<string>;
    slbInternetEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of private load balancer where the current cluster master node is located.
     */
    slbIntranet?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: any}>;
    timezone?: pulumi.Input<string>;
    userCa?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    /**
     * The ID of VPC where the current cluster is located.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The RamRole Name attached to worker node.
     */
    workerRamRoleName?: pulumi.Input<string>;
    workerVswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ManagedKubernetes resource.
 */
export interface ManagedKubernetesArgs {
    addons?: pulumi.Input<pulumi.Input<inputs.cs.ManagedKubernetesAddon>[]>;
    apiAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
     */
    clientCert?: pulumi.Input<string>;
    /**
     * The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
     */
    clientKey?: pulumi.Input<string>;
    clusterCaCert?: pulumi.Input<string>;
    /**
     * cluster local domain
     */
    clusterDomain?: pulumi.Input<string>;
    clusterSpec?: pulumi.Input<string>;
    controlPlaneLogComponents?: pulumi.Input<pulumi.Input<string>[]>;
    controlPlaneLogProject?: pulumi.Input<string>;
    controlPlaneLogTtl?: pulumi.Input<string>;
    customSan?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    enableRrsa?: pulumi.Input<boolean>;
    /**
     * disk encryption key, only in ack-pro
     */
    encryptionProviderKey?: pulumi.Input<string>;
    isEnterpriseSecurityGroup?: pulumi.Input<boolean>;
    loadBalancerSpec?: pulumi.Input<string>;
    maintenanceWindow?: pulumi.Input<inputs.cs.ManagedKubernetesMaintenanceWindow>;
    /**
     * Node name.
     */
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    newNatGateway?: pulumi.Input<boolean>;
    nodeCidrMask?: pulumi.Input<number>;
    podCidr?: pulumi.Input<string>;
    podVswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
    proxyMode?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    retainResources?: pulumi.Input<pulumi.Input<string>[]>;
    securityGroupId?: pulumi.Input<string>;
    serviceAccountIssuer?: pulumi.Input<string>;
    serviceCidr?: pulumi.Input<string>;
    slbInternetEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: any}>;
    timezone?: pulumi.Input<string>;
    userCa?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    workerVswitchIds: pulumi.Input<pulumi.Input<string>[]>;
}
