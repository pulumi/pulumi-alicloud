// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * > **DEPRECATED:** This resource manages swarm cluster, which is being deprecated and will be replaced by Kubernetes cluster.
 *
 * This resource will help you to manager a Swarm Cluster.
 *
 * > **NOTE:** Swarm cluster only supports VPC network and you can specify a VPC network by filed `vswitchId`.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const myCluster = new alicloud.cs.Swarm("myCluster", {
 *     password: "Yourpassword1234",
 *     instanceType: "ecs.n4.small",
 *     nodeNumber: 2,
 *     diskCategory: "cloud_efficiency",
 *     diskSize: 20,
 *     cidrBlock: "172.18.0.0/24",
 *     imageId: _var.image_id,
 *     vswitchId: _var.vswitch_id,
 * });
 * ```
 *
 * ## Import
 *
 * Swarm cluster can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cs/swarm:Swarm foo cf123456789
 * ```
 */
export class Swarm extends pulumi.CustomResource {
    /**
     * Get an existing Swarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwarmState, opts?: pulumi.CustomResourceOptions): Swarm {
        return new Swarm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cs/swarm:Swarm';

    /**
     * Returns true if the given object is an instance of Swarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Swarm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Swarm.__pulumiType;
    }

    /**
     * The nodes agent version.
     */
    public /*out*/ readonly agentVersion!: pulumi.Output<string>;
    /**
     * The CIDR block for the Container. It can not be same as the CIDR used by the VPC.
     * Valid value:
     * - 192.168.0.0/16
     * - 172.19-30.0.0/16
     * - 10.0.0.0/16
     */
    public readonly cidrBlock!: pulumi.Output<string>;
    /**
     * The data disk category of ECS instance node. Its valid value are `cloud`, `cloudSsd`, `cloudEssd`, `ephemeralEssd` and `cloudEfficiency`. Default to `cloudEfficiency`.
     */
    public readonly diskCategory!: pulumi.Output<string | undefined>;
    /**
     * The data disk size of ECS instance node. Its valid value is 20~32768 GB. Default to 20.
     */
    public readonly diskSize!: pulumi.Output<number | undefined>;
    /**
     * The image ID of ECS instance node used. Default to System automate allocated.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * The type of ECS instance node.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Whether to use outdated instance type. Default to false.
     */
    public readonly isOutdated!: pulumi.Output<boolean | undefined>;
    /**
     * The container cluster's name. It is the only in one Alicloud account.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string | undefined>;
    /**
     * Whether to create the default simple routing Server Load Balancer instance for the cluster. The default value is true.
     */
    public readonly needSlb!: pulumi.Output<boolean | undefined>;
    /**
     * The ECS node number of the container cluster. Its value choices are 1~50, and default to 1.
     */
    public readonly nodeNumber!: pulumi.Output<number | undefined>;
    /**
     * List of cluster nodes. It contains several attributes to `Block Nodes`.
     */
    public /*out*/ readonly nodes!: pulumi.Output<outputs.cs.SwarmNode[]>;
    /**
     * The password of ECS instance node.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Whether to release EIP after creating swarm cluster successfully. Default to false.
     */
    public readonly releaseEip!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of security group where the current cluster worker node is located.
     */
    public /*out*/ readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
     *
     * @deprecated Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
     */
    public readonly size!: pulumi.Output<number | undefined>;
    /**
     * The ID of load balancer where the current cluster worker node is located.
     */
    public /*out*/ readonly slbId!: pulumi.Output<string>;
    /**
     * The ID of VPC where the current cluster is located.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    /**
     * The password of ECS instance node. If it is not specified, the container cluster's network mode will be `Classic`.
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a Swarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwarmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwarmArgs | SwarmState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as SwarmState | undefined;
            inputs["agentVersion"] = state ? state.agentVersion : undefined;
            inputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            inputs["diskCategory"] = state ? state.diskCategory : undefined;
            inputs["diskSize"] = state ? state.diskSize : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["instanceType"] = state ? state.instanceType : undefined;
            inputs["isOutdated"] = state ? state.isOutdated : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["needSlb"] = state ? state.needSlb : undefined;
            inputs["nodeNumber"] = state ? state.nodeNumber : undefined;
            inputs["nodes"] = state ? state.nodes : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["releaseEip"] = state ? state.releaseEip : undefined;
            inputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            inputs["size"] = state ? state.size : undefined;
            inputs["slbId"] = state ? state.slbId : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
            inputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as SwarmArgs | undefined;
            if (!args || args.cidrBlock === undefined) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if (!args || args.instanceType === undefined) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (!args || args.password === undefined) {
                throw new Error("Missing required property 'password'");
            }
            if (!args || args.vswitchId === undefined) {
                throw new Error("Missing required property 'vswitchId'");
            }
            inputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            inputs["diskCategory"] = args ? args.diskCategory : undefined;
            inputs["diskSize"] = args ? args.diskSize : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["isOutdated"] = args ? args.isOutdated : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["needSlb"] = args ? args.needSlb : undefined;
            inputs["nodeNumber"] = args ? args.nodeNumber : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["releaseEip"] = args ? args.releaseEip : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["vswitchId"] = args ? args.vswitchId : undefined;
            inputs["agentVersion"] = undefined /*out*/;
            inputs["nodes"] = undefined /*out*/;
            inputs["securityGroupId"] = undefined /*out*/;
            inputs["slbId"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Swarm.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Swarm resources.
 */
export interface SwarmState {
    /**
     * The nodes agent version.
     */
    readonly agentVersion?: pulumi.Input<string>;
    /**
     * The CIDR block for the Container. It can not be same as the CIDR used by the VPC.
     * Valid value:
     * - 192.168.0.0/16
     * - 172.19-30.0.0/16
     * - 10.0.0.0/16
     */
    readonly cidrBlock?: pulumi.Input<string>;
    /**
     * The data disk category of ECS instance node. Its valid value are `cloud`, `cloudSsd`, `cloudEssd`, `ephemeralEssd` and `cloudEfficiency`. Default to `cloudEfficiency`.
     */
    readonly diskCategory?: pulumi.Input<string>;
    /**
     * The data disk size of ECS instance node. Its valid value is 20~32768 GB. Default to 20.
     */
    readonly diskSize?: pulumi.Input<number>;
    /**
     * The image ID of ECS instance node used. Default to System automate allocated.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * The type of ECS instance node.
     */
    readonly instanceType?: pulumi.Input<string>;
    /**
     * Whether to use outdated instance type. Default to false.
     */
    readonly isOutdated?: pulumi.Input<boolean>;
    /**
     * The container cluster's name. It is the only in one Alicloud account.
     */
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * Whether to create the default simple routing Server Load Balancer instance for the cluster. The default value is true.
     */
    readonly needSlb?: pulumi.Input<boolean>;
    /**
     * The ECS node number of the container cluster. Its value choices are 1~50, and default to 1.
     */
    readonly nodeNumber?: pulumi.Input<number>;
    /**
     * List of cluster nodes. It contains several attributes to `Block Nodes`.
     */
    readonly nodes?: pulumi.Input<pulumi.Input<inputs.cs.SwarmNode>[]>;
    /**
     * The password of ECS instance node.
     */
    readonly password?: pulumi.Input<string>;
    /**
     * Whether to release EIP after creating swarm cluster successfully. Default to false.
     */
    readonly releaseEip?: pulumi.Input<boolean>;
    /**
     * The ID of security group where the current cluster worker node is located.
     */
    readonly securityGroupId?: pulumi.Input<string>;
    /**
     * Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
     *
     * @deprecated Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
     */
    readonly size?: pulumi.Input<number>;
    /**
     * The ID of load balancer where the current cluster worker node is located.
     */
    readonly slbId?: pulumi.Input<string>;
    /**
     * The ID of VPC where the current cluster is located.
     */
    readonly vpcId?: pulumi.Input<string>;
    /**
     * The password of ECS instance node. If it is not specified, the container cluster's network mode will be `Classic`.
     */
    readonly vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Swarm resource.
 */
export interface SwarmArgs {
    /**
     * The CIDR block for the Container. It can not be same as the CIDR used by the VPC.
     * Valid value:
     * - 192.168.0.0/16
     * - 172.19-30.0.0/16
     * - 10.0.0.0/16
     */
    readonly cidrBlock: pulumi.Input<string>;
    /**
     * The data disk category of ECS instance node. Its valid value are `cloud`, `cloudSsd`, `cloudEssd`, `ephemeralEssd` and `cloudEfficiency`. Default to `cloudEfficiency`.
     */
    readonly diskCategory?: pulumi.Input<string>;
    /**
     * The data disk size of ECS instance node. Its valid value is 20~32768 GB. Default to 20.
     */
    readonly diskSize?: pulumi.Input<number>;
    /**
     * The image ID of ECS instance node used. Default to System automate allocated.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * The type of ECS instance node.
     */
    readonly instanceType: pulumi.Input<string>;
    /**
     * Whether to use outdated instance type. Default to false.
     */
    readonly isOutdated?: pulumi.Input<boolean>;
    /**
     * The container cluster's name. It is the only in one Alicloud account.
     */
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * Whether to create the default simple routing Server Load Balancer instance for the cluster. The default value is true.
     */
    readonly needSlb?: pulumi.Input<boolean>;
    /**
     * The ECS node number of the container cluster. Its value choices are 1~50, and default to 1.
     */
    readonly nodeNumber?: pulumi.Input<number>;
    /**
     * The password of ECS instance node.
     */
    readonly password: pulumi.Input<string>;
    /**
     * Whether to release EIP after creating swarm cluster successfully. Default to false.
     */
    readonly releaseEip?: pulumi.Input<boolean>;
    /**
     * Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
     *
     * @deprecated Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
     */
    readonly size?: pulumi.Input<number>;
    /**
     * The password of ECS instance node. If it is not specified, the container cluster's network mode will be `Classic`.
     */
    readonly vswitchId: pulumi.Input<string>;
}
