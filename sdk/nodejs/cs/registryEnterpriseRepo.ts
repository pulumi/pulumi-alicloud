// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Container Registry Enterprise Edition Repository resource.
 *
 * For information about Container Registry Enterprise Edition Repository and how to use it, see [What is Repository](https://www.alibabacloud.com/help/en/acr/developer-reference/api-cr-2018-12-01-createrepository)
 *
 * > **NOTE:** Available since v1.86.0.
 *
 * > **NOTE:** You need to set your registry password in Container Registry Enterprise Edition console before use this resource.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new random.index.Integer("default", {
 *     min: 10000000,
 *     max: 99999999,
 * });
 * const defaultRegistryEnterpriseInstance = new alicloud.cr.RegistryEnterpriseInstance("default", {
 *     paymentType: "Subscription",
 *     period: 1,
 *     renewPeriod: 0,
 *     renewalStatus: "ManualRenewal",
 *     instanceType: "Advanced",
 *     instanceName: `${name}-${_default.result}`,
 * });
 * const defaultRegistryEnterpriseNamespace = new alicloud.cs.RegistryEnterpriseNamespace("default", {
 *     instanceId: defaultRegistryEnterpriseInstance.id,
 *     name: `${name}-${_default.result}`,
 *     autoCreate: false,
 *     defaultVisibility: "PUBLIC",
 * });
 * const example = new alicloud.cs.RegistryEnterpriseRepo("example", {
 *     instanceId: defaultRegistryEnterpriseInstance.id,
 *     namespace: defaultRegistryEnterpriseNamespace.name,
 *     name: `${name}-${_default.result}`,
 *     repoType: "PUBLIC",
 *     summary: "this is summary of my new repo",
 *     detail: "this is a public repo",
 * });
 * ```
 *
 * ## Import
 *
 * Container Registry Enterprise Edition Repository can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cs/registryEnterpriseRepo:RegistryEnterpriseRepo example <instance_id>:<namespace>:<name>
 * ```
 */
export class RegistryEnterpriseRepo extends pulumi.CustomResource {
    /**
     * Get an existing RegistryEnterpriseRepo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegistryEnterpriseRepoState, opts?: pulumi.CustomResourceOptions): RegistryEnterpriseRepo {
        return new RegistryEnterpriseRepo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cs/registryEnterpriseRepo:RegistryEnterpriseRepo';

    /**
     * Returns true if the given object is an instance of RegistryEnterpriseRepo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegistryEnterpriseRepo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistryEnterpriseRepo.__pulumiType;
    }

    /**
     * The description of the repository.
     */
    declare public readonly detail: pulumi.Output<string | undefined>;
    /**
     * The ID of the Container Registry Enterprise Edition instance.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * The name of the image repository.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the namespace to which the image repository belongs.
     */
    declare public readonly namespace: pulumi.Output<string>;
    /**
     * The ID of the repository.
     */
    declare public /*out*/ readonly repoId: pulumi.Output<string>;
    /**
     * The type of the repository. Valid values:
     * - `PUBLIC`: The repository is a public repository.
     * - `PRIVATE`: The repository is a private repository.
     */
    declare public readonly repoType: pulumi.Output<string>;
    /**
     * The summary about the repository.
     */
    declare public readonly summary: pulumi.Output<string>;

    /**
     * Create a RegistryEnterpriseRepo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryEnterpriseRepoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegistryEnterpriseRepoArgs | RegistryEnterpriseRepoState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RegistryEnterpriseRepoState | undefined;
            resourceInputs["detail"] = state?.detail;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["name"] = state?.name;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["repoId"] = state?.repoId;
            resourceInputs["repoType"] = state?.repoType;
            resourceInputs["summary"] = state?.summary;
        } else {
            const args = argsOrState as RegistryEnterpriseRepoArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if (args?.repoType === undefined && !opts.urn) {
                throw new Error("Missing required property 'repoType'");
            }
            if (args?.summary === undefined && !opts.urn) {
                throw new Error("Missing required property 'summary'");
            }
            resourceInputs["detail"] = args?.detail;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["name"] = args?.name;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["repoType"] = args?.repoType;
            resourceInputs["summary"] = args?.summary;
            resourceInputs["repoId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RegistryEnterpriseRepo.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RegistryEnterpriseRepo resources.
 */
export interface RegistryEnterpriseRepoState {
    /**
     * The description of the repository.
     */
    detail?: pulumi.Input<string>;
    /**
     * The ID of the Container Registry Enterprise Edition instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The name of the image repository.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the namespace to which the image repository belongs.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The ID of the repository.
     */
    repoId?: pulumi.Input<string>;
    /**
     * The type of the repository. Valid values:
     * - `PUBLIC`: The repository is a public repository.
     * - `PRIVATE`: The repository is a private repository.
     */
    repoType?: pulumi.Input<string>;
    /**
     * The summary about the repository.
     */
    summary?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RegistryEnterpriseRepo resource.
 */
export interface RegistryEnterpriseRepoArgs {
    /**
     * The description of the repository.
     */
    detail?: pulumi.Input<string>;
    /**
     * The ID of the Container Registry Enterprise Edition instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The name of the image repository.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the namespace to which the image repository belongs.
     */
    namespace: pulumi.Input<string>;
    /**
     * The type of the repository. Valid values:
     * - `PUBLIC`: The repository is a public repository.
     * - `PRIVATE`: The repository is a private repository.
     */
    repoType: pulumi.Input<string>;
    /**
     * The summary about the repository.
     */
    summary: pulumi.Input<string>;
}
