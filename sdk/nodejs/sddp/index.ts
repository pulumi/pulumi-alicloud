// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConfigArgs, ConfigState } from "./config";
export type Config = import("./config").Config;
export const Config: typeof import("./config").Config = null as any;
utilities.lazyLoad(exports, ["Config"], () => require("./config"));

export { DataLimitArgs, DataLimitState } from "./dataLimit";
export type DataLimit = import("./dataLimit").DataLimit;
export const DataLimit: typeof import("./dataLimit").DataLimit = null as any;
utilities.lazyLoad(exports, ["DataLimit"], () => require("./dataLimit"));

export { GetConfigsArgs, GetConfigsResult, GetConfigsOutputArgs } from "./getConfigs";
export const getConfigs: typeof import("./getConfigs").getConfigs = null as any;
export const getConfigsOutput: typeof import("./getConfigs").getConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getConfigs","getConfigsOutput"], () => require("./getConfigs"));

export { GetDataLimitsArgs, GetDataLimitsResult, GetDataLimitsOutputArgs } from "./getDataLimits";
export const getDataLimits: typeof import("./getDataLimits").getDataLimits = null as any;
export const getDataLimitsOutput: typeof import("./getDataLimits").getDataLimitsOutput = null as any;
utilities.lazyLoad(exports, ["getDataLimits","getDataLimitsOutput"], () => require("./getDataLimits"));

export { GetInstancesArgs, GetInstancesResult, GetInstancesOutputArgs } from "./getInstances";
export const getInstances: typeof import("./getInstances").getInstances = null as any;
export const getInstancesOutput: typeof import("./getInstances").getInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getInstances","getInstancesOutput"], () => require("./getInstances"));

export { GetRulesArgs, GetRulesResult, GetRulesOutputArgs } from "./getRules";
export const getRules: typeof import("./getRules").getRules = null as any;
export const getRulesOutput: typeof import("./getRules").getRulesOutput = null as any;
utilities.lazyLoad(exports, ["getRules","getRulesOutput"], () => require("./getRules"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { RuleArgs, RuleState } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:sddp/config:Config":
                return new Config(name, <any>undefined, { urn })
            case "alicloud:sddp/dataLimit:DataLimit":
                return new DataLimit(name, <any>undefined, { urn })
            case "alicloud:sddp/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "alicloud:sddp/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "sddp/config", _module)
pulumi.runtime.registerResourceModule("alicloud", "sddp/dataLimit", _module)
pulumi.runtime.registerResourceModule("alicloud", "sddp/instance", _module)
pulumi.runtime.registerResourceModule("alicloud", "sddp/rule", _module)
