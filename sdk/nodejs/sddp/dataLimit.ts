// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Data Security Center Data Limit resource.
 *
 * For information about Data Security Center Data Limit and how to use it, see [What is Data Limit](https://www.alibabacloud.com/help/en/doc-detail/158987.html).
 *
 * > **NOTE:** Available since v1.159.0.
 *
 * ## Import
 *
 * Data Security Center Data Limit can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:sddp/dataLimit:DataLimit example <id>
 * ```
 */
export class DataLimit extends pulumi.CustomResource {
    /**
     * Get an existing DataLimit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataLimitState, opts?: pulumi.CustomResourceOptions): DataLimit {
        return new DataLimit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:sddp/dataLimit:DataLimit';

    /**
     * Returns true if the given object is an instance of DataLimit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataLimit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataLimit.__pulumiType;
    }

    /**
     * Whether to enable the log auditing feature. Valid values: `0`, `1`.
     */
    public readonly auditStatus!: pulumi.Output<number>;
    /**
     * The type of the database. Valid values: `MySQL`, `SQLServer`.
     */
    public readonly engineType!: pulumi.Output<string | undefined>;
    /**
     * The lang.
     */
    public readonly lang!: pulumi.Output<string | undefined>;
    /**
     * The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
     */
    public readonly logStoreDay!: pulumi.Output<number | undefined>;
    /**
     * The ID of the data asset.
     */
    public readonly parentId!: pulumi.Output<string | undefined>;
    /**
     * The password that is used to connect to the database.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The port that is used to connect to the database.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The type of the service to which the data asset belongs. Valid values: `MaxCompute`, `OSS`, `RDS`.
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * The region ID of the data asset.
     */
    public readonly serviceRegionId!: pulumi.Output<string | undefined>;
    /**
     * The name of the service to which the data asset belongs.
     */
    public readonly userName!: pulumi.Output<string | undefined>;

    /**
     * Create a DataLimit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataLimitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataLimitArgs | DataLimitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataLimitState | undefined;
            resourceInputs["auditStatus"] = state ? state.auditStatus : undefined;
            resourceInputs["engineType"] = state ? state.engineType : undefined;
            resourceInputs["lang"] = state ? state.lang : undefined;
            resourceInputs["logStoreDay"] = state ? state.logStoreDay : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["serviceRegionId"] = state ? state.serviceRegionId : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as DataLimitArgs | undefined;
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["auditStatus"] = args ? args.auditStatus : undefined;
            resourceInputs["engineType"] = args ? args.engineType : undefined;
            resourceInputs["lang"] = args ? args.lang : undefined;
            resourceInputs["logStoreDay"] = args ? args.logStoreDay : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["serviceRegionId"] = args ? args.serviceRegionId : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataLimit.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataLimit resources.
 */
export interface DataLimitState {
    /**
     * Whether to enable the log auditing feature. Valid values: `0`, `1`.
     */
    auditStatus?: pulumi.Input<number>;
    /**
     * The type of the database. Valid values: `MySQL`, `SQLServer`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The lang.
     */
    lang?: pulumi.Input<string>;
    /**
     * The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
     */
    logStoreDay?: pulumi.Input<number>;
    /**
     * The ID of the data asset.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The password that is used to connect to the database.
     */
    password?: pulumi.Input<string>;
    /**
     * The port that is used to connect to the database.
     */
    port?: pulumi.Input<number>;
    /**
     * The type of the service to which the data asset belongs. Valid values: `MaxCompute`, `OSS`, `RDS`.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The region ID of the data asset.
     */
    serviceRegionId?: pulumi.Input<string>;
    /**
     * The name of the service to which the data asset belongs.
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataLimit resource.
 */
export interface DataLimitArgs {
    /**
     * Whether to enable the log auditing feature. Valid values: `0`, `1`.
     */
    auditStatus?: pulumi.Input<number>;
    /**
     * The type of the database. Valid values: `MySQL`, `SQLServer`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The lang.
     */
    lang?: pulumi.Input<string>;
    /**
     * The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
     */
    logStoreDay?: pulumi.Input<number>;
    /**
     * The ID of the data asset.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The password that is used to connect to the database.
     */
    password?: pulumi.Input<string>;
    /**
     * The port that is used to connect to the database.
     */
    port?: pulumi.Input<number>;
    /**
     * The type of the service to which the data asset belongs. Valid values: `MaxCompute`, `OSS`, `RDS`.
     */
    resourceType: pulumi.Input<string>;
    /**
     * The region ID of the data asset.
     */
    serviceRegionId?: pulumi.Input<string>;
    /**
     * The name of the service to which the data asset belongs.
     */
    userName?: pulumi.Input<string>;
}
