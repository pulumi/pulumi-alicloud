// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Data Security Center Data Limit resource.
 *
 * For information about Data Security Center Data Limit and how to use it, see [What is Data Limit](https://www.alibabacloud.com/help/en/doc-detail/158987.html).
 *
 * > **NOTE:** Available since v1.159.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const _default = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultGetZones = alicloud.rds.getZones({
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     instanceChargeType: "PostPaid",
 *     category: "Basic",
 *     dbInstanceStorageType: "cloud_essd",
 * });
 * const defaultGetInstanceClasses = defaultGetZones.then(defaultGetZones => alicloud.rds.getInstanceClasses({
 *     zoneId: defaultGetZones.zones?.[0]?.id,
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     category: "Basic",
 *     dbInstanceStorageType: "cloud_essd",
 *     instanceChargeType: "PostPaid",
 * }));
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultGetZones.then(defaultGetZones => defaultGetZones.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultInstance = new alicloud.rds.Instance("default", {
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     instanceType: defaultGetInstanceClasses.then(defaultGetInstanceClasses => defaultGetInstanceClasses.instanceClasses?.[0]?.instanceClass),
 *     instanceStorage: defaultGetInstanceClasses.then(defaultGetInstanceClasses => defaultGetInstanceClasses.instanceClasses?.[0]?.storageRange?.min),
 *     instanceChargeType: "Postpaid",
 *     instanceName: name,
 *     vswitchId: defaultSwitch.id,
 *     monitoringPeriod: 60,
 *     dbInstanceStorageType: "cloud_essd",
 *     securityGroupIds: [defaultSecurityGroup.id],
 * });
 * const defaultRdsAccount = new alicloud.rds.RdsAccount("default", {
 *     dbInstanceId: defaultInstance.id,
 *     accountName: name,
 *     accountPassword: "Example1234",
 * });
 * const defaultDatabase = new alicloud.rds.Database("default", {
 *     instanceId: defaultInstance.id,
 *     name: name,
 * });
 * const defaultAccountPrivilege = new alicloud.rds.AccountPrivilege("default", {
 *     instanceId: defaultInstance.id,
 *     accountName: defaultRdsAccount.accountName,
 *     privilege: "ReadWrite",
 *     dbNames: [defaultDatabase.name],
 * });
 * const defaultDataLimit = new alicloud.sddp.DataLimit("default", {
 *     auditStatus: 0,
 *     engineType: "MySQL",
 *     parentId: std.joinOutput({
 *         separator: ".",
 *         input: [
 *             defaultAccountPrivilege.instanceId,
 *             defaultDatabase.name,
 *         ],
 *     }).apply(invoke => invoke.result),
 *     resourceType: "RDS",
 *     userName: defaultDatabase.name,
 *     password: defaultRdsAccount.accountPassword,
 *     port: 3306,
 *     serviceRegionId: _default.then(_default => _default.regions?.[0]?.id),
 * });
 * ```
 *
 * ## Import
 *
 * Data Security Center Data Limit can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:sddp/dataLimit:DataLimit example <id>
 * ```
 */
export class DataLimit extends pulumi.CustomResource {
    /**
     * Get an existing DataLimit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataLimitState, opts?: pulumi.CustomResourceOptions): DataLimit {
        return new DataLimit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:sddp/dataLimit:DataLimit';

    /**
     * Returns true if the given object is an instance of DataLimit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataLimit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataLimit.__pulumiType;
    }

    /**
     * Whether to enable the log auditing feature. Valid values: `0`, `1`.
     */
    declare public readonly auditStatus: pulumi.Output<number>;
    /**
     * The type of the database. Valid values: `MySQL`, `SQLServer`.
     */
    declare public readonly engineType: pulumi.Output<string | undefined>;
    /**
     * The lang.
     */
    declare public readonly lang: pulumi.Output<string | undefined>;
    /**
     * The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
     */
    declare public readonly logStoreDay: pulumi.Output<number | undefined>;
    /**
     * The ID of the data asset.
     */
    declare public readonly parentId: pulumi.Output<string | undefined>;
    /**
     * The password that is used to connect to the database.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * The port that is used to connect to the database.
     */
    declare public readonly port: pulumi.Output<number | undefined>;
    /**
     * The type of the service to which the data asset belongs. Valid values: `MaxCompute`, `OSS`, `RDS`.
     */
    declare public readonly resourceType: pulumi.Output<string>;
    /**
     * The region ID of the data asset.
     */
    declare public readonly serviceRegionId: pulumi.Output<string | undefined>;
    /**
     * The name of the service to which the data asset belongs.
     */
    declare public readonly userName: pulumi.Output<string | undefined>;

    /**
     * Create a DataLimit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataLimitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataLimitArgs | DataLimitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataLimitState | undefined;
            resourceInputs["auditStatus"] = state?.auditStatus;
            resourceInputs["engineType"] = state?.engineType;
            resourceInputs["lang"] = state?.lang;
            resourceInputs["logStoreDay"] = state?.logStoreDay;
            resourceInputs["parentId"] = state?.parentId;
            resourceInputs["password"] = state?.password;
            resourceInputs["port"] = state?.port;
            resourceInputs["resourceType"] = state?.resourceType;
            resourceInputs["serviceRegionId"] = state?.serviceRegionId;
            resourceInputs["userName"] = state?.userName;
        } else {
            const args = argsOrState as DataLimitArgs | undefined;
            if (args?.resourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["auditStatus"] = args?.auditStatus;
            resourceInputs["engineType"] = args?.engineType;
            resourceInputs["lang"] = args?.lang;
            resourceInputs["logStoreDay"] = args?.logStoreDay;
            resourceInputs["parentId"] = args?.parentId;
            resourceInputs["password"] = args?.password;
            resourceInputs["port"] = args?.port;
            resourceInputs["resourceType"] = args?.resourceType;
            resourceInputs["serviceRegionId"] = args?.serviceRegionId;
            resourceInputs["userName"] = args?.userName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataLimit.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataLimit resources.
 */
export interface DataLimitState {
    /**
     * Whether to enable the log auditing feature. Valid values: `0`, `1`.
     */
    auditStatus?: pulumi.Input<number>;
    /**
     * The type of the database. Valid values: `MySQL`, `SQLServer`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The lang.
     */
    lang?: pulumi.Input<string>;
    /**
     * The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
     */
    logStoreDay?: pulumi.Input<number>;
    /**
     * The ID of the data asset.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The password that is used to connect to the database.
     */
    password?: pulumi.Input<string>;
    /**
     * The port that is used to connect to the database.
     */
    port?: pulumi.Input<number>;
    /**
     * The type of the service to which the data asset belongs. Valid values: `MaxCompute`, `OSS`, `RDS`.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The region ID of the data asset.
     */
    serviceRegionId?: pulumi.Input<string>;
    /**
     * The name of the service to which the data asset belongs.
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataLimit resource.
 */
export interface DataLimitArgs {
    /**
     * Whether to enable the log auditing feature. Valid values: `0`, `1`.
     */
    auditStatus?: pulumi.Input<number>;
    /**
     * The type of the database. Valid values: `MySQL`, `SQLServer`.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The lang.
     */
    lang?: pulumi.Input<string>;
    /**
     * The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
     */
    logStoreDay?: pulumi.Input<number>;
    /**
     * The ID of the data asset.
     */
    parentId?: pulumi.Input<string>;
    /**
     * The password that is used to connect to the database.
     */
    password?: pulumi.Input<string>;
    /**
     * The port that is used to connect to the database.
     */
    port?: pulumi.Input<number>;
    /**
     * The type of the service to which the data asset belongs. Valid values: `MaxCompute`, `OSS`, `RDS`.
     */
    resourceType: pulumi.Input<string>;
    /**
     * The region ID of the data asset.
     */
    serviceRegionId?: pulumi.Input<string>;
    /**
     * The name of the service to which the data asset belongs.
     */
    userName?: pulumi.Input<string>;
}
