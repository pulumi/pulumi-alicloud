// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * DNS instance be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:dns/instance:Instance example dns-cn-v0h1ldjhfff
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dns/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * DNS security level. Valid values: `no`, `basic`, `advanced`.
     */
    public readonly dnsSecurity!: pulumi.Output<string>;
    /**
     * Number of domain names bound.
     */
    public readonly domainNumbers!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string | undefined>;
    /**
     * Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Automatic renewal period, the unit is month. When setting RenewalStatus to AutoRenewal, it must be set.
     */
    public readonly renewPeriod!: pulumi.Output<number | undefined>;
    /**
     * Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`, default to `ManualRenewal`.
     */
    public readonly renewalStatus!: pulumi.Output<string | undefined>;
    /**
     * Paid package version. Valid values: `versionPersonal`, `versionEnterpriseBasic`, `versionEnterpriseAdvanced`.
     */
    public readonly versionCode!: pulumi.Output<string>;
    /**
     * Paid package version name.
     */
    public /*out*/ readonly versionName!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as InstanceState | undefined;
            inputs["dnsSecurity"] = state ? state.dnsSecurity : undefined;
            inputs["domainNumbers"] = state ? state.domainNumbers : undefined;
            inputs["paymentType"] = state ? state.paymentType : undefined;
            inputs["period"] = state ? state.period : undefined;
            inputs["renewPeriod"] = state ? state.renewPeriod : undefined;
            inputs["renewalStatus"] = state ? state.renewalStatus : undefined;
            inputs["versionCode"] = state ? state.versionCode : undefined;
            inputs["versionName"] = state ? state.versionName : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (!args || args.dnsSecurity === undefined) {
                throw new Error("Missing required property 'dnsSecurity'");
            }
            if (!args || args.domainNumbers === undefined) {
                throw new Error("Missing required property 'domainNumbers'");
            }
            if (!args || args.versionCode === undefined) {
                throw new Error("Missing required property 'versionCode'");
            }
            inputs["dnsSecurity"] = args ? args.dnsSecurity : undefined;
            inputs["domainNumbers"] = args ? args.domainNumbers : undefined;
            inputs["paymentType"] = args ? args.paymentType : undefined;
            inputs["period"] = args ? args.period : undefined;
            inputs["renewPeriod"] = args ? args.renewPeriod : undefined;
            inputs["renewalStatus"] = args ? args.renewalStatus : undefined;
            inputs["versionCode"] = args ? args.versionCode : undefined;
            inputs["versionName"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Instance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * DNS security level. Valid values: `no`, `basic`, `advanced`.
     */
    readonly dnsSecurity?: pulumi.Input<string>;
    /**
     * Number of domain names bound.
     */
    readonly domainNumbers?: pulumi.Input<string>;
    readonly paymentType?: pulumi.Input<string>;
    /**
     * Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
     */
    readonly period?: pulumi.Input<number>;
    /**
     * Automatic renewal period, the unit is month. When setting RenewalStatus to AutoRenewal, it must be set.
     */
    readonly renewPeriod?: pulumi.Input<number>;
    /**
     * Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`, default to `ManualRenewal`.
     */
    readonly renewalStatus?: pulumi.Input<string>;
    /**
     * Paid package version. Valid values: `versionPersonal`, `versionEnterpriseBasic`, `versionEnterpriseAdvanced`.
     */
    readonly versionCode?: pulumi.Input<string>;
    /**
     * Paid package version name.
     */
    readonly versionName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * DNS security level. Valid values: `no`, `basic`, `advanced`.
     */
    readonly dnsSecurity: pulumi.Input<string>;
    /**
     * Number of domain names bound.
     */
    readonly domainNumbers: pulumi.Input<string>;
    readonly paymentType?: pulumi.Input<string>;
    /**
     * Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
     */
    readonly period?: pulumi.Input<number>;
    /**
     * Automatic renewal period, the unit is month. When setting RenewalStatus to AutoRenewal, it must be set.
     */
    readonly renewPeriod?: pulumi.Input<number>;
    /**
     * Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`, default to `ManualRenewal`.
     */
    readonly renewalStatus?: pulumi.Input<string>;
    /**
     * Paid package version. Valid values: `versionPersonal`, `versionEnterpriseBasic`, `versionEnterpriseAdvanced`.
     */
    readonly versionCode: pulumi.Input<string>;
}
