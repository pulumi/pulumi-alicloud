// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides bind the domain name to the Alidns instance resource.
 *
 * > **NOTE:** Available since v1.99.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.dns.DomainGroup("default", {domainGroupName: "tf-example"});
 * const defaultAlidnsDomain = new alicloud.dns.AlidnsDomain("default", {
 *     domainName: "starmove.com",
 *     groupId: _default.id,
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 * });
 * const defaultAlidnsInstance = new alicloud.dns.AlidnsInstance("default", {
 *     dnsSecurity: "basic",
 *     domainNumbers: "3",
 *     versionCode: "version_personal",
 *     period: 1,
 *     renewalStatus: "ManualRenewal",
 * });
 * const defaultAlidnsDomainAttachment = new alicloud.dns.AlidnsDomainAttachment("default", {
 *     instanceId: defaultAlidnsInstance.id,
 *     domainNames: [defaultAlidnsDomain.domainName],
 * });
 * ```
 *
 * ## Import
 *
 * DNS domain attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dns/alidnsDomainAttachment:AlidnsDomainAttachment example dns-cn-v0h1ldjhxxx
 * ```
 */
export class AlidnsDomainAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AlidnsDomainAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlidnsDomainAttachmentState, opts?: pulumi.CustomResourceOptions): AlidnsDomainAttachment {
        return new AlidnsDomainAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dns/alidnsDomainAttachment:AlidnsDomainAttachment';

    /**
     * Returns true if the given object is an instance of AlidnsDomainAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlidnsDomainAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlidnsDomainAttachment.__pulumiType;
    }

    /**
     * The domain names bound to the DNS instance.
     */
    declare public readonly domainNames: pulumi.Output<string[]>;
    /**
     * The id of the DNS instance.
     */
    declare public readonly instanceId: pulumi.Output<string>;

    /**
     * Create a AlidnsDomainAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlidnsDomainAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlidnsDomainAttachmentArgs | AlidnsDomainAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlidnsDomainAttachmentState | undefined;
            resourceInputs["domainNames"] = state?.domainNames;
            resourceInputs["instanceId"] = state?.instanceId;
        } else {
            const args = argsOrState as AlidnsDomainAttachmentArgs | undefined;
            if (args?.domainNames === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainNames'");
            }
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["domainNames"] = args?.domainNames;
            resourceInputs["instanceId"] = args?.instanceId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlidnsDomainAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlidnsDomainAttachment resources.
 */
export interface AlidnsDomainAttachmentState {
    /**
     * The domain names bound to the DNS instance.
     */
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the DNS instance.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlidnsDomainAttachment resource.
 */
export interface AlidnsDomainAttachmentArgs {
    /**
     * The domain names bound to the DNS instance.
     */
    domainNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the DNS instance.
     */
    instanceId: pulumi.Input<string>;
}
