// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a SelectDB DBInstance resource.
 *
 * For information about SelectDB DBInstance and how to use it, see [What is DBInstance](https://www.alibabacloud.com/help/zh/selectdb/latest/api-selectdb-2023-05-22-createdbinstance).
 *
 * > **NOTE:** Available since v1.229.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.zones?.[0]?.id,
 * }));
 * const defaultDbInstance = new alicloud.selectdb.DbInstance("default", {
 *     dbInstanceClass: "selectdb.xlarge",
 *     dbInstanceDescription: name,
 *     cacheSize: 200,
 *     paymentType: "PayAsYouGo",
 *     engineMinorVersion: "3.0.12",
 *     vpcId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.vpcId),
 *     zoneId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.zoneId),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.id),
 * });
 * ```
 *
 * ## Import
 *
 * SelectDB DBInstance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:selectdb/dbInstance:DbInstance example <id>
 * ```
 */
export class DbInstance extends pulumi.CustomResource {
    /**
     * Get an existing DbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbInstanceState, opts?: pulumi.CustomResourceOptions): DbInstance {
        return new DbInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:selectdb/dbInstance:DbInstance';

    /**
     * Returns true if the given object is an instance of DbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbInstance.__pulumiType;
    }

    /**
     * The password for DBInstance using admin account.
     */
    public readonly adminPass!: pulumi.Output<string | undefined>;
    /**
     * The cache size in DBInstance on creating default cluster. The number should be divided by 100.
     */
    public readonly cacheSize!: pulumi.Output<number>;
    /**
     * The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
     */
    public /*out*/ readonly cacheSizePostpaid!: pulumi.Output<number>;
    /**
     * The sum of cache size for every `Subscription` clusters in DBInstance.
     */
    public /*out*/ readonly cacheSizePrepaid!: pulumi.Output<number>;
    /**
     * The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
     */
    public /*out*/ readonly clusterCountPostpaid!: pulumi.Output<number>;
    /**
     * The sum of cluster counts for `Subscription` clusters in DBInstance.
     */
    public /*out*/ readonly clusterCountPrepaid!: pulumi.Output<number>;
    /**
     * The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
     */
    public /*out*/ readonly cpuPostpaid!: pulumi.Output<number>;
    /**
     * The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
     */
    public /*out*/ readonly cpuPrepaid!: pulumi.Output<number>;
    /**
     * The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
     */
    public readonly dbInstanceClass!: pulumi.Output<string>;
    /**
     * The DBInstance description.
     */
    public readonly dbInstanceDescription!: pulumi.Output<string>;
    /**
     * The modified IP address whitelists. See `desiredSecurityIpLists` below.
     */
    public readonly desiredSecurityIpLists!: pulumi.Output<outputs.selectdb.DbInstanceDesiredSecurityIpList[] | undefined>;
    /**
     * If DBInstance need to open public network, set it to `true`.
     */
    public readonly enablePublicNetwork!: pulumi.Output<boolean | undefined>;
    /**
     * The engine of DBInstance. Always `selectdb`.
     */
    public /*out*/ readonly engine!: pulumi.Output<string>;
    /**
     * The DBInstance minor version. Valid values: `3.0.12`,`4.0.4`.
     */
    public readonly engineMinorVersion!: pulumi.Output<string>;
    /**
     * The time when DBInstance is created.
     */
    public /*out*/ readonly gmtCreated!: pulumi.Output<string>;
    /**
     * The time when DBInstance will be expired. Available on `Subscription` DBInstance.
     */
    public /*out*/ readonly gmtExpired!: pulumi.Output<string>;
    /**
     * The time when DBInstance is modified.
     */
    public /*out*/ readonly gmtModified!: pulumi.Output<string>;
    /**
     * The net infos for instances.
     */
    public /*out*/ readonly instanceNetInfos!: pulumi.Output<outputs.selectdb.DbInstanceInstanceNetInfo[]>;
    /**
     * The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
     */
    public /*out*/ readonly lockMode!: pulumi.Output<string>;
    /**
     * The reason why the instance is locked.
     */
    public /*out*/ readonly lockReason!: pulumi.Output<string>;
    /**
     * The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
     */
    public /*out*/ readonly memoryPostpaid!: pulumi.Output<number>;
    /**
     * The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
     */
    public /*out*/ readonly memoryPrepaid!: pulumi.Output<number>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
     */
    public readonly period!: pulumi.Output<string | undefined>;
    /**
     * The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
     */
    public readonly periodTime!: pulumi.Output<number | undefined>;
    /**
     * The region ID of the instance.
     */
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    /**
     * The details about each IP address whitelist returned.
     */
    public /*out*/ readonly securityIpLists!: pulumi.Output<outputs.selectdb.DbInstanceSecurityIpList[]>;
    /**
     * The status of the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The sub domain of DBInstance.
     */
    public /*out*/ readonly subDomain!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Field `upgradedEngineMinorVersion` has been deprecated from provider version 1.248.0. New field `engineMinorVersion` instead.
     *
     * @deprecated Field `upgradedEngineMinorVersion` has been deprecated from provider version 1.248.0. New field `engineMinorVersion` instead.
     */
    public readonly upgradedEngineMinorVersion!: pulumi.Output<string>;
    /**
     * The ID of the VPC for DBInstance.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The ID of vswitch for DBInstance.
     */
    public readonly vswitchId!: pulumi.Output<string>;
    /**
     * The ID of zone for DBInstance.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a DbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbInstanceArgs | DbInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbInstanceState | undefined;
            resourceInputs["adminPass"] = state ? state.adminPass : undefined;
            resourceInputs["cacheSize"] = state ? state.cacheSize : undefined;
            resourceInputs["cacheSizePostpaid"] = state ? state.cacheSizePostpaid : undefined;
            resourceInputs["cacheSizePrepaid"] = state ? state.cacheSizePrepaid : undefined;
            resourceInputs["clusterCountPostpaid"] = state ? state.clusterCountPostpaid : undefined;
            resourceInputs["clusterCountPrepaid"] = state ? state.clusterCountPrepaid : undefined;
            resourceInputs["cpuPostpaid"] = state ? state.cpuPostpaid : undefined;
            resourceInputs["cpuPrepaid"] = state ? state.cpuPrepaid : undefined;
            resourceInputs["dbInstanceClass"] = state ? state.dbInstanceClass : undefined;
            resourceInputs["dbInstanceDescription"] = state ? state.dbInstanceDescription : undefined;
            resourceInputs["desiredSecurityIpLists"] = state ? state.desiredSecurityIpLists : undefined;
            resourceInputs["enablePublicNetwork"] = state ? state.enablePublicNetwork : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineMinorVersion"] = state ? state.engineMinorVersion : undefined;
            resourceInputs["gmtCreated"] = state ? state.gmtCreated : undefined;
            resourceInputs["gmtExpired"] = state ? state.gmtExpired : undefined;
            resourceInputs["gmtModified"] = state ? state.gmtModified : undefined;
            resourceInputs["instanceNetInfos"] = state ? state.instanceNetInfos : undefined;
            resourceInputs["lockMode"] = state ? state.lockMode : undefined;
            resourceInputs["lockReason"] = state ? state.lockReason : undefined;
            resourceInputs["memoryPostpaid"] = state ? state.memoryPostpaid : undefined;
            resourceInputs["memoryPrepaid"] = state ? state.memoryPrepaid : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodTime"] = state ? state.periodTime : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["securityIpLists"] = state ? state.securityIpLists : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subDomain"] = state ? state.subDomain : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["upgradedEngineMinorVersion"] = state ? state.upgradedEngineMinorVersion : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as DbInstanceArgs | undefined;
            if ((!args || args.cacheSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cacheSize'");
            }
            if ((!args || args.dbInstanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceClass'");
            }
            if ((!args || args.dbInstanceDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceDescription'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["adminPass"] = args?.adminPass ? pulumi.secret(args.adminPass) : undefined;
            resourceInputs["cacheSize"] = args ? args.cacheSize : undefined;
            resourceInputs["dbInstanceClass"] = args ? args.dbInstanceClass : undefined;
            resourceInputs["dbInstanceDescription"] = args ? args.dbInstanceDescription : undefined;
            resourceInputs["desiredSecurityIpLists"] = args ? args.desiredSecurityIpLists : undefined;
            resourceInputs["enablePublicNetwork"] = args ? args.enablePublicNetwork : undefined;
            resourceInputs["engineMinorVersion"] = args ? args.engineMinorVersion : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodTime"] = args ? args.periodTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["upgradedEngineMinorVersion"] = args ? args.upgradedEngineMinorVersion : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["cacheSizePostpaid"] = undefined /*out*/;
            resourceInputs["cacheSizePrepaid"] = undefined /*out*/;
            resourceInputs["clusterCountPostpaid"] = undefined /*out*/;
            resourceInputs["clusterCountPrepaid"] = undefined /*out*/;
            resourceInputs["cpuPostpaid"] = undefined /*out*/;
            resourceInputs["cpuPrepaid"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["gmtCreated"] = undefined /*out*/;
            resourceInputs["gmtExpired"] = undefined /*out*/;
            resourceInputs["gmtModified"] = undefined /*out*/;
            resourceInputs["instanceNetInfos"] = undefined /*out*/;
            resourceInputs["lockMode"] = undefined /*out*/;
            resourceInputs["lockReason"] = undefined /*out*/;
            resourceInputs["memoryPostpaid"] = undefined /*out*/;
            resourceInputs["memoryPrepaid"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["securityIpLists"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subDomain"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["adminPass"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DbInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DbInstance resources.
 */
export interface DbInstanceState {
    /**
     * The password for DBInstance using admin account.
     */
    adminPass?: pulumi.Input<string>;
    /**
     * The cache size in DBInstance on creating default cluster. The number should be divided by 100.
     */
    cacheSize?: pulumi.Input<number>;
    /**
     * The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
     */
    cacheSizePostpaid?: pulumi.Input<number>;
    /**
     * The sum of cache size for every `Subscription` clusters in DBInstance.
     */
    cacheSizePrepaid?: pulumi.Input<number>;
    /**
     * The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
     */
    clusterCountPostpaid?: pulumi.Input<number>;
    /**
     * The sum of cluster counts for `Subscription` clusters in DBInstance.
     */
    clusterCountPrepaid?: pulumi.Input<number>;
    /**
     * The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
     */
    cpuPostpaid?: pulumi.Input<number>;
    /**
     * The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
     */
    cpuPrepaid?: pulumi.Input<number>;
    /**
     * The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
     */
    dbInstanceClass?: pulumi.Input<string>;
    /**
     * The DBInstance description.
     */
    dbInstanceDescription?: pulumi.Input<string>;
    /**
     * The modified IP address whitelists. See `desiredSecurityIpLists` below.
     */
    desiredSecurityIpLists?: pulumi.Input<pulumi.Input<inputs.selectdb.DbInstanceDesiredSecurityIpList>[]>;
    /**
     * If DBInstance need to open public network, set it to `true`.
     */
    enablePublicNetwork?: pulumi.Input<boolean>;
    /**
     * The engine of DBInstance. Always `selectdb`.
     */
    engine?: pulumi.Input<string>;
    /**
     * The DBInstance minor version. Valid values: `3.0.12`,`4.0.4`.
     */
    engineMinorVersion?: pulumi.Input<string>;
    /**
     * The time when DBInstance is created.
     */
    gmtCreated?: pulumi.Input<string>;
    /**
     * The time when DBInstance will be expired. Available on `Subscription` DBInstance.
     */
    gmtExpired?: pulumi.Input<string>;
    /**
     * The time when DBInstance is modified.
     */
    gmtModified?: pulumi.Input<string>;
    /**
     * The net infos for instances.
     */
    instanceNetInfos?: pulumi.Input<pulumi.Input<inputs.selectdb.DbInstanceInstanceNetInfo>[]>;
    /**
     * The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
     */
    lockMode?: pulumi.Input<string>;
    /**
     * The reason why the instance is locked.
     */
    lockReason?: pulumi.Input<string>;
    /**
     * The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
     */
    memoryPostpaid?: pulumi.Input<number>;
    /**
     * The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
     */
    memoryPrepaid?: pulumi.Input<number>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
     */
    period?: pulumi.Input<string>;
    /**
     * The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
     */
    periodTime?: pulumi.Input<number>;
    /**
     * The region ID of the instance.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The details about each IP address whitelist returned.
     */
    securityIpLists?: pulumi.Input<pulumi.Input<inputs.selectdb.DbInstanceSecurityIpList>[]>;
    /**
     * The status of the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
     */
    status?: pulumi.Input<string>;
    /**
     * The sub domain of DBInstance.
     */
    subDomain?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Field `upgradedEngineMinorVersion` has been deprecated from provider version 1.248.0. New field `engineMinorVersion` instead.
     *
     * @deprecated Field `upgradedEngineMinorVersion` has been deprecated from provider version 1.248.0. New field `engineMinorVersion` instead.
     */
    upgradedEngineMinorVersion?: pulumi.Input<string>;
    /**
     * The ID of the VPC for DBInstance.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of vswitch for DBInstance.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The ID of zone for DBInstance.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DbInstance resource.
 */
export interface DbInstanceArgs {
    /**
     * The password for DBInstance using admin account.
     */
    adminPass?: pulumi.Input<string>;
    /**
     * The cache size in DBInstance on creating default cluster. The number should be divided by 100.
     */
    cacheSize: pulumi.Input<number>;
    /**
     * The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
     */
    dbInstanceClass: pulumi.Input<string>;
    /**
     * The DBInstance description.
     */
    dbInstanceDescription: pulumi.Input<string>;
    /**
     * The modified IP address whitelists. See `desiredSecurityIpLists` below.
     */
    desiredSecurityIpLists?: pulumi.Input<pulumi.Input<inputs.selectdb.DbInstanceDesiredSecurityIpList>[]>;
    /**
     * If DBInstance need to open public network, set it to `true`.
     */
    enablePublicNetwork?: pulumi.Input<boolean>;
    /**
     * The DBInstance minor version. Valid values: `3.0.12`,`4.0.4`.
     */
    engineMinorVersion?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
     */
    paymentType: pulumi.Input<string>;
    /**
     * It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
     */
    period?: pulumi.Input<string>;
    /**
     * The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
     */
    periodTime?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Field `upgradedEngineMinorVersion` has been deprecated from provider version 1.248.0. New field `engineMinorVersion` instead.
     *
     * @deprecated Field `upgradedEngineMinorVersion` has been deprecated from provider version 1.248.0. New field `engineMinorVersion` instead.
     */
    upgradedEngineMinorVersion?: pulumi.Input<string>;
    /**
     * The ID of the VPC for DBInstance.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The ID of vswitch for DBInstance.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The ID of zone for DBInstance.
     */
    zoneId: pulumi.Input<string>;
}
