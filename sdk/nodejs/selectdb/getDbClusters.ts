// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the SelectDB DBCluster of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.229.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.zones?.[0]?.id,
 * }));
 * const defaultDbInstance = new alicloud.selectdb.DbInstance("default", {
 *     dbInstanceClass: "selectdb.xlarge",
 *     dbInstanceDescription: name,
 *     cacheSize: 200,
 *     paymentType: "PayAsYouGo",
 *     engineMinorVersion: "3.0.12",
 *     vpcId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.vpcId),
 *     zoneId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.zoneId),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.id),
 * });
 * const defaultDbCluster = new alicloud.selectdb.DbCluster("default", {
 *     dbInstanceId: defaultDbInstance.id,
 *     dbClusterDescription: name,
 *     dbClusterClass: "selectdb.2xlarge",
 *     cacheSize: 400,
 *     paymentType: "PayAsYouGo",
 * });
 * const defaultGetDbClusters = alicloud.selectdb.getDbClustersOutput({
 *     ids: [defaultDbCluster.id],
 * });
 * export const dbCluster = defaultGetDbClusters.apply(defaultGetDbClusters => defaultGetDbClusters.ids?.[0]);
 * ```
 */
export function getDbClusters(args?: GetDbClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetDbClustersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:selectdb/getDbClusters:getDbClusters", {
        "ids": args.ids,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbClusters.
 */
export interface GetDbClustersArgs {
    /**
     * A list of DBCluster IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getDbClusters.
 */
export interface GetDbClustersResult {
    /**
     * A list of SelectDB DBClusters. Each element contains the following attributes:
     */
    readonly clusters: outputs.selectdb.GetDbClustersCluster[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
}
/**
 * This data source provides the SelectDB DBCluster of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.229.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.zones?.[0]?.id,
 * }));
 * const defaultDbInstance = new alicloud.selectdb.DbInstance("default", {
 *     dbInstanceClass: "selectdb.xlarge",
 *     dbInstanceDescription: name,
 *     cacheSize: 200,
 *     paymentType: "PayAsYouGo",
 *     engineMinorVersion: "3.0.12",
 *     vpcId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.vpcId),
 *     zoneId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.zoneId),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.vswitches?.[0]?.id),
 * });
 * const defaultDbCluster = new alicloud.selectdb.DbCluster("default", {
 *     dbInstanceId: defaultDbInstance.id,
 *     dbClusterDescription: name,
 *     dbClusterClass: "selectdb.2xlarge",
 *     cacheSize: 400,
 *     paymentType: "PayAsYouGo",
 * });
 * const defaultGetDbClusters = alicloud.selectdb.getDbClustersOutput({
 *     ids: [defaultDbCluster.id],
 * });
 * export const dbCluster = defaultGetDbClusters.apply(defaultGetDbClusters => defaultGetDbClusters.ids?.[0]);
 * ```
 */
export function getDbClustersOutput(args?: GetDbClustersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDbClustersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:selectdb/getDbClusters:getDbClusters", {
        "ids": args.ids,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbClusters.
 */
export interface GetDbClustersOutputArgs {
    /**
     * A list of DBCluster IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
}
