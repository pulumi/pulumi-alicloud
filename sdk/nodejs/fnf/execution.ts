// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Serverless Workflow Execution resource.
 *
 * For information about Serverless Workflow Execution and how to use it, see [What is Execution](https://www.alibabacloud.com/help/en/doc-detail/122628.html).
 *
 * > **NOTE:** Available in v1.149.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-testacc-fnfflow";
 * const defaultRole = new alicloud.ram.Role("defaultRole", {document: `  {
 *     "Statement": [
 *       {
 *         "Action": "sts:AssumeRole",
 *         "Effect": "Allow",
 *         "Principal": {
 *           "Service": [
 *             "fnf.aliyuncs.com"
 *           ]
 *         }
 *       }
 *     ],
 *     "Version": "1"
 *   }
 * `});
 * const defaultFlow = new alicloud.fnf.Flow("defaultFlow", {
 *     definition: `  version: v1beta1
 *   type: flow
 *   steps:
 *     - type: wait
 *       name: custom_wait
 *       duration: $.wait
 * `,
 *     roleArn: defaultRole.arn,
 *     description: "Test for terraform fnf_flow.",
 *     type: "FDL",
 * });
 * const defaultExecution = new alicloud.fnf.Execution("defaultExecution", {
 *     executionName: name,
 *     flowName: defaultFlow.name,
 *     input: "{\"wait\": 600}",
 * });
 * ```
 *
 * ## Import
 *
 * Serverless Workflow Execution can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:fnf/execution:Execution example <flow_name>:<execution_name>
 * ```
 */
export class Execution extends pulumi.CustomResource {
    /**
     * Get an existing Execution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExecutionState, opts?: pulumi.CustomResourceOptions): Execution {
        return new Execution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:fnf/execution:Execution';

    /**
     * Returns true if the given object is an instance of Execution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Execution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Execution.__pulumiType;
    }

    /**
     * The name of the execution.
     */
    public readonly executionName!: pulumi.Output<string>;
    /**
     * The name of the flow.
     */
    public readonly flowName!: pulumi.Output<string>;
    /**
     * The Input information for this execution.
     */
    public readonly input!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource. Valid values: `Stopped`.
     */
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a Execution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExecutionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExecutionArgs | ExecutionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExecutionState | undefined;
            resourceInputs["executionName"] = state ? state.executionName : undefined;
            resourceInputs["flowName"] = state ? state.flowName : undefined;
            resourceInputs["input"] = state ? state.input : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ExecutionArgs | undefined;
            if ((!args || args.executionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionName'");
            }
            if ((!args || args.flowName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowName'");
            }
            resourceInputs["executionName"] = args ? args.executionName : undefined;
            resourceInputs["flowName"] = args ? args.flowName : undefined;
            resourceInputs["input"] = args ? args.input : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Execution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Execution resources.
 */
export interface ExecutionState {
    /**
     * The name of the execution.
     */
    executionName?: pulumi.Input<string>;
    /**
     * The name of the flow.
     */
    flowName?: pulumi.Input<string>;
    /**
     * The Input information for this execution.
     */
    input?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `Stopped`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Execution resource.
 */
export interface ExecutionArgs {
    /**
     * The name of the execution.
     */
    executionName: pulumi.Input<string>;
    /**
     * The name of the flow.
     */
    flowName: pulumi.Input<string>;
    /**
     * The Input information for this execution.
     */
    input?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `Stopped`.
     */
    status?: pulumi.Input<string>;
}
