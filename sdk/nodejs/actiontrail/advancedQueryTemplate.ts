// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Actiontrail Advanced Query Template resource.
 *
 * sql template of advanced query.
 *
 * For information about Actiontrail Advanced Query Template and how to use it, see [What is Advanced Query Template](https://next.api.alibabacloud.com/document/Actiontrail/2020-07-06/CreateAdvancedQueryTemplate).
 *
 * > **NOTE:** Available since v1.255.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.actiontrail.AdvancedQueryTemplate("default", {
 *     simpleQuery: true,
 *     templateName: "exampleTemplateName",
 *     templateSql: "*",
 * });
 * ```
 *
 * ## Import
 *
 * Actiontrail Advanced Query Template can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:actiontrail/advancedQueryTemplate:AdvancedQueryTemplate example <id>
 * ```
 */
export class AdvancedQueryTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AdvancedQueryTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdvancedQueryTemplateState, opts?: pulumi.CustomResourceOptions): AdvancedQueryTemplate {
        return new AdvancedQueryTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:actiontrail/advancedQueryTemplate:AdvancedQueryTemplate';

    /**
     * Returns true if the given object is an instance of AdvancedQueryTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdvancedQueryTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdvancedQueryTemplate.__pulumiType;
    }

    /**
     * Distinguish whether the current template is a simple query
     */
    public readonly simpleQuery!: pulumi.Output<boolean>;
    /**
     * The name of the resource
     */
    public readonly templateName!: pulumi.Output<string | undefined>;
    /**
     * SQL content saved on behalf of the current template
     */
    public readonly templateSql!: pulumi.Output<string>;

    /**
     * Create a AdvancedQueryTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdvancedQueryTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdvancedQueryTemplateArgs | AdvancedQueryTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdvancedQueryTemplateState | undefined;
            resourceInputs["simpleQuery"] = state ? state.simpleQuery : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
            resourceInputs["templateSql"] = state ? state.templateSql : undefined;
        } else {
            const args = argsOrState as AdvancedQueryTemplateArgs | undefined;
            if ((!args || args.simpleQuery === undefined) && !opts.urn) {
                throw new Error("Missing required property 'simpleQuery'");
            }
            if ((!args || args.templateSql === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateSql'");
            }
            resourceInputs["simpleQuery"] = args ? args.simpleQuery : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["templateSql"] = args ? args.templateSql : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdvancedQueryTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AdvancedQueryTemplate resources.
 */
export interface AdvancedQueryTemplateState {
    /**
     * Distinguish whether the current template is a simple query
     */
    simpleQuery?: pulumi.Input<boolean>;
    /**
     * The name of the resource
     */
    templateName?: pulumi.Input<string>;
    /**
     * SQL content saved on behalf of the current template
     */
    templateSql?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AdvancedQueryTemplate resource.
 */
export interface AdvancedQueryTemplateArgs {
    /**
     * Distinguish whether the current template is a simple query
     */
    simpleQuery: pulumi.Input<boolean>;
    /**
     * The name of the resource
     */
    templateName?: pulumi.Input<string>;
    /**
     * SQL content saved on behalf of the current template
     */
    templateSql: pulumi.Input<string>;
}
