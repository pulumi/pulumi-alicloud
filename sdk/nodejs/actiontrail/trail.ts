// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Actiontrail Trail resource.
 *
 * Trail of ActionTrail. After creating a trail, you need to enable the trail through StartLogging.
 *
 * For information about Actiontrail Trail and how to use it, see [What is Trail](https://www.alibabacloud.com/help/en/actiontrail/latest/api-actiontrail-2020-07-06-createtrail).
 *
 * > **NOTE:** Available since v1.95.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultGetAccount = alicloud.getAccount({});
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultProject = new alicloud.log.Project("default", {
 *     projectName: `${name}-${defaultInteger.result}`,
 *     description: "tf actiontrail example",
 * });
 * const defaultGetRoles = alicloud.ram.getRoles({
 *     nameRegex: "AliyunServiceRoleForActionTrail",
 * });
 * const defaultTrail = new alicloud.actiontrail.Trail("default", {
 *     trailName: name,
 *     slsWriteRoleArn: defaultGetRoles.then(defaultGetRoles => defaultGetRoles.roles?.[0]?.arn),
 *     slsProjectArn: pulumi.all([_default, defaultGetAccount, defaultProject.projectName]).apply(([_default, defaultGetAccount, projectName]) => `acs:log:${_default.regions?.[0]?.id}:${defaultGetAccount.id}:project/${projectName}`),
 * });
 * ```
 *
 * ## Import
 *
 * Actiontrail Trail can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:actiontrail/trail:Trail example <id>
 * ```
 */
export class Trail extends pulumi.CustomResource {
    /**
     * Get an existing Trail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrailState, opts?: pulumi.CustomResourceOptions): Trail {
        return new Trail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:actiontrail/trail:Trail';

    /**
     * Returns true if the given object is an instance of Trail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Trail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Trail.__pulumiType;
    }

    /**
     * (Available since v1.256.0) The time when the trail was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The read/write type of the events to be delivered. Default value: `All`. Valid values: `Read`, `Write`, `All`.
     */
    declare public readonly eventRw: pulumi.Output<string>;
    /**
     * Specifies whether to create a multi-account trail. Default value: `false`. Valid values:
     */
    declare public readonly isOrganizationTrail: pulumi.Output<boolean | undefined>;
    /**
     * The ARN of the MaxCompute project to which you want to deliver events.
     */
    declare public readonly maxComputeProjectArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.
     */
    declare public readonly maxComputeWriteRoleArn: pulumi.Output<string>;
    /**
     * Field `mnsTopicArn` has been deprecated from provider version 1.118.0.
     *
     * @deprecated Field `mnsTopicArn` has been deprecated from version 1.118.0
     */
    declare public readonly mnsTopicArn: pulumi.Output<string | undefined>;
    /**
     * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     *
     * @deprecated Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The OSS bucket to which the trail delivers logs.
     */
    declare public readonly ossBucketName: pulumi.Output<string | undefined>;
    /**
     * The prefix of the file name in the OSS bucket to which the trail delivers logs.
     */
    declare public readonly ossKeyPrefix: pulumi.Output<string | undefined>;
    /**
     * The name of the RAM role that the user allows ActionTrail to access OSS service.
     */
    declare public readonly ossWriteRoleArn: pulumi.Output<string | undefined>;
    /**
     * (Available since v1.256.0) The home region of the trail.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * Field `roleName` has been deprecated from provider version 1.118.0.
     *
     * @deprecated Field `roleName` has been deprecated from version 1.118.0
     */
    declare public readonly roleName: pulumi.Output<string | undefined>;
    /**
     * The ARN of the Simple Log Service project to which the trail delivers logs.
     */
    declare public readonly slsProjectArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the role that ActionTrail assumes to deliver operation events to the Simple Log Service project.
     */
    declare public readonly slsWriteRoleArn: pulumi.Output<string>;
    /**
     * The status of the trail. Default value: `Enable`. Valid values: `Enable`, `Disable`.
     */
    declare public readonly status: pulumi.Output<string | undefined>;
    /**
     * The name of the trail to be created.
     */
    declare public readonly trailName: pulumi.Output<string>;
    /**
     * The region of the trail.
     */
    declare public readonly trailRegion: pulumi.Output<string>;

    /**
     * Create a Trail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TrailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrailArgs | TrailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrailState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["eventRw"] = state?.eventRw;
            resourceInputs["isOrganizationTrail"] = state?.isOrganizationTrail;
            resourceInputs["maxComputeProjectArn"] = state?.maxComputeProjectArn;
            resourceInputs["maxComputeWriteRoleArn"] = state?.maxComputeWriteRoleArn;
            resourceInputs["mnsTopicArn"] = state?.mnsTopicArn;
            resourceInputs["name"] = state?.name;
            resourceInputs["ossBucketName"] = state?.ossBucketName;
            resourceInputs["ossKeyPrefix"] = state?.ossKeyPrefix;
            resourceInputs["ossWriteRoleArn"] = state?.ossWriteRoleArn;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["roleName"] = state?.roleName;
            resourceInputs["slsProjectArn"] = state?.slsProjectArn;
            resourceInputs["slsWriteRoleArn"] = state?.slsWriteRoleArn;
            resourceInputs["status"] = state?.status;
            resourceInputs["trailName"] = state?.trailName;
            resourceInputs["trailRegion"] = state?.trailRegion;
        } else {
            const args = argsOrState as TrailArgs | undefined;
            resourceInputs["eventRw"] = args?.eventRw;
            resourceInputs["isOrganizationTrail"] = args?.isOrganizationTrail;
            resourceInputs["maxComputeProjectArn"] = args?.maxComputeProjectArn;
            resourceInputs["maxComputeWriteRoleArn"] = args?.maxComputeWriteRoleArn;
            resourceInputs["mnsTopicArn"] = args?.mnsTopicArn;
            resourceInputs["name"] = args?.name;
            resourceInputs["ossBucketName"] = args?.ossBucketName;
            resourceInputs["ossKeyPrefix"] = args?.ossKeyPrefix;
            resourceInputs["ossWriteRoleArn"] = args?.ossWriteRoleArn;
            resourceInputs["roleName"] = args?.roleName;
            resourceInputs["slsProjectArn"] = args?.slsProjectArn;
            resourceInputs["slsWriteRoleArn"] = args?.slsWriteRoleArn;
            resourceInputs["status"] = args?.status;
            resourceInputs["trailName"] = args?.trailName;
            resourceInputs["trailRegion"] = args?.trailRegion;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Trail.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Trail resources.
 */
export interface TrailState {
    /**
     * (Available since v1.256.0) The time when the trail was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The read/write type of the events to be delivered. Default value: `All`. Valid values: `Read`, `Write`, `All`.
     */
    eventRw?: pulumi.Input<string>;
    /**
     * Specifies whether to create a multi-account trail. Default value: `false`. Valid values:
     */
    isOrganizationTrail?: pulumi.Input<boolean>;
    /**
     * The ARN of the MaxCompute project to which you want to deliver events.
     */
    maxComputeProjectArn?: pulumi.Input<string>;
    /**
     * The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.
     */
    maxComputeWriteRoleArn?: pulumi.Input<string>;
    /**
     * Field `mnsTopicArn` has been deprecated from provider version 1.118.0.
     *
     * @deprecated Field `mnsTopicArn` has been deprecated from version 1.118.0
     */
    mnsTopicArn?: pulumi.Input<string>;
    /**
     * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     *
     * @deprecated Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The OSS bucket to which the trail delivers logs.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * The prefix of the file name in the OSS bucket to which the trail delivers logs.
     */
    ossKeyPrefix?: pulumi.Input<string>;
    /**
     * The name of the RAM role that the user allows ActionTrail to access OSS service.
     */
    ossWriteRoleArn?: pulumi.Input<string>;
    /**
     * (Available since v1.256.0) The home region of the trail.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Field `roleName` has been deprecated from provider version 1.118.0.
     *
     * @deprecated Field `roleName` has been deprecated from version 1.118.0
     */
    roleName?: pulumi.Input<string>;
    /**
     * The ARN of the Simple Log Service project to which the trail delivers logs.
     */
    slsProjectArn?: pulumi.Input<string>;
    /**
     * The ARN of the role that ActionTrail assumes to deliver operation events to the Simple Log Service project.
     */
    slsWriteRoleArn?: pulumi.Input<string>;
    /**
     * The status of the trail. Default value: `Enable`. Valid values: `Enable`, `Disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the trail to be created.
     */
    trailName?: pulumi.Input<string>;
    /**
     * The region of the trail.
     */
    trailRegion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Trail resource.
 */
export interface TrailArgs {
    /**
     * The read/write type of the events to be delivered. Default value: `All`. Valid values: `Read`, `Write`, `All`.
     */
    eventRw?: pulumi.Input<string>;
    /**
     * Specifies whether to create a multi-account trail. Default value: `false`. Valid values:
     */
    isOrganizationTrail?: pulumi.Input<boolean>;
    /**
     * The ARN of the MaxCompute project to which you want to deliver events.
     */
    maxComputeProjectArn?: pulumi.Input<string>;
    /**
     * The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.
     */
    maxComputeWriteRoleArn?: pulumi.Input<string>;
    /**
     * Field `mnsTopicArn` has been deprecated from provider version 1.118.0.
     *
     * @deprecated Field `mnsTopicArn` has been deprecated from version 1.118.0
     */
    mnsTopicArn?: pulumi.Input<string>;
    /**
     * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     *
     * @deprecated Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The OSS bucket to which the trail delivers logs.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * The prefix of the file name in the OSS bucket to which the trail delivers logs.
     */
    ossKeyPrefix?: pulumi.Input<string>;
    /**
     * The name of the RAM role that the user allows ActionTrail to access OSS service.
     */
    ossWriteRoleArn?: pulumi.Input<string>;
    /**
     * Field `roleName` has been deprecated from provider version 1.118.0.
     *
     * @deprecated Field `roleName` has been deprecated from version 1.118.0
     */
    roleName?: pulumi.Input<string>;
    /**
     * The ARN of the Simple Log Service project to which the trail delivers logs.
     */
    slsProjectArn?: pulumi.Input<string>;
    /**
     * The ARN of the role that ActionTrail assumes to deliver operation events to the Simple Log Service project.
     */
    slsWriteRoleArn?: pulumi.Input<string>;
    /**
     * The status of the trail. Default value: `Enable`. Valid values: `Enable`, `Disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the trail to be created.
     */
    trailName?: pulumi.Input<string>;
    /**
     * The region of the trail.
     */
    trailRegion?: pulumi.Input<string>;
}
