// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Actiontrail History Delivery Job resource.
 *
 * For information about Actiontrail History Delivery Job and how to use it, see [What is History Delivery Job](https://www.alibabacloud.com/help/doc-detail/199999.htm).
 *
 * > **NOTE:** Available in v1.139.0+.
 *
 * > **NOTE:** Make sure that you have called the `alicloud.actiontrail.Trail` to create a single account trace that is delivered to Log Service SLS. An Alibaba cloud account can only have one running delivery history job at the same time.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const exampleRegions = alicloud.getRegions({
 *     current: true,
 * });
 * const exampleAccount = alicloud.getAccount({});
 * const exampleProject = new alicloud.log.Project("exampleProject", {description: "tf actiontrail test"});
 * const exampleRoles = alicloud.ram.getRoles({
 *     nameRegex: "AliyunActionTrailDefaultRole",
 * });
 * const exampleTrail = new alicloud.actiontrail.Trail("exampleTrail", {
 *     trailName: "example_value",
 *     slsWriteRoleArn: exampleRoles.then(exampleRoles => exampleRoles.roles?[0]?.arn),
 *     slsProjectArn: pulumi.all([exampleRegions, exampleAccount, exampleProject.name]).apply(([exampleRegions, exampleAccount, name]) => `acs:log:${exampleRegions.regions?[0]?.id}:${exampleAccount.id}:project/${name}`),
 * });
 * const exampleHistoryDeliveryJob = new alicloud.actiontrail.HistoryDeliveryJob("exampleHistoryDeliveryJob", {trailName: exampleTrail.id});
 * ```
 *
 * ## Import
 *
 * Actiontrail History Delivery Job can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:actiontrail/historyDeliveryJob:HistoryDeliveryJob example <id>
 * ```
 */
export class HistoryDeliveryJob extends pulumi.CustomResource {
    /**
     * Get an existing HistoryDeliveryJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HistoryDeliveryJobState, opts?: pulumi.CustomResourceOptions): HistoryDeliveryJob {
        return new HistoryDeliveryJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:actiontrail/historyDeliveryJob:HistoryDeliveryJob';

    /**
     * Returns true if the given object is an instance of HistoryDeliveryJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HistoryDeliveryJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HistoryDeliveryJob.__pulumiType;
    }

    /**
     * The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * The name of the trail for which you want to create a historical event delivery task.
     */
    public readonly trailName!: pulumi.Output<string>;

    /**
     * Create a HistoryDeliveryJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HistoryDeliveryJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HistoryDeliveryJobArgs | HistoryDeliveryJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HistoryDeliveryJobState | undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["trailName"] = state ? state.trailName : undefined;
        } else {
            const args = argsOrState as HistoryDeliveryJobArgs | undefined;
            if ((!args || args.trailName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trailName'");
            }
            resourceInputs["trailName"] = args ? args.trailName : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HistoryDeliveryJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HistoryDeliveryJob resources.
 */
export interface HistoryDeliveryJobState {
    /**
     * The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
     */
    status?: pulumi.Input<number>;
    /**
     * The name of the trail for which you want to create a historical event delivery task.
     */
    trailName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HistoryDeliveryJob resource.
 */
export interface HistoryDeliveryJobArgs {
    /**
     * The name of the trail for which you want to create a historical event delivery task.
     */
    trailName: pulumi.Input<string>;
}
