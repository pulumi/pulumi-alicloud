// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a SCDN Domain resource.
 *
 * For information about SCDN Domain and how to use it, see [What is Domain](https://help.aliyun.com/document_detail/63672.html).
 *
 * > **NOTE:** Available since v1.131.0.
 *
 * > **NOTE:** Alibaba Cloud SCDN has stopped new customer purchases from January 26, 2023, and you can choose to buy Alibaba Cloud DCDN products with more comprehensive acceleration and protection capabilities. If you are already a SCDN customer, you can submit a work order at any time to apply for a smooth migration to Alibaba Cloud DCDN products. In the future, we will provide better acceleration and security protection services in Alibaba Cloud DCDN, thank you for your understanding and cooperation.
 *
 * > **DEPRECATED:**  This resource has been [deprecated](https://www.aliyun.com/product/scdn) from version `1.219.0`.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.scdn.Domain("example", {
 *     domainName: "my-Domain",
 *     sources: [{
 *         content: "xxx.aliyuncs.com",
 *         enabled: "online",
 *         port: 80,
 *         priority: "20",
 *         type: "oss",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * SCDN Domain can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:scdn/domain:Domain example <domain_name>
 * ```
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:scdn/domain:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * Attribute perm has been deprecated and suggest removing it from your template.
     *
     * @deprecated Attribute bizName has been deprecated and suggest removing it from your template.
     */
    declare public readonly bizName: pulumi.Output<string | undefined>;
    /**
     * Certificate Information. See the following `Block certInfos`.
     */
    declare public readonly certInfos: pulumi.Output<outputs.scdn.DomainCertInfo[] | undefined>;
    /**
     * The health check url.
     */
    declare public readonly checkUrl: pulumi.Output<string | undefined>;
    /**
     * The name of domain.
     */
    declare public readonly domainName: pulumi.Output<string>;
    /**
     * Whether to set certificate forcibly.
     */
    declare public readonly forceSet: pulumi.Output<string | undefined>;
    /**
     * The resource group id.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * the Origin Server Information. See the following `Block sources`.
     */
    declare public readonly sources: pulumi.Output<outputs.scdn.DomainSource[]>;
    /**
     * The status of the resource. Valid values: `offline`, `online`.
     */
    declare public readonly status: pulumi.Output<string>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs | DomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainState | undefined;
            resourceInputs["bizName"] = state?.bizName;
            resourceInputs["certInfos"] = state?.certInfos;
            resourceInputs["checkUrl"] = state?.checkUrl;
            resourceInputs["domainName"] = state?.domainName;
            resourceInputs["forceSet"] = state?.forceSet;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["sources"] = state?.sources;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as DomainArgs | undefined;
            if (args?.domainName === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if (args?.sources === undefined && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            resourceInputs["bizName"] = args?.bizName;
            resourceInputs["certInfos"] = args?.certInfos;
            resourceInputs["checkUrl"] = args?.checkUrl;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["forceSet"] = args?.forceSet;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["sources"] = args?.sources;
            resourceInputs["status"] = args?.status;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * Attribute perm has been deprecated and suggest removing it from your template.
     *
     * @deprecated Attribute bizName has been deprecated and suggest removing it from your template.
     */
    bizName?: pulumi.Input<string>;
    /**
     * Certificate Information. See the following `Block certInfos`.
     */
    certInfos?: pulumi.Input<pulumi.Input<inputs.scdn.DomainCertInfo>[]>;
    /**
     * The health check url.
     */
    checkUrl?: pulumi.Input<string>;
    /**
     * The name of domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Whether to set certificate forcibly.
     */
    forceSet?: pulumi.Input<string>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * the Origin Server Information. See the following `Block sources`.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.scdn.DomainSource>[]>;
    /**
     * The status of the resource. Valid values: `offline`, `online`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * Attribute perm has been deprecated and suggest removing it from your template.
     *
     * @deprecated Attribute bizName has been deprecated and suggest removing it from your template.
     */
    bizName?: pulumi.Input<string>;
    /**
     * Certificate Information. See the following `Block certInfos`.
     */
    certInfos?: pulumi.Input<pulumi.Input<inputs.scdn.DomainCertInfo>[]>;
    /**
     * The health check url.
     */
    checkUrl?: pulumi.Input<string>;
    /**
     * The name of domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * Whether to set certificate forcibly.
     */
    forceSet?: pulumi.Input<string>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * the Origin Server Information. See the following `Block sources`.
     */
    sources: pulumi.Input<pulumi.Input<inputs.scdn.DomainSource>[]>;
    /**
     * The status of the resource. Valid values: `offline`, `online`.
     */
    status?: pulumi.Input<string>;
}
