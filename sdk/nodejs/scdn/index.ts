// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DomainArgs, DomainState } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { DomainConfigArgs, DomainConfigState } from "./domainConfig";
export type DomainConfig = import("./domainConfig").DomainConfig;
export const DomainConfig: typeof import("./domainConfig").DomainConfig = null as any;
utilities.lazyLoad(exports, ["DomainConfig"], () => require("./domainConfig"));

export { GetDomainsArgs, GetDomainsResult, GetDomainsOutputArgs } from "./getDomains";
export const getDomains: typeof import("./getDomains").getDomains = null as any;
export const getDomainsOutput: typeof import("./getDomains").getDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getDomains","getDomainsOutput"], () => require("./getDomains"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:scdn/domain:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "alicloud:scdn/domainConfig:DomainConfig":
                return new DomainConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "scdn/domain", _module)
pulumi.runtime.registerResourceModule("alicloud", "scdn/domainConfig", _module)
