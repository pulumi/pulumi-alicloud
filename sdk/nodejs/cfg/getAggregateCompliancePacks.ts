// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Config Aggregate Compliance Packs of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.124.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.cfg.getAggregateCompliancePacks({
 *     aggregatorId: "ca-3a9b626622af001d****",
 *     ids: ["cp-152a626622af00bc****"],
 *     nameRegex: "the_resource_name",
 * });
 * export const firstConfigAggregateCompliancePackId = example.then(example => example.packs?[0]?.id);
 * ```
 */
export function getAggregateCompliancePacks(args: GetAggregateCompliancePacksArgs, opts?: pulumi.InvokeOptions): Promise<GetAggregateCompliancePacksResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:cfg/getAggregateCompliancePacks:getAggregateCompliancePacks", {
        "aggregatorId": args.aggregatorId,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getAggregateCompliancePacks.
 */
export interface GetAggregateCompliancePacksArgs {
    /**
     * The ID of aggregator.
     */
    aggregatorId: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of Aggregate Compliance Pack IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Aggregate Compliance Pack name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The status of the resource. Valid values `ACTIVE`, `CREATING`, `INACTIVE`.
     */
    status?: string;
}

/**
 * A collection of values returned by getAggregateCompliancePacks.
 */
export interface GetAggregateCompliancePacksResult {
    readonly aggregatorId: string;
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of Config Aggregate Compliance Pack names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * A list of Config Aggregate Compliance Packs. Each element contains the following attributes:
     */
    readonly packs: outputs.cfg.GetAggregateCompliancePacksPack[];
    /**
     * The status of the resource.
     */
    readonly status?: string;
}

export function getAggregateCompliancePacksOutput(args: GetAggregateCompliancePacksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAggregateCompliancePacksResult> {
    return pulumi.output(args).apply(a => getAggregateCompliancePacks(a, opts))
}

/**
 * A collection of arguments for invoking getAggregateCompliancePacks.
 */
export interface GetAggregateCompliancePacksOutputArgs {
    /**
     * The ID of aggregator.
     */
    aggregatorId: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of Aggregate Compliance Pack IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Aggregate Compliance Pack name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values `ACTIVE`, `CREATING`, `INACTIVE`.
     */
    status?: pulumi.Input<string>;
}
