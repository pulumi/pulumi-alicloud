// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Config Aggregate Delivery resource.
 *
 * Delivery channel of aggregator.
 *
 * For information about Config Aggregate Delivery and how to use it, see [What is Aggregate Delivery](https://www.alibabacloud.com/help/en/cloud-config/latest/api-config-2020-09-07-createaggregateconfigdeliverychannel).
 *
 * > **NOTE:** Available since v1.172.0.
 *
 * ## Import
 *
 * Config Aggregate Delivery can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cfg/aggregateDelivery:AggregateDelivery example <aggregator_id>:<delivery_channel_id>
 * ```
 */
export class AggregateDelivery extends pulumi.CustomResource {
    /**
     * Get an existing AggregateDelivery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AggregateDeliveryState, opts?: pulumi.CustomResourceOptions): AggregateDelivery {
        return new AggregateDelivery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cfg/aggregateDelivery:AggregateDelivery';

    /**
     * Returns true if the given object is an instance of AggregateDelivery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AggregateDelivery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AggregateDelivery.__pulumiType;
    }

    /**
     * Aggregator ID.
     */
    public readonly aggregatorId!: pulumi.Output<string>;
    /**
     * Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
     * - true: The specified destination receives resource change logs.
     * - false: The specified destination does not receive resource change logs.
     */
    public readonly configurationItemChangeNotification!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
     * - true: The specified destination receives scheduled resource snapshots.
     * - false: The specified destination does not receive scheduled resource snapshots.
     */
    public readonly configurationSnapshot!: pulumi.Output<boolean | undefined>;
    /**
     * The rule that is attached to the delivery channel.
     *
     * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
     *
     * If you specify the risk level or resource types for subscription events, this is as follows:
     *
     * The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
     *
     * The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
     *
     * Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
     */
    public readonly deliveryChannelCondition!: pulumi.Output<string | undefined>;
    /**
     * The ID of the delivery method. This parameter is required when you modify a delivery method.
     */
    public /*out*/ readonly deliveryChannelId!: pulumi.Output<string>;
    /**
     * The name of the delivery channel.
     */
    public readonly deliveryChannelName!: pulumi.Output<string | undefined>;
    /**
     * The ARN of the delivery destination.
     * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
     * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
     * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
     */
    public readonly deliveryChannelTargetArn!: pulumi.Output<string>;
    /**
     * The type of the delivery channel. Valid values:
     * - OSS: Object Storage Service (OSS)
     * - MNS: Message Service (MNS)
     * - SLS: Log Service
     */
    public readonly deliveryChannelType!: pulumi.Output<string>;
    /**
     * The description of the delivery method.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
     * - true: The specified destination receives resource non-compliance events.
     * - false: The specified destination does not receive resource non-compliance events.
     */
    public readonly nonCompliantNotification!: pulumi.Output<boolean | undefined>;
    /**
     * The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
     */
    public readonly oversizedDataOssTargetArn!: pulumi.Output<string | undefined>;
    /**
     * The status of the delivery method. Valid values:
     * - 0: The delivery method is disabled.
     * - 1: The delivery destination is enabled. This is the default value.
     */
    public readonly status!: pulumi.Output<number>;

    /**
     * Create a AggregateDelivery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AggregateDeliveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AggregateDeliveryArgs | AggregateDeliveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AggregateDeliveryState | undefined;
            resourceInputs["aggregatorId"] = state ? state.aggregatorId : undefined;
            resourceInputs["configurationItemChangeNotification"] = state ? state.configurationItemChangeNotification : undefined;
            resourceInputs["configurationSnapshot"] = state ? state.configurationSnapshot : undefined;
            resourceInputs["deliveryChannelCondition"] = state ? state.deliveryChannelCondition : undefined;
            resourceInputs["deliveryChannelId"] = state ? state.deliveryChannelId : undefined;
            resourceInputs["deliveryChannelName"] = state ? state.deliveryChannelName : undefined;
            resourceInputs["deliveryChannelTargetArn"] = state ? state.deliveryChannelTargetArn : undefined;
            resourceInputs["deliveryChannelType"] = state ? state.deliveryChannelType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["nonCompliantNotification"] = state ? state.nonCompliantNotification : undefined;
            resourceInputs["oversizedDataOssTargetArn"] = state ? state.oversizedDataOssTargetArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AggregateDeliveryArgs | undefined;
            if ((!args || args.aggregatorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aggregatorId'");
            }
            if ((!args || args.deliveryChannelTargetArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deliveryChannelTargetArn'");
            }
            if ((!args || args.deliveryChannelType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deliveryChannelType'");
            }
            resourceInputs["aggregatorId"] = args ? args.aggregatorId : undefined;
            resourceInputs["configurationItemChangeNotification"] = args ? args.configurationItemChangeNotification : undefined;
            resourceInputs["configurationSnapshot"] = args ? args.configurationSnapshot : undefined;
            resourceInputs["deliveryChannelCondition"] = args ? args.deliveryChannelCondition : undefined;
            resourceInputs["deliveryChannelName"] = args ? args.deliveryChannelName : undefined;
            resourceInputs["deliveryChannelTargetArn"] = args ? args.deliveryChannelTargetArn : undefined;
            resourceInputs["deliveryChannelType"] = args ? args.deliveryChannelType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["nonCompliantNotification"] = args ? args.nonCompliantNotification : undefined;
            resourceInputs["oversizedDataOssTargetArn"] = args ? args.oversizedDataOssTargetArn : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["deliveryChannelId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AggregateDelivery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AggregateDelivery resources.
 */
export interface AggregateDeliveryState {
    /**
     * Aggregator ID.
     */
    aggregatorId?: pulumi.Input<string>;
    /**
     * Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
     * - true: The specified destination receives resource change logs.
     * - false: The specified destination does not receive resource change logs.
     */
    configurationItemChangeNotification?: pulumi.Input<boolean>;
    /**
     * Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
     * - true: The specified destination receives scheduled resource snapshots.
     * - false: The specified destination does not receive scheduled resource snapshots.
     */
    configurationSnapshot?: pulumi.Input<boolean>;
    /**
     * The rule that is attached to the delivery channel.
     *
     * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
     *
     * If you specify the risk level or resource types for subscription events, this is as follows:
     *
     * The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
     *
     * The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
     *
     * Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
     */
    deliveryChannelCondition?: pulumi.Input<string>;
    /**
     * The ID of the delivery method. This parameter is required when you modify a delivery method.
     */
    deliveryChannelId?: pulumi.Input<string>;
    /**
     * The name of the delivery channel.
     */
    deliveryChannelName?: pulumi.Input<string>;
    /**
     * The ARN of the delivery destination.
     * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
     * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
     * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
     */
    deliveryChannelTargetArn?: pulumi.Input<string>;
    /**
     * The type of the delivery channel. Valid values:
     * - OSS: Object Storage Service (OSS)
     * - MNS: Message Service (MNS)
     * - SLS: Log Service
     */
    deliveryChannelType?: pulumi.Input<string>;
    /**
     * The description of the delivery method.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
     * - true: The specified destination receives resource non-compliance events.
     * - false: The specified destination does not receive resource non-compliance events.
     */
    nonCompliantNotification?: pulumi.Input<boolean>;
    /**
     * The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
     */
    oversizedDataOssTargetArn?: pulumi.Input<string>;
    /**
     * The status of the delivery method. Valid values:
     * - 0: The delivery method is disabled.
     * - 1: The delivery destination is enabled. This is the default value.
     */
    status?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AggregateDelivery resource.
 */
export interface AggregateDeliveryArgs {
    /**
     * Aggregator ID.
     */
    aggregatorId: pulumi.Input<string>;
    /**
     * Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
     * - true: The specified destination receives resource change logs.
     * - false: The specified destination does not receive resource change logs.
     */
    configurationItemChangeNotification?: pulumi.Input<boolean>;
    /**
     * Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
     * - true: The specified destination receives scheduled resource snapshots.
     * - false: The specified destination does not receive scheduled resource snapshots.
     */
    configurationSnapshot?: pulumi.Input<boolean>;
    /**
     * The rule that is attached to the delivery channel.
     *
     * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
     *
     * If you specify the risk level or resource types for subscription events, this is as follows:
     *
     * The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
     *
     * The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
     *
     * Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
     */
    deliveryChannelCondition?: pulumi.Input<string>;
    /**
     * The name of the delivery channel.
     */
    deliveryChannelName?: pulumi.Input<string>;
    /**
     * The ARN of the delivery destination.
     * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
     * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
     * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
     */
    deliveryChannelTargetArn: pulumi.Input<string>;
    /**
     * The type of the delivery channel. Valid values:
     * - OSS: Object Storage Service (OSS)
     * - MNS: Message Service (MNS)
     * - SLS: Log Service
     */
    deliveryChannelType: pulumi.Input<string>;
    /**
     * The description of the delivery method.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
     * - true: The specified destination receives resource non-compliance events.
     * - false: The specified destination does not receive resource non-compliance events.
     */
    nonCompliantNotification?: pulumi.Input<boolean>;
    /**
     * The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
     */
    oversizedDataOssTargetArn?: pulumi.Input<string>;
    /**
     * The status of the delivery method. Valid values:
     * - 0: The delivery method is disabled.
     * - 1: The delivery destination is enabled. This is the default value.
     */
    status?: pulumi.Input<number>;
}
