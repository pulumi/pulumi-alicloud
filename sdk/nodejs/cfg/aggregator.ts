// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Config Aggregator resource.
 *
 * For information about Cloud Config Aggregate Config Rule and how to use it, see [What is Aggregator](https://www.alibabacloud.com/help/en/doc-detail/211197.html).
 *
 * > **NOTE:** Available in v1.124.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.cfg.Aggregator("example", {
 *     aggregatorAccounts: [{
 *         accountId: "123968452689****",
 *         accountName: "tf-testacc1234",
 *         accountType: "ResourceDirectory",
 *     }],
 *     aggregatorName: "tf-testaccConfigAggregator1234",
 *     description: "tf-testaccConfigAggregator1234",
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Config Aggregator can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cfg/aggregator:Aggregator example <id>
 * ```
 */
export class Aggregator extends pulumi.CustomResource {
    /**
     * Get an existing Aggregator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AggregatorState, opts?: pulumi.CustomResourceOptions): Aggregator {
        return new Aggregator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cfg/aggregator:Aggregator';

    /**
     * Returns true if the given object is an instance of Aggregator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Aggregator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Aggregator.__pulumiType;
    }

    /**
     * The information of account in aggregator. If the aggregatorType is RD, it is optional and means add all members in the resource directory to the account group. **NOTE:** the field `aggregatorAccounts` is not required from version 1.148.0.
     */
    public readonly aggregatorAccounts!: pulumi.Output<outputs.cfg.AggregatorAggregatorAccount[]>;
    /**
     * The name of aggregator.
     */
    public readonly aggregatorName!: pulumi.Output<string>;
    /**
     * The type of aggregator. Valid values: `CUSTOM`, `RD`. The Default value: `CUSTOM`.
     */
    public readonly aggregatorType!: pulumi.Output<string>;
    /**
     * The description of aggregator.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The status of the resource. Valid values: `0`: creating `1`: normal `2`: deleting.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Aggregator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AggregatorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AggregatorArgs | AggregatorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AggregatorState | undefined;
            resourceInputs["aggregatorAccounts"] = state ? state.aggregatorAccounts : undefined;
            resourceInputs["aggregatorName"] = state ? state.aggregatorName : undefined;
            resourceInputs["aggregatorType"] = state ? state.aggregatorType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AggregatorArgs | undefined;
            if ((!args || args.aggregatorName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aggregatorName'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["aggregatorAccounts"] = args ? args.aggregatorAccounts : undefined;
            resourceInputs["aggregatorName"] = args ? args.aggregatorName : undefined;
            resourceInputs["aggregatorType"] = args ? args.aggregatorType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Aggregator.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Aggregator resources.
 */
export interface AggregatorState {
    /**
     * The information of account in aggregator. If the aggregatorType is RD, it is optional and means add all members in the resource directory to the account group. **NOTE:** the field `aggregatorAccounts` is not required from version 1.148.0.
     */
    aggregatorAccounts?: pulumi.Input<pulumi.Input<inputs.cfg.AggregatorAggregatorAccount>[]>;
    /**
     * The name of aggregator.
     */
    aggregatorName?: pulumi.Input<string>;
    /**
     * The type of aggregator. Valid values: `CUSTOM`, `RD`. The Default value: `CUSTOM`.
     */
    aggregatorType?: pulumi.Input<string>;
    /**
     * The description of aggregator.
     */
    description?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `0`: creating `1`: normal `2`: deleting.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Aggregator resource.
 */
export interface AggregatorArgs {
    /**
     * The information of account in aggregator. If the aggregatorType is RD, it is optional and means add all members in the resource directory to the account group. **NOTE:** the field `aggregatorAccounts` is not required from version 1.148.0.
     */
    aggregatorAccounts?: pulumi.Input<pulumi.Input<inputs.cfg.AggregatorAggregatorAccount>[]>;
    /**
     * The name of aggregator.
     */
    aggregatorName: pulumi.Input<string>;
    /**
     * The type of aggregator. Valid values: `CUSTOM`, `RD`. The Default value: `CUSTOM`.
     */
    aggregatorType?: pulumi.Input<string>;
    /**
     * The description of aggregator.
     */
    description: pulumi.Input<string>;
}
