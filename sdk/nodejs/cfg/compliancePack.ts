// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Config Compliance Pack resource.
 *
 * For information about Cloud Config Compliance Pack and how to use it, see [What is Compliance Pack](https://www.alibabacloud.com/help/en/doc-detail/194753.html).
 *
 * > **NOTE:** Available in v1.124.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "example_name";
 * const defaultInstances = alicloud.ecs.getInstances({});
 * const defaultResourceGroups = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultRule = new alicloud.cfg.Rule("defaultRule", {
 *     ruleName: name,
 *     description: name,
 *     sourceIdentifier: "ecs-instances-in-vpc",
 *     sourceOwner: "ALIYUN",
 *     resourceTypesScopes: ["ACS::ECS::Instance"],
 *     riskLevel: 1,
 *     configRuleTriggerTypes: "ConfigurationItemChangeNotification",
 *     tagKeyScope: "tfTest",
 *     tagValueScope: "tfTest 123",
 *     resourceGroupIdsScope: defaultResourceGroups.then(defaultResourceGroups => defaultResourceGroups.ids?[0]),
 *     excludeResourceIdsScope: defaultInstances.then(defaultInstances => defaultInstances.instances?[0]?.id),
 *     regionIdsScope: "cn-hangzhou",
 *     inputParameters: {
 *         vpcIds: defaultInstances.then(defaultInstances => defaultInstances.instances?[0]?.vpcId),
 *     },
 * });
 * const defaultCompliancePack = new alicloud.cfg.CompliancePack("defaultCompliancePack", {
 *     compliancePackName: "tf-testaccConfig1234",
 *     description: "tf-testaccConfig1234",
 *     riskLevel: 1,
 *     configRuleIds: [{
 *         configRuleId: defaultRule.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Config Compliance Pack can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cfg/compliancePack:CompliancePack example <id>
 * ```
 */
export class CompliancePack extends pulumi.CustomResource {
    /**
     * Get an existing CompliancePack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CompliancePackState, opts?: pulumi.CustomResourceOptions): CompliancePack {
        return new CompliancePack(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cfg/compliancePack:CompliancePack';

    /**
     * Returns true if the given object is an instance of CompliancePack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CompliancePack {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CompliancePack.__pulumiType;
    }

    /**
     * The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
     */
    public readonly compliancePackName!: pulumi.Output<string>;
    /**
     * Compliance Package Template Id.
     */
    public readonly compliancePackTemplateId!: pulumi.Output<string | undefined>;
    /**
     * A list of Config Rule IDs.
     */
    public readonly configRuleIds!: pulumi.Output<outputs.cfg.CompliancePackConfigRuleId[] | undefined>;
    /**
     * A list of Config Rules.
     *
     * @deprecated Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
     */
    public readonly configRules!: pulumi.Output<outputs.cfg.CompliancePackConfigRule[] | undefined>;
    /**
     * The Description of compliance pack.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
     */
    public readonly riskLevel!: pulumi.Output<number>;
    /**
     * The status of the resource. The valid values: `CREATING`, `ACTIVE`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a CompliancePack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CompliancePackArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CompliancePackArgs | CompliancePackState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CompliancePackState | undefined;
            resourceInputs["compliancePackName"] = state ? state.compliancePackName : undefined;
            resourceInputs["compliancePackTemplateId"] = state ? state.compliancePackTemplateId : undefined;
            resourceInputs["configRuleIds"] = state ? state.configRuleIds : undefined;
            resourceInputs["configRules"] = state ? state.configRules : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["riskLevel"] = state ? state.riskLevel : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as CompliancePackArgs | undefined;
            if ((!args || args.compliancePackName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compliancePackName'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.riskLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'riskLevel'");
            }
            resourceInputs["compliancePackName"] = args ? args.compliancePackName : undefined;
            resourceInputs["compliancePackTemplateId"] = args ? args.compliancePackTemplateId : undefined;
            resourceInputs["configRuleIds"] = args ? args.configRuleIds : undefined;
            resourceInputs["configRules"] = args ? args.configRules : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["riskLevel"] = args ? args.riskLevel : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CompliancePack.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CompliancePack resources.
 */
export interface CompliancePackState {
    /**
     * The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
     */
    compliancePackName?: pulumi.Input<string>;
    /**
     * Compliance Package Template Id.
     */
    compliancePackTemplateId?: pulumi.Input<string>;
    /**
     * A list of Config Rule IDs.
     */
    configRuleIds?: pulumi.Input<pulumi.Input<inputs.cfg.CompliancePackConfigRuleId>[]>;
    /**
     * A list of Config Rules.
     *
     * @deprecated Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
     */
    configRules?: pulumi.Input<pulumi.Input<inputs.cfg.CompliancePackConfigRule>[]>;
    /**
     * The Description of compliance pack.
     */
    description?: pulumi.Input<string>;
    /**
     * The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
     */
    riskLevel?: pulumi.Input<number>;
    /**
     * The status of the resource. The valid values: `CREATING`, `ACTIVE`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CompliancePack resource.
 */
export interface CompliancePackArgs {
    /**
     * The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
     */
    compliancePackName: pulumi.Input<string>;
    /**
     * Compliance Package Template Id.
     */
    compliancePackTemplateId?: pulumi.Input<string>;
    /**
     * A list of Config Rule IDs.
     */
    configRuleIds?: pulumi.Input<pulumi.Input<inputs.cfg.CompliancePackConfigRuleId>[]>;
    /**
     * A list of Config Rules.
     *
     * @deprecated Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
     */
    configRules?: pulumi.Input<pulumi.Input<inputs.cfg.CompliancePackConfigRule>[]>;
    /**
     * The Description of compliance pack.
     */
    description: pulumi.Input<string>;
    /**
     * The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
     */
    riskLevel: pulumi.Input<number>;
}
