// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a RDS Custom resource.
 *
 * Dedicated RDS User host.
 *
 * For information about RDS Custom and how to use it, see [What is Custom](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.235.0.
 *
 * ## Import
 *
 * RDS Custom can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rds/custom:Custom example <id>
 * ```
 */
export class Custom extends pulumi.CustomResource {
    /**
     * Get an existing Custom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomState, opts?: pulumi.CustomResourceOptions): Custom {
        return new Custom(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/custom:Custom';

    /**
     * Returns true if the given object is an instance of Custom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Custom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Custom.__pulumiType;
    }

    /**
     * Represents the number of instances created
     */
    public readonly amount!: pulumi.Output<number>;
    /**
     * Whether to pay automatically. Value range:
     */
    public readonly autoPay!: pulumi.Output<boolean | undefined>;
    /**
     * Whether the instance is automatically renewed. Valid values: true/false. The default is false.
     */
    public readonly autoRenew!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to allow joining the ACK cluster. When this parameter is set to `1`, the created instance can be added to the ACK cluster through The `AttachRCInstances` API to efficiently manage container applications.
     */
    public readonly createMode!: pulumi.Output<string | undefined>;
    /**
     * Data disk See `dataDisk` below.
     */
    public readonly dataDisks!: pulumi.Output<outputs.rds.CustomDataDisk[] | undefined>;
    /**
     * The ID of the deployment set.
     */
    public readonly deploymentSetId!: pulumi.Output<string | undefined>;
    /**
     * Instance description. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Instance configuration type, value range:
     *
     * > **NOTE:**  This parameter does not need to be uploaded, and the system can automatically determine whether to upgrade or downgrade. If you want to upload, please follow the following logic rules.
     * - `Up` (default): upgrade the instance specification. Please ensure that your account balance is sufficient.
     * - `Down`: Downgrade instance specifications. When the instance type set to InstanceType is lower than the current instance type, set Direction = down.
     */
    public readonly direction!: pulumi.Output<string | undefined>;
    /**
     * Whether to pre-check the operation of creating an instance. Valid values:
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to forcibly release the running instance. Value: true/false
     */
    public readonly force!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to force shutdown. Value range:
     */
    public readonly forceStop!: pulumi.Output<boolean | undefined>;
    /**
     * The instance host name.
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the image used by the instance.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * The Payment type. Currently, only `Prepaid` (package year and month) types are supported.
     */
    public readonly instanceChargeType!: pulumi.Output<string | undefined>;
    /**
     * The type of the created RDS Custom dedicated host instance.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Reserved parameters are not supported.
     */
    public readonly internetChargeType!: pulumi.Output<string | undefined>;
    /**
     * Reserved parameters are not supported.
     */
    public readonly internetMaxBandwidthOut!: pulumi.Output<number | undefined>;
    /**
     * Reserved parameters are not supported.
     */
    public readonly ioOptimized!: pulumi.Output<string | undefined>;
    /**
     * The key pair name. Only flyer names are supported.
     */
    public readonly keyPairName!: pulumi.Output<string | undefined>;
    /**
     * The account and password of the instance.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Prepaid renewal duration, unit: Month/Year.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The unit of duration of the year-to-month billing method. Value range:
     * - `Year`: Year
     * - `Month` (default): Month
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * The region ID. Callable DescribeRegions to get.
     */
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Reserved parameters are not supported.
     */
    public readonly securityEnhancementStrategy!: pulumi.Output<string | undefined>;
    /**
     * Security group list
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * The status of the resource
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * System disk specifications. See `systemDisk` below.
     */
    public readonly systemDisk!: pulumi.Output<outputs.rds.CustomSystemDisk | undefined>;
    /**
     * The tag of the resource
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the virtual switch. The zone in which the vSwitch is located must correspond to the zone ID entered in ZoneId.
     *
     * The network type InstanceNetworkType must be VPC.
     */
    public readonly vswitchId!: pulumi.Output<string>;
    /**
     * The zone ID  of the resource
     */
    public readonly zoneId!: pulumi.Output<string | undefined>;

    /**
     * Create a Custom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomArgs | CustomState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomState | undefined;
            resourceInputs["amount"] = state ? state.amount : undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["createMode"] = state ? state.createMode : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["deploymentSetId"] = state ? state.deploymentSetId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["forceStop"] = state ? state.forceStop : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["ioOptimized"] = state ? state.ioOptimized : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["securityEnhancementStrategy"] = state ? state.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemDisk"] = state ? state.systemDisk : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as CustomArgs | undefined;
            if ((!args || args.amount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'amount'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["amount"] = args ? args.amount : undefined;
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["createMode"] = args ? args.createMode : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["deploymentSetId"] = args ? args.deploymentSetId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["forceStop"] = args ? args.forceStop : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["ioOptimized"] = args ? args.ioOptimized : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["securityEnhancementStrategy"] = args ? args.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["systemDisk"] = args ? args.systemDisk : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Custom.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Custom resources.
 */
export interface CustomState {
    /**
     * Represents the number of instances created
     */
    amount?: pulumi.Input<number>;
    /**
     * Whether to pay automatically. Value range:
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Whether the instance is automatically renewed. Valid values: true/false. The default is false.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Whether to allow joining the ACK cluster. When this parameter is set to `1`, the created instance can be added to the ACK cluster through The `AttachRCInstances` API to efficiently manage container applications.
     */
    createMode?: pulumi.Input<string>;
    /**
     * Data disk See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.rds.CustomDataDisk>[]>;
    /**
     * The ID of the deployment set.
     */
    deploymentSetId?: pulumi.Input<string>;
    /**
     * Instance description. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * Instance configuration type, value range:
     *
     * > **NOTE:**  This parameter does not need to be uploaded, and the system can automatically determine whether to upgrade or downgrade. If you want to upload, please follow the following logic rules.
     * - `Up` (default): upgrade the instance specification. Please ensure that your account balance is sufficient.
     * - `Down`: Downgrade instance specifications. When the instance type set to InstanceType is lower than the current instance type, set Direction = down.
     */
    direction?: pulumi.Input<string>;
    /**
     * Whether to pre-check the operation of creating an instance. Valid values:
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Whether to forcibly release the running instance. Value: true/false
     */
    force?: pulumi.Input<boolean>;
    /**
     * Whether to force shutdown. Value range:
     */
    forceStop?: pulumi.Input<boolean>;
    /**
     * The instance host name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of the image used by the instance.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The Payment type. Currently, only `Prepaid` (package year and month) types are supported.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The type of the created RDS Custom dedicated host instance.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Reserved parameters are not supported.
     */
    ioOptimized?: pulumi.Input<string>;
    /**
     * The key pair name. Only flyer names are supported.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The account and password of the instance.
     */
    password?: pulumi.Input<string>;
    /**
     * Prepaid renewal duration, unit: Month/Year.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of duration of the year-to-month billing method. Value range:
     * - `Year`: Year
     * - `Month` (default): Month
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The region ID. Callable DescribeRegions to get.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    securityEnhancementStrategy?: pulumi.Input<string>;
    /**
     * Security group list
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * System disk specifications. See `systemDisk` below.
     */
    systemDisk?: pulumi.Input<inputs.rds.CustomSystemDisk>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the virtual switch. The zone in which the vSwitch is located must correspond to the zone ID entered in ZoneId.
     *
     * The network type InstanceNetworkType must be VPC.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID  of the resource
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Custom resource.
 */
export interface CustomArgs {
    /**
     * Represents the number of instances created
     */
    amount: pulumi.Input<number>;
    /**
     * Whether to pay automatically. Value range:
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Whether the instance is automatically renewed. Valid values: true/false. The default is false.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Whether to allow joining the ACK cluster. When this parameter is set to `1`, the created instance can be added to the ACK cluster through The `AttachRCInstances` API to efficiently manage container applications.
     */
    createMode?: pulumi.Input<string>;
    /**
     * Data disk See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.rds.CustomDataDisk>[]>;
    /**
     * The ID of the deployment set.
     */
    deploymentSetId?: pulumi.Input<string>;
    /**
     * Instance description. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * Instance configuration type, value range:
     *
     * > **NOTE:**  This parameter does not need to be uploaded, and the system can automatically determine whether to upgrade or downgrade. If you want to upload, please follow the following logic rules.
     * - `Up` (default): upgrade the instance specification. Please ensure that your account balance is sufficient.
     * - `Down`: Downgrade instance specifications. When the instance type set to InstanceType is lower than the current instance type, set Direction = down.
     */
    direction?: pulumi.Input<string>;
    /**
     * Whether to pre-check the operation of creating an instance. Valid values:
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Whether to forcibly release the running instance. Value: true/false
     */
    force?: pulumi.Input<boolean>;
    /**
     * Whether to force shutdown. Value range:
     */
    forceStop?: pulumi.Input<boolean>;
    /**
     * The instance host name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of the image used by the instance.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The Payment type. Currently, only `Prepaid` (package year and month) types are supported.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The type of the created RDS Custom dedicated host instance.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Reserved parameters are not supported.
     */
    ioOptimized?: pulumi.Input<string>;
    /**
     * The key pair name. Only flyer names are supported.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The account and password of the instance.
     */
    password?: pulumi.Input<string>;
    /**
     * Prepaid renewal duration, unit: Month/Year.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of duration of the year-to-month billing method. Value range:
     * - `Year`: Year
     * - `Month` (default): Month
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    securityEnhancementStrategy?: pulumi.Input<string>;
    /**
     * Security group list
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * System disk specifications. See `systemDisk` below.
     */
    systemDisk?: pulumi.Input<inputs.rds.CustomSystemDisk>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the virtual switch. The zone in which the vSwitch is located must correspond to the zone ID entered in ZoneId.
     *
     * The network type InstanceNetworkType must be VPC.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The zone ID  of the resource
     */
    zoneId?: pulumi.Input<string>;
}
