// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a RDS Custom resource.
 *
 * Dedicated RDS User host.
 *
 * For information about RDS Custom and how to use it, see [What is Custom](https://next.api.alibabacloud.com/document/Rds/2014-08-15/RunRCInstances).
 *
 * > **NOTE:** Available since v1.247.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const clusterId = config.get("clusterId") || "c18c40b2b336840e2b2bbf8ab291758e2";
 * const deploymentsetid = config.get("deploymentsetid") || "ds-2ze78ef5kyj9eveue92m";
 * const vswtich_id = config.get("vswtich-id") || "example_vswitch";
 * const vpcName = config.get("vpcName") || "beijing111";
 * const exampleRegionId = config.get("exampleRegionId") || "cn-beijing";
 * const description = config.get("description") || "ran_1-08_rccreatenodepool_api";
 * const exampleZoneId = config.get("exampleZoneId") || "cn-beijing-h";
 * const securitygroupName = config.get("securitygroupName") || "rds_custom_init_sg_cn_beijing";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const vpcId = new alicloud.vpc.Network("vpcId", {vpcName: vpcName});
 * const vSwitchId = new alicloud.vpc.Switch("vSwitchId", {
 *     vpcId: vpcId.id,
 *     zoneId: exampleZoneId,
 *     vswitchName: vswtich_id,
 *     cidrBlock: "172.16.5.0/24",
 * });
 * const securityGroupId = new alicloud.ecs.SecurityGroup("securityGroupId", {
 *     vpcId: vpcId.id,
 *     securityGroupName: securitygroupName,
 * });
 * const deploymentSet = new alicloud.ecs.EcsDeploymentSet("deploymentSet", {});
 * const keyPairName = new alicloud.ecs.EcsKeyPair("KeyPairName", {keyPairName: vSwitchId.id});
 * const defaultCustom = new alicloud.rds.Custom("default", {
 *     amount: 1,
 *     autoRenew: false,
 *     period: 1,
 *     autoPay: true,
 *     instanceType: "mysql.x2.xlarge.6cm",
 *     dataDisks: [{
 *         category: "cloud_essd",
 *         size: 50,
 *         performanceLevel: "PL1",
 *     }],
 *     status: "Running",
 *     securityGroupIds: [securityGroupId.id],
 *     ioOptimized: "optimized",
 *     description: description,
 *     keyPairName: keyPairName.id,
 *     zoneId: exampleZoneId,
 *     instanceChargeType: "Prepaid",
 *     internetMaxBandwidthOut: 0,
 *     imageId: "aliyun_2_1903_x64_20G_alibase_20240628.vhd",
 *     securityEnhancementStrategy: "Active",
 *     periodUnit: "Month",
 *     password: "jingyiTEST@123",
 *     systemDisk: {
 *         size: "40",
 *         category: "cloud_essd",
 *     },
 *     hostName: "1743386110",
 *     createMode: "0",
 *     spotStrategy: "NoSpot",
 *     vswitchId: vSwitchId.id,
 *     supportCase: "eni",
 *     deploymentSetId: deploymentsetid,
 *     dryRun: false,
 * });
 * ```
 *
 * ## Import
 *
 * RDS Custom can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rds/custom:Custom example <id>
 * ```
 */
export class Custom extends pulumi.CustomResource {
    /**
     * Get an existing Custom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomState, opts?: pulumi.CustomResourceOptions): Custom {
        return new Custom(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/custom:Custom';

    /**
     * Returns true if the given object is an instance of Custom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Custom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Custom.__pulumiType;
    }

    /**
     * Represents the number of instances created
     */
    declare public readonly amount: pulumi.Output<number | undefined>;
    /**
     * Whether to pay automatically. Value range:
     */
    declare public readonly autoPay: pulumi.Output<boolean | undefined>;
    /**
     * Whether the instance is automatically renewed. Valid values: true/false. The default is false.
     */
    declare public readonly autoRenew: pulumi.Output<boolean | undefined>;
    /**
     * Reserved parameters are not supported.
     */
    declare public readonly createExtraParam: pulumi.Output<string | undefined>;
    /**
     * Whether to allow joining the ACK cluster. When this parameter is set to `1`, the created instance can be added to the ACK cluster through The `AttachRCInstances` API to efficiently manage container applications.
     */
    declare public readonly createMode: pulumi.Output<string | undefined>;
    /**
     * Data disk See `dataDisk` below.
     */
    declare public readonly dataDisks: pulumi.Output<outputs.rds.CustomDataDisk[] | undefined>;
    /**
     * The ID of the deployment set.
     */
    declare public readonly deploymentSetId: pulumi.Output<string | undefined>;
    /**
     * Instance description. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Instance configuration type, value range:
     *
     * > **NOTE:**  This parameter does not need to be uploaded, and the system can automatically determine whether to upgrade or downgrade. If you want to upload, please follow the following logic rules.
     * - `Up` (default): upgrade the instance specification. Please ensure that your account balance is sufficient.
     * - `Down`: Downgrade instance specifications. When the instance type set to InstanceType is lower than the current instance type, set Direction = down.
     */
    declare public readonly direction: pulumi.Output<string | undefined>;
    /**
     * Whether to pre-check the operation of creating an instance. Valid values:
     */
    declare public readonly dryRun: pulumi.Output<boolean | undefined>;
    /**
     * Whether to forcibly release the running instance. Value: true/false
     */
    declare public readonly force: pulumi.Output<boolean | undefined>;
    /**
     * Whether to force shutdown. Value range:
     */
    declare public readonly forceStop: pulumi.Output<boolean | undefined>;
    /**
     * The instance host name.
     */
    declare public readonly hostName: pulumi.Output<string | undefined>;
    /**
     * The ID of the image used by the instance.
     */
    declare public readonly imageId: pulumi.Output<string | undefined>;
    /**
     * The Payment type. Currently, only `Prepaid` (package year and month) types are supported.
     */
    declare public readonly instanceChargeType: pulumi.Output<string | undefined>;
    /**
     * The type of the created RDS Custom dedicated host instance.
     */
    declare public readonly instanceType: pulumi.Output<string>;
    /**
     * Reserved parameters are not supported.
     */
    declare public readonly internetChargeType: pulumi.Output<string | undefined>;
    /**
     * Reserved parameters are not supported.
     */
    declare public readonly internetMaxBandwidthOut: pulumi.Output<number | undefined>;
    /**
     * Reserved parameters are not supported.
     */
    declare public readonly ioOptimized: pulumi.Output<string | undefined>;
    /**
     * The key pair name. Only flyer names are supported.
     */
    declare public readonly keyPairName: pulumi.Output<string | undefined>;
    /**
     * The account and password of the instance.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Prepaid renewal duration, unit: Month/Year.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * The unit of duration of the year-to-month billing method. Value range:
     * - `Year`: Year
     * - `Month` (default): Month
     */
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    /**
     * The region ID. Callable DescribeRegions to get.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * Reserved parameters are not supported.
     */
    declare public readonly securityEnhancementStrategy: pulumi.Output<string | undefined>;
    /**
     * Security group list
     */
    declare public readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * The bidding strategy for pay-as-you-go instances. This parameter takes effect when the value of `InstanceChargeType` is set to **PostPaid. Value range:
     * - `NoSpot`: normal pay-as-you-go instances.
     * - `SpotAsPriceGo`: The system automatically bids and follows the actual price in the current market.
     *
     * Default value: **NoSpot * *.
     */
    declare public readonly spotStrategy: pulumi.Output<string | undefined>;
    /**
     * The status of the resource
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * Supported scenarios: createMode:supportCase, for example: NATIVE("0", "eni"),RCK("1", "rck"),ACK_EDGE("1", "edge");
     */
    declare public readonly supportCase: pulumi.Output<string | undefined>;
    /**
     * System disk specifications. See `systemDisk` below.
     */
    declare public readonly systemDisk: pulumi.Output<outputs.rds.CustomSystemDisk | undefined>;
    /**
     * The tag of the resource
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the virtual switch. The zone in which the vSwitch is located must correspond to the zone ID entered in ZoneId.
     * The network type InstanceNetworkType must be VPC.
     */
    declare public readonly vswitchId: pulumi.Output<string>;
    /**
     * The zone ID  of the resource
     */
    declare public readonly zoneId: pulumi.Output<string | undefined>;

    /**
     * Create a Custom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomArgs | CustomState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomState | undefined;
            resourceInputs["amount"] = state?.amount;
            resourceInputs["autoPay"] = state?.autoPay;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["createExtraParam"] = state?.createExtraParam;
            resourceInputs["createMode"] = state?.createMode;
            resourceInputs["dataDisks"] = state?.dataDisks;
            resourceInputs["deploymentSetId"] = state?.deploymentSetId;
            resourceInputs["description"] = state?.description;
            resourceInputs["direction"] = state?.direction;
            resourceInputs["dryRun"] = state?.dryRun;
            resourceInputs["force"] = state?.force;
            resourceInputs["forceStop"] = state?.forceStop;
            resourceInputs["hostName"] = state?.hostName;
            resourceInputs["imageId"] = state?.imageId;
            resourceInputs["instanceChargeType"] = state?.instanceChargeType;
            resourceInputs["instanceType"] = state?.instanceType;
            resourceInputs["internetChargeType"] = state?.internetChargeType;
            resourceInputs["internetMaxBandwidthOut"] = state?.internetMaxBandwidthOut;
            resourceInputs["ioOptimized"] = state?.ioOptimized;
            resourceInputs["keyPairName"] = state?.keyPairName;
            resourceInputs["password"] = state?.password;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["securityEnhancementStrategy"] = state?.securityEnhancementStrategy;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["spotStrategy"] = state?.spotStrategy;
            resourceInputs["status"] = state?.status;
            resourceInputs["supportCase"] = state?.supportCase;
            resourceInputs["systemDisk"] = state?.systemDisk;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as CustomArgs | undefined;
            if (args?.instanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["amount"] = args?.amount;
            resourceInputs["autoPay"] = args?.autoPay;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["createExtraParam"] = args?.createExtraParam;
            resourceInputs["createMode"] = args?.createMode;
            resourceInputs["dataDisks"] = args?.dataDisks;
            resourceInputs["deploymentSetId"] = args?.deploymentSetId;
            resourceInputs["description"] = args?.description;
            resourceInputs["direction"] = args?.direction;
            resourceInputs["dryRun"] = args?.dryRun;
            resourceInputs["force"] = args?.force;
            resourceInputs["forceStop"] = args?.forceStop;
            resourceInputs["hostName"] = args?.hostName;
            resourceInputs["imageId"] = args?.imageId;
            resourceInputs["instanceChargeType"] = args?.instanceChargeType;
            resourceInputs["instanceType"] = args?.instanceType;
            resourceInputs["internetChargeType"] = args?.internetChargeType;
            resourceInputs["internetMaxBandwidthOut"] = args?.internetMaxBandwidthOut;
            resourceInputs["ioOptimized"] = args?.ioOptimized;
            resourceInputs["keyPairName"] = args?.keyPairName;
            resourceInputs["password"] = args?.password;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["securityEnhancementStrategy"] = args?.securityEnhancementStrategy;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["spotStrategy"] = args?.spotStrategy;
            resourceInputs["status"] = args?.status;
            resourceInputs["supportCase"] = args?.supportCase;
            resourceInputs["systemDisk"] = args?.systemDisk;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Custom.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Custom resources.
 */
export interface CustomState {
    /**
     * Represents the number of instances created
     */
    amount?: pulumi.Input<number>;
    /**
     * Whether to pay automatically. Value range:
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Whether the instance is automatically renewed. Valid values: true/false. The default is false.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Reserved parameters are not supported.
     */
    createExtraParam?: pulumi.Input<string>;
    /**
     * Whether to allow joining the ACK cluster. When this parameter is set to `1`, the created instance can be added to the ACK cluster through The `AttachRCInstances` API to efficiently manage container applications.
     */
    createMode?: pulumi.Input<string>;
    /**
     * Data disk See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.rds.CustomDataDisk>[]>;
    /**
     * The ID of the deployment set.
     */
    deploymentSetId?: pulumi.Input<string>;
    /**
     * Instance description. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * Instance configuration type, value range:
     *
     * > **NOTE:**  This parameter does not need to be uploaded, and the system can automatically determine whether to upgrade or downgrade. If you want to upload, please follow the following logic rules.
     * - `Up` (default): upgrade the instance specification. Please ensure that your account balance is sufficient.
     * - `Down`: Downgrade instance specifications. When the instance type set to InstanceType is lower than the current instance type, set Direction = down.
     */
    direction?: pulumi.Input<string>;
    /**
     * Whether to pre-check the operation of creating an instance. Valid values:
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Whether to forcibly release the running instance. Value: true/false
     */
    force?: pulumi.Input<boolean>;
    /**
     * Whether to force shutdown. Value range:
     */
    forceStop?: pulumi.Input<boolean>;
    /**
     * The instance host name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of the image used by the instance.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The Payment type. Currently, only `Prepaid` (package year and month) types are supported.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The type of the created RDS Custom dedicated host instance.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Reserved parameters are not supported.
     */
    ioOptimized?: pulumi.Input<string>;
    /**
     * The key pair name. Only flyer names are supported.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The account and password of the instance.
     */
    password?: pulumi.Input<string>;
    /**
     * Prepaid renewal duration, unit: Month/Year.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of duration of the year-to-month billing method. Value range:
     * - `Year`: Year
     * - `Month` (default): Month
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The region ID. Callable DescribeRegions to get.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    securityEnhancementStrategy?: pulumi.Input<string>;
    /**
     * Security group list
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The bidding strategy for pay-as-you-go instances. This parameter takes effect when the value of `InstanceChargeType` is set to **PostPaid. Value range:
     * - `NoSpot`: normal pay-as-you-go instances.
     * - `SpotAsPriceGo`: The system automatically bids and follows the actual price in the current market.
     *
     * Default value: **NoSpot * *.
     */
    spotStrategy?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Supported scenarios: createMode:supportCase, for example: NATIVE("0", "eni"),RCK("1", "rck"),ACK_EDGE("1", "edge");
     */
    supportCase?: pulumi.Input<string>;
    /**
     * System disk specifications. See `systemDisk` below.
     */
    systemDisk?: pulumi.Input<inputs.rds.CustomSystemDisk>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the virtual switch. The zone in which the vSwitch is located must correspond to the zone ID entered in ZoneId.
     * The network type InstanceNetworkType must be VPC.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID  of the resource
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Custom resource.
 */
export interface CustomArgs {
    /**
     * Represents the number of instances created
     */
    amount?: pulumi.Input<number>;
    /**
     * Whether to pay automatically. Value range:
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Whether the instance is automatically renewed. Valid values: true/false. The default is false.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Reserved parameters are not supported.
     */
    createExtraParam?: pulumi.Input<string>;
    /**
     * Whether to allow joining the ACK cluster. When this parameter is set to `1`, the created instance can be added to the ACK cluster through The `AttachRCInstances` API to efficiently manage container applications.
     */
    createMode?: pulumi.Input<string>;
    /**
     * Data disk See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.rds.CustomDataDisk>[]>;
    /**
     * The ID of the deployment set.
     */
    deploymentSetId?: pulumi.Input<string>;
    /**
     * Instance description. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * Instance configuration type, value range:
     *
     * > **NOTE:**  This parameter does not need to be uploaded, and the system can automatically determine whether to upgrade or downgrade. If you want to upload, please follow the following logic rules.
     * - `Up` (default): upgrade the instance specification. Please ensure that your account balance is sufficient.
     * - `Down`: Downgrade instance specifications. When the instance type set to InstanceType is lower than the current instance type, set Direction = down.
     */
    direction?: pulumi.Input<string>;
    /**
     * Whether to pre-check the operation of creating an instance. Valid values:
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Whether to forcibly release the running instance. Value: true/false
     */
    force?: pulumi.Input<boolean>;
    /**
     * Whether to force shutdown. Value range:
     */
    forceStop?: pulumi.Input<boolean>;
    /**
     * The instance host name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of the image used by the instance.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The Payment type. Currently, only `Prepaid` (package year and month) types are supported.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The type of the created RDS Custom dedicated host instance.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Reserved parameters are not supported.
     */
    ioOptimized?: pulumi.Input<string>;
    /**
     * The key pair name. Only flyer names are supported.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The account and password of the instance.
     */
    password?: pulumi.Input<string>;
    /**
     * Prepaid renewal duration, unit: Month/Year.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of duration of the year-to-month billing method. Value range:
     * - `Year`: Year
     * - `Month` (default): Month
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Reserved parameters are not supported.
     */
    securityEnhancementStrategy?: pulumi.Input<string>;
    /**
     * Security group list
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The bidding strategy for pay-as-you-go instances. This parameter takes effect when the value of `InstanceChargeType` is set to **PostPaid. Value range:
     * - `NoSpot`: normal pay-as-you-go instances.
     * - `SpotAsPriceGo`: The system automatically bids and follows the actual price in the current market.
     *
     * Default value: **NoSpot * *.
     */
    spotStrategy?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Supported scenarios: createMode:supportCase, for example: NATIVE("0", "eni"),RCK("1", "rck"),ACK_EDGE("1", "edge");
     */
    supportCase?: pulumi.Input<string>;
    /**
     * System disk specifications. See `systemDisk` below.
     */
    systemDisk?: pulumi.Input<inputs.rds.CustomSystemDisk>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the virtual switch. The zone in which the vSwitch is located must correspond to the zone ID entered in ZoneId.
     * The network type InstanceNetworkType must be VPC.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The zone ID  of the resource
     */
    zoneId?: pulumi.Input<string>;
}
