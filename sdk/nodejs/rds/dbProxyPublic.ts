// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RDS database proxy public network address resource.
 *
 * For information about Resource AlicloudRdsDBProxyPublic and how to use it, see [What is proxy](https://www.alibabacloud.com/help/en/rds/developer-reference/api-rds-2014-08-15-createdbproxyendpointaddress).
 *
 * > **NOTE:** Available since v1.250.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.rds.getZones({
 *     engine: "MySQL",
 *     engineVersion: "5.6",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     vswitchName: name,
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultInstance = new alicloud.rds.Instance("default", {
 *     engine: "MySQL",
 *     engineVersion: "5.7",
 *     instanceType: "rds.mysql.c1.large",
 *     instanceStorage: 20,
 *     instanceChargeType: "Postpaid",
 *     instanceName: name,
 *     vswitchId: defaultSwitch.id,
 *     dbInstanceStorageType: "local_ssd",
 * });
 * const defaultReadOnlyInstance = new alicloud.rds.ReadOnlyInstance("default", {
 *     zoneId: defaultInstance.zoneId,
 *     masterDbInstanceId: defaultInstance.id,
 *     engineVersion: defaultInstance.engineVersion,
 *     instanceStorage: defaultInstance.instanceStorage,
 *     instanceType: defaultInstance.instanceType,
 *     instanceName: `${name}readonly`,
 *     vswitchId: defaultSwitch.id,
 * });
 * const defaultRdsDbProxy = new alicloud.rds.RdsDbProxy("default", {
 *     instanceId: defaultInstance.id,
 *     instanceNetworkType: "VPC",
 *     vpcId: defaultInstance.vpcId,
 *     vswitchId: defaultInstance.vswitchId,
 *     dbProxyInstanceNum: 2,
 *     dbProxyConnectionPrefix: "example",
 *     dbProxyConnectStringPort: 3306,
 *     dbProxyEndpointReadWriteMode: "ReadWrite",
 *     readOnlyInstanceMaxDelayTime: 90,
 *     dbProxyFeatures: "TransactionReadSqlRouteOptimizeStatus:1;ConnectionPersist:1;ReadWriteSpliting:1",
 *     readOnlyInstanceDistributionType: "Custom",
 *     readOnlyInstanceWeights: [
 *         {
 *             instanceId: defaultInstance.id,
 *             weight: "100",
 *         },
 *         {
 *             instanceId: defaultReadOnlyInstance.id,
 *             weight: "500",
 *         },
 *     ],
 * });
 * const defaultDbProxyPublic = new alicloud.rds.DbProxyPublic("default", {
 *     dbInstanceId: defaultInstance.id,
 *     dbProxyEndpointId: defaultRdsDbProxy.dbProxyEndpointId,
 *     connectionStringPrefix: "exampleabc",
 *     dbProxyConnectionStringNetType: "Public",
 *     dbProxyNewConnectStringPort: "3306",
 * });
 * ```
 *
 * > **NOTE:** Resource `alicloud.rds.DbProxyPublic` should be created after `alicloud.rds.RdsDbProxy`, so the `dependsOn` statement is necessary.
 *
 * ## Import
 *
 * RDS Database Proxy Public Network Address can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rds/dbProxyPublic:DbProxyPublic example <id>
 * ```
 */
export class DbProxyPublic extends pulumi.CustomResource {
    /**
     * Get an existing DbProxyPublic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbProxyPublicState, opts?: pulumi.CustomResourceOptions): DbProxyPublic {
        return new DbProxyPublic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/dbProxyPublic:DbProxyPublic';

    /**
     * Returns true if the given object is an instance of DbProxyPublic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbProxyPublic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbProxyPublic.__pulumiType;
    }

    /**
     * The prefix for the new database proxy connection address can be customized.
     */
    public readonly connectionStringPrefix!: pulumi.Output<string>;
    /**
     * Instance ID.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * The network type of the new database proxy connection address,This resource defaults to Public.
     */
    public readonly dbProxyConnectionStringNetType!: pulumi.Output<string>;
    /**
     * Database proxy connection address ID.
     */
    public readonly dbProxyEndpointId!: pulumi.Output<string>;
    /**
     * The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
     */
    public readonly dbProxyNewConnectStringPort!: pulumi.Output<string>;

    /**
     * Create a DbProxyPublic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbProxyPublicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbProxyPublicArgs | DbProxyPublicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbProxyPublicState | undefined;
            resourceInputs["connectionStringPrefix"] = state ? state.connectionStringPrefix : undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["dbProxyConnectionStringNetType"] = state ? state.dbProxyConnectionStringNetType : undefined;
            resourceInputs["dbProxyEndpointId"] = state ? state.dbProxyEndpointId : undefined;
            resourceInputs["dbProxyNewConnectStringPort"] = state ? state.dbProxyNewConnectStringPort : undefined;
        } else {
            const args = argsOrState as DbProxyPublicArgs | undefined;
            if ((!args || args.connectionStringPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionStringPrefix'");
            }
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if ((!args || args.dbProxyConnectionStringNetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbProxyConnectionStringNetType'");
            }
            if ((!args || args.dbProxyEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbProxyEndpointId'");
            }
            resourceInputs["connectionStringPrefix"] = args ? args.connectionStringPrefix : undefined;
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["dbProxyConnectionStringNetType"] = args ? args.dbProxyConnectionStringNetType : undefined;
            resourceInputs["dbProxyEndpointId"] = args ? args.dbProxyEndpointId : undefined;
            resourceInputs["dbProxyNewConnectStringPort"] = args ? args.dbProxyNewConnectStringPort : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DbProxyPublic.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DbProxyPublic resources.
 */
export interface DbProxyPublicState {
    /**
     * The prefix for the new database proxy connection address can be customized.
     */
    connectionStringPrefix?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * The network type of the new database proxy connection address,This resource defaults to Public.
     */
    dbProxyConnectionStringNetType?: pulumi.Input<string>;
    /**
     * Database proxy connection address ID.
     */
    dbProxyEndpointId?: pulumi.Input<string>;
    /**
     * The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
     */
    dbProxyNewConnectStringPort?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DbProxyPublic resource.
 */
export interface DbProxyPublicArgs {
    /**
     * The prefix for the new database proxy connection address can be customized.
     */
    connectionStringPrefix: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * The network type of the new database proxy connection address,This resource defaults to Public.
     */
    dbProxyConnectionStringNetType: pulumi.Input<string>;
    /**
     * Database proxy connection address ID.
     */
    dbProxyEndpointId: pulumi.Input<string>;
    /**
     * The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
     */
    dbProxyNewConnectStringPort?: pulumi.Input<string>;
}
