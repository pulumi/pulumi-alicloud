// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an RDS instance emote disaster recovery strategy policy resource and used to configure instance emote disaster recovery strategy policy.
 *
 * For information about RDS cross region backup settings and how to use them, see [What is cross region backup](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/modify-cross-region-backup-settings).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultZones = alicloud.rds.getZones({
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     dbInstanceStorageType: "local_ssd",
 *     category: "HighAvailability",
 * });
 * const defaultInstanceClasses = defaultZones.then(defaultZones => alicloud.rds.getInstanceClasses({
 *     zoneId: defaultZones.ids?.[0],
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     dbInstanceStorageType: "local_ssd",
 *     category: "HighAvailability",
 * }));
 * const regions = alicloud.rds.getCrossRegions({});
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: name,
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: defaultZones.then(defaultZones => defaultZones.ids?.[0]),
 *     vswitchName: name,
 * });
 * const defaultInstance = new alicloud.rds.Instance("defaultInstance", {
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     instanceType: defaultInstanceClasses.then(defaultInstanceClasses => defaultInstanceClasses.instanceClasses?.[0]?.instanceClass),
 *     instanceStorage: defaultInstanceClasses.then(defaultInstanceClasses => defaultInstanceClasses.instanceClasses?.[0]?.storageRange?.min),
 *     instanceChargeType: "Postpaid",
 *     category: "HighAvailability",
 *     instanceName: name,
 *     vswitchId: defaultSwitch.id,
 *     dbInstanceStorageType: "local_ssd",
 * });
 * const defaultRdsInstanceCrossBackupPolicy = new alicloud.rds.RdsInstanceCrossBackupPolicy("defaultRdsInstanceCrossBackupPolicy", {
 *     instanceId: defaultInstance.id,
 *     crossBackupRegion: regions.then(regions => regions.ids?.[0]),
 * });
 * ```
 *
 * ## Import
 *
 * RDS remote disaster recovery policies can be imported using id or instance id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy example "rm-12345678"
 * ```
 */
export class RdsInstanceCrossBackupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing RdsInstanceCrossBackupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsInstanceCrossBackupPolicyState, opts?: pulumi.CustomResourceOptions): RdsInstanceCrossBackupPolicy {
        return new RdsInstanceCrossBackupPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy';

    /**
     * Returns true if the given object is an instance of RdsInstanceCrossBackupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsInstanceCrossBackupPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsInstanceCrossBackupPolicy.__pulumiType;
    }

    /**
     * The status of the overall cross-region backup switch on the instance. Valid values:
     * - Disabled
     * - Enable
     */
    public /*out*/ readonly backupEnabled!: pulumi.Output<string>;
    /**
     * The time when cross-region backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    public /*out*/ readonly backupEnabledTime!: pulumi.Output<string>;
    /**
     * The ID of the destination region where the cross-region backup files of the instance are stored.
     */
    public readonly crossBackupRegion!: pulumi.Output<string>;
    /**
     * The policy that is used to save cross-region backups of the instance. Default value: 1. The default value 1 indicates that all cross-region backups are saved.
     */
    public /*out*/ readonly crossBackupType!: pulumi.Output<string>;
    /**
     * The state of the instance. For more information, see Instance status.
     */
    public /*out*/ readonly dbInstanceStatus!: pulumi.Output<string>;
    /**
     * The ID of the instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The lock status of the instance. Valid values:
     * - Unlock: The instance is not locked.
     * - ManualLock: The instance is manually locked.
     * - LockByExpiration: The instance is locked upon expiration.
     * - LockByRestoration: The instance is automatically locked before a rollback.
     * - LockByDiskQuota: The instance is automatically locked because its storage space is exhausted. In this situation, the instance is inaccessible.
     */
    public /*out*/ readonly lockMode!: pulumi.Output<string>;
    /**
     * The status of the cross-region log backup feature on the instance. Valid values:
     * - Enable: Enables the feature.
     * - Disabled: Disables the feature.
     */
    public readonly logBackupEnabled!: pulumi.Output<string>;
    /**
     * The time when cross-region log backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    public /*out*/ readonly logBackupEnabledTime!: pulumi.Output<string>;
    /**
     * The policy that is used to retain cross-region backups of the instance. Default value: 1. The default value 1 indicate that cross-region backups are retained based on the specified retention period.
     */
    public /*out*/ readonly retentType!: pulumi.Output<string>;
    /**
     * The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
     */
    public readonly retention!: pulumi.Output<number>;

    /**
     * Create a RdsInstanceCrossBackupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RdsInstanceCrossBackupPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsInstanceCrossBackupPolicyArgs | RdsInstanceCrossBackupPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsInstanceCrossBackupPolicyState | undefined;
            resourceInputs["backupEnabled"] = state ? state.backupEnabled : undefined;
            resourceInputs["backupEnabledTime"] = state ? state.backupEnabledTime : undefined;
            resourceInputs["crossBackupRegion"] = state ? state.crossBackupRegion : undefined;
            resourceInputs["crossBackupType"] = state ? state.crossBackupType : undefined;
            resourceInputs["dbInstanceStatus"] = state ? state.dbInstanceStatus : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["lockMode"] = state ? state.lockMode : undefined;
            resourceInputs["logBackupEnabled"] = state ? state.logBackupEnabled : undefined;
            resourceInputs["logBackupEnabledTime"] = state ? state.logBackupEnabledTime : undefined;
            resourceInputs["retentType"] = state ? state.retentType : undefined;
            resourceInputs["retention"] = state ? state.retention : undefined;
        } else {
            const args = argsOrState as RdsInstanceCrossBackupPolicyArgs | undefined;
            if ((!args || args.crossBackupRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'crossBackupRegion'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["crossBackupRegion"] = args ? args.crossBackupRegion : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["logBackupEnabled"] = args ? args.logBackupEnabled : undefined;
            resourceInputs["retention"] = args ? args.retention : undefined;
            resourceInputs["backupEnabled"] = undefined /*out*/;
            resourceInputs["backupEnabledTime"] = undefined /*out*/;
            resourceInputs["crossBackupType"] = undefined /*out*/;
            resourceInputs["dbInstanceStatus"] = undefined /*out*/;
            resourceInputs["lockMode"] = undefined /*out*/;
            resourceInputs["logBackupEnabledTime"] = undefined /*out*/;
            resourceInputs["retentType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RdsInstanceCrossBackupPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsInstanceCrossBackupPolicy resources.
 */
export interface RdsInstanceCrossBackupPolicyState {
    /**
     * The status of the overall cross-region backup switch on the instance. Valid values:
     * - Disabled
     * - Enable
     */
    backupEnabled?: pulumi.Input<string>;
    /**
     * The time when cross-region backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    backupEnabledTime?: pulumi.Input<string>;
    /**
     * The ID of the destination region where the cross-region backup files of the instance are stored.
     */
    crossBackupRegion?: pulumi.Input<string>;
    /**
     * The policy that is used to save cross-region backups of the instance. Default value: 1. The default value 1 indicates that all cross-region backups are saved.
     */
    crossBackupType?: pulumi.Input<string>;
    /**
     * The state of the instance. For more information, see Instance status.
     */
    dbInstanceStatus?: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The lock status of the instance. Valid values:
     * - Unlock: The instance is not locked.
     * - ManualLock: The instance is manually locked.
     * - LockByExpiration: The instance is locked upon expiration.
     * - LockByRestoration: The instance is automatically locked before a rollback.
     * - LockByDiskQuota: The instance is automatically locked because its storage space is exhausted. In this situation, the instance is inaccessible.
     */
    lockMode?: pulumi.Input<string>;
    /**
     * The status of the cross-region log backup feature on the instance. Valid values:
     * - Enable: Enables the feature.
     * - Disabled: Disables the feature.
     */
    logBackupEnabled?: pulumi.Input<string>;
    /**
     * The time when cross-region log backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    logBackupEnabledTime?: pulumi.Input<string>;
    /**
     * The policy that is used to retain cross-region backups of the instance. Default value: 1. The default value 1 indicate that cross-region backups are retained based on the specified retention period.
     */
    retentType?: pulumi.Input<string>;
    /**
     * The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
     */
    retention?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RdsInstanceCrossBackupPolicy resource.
 */
export interface RdsInstanceCrossBackupPolicyArgs {
    /**
     * The ID of the destination region where the cross-region backup files of the instance are stored.
     */
    crossBackupRegion: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The status of the cross-region log backup feature on the instance. Valid values:
     * - Enable: Enables the feature.
     * - Disabled: Disables the feature.
     */
    logBackupEnabled?: pulumi.Input<string>;
    /**
     * The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
     */
    retention?: pulumi.Input<number>;
}
