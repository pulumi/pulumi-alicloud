// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provide RDS cluster instance endpoint public connection resources.
 *
 * Information about RDS MySQL cluster endpoint address and how to use it, see [What is RDS DB Instance Endpoint Address](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/api-rds-2014-08-15-createdbinstanceendpointaddress).
 *
 * > **NOTE:** Available since v1.204.0.
 *
 * ## Import
 *
 * RDS database endpoint public address feature can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:rds/dbInstanceEndpointAddress:DbInstanceEndpointAddress example <db_instance_id>:<db_instance_endpoint_id>
 * ```
 */
export class DbInstanceEndpointAddress extends pulumi.CustomResource {
    /**
     * Get an existing DbInstanceEndpointAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbInstanceEndpointAddressState, opts?: pulumi.CustomResourceOptions): DbInstanceEndpointAddress {
        return new DbInstanceEndpointAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/dbInstanceEndpointAddress:DbInstanceEndpointAddress';

    /**
     * Returns true if the given object is an instance of DbInstanceEndpointAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbInstanceEndpointAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbInstanceEndpointAddress.__pulumiType;
    }

    /**
     * The endpoint of the instance.
     */
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    /**
     * The prefix of the public endpoint.
     */
    public readonly connectionStringPrefix!: pulumi.Output<string>;
    /**
     * The Endpoint ID of the instance.
     */
    public readonly dbInstanceEndpointId!: pulumi.Output<string>;
    /**
     * The ID of the instance.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * The IP address of the endpoint.
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * The type of the IP address.
     */
    public /*out*/ readonly ipType!: pulumi.Output<string>;
    /**
     * The port number of the public endpoint.
     */
    public readonly port!: pulumi.Output<string>;

    /**
     * Create a DbInstanceEndpointAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbInstanceEndpointAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbInstanceEndpointAddressArgs | DbInstanceEndpointAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbInstanceEndpointAddressState | undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["connectionStringPrefix"] = state ? state.connectionStringPrefix : undefined;
            resourceInputs["dbInstanceEndpointId"] = state ? state.dbInstanceEndpointId : undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipType"] = state ? state.ipType : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
        } else {
            const args = argsOrState as DbInstanceEndpointAddressArgs | undefined;
            if ((!args || args.connectionStringPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionStringPrefix'");
            }
            if ((!args || args.dbInstanceEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceEndpointId'");
            }
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            resourceInputs["connectionStringPrefix"] = args ? args.connectionStringPrefix : undefined;
            resourceInputs["dbInstanceEndpointId"] = args ? args.dbInstanceEndpointId : undefined;
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["ipType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DbInstanceEndpointAddress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DbInstanceEndpointAddress resources.
 */
export interface DbInstanceEndpointAddressState {
    /**
     * The endpoint of the instance.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The prefix of the public endpoint.
     */
    connectionStringPrefix?: pulumi.Input<string>;
    /**
     * The Endpoint ID of the instance.
     */
    dbInstanceEndpointId?: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * The IP address of the endpoint.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The type of the IP address.
     */
    ipType?: pulumi.Input<string>;
    /**
     * The port number of the public endpoint.
     */
    port?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DbInstanceEndpointAddress resource.
 */
export interface DbInstanceEndpointAddressArgs {
    /**
     * The prefix of the public endpoint.
     */
    connectionStringPrefix: pulumi.Input<string>;
    /**
     * The Endpoint ID of the instance.
     */
    dbInstanceEndpointId: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * The port number of the public endpoint.
     */
    port: pulumi.Input<string>;
}
