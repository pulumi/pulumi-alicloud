// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source is the character set supported by querying RDS instances.
 *
 * > **NOTE:** Available in v1.198.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const names = alicloud.rds.getCharacterSetNames({
 *     engine: "MySQL",
 * });
 * export const firstRdsCharacterSetNames = names.then(names => names.names?.[0]);
 * ```
 */
export function getCharacterSetNames(args: GetCharacterSetNamesArgs, opts?: pulumi.InvokeOptions): Promise<GetCharacterSetNamesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:rds/getCharacterSetNames:getCharacterSetNames", {
        "engine": args.engine,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getCharacterSetNames.
 */
export interface GetCharacterSetNamesArgs {
    /**
     * Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL`, `MariaDB`.
     */
    engine: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getCharacterSetNames.
 */
export interface GetCharacterSetNamesResult {
    readonly engine: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names: string[];
    readonly outputFile?: string;
}
/**
 * This data source is the character set supported by querying RDS instances.
 *
 * > **NOTE:** Available in v1.198.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const names = alicloud.rds.getCharacterSetNames({
 *     engine: "MySQL",
 * });
 * export const firstRdsCharacterSetNames = names.then(names => names.names?.[0]);
 * ```
 */
export function getCharacterSetNamesOutput(args: GetCharacterSetNamesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCharacterSetNamesResult> {
    return pulumi.output(args).apply((a: any) => getCharacterSetNames(a, opts))
}

/**
 * A collection of arguments for invoking getCharacterSetNames.
 */
export interface GetCharacterSetNamesOutputArgs {
    /**
     * Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL`, `MariaDB`.
     */
    engine: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
