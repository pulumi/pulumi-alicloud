// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RDS Custom Deployment Set resource.
 *
 * Custom Deployment set.
 *
 * For information about RDS Custom Deployment Set and how to use it, see [What is Custom Deployment Set](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.235.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.rds.CustomDeploymentSet("default", {
 *     onUnableToRedeployFailedInstance: "CancelMembershipAndStart",
 *     customDeploymentSetName: name,
 *     description: "2024:11:19 1010:1111:0808",
 *     groupCount: 3,
 *     strategy: "Availability",
 * });
 * ```
 *
 * ## Import
 *
 * RDS Custom Deployment Set can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rds/customDeploymentSet:CustomDeploymentSet example <id>
 * ```
 */
export class CustomDeploymentSet extends pulumi.CustomResource {
    /**
     * Get an existing CustomDeploymentSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDeploymentSetState, opts?: pulumi.CustomResourceOptions): CustomDeploymentSet {
        return new CustomDeploymentSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/customDeploymentSet:CustomDeploymentSet';

    /**
     * Returns true if the given object is an instance of CustomDeploymentSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomDeploymentSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomDeploymentSet.__pulumiType;
    }

    /**
     * The name of the resource
     */
    public readonly customDeploymentSetName!: pulumi.Output<string | undefined>;
    /**
     * Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
     *
     * Default value: 3
     *
     * > **NOTE:**  This parameter takes effect only when 'Strategy = AvailabilityGroup.
     */
    public readonly groupCount!: pulumi.Output<number | undefined>;
    /**
     * After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
     * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
     * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
     *
     * Default value: CancelMembershipAndStart.
     */
    public readonly onUnableToRedeployFailedInstance!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Deployment strategy. Value range:
     * - `Availability`: High Availability policy.
     * - `AvailabilityGroup`: the high availability policy of the deployment set group.
     * - `LowLatency`: Network low latency policy.
     *
     * Default value: Availability.
     */
    public readonly strategy!: pulumi.Output<string>;

    /**
     * Create a CustomDeploymentSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CustomDeploymentSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomDeploymentSetArgs | CustomDeploymentSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomDeploymentSetState | undefined;
            resourceInputs["customDeploymentSetName"] = state ? state.customDeploymentSetName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["groupCount"] = state ? state.groupCount : undefined;
            resourceInputs["onUnableToRedeployFailedInstance"] = state ? state.onUnableToRedeployFailedInstance : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["strategy"] = state ? state.strategy : undefined;
        } else {
            const args = argsOrState as CustomDeploymentSetArgs | undefined;
            resourceInputs["customDeploymentSetName"] = args ? args.customDeploymentSetName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["groupCount"] = args ? args.groupCount : undefined;
            resourceInputs["onUnableToRedeployFailedInstance"] = args ? args.onUnableToRedeployFailedInstance : undefined;
            resourceInputs["strategy"] = args ? args.strategy : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomDeploymentSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomDeploymentSet resources.
 */
export interface CustomDeploymentSetState {
    /**
     * The name of the resource
     */
    customDeploymentSetName?: pulumi.Input<string>;
    /**
     * Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
     *
     * Default value: 3
     *
     * > **NOTE:**  This parameter takes effect only when 'Strategy = AvailabilityGroup.
     */
    groupCount?: pulumi.Input<number>;
    /**
     * After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
     * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
     * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
     *
     * Default value: CancelMembershipAndStart.
     */
    onUnableToRedeployFailedInstance?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Deployment strategy. Value range:
     * - `Availability`: High Availability policy.
     * - `AvailabilityGroup`: the high availability policy of the deployment set group.
     * - `LowLatency`: Network low latency policy.
     *
     * Default value: Availability.
     */
    strategy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomDeploymentSet resource.
 */
export interface CustomDeploymentSetArgs {
    /**
     * The name of the resource
     */
    customDeploymentSetName?: pulumi.Input<string>;
    /**
     * Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
     *
     * Default value: 3
     *
     * > **NOTE:**  This parameter takes effect only when 'Strategy = AvailabilityGroup.
     */
    groupCount?: pulumi.Input<number>;
    /**
     * After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
     * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
     * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
     *
     * Default value: CancelMembershipAndStart.
     */
    onUnableToRedeployFailedInstance?: pulumi.Input<string>;
    /**
     * Deployment strategy. Value range:
     * - `Availability`: High Availability policy.
     * - `AvailabilityGroup`: the high availability policy of the deployment set group.
     * - `LowLatency`: Network low latency policy.
     *
     * Default value: Availability.
     */
    strategy?: pulumi.Input<string>;
}
