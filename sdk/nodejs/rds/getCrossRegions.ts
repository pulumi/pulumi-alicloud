// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides an available area for remote disaster recovery for RDS.
 *
 * > **NOTE:** Available in v1.193.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const crossRegions = alicloud.rds.getCrossRegions({});
 * export const firstRdsCrossRegions = data.alicloud_rds_cross_regions.regions.ids[0];
 * ```
 */
export function getCrossRegions(args?: GetCrossRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCrossRegionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:rds/getCrossRegions:getCrossRegions", {
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getCrossRegions.
 */
export interface GetCrossRegionsArgs {
    outputFile?: string;
}

/**
 * A collection of values returned by getCrossRegions.
 */
export interface GetCrossRegionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of region IDs.
     */
    readonly ids: string[];
    readonly outputFile?: string;
    /**
     * The list of destination regions that support cross-region backup. Each element contains the following attributes:
     */
    readonly regions: outputs.rds.GetCrossRegionsRegion[];
}
/**
 * This data source provides an available area for remote disaster recovery for RDS.
 *
 * > **NOTE:** Available in v1.193.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const crossRegions = alicloud.rds.getCrossRegions({});
 * export const firstRdsCrossRegions = data.alicloud_rds_cross_regions.regions.ids[0];
 * ```
 */
export function getCrossRegionsOutput(args?: GetCrossRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCrossRegionsResult> {
    return pulumi.output(args).apply((a: any) => getCrossRegions(a, opts))
}

/**
 * A collection of arguments for invoking getCrossRegions.
 */
export interface GetCrossRegionsOutputArgs {
    outputFile?: pulumi.Input<string>;
}
