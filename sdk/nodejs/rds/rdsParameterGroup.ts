// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a RDS Parameter Group resource.
 *
 * For information about RDS Parameter Group and how to use it, see [What is Parameter Group](https://www.alibabacloud.com/help/en/doc-detail/144839.htm).
 *
 * > **NOTE:** Available in v1.119.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultRdsParameterGroup = new alicloud.rds.RdsParameterGroup("default", {
 *     engine: "mysql",
 *     engineVersion: "5.7",
 *     paramDetails: [
 *         {
 *             paramName: "back_log",
 *             paramValue: "4000",
 *         },
 *         {
 *             paramName: "wait_timeout",
 *             paramValue: "86460",
 *         },
 *     ],
 *     parameterGroupDesc: "test",
 *     parameterGroupName: "test1234",
 * });
 * ```
 *
 * ## Import
 *
 * RDS Parameter Group can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:rds/rdsParameterGroup:RdsParameterGroup example <id>
 * ```
 */
export class RdsParameterGroup extends pulumi.CustomResource {
    /**
     * Get an existing RdsParameterGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsParameterGroupState, opts?: pulumi.CustomResourceOptions): RdsParameterGroup {
        return new RdsParameterGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/rdsParameterGroup:RdsParameterGroup';

    /**
     * Returns true if the given object is an instance of RdsParameterGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsParameterGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsParameterGroup.__pulumiType;
    }

    /**
     * The database engine. Valid values: `mysql`, `mariadb`.
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * The version of the database engine. Valid values: mysql: `5.1`, `5.5`, `5.6`, `5.7`, `8.0`; mariadb: `10.3`.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * Parameter list.
     */
    public readonly paramDetails!: pulumi.Output<outputs.rds.RdsParameterGroupParamDetail[]>;
    /**
     * The description of the parameter template.
     */
    public readonly parameterGroupDesc!: pulumi.Output<string | undefined>;
    /**
     * The name of the parameter template.
     */
    public readonly parameterGroupName!: pulumi.Output<string>;

    /**
     * Create a RdsParameterGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RdsParameterGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsParameterGroupArgs | RdsParameterGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsParameterGroupState | undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["paramDetails"] = state ? state.paramDetails : undefined;
            resourceInputs["parameterGroupDesc"] = state ? state.parameterGroupDesc : undefined;
            resourceInputs["parameterGroupName"] = state ? state.parameterGroupName : undefined;
        } else {
            const args = argsOrState as RdsParameterGroupArgs | undefined;
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.engineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if ((!args || args.paramDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paramDetails'");
            }
            if ((!args || args.parameterGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameterGroupName'");
            }
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["paramDetails"] = args ? args.paramDetails : undefined;
            resourceInputs["parameterGroupDesc"] = args ? args.parameterGroupDesc : undefined;
            resourceInputs["parameterGroupName"] = args ? args.parameterGroupName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RdsParameterGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsParameterGroup resources.
 */
export interface RdsParameterGroupState {
    /**
     * The database engine. Valid values: `mysql`, `mariadb`.
     */
    engine?: pulumi.Input<string>;
    /**
     * The version of the database engine. Valid values: mysql: `5.1`, `5.5`, `5.6`, `5.7`, `8.0`; mariadb: `10.3`.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Parameter list.
     */
    paramDetails?: pulumi.Input<pulumi.Input<inputs.rds.RdsParameterGroupParamDetail>[]>;
    /**
     * The description of the parameter template.
     */
    parameterGroupDesc?: pulumi.Input<string>;
    /**
     * The name of the parameter template.
     */
    parameterGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RdsParameterGroup resource.
 */
export interface RdsParameterGroupArgs {
    /**
     * The database engine. Valid values: `mysql`, `mariadb`.
     */
    engine: pulumi.Input<string>;
    /**
     * The version of the database engine. Valid values: mysql: `5.1`, `5.5`, `5.6`, `5.7`, `8.0`; mariadb: `10.3`.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * Parameter list.
     */
    paramDetails: pulumi.Input<pulumi.Input<inputs.rds.RdsParameterGroupParamDetail>[]>;
    /**
     * The description of the parameter template.
     */
    parameterGroupDesc?: pulumi.Input<string>;
    /**
     * The name of the parameter template.
     */
    parameterGroupName: pulumi.Input<string>;
}
