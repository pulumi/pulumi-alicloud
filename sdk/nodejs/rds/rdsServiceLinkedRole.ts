// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RDS Service Linked Role.
 *
 * For information about RDS Service Linked Role and how to use it, see [What is Service Linked Role.](https://www.alibabacloud.com/help/en/doc-detail/171226.htm).
 *
 * > **NOTE:** Available since v1.189.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.rds.RdsServiceLinkedRole("default", {serviceName: "AliyunServiceRoleForRdsPgsqlOnEcs"});
 * ```
 *
 * ## Import
 *
 * RDS Service Linked Role can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rds/rdsServiceLinkedRole:RdsServiceLinkedRole default <service_name>
 * ```
 */
export class RdsServiceLinkedRole extends pulumi.CustomResource {
    /**
     * Get an existing RdsServiceLinkedRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsServiceLinkedRoleState, opts?: pulumi.CustomResourceOptions): RdsServiceLinkedRole {
        return new RdsServiceLinkedRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/rdsServiceLinkedRole:RdsServiceLinkedRole';

    /**
     * Returns true if the given object is an instance of RdsServiceLinkedRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsServiceLinkedRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsServiceLinkedRole.__pulumiType;
    }

    /**
     * The Alibaba Cloud Resource Name (ARN) of the role.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The ID of the role.
     */
    public /*out*/ readonly roleId!: pulumi.Output<string>;
    /**
     * The name of the role.
     */
    public /*out*/ readonly roleName!: pulumi.Output<string>;
    /**
     * The product name for SLR. RDS can automatically create the following service-linked roles: `AliyunServiceRoleForRdsPgsqlOnEcs`, `AliyunServiceRoleForRDSProxyOnEcs`.
     */
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a RdsServiceLinkedRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RdsServiceLinkedRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsServiceLinkedRoleArgs | RdsServiceLinkedRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsServiceLinkedRoleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as RdsServiceLinkedRoleArgs | undefined;
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["roleId"] = undefined /*out*/;
            resourceInputs["roleName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RdsServiceLinkedRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsServiceLinkedRole resources.
 */
export interface RdsServiceLinkedRoleState {
    /**
     * The Alibaba Cloud Resource Name (ARN) of the role.
     */
    arn?: pulumi.Input<string>;
    /**
     * The ID of the role.
     */
    roleId?: pulumi.Input<string>;
    /**
     * The name of the role.
     */
    roleName?: pulumi.Input<string>;
    /**
     * The product name for SLR. RDS can automatically create the following service-linked roles: `AliyunServiceRoleForRdsPgsqlOnEcs`, `AliyunServiceRoleForRDSProxyOnEcs`.
     */
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RdsServiceLinkedRole resource.
 */
export interface RdsServiceLinkedRoleArgs {
    /**
     * The product name for SLR. RDS can automatically create the following service-linked roles: `AliyunServiceRoleForRdsPgsqlOnEcs`, `AliyunServiceRoleForRDSProxyOnEcs`.
     */
    serviceName: pulumi.Input<string>;
}
