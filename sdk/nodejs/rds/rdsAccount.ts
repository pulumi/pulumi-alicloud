// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RDS Account resource.
 *
 * For information about RDS Account and how to use it, see [What is Account](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/api-rds-2014-08-15-createaccount).
 *
 * > **NOTE:** Available since v1.120.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const _default = alicloud.rds.getZones({
 *     engine: "MySQL",
 *     engineVersion: "5.6",
 * });
 * const defaultGetInstanceClasses = _default.then(_default => alicloud.rds.getInstanceClasses({
 *     zoneId: _default.ids?.[0],
 *     engine: "MySQL",
 *     engineVersion: "5.6",
 * }));
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _default.then(_default => _default.ids?.[0]),
 *     vswitchName: name,
 * });
 * const defaultInstance = new alicloud.rds.Instance("default", {
 *     engine: "MySQL",
 *     engineVersion: "5.6",
 *     instanceType: defaultGetInstanceClasses.then(defaultGetInstanceClasses => defaultGetInstanceClasses.instanceClasses?.[1]?.instanceClass),
 *     instanceStorage: 10,
 *     vswitchId: defaultSwitch.id,
 *     instanceName: name,
 * });
 * const defaultRdsAccount = new alicloud.rds.RdsAccount("default", {
 *     dbInstanceId: defaultInstance.id,
 *     accountName: name,
 *     accountPassword: "Example1234",
 * });
 * ```
 *
 * ## Import
 *
 * RDS Account can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rds/rdsAccount:RdsAccount example <db_instance_id>:<account_name>
 * ```
 */
export class RdsAccount extends pulumi.CustomResource {
    /**
     * Get an existing RdsAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsAccountState, opts?: pulumi.CustomResourceOptions): RdsAccount {
        return new RdsAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rds/rdsAccount:RdsAccount';

    /**
     * Returns true if the given object is an instance of RdsAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsAccount.__pulumiType;
    }

    /**
     * The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
     *
     * > **NOTE:** The name cannot start with http:// or https://.
     */
    public readonly accountDescription!: pulumi.Output<string>;
    /**
     * The name of the database account.
     * * The name must be unique.
     * * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
     * * The name must start with a letter and end with a letter or digit.
     * * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
     * * The length of the value must meet the following requirements:
     * * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
     * * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
     * * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
     * * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
     * * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
     * * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
     * * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * The password of the account.
     * * The value must be 8 to 32 characters in length.
     * * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
     * * Special characters include ! @ # $ % ^ & * ( ) _ + - =
     */
    public readonly accountPassword!: pulumi.Output<string>;
    /**
     * The account type. Valid values:
     * * Normal: standard account (default).
     * * Super: privileged account.
     * * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
     *
     * > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
     */
    public readonly accountType!: pulumi.Output<string>;
    /**
     * The ID of the instance.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
     *
     * @deprecated Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
     *
     * @deprecated Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
     */
    public readonly kmsEncryptedPassword!: pulumi.Output<string | undefined>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    public readonly kmsEncryptionContext!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountName` instead.
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
     *
     * @deprecated Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
     */
    public readonly resetPermissionFlag!: pulumi.Output<boolean | undefined>;
    /**
     * The status of the resource. Valid values: `Available`, `Unavailable`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountType` instead.
     *
     * > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
     *
     * @deprecated Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a RdsAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RdsAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsAccountArgs | RdsAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsAccountState | undefined;
            resourceInputs["accountDescription"] = state ? state.accountDescription : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["accountPassword"] = state ? state.accountPassword : undefined;
            resourceInputs["accountType"] = state ? state.accountType : undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["kmsEncryptedPassword"] = state ? state.kmsEncryptedPassword : undefined;
            resourceInputs["kmsEncryptionContext"] = state ? state.kmsEncryptionContext : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["resetPermissionFlag"] = state ? state.resetPermissionFlag : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as RdsAccountArgs | undefined;
            resourceInputs["accountDescription"] = args ? args.accountDescription : undefined;
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["accountPassword"] = args?.accountPassword ? pulumi.secret(args.accountPassword) : undefined;
            resourceInputs["accountType"] = args ? args.accountType : undefined;
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["kmsEncryptedPassword"] = args ? args.kmsEncryptedPassword : undefined;
            resourceInputs["kmsEncryptionContext"] = args ? args.kmsEncryptionContext : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["resetPermissionFlag"] = args ? args.resetPermissionFlag : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accountPassword", "password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RdsAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RdsAccount resources.
 */
export interface RdsAccountState {
    /**
     * The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
     *
     * > **NOTE:** The name cannot start with http:// or https://.
     */
    accountDescription?: pulumi.Input<string>;
    /**
     * The name of the database account.
     * * The name must be unique.
     * * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
     * * The name must start with a letter and end with a letter or digit.
     * * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
     * * The length of the value must meet the following requirements:
     * * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
     * * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
     * * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
     * * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
     * * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
     * * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
     * * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
     */
    accountName?: pulumi.Input<string>;
    /**
     * The password of the account.
     * * The value must be 8 to 32 characters in length.
     * * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
     * * Special characters include ! @ # $ % ^ & * ( ) _ + - =
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * The account type. Valid values:
     * * Normal: standard account (default).
     * * Super: privileged account.
     * * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
     *
     * > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
     */
    accountType?: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
     *
     * @deprecated Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
     */
    description?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
     *
     * @deprecated Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountName` instead.
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
     *
     * @deprecated Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
     */
    password?: pulumi.Input<string>;
    /**
     * Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
     */
    resetPermissionFlag?: pulumi.Input<boolean>;
    /**
     * The status of the resource. Valid values: `Available`, `Unavailable`.
     */
    status?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountType` instead.
     *
     * > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
     *
     * @deprecated Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RdsAccount resource.
 */
export interface RdsAccountArgs {
    /**
     * The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
     *
     * > **NOTE:** The name cannot start with http:// or https://.
     */
    accountDescription?: pulumi.Input<string>;
    /**
     * The name of the database account.
     * * The name must be unique.
     * * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
     * * The name must start with a letter and end with a letter or digit.
     * * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
     * * The length of the value must meet the following requirements:
     * * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
     * * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
     * * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
     * * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
     * * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
     * * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
     * * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
     */
    accountName?: pulumi.Input<string>;
    /**
     * The password of the account.
     * * The value must be 8 to 32 characters in length.
     * * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
     * * Special characters include ! @ # $ % ^ & * ( ) _ + - =
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * The account type. Valid values:
     * * Normal: standard account (default).
     * * Super: privileged account.
     * * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
     *
     * > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
     */
    accountType?: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
     *
     * @deprecated Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
     */
    description?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
     *
     * @deprecated Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountName` instead.
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
     *
     * @deprecated Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
     */
    password?: pulumi.Input<string>;
    /**
     * Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
     */
    resetPermissionFlag?: pulumi.Input<boolean>;
    /**
     * The attribute has been deprecated from 1.120.0 and using `accountType` instead.
     *
     * > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
     *
     * @deprecated Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
     */
    type?: pulumi.Input<string>;
}
