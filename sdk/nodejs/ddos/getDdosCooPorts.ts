// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Ddoscoo Ports of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.123.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.ddos.getDdosCooPorts({
 *     instanceId: "ddoscoo-cn-6ja1rl4j****",
 *     ids: ["ddoscoo-cn-6ja1rl4j****:7001:tcp"],
 * });
 * export const firstDdoscooPortId = example.then(example => example.ports?[0]?.id);
 * ```
 */
export function getDdosCooPorts(args: GetDdosCooPortsArgs, opts?: pulumi.InvokeOptions): Promise<GetDdosCooPortsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:ddos/getDdosCooPorts:getDdosCooPorts", {
        "frontendPort": args.frontendPort,
        "frontendProtocol": args.frontendProtocol,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDdosCooPorts.
 */
export interface GetDdosCooPortsArgs {
    /**
     * The forwarding port.
     */
    frontendPort?: string;
    /**
     * The forwarding protocol.
     */
    frontendProtocol?: string;
    /**
     * A list of Port IDs.
     */
    ids?: string[];
    /**
     * The Ddoscoo instance ID.
     */
    instanceId: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getDdosCooPorts.
 */
export interface GetDdosCooPortsResult {
    readonly frontendPort?: string;
    readonly frontendProtocol?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId: string;
    readonly outputFile?: string;
    readonly ports: outputs.ddos.GetDdosCooPortsPort[];
}

export function getDdosCooPortsOutput(args: GetDdosCooPortsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDdosCooPortsResult> {
    return pulumi.output(args).apply(a => getDdosCooPorts(a, opts))
}

/**
 * A collection of arguments for invoking getDdosCooPorts.
 */
export interface GetDdosCooPortsOutputArgs {
    /**
     * The forwarding port.
     */
    frontendPort?: pulumi.Input<string>;
    /**
     * The forwarding protocol.
     */
    frontendProtocol?: pulumi.Input<string>;
    /**
     * A list of Port IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Ddoscoo instance ID.
     */
    instanceId: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
