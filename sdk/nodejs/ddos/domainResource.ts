// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Anti-DDoS Pro Domain Resource resource.
 *
 * For information about Anti-DDoS Pro Domain Resource and how to use it, see [What is Domain Resource](https://www.alibabacloud.com/help/en/doc-detail/157463.htm).
 *
 * > **NOTE:** Available in v1.123.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.ddos.DomainResource("example", {
 *     domain: "tftestacc1234.abc",
 *     httpsExt: "{\"Http2\":1,\"Http2https\":0ï¼Œ\"Https2http\":0}",
 *     instanceIds: ["ddoscoo-cn-6ja1rl4j****"],
 *     proxyTypes: [{
 *         proxyPorts: [443],
 *         proxyType: "https",
 *     }],
 *     realServers: ["177.167.32.11"],
 *     rsType: 0,
 * });
 * ```
 *
 * ## Import
 *
 * Anti-DDoS Pro Domain Resource can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ddos/domainResource:DomainResource example <domain>
 * ```
 */
export class DomainResource extends pulumi.CustomResource {
    /**
     * Get an existing DomainResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainResourceState, opts?: pulumi.CustomResourceOptions): DomainResource {
        return new DomainResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ddos/domainResource:DomainResource';

    /**
     * Returns true if the given object is an instance of DomainResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainResource.__pulumiType;
    }

    /**
     * The domain name of the website that you want to add to the instance.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     * - `Http2https`: specifies whether to turn on Enforce HTTPS Routing. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enforce HTTPS Routing is turned off. The value `1` indicates that Enforce HTTPS Routing is turned on. The default value is `0`. If your website supports both HTTP and HTTPS, this feature suits your needs. If you turn on the switch, all HTTP requests are redirected to HTTPS requests on port 443 by default.
     * - `Https2http`: specifies whether to turn on Enable HTTP. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enable HTTP is turned off. The value `1` indicates that Enable HTTP is turned on. The default value is `0`. If your website does not support HTTPS, this feature suits your needs. If you turn on the switch, all HTTPS requests are redirected to HTTP requests and forwarded to origin servers. The feature can also redirect WebSockets requests to WebSocket requests. All requests are redirected over port 80.
     * - `Http2`: specifies whether to turn on Enable HTTP/2. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enable HTTP/2 is turned off. The value `1` indicates that Enable HTTP/2 is turned on. The default value is `0`. After you turn on the switch, the protocol type is HTTP/2.
     */
    public readonly httpsExt!: pulumi.Output<string>;
    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     */
    public readonly instanceIds!: pulumi.Output<string[]>;
    /**
     * Protocol type and port number information.
     */
    public readonly proxyTypes!: pulumi.Output<outputs.ddos.DomainResourceProxyType[]>;
    /**
     * the IP address. This field is required and must be a string array.
     */
    public readonly realServers!: pulumi.Output<string[]>;
    /**
     * The address type of the origin server. Valid values: `0`: IP address. `1`: domain name. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF.
     */
    public readonly rsType!: pulumi.Output<number>;

    /**
     * Create a DomainResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainResourceArgs | DomainResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainResourceState | undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["httpsExt"] = state ? state.httpsExt : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["proxyTypes"] = state ? state.proxyTypes : undefined;
            resourceInputs["realServers"] = state ? state.realServers : undefined;
            resourceInputs["rsType"] = state ? state.rsType : undefined;
        } else {
            const args = argsOrState as DomainResourceArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.instanceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceIds'");
            }
            if ((!args || args.proxyTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyTypes'");
            }
            if ((!args || args.realServers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'realServers'");
            }
            if ((!args || args.rsType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rsType'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["httpsExt"] = args ? args.httpsExt : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["proxyTypes"] = args ? args.proxyTypes : undefined;
            resourceInputs["realServers"] = args ? args.realServers : undefined;
            resourceInputs["rsType"] = args ? args.rsType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainResource resources.
 */
export interface DomainResourceState {
    /**
     * The domain name of the website that you want to add to the instance.
     */
    domain?: pulumi.Input<string>;
    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     * - `Http2https`: specifies whether to turn on Enforce HTTPS Routing. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enforce HTTPS Routing is turned off. The value `1` indicates that Enforce HTTPS Routing is turned on. The default value is `0`. If your website supports both HTTP and HTTPS, this feature suits your needs. If you turn on the switch, all HTTP requests are redirected to HTTPS requests on port 443 by default.
     * - `Https2http`: specifies whether to turn on Enable HTTP. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enable HTTP is turned off. The value `1` indicates that Enable HTTP is turned on. The default value is `0`. If your website does not support HTTPS, this feature suits your needs. If you turn on the switch, all HTTPS requests are redirected to HTTP requests and forwarded to origin servers. The feature can also redirect WebSockets requests to WebSocket requests. All requests are redirected over port 80.
     * - `Http2`: specifies whether to turn on Enable HTTP/2. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enable HTTP/2 is turned off. The value `1` indicates that Enable HTTP/2 is turned on. The default value is `0`. After you turn on the switch, the protocol type is HTTP/2.
     */
    httpsExt?: pulumi.Input<string>;
    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol type and port number information.
     */
    proxyTypes?: pulumi.Input<pulumi.Input<inputs.ddos.DomainResourceProxyType>[]>;
    /**
     * the IP address. This field is required and must be a string array.
     */
    realServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The address type of the origin server. Valid values: `0`: IP address. `1`: domain name. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF.
     */
    rsType?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DomainResource resource.
 */
export interface DomainResourceArgs {
    /**
     * The domain name of the website that you want to add to the instance.
     */
    domain: pulumi.Input<string>;
    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     * - `Http2https`: specifies whether to turn on Enforce HTTPS Routing. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enforce HTTPS Routing is turned off. The value `1` indicates that Enforce HTTPS Routing is turned on. The default value is `0`. If your website supports both HTTP and HTTPS, this feature suits your needs. If you turn on the switch, all HTTP requests are redirected to HTTPS requests on port 443 by default.
     * - `Https2http`: specifies whether to turn on Enable HTTP. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enable HTTP is turned off. The value `1` indicates that Enable HTTP is turned on. The default value is `0`. If your website does not support HTTPS, this feature suits your needs. If you turn on the switch, all HTTPS requests are redirected to HTTP requests and forwarded to origin servers. The feature can also redirect WebSockets requests to WebSocket requests. All requests are redirected over port 80.
     * - `Http2`: specifies whether to turn on Enable HTTP/2. This field is optional and must be an integer. Valid values: `0` and `1`. The value `0` indicates that Enable HTTP/2 is turned off. The value `1` indicates that Enable HTTP/2 is turned on. The default value is `0`. After you turn on the switch, the protocol type is HTTP/2.
     */
    httpsExt?: pulumi.Input<string>;
    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     */
    instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol type and port number information.
     */
    proxyTypes: pulumi.Input<pulumi.Input<inputs.ddos.DomainResourceProxyType>[]>;
    /**
     * the IP address. This field is required and must be a string array.
     */
    realServers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The address type of the origin server. Valid values: `0`: IP address. `1`: domain name. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF.
     */
    rsType: pulumi.Input<number>;
}
