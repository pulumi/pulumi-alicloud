// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Anti-DDoS Pro Domain Resource resource.
 *
 * For information about Anti-DDoS Pro Domain Resource and how to use it, see [What is Domain Resource](https://www.alibabacloud.com/help/en/ddos-protection/latest/api-ddoscoo-2020-01-01-createwebrule).
 *
 * > **NOTE:** Available since v1.123.0.
 *
 * ## Import
 *
 * Anti-DDoS Pro Domain Resource can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ddos/domainResource:DomainResource example <domain>
 * ```
 */
export class DomainResource extends pulumi.CustomResource {
    /**
     * Get an existing DomainResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainResourceState, opts?: pulumi.CustomResourceOptions): DomainResource {
        return new DomainResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ddos/domainResource:DomainResource';

    /**
     * Returns true if the given object is an instance of DomainResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainResource.__pulumiType;
    }

    /**
     * (Available since v1.207.2) The CNAME assigned to the domain name.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * The domain name of the website that you want to add to the instance.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     */
    public readonly httpsExt!: pulumi.Output<string>;
    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     * > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
     */
    public readonly instanceIds!: pulumi.Output<string[]>;
    /**
     * Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
     */
    public readonly ocspEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Protocol type and port number information. See `proxyTypes` below.
     * > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
     */
    public readonly proxyTypes!: pulumi.Output<outputs.ddos.DomainResourceProxyType[]>;
    /**
     * the IP address. This field is required and must be a string array.
     */
    public readonly realServers!: pulumi.Output<string[]>;
    /**
     * The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
     */
    public readonly rsType!: pulumi.Output<number>;

    /**
     * Create a DomainResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainResourceArgs | DomainResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainResourceState | undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["httpsExt"] = state ? state.httpsExt : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["ocspEnabled"] = state ? state.ocspEnabled : undefined;
            resourceInputs["proxyTypes"] = state ? state.proxyTypes : undefined;
            resourceInputs["realServers"] = state ? state.realServers : undefined;
            resourceInputs["rsType"] = state ? state.rsType : undefined;
        } else {
            const args = argsOrState as DomainResourceArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.instanceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceIds'");
            }
            if ((!args || args.proxyTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyTypes'");
            }
            if ((!args || args.realServers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'realServers'");
            }
            if ((!args || args.rsType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rsType'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["httpsExt"] = args ? args.httpsExt : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["ocspEnabled"] = args ? args.ocspEnabled : undefined;
            resourceInputs["proxyTypes"] = args ? args.proxyTypes : undefined;
            resourceInputs["realServers"] = args ? args.realServers : undefined;
            resourceInputs["rsType"] = args ? args.rsType : undefined;
            resourceInputs["cname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainResource resources.
 */
export interface DomainResourceState {
    /**
     * (Available since v1.207.2) The CNAME assigned to the domain name.
     */
    cname?: pulumi.Input<string>;
    /**
     * The domain name of the website that you want to add to the instance.
     */
    domain?: pulumi.Input<string>;
    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     */
    httpsExt?: pulumi.Input<string>;
    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     * > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
     */
    ocspEnabled?: pulumi.Input<boolean>;
    /**
     * Protocol type and port number information. See `proxyTypes` below.
     * > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
     */
    proxyTypes?: pulumi.Input<pulumi.Input<inputs.ddos.DomainResourceProxyType>[]>;
    /**
     * the IP address. This field is required and must be a string array.
     */
    realServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
     */
    rsType?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DomainResource resource.
 */
export interface DomainResourceArgs {
    /**
     * The domain name of the website that you want to add to the instance.
     */
    domain: pulumi.Input<string>;
    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     */
    httpsExt?: pulumi.Input<string>;
    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     * > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
     */
    instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
     */
    ocspEnabled?: pulumi.Input<boolean>;
    /**
     * Protocol type and port number information. See `proxyTypes` below.
     * > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
     */
    proxyTypes: pulumi.Input<pulumi.Input<inputs.ddos.DomainResourceProxyType>[]>;
    /**
     * the IP address. This field is required and must be a string array.
     */
    realServers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
     */
    rsType: pulumi.Input<number>;
}
