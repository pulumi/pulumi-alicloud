// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Ddos Bgp Ip resource.
 *
 * For information about Ddos Bgp Ip and how to use it, see [What is Ip](https://www.alibabacloud.com/help/en/ddos-protection/latest/addip).
 *
 * > **NOTE:** Available since v1.180.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultResourceGroups = alicloud.resourcemanager.getResourceGroups({});
 * const instance = new alicloud.ddos.DdosBgpInstance("instance", {
 *     baseBandwidth: 20,
 *     bandwidth: -1,
 *     ipCount: 100,
 *     ipType: "IPv4",
 *     normalBandwidth: 100,
 *     type: "Enterprise",
 * });
 * const defaultEipAddress = new alicloud.ecs.EipAddress("defaultEipAddress", {addressName: name});
 * const defaultBgpIp = new alicloud.ddos.BgpIp("defaultBgpIp", {
 *     instanceId: instance.id,
 *     ip: defaultEipAddress.ipAddress,
 *     resourceGroupId: defaultResourceGroups.then(defaultResourceGroups => defaultResourceGroups.groups?.[0]?.id),
 * });
 * ```
 *
 * ## Import
 *
 * Ddos Bgp Ip can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ddos/bgpIp:BgpIp example <instance_id>:<ip>
 * ```
 */
export class BgpIp extends pulumi.CustomResource {
    /**
     * Get an existing BgpIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpIpState, opts?: pulumi.CustomResourceOptions): BgpIp {
        return new BgpIp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ddos/bgpIp:BgpIp';

    /**
     * Returns true if the given object is an instance of BgpIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BgpIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BgpIp.__pulumiType;
    }

    /**
     * The ID of the native protection enterprise instance to be operated.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The IP address.
     */
    public readonly ip!: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * The current state of the IP address. Valid Value: `normal`, `holeBegin`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a BgpIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpIpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpIpArgs | BgpIpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpIpState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as BgpIpArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.ip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ip'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BgpIp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BgpIp resources.
 */
export interface BgpIpState {
    /**
     * The ID of the native protection enterprise instance to be operated.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The IP address.
     */
    ip?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The current state of the IP address. Valid Value: `normal`, `holeBegin`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BgpIp resource.
 */
export interface BgpIpArgs {
    /**
     * The ID of the native protection enterprise instance to be operated.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The IP address.
     */
    ip: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
}
