// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CertificateArgs, CertificateState } from "./certificate";
export type Certificate = import("./certificate").Certificate;
export const Certificate: typeof import("./certificate").Certificate = null as any;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));

export { GetCertificatesArgs, GetCertificatesResult, GetCertificatesOutputArgs } from "./getCertificates";
export const getCertificates: typeof import("./getCertificates").getCertificates = null as any;
export const getCertificatesOutput: typeof import("./getCertificates").getCertificatesOutput = null as any;
utilities.lazyLoad(exports, ["getCertificates","getCertificatesOutput"], () => require("./getCertificates"));

export { GetServiceCertificatesArgs, GetServiceCertificatesResult, GetServiceCertificatesOutputArgs } from "./getServiceCertificates";
export const getServiceCertificates: typeof import("./getServiceCertificates").getServiceCertificates = null as any;
export const getServiceCertificatesOutput: typeof import("./getServiceCertificates").getServiceCertificatesOutput = null as any;
utilities.lazyLoad(exports, ["getServiceCertificates","getServiceCertificatesOutput"], () => require("./getServiceCertificates"));

export { ServiceCertificateArgs, ServiceCertificateState } from "./serviceCertificate";
export type ServiceCertificate = import("./serviceCertificate").ServiceCertificate;
export const ServiceCertificate: typeof import("./serviceCertificate").ServiceCertificate = null as any;
utilities.lazyLoad(exports, ["ServiceCertificate"], () => require("./serviceCertificate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:cas/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "alicloud:cas/serviceCertificate:ServiceCertificate":
                return new ServiceCertificate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "cas/certificate", _module)
pulumi.runtime.registerResourceModule("alicloud", "cas/serviceCertificate", _module)
