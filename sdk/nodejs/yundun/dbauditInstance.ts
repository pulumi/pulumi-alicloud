// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Cloud DBaudit instance resource ("Yundun_dbaudit" is the short term of this product).
 *
 * > **NOTE:** The endpoint of bssopenapi used only support "business.aliyuncs.com" at present.
 *
 * > **NOTE:** Available in 1.62.0+ .
 *
 * > **NOTE:** In order to destroy Cloud DBaudit instance , users are required to apply for white list first
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultDBAuditInstance = new alicloud.yundun.DBAuditInstance("default", {
 *     description: "Terraform-test",
 *     period: 1,
 *     planCode: "alpha.professional",
 *     vswitchId: "v-testVswitch",
 * });
 * ```
 *
 * ## Import
 *
 * Yundun_dbaudit instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:yundun/dBAuditInstance:DBAuditInstance example dbaudit-exampe123456
 * ```
 */
export class DBAuditInstance extends pulumi.CustomResource {
    /**
     * Get an existing DBAuditInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DBAuditInstanceState, opts?: pulumi.CustomResourceOptions): DBAuditInstance {
        return new DBAuditInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:yundun/dBAuditInstance:DBAuditInstance';

    /**
     * Returns true if the given object is an instance of DBAuditInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DBAuditInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DBAuditInstance.__pulumiType;
    }

    /**
     * Description of the instance. This name can have a string of 1 to 63 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Duration for initially producing the instance. Valid values: [1~9], 12, 24, 36. Default to 12. At present, the provider does not support modify "period".
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Plan code of the Cloud DBAudit to produce. (alpha.professional, alpha.basic, alpha.premium)
     */
    public readonly planCode!: pulumi.Output<string>;
    /**
     * The Id of resource group which the DBaudit Instance belongs. If not set, the resource is created in the default resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * vSwtich ID configured to audit
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a DBAuditInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DBAuditInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DBAuditInstanceArgs | DBAuditInstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DBAuditInstanceState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["period"] = state ? state.period : undefined;
            inputs["planCode"] = state ? state.planCode : undefined;
            inputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as DBAuditInstanceArgs | undefined;
            if (!args || args.description === undefined) {
                throw new Error("Missing required property 'description'");
            }
            if (!args || args.planCode === undefined) {
                throw new Error("Missing required property 'planCode'");
            }
            if (!args || args.vswitchId === undefined) {
                throw new Error("Missing required property 'vswitchId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["period"] = args ? args.period : undefined;
            inputs["planCode"] = args ? args.planCode : undefined;
            inputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vswitchId"] = args ? args.vswitchId : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DBAuditInstance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DBAuditInstance resources.
 */
export interface DBAuditInstanceState {
    /**
     * Description of the instance. This name can have a string of 1 to 63 characters.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Duration for initially producing the instance. Valid values: [1~9], 12, 24, 36. Default to 12. At present, the provider does not support modify "period".
     */
    readonly period?: pulumi.Input<number>;
    /**
     * Plan code of the Cloud DBAudit to produce. (alpha.professional, alpha.basic, alpha.premium)
     */
    readonly planCode?: pulumi.Input<string>;
    /**
     * The Id of resource group which the DBaudit Instance belongs. If not set, the resource is created in the default resource group.
     */
    readonly resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * vSwtich ID configured to audit
     */
    readonly vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DBAuditInstance resource.
 */
export interface DBAuditInstanceArgs {
    /**
     * Description of the instance. This name can have a string of 1 to 63 characters.
     */
    readonly description: pulumi.Input<string>;
    /**
     * Duration for initially producing the instance. Valid values: [1~9], 12, 24, 36. Default to 12. At present, the provider does not support modify "period".
     */
    readonly period?: pulumi.Input<number>;
    /**
     * Plan code of the Cloud DBAudit to produce. (alpha.professional, alpha.basic, alpha.premium)
     */
    readonly planCode: pulumi.Input<string>;
    /**
     * The Id of resource group which the DBaudit Instance belongs. If not set, the resource is created in the default resource group.
     */
    readonly resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * vSwtich ID configured to audit
     */
    readonly vswitchId: pulumi.Input<string>;
}
