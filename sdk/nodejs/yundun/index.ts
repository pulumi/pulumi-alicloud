// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BastionHostInstanceArgs, BastionHostInstanceState } from "./bastionHostInstance";
export type BastionHostInstance = import("./bastionHostInstance").BastionHostInstance;
export const BastionHostInstance: typeof import("./bastionHostInstance").BastionHostInstance = null as any;
utilities.lazyLoad(exports, ["BastionHostInstance"], () => require("./bastionHostInstance"));

export { DBAuditInstanceArgs, DBAuditInstanceState } from "./dbauditInstance";
export type DBAuditInstance = import("./dbauditInstance").DBAuditInstance;
export const DBAuditInstance: typeof import("./dbauditInstance").DBAuditInstance = null as any;
utilities.lazyLoad(exports, ["DBAuditInstance"], () => require("./dbauditInstance"));

export { GetBastionHostInstancesArgs, GetBastionHostInstancesResult, GetBastionHostInstancesOutputArgs } from "./getBastionHostInstances";
export const getBastionHostInstances: typeof import("./getBastionHostInstances").getBastionHostInstances = null as any;
export const getBastionHostInstancesOutput: typeof import("./getBastionHostInstances").getBastionHostInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getBastionHostInstances","getBastionHostInstancesOutput"], () => require("./getBastionHostInstances"));

export { GetDBAuditInstanceArgs, GetDBAuditInstanceResult, GetDBAuditInstanceOutputArgs } from "./getDBAuditInstance";
export const getDBAuditInstance: typeof import("./getDBAuditInstance").getDBAuditInstance = null as any;
export const getDBAuditInstanceOutput: typeof import("./getDBAuditInstance").getDBAuditInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getDBAuditInstance","getDBAuditInstanceOutput"], () => require("./getDBAuditInstance"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:yundun/bastionHostInstance:BastionHostInstance":
                return new BastionHostInstance(name, <any>undefined, { urn })
            case "alicloud:yundun/dBAuditInstance:DBAuditInstance":
                return new DBAuditInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "yundun/bastionHostInstance", _module)
pulumi.runtime.registerResourceModule("alicloud", "yundun/dBAuditInstance", _module)
