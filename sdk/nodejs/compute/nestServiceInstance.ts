// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Compute Nest Service Instance resource.
 *
 * For information about Compute Nest Service Instance and how to use it, see [What is Service Instance](https://www.alibabacloud.com/help/en/compute-nest/developer-reference/api-computenest-2021-06-01-createserviceinstance).
 *
 * > **NOTE:** Available since v1.205.0.
 *
 * ## Import
 *
 * Compute Nest Service Instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:compute/nestServiceInstance:NestServiceInstance example <id>
 * ```
 */
export class NestServiceInstance extends pulumi.CustomResource {
    /**
     * Get an existing NestServiceInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NestServiceInstanceState, opts?: pulumi.CustomResourceOptions): NestServiceInstance {
        return new NestServiceInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:compute/nestServiceInstance:NestServiceInstance';

    /**
     * Returns true if the given object is an instance of NestServiceInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NestServiceInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NestServiceInstance.__pulumiType;
    }

    /**
     * The order information of cloud market. See `commodity` below.
     */
    public readonly commodity!: pulumi.Output<outputs.compute.NestServiceInstanceCommodity | undefined>;
    /**
     * Whether the service instance has the O&M function. Default value: `false`. Valid values:
     */
    public readonly enableInstanceOps!: pulumi.Output<boolean>;
    /**
     * Whether Prometheus monitoring is enabled. Default value: `false`. Valid values:
     */
    public readonly enableUserPrometheus!: pulumi.Output<boolean>;
    /**
     * The configuration of O&M. See `operationMetadata` below.
     */
    public readonly operationMetadata!: pulumi.Output<outputs.compute.NestServiceInstanceOperationMetadata>;
    /**
     * The parameters entered by the deployment service instance.
     */
    public readonly parameters!: pulumi.Output<string | undefined>;
    /**
     * The type of payment. Valid values: `Permanent`, `Subscription`, `PayAsYouGo`, `CustomFixTime`.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The ID of the service.
     */
    public readonly serviceId!: pulumi.Output<string>;
    /**
     * The name of the Service Instance.
     */
    public readonly serviceInstanceName!: pulumi.Output<string>;
    /**
     * The version of the service.
     */
    public readonly serviceVersion!: pulumi.Output<string>;
    /**
     * The name of the specification.
     */
    public readonly specificationName!: pulumi.Output<string | undefined>;
    /**
     * The status of the Service Instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The name of the template.
     */
    public readonly templateName!: pulumi.Output<string>;

    /**
     * Create a NestServiceInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NestServiceInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NestServiceInstanceArgs | NestServiceInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NestServiceInstanceState | undefined;
            resourceInputs["commodity"] = state ? state.commodity : undefined;
            resourceInputs["enableInstanceOps"] = state ? state.enableInstanceOps : undefined;
            resourceInputs["enableUserPrometheus"] = state ? state.enableUserPrometheus : undefined;
            resourceInputs["operationMetadata"] = state ? state.operationMetadata : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["serviceInstanceName"] = state ? state.serviceInstanceName : undefined;
            resourceInputs["serviceVersion"] = state ? state.serviceVersion : undefined;
            resourceInputs["specificationName"] = state ? state.specificationName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
        } else {
            const args = argsOrState as NestServiceInstanceArgs | undefined;
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            if ((!args || args.serviceVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceVersion'");
            }
            resourceInputs["commodity"] = args ? args.commodity : undefined;
            resourceInputs["enableInstanceOps"] = args ? args.enableInstanceOps : undefined;
            resourceInputs["enableUserPrometheus"] = args ? args.enableUserPrometheus : undefined;
            resourceInputs["operationMetadata"] = args ? args.operationMetadata : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["serviceInstanceName"] = args ? args.serviceInstanceName : undefined;
            resourceInputs["serviceVersion"] = args ? args.serviceVersion : undefined;
            resourceInputs["specificationName"] = args ? args.specificationName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NestServiceInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NestServiceInstance resources.
 */
export interface NestServiceInstanceState {
    /**
     * The order information of cloud market. See `commodity` below.
     */
    commodity?: pulumi.Input<inputs.compute.NestServiceInstanceCommodity>;
    /**
     * Whether the service instance has the O&M function. Default value: `false`. Valid values:
     */
    enableInstanceOps?: pulumi.Input<boolean>;
    /**
     * Whether Prometheus monitoring is enabled. Default value: `false`. Valid values:
     */
    enableUserPrometheus?: pulumi.Input<boolean>;
    /**
     * The configuration of O&M. See `operationMetadata` below.
     */
    operationMetadata?: pulumi.Input<inputs.compute.NestServiceInstanceOperationMetadata>;
    /**
     * The parameters entered by the deployment service instance.
     */
    parameters?: pulumi.Input<string>;
    /**
     * The type of payment. Valid values: `Permanent`, `Subscription`, `PayAsYouGo`, `CustomFixTime`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ID of the service.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * The name of the Service Instance.
     */
    serviceInstanceName?: pulumi.Input<string>;
    /**
     * The version of the service.
     */
    serviceVersion?: pulumi.Input<string>;
    /**
     * The name of the specification.
     */
    specificationName?: pulumi.Input<string>;
    /**
     * The status of the Service Instance.
     */
    status?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the template.
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NestServiceInstance resource.
 */
export interface NestServiceInstanceArgs {
    /**
     * The order information of cloud market. See `commodity` below.
     */
    commodity?: pulumi.Input<inputs.compute.NestServiceInstanceCommodity>;
    /**
     * Whether the service instance has the O&M function. Default value: `false`. Valid values:
     */
    enableInstanceOps?: pulumi.Input<boolean>;
    /**
     * Whether Prometheus monitoring is enabled. Default value: `false`. Valid values:
     */
    enableUserPrometheus?: pulumi.Input<boolean>;
    /**
     * The configuration of O&M. See `operationMetadata` below.
     */
    operationMetadata?: pulumi.Input<inputs.compute.NestServiceInstanceOperationMetadata>;
    /**
     * The parameters entered by the deployment service instance.
     */
    parameters?: pulumi.Input<string>;
    /**
     * The type of payment. Valid values: `Permanent`, `Subscription`, `PayAsYouGo`, `CustomFixTime`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ID of the service.
     */
    serviceId: pulumi.Input<string>;
    /**
     * The name of the Service Instance.
     */
    serviceInstanceName?: pulumi.Input<string>;
    /**
     * The version of the service.
     */
    serviceVersion: pulumi.Input<string>;
    /**
     * The name of the specification.
     */
    specificationName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the template.
     */
    templateName?: pulumi.Input<string>;
}
