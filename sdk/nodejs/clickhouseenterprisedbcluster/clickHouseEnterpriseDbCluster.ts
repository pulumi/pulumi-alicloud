// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Click House Enterprise D B Cluster resource.
 *
 * Enterprise Edition Cluster Resources.
 *
 * For information about Click House Enterprise D B Cluster and how to use it, see [What is Enterprise D B Cluster](https://next.api.alibabacloud.com/document/clickhouse/2023-05-22/CreateDBInstance).
 *
 * > **NOTE:** Available since v1.247.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const vswIpRangeI = config.get("vswIpRangeI") || "172.16.1.0/24";
 * const regionId = config.get("regionId") || "cn-beijing";
 * const vpcIpRange = config.get("vpcIpRange") || "172.16.0.0/12";
 * const vswIpRangeK = config.get("vswIpRangeK") || "172.16.3.0/24";
 * const vswIpRangeL = config.get("vswIpRangeL") || "172.16.2.0/24";
 * const zoneIdI = config.get("zoneIdI") || "cn-beijing-i";
 * const zoneIdL = config.get("zoneIdL") || "cn-beijing-l";
 * const zoneIdK = config.get("zoneIdK") || "cn-beijing-k";
 * const defaultktKLuM = new alicloud.vpc.Network("defaultktKLuM", {cidrBlock: vpcIpRange});
 * const defaultTQWN3k = new alicloud.vpc.Switch("defaultTQWN3k", {
 *     vpcId: defaultktKLuM.id,
 *     zoneId: zoneIdI,
 *     cidrBlock: vswIpRangeI,
 * });
 * const defaultylyLu8 = new alicloud.vpc.Switch("defaultylyLu8", {
 *     vpcId: defaultktKLuM.id,
 *     zoneId: zoneIdL,
 *     cidrBlock: vswIpRangeL,
 * });
 * const defaultRNbPh8 = new alicloud.vpc.Switch("defaultRNbPh8", {
 *     vpcId: defaultktKLuM.id,
 *     zoneId: zoneIdK,
 *     cidrBlock: vswIpRangeK,
 * });
 * const _default = new alicloud.clickhouseenterprisedbcluster.ClickHouseEnterpriseDbCluster("default", {
 *     zoneId: zoneIdI,
 *     vpcId: defaultktKLuM.id,
 *     scaleMin: "8",
 *     scaleMax: "16",
 *     vswitchId: defaultTQWN3k.id,
 *     multiZones: [
 *         {
 *             vswitchIds: [defaultTQWN3k.id],
 *             zoneId: zoneIdI,
 *         },
 *         {
 *             vswitchIds: [defaultylyLu8.id],
 *             zoneId: zoneIdL,
 *         },
 *         {
 *             vswitchIds: [defaultRNbPh8.id],
 *             zoneId: zoneIdK,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Click House Enterprise D B Cluster can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster:ClickHouseEnterpriseDbCluster example <id>
 * ```
 */
export class ClickHouseEnterpriseDbCluster extends pulumi.CustomResource {
    /**
     * Get an existing ClickHouseEnterpriseDbCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClickHouseEnterpriseDbClusterState, opts?: pulumi.CustomResourceOptions): ClickHouseEnterpriseDbCluster {
        return new ClickHouseEnterpriseDbCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster:ClickHouseEnterpriseDbCluster';

    /**
     * Returns true if the given object is an instance of ClickHouseEnterpriseDbCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClickHouseEnterpriseDbCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClickHouseEnterpriseDbCluster.__pulumiType;
    }

    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The list of multi-zone information. See `multiZones` below.
     */
    declare public readonly multiZones: pulumi.Output<outputs.clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZone[]>;
    /**
     * The region ID of the resource
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The maximum value of serverless auto scaling.
     */
    declare public readonly scaleMax: pulumi.Output<string | undefined>;
    /**
     * The minimum value of serverless auto scaling.
     */
    declare public readonly scaleMin: pulumi.Output<string | undefined>;
    /**
     * The status of the resource
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The VPC ID.
     */
    declare public readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * The vSwitch ID.
     */
    declare public readonly vswitchId: pulumi.Output<string | undefined>;
    /**
     * The zone ID.
     */
    declare public readonly zoneId: pulumi.Output<string | undefined>;

    /**
     * Create a ClickHouseEnterpriseDbCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClickHouseEnterpriseDbClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClickHouseEnterpriseDbClusterArgs | ClickHouseEnterpriseDbClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClickHouseEnterpriseDbClusterState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["multiZones"] = state?.multiZones;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["scaleMax"] = state?.scaleMax;
            resourceInputs["scaleMin"] = state?.scaleMin;
            resourceInputs["status"] = state?.status;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as ClickHouseEnterpriseDbClusterArgs | undefined;
            resourceInputs["multiZones"] = args?.multiZones;
            resourceInputs["scaleMax"] = args?.scaleMax;
            resourceInputs["scaleMin"] = args?.scaleMin;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClickHouseEnterpriseDbCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClickHouseEnterpriseDbCluster resources.
 */
export interface ClickHouseEnterpriseDbClusterState {
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * The list of multi-zone information. See `multiZones` below.
     */
    multiZones?: pulumi.Input<pulumi.Input<inputs.clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZone>[]>;
    /**
     * The region ID of the resource
     */
    regionId?: pulumi.Input<string>;
    /**
     * The maximum value of serverless auto scaling.
     */
    scaleMax?: pulumi.Input<string>;
    /**
     * The minimum value of serverless auto scaling.
     */
    scaleMin?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * The VPC ID.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The vSwitch ID.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClickHouseEnterpriseDbCluster resource.
 */
export interface ClickHouseEnterpriseDbClusterArgs {
    /**
     * The list of multi-zone information. See `multiZones` below.
     */
    multiZones?: pulumi.Input<pulumi.Input<inputs.clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZone>[]>;
    /**
     * The maximum value of serverless auto scaling.
     */
    scaleMax?: pulumi.Input<string>;
    /**
     * The minimum value of serverless auto scaling.
     */
    scaleMin?: pulumi.Input<string>;
    /**
     * The VPC ID.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The vSwitch ID.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID.
     */
    zoneId?: pulumi.Input<string>;
}
