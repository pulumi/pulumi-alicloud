// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccountArgs, AccountState } from "./account";
export type Account = import("./account").Account;
export const Account: typeof import("./account").Account = null as any;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));

export { BackupPolicyArgs, BackupPolicyState } from "./backupPolicy";
export type BackupPolicy = import("./backupPolicy").BackupPolicy;
export const BackupPolicy: typeof import("./backupPolicy").BackupPolicy = null as any;
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));

export { ClickHouseEnterpriseDbClusterArgs, ClickHouseEnterpriseDbClusterState } from "./clickHouseEnterpriseDbCluster";
export type ClickHouseEnterpriseDbCluster = import("./clickHouseEnterpriseDbCluster").ClickHouseEnterpriseDbCluster;
export const ClickHouseEnterpriseDbCluster: typeof import("./clickHouseEnterpriseDbCluster").ClickHouseEnterpriseDbCluster = null as any;
utilities.lazyLoad(exports, ["ClickHouseEnterpriseDbCluster"], () => require("./clickHouseEnterpriseDbCluster"));

export { PublicEndpointArgs, PublicEndpointState } from "./publicEndpoint";
export type PublicEndpoint = import("./publicEndpoint").PublicEndpoint;
export const PublicEndpoint: typeof import("./publicEndpoint").PublicEndpoint = null as any;
utilities.lazyLoad(exports, ["PublicEndpoint"], () => require("./publicEndpoint"));

export { SecurityIpArgs, SecurityIpState } from "./securityIp";
export type SecurityIp = import("./securityIp").SecurityIp;
export const SecurityIp: typeof import("./securityIp").SecurityIp = null as any;
utilities.lazyLoad(exports, ["SecurityIp"], () => require("./securityIp"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:clickhouseenterprisedbcluster/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "alicloud:clickhouseenterprisedbcluster/backupPolicy:BackupPolicy":
                return new BackupPolicy(name, <any>undefined, { urn })
            case "alicloud:clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster:ClickHouseEnterpriseDbCluster":
                return new ClickHouseEnterpriseDbCluster(name, <any>undefined, { urn })
            case "alicloud:clickhouseenterprisedbcluster/publicEndpoint:PublicEndpoint":
                return new PublicEndpoint(name, <any>undefined, { urn })
            case "alicloud:clickhouseenterprisedbcluster/securityIp:SecurityIp":
                return new SecurityIp(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "clickhouseenterprisedbcluster/account", _module)
pulumi.runtime.registerResourceModule("alicloud", "clickhouseenterprisedbcluster/backupPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster", _module)
pulumi.runtime.registerResourceModule("alicloud", "clickhouseenterprisedbcluster/publicEndpoint", _module)
pulumi.runtime.registerResourceModule("alicloud", "clickhouseenterprisedbcluster/securityIp", _module)
