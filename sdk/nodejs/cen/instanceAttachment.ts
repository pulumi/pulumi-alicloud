// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a CEN child instance attachment resource that associate the network(VPC, CCN, VBR) with the CEN instance.
 *
 * ->**NOTE:** Available in 1.42.0+
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-testAccCenInstanceAttachmentBasic";
 * const cen = new alicloud.cen.Instance("cen", {description: "terraform01"});
 * const vpc = new alicloud.vpc.Network("vpc", {cidrBlock: "192.168.0.0/16"});
 * const foo = new alicloud.cen.InstanceAttachment("foo", {
 *     instanceId: cen.id,
 *     childInstanceId: vpc.id,
 *     childInstanceType: "VPC",
 *     childInstanceRegionId: "cn-beijing",
 * });
 * ```
 *
 * ## Import
 *
 * CEN instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cen/instanceAttachment:InstanceAttachment example cen-m7i7pjmkon********:vpc-2ze2w07mcy9nz********:VPC:cn-beijing
 * ```
 */
export class InstanceAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InstanceAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceAttachmentState, opts?: pulumi.CustomResourceOptions): InstanceAttachment {
        return new InstanceAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/instanceAttachment:InstanceAttachment';

    /**
     * Returns true if the given object is an instance of InstanceAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceAttachment.__pulumiType;
    }

    /**
     * The account ID to which the CEN instance belongs.
     */
    public readonly cenOwnerId!: pulumi.Output<number | undefined>;
    /**
     * The ID of the child instance to attach.
     */
    public readonly childInstanceId!: pulumi.Output<string>;
    /**
     * The uid of the child instance. Only used when attach a child instance of other account.
     */
    public readonly childInstanceOwnerId!: pulumi.Output<number>;
    /**
     * The region ID of the child instance to attach.
     */
    public readonly childInstanceRegionId!: pulumi.Output<string>;
    /**
     * The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     */
    public readonly childInstanceType!: pulumi.Output<string>;
    /**
     * The ID of the CEN.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The associating status of the network.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a InstanceAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceAttachmentArgs | InstanceAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceAttachmentState | undefined;
            resourceInputs["cenOwnerId"] = state ? state.cenOwnerId : undefined;
            resourceInputs["childInstanceId"] = state ? state.childInstanceId : undefined;
            resourceInputs["childInstanceOwnerId"] = state ? state.childInstanceOwnerId : undefined;
            resourceInputs["childInstanceRegionId"] = state ? state.childInstanceRegionId : undefined;
            resourceInputs["childInstanceType"] = state ? state.childInstanceType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as InstanceAttachmentArgs | undefined;
            if ((!args || args.childInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childInstanceId'");
            }
            if ((!args || args.childInstanceRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childInstanceRegionId'");
            }
            if ((!args || args.childInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childInstanceType'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["cenOwnerId"] = args ? args.cenOwnerId : undefined;
            resourceInputs["childInstanceId"] = args ? args.childInstanceId : undefined;
            resourceInputs["childInstanceOwnerId"] = args ? args.childInstanceOwnerId : undefined;
            resourceInputs["childInstanceRegionId"] = args ? args.childInstanceRegionId : undefined;
            resourceInputs["childInstanceType"] = args ? args.childInstanceType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceAttachment resources.
 */
export interface InstanceAttachmentState {
    /**
     * The account ID to which the CEN instance belongs.
     */
    cenOwnerId?: pulumi.Input<number>;
    /**
     * The ID of the child instance to attach.
     */
    childInstanceId?: pulumi.Input<string>;
    /**
     * The uid of the child instance. Only used when attach a child instance of other account.
     */
    childInstanceOwnerId?: pulumi.Input<number>;
    /**
     * The region ID of the child instance to attach.
     */
    childInstanceRegionId?: pulumi.Input<string>;
    /**
     * The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     */
    childInstanceType?: pulumi.Input<string>;
    /**
     * The ID of the CEN.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The associating status of the network.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceAttachment resource.
 */
export interface InstanceAttachmentArgs {
    /**
     * The account ID to which the CEN instance belongs.
     */
    cenOwnerId?: pulumi.Input<number>;
    /**
     * The ID of the child instance to attach.
     */
    childInstanceId: pulumi.Input<string>;
    /**
     * The uid of the child instance. Only used when attach a child instance of other account.
     */
    childInstanceOwnerId?: pulumi.Input<number>;
    /**
     * The region ID of the child instance to attach.
     */
    childInstanceRegionId: pulumi.Input<string>;
    /**
     * The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     */
    childInstanceType: pulumi.Input<string>;
    /**
     * The ID of the CEN.
     */
    instanceId: pulumi.Input<string>;
}
