// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a CEN transit router route entry resource.[What is Cen Transit Router Route Entry](https://help.aliyun.com/document_detail/261238.html)
 *
 * > **NOTE:** Available in 1.126.0+
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-testAccCenTransitRouter";
 * const transitRouterRouteEntryDestinationCidrBlockAttachment = config.get("transitRouterRouteEntryDestinationCidrBlockAttachment") || "192.168.0.0/24";
 * const transitRouterRouteEntryName = config.get("transitRouterRouteEntryName") || "sdk_rebot_cen_tr_yaochi";
 * const transitRouterRouteEntryDescription = config.get("transitRouterRouteEntryDescription") || "sdk_rebot_cen_tr_yaochi";
 * const cen = new alicloud.cen.Instance("cen", {description: "terraform01"});
 * const defaultTransitRouter = new alicloud.cen.TransitRouter("defaultTransitRouter", {
 *     name: name,
 *     cenId: cen.id,
 * });
 * const defaultTransitRouterRouteTable = new alicloud.cen.TransitRouterRouteTable("defaultTransitRouterRouteTable", {transitRouterId: defaultTransitRouter.transitRouterId});
 * const defaultTransitRouterRouteEntry = new alicloud.cen.TransitRouterRouteEntry("defaultTransitRouterRouteEntry", {
 *     transitRouterRouteTableId: defaultTransitRouterRouteTable.transitRouterRouteTableId,
 *     transitRouterRouteEntryDestinationCidrBlock: transitRouterRouteEntryDestinationCidrBlockAttachment,
 *     transitRouterRouteEntryNextHopType: "Attachment",
 *     transitRouterRouteEntryName: transitRouterRouteEntryName,
 *     transitRouterRouteEntryDescription: transitRouterRouteEntryDescription,
 *     transitRouterRouteEntryNextHopId: alicloud_cen_transit_router_vpc_attachment["default"].transit_router_attachment_id,
 * });
 * ```
 *
 * ## Import
 *
 * CEN instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cen/transitRouterRouteEntry:TransitRouterRouteEntry default vtb-*********:rte-*******
 * ```
 */
export class TransitRouterRouteEntry extends pulumi.CustomResource {
    /**
     * Get an existing TransitRouterRouteEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitRouterRouteEntryState, opts?: pulumi.CustomResourceOptions): TransitRouterRouteEntry {
        return new TransitRouterRouteEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/transitRouterRouteEntry:TransitRouterRouteEntry';

    /**
     * Returns true if the given object is an instance of TransitRouterRouteEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitRouterRouteEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitRouterRouteEntry.__pulumiType;
    }

    /**
     * The dry run.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The associating status of the Transit Router.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The description of the transit router route entry.
     */
    public readonly transitRouterRouteEntryDescription!: pulumi.Output<string | undefined>;
    /**
     * The CIDR of the transit router route entry.
     */
    public readonly transitRouterRouteEntryDestinationCidrBlock!: pulumi.Output<string>;
    public /*out*/ readonly transitRouterRouteEntryId!: pulumi.Output<string>;
    /**
     * The name of the transit router route entry.
     */
    public readonly transitRouterRouteEntryName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the transit router route entry next hop.
     */
    public readonly transitRouterRouteEntryNextHopId!: pulumi.Output<string | undefined>;
    /**
     * The Type of the transit router route entry next hop,Valid values `Attachment` and `BlackHole`.
     */
    public readonly transitRouterRouteEntryNextHopType!: pulumi.Output<string>;
    /**
     * The ID of the transit router route table.
     */
    public readonly transitRouterRouteTableId!: pulumi.Output<string>;

    /**
     * Create a TransitRouterRouteEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitRouterRouteEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitRouterRouteEntryArgs | TransitRouterRouteEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitRouterRouteEntryState | undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouterRouteEntryDescription"] = state ? state.transitRouterRouteEntryDescription : undefined;
            resourceInputs["transitRouterRouteEntryDestinationCidrBlock"] = state ? state.transitRouterRouteEntryDestinationCidrBlock : undefined;
            resourceInputs["transitRouterRouteEntryId"] = state ? state.transitRouterRouteEntryId : undefined;
            resourceInputs["transitRouterRouteEntryName"] = state ? state.transitRouterRouteEntryName : undefined;
            resourceInputs["transitRouterRouteEntryNextHopId"] = state ? state.transitRouterRouteEntryNextHopId : undefined;
            resourceInputs["transitRouterRouteEntryNextHopType"] = state ? state.transitRouterRouteEntryNextHopType : undefined;
            resourceInputs["transitRouterRouteTableId"] = state ? state.transitRouterRouteTableId : undefined;
        } else {
            const args = argsOrState as TransitRouterRouteEntryArgs | undefined;
            if ((!args || args.transitRouterRouteEntryDestinationCidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterRouteEntryDestinationCidrBlock'");
            }
            if ((!args || args.transitRouterRouteEntryNextHopType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterRouteEntryNextHopType'");
            }
            if ((!args || args.transitRouterRouteTableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterRouteTableId'");
            }
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["transitRouterRouteEntryDescription"] = args ? args.transitRouterRouteEntryDescription : undefined;
            resourceInputs["transitRouterRouteEntryDestinationCidrBlock"] = args ? args.transitRouterRouteEntryDestinationCidrBlock : undefined;
            resourceInputs["transitRouterRouteEntryName"] = args ? args.transitRouterRouteEntryName : undefined;
            resourceInputs["transitRouterRouteEntryNextHopId"] = args ? args.transitRouterRouteEntryNextHopId : undefined;
            resourceInputs["transitRouterRouteEntryNextHopType"] = args ? args.transitRouterRouteEntryNextHopType : undefined;
            resourceInputs["transitRouterRouteTableId"] = args ? args.transitRouterRouteTableId : undefined;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["transitRouterRouteEntryId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitRouterRouteEntry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitRouterRouteEntry resources.
 */
export interface TransitRouterRouteEntryState {
    /**
     * The dry run.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The associating status of the Transit Router.
     */
    status?: pulumi.Input<string>;
    /**
     * The description of the transit router route entry.
     */
    transitRouterRouteEntryDescription?: pulumi.Input<string>;
    /**
     * The CIDR of the transit router route entry.
     */
    transitRouterRouteEntryDestinationCidrBlock?: pulumi.Input<string>;
    transitRouterRouteEntryId?: pulumi.Input<string>;
    /**
     * The name of the transit router route entry.
     */
    transitRouterRouteEntryName?: pulumi.Input<string>;
    /**
     * The ID of the transit router route entry next hop.
     */
    transitRouterRouteEntryNextHopId?: pulumi.Input<string>;
    /**
     * The Type of the transit router route entry next hop,Valid values `Attachment` and `BlackHole`.
     */
    transitRouterRouteEntryNextHopType?: pulumi.Input<string>;
    /**
     * The ID of the transit router route table.
     */
    transitRouterRouteTableId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitRouterRouteEntry resource.
 */
export interface TransitRouterRouteEntryArgs {
    /**
     * The dry run.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The description of the transit router route entry.
     */
    transitRouterRouteEntryDescription?: pulumi.Input<string>;
    /**
     * The CIDR of the transit router route entry.
     */
    transitRouterRouteEntryDestinationCidrBlock: pulumi.Input<string>;
    /**
     * The name of the transit router route entry.
     */
    transitRouterRouteEntryName?: pulumi.Input<string>;
    /**
     * The ID of the transit router route entry next hop.
     */
    transitRouterRouteEntryNextHopId?: pulumi.Input<string>;
    /**
     * The Type of the transit router route entry next hop,Valid values `Attachment` and `BlackHole`.
     */
    transitRouterRouteEntryNextHopType: pulumi.Input<string>;
    /**
     * The ID of the transit router route table.
     */
    transitRouterRouteTableId: pulumi.Input<string>;
}
