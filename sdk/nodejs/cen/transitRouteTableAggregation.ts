// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Enterprise Network (CEN) Transit Route Table Aggregation resource.
 *
 * For information about Cloud Enterprise Network (CEN) Transit Route Table Aggregation and how to use it, see [What is Transit Route Table Aggregation](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/api-doc-cbn-2017-09-12-api-doc-createtransitroutetableaggregation).
 *
 * > **NOTE:** Available in v1.202.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultInstance = new alicloud.cen.Instance("defaultInstance", {cenInstanceName: "tf-example"});
 * const defaultTransitRouter = new alicloud.cen.TransitRouter("defaultTransitRouter", {cenId: defaultInstance.id});
 * const defaultTransitRouterRouteTable = new alicloud.cen.TransitRouterRouteTable("defaultTransitRouterRouteTable", {transitRouterId: defaultTransitRouter.transitRouterId});
 * const defaultTransitRouteTableAggregation = new alicloud.cen.TransitRouteTableAggregation("defaultTransitRouteTableAggregation", {
 *     transitRouteTableId: defaultTransitRouterRouteTable.transitRouterRouteTableId,
 *     transitRouteTableAggregationCidr: "10.0.0.0/8",
 *     transitRouteTableAggregationScope: "VPC",
 *     transitRouteTableAggregationName: "tf-example-name",
 *     transitRouteTableAggregationDescription: "tf-example-description",
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Enterprise Network (CEN) Transit Route Table Aggregation can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cen/transitRouteTableAggregation:TransitRouteTableAggregation example <transit_route_table_id>:<transit_route_table_aggregation_cidr>
 * ```
 */
export class TransitRouteTableAggregation extends pulumi.CustomResource {
    /**
     * Get an existing TransitRouteTableAggregation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitRouteTableAggregationState, opts?: pulumi.CustomResourceOptions): TransitRouteTableAggregation {
        return new TransitRouteTableAggregation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/transitRouteTableAggregation:TransitRouteTableAggregation';

    /**
     * Returns true if the given object is an instance of TransitRouteTableAggregation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitRouteTableAggregation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitRouteTableAggregation.__pulumiType;
    }

    /**
     * The status of the Transit Route Table Aggregation.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The destination CIDR block of the aggregate route. CIDR blocks that start with `0` or `100.64`. Multicast CIDR blocks, including `224.0.0.1` to `239.255.255.254`.
     */
    public readonly transitRouteTableAggregationCidr!: pulumi.Output<string>;
    /**
     * The description of the aggregate route.
     */
    public readonly transitRouteTableAggregationDescription!: pulumi.Output<string | undefined>;
    /**
     * The name of the aggregate route.
     */
    public readonly transitRouteTableAggregationName!: pulumi.Output<string | undefined>;
    /**
     * The scope of networks that you want to advertise the aggregate route. Valid Value: `VPC`.
     */
    public readonly transitRouteTableAggregationScope!: pulumi.Output<string>;
    /**
     * The ID of the route table of the Enterprise Edition transit router.
     */
    public readonly transitRouteTableId!: pulumi.Output<string>;

    /**
     * Create a TransitRouteTableAggregation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitRouteTableAggregationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitRouteTableAggregationArgs | TransitRouteTableAggregationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitRouteTableAggregationState | undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouteTableAggregationCidr"] = state ? state.transitRouteTableAggregationCidr : undefined;
            resourceInputs["transitRouteTableAggregationDescription"] = state ? state.transitRouteTableAggregationDescription : undefined;
            resourceInputs["transitRouteTableAggregationName"] = state ? state.transitRouteTableAggregationName : undefined;
            resourceInputs["transitRouteTableAggregationScope"] = state ? state.transitRouteTableAggregationScope : undefined;
            resourceInputs["transitRouteTableId"] = state ? state.transitRouteTableId : undefined;
        } else {
            const args = argsOrState as TransitRouteTableAggregationArgs | undefined;
            if ((!args || args.transitRouteTableAggregationCidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouteTableAggregationCidr'");
            }
            if ((!args || args.transitRouteTableAggregationScope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouteTableAggregationScope'");
            }
            if ((!args || args.transitRouteTableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouteTableId'");
            }
            resourceInputs["transitRouteTableAggregationCidr"] = args ? args.transitRouteTableAggregationCidr : undefined;
            resourceInputs["transitRouteTableAggregationDescription"] = args ? args.transitRouteTableAggregationDescription : undefined;
            resourceInputs["transitRouteTableAggregationName"] = args ? args.transitRouteTableAggregationName : undefined;
            resourceInputs["transitRouteTableAggregationScope"] = args ? args.transitRouteTableAggregationScope : undefined;
            resourceInputs["transitRouteTableId"] = args ? args.transitRouteTableId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitRouteTableAggregation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitRouteTableAggregation resources.
 */
export interface TransitRouteTableAggregationState {
    /**
     * The status of the Transit Route Table Aggregation.
     */
    status?: pulumi.Input<string>;
    /**
     * The destination CIDR block of the aggregate route. CIDR blocks that start with `0` or `100.64`. Multicast CIDR blocks, including `224.0.0.1` to `239.255.255.254`.
     */
    transitRouteTableAggregationCidr?: pulumi.Input<string>;
    /**
     * The description of the aggregate route.
     */
    transitRouteTableAggregationDescription?: pulumi.Input<string>;
    /**
     * The name of the aggregate route.
     */
    transitRouteTableAggregationName?: pulumi.Input<string>;
    /**
     * The scope of networks that you want to advertise the aggregate route. Valid Value: `VPC`.
     */
    transitRouteTableAggregationScope?: pulumi.Input<string>;
    /**
     * The ID of the route table of the Enterprise Edition transit router.
     */
    transitRouteTableId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitRouteTableAggregation resource.
 */
export interface TransitRouteTableAggregationArgs {
    /**
     * The destination CIDR block of the aggregate route. CIDR blocks that start with `0` or `100.64`. Multicast CIDR blocks, including `224.0.0.1` to `239.255.255.254`.
     */
    transitRouteTableAggregationCidr: pulumi.Input<string>;
    /**
     * The description of the aggregate route.
     */
    transitRouteTableAggregationDescription?: pulumi.Input<string>;
    /**
     * The name of the aggregate route.
     */
    transitRouteTableAggregationName?: pulumi.Input<string>;
    /**
     * The scope of networks that you want to advertise the aggregate route. Valid Value: `VPC`.
     */
    transitRouteTableAggregationScope: pulumi.Input<string>;
    /**
     * The ID of the route table of the Enterprise Edition transit router.
     */
    transitRouteTableId: pulumi.Input<string>;
}
