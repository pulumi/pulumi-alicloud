// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides Cen Instance Attachments of the current Alibaba Cloud User.
 *
 * > **NOTE:** Available in v1.97.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = pulumi.output(alicloud.cen.getInstanceAttachments({
 *     instanceId: "cen-o40h17ll9w********",
 * }));
 *
 * export const theFirstAttachmentedInstanceId = example.attachments[0].childInstanceId;
 * ```
 */
export function getInstanceAttachments(args: GetInstanceAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceAttachmentsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:cen/getInstanceAttachments:getInstanceAttachments", {
        "childInstanceRegionId": args.childInstanceRegionId,
        "childInstanceType": args.childInstanceType,
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceAttachments.
 */
export interface GetInstanceAttachmentsArgs {
    /**
     * The region to which the network to be queried belongs.
     */
    childInstanceRegionId?: string;
    /**
     * The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     */
    childInstanceType?: string;
    /**
     * The ID of the CEN instance.
     */
    instanceId: string;
    outputFile?: string;
    /**
     * The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
     */
    status?: string;
}

/**
 * A collection of values returned by getInstanceAttachments.
 */
export interface GetInstanceAttachmentsResult {
    /**
     * A list of CEN Instance Attachments. Each element contains the following attributes:
     */
    readonly attachments: outputs.cen.GetInstanceAttachmentsAttachment[];
    /**
     * The ID of the region to which the network belongs.
     */
    readonly childInstanceRegionId?: string;
    /**
     * The type of the associated network.
     */
    readonly childInstanceType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of CEN Instance Attachment IDs.
     */
    readonly ids: string[];
    /**
     * The ID of the CEN instance.
     */
    readonly instanceId: string;
    readonly outputFile?: string;
    /**
     * The status of the network.
     */
    readonly status?: string;
}

export function getInstanceAttachmentsOutput(args: GetInstanceAttachmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceAttachmentsResult> {
    return pulumi.output(args).apply(a => getInstanceAttachments(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceAttachments.
 */
export interface GetInstanceAttachmentsOutputArgs {
    /**
     * The region to which the network to be queried belongs.
     */
    childInstanceRegionId?: pulumi.Input<string>;
    /**
     * The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     */
    childInstanceType?: pulumi.Input<string>;
    /**
     * The ID of the CEN instance.
     */
    instanceId: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
     */
    status?: pulumi.Input<string>;
}
