// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Enterprise Network (CEN) Transit Router Multicast Domain Association resource.
 *
 * For information about Cloud Enterprise Network (CEN) Transit Router Multicast Domain Association and how to use it, see [What is Transit Router Multicast Domain Association](https://www.alibabacloud.com/help/en/cen/developer-reference/api-cbn-2017-09-12-associatetransitroutermulticastdomain).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const default = alicloud.cen.getTransitRouterAvailableResources({});
 * const zone = _default.then(_default => _default.resources?.[0]?.masterZones?.[1]);
 * const exampleNetwork = new alicloud.vpc.Network("exampleNetwork", {
 *     vpcName: name,
 *     cidrBlock: "192.168.0.0/16",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("exampleSwitch", {
 *     vswitchName: name,
 *     cidrBlock: "192.168.1.0/24",
 *     vpcId: exampleNetwork.id,
 *     zoneId: zone,
 * });
 * const exampleInstance = new alicloud.cen.Instance("exampleInstance", {cenInstanceName: name});
 * const exampleTransitRouter = new alicloud.cen.TransitRouter("exampleTransitRouter", {
 *     transitRouterName: name,
 *     cenId: exampleInstance.id,
 *     supportMulticast: true,
 * });
 * const exampleTransitRouterMulticastDomain = new alicloud.cen.TransitRouterMulticastDomain("exampleTransitRouterMulticastDomain", {
 *     transitRouterId: exampleTransitRouter.transitRouterId,
 *     transitRouterMulticastDomainName: name,
 * });
 * const exampleTransitRouterVpcAttachment = new alicloud.cen.TransitRouterVpcAttachment("exampleTransitRouterVpcAttachment", {
 *     cenId: exampleTransitRouter.cenId,
 *     transitRouterId: exampleTransitRouterMulticastDomain.transitRouterId,
 *     vpcId: exampleNetwork.id,
 *     zoneMappings: [{
 *         zoneId: zone,
 *         vswitchId: exampleSwitch.id,
 *     }],
 * });
 * const exampleTransitRouterMulticastDomainAssociation = new alicloud.cen.TransitRouterMulticastDomainAssociation("exampleTransitRouterMulticastDomainAssociation", {
 *     transitRouterMulticastDomainId: exampleTransitRouterMulticastDomain.id,
 *     transitRouterAttachmentId: exampleTransitRouterVpcAttachment.transitRouterAttachmentId,
 *     vswitchId: exampleSwitch.id,
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Enterprise Network (CEN) Transit Router Multicast Domain Association can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cen/transitRouterMulticastDomainAssociation:TransitRouterMulticastDomainAssociation example <transit_router_multicast_domain_id>:<transit_router_attachment_id>:<vswitch_id>
 * ```
 */
export class TransitRouterMulticastDomainAssociation extends pulumi.CustomResource {
    /**
     * Get an existing TransitRouterMulticastDomainAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitRouterMulticastDomainAssociationState, opts?: pulumi.CustomResourceOptions): TransitRouterMulticastDomainAssociation {
        return new TransitRouterMulticastDomainAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/transitRouterMulticastDomainAssociation:TransitRouterMulticastDomainAssociation';

    /**
     * Returns true if the given object is an instance of TransitRouterMulticastDomainAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitRouterMulticastDomainAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitRouterMulticastDomainAssociation.__pulumiType;
    }

    /**
     * The status of the Transit Router Multicast Domain Association.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ID of the VPC connection.
     */
    public readonly transitRouterAttachmentId!: pulumi.Output<string>;
    /**
     * The ID of the multicast domain.
     */
    public readonly transitRouterMulticastDomainId!: pulumi.Output<string>;
    /**
     * The ID of the vSwitch.
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a TransitRouterMulticastDomainAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitRouterMulticastDomainAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitRouterMulticastDomainAssociationArgs | TransitRouterMulticastDomainAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitRouterMulticastDomainAssociationState | undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouterAttachmentId"] = state ? state.transitRouterAttachmentId : undefined;
            resourceInputs["transitRouterMulticastDomainId"] = state ? state.transitRouterMulticastDomainId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as TransitRouterMulticastDomainAssociationArgs | undefined;
            if ((!args || args.transitRouterAttachmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterAttachmentId'");
            }
            if ((!args || args.transitRouterMulticastDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterMulticastDomainId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["transitRouterAttachmentId"] = args ? args.transitRouterAttachmentId : undefined;
            resourceInputs["transitRouterMulticastDomainId"] = args ? args.transitRouterMulticastDomainId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitRouterMulticastDomainAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitRouterMulticastDomainAssociation resources.
 */
export interface TransitRouterMulticastDomainAssociationState {
    /**
     * The status of the Transit Router Multicast Domain Association.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the VPC connection.
     */
    transitRouterAttachmentId?: pulumi.Input<string>;
    /**
     * The ID of the multicast domain.
     */
    transitRouterMulticastDomainId?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitRouterMulticastDomainAssociation resource.
 */
export interface TransitRouterMulticastDomainAssociationArgs {
    /**
     * The ID of the VPC connection.
     */
    transitRouterAttachmentId: pulumi.Input<string>;
    /**
     * The ID of the multicast domain.
     */
    transitRouterMulticastDomainId: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId: pulumi.Input<string>;
}
