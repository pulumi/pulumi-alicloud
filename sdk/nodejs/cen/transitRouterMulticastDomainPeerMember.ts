// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cen Transit Router Multicast Domain Peer Member resource.
 *
 * For information about Cen Transit Router Multicast Domain Peer Member and how to use it, see [What is Transit Router Multicast Domain Peer Member](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/api-cbn-2017-09-12-deregistertransitroutermulticastgroupmembers).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const hz = new alicloud.Provider("hz", {region: "cn-hangzhou"});
 * const qd = new alicloud.Provider("qd", {region: "cn-qingdao"});
 * const defaultInstance = new alicloud.cen.Instance("defaultInstance", {cenInstanceName: name});
 * const defaultBandwidthPackage = new alicloud.cen.BandwidthPackage("defaultBandwidthPackage", {
 *     bandwidth: 5,
 *     cenBandwidthPackageName: name,
 *     geographicRegionAId: "China",
 *     geographicRegionBId: "China",
 * });
 * const defaultBandwidthPackageAttachment = new alicloud.cen.BandwidthPackageAttachment("defaultBandwidthPackageAttachment", {
 *     instanceId: defaultInstance.id,
 *     bandwidthPackageId: defaultBandwidthPackage.id,
 * });
 * const defaultTransitRouter = new alicloud.cen.TransitRouter("defaultTransitRouter", {
 *     cenId: defaultBandwidthPackageAttachment.instanceId,
 *     supportMulticast: true,
 * }, {
 *     provider: alicloud.hz,
 * });
 * const peerTransitRouter = new alicloud.cen.TransitRouter("peerTransitRouter", {
 *     cenId: defaultBandwidthPackageAttachment.instanceId,
 *     supportMulticast: true,
 * }, {
 *     provider: alicloud.qd,
 * });
 * const defaultTransitRouterPeerAttachment = new alicloud.cen.TransitRouterPeerAttachment("defaultTransitRouterPeerAttachment", {
 *     cenId: defaultBandwidthPackageAttachment.instanceId,
 *     transitRouterId: defaultTransitRouter.transitRouterId,
 *     peerTransitRouterId: peerTransitRouter.transitRouterId,
 *     peerTransitRouterRegionId: "cn-qingdao",
 *     cenBandwidthPackageId: defaultBandwidthPackageAttachment.bandwidthPackageId,
 *     bandwidth: 5,
 *     transitRouterAttachmentDescription: name,
 *     transitRouterAttachmentName: name,
 * }, {
 *     provider: alicloud.hz,
 * });
 * const defaultTransitRouterMulticastDomain = new alicloud.cen.TransitRouterMulticastDomain("defaultTransitRouterMulticastDomain", {
 *     transitRouterId: defaultTransitRouterPeerAttachment.transitRouterId,
 *     transitRouterMulticastDomainName: name,
 *     transitRouterMulticastDomainDescription: name,
 * }, {
 *     provider: alicloud.hz,
 * });
 * const peerTransitRouterMulticastDomain = new alicloud.cen.TransitRouterMulticastDomain("peerTransitRouterMulticastDomain", {
 *     transitRouterId: defaultTransitRouterPeerAttachment.peerTransitRouterId,
 *     transitRouterMulticastDomainName: name,
 *     transitRouterMulticastDomainDescription: name,
 * }, {
 *     provider: alicloud.qd,
 * });
 * const defaultTransitRouterMulticastDomainPeerMember = new alicloud.cen.TransitRouterMulticastDomainPeerMember("defaultTransitRouterMulticastDomainPeerMember", {
 *     transitRouterMulticastDomainId: defaultTransitRouterMulticastDomain.id,
 *     peerTransitRouterMulticastDomainId: peerTransitRouterMulticastDomain.id,
 *     groupIpAddress: "224.0.0.1",
 * }, {
 *     provider: alicloud.hz,
 * });
 * ```
 *
 * ## Import
 *
 * Cen Transit Router Multicast Domain Peer Member can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cen/transitRouterMulticastDomainPeerMember:TransitRouterMulticastDomainPeerMember example <transit_router_multicast_domain_id>:<group_ip_address>:<peer_transit_router_multicast_domain_id>
 * ```
 */
export class TransitRouterMulticastDomainPeerMember extends pulumi.CustomResource {
    /**
     * Get an existing TransitRouterMulticastDomainPeerMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitRouterMulticastDomainPeerMemberState, opts?: pulumi.CustomResourceOptions): TransitRouterMulticastDomainPeerMember {
        return new TransitRouterMulticastDomainPeerMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/transitRouterMulticastDomainPeerMember:TransitRouterMulticastDomainPeerMember';

    /**
     * Returns true if the given object is an instance of TransitRouterMulticastDomainPeerMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitRouterMulticastDomainPeerMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitRouterMulticastDomainPeerMember.__pulumiType;
    }

    /**
     * Specifies whether only to precheck the request.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The IP address of the multicast group to which the multicast member belongs. Value range: **224.0.0.1** to **239.255.255.254**.If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
     */
    public readonly groupIpAddress!: pulumi.Output<string>;
    /**
     * The IDs of the inter-region multicast domains.
     */
    public readonly peerTransitRouterMulticastDomainId!: pulumi.Output<string>;
    /**
     * The status of the multicast resource. Valid values:
     * - Registering: being created
     * - Registered: available
     * - Deregistering: being deleted
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ID of the multicast domain to which the multicast member belongs.
     */
    public readonly transitRouterMulticastDomainId!: pulumi.Output<string>;

    /**
     * Create a TransitRouterMulticastDomainPeerMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitRouterMulticastDomainPeerMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitRouterMulticastDomainPeerMemberArgs | TransitRouterMulticastDomainPeerMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitRouterMulticastDomainPeerMemberState | undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["groupIpAddress"] = state ? state.groupIpAddress : undefined;
            resourceInputs["peerTransitRouterMulticastDomainId"] = state ? state.peerTransitRouterMulticastDomainId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouterMulticastDomainId"] = state ? state.transitRouterMulticastDomainId : undefined;
        } else {
            const args = argsOrState as TransitRouterMulticastDomainPeerMemberArgs | undefined;
            if ((!args || args.groupIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupIpAddress'");
            }
            if ((!args || args.peerTransitRouterMulticastDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerTransitRouterMulticastDomainId'");
            }
            if ((!args || args.transitRouterMulticastDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterMulticastDomainId'");
            }
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["groupIpAddress"] = args ? args.groupIpAddress : undefined;
            resourceInputs["peerTransitRouterMulticastDomainId"] = args ? args.peerTransitRouterMulticastDomainId : undefined;
            resourceInputs["transitRouterMulticastDomainId"] = args ? args.transitRouterMulticastDomainId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitRouterMulticastDomainPeerMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitRouterMulticastDomainPeerMember resources.
 */
export interface TransitRouterMulticastDomainPeerMemberState {
    /**
     * Specifies whether only to precheck the request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The IP address of the multicast group to which the multicast member belongs. Value range: **224.0.0.1** to **239.255.255.254**.If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
     */
    groupIpAddress?: pulumi.Input<string>;
    /**
     * The IDs of the inter-region multicast domains.
     */
    peerTransitRouterMulticastDomainId?: pulumi.Input<string>;
    /**
     * The status of the multicast resource. Valid values:
     * - Registering: being created
     * - Registered: available
     * - Deregistering: being deleted
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the multicast domain to which the multicast member belongs.
     */
    transitRouterMulticastDomainId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitRouterMulticastDomainPeerMember resource.
 */
export interface TransitRouterMulticastDomainPeerMemberArgs {
    /**
     * Specifies whether only to precheck the request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The IP address of the multicast group to which the multicast member belongs. Value range: **224.0.0.1** to **239.255.255.254**.If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
     */
    groupIpAddress: pulumi.Input<string>;
    /**
     * The IDs of the inter-region multicast domains.
     */
    peerTransitRouterMulticastDomainId: pulumi.Input<string>;
    /**
     * The ID of the multicast domain to which the multicast member belongs.
     */
    transitRouterMulticastDomainId: pulumi.Input<string>;
}
