// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides CEN flow logs available to the user.
 *
 * > **NOTE:** Available in 1.78.0+
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.cen.getFlowlogs({
 *     ids: ["flowlog-tig1xxxxx"],
 *     nameRegex: "^foo",
 * });
 * export const firstCenFlowlogId = data.alicloud_cen_instances["default"].flowlogs[0].id;
 * ```
 */
export function getFlowlogs(args?: GetFlowlogsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowlogsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:cen/getFlowlogs:getFlowlogs", {
        "cenId": args.cenId,
        "description": args.description,
        "ids": args.ids,
        "logStoreName": args.logStoreName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowlogs.
 */
export interface GetFlowlogsArgs {
    /**
     * The ID of the CEN Instance.
     */
    cenId?: string;
    /**
     * The description of flowlog.
     */
    description?: string;
    /**
     * A list of CEN flow log IDs.
     */
    ids?: string[];
    /**
     * The name of the log store which is in the  `projectName` SLS project.
     */
    logStoreName?: string;
    /**
     * A regex string to filter CEN flow logs by name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The name of the SLS project.
     */
    projectName?: string;
    /**
     * The status of flowlog. Valid values: ["Active", "Inactive"]. Default to "Active".
     */
    status?: string;
}

/**
 * A collection of values returned by getFlowlogs.
 */
export interface GetFlowlogsResult {
    /**
     * The ID of the CEN Instance.
     */
    readonly cenId?: string;
    /**
     * The description of flowlog.
     */
    readonly description?: string;
    readonly flowlogs: outputs.cen.GetFlowlogsFlowlog[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of CEN flow log IDs.
     */
    readonly ids: string[];
    /**
     * The name of the log store which is in the  `projectName` SLS project.
     */
    readonly logStoreName?: string;
    readonly nameRegex?: string;
    /**
     * A list of CEN flow log names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The name of the SLS project.
     */
    readonly projectName?: string;
    /**
     * The status of flowlog.
     */
    readonly status?: string;
}
/**
 * This data source provides CEN flow logs available to the user.
 *
 * > **NOTE:** Available in 1.78.0+
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.cen.getFlowlogs({
 *     ids: ["flowlog-tig1xxxxx"],
 *     nameRegex: "^foo",
 * });
 * export const firstCenFlowlogId = data.alicloud_cen_instances["default"].flowlogs[0].id;
 * ```
 */
export function getFlowlogsOutput(args?: GetFlowlogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlowlogsResult> {
    return pulumi.output(args).apply((a: any) => getFlowlogs(a, opts))
}

/**
 * A collection of arguments for invoking getFlowlogs.
 */
export interface GetFlowlogsOutputArgs {
    /**
     * The ID of the CEN Instance.
     */
    cenId?: pulumi.Input<string>;
    /**
     * The description of flowlog.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of CEN flow log IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the log store which is in the  `projectName` SLS project.
     */
    logStoreName?: pulumi.Input<string>;
    /**
     * A regex string to filter CEN flow logs by name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the SLS project.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The status of flowlog. Valid values: ["Active", "Inactive"]. Default to "Active".
     */
    status?: pulumi.Input<string>;
}
