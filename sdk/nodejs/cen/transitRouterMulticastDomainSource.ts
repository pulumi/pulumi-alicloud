// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cen Transit Router Multicast Domain Source resource.
 *
 * For information about Cen Transit Router Multicast Domain Source and how to use it, see [What is Transit Router Multicast Domain Source](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/api-doc-cbn-2017-09-12-api-doc-registertransitroutermulticastgroupsources).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Import
 *
 * Cen Transit Router Multicast Domain Source can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cen/transitRouterMulticastDomainSource:TransitRouterMulticastDomainSource example <transit_router_multicast_domain_id>:<group_ip_address>:<network_interface_id>
 * ```
 */
export class TransitRouterMulticastDomainSource extends pulumi.CustomResource {
    /**
     * Get an existing TransitRouterMulticastDomainSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitRouterMulticastDomainSourceState, opts?: pulumi.CustomResourceOptions): TransitRouterMulticastDomainSource {
        return new TransitRouterMulticastDomainSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/transitRouterMulticastDomainSource:TransitRouterMulticastDomainSource';

    /**
     * Returns true if the given object is an instance of TransitRouterMulticastDomainSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitRouterMulticastDomainSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitRouterMulticastDomainSource.__pulumiType;
    }

    /**
     * The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
     */
    public readonly groupIpAddress!: pulumi.Output<string>;
    /**
     * ENI ID of the multicast source.
     */
    public readonly networkInterfaceId!: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ID of the multicast domain to which the multicast source belongs.
     */
    public readonly transitRouterMulticastDomainId!: pulumi.Output<string>;
    /**
     * The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a TransitRouterMulticastDomainSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitRouterMulticastDomainSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitRouterMulticastDomainSourceArgs | TransitRouterMulticastDomainSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitRouterMulticastDomainSourceState | undefined;
            resourceInputs["groupIpAddress"] = state ? state.groupIpAddress : undefined;
            resourceInputs["networkInterfaceId"] = state ? state.networkInterfaceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouterMulticastDomainId"] = state ? state.transitRouterMulticastDomainId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as TransitRouterMulticastDomainSourceArgs | undefined;
            if ((!args || args.groupIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupIpAddress'");
            }
            if ((!args || args.networkInterfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaceId'");
            }
            if ((!args || args.transitRouterMulticastDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterMulticastDomainId'");
            }
            resourceInputs["groupIpAddress"] = args ? args.groupIpAddress : undefined;
            resourceInputs["networkInterfaceId"] = args ? args.networkInterfaceId : undefined;
            resourceInputs["transitRouterMulticastDomainId"] = args ? args.transitRouterMulticastDomainId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitRouterMulticastDomainSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitRouterMulticastDomainSource resources.
 */
export interface TransitRouterMulticastDomainSourceState {
    /**
     * The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
     */
    groupIpAddress?: pulumi.Input<string>;
    /**
     * ENI ID of the multicast source.
     */
    networkInterfaceId?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the multicast domain to which the multicast source belongs.
     */
    transitRouterMulticastDomainId?: pulumi.Input<string>;
    /**
     * The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitRouterMulticastDomainSource resource.
 */
export interface TransitRouterMulticastDomainSourceArgs {
    /**
     * The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
     */
    groupIpAddress: pulumi.Input<string>;
    /**
     * ENI ID of the multicast source.
     */
    networkInterfaceId: pulumi.Input<string>;
    /**
     * The ID of the multicast domain to which the multicast source belongs.
     */
    transitRouterMulticastDomainId: pulumi.Input<string>;
    /**
     * The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
     */
    vpcId?: pulumi.Input<string>;
}
