// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a CEN transit router route table resource.[What is Cen Transit Router Route Table](https://help.aliyun.com/document_detail/261233.html)
 *
 * > **NOTE:** Available in 1.126.0+
 *
 * ## Import
 *
 * CEN transit router route table
 *
 * can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cen/transitRouterRouteTable:TransitRouterRouteTable default tr-*********:vtb-********
 * ```
 */
export class TransitRouterRouteTable extends pulumi.CustomResource {
    /**
     * Get an existing TransitRouterRouteTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitRouterRouteTableState, opts?: pulumi.CustomResourceOptions): TransitRouterRouteTable {
        return new TransitRouterRouteTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/transitRouterRouteTable:TransitRouterRouteTable';

    /**
     * Returns true if the given object is an instance of TransitRouterRouteTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitRouterRouteTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitRouterRouteTable.__pulumiType;
    }

    /**
     * The dry run.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The associating status of the Transit Router.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ID of the transit router.
     */
    public readonly transitRouterId!: pulumi.Output<string>;
    /**
     * The description of the transit router route table.
     */
    public readonly transitRouterRouteTableDescription!: pulumi.Output<string>;
    /**
     * The id of the transit router route table.
     */
    public /*out*/ readonly transitRouterRouteTableId!: pulumi.Output<string>;
    /**
     * The name of the transit router route table.
     */
    public readonly transitRouterRouteTableName!: pulumi.Output<string | undefined>;
    /**
     * The type of the transit router route table. Valid values: `Custom`, `System`.
     */
    public /*out*/ readonly transitRouterRouteTableType!: pulumi.Output<string>;

    /**
     * Create a TransitRouterRouteTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitRouterRouteTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitRouterRouteTableArgs | TransitRouterRouteTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitRouterRouteTableState | undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
            resourceInputs["transitRouterRouteTableDescription"] = state ? state.transitRouterRouteTableDescription : undefined;
            resourceInputs["transitRouterRouteTableId"] = state ? state.transitRouterRouteTableId : undefined;
            resourceInputs["transitRouterRouteTableName"] = state ? state.transitRouterRouteTableName : undefined;
            resourceInputs["transitRouterRouteTableType"] = state ? state.transitRouterRouteTableType : undefined;
        } else {
            const args = argsOrState as TransitRouterRouteTableArgs | undefined;
            if ((!args || args.transitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterId'");
            }
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
            resourceInputs["transitRouterRouteTableDescription"] = args ? args.transitRouterRouteTableDescription : undefined;
            resourceInputs["transitRouterRouteTableName"] = args ? args.transitRouterRouteTableName : undefined;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["transitRouterRouteTableId"] = undefined /*out*/;
            resourceInputs["transitRouterRouteTableType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitRouterRouteTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitRouterRouteTable resources.
 */
export interface TransitRouterRouteTableState {
    /**
     * The dry run.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The associating status of the Transit Router.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the transit router.
     */
    transitRouterId?: pulumi.Input<string>;
    /**
     * The description of the transit router route table.
     */
    transitRouterRouteTableDescription?: pulumi.Input<string>;
    /**
     * The id of the transit router route table.
     */
    transitRouterRouteTableId?: pulumi.Input<string>;
    /**
     * The name of the transit router route table.
     */
    transitRouterRouteTableName?: pulumi.Input<string>;
    /**
     * The type of the transit router route table. Valid values: `Custom`, `System`.
     */
    transitRouterRouteTableType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitRouterRouteTable resource.
 */
export interface TransitRouterRouteTableArgs {
    /**
     * The dry run.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the transit router.
     */
    transitRouterId: pulumi.Input<string>;
    /**
     * The description of the transit router route table.
     */
    transitRouterRouteTableDescription?: pulumi.Input<string>;
    /**
     * The name of the transit router route table.
     */
    transitRouterRouteTableName?: pulumi.Input<string>;
}
