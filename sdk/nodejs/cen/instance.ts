// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Enterprise Network (CEN) Cen Instance resource.
 *
 * For information about Cloud Enterprise Network (CEN) Cen Instance and how to use it, see [What is Cen Instance](https://www.alibabacloud.com/help/en/cen/developer-reference/api-cbn-2017-09-12-createcen).
 *
 * > **NOTE:** Available since v1.15.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.cen.Instance("default", {
 *     cenInstanceName: name,
 *     description: name,
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Enterprise Network (CEN) Cen Instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cen/instance:Instance example <id>
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cen/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * The name of the CEN instance.
     */
    declare public readonly cenInstanceName: pulumi.Output<string>;
    /**
     * The time when the CEN instance was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The description of the CEN instance.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * . Field 'name' has been deprecated from provider version 1.246.0. New field 'cen_instance_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.98.0. New field 'cen_instance_name' instead.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The level of CIDR block overlapping. Valid values:  REDUCED: Overlapped CIDR blocks are allowed. However, the overlapped CIDR blocks cannot be the same.
     */
    declare public readonly protectionLevel: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The state of the CEN instance.   Creating: The CEN instance is being created. Active: The CEN instance is running. Deleting: The CEN instance is being deleted.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tags of the CEN instance.
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["cenInstanceName"] = state?.cenInstanceName;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["protectionLevel"] = state?.protectionLevel;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            resourceInputs["cenInstanceName"] = args?.cenInstanceName;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["protectionLevel"] = args?.protectionLevel;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * The name of the CEN instance.
     */
    cenInstanceName?: pulumi.Input<string>;
    /**
     * The time when the CEN instance was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the CEN instance.
     */
    description?: pulumi.Input<string>;
    /**
     * . Field 'name' has been deprecated from provider version 1.246.0. New field 'cen_instance_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.98.0. New field 'cen_instance_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The level of CIDR block overlapping. Valid values:  REDUCED: Overlapped CIDR blocks are allowed. However, the overlapped CIDR blocks cannot be the same.
     */
    protectionLevel?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The state of the CEN instance.   Creating: The CEN instance is being created. Active: The CEN instance is running. Deleting: The CEN instance is being deleted.
     */
    status?: pulumi.Input<string>;
    /**
     * The tags of the CEN instance.
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The name of the CEN instance.
     */
    cenInstanceName?: pulumi.Input<string>;
    /**
     * The description of the CEN instance.
     */
    description?: pulumi.Input<string>;
    /**
     * . Field 'name' has been deprecated from provider version 1.246.0. New field 'cen_instance_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.98.0. New field 'cen_instance_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The level of CIDR block overlapping. Valid values:  REDUCED: Overlapped CIDR blocks are allowed. However, the overlapped CIDR blocks cannot be the same.
     */
    protectionLevel?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tags of the CEN instance.
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
