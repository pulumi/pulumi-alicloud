// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cdn/domain:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly authConfig: pulumi.Output<outputs.cdn.DomainAuthConfig | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly blockIps: pulumi.Output<string[] | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly cacheConfigs: pulumi.Output<outputs.cdn.DomainCacheConfig[] | undefined>;
    declare public readonly cdnType: pulumi.Output<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly certificateConfig: pulumi.Output<outputs.cdn.DomainCertificateConfig | undefined>;
    declare public readonly domainName: pulumi.Output<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly httpHeaderConfigs: pulumi.Output<outputs.cdn.DomainHttpHeaderConfig[] | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly optimizeEnable: pulumi.Output<string | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly page404Config: pulumi.Output<outputs.cdn.DomainPage404Config | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly pageCompressEnable: pulumi.Output<string | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly parameterFilterConfig: pulumi.Output<outputs.cdn.DomainParameterFilterConfig | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly rangeEnable: pulumi.Output<string | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly referConfig: pulumi.Output<outputs.cdn.DomainReferConfig | undefined>;
    declare public readonly scope: pulumi.Output<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` block `port` argument instead.
     */
    declare public readonly sourcePort: pulumi.Output<number | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` block `type` argument instead.
     */
    declare public readonly sourceType: pulumi.Output<string | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` argument instead.
     */
    declare public readonly sources: pulumi.Output<string[] | undefined>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    declare public readonly videoSeekEnable: pulumi.Output<string | undefined>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs | DomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainState | undefined;
            resourceInputs["authConfig"] = state?.authConfig;
            resourceInputs["blockIps"] = state?.blockIps;
            resourceInputs["cacheConfigs"] = state?.cacheConfigs;
            resourceInputs["cdnType"] = state?.cdnType;
            resourceInputs["certificateConfig"] = state?.certificateConfig;
            resourceInputs["domainName"] = state?.domainName;
            resourceInputs["httpHeaderConfigs"] = state?.httpHeaderConfigs;
            resourceInputs["optimizeEnable"] = state?.optimizeEnable;
            resourceInputs["page404Config"] = state?.page404Config;
            resourceInputs["pageCompressEnable"] = state?.pageCompressEnable;
            resourceInputs["parameterFilterConfig"] = state?.parameterFilterConfig;
            resourceInputs["rangeEnable"] = state?.rangeEnable;
            resourceInputs["referConfig"] = state?.referConfig;
            resourceInputs["scope"] = state?.scope;
            resourceInputs["sourcePort"] = state?.sourcePort;
            resourceInputs["sourceType"] = state?.sourceType;
            resourceInputs["sources"] = state?.sources;
            resourceInputs["videoSeekEnable"] = state?.videoSeekEnable;
        } else {
            const args = argsOrState as DomainArgs | undefined;
            if (args?.cdnType === undefined && !opts.urn) {
                throw new Error("Missing required property 'cdnType'");
            }
            if (args?.domainName === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            resourceInputs["authConfig"] = args?.authConfig;
            resourceInputs["blockIps"] = args?.blockIps;
            resourceInputs["cacheConfigs"] = args?.cacheConfigs;
            resourceInputs["cdnType"] = args?.cdnType;
            resourceInputs["certificateConfig"] = args?.certificateConfig;
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["httpHeaderConfigs"] = args?.httpHeaderConfigs;
            resourceInputs["optimizeEnable"] = args?.optimizeEnable;
            resourceInputs["page404Config"] = args?.page404Config;
            resourceInputs["pageCompressEnable"] = args?.pageCompressEnable;
            resourceInputs["parameterFilterConfig"] = args?.parameterFilterConfig;
            resourceInputs["rangeEnable"] = args?.rangeEnable;
            resourceInputs["referConfig"] = args?.referConfig;
            resourceInputs["scope"] = args?.scope;
            resourceInputs["sourcePort"] = args?.sourcePort;
            resourceInputs["sourceType"] = args?.sourceType;
            resourceInputs["sources"] = args?.sources;
            resourceInputs["videoSeekEnable"] = args?.videoSeekEnable;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    authConfig?: pulumi.Input<inputs.cdn.DomainAuthConfig>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    blockIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    cacheConfigs?: pulumi.Input<pulumi.Input<inputs.cdn.DomainCacheConfig>[]>;
    cdnType?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    certificateConfig?: pulumi.Input<inputs.cdn.DomainCertificateConfig>;
    domainName?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    httpHeaderConfigs?: pulumi.Input<pulumi.Input<inputs.cdn.DomainHttpHeaderConfig>[]>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    optimizeEnable?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    page404Config?: pulumi.Input<inputs.cdn.DomainPage404Config>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    pageCompressEnable?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    parameterFilterConfig?: pulumi.Input<inputs.cdn.DomainParameterFilterConfig>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    rangeEnable?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    referConfig?: pulumi.Input<inputs.cdn.DomainReferConfig>;
    scope?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` block `port` argument instead.
     */
    sourcePort?: pulumi.Input<number>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` block `type` argument instead.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` argument instead.
     */
    sources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    videoSeekEnable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    authConfig?: pulumi.Input<inputs.cdn.DomainAuthConfig>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    blockIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    cacheConfigs?: pulumi.Input<pulumi.Input<inputs.cdn.DomainCacheConfig>[]>;
    cdnType: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    certificateConfig?: pulumi.Input<inputs.cdn.DomainCertificateConfig>;
    domainName: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    httpHeaderConfigs?: pulumi.Input<pulumi.Input<inputs.cdn.DomainHttpHeaderConfig>[]>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    optimizeEnable?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    page404Config?: pulumi.Input<inputs.cdn.DomainPage404Config>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    pageCompressEnable?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    parameterFilterConfig?: pulumi.Input<inputs.cdn.DomainParameterFilterConfig>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    rangeEnable?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    referConfig?: pulumi.Input<inputs.cdn.DomainReferConfig>;
    scope?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` block `port` argument instead.
     */
    sourcePort?: pulumi.Input<number>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` block `type` argument instead.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * @deprecated Use `alicloud.cdn.DomainNew` configuration `sources` argument instead.
     */
    sources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Use `alicloud.cdn.DomainConfig` configuration `functionName` and `functionArgs` arguments instead.
     */
    videoSeekEnable?: pulumi.Input<string>;
}
