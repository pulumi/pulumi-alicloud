// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ContainerGroupArgs, ContainerGroupState } from "./containerGroup";
export type ContainerGroup = import("./containerGroup").ContainerGroup;
export const ContainerGroup: typeof import("./containerGroup").ContainerGroup = null as any;
utilities.lazyLoad(exports, ["ContainerGroup"], () => require("./containerGroup"));

export { GetContainerGroupsArgs, GetContainerGroupsResult, GetContainerGroupsOutputArgs } from "./getContainerGroups";
export const getContainerGroups: typeof import("./getContainerGroups").getContainerGroups = null as any;
export const getContainerGroupsOutput: typeof import("./getContainerGroups").getContainerGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getContainerGroups","getContainerGroupsOutput"], () => require("./getContainerGroups"));

export { GetImageCachesArgs, GetImageCachesResult, GetImageCachesOutputArgs } from "./getImageCaches";
export const getImageCaches: typeof import("./getImageCaches").getImageCaches = null as any;
export const getImageCachesOutput: typeof import("./getImageCaches").getImageCachesOutput = null as any;
utilities.lazyLoad(exports, ["getImageCaches","getImageCachesOutput"], () => require("./getImageCaches"));

export { GetVirtualNodesArgs, GetVirtualNodesResult, GetVirtualNodesOutputArgs } from "./getVirtualNodes";
export const getVirtualNodes: typeof import("./getVirtualNodes").getVirtualNodes = null as any;
export const getVirtualNodesOutput: typeof import("./getVirtualNodes").getVirtualNodesOutput = null as any;
utilities.lazyLoad(exports, ["getVirtualNodes","getVirtualNodesOutput"], () => require("./getVirtualNodes"));

export { GetZonesArgs, GetZonesResult, GetZonesOutputArgs } from "./getZones";
export const getZones: typeof import("./getZones").getZones = null as any;
export const getZonesOutput: typeof import("./getZones").getZonesOutput = null as any;
utilities.lazyLoad(exports, ["getZones","getZonesOutput"], () => require("./getZones"));

export { ImageCacheArgs, ImageCacheState } from "./imageCache";
export type ImageCache = import("./imageCache").ImageCache;
export const ImageCache: typeof import("./imageCache").ImageCache = null as any;
utilities.lazyLoad(exports, ["ImageCache"], () => require("./imageCache"));

export { OpenApiImageCacheArgs, OpenApiImageCacheState } from "./openApiImageCache";
export type OpenApiImageCache = import("./openApiImageCache").OpenApiImageCache;
export const OpenApiImageCache: typeof import("./openApiImageCache").OpenApiImageCache = null as any;
utilities.lazyLoad(exports, ["OpenApiImageCache"], () => require("./openApiImageCache"));

export { VirtualNodeArgs, VirtualNodeState } from "./virtualNode";
export type VirtualNode = import("./virtualNode").VirtualNode;
export const VirtualNode: typeof import("./virtualNode").VirtualNode = null as any;
utilities.lazyLoad(exports, ["VirtualNode"], () => require("./virtualNode"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:eci/containerGroup:ContainerGroup":
                return new ContainerGroup(name, <any>undefined, { urn })
            case "alicloud:eci/imageCache:ImageCache":
                return new ImageCache(name, <any>undefined, { urn })
            case "alicloud:eci/openApiImageCache:OpenApiImageCache":
                return new OpenApiImageCache(name, <any>undefined, { urn })
            case "alicloud:eci/virtualNode:VirtualNode":
                return new VirtualNode(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "eci/containerGroup", _module)
pulumi.runtime.registerResourceModule("alicloud", "eci/imageCache", _module)
pulumi.runtime.registerResourceModule("alicloud", "eci/openApiImageCache", _module)
pulumi.runtime.registerResourceModule("alicloud", "eci/virtualNode", _module)
