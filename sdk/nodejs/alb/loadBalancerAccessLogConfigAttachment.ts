// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Application Load Balancer (ALB) Load Balancer Access Log Config Attachment resource.
 *
 * Attachment between ALB and AccessLog.
 *
 * For information about Application Load Balancer (ALB) Load Balancer Access Log Config Attachment and how to use it, see [What is Load Balancer Access Log Config Attachment](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-enableloadbalanceraccesslog).
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Import
 *
 * Application Load Balancer (ALB) Load Balancer Access Log Config Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:alb/loadBalancerAccessLogConfigAttachment:LoadBalancerAccessLogConfigAttachment example <id>
 * ```
 */
export class LoadBalancerAccessLogConfigAttachment extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancerAccessLogConfigAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerAccessLogConfigAttachmentState, opts?: pulumi.CustomResourceOptions): LoadBalancerAccessLogConfigAttachment {
        return new LoadBalancerAccessLogConfigAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:alb/loadBalancerAccessLogConfigAttachment:LoadBalancerAccessLogConfigAttachment';

    /**
     * Returns true if the given object is an instance of LoadBalancerAccessLogConfigAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancerAccessLogConfigAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancerAccessLogConfigAttachment.__pulumiType;
    }

    /**
     * The creation time of the resource
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The ID of the load balancing instance.
     */
    public readonly loadBalancerId!: pulumi.Output<string>;
    /**
     * The log items shipped by the access log.
     */
    public readonly logProject!: pulumi.Output<string>;
    /**
     * Logstore for log delivery.
     */
    public readonly logStore!: pulumi.Output<string>;

    /**
     * Create a LoadBalancerAccessLogConfigAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerAccessLogConfigAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerAccessLogConfigAttachmentArgs | LoadBalancerAccessLogConfigAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerAccessLogConfigAttachmentState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["loadBalancerId"] = state ? state.loadBalancerId : undefined;
            resourceInputs["logProject"] = state ? state.logProject : undefined;
            resourceInputs["logStore"] = state ? state.logStore : undefined;
        } else {
            const args = argsOrState as LoadBalancerAccessLogConfigAttachmentArgs | undefined;
            if ((!args || args.loadBalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerId'");
            }
            if ((!args || args.logProject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logProject'");
            }
            if ((!args || args.logStore === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logStore'");
            }
            resourceInputs["loadBalancerId"] = args ? args.loadBalancerId : undefined;
            resourceInputs["logProject"] = args ? args.logProject : undefined;
            resourceInputs["logStore"] = args ? args.logStore : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancerAccessLogConfigAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancerAccessLogConfigAttachment resources.
 */
export interface LoadBalancerAccessLogConfigAttachmentState {
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the load balancing instance.
     */
    loadBalancerId?: pulumi.Input<string>;
    /**
     * The log items shipped by the access log.
     */
    logProject?: pulumi.Input<string>;
    /**
     * Logstore for log delivery.
     */
    logStore?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadBalancerAccessLogConfigAttachment resource.
 */
export interface LoadBalancerAccessLogConfigAttachmentArgs {
    /**
     * The ID of the load balancing instance.
     */
    loadBalancerId: pulumi.Input<string>;
    /**
     * The log items shipped by the access log.
     */
    logProject: pulumi.Input<string>;
    /**
     * Logstore for log delivery.
     */
    logStore: pulumi.Input<string>;
}
