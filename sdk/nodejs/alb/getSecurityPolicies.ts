// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Alb Security Policies of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.130.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.alb.getSecurityPolicies({});
 * export const albSecurityPolicyId1 = ids.then(ids => ids.policies?[0]?.id);
 * const nameRegex = alicloud.alb.getSecurityPolicies({
 *     nameRegex: "^my-SecurityPolicy",
 * });
 * export const albSecurityPolicyId2 = nameRegex.then(nameRegex => nameRegex.policies?[0]?.id);
 * ```
 */
export function getSecurityPolicies(args?: GetSecurityPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityPoliciesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:alb/getSecurityPolicies:getSecurityPolicies", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "securityPolicyIds": args.securityPolicyIds,
        "securityPolicyName": args.securityPolicyName,
        "status": args.status,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicies.
 */
export interface GetSecurityPoliciesArgs {
    /**
     * A list of Security Policy IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Security Policy name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The security policy ids.
     */
    securityPolicyIds?: string[];
    /**
     * The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     */
    securityPolicyName?: string;
    /**
     * The status of the resource.
     */
    status?: string;
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getSecurityPolicies.
 */
export interface GetSecurityPoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly policies: outputs.alb.GetSecurityPoliciesPolicy[];
    readonly resourceGroupId?: string;
    readonly securityPolicyIds?: string[];
    readonly securityPolicyName?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: any};
}

export function getSecurityPoliciesOutput(args?: GetSecurityPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityPoliciesResult> {
    return pulumi.output(args).apply(a => getSecurityPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityPolicies.
 */
export interface GetSecurityPoliciesOutputArgs {
    /**
     * A list of Security Policy IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Security Policy name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The security policy ids.
     */
    securityPolicyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     */
    securityPolicyName?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: any}>;
}
