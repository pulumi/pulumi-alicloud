// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Alb Load Balancer Common Bandwidth Package Attachment resource.
 *
 * For information about Alb Load Balancer Common Bandwidth Package Attachment and how to use it, see [What is Load Balancer Common Bandwidth Package Attachment](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-attachcommonbandwidthpackagetoloadbalancer).
 *
 * > **NOTE:** Available since v1.200.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const _default = alicloud.alb.getZones({});
 * const defaultGetResourceGroups = alicloud.resourcemanager.getResourceGroups({});
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch: alicloud.vpc.Switch[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     defaultSwitch.push(new alicloud.vpc.Switch(`default-${range.value}`, {
 *         vpcId: defaultNetwork.id,
 *         cidrBlock: std.format({
 *             input: "10.4.%d.0/24",
 *             args: [range.value + 1],
 *         }).then(invoke => invoke.result),
 *         zoneId: _default.then(_default => _default.zones[range.value].id),
 *         vswitchName: std.format({
 *             input: `${name}_%d`,
 *             args: [range.value + 1],
 *         }).then(invoke => invoke.result),
 *     }));
 * }
 * const defaultLoadBalancer = new alicloud.alb.LoadBalancer("default", {
 *     vpcId: defaultNetwork.id,
 *     addressType: "Internet",
 *     addressAllocatedMode: "Fixed",
 *     loadBalancerName: name,
 *     loadBalancerEdition: "Basic",
 *     resourceGroupId: defaultGetResourceGroups.then(defaultGetResourceGroups => defaultGetResourceGroups.groups?.[0]?.id),
 *     loadBalancerBillingConfig: {
 *         payType: "PayAsYouGo",
 *     },
 *     tags: {
 *         Created: "TF",
 *     },
 *     zoneMappings: [
 *         {
 *             vswitchId: defaultSwitch[0].id,
 *             zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *         },
 *         {
 *             vswitchId: defaultSwitch[1].id,
 *             zoneId: _default.then(_default => _default.zones?.[1]?.id),
 *         },
 *     ],
 *     modificationProtectionConfig: {
 *         status: "NonProtection",
 *     },
 * });
 * const defaultCommonBandwithPackage = new alicloud.vpc.CommonBandwithPackage("default", {
 *     bandwidth: "3",
 *     internetChargeType: "PayByBandwidth",
 * });
 * const defaultLoadBalancerCommonBandwidthPackageAttachment = new alicloud.alb.LoadBalancerCommonBandwidthPackageAttachment("default", {
 *     bandwidthPackageId: defaultCommonBandwithPackage.id,
 *     loadBalancerId: defaultLoadBalancer.id,
 * });
 * ```
 *
 * ## Import
 *
 * Alb Load Balancer Common Bandwidth Package Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:alb/loadBalancerCommonBandwidthPackageAttachment:LoadBalancerCommonBandwidthPackageAttachment example <load_balancer_id>:<bandwidth_package_id>
 * ```
 */
export class LoadBalancerCommonBandwidthPackageAttachment extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancerCommonBandwidthPackageAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerCommonBandwidthPackageAttachmentState, opts?: pulumi.CustomResourceOptions): LoadBalancerCommonBandwidthPackageAttachment {
        return new LoadBalancerCommonBandwidthPackageAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:alb/loadBalancerCommonBandwidthPackageAttachment:LoadBalancerCommonBandwidthPackageAttachment';

    /**
     * Returns true if the given object is an instance of LoadBalancerCommonBandwidthPackageAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancerCommonBandwidthPackageAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancerCommonBandwidthPackageAttachment.__pulumiType;
    }

    /**
     * The ID of the bound shared bandwidth package.
     */
    declare public readonly bandwidthPackageId: pulumi.Output<string>;
    /**
     * Whether to PreCheck this request only. Value:-**true**: sends a check request and does not bind the shared bandwidth package to the load balancing instance. Check items include whether required parameters, request format, and business restrictions have been filled in. If the check fails, the corresponding error is returned. If the check passes, the error code 'DryRunOperation' is returned '.-**false** (default): Sends a normal request, returns the HTTP 2xx status code after the check, and directly performs the operation.
     */
    declare public readonly dryRun: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the applied server load balancer instance.
     */
    declare public readonly loadBalancerId: pulumi.Output<string>;
    /**
     * The status of the Application Load balancing instance. Value:-**Inactive**: Stopped, indicating that the instance listener will no longer forward traffic.-**Active**: running.-**Provisioning**: The project is being created.-**Configuring**: The configuration is being changed.-**CreateFailed**: The instance cannot be deleted without any charge.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a LoadBalancerCommonBandwidthPackageAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerCommonBandwidthPackageAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerCommonBandwidthPackageAttachmentArgs | LoadBalancerCommonBandwidthPackageAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerCommonBandwidthPackageAttachmentState | undefined;
            resourceInputs["bandwidthPackageId"] = state?.bandwidthPackageId;
            resourceInputs["dryRun"] = state?.dryRun;
            resourceInputs["loadBalancerId"] = state?.loadBalancerId;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as LoadBalancerCommonBandwidthPackageAttachmentArgs | undefined;
            if (args?.bandwidthPackageId === undefined && !opts.urn) {
                throw new Error("Missing required property 'bandwidthPackageId'");
            }
            if (args?.loadBalancerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerId'");
            }
            resourceInputs["bandwidthPackageId"] = args?.bandwidthPackageId;
            resourceInputs["dryRun"] = args?.dryRun;
            resourceInputs["loadBalancerId"] = args?.loadBalancerId;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancerCommonBandwidthPackageAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancerCommonBandwidthPackageAttachment resources.
 */
export interface LoadBalancerCommonBandwidthPackageAttachmentState {
    /**
     * The ID of the bound shared bandwidth package.
     */
    bandwidthPackageId?: pulumi.Input<string>;
    /**
     * Whether to PreCheck this request only. Value:-**true**: sends a check request and does not bind the shared bandwidth package to the load balancing instance. Check items include whether required parameters, request format, and business restrictions have been filled in. If the check fails, the corresponding error is returned. If the check passes, the error code 'DryRunOperation' is returned '.-**false** (default): Sends a normal request, returns the HTTP 2xx status code after the check, and directly performs the operation.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the applied server load balancer instance.
     */
    loadBalancerId?: pulumi.Input<string>;
    /**
     * The status of the Application Load balancing instance. Value:-**Inactive**: Stopped, indicating that the instance listener will no longer forward traffic.-**Active**: running.-**Provisioning**: The project is being created.-**Configuring**: The configuration is being changed.-**CreateFailed**: The instance cannot be deleted without any charge.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadBalancerCommonBandwidthPackageAttachment resource.
 */
export interface LoadBalancerCommonBandwidthPackageAttachmentArgs {
    /**
     * The ID of the bound shared bandwidth package.
     */
    bandwidthPackageId: pulumi.Input<string>;
    /**
     * Whether to PreCheck this request only. Value:-**true**: sends a check request and does not bind the shared bandwidth package to the load balancing instance. Check items include whether required parameters, request format, and business restrictions have been filled in. If the check fails, the corresponding error is returned. If the check passes, the error code 'DryRunOperation' is returned '.-**false** (default): Sends a normal request, returns the HTTP 2xx status code after the check, and directly performs the operation.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the applied server load balancer instance.
     */
    loadBalancerId: pulumi.Input<string>;
}
