// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Application Load Balancer (ALB) Rule resource.
 *
 * For information about Application Load Balancer (ALB) Rule and how to use it, see [What is Rule](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-createrule).
 *
 * > **NOTE:** Available since v1.133.0.
 *
 * > **NOTE:** This version only supports forwarding rules in the request direction.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const _default = alicloud.alb.getZones({});
 * const defaultGetResourceGroups = alicloud.resourcemanager.getResourceGroups({});
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch: alicloud.vpc.Switch[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     defaultSwitch.push(new alicloud.vpc.Switch(`default-${range.value}`, {
 *         vpcId: defaultNetwork.id,
 *         cidrBlock: std.format({
 *             input: "10.4.%d.0/24",
 *             args: [range.value + 1],
 *         }).then(invoke => invoke.result),
 *         zoneId: _default.then(_default => _default.zones[range.value].id),
 *         vswitchName: std.format({
 *             input: `${name}_%d`,
 *             args: [range.value + 1],
 *         }).then(invoke => invoke.result),
 *     }));
 * }
 * const defaultLoadBalancer = new alicloud.alb.LoadBalancer("default", {
 *     vpcId: defaultNetwork.id,
 *     addressType: "Internet",
 *     addressAllocatedMode: "Fixed",
 *     loadBalancerName: name,
 *     loadBalancerEdition: "Standard",
 *     resourceGroupId: defaultGetResourceGroups.then(defaultGetResourceGroups => defaultGetResourceGroups.groups?.[0]?.id),
 *     loadBalancerBillingConfig: {
 *         payType: "PayAsYouGo",
 *     },
 *     tags: {
 *         Created: "TF",
 *     },
 *     zoneMappings: [
 *         {
 *             vswitchId: defaultSwitch[0].id,
 *             zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *         },
 *         {
 *             vswitchId: defaultSwitch[1].id,
 *             zoneId: _default.then(_default => _default.zones?.[1]?.id),
 *         },
 *     ],
 * });
 * const defaultServerGroup = new alicloud.alb.ServerGroup("default", {
 *     protocol: "HTTP",
 *     vpcId: defaultNetwork.id,
 *     serverGroupName: name,
 *     resourceGroupId: defaultGetResourceGroups.then(defaultGetResourceGroups => defaultGetResourceGroups.groups?.[0]?.id),
 *     healthCheckConfig: {
 *         healthCheckEnabled: false,
 *     },
 *     stickySessionConfig: {
 *         stickySessionEnabled: false,
 *     },
 *     tags: {
 *         Created: "TF",
 *     },
 * });
 * const defaultListener = new alicloud.alb.Listener("default", {
 *     loadBalancerId: defaultLoadBalancer.id,
 *     listenerProtocol: "HTTP",
 *     listenerPort: 80,
 *     listenerDescription: name,
 *     defaultActions: [{
 *         type: "ForwardGroup",
 *         forwardGroupConfig: {
 *             serverGroupTuples: [{
 *                 serverGroupId: defaultServerGroup.id,
 *             }],
 *         },
 *     }],
 * });
 * const defaultRule = new alicloud.alb.Rule("default", {
 *     ruleName: name,
 *     listenerId: defaultListener.id,
 *     priority: 555,
 *     ruleConditions: [{
 *         cookieConfig: {
 *             values: [{
 *                 key: "created",
 *                 value: "tf",
 *             }],
 *         },
 *         type: "Cookie",
 *     }],
 *     ruleActions: [{
 *         forwardGroupConfig: {
 *             serverGroupTuples: [{
 *                 serverGroupId: defaultServerGroup.id,
 *             }],
 *         },
 *         order: 9,
 *         type: "ForwardGroup",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Application Load Balancer (ALB) Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:alb/rule:Rule example <id>
 * ```
 */
export class Rule extends pulumi.CustomResource {
    /**
     * Get an existing Rule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleState, opts?: pulumi.CustomResourceOptions): Rule {
        return new Rule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:alb/rule:Rule';

    /**
     * Returns true if the given object is an instance of Rule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rule.__pulumiType;
    }

    /**
     * The direction to which the forwarding rule is applied. Default value: `Request`. Valid values:
     * - `Request`: The forwarding rule is applied to the client requests received by ALB.
     * - `Response`: The forwarding rule is applied to the responses returned by backend servers.
     */
    declare public readonly direction: pulumi.Output<string>;
    /**
     * Specifies whether to precheck this request.
     */
    declare public readonly dryRun: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the listener to which the forwarding rule belongs.
     */
    declare public readonly listenerId: pulumi.Output<string>;
    /**
     * The priority of the rule. Valid values: 1 to 10000. A smaller value indicates a higher priority. **Note*:* The priority of each rule within the same listener must be unique.
     */
    declare public readonly priority: pulumi.Output<number>;
    /**
     * The actions of the forwarding rules. See `ruleActions` below.
     */
    declare public readonly ruleActions: pulumi.Output<outputs.alb.RuleRuleAction[]>;
    /**
     * The conditions of the forwarding rule. See `ruleConditions` below.
     */
    declare public readonly ruleConditions: pulumi.Output<outputs.alb.RuleRuleCondition[]>;
    /**
     * The name of the forwarding rule. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
     */
    declare public readonly ruleName: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a Rule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleArgs | RuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleState | undefined;
            resourceInputs["direction"] = state?.direction;
            resourceInputs["dryRun"] = state?.dryRun;
            resourceInputs["listenerId"] = state?.listenerId;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["ruleActions"] = state?.ruleActions;
            resourceInputs["ruleConditions"] = state?.ruleConditions;
            resourceInputs["ruleName"] = state?.ruleName;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as RuleArgs | undefined;
            if (args?.listenerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if (args?.ruleActions === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleActions'");
            }
            if (args?.ruleConditions === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleConditions'");
            }
            if (args?.ruleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["direction"] = args?.direction;
            resourceInputs["dryRun"] = args?.dryRun;
            resourceInputs["listenerId"] = args?.listenerId;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["ruleActions"] = args?.ruleActions;
            resourceInputs["ruleConditions"] = args?.ruleConditions;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Rule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Rule resources.
 */
export interface RuleState {
    /**
     * The direction to which the forwarding rule is applied. Default value: `Request`. Valid values:
     * - `Request`: The forwarding rule is applied to the client requests received by ALB.
     * - `Response`: The forwarding rule is applied to the responses returned by backend servers.
     */
    direction?: pulumi.Input<string>;
    /**
     * Specifies whether to precheck this request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the listener to which the forwarding rule belongs.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * The priority of the rule. Valid values: 1 to 10000. A smaller value indicates a higher priority. **Note*:* The priority of each rule within the same listener must be unique.
     */
    priority?: pulumi.Input<number>;
    /**
     * The actions of the forwarding rules. See `ruleActions` below.
     */
    ruleActions?: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleAction>[]>;
    /**
     * The conditions of the forwarding rule. See `ruleConditions` below.
     */
    ruleConditions?: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleCondition>[]>;
    /**
     * The name of the forwarding rule. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Rule resource.
 */
export interface RuleArgs {
    /**
     * The direction to which the forwarding rule is applied. Default value: `Request`. Valid values:
     * - `Request`: The forwarding rule is applied to the client requests received by ALB.
     * - `Response`: The forwarding rule is applied to the responses returned by backend servers.
     */
    direction?: pulumi.Input<string>;
    /**
     * Specifies whether to precheck this request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the listener to which the forwarding rule belongs.
     */
    listenerId: pulumi.Input<string>;
    /**
     * The priority of the rule. Valid values: 1 to 10000. A smaller value indicates a higher priority. **Note*:* The priority of each rule within the same listener must be unique.
     */
    priority: pulumi.Input<number>;
    /**
     * The actions of the forwarding rules. See `ruleActions` below.
     */
    ruleActions: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleAction>[]>;
    /**
     * The conditions of the forwarding rule. See `ruleConditions` below.
     */
    ruleConditions: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleCondition>[]>;
    /**
     * The name of the forwarding rule. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
     */
    ruleName: pulumi.Input<string>;
}
