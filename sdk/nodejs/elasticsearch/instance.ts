// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Elasticsearch can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:elasticsearch/instance:Instance example es-cn-abcde123456
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:elasticsearch/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Auto-renewal period of an Elasticsearch Instance, in the unit of the month. It is valid when `instanceChargeType` is `PrePaid` and `renewStatus` is `AutoRenewal`.
     */
    declare public readonly autoRenewDuration: pulumi.Output<number | undefined>;
    /**
     * The Elasticsearch cluster's client node quantity, between 2 and 25.
     */
    declare public readonly clientNodeAmount: pulumi.Output<number | undefined>;
    /**
     * The client node spec. If specified, client node will be created.
     */
    declare public readonly clientNodeSpec: pulumi.Output<string | undefined>;
    /**
     * The Elasticsearch cluster's data node quantity, between 2 and 50.
     */
    declare public readonly dataNodeAmount: pulumi.Output<number>;
    /**
     * If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
     */
    declare public readonly dataNodeDiskEncrypted: pulumi.Output<boolean | undefined>;
    /**
     * Cloud disk performance level. Valid values are `PL0`, `PL1`, `PL2`, `PL3`. The `dataNodeDiskType` muse be `cloudEssd`.
     */
    declare public readonly dataNodeDiskPerformanceLevel: pulumi.Output<string | undefined>;
    /**
     * The single data node storage space.
     */
    declare public readonly dataNodeDiskSize: pulumi.Output<number>;
    /**
     * The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
     */
    declare public readonly dataNodeDiskType: pulumi.Output<string>;
    /**
     * The data node specifications of the Elasticsearch instance.
     */
    declare public readonly dataNodeSpec: pulumi.Output<string>;
    /**
     * The description of instance. It a string of 0 to 30 characters.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Instance connection domain (only VPC network access supported).
     */
    declare public /*out*/ readonly domain: pulumi.Output<string>;
    /**
     * Bool, default to false. When it set to true, the instance can close kibana private network access。
     */
    declare public readonly enableKibanaPrivateNetwork: pulumi.Output<boolean | undefined>;
    /**
     * Bool, default to true. When it set to false, the instance can enable kibana public network access。
     */
    declare public readonly enableKibanaPublicNetwork: pulumi.Output<boolean | undefined>;
    /**
     * Bool, default to false. When it set to true, the instance can enable public network access。
     */
    declare public readonly enablePublic: pulumi.Output<boolean | undefined>;
    /**
     * Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instanceChargeYpe from `PostPaid` to `PrePaid`, the following attributes are required: `period`.
     */
    declare public readonly instanceChargeType: pulumi.Output<string | undefined>;
    /**
     * Kibana console domain (Internet access supported).
     */
    declare public /*out*/ readonly kibanaDomain: pulumi.Output<string>;
    /**
     * The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
     */
    declare public readonly kibanaNodeSpec: pulumi.Output<string>;
    /**
     * Kibana console port.
     */
    declare public /*out*/ readonly kibanaPort: pulumi.Output<number>;
    /**
     * the security group id associated with Kibana private network, this param is required when `enableKibanaPrivateNetwork` set true, and the security group id should in the same VPC as `vswitchId`
     */
    declare public readonly kibanaPrivateSecurityGroupId: pulumi.Output<string | undefined>;
    /**
     * Set the Kibana's IP whitelist in private network, This option has been abandoned on newly created instance, please use `kibanaPrivateSecurityGroupId` instead
     */
    declare public readonly kibanaPrivateWhitelists: pulumi.Output<string[]>;
    /**
     * Set the Kibana's IP whitelist in internet network.
     */
    declare public readonly kibanaWhitelists: pulumi.Output<string[]>;
    /**
     * An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kmsEncryptedPassword` fields.
     */
    declare public readonly kmsEncryptedPassword: pulumi.Output<string | undefined>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    declare public readonly kmsEncryptionContext: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The single master node storage space. Valid values are `PrePaid`, `PostPaid`.
     */
    declare public readonly masterNodeDiskType: pulumi.Output<string | undefined>;
    /**
     * The dedicated master node spec. If specified, dedicated master node will be created.
     */
    declare public readonly masterNodeSpec: pulumi.Output<string | undefined>;
    /**
     * The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&*()_+-=`).
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * The duration that you will buy Elasticsearch instance (in month). It is valid when instanceChargeType is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * Instance connection port.
     */
    declare public /*out*/ readonly port: pulumi.Output<number>;
    /**
     * Set the instance's IP whitelist in VPC network.
     */
    declare public readonly privateWhitelists: pulumi.Output<string[]>;
    /**
     * Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
     */
    declare public readonly protocol: pulumi.Output<string | undefined>;
    /**
     * Instance connection public domain.
     */
    declare public /*out*/ readonly publicDomain: pulumi.Output<string>;
    /**
     * Instance connection public port.
     */
    declare public /*out*/ readonly publicPort: pulumi.Output<number>;
    /**
     * Set the instance's IP whitelist in internet network.
     */
    declare public readonly publicWhitelists: pulumi.Output<string[]>;
    /**
     * The renewal status of the specified instance. Valid values: `AutoRenewal`, `ManualRenewal`, `NotRenewal`.The `instanceChargeType` must be `PrePaid`.
     */
    declare public readonly renewStatus: pulumi.Output<string | undefined>;
    /**
     * Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years. Valid values: `M`, `Y`.
     */
    declare public readonly renewalDurationUnit: pulumi.Output<string | undefined>;
    /**
     * The ID of resource group which the Elasticsearch instance belongs.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
     */
    declare public readonly settingConfig: pulumi.Output<{[key: string]: string}>;
    /**
     * The Elasticsearch instance status. Includes `active`, `activating`, `inactive`. Some operations are denied when status is not `active`.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` , `7.7_with_X-Pack`, `7.10_with_X-Pack`, `7.16_with_X-Pack`, `8.5_with_X-Pack`, `8.9_with_X-Pack`, `8.13_with_X-Pack`.
     */
    declare public readonly version: pulumi.Output<string>;
    /**
     * The ID of VSwitch.
     */
    declare public readonly vswitchId: pulumi.Output<string>;
    /**
     * The Elasticsearch cluster's warm node quantity, between 3 and 50.
     */
    declare public readonly warmNodeAmount: pulumi.Output<number | undefined>;
    /**
     * If encrypt the warm node disk. Valid values are `true`, `false`. Default to `false`.
     */
    declare public readonly warmNodeDiskEncrypted: pulumi.Output<boolean | undefined>;
    /**
     * The single warm node storage space, should between 500 and 20480
     */
    declare public readonly warmNodeDiskSize: pulumi.Output<number | undefined>;
    /**
     * The warm node disk type. Supported values:  cloud_efficiency.
     */
    declare public readonly warmNodeDiskType: pulumi.Output<string | undefined>;
    /**
     * The warm node specifications of the Elasticsearch instance.
     */
    declare public readonly warmNodeSpec: pulumi.Output<string | undefined>;
    /**
     * The Multi-AZ supported for Elasticsearch, between 1 and 3. The `dataNodeAmount` value must be an integral multiple of the `zoneCount` value.
     */
    declare public readonly zoneCount: pulumi.Output<number | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["autoRenewDuration"] = state?.autoRenewDuration;
            resourceInputs["clientNodeAmount"] = state?.clientNodeAmount;
            resourceInputs["clientNodeSpec"] = state?.clientNodeSpec;
            resourceInputs["dataNodeAmount"] = state?.dataNodeAmount;
            resourceInputs["dataNodeDiskEncrypted"] = state?.dataNodeDiskEncrypted;
            resourceInputs["dataNodeDiskPerformanceLevel"] = state?.dataNodeDiskPerformanceLevel;
            resourceInputs["dataNodeDiskSize"] = state?.dataNodeDiskSize;
            resourceInputs["dataNodeDiskType"] = state?.dataNodeDiskType;
            resourceInputs["dataNodeSpec"] = state?.dataNodeSpec;
            resourceInputs["description"] = state?.description;
            resourceInputs["domain"] = state?.domain;
            resourceInputs["enableKibanaPrivateNetwork"] = state?.enableKibanaPrivateNetwork;
            resourceInputs["enableKibanaPublicNetwork"] = state?.enableKibanaPublicNetwork;
            resourceInputs["enablePublic"] = state?.enablePublic;
            resourceInputs["instanceChargeType"] = state?.instanceChargeType;
            resourceInputs["kibanaDomain"] = state?.kibanaDomain;
            resourceInputs["kibanaNodeSpec"] = state?.kibanaNodeSpec;
            resourceInputs["kibanaPort"] = state?.kibanaPort;
            resourceInputs["kibanaPrivateSecurityGroupId"] = state?.kibanaPrivateSecurityGroupId;
            resourceInputs["kibanaPrivateWhitelists"] = state?.kibanaPrivateWhitelists;
            resourceInputs["kibanaWhitelists"] = state?.kibanaWhitelists;
            resourceInputs["kmsEncryptedPassword"] = state?.kmsEncryptedPassword;
            resourceInputs["kmsEncryptionContext"] = state?.kmsEncryptionContext;
            resourceInputs["masterNodeDiskType"] = state?.masterNodeDiskType;
            resourceInputs["masterNodeSpec"] = state?.masterNodeSpec;
            resourceInputs["password"] = state?.password;
            resourceInputs["period"] = state?.period;
            resourceInputs["port"] = state?.port;
            resourceInputs["privateWhitelists"] = state?.privateWhitelists;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["publicDomain"] = state?.publicDomain;
            resourceInputs["publicPort"] = state?.publicPort;
            resourceInputs["publicWhitelists"] = state?.publicWhitelists;
            resourceInputs["renewStatus"] = state?.renewStatus;
            resourceInputs["renewalDurationUnit"] = state?.renewalDurationUnit;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["settingConfig"] = state?.settingConfig;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["version"] = state?.version;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["warmNodeAmount"] = state?.warmNodeAmount;
            resourceInputs["warmNodeDiskEncrypted"] = state?.warmNodeDiskEncrypted;
            resourceInputs["warmNodeDiskSize"] = state?.warmNodeDiskSize;
            resourceInputs["warmNodeDiskType"] = state?.warmNodeDiskType;
            resourceInputs["warmNodeSpec"] = state?.warmNodeSpec;
            resourceInputs["zoneCount"] = state?.zoneCount;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.dataNodeAmount === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataNodeAmount'");
            }
            if (args?.dataNodeDiskSize === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataNodeDiskSize'");
            }
            if (args?.dataNodeDiskType === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataNodeDiskType'");
            }
            if (args?.dataNodeSpec === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataNodeSpec'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["autoRenewDuration"] = args?.autoRenewDuration;
            resourceInputs["clientNodeAmount"] = args?.clientNodeAmount;
            resourceInputs["clientNodeSpec"] = args?.clientNodeSpec;
            resourceInputs["dataNodeAmount"] = args?.dataNodeAmount;
            resourceInputs["dataNodeDiskEncrypted"] = args?.dataNodeDiskEncrypted;
            resourceInputs["dataNodeDiskPerformanceLevel"] = args?.dataNodeDiskPerformanceLevel;
            resourceInputs["dataNodeDiskSize"] = args?.dataNodeDiskSize;
            resourceInputs["dataNodeDiskType"] = args?.dataNodeDiskType;
            resourceInputs["dataNodeSpec"] = args?.dataNodeSpec;
            resourceInputs["description"] = args?.description;
            resourceInputs["enableKibanaPrivateNetwork"] = args?.enableKibanaPrivateNetwork;
            resourceInputs["enableKibanaPublicNetwork"] = args?.enableKibanaPublicNetwork;
            resourceInputs["enablePublic"] = args?.enablePublic;
            resourceInputs["instanceChargeType"] = args?.instanceChargeType;
            resourceInputs["kibanaNodeSpec"] = args?.kibanaNodeSpec;
            resourceInputs["kibanaPrivateSecurityGroupId"] = args?.kibanaPrivateSecurityGroupId;
            resourceInputs["kibanaPrivateWhitelists"] = args?.kibanaPrivateWhitelists;
            resourceInputs["kibanaWhitelists"] = args?.kibanaWhitelists;
            resourceInputs["kmsEncryptedPassword"] = args?.kmsEncryptedPassword;
            resourceInputs["kmsEncryptionContext"] = args?.kmsEncryptionContext;
            resourceInputs["masterNodeDiskType"] = args?.masterNodeDiskType;
            resourceInputs["masterNodeSpec"] = args?.masterNodeSpec;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args?.period;
            resourceInputs["privateWhitelists"] = args?.privateWhitelists;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["publicWhitelists"] = args?.publicWhitelists;
            resourceInputs["renewStatus"] = args?.renewStatus;
            resourceInputs["renewalDurationUnit"] = args?.renewalDurationUnit;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["settingConfig"] = args?.settingConfig;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["version"] = args?.version;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["warmNodeAmount"] = args?.warmNodeAmount;
            resourceInputs["warmNodeDiskEncrypted"] = args?.warmNodeDiskEncrypted;
            resourceInputs["warmNodeDiskSize"] = args?.warmNodeDiskSize;
            resourceInputs["warmNodeDiskType"] = args?.warmNodeDiskType;
            resourceInputs["warmNodeSpec"] = args?.warmNodeSpec;
            resourceInputs["zoneCount"] = args?.zoneCount;
            resourceInputs["domain"] = undefined /*out*/;
            resourceInputs["kibanaDomain"] = undefined /*out*/;
            resourceInputs["kibanaPort"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["publicDomain"] = undefined /*out*/;
            resourceInputs["publicPort"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Auto-renewal period of an Elasticsearch Instance, in the unit of the month. It is valid when `instanceChargeType` is `PrePaid` and `renewStatus` is `AutoRenewal`.
     */
    autoRenewDuration?: pulumi.Input<number>;
    /**
     * The Elasticsearch cluster's client node quantity, between 2 and 25.
     */
    clientNodeAmount?: pulumi.Input<number>;
    /**
     * The client node spec. If specified, client node will be created.
     */
    clientNodeSpec?: pulumi.Input<string>;
    /**
     * The Elasticsearch cluster's data node quantity, between 2 and 50.
     */
    dataNodeAmount?: pulumi.Input<number>;
    /**
     * If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
     */
    dataNodeDiskEncrypted?: pulumi.Input<boolean>;
    /**
     * Cloud disk performance level. Valid values are `PL0`, `PL1`, `PL2`, `PL3`. The `dataNodeDiskType` muse be `cloudEssd`.
     */
    dataNodeDiskPerformanceLevel?: pulumi.Input<string>;
    /**
     * The single data node storage space.
     */
    dataNodeDiskSize?: pulumi.Input<number>;
    /**
     * The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
     */
    dataNodeDiskType?: pulumi.Input<string>;
    /**
     * The data node specifications of the Elasticsearch instance.
     */
    dataNodeSpec?: pulumi.Input<string>;
    /**
     * The description of instance. It a string of 0 to 30 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Instance connection domain (only VPC network access supported).
     */
    domain?: pulumi.Input<string>;
    /**
     * Bool, default to false. When it set to true, the instance can close kibana private network access。
     */
    enableKibanaPrivateNetwork?: pulumi.Input<boolean>;
    /**
     * Bool, default to true. When it set to false, the instance can enable kibana public network access。
     */
    enableKibanaPublicNetwork?: pulumi.Input<boolean>;
    /**
     * Bool, default to false. When it set to true, the instance can enable public network access。
     */
    enablePublic?: pulumi.Input<boolean>;
    /**
     * Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instanceChargeYpe from `PostPaid` to `PrePaid`, the following attributes are required: `period`.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * Kibana console domain (Internet access supported).
     */
    kibanaDomain?: pulumi.Input<string>;
    /**
     * The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
     */
    kibanaNodeSpec?: pulumi.Input<string>;
    /**
     * Kibana console port.
     */
    kibanaPort?: pulumi.Input<number>;
    /**
     * the security group id associated with Kibana private network, this param is required when `enableKibanaPrivateNetwork` set true, and the security group id should in the same VPC as `vswitchId`
     */
    kibanaPrivateSecurityGroupId?: pulumi.Input<string>;
    /**
     * Set the Kibana's IP whitelist in private network, This option has been abandoned on newly created instance, please use `kibanaPrivateSecurityGroupId` instead
     */
    kibanaPrivateWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set the Kibana's IP whitelist in internet network.
     */
    kibanaWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kmsEncryptedPassword` fields.
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The single master node storage space. Valid values are `PrePaid`, `PostPaid`.
     */
    masterNodeDiskType?: pulumi.Input<string>;
    /**
     * The dedicated master node spec. If specified, dedicated master node will be created.
     */
    masterNodeSpec?: pulumi.Input<string>;
    /**
     * The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&*()_+-=`).
     */
    password?: pulumi.Input<string>;
    /**
     * The duration that you will buy Elasticsearch instance (in month). It is valid when instanceChargeType is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
     */
    period?: pulumi.Input<number>;
    /**
     * Instance connection port.
     */
    port?: pulumi.Input<number>;
    /**
     * Set the instance's IP whitelist in VPC network.
     */
    privateWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Instance connection public domain.
     */
    publicDomain?: pulumi.Input<string>;
    /**
     * Instance connection public port.
     */
    publicPort?: pulumi.Input<number>;
    /**
     * Set the instance's IP whitelist in internet network.
     */
    publicWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The renewal status of the specified instance. Valid values: `AutoRenewal`, `ManualRenewal`, `NotRenewal`.The `instanceChargeType` must be `PrePaid`.
     */
    renewStatus?: pulumi.Input<string>;
    /**
     * Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years. Valid values: `M`, `Y`.
     */
    renewalDurationUnit?: pulumi.Input<string>;
    /**
     * The ID of resource group which the Elasticsearch instance belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
     */
    settingConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Elasticsearch instance status. Includes `active`, `activating`, `inactive`. Some operations are denied when status is not `active`.
     */
    status?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` , `7.7_with_X-Pack`, `7.10_with_X-Pack`, `7.16_with_X-Pack`, `8.5_with_X-Pack`, `8.9_with_X-Pack`, `8.13_with_X-Pack`.
     */
    version?: pulumi.Input<string>;
    /**
     * The ID of VSwitch.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The Elasticsearch cluster's warm node quantity, between 3 and 50.
     */
    warmNodeAmount?: pulumi.Input<number>;
    /**
     * If encrypt the warm node disk. Valid values are `true`, `false`. Default to `false`.
     */
    warmNodeDiskEncrypted?: pulumi.Input<boolean>;
    /**
     * The single warm node storage space, should between 500 and 20480
     */
    warmNodeDiskSize?: pulumi.Input<number>;
    /**
     * The warm node disk type. Supported values:  cloud_efficiency.
     */
    warmNodeDiskType?: pulumi.Input<string>;
    /**
     * The warm node specifications of the Elasticsearch instance.
     */
    warmNodeSpec?: pulumi.Input<string>;
    /**
     * The Multi-AZ supported for Elasticsearch, between 1 and 3. The `dataNodeAmount` value must be an integral multiple of the `zoneCount` value.
     */
    zoneCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Auto-renewal period of an Elasticsearch Instance, in the unit of the month. It is valid when `instanceChargeType` is `PrePaid` and `renewStatus` is `AutoRenewal`.
     */
    autoRenewDuration?: pulumi.Input<number>;
    /**
     * The Elasticsearch cluster's client node quantity, between 2 and 25.
     */
    clientNodeAmount?: pulumi.Input<number>;
    /**
     * The client node spec. If specified, client node will be created.
     */
    clientNodeSpec?: pulumi.Input<string>;
    /**
     * The Elasticsearch cluster's data node quantity, between 2 and 50.
     */
    dataNodeAmount: pulumi.Input<number>;
    /**
     * If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
     */
    dataNodeDiskEncrypted?: pulumi.Input<boolean>;
    /**
     * Cloud disk performance level. Valid values are `PL0`, `PL1`, `PL2`, `PL3`. The `dataNodeDiskType` muse be `cloudEssd`.
     */
    dataNodeDiskPerformanceLevel?: pulumi.Input<string>;
    /**
     * The single data node storage space.
     */
    dataNodeDiskSize: pulumi.Input<number>;
    /**
     * The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
     */
    dataNodeDiskType: pulumi.Input<string>;
    /**
     * The data node specifications of the Elasticsearch instance.
     */
    dataNodeSpec: pulumi.Input<string>;
    /**
     * The description of instance. It a string of 0 to 30 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Bool, default to false. When it set to true, the instance can close kibana private network access。
     */
    enableKibanaPrivateNetwork?: pulumi.Input<boolean>;
    /**
     * Bool, default to true. When it set to false, the instance can enable kibana public network access。
     */
    enableKibanaPublicNetwork?: pulumi.Input<boolean>;
    /**
     * Bool, default to false. When it set to true, the instance can enable public network access。
     */
    enablePublic?: pulumi.Input<boolean>;
    /**
     * Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instanceChargeYpe from `PostPaid` to `PrePaid`, the following attributes are required: `period`.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
     */
    kibanaNodeSpec?: pulumi.Input<string>;
    /**
     * the security group id associated with Kibana private network, this param is required when `enableKibanaPrivateNetwork` set true, and the security group id should in the same VPC as `vswitchId`
     */
    kibanaPrivateSecurityGroupId?: pulumi.Input<string>;
    /**
     * Set the Kibana's IP whitelist in private network, This option has been abandoned on newly created instance, please use `kibanaPrivateSecurityGroupId` instead
     */
    kibanaPrivateWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set the Kibana's IP whitelist in internet network.
     */
    kibanaWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kmsEncryptedPassword` fields.
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The single master node storage space. Valid values are `PrePaid`, `PostPaid`.
     */
    masterNodeDiskType?: pulumi.Input<string>;
    /**
     * The dedicated master node spec. If specified, dedicated master node will be created.
     */
    masterNodeSpec?: pulumi.Input<string>;
    /**
     * The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&*()_+-=`).
     */
    password?: pulumi.Input<string>;
    /**
     * The duration that you will buy Elasticsearch instance (in month). It is valid when instanceChargeType is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
     */
    period?: pulumi.Input<number>;
    /**
     * Set the instance's IP whitelist in VPC network.
     */
    privateWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Set the instance's IP whitelist in internet network.
     */
    publicWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The renewal status of the specified instance. Valid values: `AutoRenewal`, `ManualRenewal`, `NotRenewal`.The `instanceChargeType` must be `PrePaid`.
     */
    renewStatus?: pulumi.Input<string>;
    /**
     * Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years. Valid values: `M`, `Y`.
     */
    renewalDurationUnit?: pulumi.Input<string>;
    /**
     * The ID of resource group which the Elasticsearch instance belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
     */
    settingConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` , `7.7_with_X-Pack`, `7.10_with_X-Pack`, `7.16_with_X-Pack`, `8.5_with_X-Pack`, `8.9_with_X-Pack`, `8.13_with_X-Pack`.
     */
    version: pulumi.Input<string>;
    /**
     * The ID of VSwitch.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The Elasticsearch cluster's warm node quantity, between 3 and 50.
     */
    warmNodeAmount?: pulumi.Input<number>;
    /**
     * If encrypt the warm node disk. Valid values are `true`, `false`. Default to `false`.
     */
    warmNodeDiskEncrypted?: pulumi.Input<boolean>;
    /**
     * The single warm node storage space, should between 500 and 20480
     */
    warmNodeDiskSize?: pulumi.Input<number>;
    /**
     * The warm node disk type. Supported values:  cloud_efficiency.
     */
    warmNodeDiskType?: pulumi.Input<string>;
    /**
     * The warm node specifications of the Elasticsearch instance.
     */
    warmNodeSpec?: pulumi.Input<string>;
    /**
     * The Multi-AZ supported for Elasticsearch, between 1 and 3. The `dataNodeAmount` value must be an integral multiple of the `zoneCount` value.
     */
    zoneCount?: pulumi.Input<number>;
}
