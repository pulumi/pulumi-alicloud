// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Service Mesh UserPermission resource.
 *
 * For information about Service Mesh User Permission and how to use it, see [What is User Permission](https://www.alibabacloud.com/help/en/alibaba-cloud-service-mesh/latest/api-servicemesh-2020-01-11-grantuserpermissions).
 *
 * > **NOTE:** Available since v1.174.0.
 *
 * ## Import
 *
 * Service Mesh User Permission can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:servicemesh/userPermission:UserPermission example <id>
 * ```
 */
export class UserPermission extends pulumi.CustomResource {
    /**
     * Get an existing UserPermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserPermissionState, opts?: pulumi.CustomResourceOptions): UserPermission {
        return new UserPermission(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:servicemesh/userPermission:UserPermission';

    /**
     * Returns true if the given object is an instance of UserPermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserPermission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPermission.__pulumiType;
    }

    /**
     * List of permissions. **Warning:** The list requires the full amount of permission information to be passed. Adding permissions means adding items to the list, and deleting them or inputting nothing means removing items. See `permissions` below.
     */
    public readonly permissions!: pulumi.Output<outputs.servicemesh.UserPermissionPermission[]>;
    /**
     * The configuration of the Load Balancer. See the following `Block loadBalancer`.
     */
    public readonly subAccountUserId!: pulumi.Output<string>;

    /**
     * Create a UserPermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserPermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserPermissionArgs | UserPermissionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserPermissionState | undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["subAccountUserId"] = state ? state.subAccountUserId : undefined;
        } else {
            const args = argsOrState as UserPermissionArgs | undefined;
            if ((!args || args.subAccountUserId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subAccountUserId'");
            }
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["subAccountUserId"] = args ? args.subAccountUserId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserPermission.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserPermission resources.
 */
export interface UserPermissionState {
    /**
     * List of permissions. **Warning:** The list requires the full amount of permission information to be passed. Adding permissions means adding items to the list, and deleting them or inputting nothing means removing items. See `permissions` below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.servicemesh.UserPermissionPermission>[]>;
    /**
     * The configuration of the Load Balancer. See the following `Block loadBalancer`.
     */
    subAccountUserId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserPermission resource.
 */
export interface UserPermissionArgs {
    /**
     * List of permissions. **Warning:** The list requires the full amount of permission information to be passed. Adding permissions means adding items to the list, and deleting them or inputting nothing means removing items. See `permissions` below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.servicemesh.UserPermissionPermission>[]>;
    /**
     * The configuration of the Load Balancer. See the following `Block loadBalancer`.
     */
    subAccountUserId: pulumi.Input<string>;
}
