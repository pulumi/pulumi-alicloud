// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DeviceGroupArgs, DeviceGroupState } from "./deviceGroup";
export type DeviceGroup = import("./deviceGroup").DeviceGroup;
export const DeviceGroup: typeof import("./deviceGroup").DeviceGroup = null as any;
utilities.lazyLoad(exports, ["DeviceGroup"], () => require("./deviceGroup"));

export { GetDeviceGroupsArgs, GetDeviceGroupsResult, GetDeviceGroupsOutputArgs } from "./getDeviceGroups";
export const getDeviceGroups: typeof import("./getDeviceGroups").getDeviceGroups = null as any;
export const getDeviceGroupsOutput: typeof import("./getDeviceGroups").getDeviceGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getDeviceGroups","getDeviceGroupsOutput"], () => require("./getDeviceGroups"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:iot/deviceGroup:DeviceGroup":
                return new DeviceGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "iot/deviceGroup", _module)
