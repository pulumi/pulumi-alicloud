// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Iot Device Group resource.
 *
 * For information about Iot Device Group and how to use it, see [What is Device Group](https://www.alibabacloud.com/help/product/30520.htm).
 *
 * > **NOTE:** Available in v1.134.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.iot.DeviceGroup("example", {
 *     groupName: "example_value",
 * });
 * ```
 *
 * ## Import
 *
 * Iot Device Group can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:iot/deviceGroup:DeviceGroup example <id>
 * ```
 */
export class DeviceGroup extends pulumi.CustomResource {
    /**
     * Get an existing DeviceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceGroupState, opts?: pulumi.CustomResourceOptions): DeviceGroup {
        return new DeviceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:iot/deviceGroup:DeviceGroup';

    /**
     * Returns true if the given object is an instance of DeviceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeviceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeviceGroup.__pulumiType;
    }

    /**
     * The GroupDesc of the device group.
     */
    public readonly groupDesc!: pulumi.Output<string | undefined>;
    /**
     * The GroupName of the device group.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * The id of the Iot Instance.
     */
    public readonly iotInstanceId!: pulumi.Output<string | undefined>;
    /**
     * The id of the SuperGroup.
     */
    public readonly superGroupId!: pulumi.Output<string | undefined>;

    /**
     * Create a DeviceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeviceGroupArgs | DeviceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeviceGroupState | undefined;
            resourceInputs["groupDesc"] = state ? state.groupDesc : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["iotInstanceId"] = state ? state.iotInstanceId : undefined;
            resourceInputs["superGroupId"] = state ? state.superGroupId : undefined;
        } else {
            const args = argsOrState as DeviceGroupArgs | undefined;
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            resourceInputs["groupDesc"] = args ? args.groupDesc : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["iotInstanceId"] = args ? args.iotInstanceId : undefined;
            resourceInputs["superGroupId"] = args ? args.superGroupId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeviceGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeviceGroup resources.
 */
export interface DeviceGroupState {
    /**
     * The GroupDesc of the device group.
     */
    groupDesc?: pulumi.Input<string>;
    /**
     * The GroupName of the device group.
     */
    groupName?: pulumi.Input<string>;
    /**
     * The id of the Iot Instance.
     */
    iotInstanceId?: pulumi.Input<string>;
    /**
     * The id of the SuperGroup.
     */
    superGroupId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DeviceGroup resource.
 */
export interface DeviceGroupArgs {
    /**
     * The GroupDesc of the device group.
     */
    groupDesc?: pulumi.Input<string>;
    /**
     * The GroupName of the device group.
     */
    groupName: pulumi.Input<string>;
    /**
     * The id of the Iot Instance.
     */
    iotInstanceId?: pulumi.Input<string>;
    /**
     * The id of the SuperGroup.
     */
    superGroupId?: pulumi.Input<string>;
}
