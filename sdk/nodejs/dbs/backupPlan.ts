// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a DBS Backup Plan resource.
 *
 * For information about DBS Backup Plan and how to use it, see [What is Backup Plan](https://www.alibabacloud.com/help/en/dms/developer-reference/api-dbs-2019-03-06-createandstartbackupplan).
 *
 * > **NOTE:** Available since v1.185.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultGetZones = alicloud.rds.getZones({
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     instanceChargeType: "PostPaid",
 *     category: "HighAvailability",
 *     dbInstanceStorageType: "cloud_essd",
 * });
 * const defaultGetInstanceClasses = defaultGetZones.then(defaultGetZones => alicloud.rds.getInstanceClasses({
 *     zoneId: defaultGetZones.zones?.[1]?.id,
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     category: "HighAvailability",
 *     dbInstanceStorageType: "cloud_essd",
 *     instanceChargeType: "PostPaid",
 * }));
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, defaultGetZones]).then(([defaultGetNetworks, defaultGetZones]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: defaultGetZones.zones?.[1]?.id,
 * }));
 * const vswitchId = defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.ids?.[0]);
 * const zoneId = defaultGetZones.then(defaultGetZones => defaultGetZones.ids?.[1]);
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 * });
 * const defaultInstance = new alicloud.rds.Instance("default", {
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     dbInstanceStorageType: "cloud_essd",
 *     instanceType: defaultGetInstanceClasses.then(defaultGetInstanceClasses => defaultGetInstanceClasses.instanceClasses?.[0]?.instanceClass),
 *     instanceStorage: defaultGetInstanceClasses.then(defaultGetInstanceClasses => defaultGetInstanceClasses.instanceClasses?.[0]?.storageRange?.min),
 *     vswitchId: vswitchId,
 *     instanceName: name,
 * });
 * const defaultDatabase = new alicloud.rds.Database("default", {
 *     instanceId: defaultInstance.id,
 *     name: "tfdatabase",
 * });
 * const defaultRdsAccount = new alicloud.rds.RdsAccount("default", {
 *     dbInstanceId: defaultInstance.id,
 *     accountName: "tfnormal000",
 *     accountPassword: "Test12345",
 * });
 * const defaultAccountPrivilege = new alicloud.rds.AccountPrivilege("default", {
 *     instanceId: defaultInstance.id,
 *     accountName: defaultRdsAccount.accountName,
 *     privilege: "ReadWrite",
 *     dbNames: [defaultDatabase.name],
 * });
 * const defaultBackupPlan = new alicloud.dbs.BackupPlan("default", {
 *     backupPlanName: name,
 *     paymentType: "PayAsYouGo",
 *     instanceClass: "xlarge",
 *     backupMethod: "logical",
 *     databaseType: "MySQL",
 *     databaseRegion: "cn-hangzhou",
 *     storageRegion: "cn-hangzhou",
 *     instanceType: "RDS",
 *     sourceEndpointInstanceType: "RDS",
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 *     sourceEndpointRegion: "cn-hangzhou",
 *     sourceEndpointInstanceId: defaultInstance.id,
 *     sourceEndpointUserName: defaultAccountPrivilege.accountName,
 *     sourceEndpointPassword: defaultRdsAccount.accountPassword,
 *     backupObjects: pulumi.interpolate`[{"DBName":"${defaultDatabase.name}"}]`,
 *     backupPeriod: "Monday",
 *     backupStartTime: "14:22",
 *     backupStorageType: "system",
 *     backupRetentionPeriod: 740,
 * });
 * ```
 *
 * ## Import
 *
 * DBS Backup Plan can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dbs/backupPlan:BackupPlan example <id>
 * ```
 */
export class BackupPlan extends pulumi.CustomResource {
    /**
     * Get an existing BackupPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPlanState, opts?: pulumi.CustomResourceOptions): BackupPlan {
        return new BackupPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dbs/backupPlan:BackupPlan';

    /**
     * Returns true if the given object is an instance of BackupPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPlan.__pulumiType;
    }

    /**
     * The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
     */
    declare public readonly backupGatewayId: pulumi.Output<string>;
    /**
     * The backup log interval seconds.
     */
    declare public readonly backupLogIntervalSeconds: pulumi.Output<number | undefined>;
    /**
     * Backup method. Valid values: `duplication`, `logical`, `physical`.
     */
    declare public readonly backupMethod: pulumi.Output<string>;
    /**
     * The backup object.
     */
    declare public readonly backupObjects: pulumi.Output<string>;
    /**
     * Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
     */
    declare public readonly backupPeriod: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    declare public readonly backupPlanName: pulumi.Output<string>;
    /**
     * The backup rate limit.
     */
    declare public readonly backupRateLimit: pulumi.Output<string | undefined>;
    /**
     * The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
     */
    declare public readonly backupRetentionPeriod: pulumi.Output<number>;
    /**
     * The backup speed limit.
     */
    declare public readonly backupSpeedLimit: pulumi.Output<string | undefined>;
    /**
     * The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
     */
    declare public readonly backupStartTime: pulumi.Output<string>;
    /**
     * Built-in storage type, Valid values: `system`.
     */
    declare public readonly backupStorageType: pulumi.Output<string>;
    /**
     * The backup strategy type. Valid values: `simple`, `manual`.
     */
    declare public readonly backupStrategyType: pulumi.Output<string | undefined>;
    /**
     * The UID that is backed up across Alibaba cloud accounts.
     */
    declare public readonly crossAliyunId: pulumi.Output<string>;
    /**
     * The name of the RAM role that is backed up across Alibaba cloud accounts.
     */
    declare public readonly crossRoleName: pulumi.Output<string>;
    /**
     * The database region.
     */
    declare public readonly databaseRegion: pulumi.Output<string | undefined>;
    /**
     * Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
     */
    declare public readonly databaseType: pulumi.Output<string>;
    /**
     * The storage time for conversion to archive cold standby is 365 days by default.
     */
    declare public readonly duplicationArchivePeriod: pulumi.Output<number>;
    /**
     * The storage time is converted to low-frequency access. The default time is 180 days.
     */
    declare public readonly duplicationInfrequentAccessPeriod: pulumi.Output<number>;
    /**
     * Whether to enable incremental log Backup.
     */
    declare public readonly enableBackupLog: pulumi.Output<boolean>;
    /**
     * The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
     */
    declare public readonly instanceClass: pulumi.Output<string>;
    /**
     * The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
     */
    declare public readonly instanceType: pulumi.Output<string | undefined>;
    /**
     * The OSS Bucket name. The system automatically generates a new name by default.
     */
    declare public readonly ossBucketName: pulumi.Output<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
     */
    declare public readonly paymentType: pulumi.Output<string>;
    /**
     * Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
     */
    declare public readonly period: pulumi.Output<string | undefined>;
    /**
     * The ID of the resource group.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
     */
    declare public readonly sourceEndpointDatabaseName: pulumi.Output<string>;
    /**
     * The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
     */
    declare public readonly sourceEndpointInstanceId: pulumi.Output<string>;
    /**
     * The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
     */
    declare public readonly sourceEndpointInstanceType: pulumi.Output<string>;
    /**
     * The source endpoint ip.
     */
    declare public readonly sourceEndpointIp: pulumi.Output<string | undefined>;
    /**
     * Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
     */
    declare public readonly sourceEndpointOracleSid: pulumi.Output<string | undefined>;
    /**
     * The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
     */
    declare public readonly sourceEndpointPassword: pulumi.Output<string | undefined>;
    /**
     * The source endpoint port.
     */
    declare public readonly sourceEndpointPort: pulumi.Output<number | undefined>;
    /**
     * The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
     */
    declare public readonly sourceEndpointRegion: pulumi.Output<string>;
    /**
     * Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
     */
    declare public readonly sourceEndpointSid: pulumi.Output<string>;
    /**
     * The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
     */
    declare public readonly sourceEndpointUserName: pulumi.Output<string>;
    /**
     * The status of the resource. Valid values: `pause`, `running`.
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * The storage region.
     */
    declare public readonly storageRegion: pulumi.Output<string | undefined>;
    /**
     * Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
     */
    declare public readonly usedTime: pulumi.Output<number | undefined>;

    /**
     * Create a BackupPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupPlanArgs | BackupPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupPlanState | undefined;
            resourceInputs["backupGatewayId"] = state?.backupGatewayId;
            resourceInputs["backupLogIntervalSeconds"] = state?.backupLogIntervalSeconds;
            resourceInputs["backupMethod"] = state?.backupMethod;
            resourceInputs["backupObjects"] = state?.backupObjects;
            resourceInputs["backupPeriod"] = state?.backupPeriod;
            resourceInputs["backupPlanName"] = state?.backupPlanName;
            resourceInputs["backupRateLimit"] = state?.backupRateLimit;
            resourceInputs["backupRetentionPeriod"] = state?.backupRetentionPeriod;
            resourceInputs["backupSpeedLimit"] = state?.backupSpeedLimit;
            resourceInputs["backupStartTime"] = state?.backupStartTime;
            resourceInputs["backupStorageType"] = state?.backupStorageType;
            resourceInputs["backupStrategyType"] = state?.backupStrategyType;
            resourceInputs["crossAliyunId"] = state?.crossAliyunId;
            resourceInputs["crossRoleName"] = state?.crossRoleName;
            resourceInputs["databaseRegion"] = state?.databaseRegion;
            resourceInputs["databaseType"] = state?.databaseType;
            resourceInputs["duplicationArchivePeriod"] = state?.duplicationArchivePeriod;
            resourceInputs["duplicationInfrequentAccessPeriod"] = state?.duplicationInfrequentAccessPeriod;
            resourceInputs["enableBackupLog"] = state?.enableBackupLog;
            resourceInputs["instanceClass"] = state?.instanceClass;
            resourceInputs["instanceType"] = state?.instanceType;
            resourceInputs["ossBucketName"] = state?.ossBucketName;
            resourceInputs["paymentType"] = state?.paymentType;
            resourceInputs["period"] = state?.period;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["sourceEndpointDatabaseName"] = state?.sourceEndpointDatabaseName;
            resourceInputs["sourceEndpointInstanceId"] = state?.sourceEndpointInstanceId;
            resourceInputs["sourceEndpointInstanceType"] = state?.sourceEndpointInstanceType;
            resourceInputs["sourceEndpointIp"] = state?.sourceEndpointIp;
            resourceInputs["sourceEndpointOracleSid"] = state?.sourceEndpointOracleSid;
            resourceInputs["sourceEndpointPassword"] = state?.sourceEndpointPassword;
            resourceInputs["sourceEndpointPort"] = state?.sourceEndpointPort;
            resourceInputs["sourceEndpointRegion"] = state?.sourceEndpointRegion;
            resourceInputs["sourceEndpointSid"] = state?.sourceEndpointSid;
            resourceInputs["sourceEndpointUserName"] = state?.sourceEndpointUserName;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageRegion"] = state?.storageRegion;
            resourceInputs["usedTime"] = state?.usedTime;
        } else {
            const args = argsOrState as BackupPlanArgs | undefined;
            if (args?.backupMethod === undefined && !opts.urn) {
                throw new Error("Missing required property 'backupMethod'");
            }
            if (args?.backupPlanName === undefined && !opts.urn) {
                throw new Error("Missing required property 'backupPlanName'");
            }
            if (args?.databaseType === undefined && !opts.urn) {
                throw new Error("Missing required property 'databaseType'");
            }
            if (args?.instanceClass === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceClass'");
            }
            if (args?.sourceEndpointInstanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceEndpointInstanceType'");
            }
            resourceInputs["backupGatewayId"] = args?.backupGatewayId;
            resourceInputs["backupLogIntervalSeconds"] = args?.backupLogIntervalSeconds;
            resourceInputs["backupMethod"] = args?.backupMethod;
            resourceInputs["backupObjects"] = args?.backupObjects;
            resourceInputs["backupPeriod"] = args?.backupPeriod;
            resourceInputs["backupPlanName"] = args?.backupPlanName;
            resourceInputs["backupRateLimit"] = args?.backupRateLimit;
            resourceInputs["backupRetentionPeriod"] = args?.backupRetentionPeriod;
            resourceInputs["backupSpeedLimit"] = args?.backupSpeedLimit;
            resourceInputs["backupStartTime"] = args?.backupStartTime;
            resourceInputs["backupStorageType"] = args?.backupStorageType;
            resourceInputs["backupStrategyType"] = args?.backupStrategyType;
            resourceInputs["crossAliyunId"] = args?.crossAliyunId;
            resourceInputs["crossRoleName"] = args?.crossRoleName;
            resourceInputs["databaseRegion"] = args?.databaseRegion;
            resourceInputs["databaseType"] = args?.databaseType;
            resourceInputs["duplicationArchivePeriod"] = args?.duplicationArchivePeriod;
            resourceInputs["duplicationInfrequentAccessPeriod"] = args?.duplicationInfrequentAccessPeriod;
            resourceInputs["enableBackupLog"] = args?.enableBackupLog;
            resourceInputs["instanceClass"] = args?.instanceClass;
            resourceInputs["instanceType"] = args?.instanceType;
            resourceInputs["ossBucketName"] = args?.ossBucketName;
            resourceInputs["paymentType"] = args?.paymentType;
            resourceInputs["period"] = args?.period;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["sourceEndpointDatabaseName"] = args?.sourceEndpointDatabaseName;
            resourceInputs["sourceEndpointInstanceId"] = args?.sourceEndpointInstanceId;
            resourceInputs["sourceEndpointInstanceType"] = args?.sourceEndpointInstanceType;
            resourceInputs["sourceEndpointIp"] = args?.sourceEndpointIp;
            resourceInputs["sourceEndpointOracleSid"] = args?.sourceEndpointOracleSid;
            resourceInputs["sourceEndpointPassword"] = args?.sourceEndpointPassword ? pulumi.secret(args.sourceEndpointPassword) : undefined;
            resourceInputs["sourceEndpointPort"] = args?.sourceEndpointPort;
            resourceInputs["sourceEndpointRegion"] = args?.sourceEndpointRegion;
            resourceInputs["sourceEndpointSid"] = args?.sourceEndpointSid;
            resourceInputs["sourceEndpointUserName"] = args?.sourceEndpointUserName;
            resourceInputs["status"] = args?.status;
            resourceInputs["storageRegion"] = args?.storageRegion;
            resourceInputs["usedTime"] = args?.usedTime;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["sourceEndpointPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BackupPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupPlan resources.
 */
export interface BackupPlanState {
    /**
     * The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
     */
    backupGatewayId?: pulumi.Input<string>;
    /**
     * The backup log interval seconds.
     */
    backupLogIntervalSeconds?: pulumi.Input<number>;
    /**
     * Backup method. Valid values: `duplication`, `logical`, `physical`.
     */
    backupMethod?: pulumi.Input<string>;
    /**
     * The backup object.
     */
    backupObjects?: pulumi.Input<string>;
    /**
     * Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
     */
    backupPeriod?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    backupPlanName?: pulumi.Input<string>;
    /**
     * The backup rate limit.
     */
    backupRateLimit?: pulumi.Input<string>;
    /**
     * The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
     */
    backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The backup speed limit.
     */
    backupSpeedLimit?: pulumi.Input<string>;
    /**
     * The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
     */
    backupStartTime?: pulumi.Input<string>;
    /**
     * Built-in storage type, Valid values: `system`.
     */
    backupStorageType?: pulumi.Input<string>;
    /**
     * The backup strategy type. Valid values: `simple`, `manual`.
     */
    backupStrategyType?: pulumi.Input<string>;
    /**
     * The UID that is backed up across Alibaba cloud accounts.
     */
    crossAliyunId?: pulumi.Input<string>;
    /**
     * The name of the RAM role that is backed up across Alibaba cloud accounts.
     */
    crossRoleName?: pulumi.Input<string>;
    /**
     * The database region.
     */
    databaseRegion?: pulumi.Input<string>;
    /**
     * Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
     */
    databaseType?: pulumi.Input<string>;
    /**
     * The storage time for conversion to archive cold standby is 365 days by default.
     */
    duplicationArchivePeriod?: pulumi.Input<number>;
    /**
     * The storage time is converted to low-frequency access. The default time is 180 days.
     */
    duplicationInfrequentAccessPeriod?: pulumi.Input<number>;
    /**
     * Whether to enable incremental log Backup.
     */
    enableBackupLog?: pulumi.Input<boolean>;
    /**
     * The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
     */
    instanceClass?: pulumi.Input<string>;
    /**
     * The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The OSS Bucket name. The system automatically generates a new name by default.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
     */
    period?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
     */
    sourceEndpointDatabaseName?: pulumi.Input<string>;
    /**
     * The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
     */
    sourceEndpointInstanceId?: pulumi.Input<string>;
    /**
     * The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
     */
    sourceEndpointInstanceType?: pulumi.Input<string>;
    /**
     * The source endpoint ip.
     */
    sourceEndpointIp?: pulumi.Input<string>;
    /**
     * Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
     */
    sourceEndpointOracleSid?: pulumi.Input<string>;
    /**
     * The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
     */
    sourceEndpointPassword?: pulumi.Input<string>;
    /**
     * The source endpoint port.
     */
    sourceEndpointPort?: pulumi.Input<number>;
    /**
     * The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
     */
    sourceEndpointRegion?: pulumi.Input<string>;
    /**
     * Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
     */
    sourceEndpointSid?: pulumi.Input<string>;
    /**
     * The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
     */
    sourceEndpointUserName?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `pause`, `running`.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage region.
     */
    storageRegion?: pulumi.Input<string>;
    /**
     * Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
     */
    usedTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BackupPlan resource.
 */
export interface BackupPlanArgs {
    /**
     * The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
     */
    backupGatewayId?: pulumi.Input<string>;
    /**
     * The backup log interval seconds.
     */
    backupLogIntervalSeconds?: pulumi.Input<number>;
    /**
     * Backup method. Valid values: `duplication`, `logical`, `physical`.
     */
    backupMethod: pulumi.Input<string>;
    /**
     * The backup object.
     */
    backupObjects?: pulumi.Input<string>;
    /**
     * Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
     */
    backupPeriod?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    backupPlanName: pulumi.Input<string>;
    /**
     * The backup rate limit.
     */
    backupRateLimit?: pulumi.Input<string>;
    /**
     * The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
     */
    backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The backup speed limit.
     */
    backupSpeedLimit?: pulumi.Input<string>;
    /**
     * The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
     */
    backupStartTime?: pulumi.Input<string>;
    /**
     * Built-in storage type, Valid values: `system`.
     */
    backupStorageType?: pulumi.Input<string>;
    /**
     * The backup strategy type. Valid values: `simple`, `manual`.
     */
    backupStrategyType?: pulumi.Input<string>;
    /**
     * The UID that is backed up across Alibaba cloud accounts.
     */
    crossAliyunId?: pulumi.Input<string>;
    /**
     * The name of the RAM role that is backed up across Alibaba cloud accounts.
     */
    crossRoleName?: pulumi.Input<string>;
    /**
     * The database region.
     */
    databaseRegion?: pulumi.Input<string>;
    /**
     * Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
     */
    databaseType: pulumi.Input<string>;
    /**
     * The storage time for conversion to archive cold standby is 365 days by default.
     */
    duplicationArchivePeriod?: pulumi.Input<number>;
    /**
     * The storage time is converted to low-frequency access. The default time is 180 days.
     */
    duplicationInfrequentAccessPeriod?: pulumi.Input<number>;
    /**
     * Whether to enable incremental log Backup.
     */
    enableBackupLog?: pulumi.Input<boolean>;
    /**
     * The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
     */
    instanceClass: pulumi.Input<string>;
    /**
     * The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The OSS Bucket name. The system automatically generates a new name by default.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
     */
    period?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
     */
    sourceEndpointDatabaseName?: pulumi.Input<string>;
    /**
     * The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
     */
    sourceEndpointInstanceId?: pulumi.Input<string>;
    /**
     * The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
     */
    sourceEndpointInstanceType: pulumi.Input<string>;
    /**
     * The source endpoint ip.
     */
    sourceEndpointIp?: pulumi.Input<string>;
    /**
     * Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
     */
    sourceEndpointOracleSid?: pulumi.Input<string>;
    /**
     * The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
     */
    sourceEndpointPassword?: pulumi.Input<string>;
    /**
     * The source endpoint port.
     */
    sourceEndpointPort?: pulumi.Input<number>;
    /**
     * The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
     */
    sourceEndpointRegion?: pulumi.Input<string>;
    /**
     * Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
     */
    sourceEndpointSid?: pulumi.Input<string>;
    /**
     * The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
     */
    sourceEndpointUserName?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `pause`, `running`.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage region.
     */
    storageRegion?: pulumi.Input<string>;
    /**
     * Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
     */
    usedTime?: pulumi.Input<number>;
}
