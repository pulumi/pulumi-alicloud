// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { NodeGroupArgs, NodeGroupState } from "./nodeGroup";
export type NodeGroup = import("./nodeGroup").NodeGroup;
export const NodeGroup: typeof import("./nodeGroup").NodeGroup = null as any;
utilities.lazyLoad(exports, ["NodeGroup"], () => require("./nodeGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:starrocks/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "alicloud:starrocks/nodeGroup:NodeGroup":
                return new NodeGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "starrocks/instance", _module)
pulumi.runtime.registerResourceModule("alicloud", "starrocks/nodeGroup", _module)
