// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Sls Machine Group available to the user.[What is Machine Group](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateMachineGroup)
 *
 * > **NOTE:** Available since v1.259.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const projectName = config.get("projectName") || "project-for-machine-group-terraform";
 * const defaultyJqrue = new alicloud.log.Project("defaultyJqrue", {
 *     description: "for terraform example",
 *     name: projectName,
 * });
 * const defaultMachineGroup = new alicloud.sls.MachineGroup("default", {
 *     groupName: "group1",
 *     projectName: projectName,
 *     machineIdentifyType: "ip",
 *     groupAttribute: {
 *         groupTopic: "example",
 *         externalName: "example",
 *     },
 *     machineLists: ["192.168.1.1"],
 * });
 * const _default = alicloud.sls.getMachineGroupsOutput({
 *     ids: [defaultMachineGroup.id],
 *     groupName: "group1",
 *     projectName: projectName,
 * });
 * export const alicloudSlsMachineGroupExampleId = _default.apply(_default => _default.groups?.[0]?.id);
 * ```
 */
export function getMachineGroups(args: GetMachineGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetMachineGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:sls/getMachineGroups:getMachineGroups", {
        "groupName": args.groupName,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMachineGroups.
 */
export interface GetMachineGroupsArgs {
    /**
     * Machine Group name
     */
    groupName?: string;
    /**
     * A list of Machine Group IDs. The value is formulated as `<project_name>:<group_name>`.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Project name
     */
    projectName: string;
}

/**
 * A collection of values returned by getMachineGroups.
 */
export interface GetMachineGroupsResult {
    /**
     * Machine Group name
     */
    readonly groupName?: string;
    /**
     * A list of Machine Group Entries. Each element contains the following attributes:
     */
    readonly groups: outputs.sls.GetMachineGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Machine Group IDs.
     */
    readonly ids: string[];
    readonly outputFile?: string;
    readonly projectName: string;
}
/**
 * This data source provides Sls Machine Group available to the user.[What is Machine Group](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateMachineGroup)
 *
 * > **NOTE:** Available since v1.259.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const projectName = config.get("projectName") || "project-for-machine-group-terraform";
 * const defaultyJqrue = new alicloud.log.Project("defaultyJqrue", {
 *     description: "for terraform example",
 *     name: projectName,
 * });
 * const defaultMachineGroup = new alicloud.sls.MachineGroup("default", {
 *     groupName: "group1",
 *     projectName: projectName,
 *     machineIdentifyType: "ip",
 *     groupAttribute: {
 *         groupTopic: "example",
 *         externalName: "example",
 *     },
 *     machineLists: ["192.168.1.1"],
 * });
 * const _default = alicloud.sls.getMachineGroupsOutput({
 *     ids: [defaultMachineGroup.id],
 *     groupName: "group1",
 *     projectName: projectName,
 * });
 * export const alicloudSlsMachineGroupExampleId = _default.apply(_default => _default.groups?.[0]?.id);
 * ```
 */
export function getMachineGroupsOutput(args: GetMachineGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMachineGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:sls/getMachineGroups:getMachineGroups", {
        "groupName": args.groupName,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMachineGroups.
 */
export interface GetMachineGroupsOutputArgs {
    /**
     * Machine Group name
     */
    groupName?: pulumi.Input<string>;
    /**
     * A list of Machine Group IDs. The value is formulated as `<project_name>:<group_name>`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Project name
     */
    projectName: pulumi.Input<string>;
}
