// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Sls Alert available to the user.[What is Alert](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateAlert)
 *
 * > **NOTE:** Available since v1.250.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const alertName = config.get("alertName") || "openapi-terraform-alert";
 * const projectName = config.get("projectName") || "terraform-alert-example";
 * const defaultINsMgl = new alicloud.log.Project("defaultINsMgl", {
 *     description: "terraform-alert-example",
 *     name: "terraform-alert-example",
 * });
 * const defaultAlert = new alicloud.sls.Alert("default", {
 *     configuration: {
 *         type: "tpl",
 *         version: "2",
 *         queryLists: [
 *             {
 *                 query: "* | select *",
 *                 timeSpanType: "Relative",
 *                 start: "-15m",
 *                 end: "now",
 *                 storeType: "log",
 *                 project: defaultINsMgl.id,
 *                 store: "alert",
 *                 region: "cn-beijing",
 *                 powerSqlMode: "disable",
 *                 chartTitle: "wkb-chart",
 *                 dashboardId: "wkb-dashboard",
 *                 ui: "{}",
 *                 roleArn: "acs:ram::1654218965343050:role/aliyunslsalertmonitorrole",
 *             },
 *             {
 *                 storeType: "meta",
 *                 store: "user.rds_ip_whitelist",
 *             },
 *             {
 *                 storeType: "meta",
 *                 store: "myexample1",
 *             },
 *         ],
 *         groupConfiguration: {
 *             type: "no_group",
 *             fields: [
 *                 "a",
 *                 "b",
 *             ],
 *         },
 *         joinConfigurations: [
 *             {
 *                 type: "no_join",
 *                 condition: "aa",
 *             },
 *             {
 *                 type: "cross_join",
 *                 condition: "qqq",
 *             },
 *             {
 *                 type: "inner_join",
 *                 condition: "fefefe",
 *             },
 *         ],
 *         severityConfigurations: [{
 *             severity: 6,
 *             evalCondition: {
 *                 condition: "__count__ > 1",
 *                 countCondition: "cnt > 0",
 *             },
 *         }],
 *         labels: [{
 *             key: "a",
 *             value: "b",
 *         }],
 *         annotations: [{
 *             key: "x",
 *             value: "y",
 *         }],
 *         autoAnnotation: true,
 *         sendResolved: false,
 *         threshold: 1,
 *         noDataFire: false,
 *         sinkEventStore: {
 *             enabled: true,
 *             endpoint: "cn-shanghai-intranet.log.aliyuncs.com",
 *             project: "wkb-wangren",
 *             eventStore: "alert",
 *             roleArn: "acs:ram::1654218965343050:role/aliyunlogetlrole",
 *         },
 *         sinkCms: {
 *             enabled: false,
 *         },
 *         sinkAlerthub: {
 *             enabled: false,
 *         },
 *         templateConfiguration: {
 *             templateId: "sls.app.ack.autoscaler.cluster_unhealthy",
 *             type: "sys",
 *             version: "1.0",
 *             lang: "cn",
 *         },
 *         conditionConfiguration: {
 *             condition: "cnt > 3",
 *             countCondition: "__count__ < 3",
 *         },
 *         policyConfiguration: {
 *             alertPolicyId: "sls.builtin.dynamic",
 *             actionPolicyId: "wkb-action",
 *             repeatInterval: "1m",
 *         },
 *         dashboard: "internal-alert",
 *         muteUntil: 0,
 *         noDataSeverity: 6,
 *         tags: [
 *             "wkb",
 *             "wangren",
 *             "sls",
 *         ],
 *     },
 *     alertName: alertName,
 *     projectName: defaultINsMgl.id,
 *     schedule: {
 *         type: "Cron",
 *         runImmdiately: true,
 *         timeZone: "+0800",
 *         delay: 10,
 *         cronExpression: "0/5 * * * *",
 *     },
 *     displayName: "openapi-terraform",
 *     description: "create alert",
 * });
 * const _default = alicloud.sls.getAlertsOutput({
 *     ids: [defaultAlert.id],
 *     nameRegex: defaultAlert.alertName,
 *     projectName: defaultINsMgl.id,
 * });
 * export const alicloudSlsAlertExampleId = _default.apply(_default => _default.alerts?.[0]?.id);
 * ```
 */
export function getAlerts(args: GetAlertsArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:sls/getAlerts:getAlerts", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlerts.
 */
export interface GetAlertsArgs {
    /**
     * A list of Alert IDs. The value is formulated as `<project_name>:<alert_name>`.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Project Name
     */
    projectName: string;
}

/**
 * A collection of values returned by getAlerts.
 */
export interface GetAlertsResult {
    /**
     * A list of Alert Entries. Each element contains the following attributes:
     */
    readonly alerts: outputs.sls.GetAlertsAlert[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Alert IDs.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of name of Alerts.
     */
    readonly names: string[];
    readonly outputFile?: string;
    readonly projectName: string;
}
/**
 * This data source provides Sls Alert available to the user.[What is Alert](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateAlert)
 *
 * > **NOTE:** Available since v1.250.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const alertName = config.get("alertName") || "openapi-terraform-alert";
 * const projectName = config.get("projectName") || "terraform-alert-example";
 * const defaultINsMgl = new alicloud.log.Project("defaultINsMgl", {
 *     description: "terraform-alert-example",
 *     name: "terraform-alert-example",
 * });
 * const defaultAlert = new alicloud.sls.Alert("default", {
 *     configuration: {
 *         type: "tpl",
 *         version: "2",
 *         queryLists: [
 *             {
 *                 query: "* | select *",
 *                 timeSpanType: "Relative",
 *                 start: "-15m",
 *                 end: "now",
 *                 storeType: "log",
 *                 project: defaultINsMgl.id,
 *                 store: "alert",
 *                 region: "cn-beijing",
 *                 powerSqlMode: "disable",
 *                 chartTitle: "wkb-chart",
 *                 dashboardId: "wkb-dashboard",
 *                 ui: "{}",
 *                 roleArn: "acs:ram::1654218965343050:role/aliyunslsalertmonitorrole",
 *             },
 *             {
 *                 storeType: "meta",
 *                 store: "user.rds_ip_whitelist",
 *             },
 *             {
 *                 storeType: "meta",
 *                 store: "myexample1",
 *             },
 *         ],
 *         groupConfiguration: {
 *             type: "no_group",
 *             fields: [
 *                 "a",
 *                 "b",
 *             ],
 *         },
 *         joinConfigurations: [
 *             {
 *                 type: "no_join",
 *                 condition: "aa",
 *             },
 *             {
 *                 type: "cross_join",
 *                 condition: "qqq",
 *             },
 *             {
 *                 type: "inner_join",
 *                 condition: "fefefe",
 *             },
 *         ],
 *         severityConfigurations: [{
 *             severity: 6,
 *             evalCondition: {
 *                 condition: "__count__ > 1",
 *                 countCondition: "cnt > 0",
 *             },
 *         }],
 *         labels: [{
 *             key: "a",
 *             value: "b",
 *         }],
 *         annotations: [{
 *             key: "x",
 *             value: "y",
 *         }],
 *         autoAnnotation: true,
 *         sendResolved: false,
 *         threshold: 1,
 *         noDataFire: false,
 *         sinkEventStore: {
 *             enabled: true,
 *             endpoint: "cn-shanghai-intranet.log.aliyuncs.com",
 *             project: "wkb-wangren",
 *             eventStore: "alert",
 *             roleArn: "acs:ram::1654218965343050:role/aliyunlogetlrole",
 *         },
 *         sinkCms: {
 *             enabled: false,
 *         },
 *         sinkAlerthub: {
 *             enabled: false,
 *         },
 *         templateConfiguration: {
 *             templateId: "sls.app.ack.autoscaler.cluster_unhealthy",
 *             type: "sys",
 *             version: "1.0",
 *             lang: "cn",
 *         },
 *         conditionConfiguration: {
 *             condition: "cnt > 3",
 *             countCondition: "__count__ < 3",
 *         },
 *         policyConfiguration: {
 *             alertPolicyId: "sls.builtin.dynamic",
 *             actionPolicyId: "wkb-action",
 *             repeatInterval: "1m",
 *         },
 *         dashboard: "internal-alert",
 *         muteUntil: 0,
 *         noDataSeverity: 6,
 *         tags: [
 *             "wkb",
 *             "wangren",
 *             "sls",
 *         ],
 *     },
 *     alertName: alertName,
 *     projectName: defaultINsMgl.id,
 *     schedule: {
 *         type: "Cron",
 *         runImmdiately: true,
 *         timeZone: "+0800",
 *         delay: 10,
 *         cronExpression: "0/5 * * * *",
 *     },
 *     displayName: "openapi-terraform",
 *     description: "create alert",
 * });
 * const _default = alicloud.sls.getAlertsOutput({
 *     ids: [defaultAlert.id],
 *     nameRegex: defaultAlert.alertName,
 *     projectName: defaultINsMgl.id,
 * });
 * export const alicloudSlsAlertExampleId = _default.apply(_default => _default.alerts?.[0]?.id);
 * ```
 */
export function getAlertsOutput(args: GetAlertsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAlertsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:sls/getAlerts:getAlerts", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlerts.
 */
export interface GetAlertsOutputArgs {
    /**
     * A list of Alert IDs. The value is formulated as `<project_name>:<alert_name>`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Project Name
     */
    projectName: pulumi.Input<string>;
}
