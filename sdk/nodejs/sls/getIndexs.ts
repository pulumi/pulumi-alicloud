// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Sls Index available to the user.[What is Index](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateIndex)
 *
 * > **NOTE:** Available since v1.262.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const logstoreName = config.get("logstoreName") || "logstore-example-1";
 * const projectName = config.get("projectName") || "project-for-index-terraform-example-1";
 * const defaultProject = new alicloud.log.Project("default", {
 *     description: "terraform example",
 *     projectName: projectName,
 * });
 * const defaultStore = new alicloud.log.Store("default", {
 *     hotTtl: 7,
 *     retentionPeriod: 30,
 *     shardCount: 2,
 *     projectName: defaultProject.projectName,
 *     logstoreName: logstoreName,
 * });
 * const defaultIndex = new alicloud.sls.Index("default", {
 *     line: {
 *         chn: true,
 *         caseSensitive: true,
 *         tokens: ["a"],
 *         excludeKeys: ["t"],
 *     },
 *     keys: JSON.stringify({
 *         example: {
 *             caseSensitive: false,
 *             token: [
 *                 "\n",
 *                 "\x09",
 *                 ",",
 *                 " ",
 *                 ";",
 *                 "\"",
 *                 "'",
 *                 "(",
 *                 ")",
 *                 "{",
 *                 "}",
 *                 "[",
 *                 "]",
 *                 "<",
 *                 ">",
 *                 "?",
 *                 "/",
 *                 "#",
 *                 ":",
 *             ],
 *             type: "text",
 *             doc_value: false,
 *             alias: "",
 *             chn: false,
 *         },
 *     }),
 *     logstoreName: defaultStore.logstoreName,
 *     projectName: projectName,
 * });
 * const _default = alicloud.sls.getIndexsOutput({
 *     logstoreName: defaultStore.logstoreName,
 *     projectName: defaultProject.projectName,
 * });
 * export const alicloudSlsIndexExampleId = _default.apply(_default => _default.indexs?.[0]?.id);
 * ```
 */
export function getIndexs(args: GetIndexsArgs, opts?: pulumi.InvokeOptions): Promise<GetIndexsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:sls/getIndexs:getIndexs", {
        "ids": args.ids,
        "logstoreName": args.logstoreName,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getIndexs.
 */
export interface GetIndexsArgs {
    /**
     * A list of Index IDs. The value is formulated as `<project_name>:<logstore_name>`.
     */
    ids?: string[];
    /**
     * Logstore name
     */
    logstoreName: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Project name
     */
    projectName: string;
}

/**
 * A collection of values returned by getIndexs.
 */
export interface GetIndexsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Index IDs.
     */
    readonly ids: string[];
    /**
     * A list of Index Entries. Each element contains the following attributes:
     */
    readonly indexs: outputs.sls.GetIndexsIndex[];
    readonly logstoreName: string;
    readonly outputFile?: string;
    readonly projectName: string;
}
/**
 * This data source provides Sls Index available to the user.[What is Index](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateIndex)
 *
 * > **NOTE:** Available since v1.262.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const logstoreName = config.get("logstoreName") || "logstore-example-1";
 * const projectName = config.get("projectName") || "project-for-index-terraform-example-1";
 * const defaultProject = new alicloud.log.Project("default", {
 *     description: "terraform example",
 *     projectName: projectName,
 * });
 * const defaultStore = new alicloud.log.Store("default", {
 *     hotTtl: 7,
 *     retentionPeriod: 30,
 *     shardCount: 2,
 *     projectName: defaultProject.projectName,
 *     logstoreName: logstoreName,
 * });
 * const defaultIndex = new alicloud.sls.Index("default", {
 *     line: {
 *         chn: true,
 *         caseSensitive: true,
 *         tokens: ["a"],
 *         excludeKeys: ["t"],
 *     },
 *     keys: JSON.stringify({
 *         example: {
 *             caseSensitive: false,
 *             token: [
 *                 "\n",
 *                 "\x09",
 *                 ",",
 *                 " ",
 *                 ";",
 *                 "\"",
 *                 "'",
 *                 "(",
 *                 ")",
 *                 "{",
 *                 "}",
 *                 "[",
 *                 "]",
 *                 "<",
 *                 ">",
 *                 "?",
 *                 "/",
 *                 "#",
 *                 ":",
 *             ],
 *             type: "text",
 *             doc_value: false,
 *             alias: "",
 *             chn: false,
 *         },
 *     }),
 *     logstoreName: defaultStore.logstoreName,
 *     projectName: projectName,
 * });
 * const _default = alicloud.sls.getIndexsOutput({
 *     logstoreName: defaultStore.logstoreName,
 *     projectName: defaultProject.projectName,
 * });
 * export const alicloudSlsIndexExampleId = _default.apply(_default => _default.indexs?.[0]?.id);
 * ```
 */
export function getIndexsOutput(args: GetIndexsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIndexsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:sls/getIndexs:getIndexs", {
        "ids": args.ids,
        "logstoreName": args.logstoreName,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getIndexs.
 */
export interface GetIndexsOutputArgs {
    /**
     * A list of Index IDs. The value is formulated as `<project_name>:<logstore_name>`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Logstore name
     */
    logstoreName: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Project name
     */
    projectName: pulumi.Input<string>;
}
