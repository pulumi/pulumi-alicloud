// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Tair (Redis OSS-Compatible) And Memcache (KVStore) Account resource.
 *
 * For information about Tair (Redis OSS-Compatible) And Memcache (KVStore) Account and how to use it, see [What is Account](https://www.alibabacloud.com/help/en/redis/developer-reference/api-r-kvstore-2015-01-01-createaccount-redis).
 *
 * > **NOTE:** Available since v1.66.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.kvstore.getZones({});
 * const defaultGetResourceGroups = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 * });
 * const defaultInstance = new alicloud.kvstore.Instance("default", {
 *     dbInstanceName: name,
 *     vswitchId: defaultSwitch.id,
 *     resourceGroupId: defaultGetResourceGroups.then(defaultGetResourceGroups => defaultGetResourceGroups.ids?.[0]),
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     instanceClass: "redis.master.large.default",
 *     instanceType: "Redis",
 *     engineVersion: "5.0",
 *     securityIps: ["10.23.12.24"],
 *     config: {
 *         appendonly: "yes",
 *         "lazyfree-lazy-eviction": "yes",
 *     },
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 * });
 * const defaultAccount = new alicloud.kvstore.Account("default", {
 *     accountName: "tfexamplename",
 *     accountPassword: "YourPassword_123",
 *     instanceId: defaultInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * Tair (Redis OSS-Compatible) And Memcache (KVStore) Account can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:kvstore/account:Account example <instance_id>:<account_name>
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:kvstore/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * The name of the account. The name must meet the following requirements:
     * * The name must start with a lowercase letter and can contain lowercase letters, digits, and underscores (_).
     * * The name can be up to 100 characters in length.
     * * The name cannot be one of the reserved words listed in the [Reserved words for Redis account names](https://www.alibabacloud.com/help/en/redis/user-guide/create-and-manage-database-accounts) section.
     */
    declare public readonly accountName: pulumi.Output<string>;
    /**
     * The password of the account. The password must be 8 to 32 characters in length. It must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `!@ # $ % ^ & * ( ) _ + - =`. You have to specify one of `accountPassword` and `kmsEncryptedPassword` fields.
     */
    declare public readonly accountPassword: pulumi.Output<string | undefined>;
    /**
     * The privilege of account access database. Default value: `RoleReadWrite` 
     * - `RoleReadOnly`: This value is only for Redis and Memcache
     * - `RoleReadWrite`: This value is only for Redis and Memcache
     */
    declare public readonly accountPrivilege: pulumi.Output<string>;
    /**
     * Privilege type of account.
     * - Normal: Common privilege.
     * Default to Normal.
     */
    declare public readonly accountType: pulumi.Output<string>;
    /**
     * Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The Id of instance in which account belongs (The engine version of instance must be 4.0 or 4.0+).
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * An KMS encrypts password used to a Tair (Redis OSS-Compatible) And Memcache (KVStore) account. If the `accountPassword` is filled in, this field will be ignored.
     */
    declare public readonly kmsEncryptedPassword: pulumi.Output<string | undefined>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a Tair (Redis OSS-Compatible) And Memcache (KVStore) account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    declare public readonly kmsEncryptionContext: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The status of Tair (Redis OSS-Compatible) And Memcache (KVStore) Account.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["accountName"] = state?.accountName;
            resourceInputs["accountPassword"] = state?.accountPassword;
            resourceInputs["accountPrivilege"] = state?.accountPrivilege;
            resourceInputs["accountType"] = state?.accountType;
            resourceInputs["description"] = state?.description;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["kmsEncryptedPassword"] = state?.kmsEncryptedPassword;
            resourceInputs["kmsEncryptionContext"] = state?.kmsEncryptionContext;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if (args?.accountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["accountName"] = args?.accountName;
            resourceInputs["accountPassword"] = args?.accountPassword ? pulumi.secret(args.accountPassword) : undefined;
            resourceInputs["accountPrivilege"] = args?.accountPrivilege;
            resourceInputs["accountType"] = args?.accountType;
            resourceInputs["description"] = args?.description;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["kmsEncryptedPassword"] = args?.kmsEncryptedPassword;
            resourceInputs["kmsEncryptionContext"] = args?.kmsEncryptionContext;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accountPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * The name of the account. The name must meet the following requirements:
     * * The name must start with a lowercase letter and can contain lowercase letters, digits, and underscores (_).
     * * The name can be up to 100 characters in length.
     * * The name cannot be one of the reserved words listed in the [Reserved words for Redis account names](https://www.alibabacloud.com/help/en/redis/user-guide/create-and-manage-database-accounts) section.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The password of the account. The password must be 8 to 32 characters in length. It must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `!@ # $ % ^ & * ( ) _ + - =`. You have to specify one of `accountPassword` and `kmsEncryptedPassword` fields.
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * The privilege of account access database. Default value: `RoleReadWrite` 
     * - `RoleReadOnly`: This value is only for Redis and Memcache
     * - `RoleReadWrite`: This value is only for Redis and Memcache
     */
    accountPrivilege?: pulumi.Input<string>;
    /**
     * Privilege type of account.
     * - Normal: Common privilege.
     * Default to Normal.
     */
    accountType?: pulumi.Input<string>;
    /**
     * Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of instance in which account belongs (The engine version of instance must be 4.0 or 4.0+).
     */
    instanceId?: pulumi.Input<string>;
    /**
     * An KMS encrypts password used to a Tair (Redis OSS-Compatible) And Memcache (KVStore) account. If the `accountPassword` is filled in, this field will be ignored.
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a Tair (Redis OSS-Compatible) And Memcache (KVStore) account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The status of Tair (Redis OSS-Compatible) And Memcache (KVStore) Account.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The name of the account. The name must meet the following requirements:
     * * The name must start with a lowercase letter and can contain lowercase letters, digits, and underscores (_).
     * * The name can be up to 100 characters in length.
     * * The name cannot be one of the reserved words listed in the [Reserved words for Redis account names](https://www.alibabacloud.com/help/en/redis/user-guide/create-and-manage-database-accounts) section.
     */
    accountName: pulumi.Input<string>;
    /**
     * The password of the account. The password must be 8 to 32 characters in length. It must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `!@ # $ % ^ & * ( ) _ + - =`. You have to specify one of `accountPassword` and `kmsEncryptedPassword` fields.
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * The privilege of account access database. Default value: `RoleReadWrite` 
     * - `RoleReadOnly`: This value is only for Redis and Memcache
     * - `RoleReadWrite`: This value is only for Redis and Memcache
     */
    accountPrivilege?: pulumi.Input<string>;
    /**
     * Privilege type of account.
     * - Normal: Common privilege.
     * Default to Normal.
     */
    accountType?: pulumi.Input<string>;
    /**
     * Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of instance in which account belongs (The engine version of instance must be 4.0 or 4.0+).
     */
    instanceId: pulumi.Input<string>;
    /**
     * An KMS encrypts password used to a Tair (Redis OSS-Compatible) And Memcache (KVStore) account. If the `accountPassword` is filled in, this field will be ignored.
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a Tair (Redis OSS-Compatible) And Memcache (KVStore) account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
