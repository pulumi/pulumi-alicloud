// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a KVStore Account resource.
 *
 * For information about KVStore Account and how to use it, see [What is Account](https://www.alibabacloud.com/help/doc-detail/95973.htm).
 *
 * > **NOTE:** Available in 1.66.0+
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const creation = config.get("creation") || "KVStore";
 * const name = config.get("name") || "kvstoreinstancevpc";
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: creation,
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {cidrBlock: "172.16.0.0/16"});
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     availabilityZone: defaultZones.then(defaultZones => defaultZones.zones[0].id),
 * });
 * const defaultInstance = new alicloud.kvstore.Instance("defaultInstance", {
 *     instanceClass: "redis.master.small.default",
 *     instanceName: name,
 *     vswitchId: defaultSwitch.id,
 *     privateIp: "172.16.0.10",
 *     securityIps: ["10.0.0.1"],
 *     instanceType: "Redis",
 *     engineVersion: "4.0",
 * });
 * const example = new alicloud.kvstore.Account("example", {
 *     accountName: "tftestnormal",
 *     accountPassword: "YourPassword_123",
 *     instanceId: defaultInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * KVStore account can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:kvstore/account:Account example <instance_id>:<account_name>
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:kvstore/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * The name of the account. The name must be 1 to 16 characters in length and contain lowercase letters, digits, and underscores (_). It must start with a lowercase letter.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters. You have to specify one of `accountPassword` and `kmsEncryptedPassword` fields.
     */
    public readonly accountPassword!: pulumi.Output<string | undefined>;
    /**
     * The privilege of account access database. Valid values: 
     * - RoleReadOnly: This value is only for Redis and Memcache
     * - RoleReadWrite: This value is only for Redis and Memcache
     * - RoleRepl: This value supports instance to read, write, and open SYNC / PSYNC commands.
     * Only for Redis which engine version is 4.0 and architecture type is standard
     */
    public readonly accountPrivilege!: pulumi.Output<string | undefined>;
    /**
     * Privilege type of account.
     * - Normal: Common privilege.
     * Default to Normal.
     */
    public readonly accountType!: pulumi.Output<string | undefined>;
    /**
     * Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Id of instance in which account belongs (The engine version of instance must be 4.0 or 4.0+).
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * An KMS encrypts password used to a KVStore account. If the `accountPassword` is filled in, this field will be ignored.
     */
    public readonly kmsEncryptedPassword!: pulumi.Output<string | undefined>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a KVStore account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    public readonly kmsEncryptionContext!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The status of KVStore Account.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AccountState | undefined;
            inputs["accountName"] = state ? state.accountName : undefined;
            inputs["accountPassword"] = state ? state.accountPassword : undefined;
            inputs["accountPrivilege"] = state ? state.accountPrivilege : undefined;
            inputs["accountType"] = state ? state.accountType : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["instanceId"] = state ? state.instanceId : undefined;
            inputs["kmsEncryptedPassword"] = state ? state.kmsEncryptedPassword : undefined;
            inputs["kmsEncryptionContext"] = state ? state.kmsEncryptionContext : undefined;
            inputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.instanceId === undefined) {
                throw new Error("Missing required property 'instanceId'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["accountPassword"] = args ? args.accountPassword : undefined;
            inputs["accountPrivilege"] = args ? args.accountPrivilege : undefined;
            inputs["accountType"] = args ? args.accountType : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["instanceId"] = args ? args.instanceId : undefined;
            inputs["kmsEncryptedPassword"] = args ? args.kmsEncryptedPassword : undefined;
            inputs["kmsEncryptionContext"] = args ? args.kmsEncryptionContext : undefined;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Account.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * The name of the account. The name must be 1 to 16 characters in length and contain lowercase letters, digits, and underscores (_). It must start with a lowercase letter.
     */
    readonly accountName?: pulumi.Input<string>;
    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters. You have to specify one of `accountPassword` and `kmsEncryptedPassword` fields.
     */
    readonly accountPassword?: pulumi.Input<string>;
    /**
     * The privilege of account access database. Valid values: 
     * - RoleReadOnly: This value is only for Redis and Memcache
     * - RoleReadWrite: This value is only for Redis and Memcache
     * - RoleRepl: This value supports instance to read, write, and open SYNC / PSYNC commands.
     * Only for Redis which engine version is 4.0 and architecture type is standard
     */
    readonly accountPrivilege?: pulumi.Input<string>;
    /**
     * Privilege type of account.
     * - Normal: Common privilege.
     * Default to Normal.
     */
    readonly accountType?: pulumi.Input<string>;
    /**
     * Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The Id of instance in which account belongs (The engine version of instance must be 4.0 or 4.0+).
     */
    readonly instanceId?: pulumi.Input<string>;
    /**
     * An KMS encrypts password used to a KVStore account. If the `accountPassword` is filled in, this field will be ignored.
     */
    readonly kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a KVStore account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    readonly kmsEncryptionContext?: pulumi.Input<{[key: string]: any}>;
    /**
     * The status of KVStore Account.
     */
    readonly status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The name of the account. The name must be 1 to 16 characters in length and contain lowercase letters, digits, and underscores (_). It must start with a lowercase letter.
     */
    readonly accountName: pulumi.Input<string>;
    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters. You have to specify one of `accountPassword` and `kmsEncryptedPassword` fields.
     */
    readonly accountPassword?: pulumi.Input<string>;
    /**
     * The privilege of account access database. Valid values: 
     * - RoleReadOnly: This value is only for Redis and Memcache
     * - RoleReadWrite: This value is only for Redis and Memcache
     * - RoleRepl: This value supports instance to read, write, and open SYNC / PSYNC commands.
     * Only for Redis which engine version is 4.0 and architecture type is standard
     */
    readonly accountPrivilege?: pulumi.Input<string>;
    /**
     * Privilege type of account.
     * - Normal: Common privilege.
     * Default to Normal.
     */
    readonly accountType?: pulumi.Input<string>;
    /**
     * Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The Id of instance in which account belongs (The engine version of instance must be 4.0 or 4.0+).
     */
    readonly instanceId: pulumi.Input<string>;
    /**
     * An KMS encrypts password used to a KVStore account. If the `accountPassword` is filled in, this field will be ignored.
     */
    readonly kmsEncryptedPassword?: pulumi.Input<string>;
    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a KVStore account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     */
    readonly kmsEncryptionContext?: pulumi.Input<{[key: string]: any}>;
}
