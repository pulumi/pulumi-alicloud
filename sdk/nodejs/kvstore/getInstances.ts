// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * The `alicloud.kvstore.getInstances` data source provides a collection of kvstore instances available in Alicloud account.
 * Filters support regular expression for the instance name, searches by tags, and other filters which are listed below.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.kvstore.getInstances({
 *     nameRegex: "testname",
 * });
 * export const firstInstanceName = _default.then(_default => _default.instances?[0]?.name);
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:kvstore/getInstances:getInstances", {
        "architectureType": args.architectureType,
        "editionType": args.editionType,
        "enableDetails": args.enableDetails,
        "engineVersion": args.engineVersion,
        "expired": args.expired,
        "globalInstance": args.globalInstance,
        "ids": args.ids,
        "instanceClass": args.instanceClass,
        "instanceType": args.instanceType,
        "nameRegex": args.nameRegex,
        "networkType": args.networkType,
        "outputFile": args.outputFile,
        "paymentType": args.paymentType,
        "resourceGroupId": args.resourceGroupId,
        "searchKey": args.searchKey,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * The type of the architecture. Valid values: `cluster`, `standard` and `SplitRW`.
     */
    architectureType?: string;
    /**
     * Used to retrieve instances belong to specified `vswitch` resources.  Valid values: `Enterprise`, `Community`.
     */
    editionType?: string;
    /**
     * Default to `false`. Set it to true can output more details.
     */
    enableDetails?: boolean;
    /**
     * The engine version. Valid values: `2.8`, `4.0`, `5.0`, `6.0`.
     */
    engineVersion?: string;
    /**
     * The expiration status of the instance.
     */
    expired?: string;
    /**
     * Whether to create a distributed cache.
     */
    globalInstance?: boolean;
    /**
     * A list of KVStore DBInstance IDs.
     */
    ids?: string[];
    /**
     * Type of the applied ApsaraDB for Redis instance. For more information, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/61135.htm).
     */
    instanceClass?: string;
    /**
     * The engine type of the KVStore DBInstance. Options are `Memcache`, and `Redis`. If no value is specified, all types are returned.
     */
    instanceType?: string;
    /**
     * A regex string to apply to the instance name.
     */
    nameRegex?: string;
    /**
     * The type of the network. Valid values: `CLASSIC`, `VPC`.
     */
    networkType?: string;
    outputFile?: string;
    /**
     * The payment type. Valid values: `PostPaid`, `PrePaid`.
     */
    paymentType?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The name of the instance.
     */
    searchKey?: string;
    /**
     * The status of the KVStore DBInstance. Valid values: `Changing`, `CleaningUpExpiredData`, `Creating`, `Flushing`, `HASwitching`, `Inactive`, `MajorVersionUpgrading`, `Migrating`, `NetworkModifying`, `Normal`, `Rebooting`, `SSLModifying`, `Transforming`, `ZoneMigrating`.
     */
    status?: string;
    /**
     * Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
     */
    tags?: {[key: string]: any};
    /**
     * Used to retrieve instances belong to specified VPC.
     */
    vpcId?: string;
    /**
     * Used to retrieve instances belong to specified `vswitch` resources.
     */
    vswitchId?: string;
    /**
     * The ID of the zone.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    readonly architectureType?: string;
    readonly editionType?: string;
    readonly enableDetails?: boolean;
    /**
     * The engine version of the instance.
     */
    readonly engineVersion?: string;
    readonly expired?: string;
    readonly globalInstance?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of KVStore Instance IDs.
     */
    readonly ids: string[];
    readonly instanceClass?: string;
    /**
     * (Optional) Database type. Valid Values: `Memcache`, `Redis`. If no value is specified, all types are returned.
     * * `instanceClass`- (Optional) Type of the applied ApsaraDB for instance.
     * For more information, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/61135.htm).
     */
    readonly instanceType?: string;
    /**
     * A list of KVStore Instances. Its every element contains the following attributes:
     */
    readonly instances: outputs.kvstore.GetInstancesInstance[];
    readonly nameRegex?: string;
    /**
     * A list of KVStore Instance names.
     */
    readonly names: string[];
    /**
     * The network type of the instance.
     */
    readonly networkType?: string;
    readonly outputFile?: string;
    /**
     * Billing method. Valid Values: `PostPaid` for  Pay-As-You-Go and `PrePaid` for subscription.
     */
    readonly paymentType?: string;
    readonly resourceGroupId?: string;
    readonly searchKey?: string;
    /**
     * Status of the instance.
     */
    readonly status?: string;
    readonly tags?: {[key: string]: any};
    /**
     * VPC ID the instance belongs to.
     */
    readonly vpcId?: string;
    /**
     * VSwitch ID the instance belongs to.
     */
    readonly vswitchId?: string;
    /**
     * The ID of zone.
     */
    readonly zoneId?: string;
}

export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstancesResult> {
    return pulumi.output(args).apply(a => getInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * The type of the architecture. Valid values: `cluster`, `standard` and `SplitRW`.
     */
    architectureType?: pulumi.Input<string>;
    /**
     * Used to retrieve instances belong to specified `vswitch` resources.  Valid values: `Enterprise`, `Community`.
     */
    editionType?: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to true can output more details.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * The engine version. Valid values: `2.8`, `4.0`, `5.0`, `6.0`.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The expiration status of the instance.
     */
    expired?: pulumi.Input<string>;
    /**
     * Whether to create a distributed cache.
     */
    globalInstance?: pulumi.Input<boolean>;
    /**
     * A list of KVStore DBInstance IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of the applied ApsaraDB for Redis instance. For more information, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/61135.htm).
     */
    instanceClass?: pulumi.Input<string>;
    /**
     * The engine type of the KVStore DBInstance. Options are `Memcache`, and `Redis`. If no value is specified, all types are returned.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * A regex string to apply to the instance name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The type of the network. Valid values: `CLASSIC`, `VPC`.
     */
    networkType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The payment type. Valid values: `PostPaid`, `PrePaid`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The name of the instance.
     */
    searchKey?: pulumi.Input<string>;
    /**
     * The status of the KVStore DBInstance. Valid values: `Changing`, `CleaningUpExpiredData`, `Creating`, `Flushing`, `HASwitching`, `Inactive`, `MajorVersionUpgrading`, `Migrating`, `NetworkModifying`, `Normal`, `Rebooting`, `SSLModifying`, `Transforming`, `ZoneMigrating`.
     */
    status?: pulumi.Input<string>;
    /**
     * Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Used to retrieve instances belong to specified VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Used to retrieve instances belong to specified `vswitch` resources.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
