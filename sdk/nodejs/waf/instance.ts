// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * WAF instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:waf/instance:Instance default waf-cn-132435
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:waf/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Specify whether big screen is supported. Valid values: ["0", "1"]. "0" for false and "1" for true.
     */
    declare public readonly bigScreen: pulumi.Output<string>;
    /**
     * Specify the number of exclusive WAF IP addresses.
     */
    declare public readonly exclusiveIpPackage: pulumi.Output<string>;
    /**
     * The extra bandwidth. Unit: Mbit/s.
     */
    declare public readonly extBandwidth: pulumi.Output<string>;
    /**
     * The number of extra domains.
     */
    declare public readonly extDomainPackage: pulumi.Output<string>;
    /**
     * Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     */
    declare public readonly logStorage: pulumi.Output<string>;
    /**
     * Log storage period. Unit: day. Valid values: [180, 360].
     */
    declare public readonly logTime: pulumi.Output<string>;
    /**
     * Type of configuration change. Valid value: Upgrade.
     */
    declare public readonly modifyType: pulumi.Output<string | undefined>;
    /**
     * Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: ["version3", "version4", "version5"].
     * * China site customers can purchase the following versions of International region, valid values: ["versionProAsia", "versionBusinessAsia", "versionEnterpriseAsia"]
     * * International site customers can purchase the following versions of China Mainland region: ["versionProChina", "versionBusinessChina", "versionEnterpriseChina"]
     * * International site customers can purchase the following versions of International region: ["versionPro", "versionBusiness", "versionEnterprise"].
     */
    declare public readonly packageCode: pulumi.Output<string>;
    /**
     * Service time of Web Application Firewall.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * Specify whether professional service is supported. Valid values: ["true", "false"]
     */
    declare public readonly prefessionalService: pulumi.Output<string>;
    /**
     * The instance region ID.
     */
    declare public readonly region: pulumi.Output<string | undefined>;
    /**
     * Renewal period of WAF service. Unit: month
     */
    declare public readonly renewPeriod: pulumi.Output<number | undefined>;
    /**
     * Renewal status of WAF service. Valid values: 
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: "On" and "Off". Default to "Off".
     */
    declare public readonly renewalStatus: pulumi.Output<string | undefined>;
    /**
     * The resource group ID.
     */
    declare public readonly resourceGroupId: pulumi.Output<string | undefined>;
    /**
     * The status of the instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<number>;
    /**
     * Subscription of WAF service. Valid values: ["Subscription", "PayAsYouGo"].
     */
    declare public readonly subscriptionType: pulumi.Output<string>;
    /**
     * Specify whether Log service is supported. Valid values: ["true", "false"]
     */
    declare public readonly wafLog: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["bigScreen"] = state?.bigScreen;
            resourceInputs["exclusiveIpPackage"] = state?.exclusiveIpPackage;
            resourceInputs["extBandwidth"] = state?.extBandwidth;
            resourceInputs["extDomainPackage"] = state?.extDomainPackage;
            resourceInputs["logStorage"] = state?.logStorage;
            resourceInputs["logTime"] = state?.logTime;
            resourceInputs["modifyType"] = state?.modifyType;
            resourceInputs["packageCode"] = state?.packageCode;
            resourceInputs["period"] = state?.period;
            resourceInputs["prefessionalService"] = state?.prefessionalService;
            resourceInputs["region"] = state?.region;
            resourceInputs["renewPeriod"] = state?.renewPeriod;
            resourceInputs["renewalStatus"] = state?.renewalStatus;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["subscriptionType"] = state?.subscriptionType;
            resourceInputs["wafLog"] = state?.wafLog;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.bigScreen === undefined && !opts.urn) {
                throw new Error("Missing required property 'bigScreen'");
            }
            if (args?.exclusiveIpPackage === undefined && !opts.urn) {
                throw new Error("Missing required property 'exclusiveIpPackage'");
            }
            if (args?.extBandwidth === undefined && !opts.urn) {
                throw new Error("Missing required property 'extBandwidth'");
            }
            if (args?.extDomainPackage === undefined && !opts.urn) {
                throw new Error("Missing required property 'extDomainPackage'");
            }
            if (args?.logStorage === undefined && !opts.urn) {
                throw new Error("Missing required property 'logStorage'");
            }
            if (args?.logTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'logTime'");
            }
            if (args?.packageCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'packageCode'");
            }
            if (args?.prefessionalService === undefined && !opts.urn) {
                throw new Error("Missing required property 'prefessionalService'");
            }
            if (args?.subscriptionType === undefined && !opts.urn) {
                throw new Error("Missing required property 'subscriptionType'");
            }
            if (args?.wafLog === undefined && !opts.urn) {
                throw new Error("Missing required property 'wafLog'");
            }
            resourceInputs["bigScreen"] = args?.bigScreen;
            resourceInputs["exclusiveIpPackage"] = args?.exclusiveIpPackage;
            resourceInputs["extBandwidth"] = args?.extBandwidth;
            resourceInputs["extDomainPackage"] = args?.extDomainPackage;
            resourceInputs["logStorage"] = args?.logStorage;
            resourceInputs["logTime"] = args?.logTime;
            resourceInputs["modifyType"] = args?.modifyType;
            resourceInputs["packageCode"] = args?.packageCode;
            resourceInputs["period"] = args?.period;
            resourceInputs["prefessionalService"] = args?.prefessionalService;
            resourceInputs["region"] = args?.region;
            resourceInputs["renewPeriod"] = args?.renewPeriod;
            resourceInputs["renewalStatus"] = args?.renewalStatus;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["subscriptionType"] = args?.subscriptionType;
            resourceInputs["wafLog"] = args?.wafLog;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Specify whether big screen is supported. Valid values: ["0", "1"]. "0" for false and "1" for true.
     */
    bigScreen?: pulumi.Input<string>;
    /**
     * Specify the number of exclusive WAF IP addresses.
     */
    exclusiveIpPackage?: pulumi.Input<string>;
    /**
     * The extra bandwidth. Unit: Mbit/s.
     */
    extBandwidth?: pulumi.Input<string>;
    /**
     * The number of extra domains.
     */
    extDomainPackage?: pulumi.Input<string>;
    /**
     * Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     */
    logStorage?: pulumi.Input<string>;
    /**
     * Log storage period. Unit: day. Valid values: [180, 360].
     */
    logTime?: pulumi.Input<string>;
    /**
     * Type of configuration change. Valid value: Upgrade.
     */
    modifyType?: pulumi.Input<string>;
    /**
     * Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: ["version3", "version4", "version5"].
     * * China site customers can purchase the following versions of International region, valid values: ["versionProAsia", "versionBusinessAsia", "versionEnterpriseAsia"]
     * * International site customers can purchase the following versions of China Mainland region: ["versionProChina", "versionBusinessChina", "versionEnterpriseChina"]
     * * International site customers can purchase the following versions of International region: ["versionPro", "versionBusiness", "versionEnterprise"].
     */
    packageCode?: pulumi.Input<string>;
    /**
     * Service time of Web Application Firewall.
     */
    period?: pulumi.Input<number>;
    /**
     * Specify whether professional service is supported. Valid values: ["true", "false"]
     */
    prefessionalService?: pulumi.Input<string>;
    /**
     * The instance region ID.
     */
    region?: pulumi.Input<string>;
    /**
     * Renewal period of WAF service. Unit: month
     */
    renewPeriod?: pulumi.Input<number>;
    /**
     * Renewal status of WAF service. Valid values: 
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: "On" and "Off". Default to "Off".
     */
    renewalStatus?: pulumi.Input<string>;
    /**
     * The resource group ID.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the instance.
     */
    status?: pulumi.Input<number>;
    /**
     * Subscription of WAF service. Valid values: ["Subscription", "PayAsYouGo"].
     */
    subscriptionType?: pulumi.Input<string>;
    /**
     * Specify whether Log service is supported. Valid values: ["true", "false"]
     */
    wafLog?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Specify whether big screen is supported. Valid values: ["0", "1"]. "0" for false and "1" for true.
     */
    bigScreen: pulumi.Input<string>;
    /**
     * Specify the number of exclusive WAF IP addresses.
     */
    exclusiveIpPackage: pulumi.Input<string>;
    /**
     * The extra bandwidth. Unit: Mbit/s.
     */
    extBandwidth: pulumi.Input<string>;
    /**
     * The number of extra domains.
     */
    extDomainPackage: pulumi.Input<string>;
    /**
     * Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     */
    logStorage: pulumi.Input<string>;
    /**
     * Log storage period. Unit: day. Valid values: [180, 360].
     */
    logTime: pulumi.Input<string>;
    /**
     * Type of configuration change. Valid value: Upgrade.
     */
    modifyType?: pulumi.Input<string>;
    /**
     * Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: ["version3", "version4", "version5"].
     * * China site customers can purchase the following versions of International region, valid values: ["versionProAsia", "versionBusinessAsia", "versionEnterpriseAsia"]
     * * International site customers can purchase the following versions of China Mainland region: ["versionProChina", "versionBusinessChina", "versionEnterpriseChina"]
     * * International site customers can purchase the following versions of International region: ["versionPro", "versionBusiness", "versionEnterprise"].
     */
    packageCode: pulumi.Input<string>;
    /**
     * Service time of Web Application Firewall.
     */
    period?: pulumi.Input<number>;
    /**
     * Specify whether professional service is supported. Valid values: ["true", "false"]
     */
    prefessionalService: pulumi.Input<string>;
    /**
     * The instance region ID.
     */
    region?: pulumi.Input<string>;
    /**
     * Renewal period of WAF service. Unit: month
     */
    renewPeriod?: pulumi.Input<number>;
    /**
     * Renewal status of WAF service. Valid values: 
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: "On" and "Off". Default to "Off".
     */
    renewalStatus?: pulumi.Input<string>;
    /**
     * The resource group ID.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Subscription of WAF service. Valid values: ["Subscription", "PayAsYouGo"].
     */
    subscriptionType: pulumi.Input<string>;
    /**
     * Specify whether Log service is supported. Valid values: ["true", "false"]
     */
    wafLog: pulumi.Input<string>;
}
