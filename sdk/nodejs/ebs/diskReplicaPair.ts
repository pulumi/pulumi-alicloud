// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Elastic Block Storage(EBS) Disk Replica Pair resource.
 *
 * For information about Elastic Block Storage(EBS) Disk Replica Pair and how to use it, see [What is Disk Replica Pair](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ebs-2021-07-30-creatediskreplicapair).
 *
 * > **NOTE:** Available since v1.196.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultGetRegions = _default.then(_default => alicloud.ebs.getRegions({
 *     regionId: _default.regions?.[0]?.id,
 * }));
 * const defaultEcsDisk = new alicloud.ecs.EcsDisk("default", {
 *     zoneId: defaultGetRegions.then(defaultGetRegions => defaultGetRegions.regions?.[0]?.zones?.[0]?.zoneId),
 *     category: "cloud_essd",
 *     deleteAutoSnapshot: true,
 *     deleteWithInstance: true,
 *     description: name,
 *     diskName: name,
 *     enableAutoSnapshot: true,
 *     encrypted: true,
 *     size: 500,
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *         controlledBy: "ear",
 *     },
 * });
 * const destination = new alicloud.ecs.EcsDisk("destination", {
 *     zoneId: defaultGetRegions.then(defaultGetRegions => defaultGetRegions.regions?.[0]?.zones?.[1]?.zoneId),
 *     category: "cloud_essd",
 *     deleteAutoSnapshot: true,
 *     deleteWithInstance: true,
 *     description: std.format({
 *         input: "%s-destination",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 *     diskName: name,
 *     enableAutoSnapshot: true,
 *     encrypted: true,
 *     size: 500,
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *         controlledBy: "ear",
 *     },
 * });
 * const defaultDiskReplicaPair = new alicloud.ebs.DiskReplicaPair("default", {
 *     destinationDiskId: destination.id,
 *     destinationRegionId: _default.then(_default => _default.regions?.[0]?.id),
 *     paymentType: "POSTPAY",
 *     destinationZoneId: destination.zoneId,
 *     sourceZoneId: defaultEcsDisk.zoneId,
 *     diskId: defaultEcsDisk.id,
 *     description: name,
 * });
 * ```
 *
 * ## Import
 *
 * Elastic Block Storage(EBS) Disk Replica Pair can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ebs/diskReplicaPair:DiskReplicaPair example <id>
 * ```
 */
export class DiskReplicaPair extends pulumi.CustomResource {
    /**
     * Get an existing DiskReplicaPair resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiskReplicaPairState, opts?: pulumi.CustomResourceOptions): DiskReplicaPair {
        return new DiskReplicaPair(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ebs/diskReplicaPair:DiskReplicaPair';

    /**
     * Returns true if the given object is an instance of DiskReplicaPair.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiskReplicaPair {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiskReplicaPair.__pulumiType;
    }

    /**
     * The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
     * - 10240 Kbps: equal to 10 Mbps.
     * - 20480 Kbps: equal to 20 Mbps.
     * - 51200 Kbps: equal to 50 Mbps.
     * - 102400 Kbps: equal to 100 Mbps.
     *
     * Default value: 10240.
     * This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
     */
    public readonly bandwidth!: pulumi.Output<number | undefined>;
    /**
     * The creation time of the resource
     */
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    /**
     * The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the standby disk.
     */
    public readonly destinationDiskId!: pulumi.Output<string>;
    /**
     * The ID of the region to which the disaster recovery site belongs.
     */
    public readonly destinationRegionId!: pulumi.Output<string>;
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     */
    public readonly destinationZoneId!: pulumi.Output<string>;
    /**
     * The ID of the primary disk.
     */
    public readonly diskId!: pulumi.Output<string>;
    /**
     * The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
     */
    public readonly diskReplicaPairName!: pulumi.Output<string>;
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     *
     * Default value: false.
     */
    public readonly oneShot!: pulumi.Output<boolean | undefined>;
    /**
     * . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
     *
     * @deprecated Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
     */
    public readonly pairName!: pulumi.Output<string>;
    /**
     * The payment type of the resource
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
     * - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
     * - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The unit of the purchase time of the asynchronous replication relationship. Value range:
     * - Week: Week.
     * - Month: Month.
     *
     * Default value: Month.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * The region ID  of the resource
     */
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     */
    public readonly reverseReplicate!: pulumi.Output<boolean | undefined>;
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     */
    public readonly rpo!: pulumi.Output<number>;
    /**
     * The ID of the zone to which the production site belongs.
     */
    public readonly sourceZoneId!: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The tag of the resource
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a DiskReplicaPair resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiskReplicaPairArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiskReplicaPairArgs | DiskReplicaPairState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiskReplicaPairState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationDiskId"] = state ? state.destinationDiskId : undefined;
            resourceInputs["destinationRegionId"] = state ? state.destinationRegionId : undefined;
            resourceInputs["destinationZoneId"] = state ? state.destinationZoneId : undefined;
            resourceInputs["diskId"] = state ? state.diskId : undefined;
            resourceInputs["diskReplicaPairName"] = state ? state.diskReplicaPairName : undefined;
            resourceInputs["oneShot"] = state ? state.oneShot : undefined;
            resourceInputs["pairName"] = state ? state.pairName : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["reverseReplicate"] = state ? state.reverseReplicate : undefined;
            resourceInputs["rpo"] = state ? state.rpo : undefined;
            resourceInputs["sourceZoneId"] = state ? state.sourceZoneId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DiskReplicaPairArgs | undefined;
            if ((!args || args.destinationDiskId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationDiskId'");
            }
            if ((!args || args.destinationRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationRegionId'");
            }
            if ((!args || args.destinationZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationZoneId'");
            }
            if ((!args || args.diskId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskId'");
            }
            if ((!args || args.sourceZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceZoneId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationDiskId"] = args ? args.destinationDiskId : undefined;
            resourceInputs["destinationRegionId"] = args ? args.destinationRegionId : undefined;
            resourceInputs["destinationZoneId"] = args ? args.destinationZoneId : undefined;
            resourceInputs["diskId"] = args ? args.diskId : undefined;
            resourceInputs["diskReplicaPairName"] = args ? args.diskReplicaPairName : undefined;
            resourceInputs["oneShot"] = args ? args.oneShot : undefined;
            resourceInputs["pairName"] = args ? args.pairName : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["reverseReplicate"] = args ? args.reverseReplicate : undefined;
            resourceInputs["rpo"] = args ? args.rpo : undefined;
            resourceInputs["sourceZoneId"] = args ? args.sourceZoneId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DiskReplicaPair.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DiskReplicaPair resources.
 */
export interface DiskReplicaPairState {
    /**
     * The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
     * - 10240 Kbps: equal to 10 Mbps.
     * - 20480 Kbps: equal to 20 Mbps.
     * - 51200 Kbps: equal to 50 Mbps.
     * - 102400 Kbps: equal to 100 Mbps.
     *
     * Default value: 10240.
     * This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<number>;
    /**
     * The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the standby disk.
     */
    destinationDiskId?: pulumi.Input<string>;
    /**
     * The ID of the region to which the disaster recovery site belongs.
     */
    destinationRegionId?: pulumi.Input<string>;
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     */
    destinationZoneId?: pulumi.Input<string>;
    /**
     * The ID of the primary disk.
     */
    diskId?: pulumi.Input<string>;
    /**
     * The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
     */
    diskReplicaPairName?: pulumi.Input<string>;
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     *
     * Default value: false.
     */
    oneShot?: pulumi.Input<boolean>;
    /**
     * . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
     *
     * @deprecated Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
     */
    pairName?: pulumi.Input<string>;
    /**
     * The payment type of the resource
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
     * - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
     * - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of the purchase time of the asynchronous replication relationship. Value range:
     * - Week: Week.
     * - Month: Month.
     *
     * Default value: Month.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The region ID  of the resource
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     */
    reverseReplicate?: pulumi.Input<boolean>;
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     */
    rpo?: pulumi.Input<number>;
    /**
     * The ID of the zone to which the production site belongs.
     */
    sourceZoneId?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DiskReplicaPair resource.
 */
export interface DiskReplicaPairArgs {
    /**
     * The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
     * - 10240 Kbps: equal to 10 Mbps.
     * - 20480 Kbps: equal to 20 Mbps.
     * - 51200 Kbps: equal to 50 Mbps.
     * - 102400 Kbps: equal to 100 Mbps.
     *
     * Default value: 10240.
     * This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the standby disk.
     */
    destinationDiskId: pulumi.Input<string>;
    /**
     * The ID of the region to which the disaster recovery site belongs.
     */
    destinationRegionId: pulumi.Input<string>;
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     */
    destinationZoneId: pulumi.Input<string>;
    /**
     * The ID of the primary disk.
     */
    diskId: pulumi.Input<string>;
    /**
     * The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
     */
    diskReplicaPairName?: pulumi.Input<string>;
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     *
     * Default value: false.
     */
    oneShot?: pulumi.Input<boolean>;
    /**
     * . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
     *
     * @deprecated Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
     */
    pairName?: pulumi.Input<string>;
    /**
     * The payment type of the resource
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
     * - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
     * - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of the purchase time of the asynchronous replication relationship. Value range:
     * - Week: Week.
     * - Month: Month.
     *
     * Default value: Month.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     */
    reverseReplicate?: pulumi.Input<boolean>;
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     */
    rpo?: pulumi.Input<number>;
    /**
     * The ID of the zone to which the production site belongs.
     */
    sourceZoneId: pulumi.Input<string>;
    /**
     * The tag of the resource
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
