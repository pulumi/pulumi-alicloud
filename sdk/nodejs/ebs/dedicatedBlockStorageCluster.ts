// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Ebs Dedicated Block Storage Cluster resource.
 *
 * For information about Ebs Dedicated Block Storage Cluster and how to use it, see [What is Dedicated Block Storage Cluster](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ebs-2021-07-30-creatededicatedblockstoragecluster).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ## Import
 *
 * Ebs Dedicated Block Storage Cluster can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ebs/dedicatedBlockStorageCluster:DedicatedBlockStorageCluster example <id>
 * ```
 */
export class DedicatedBlockStorageCluster extends pulumi.CustomResource {
    /**
     * Get an existing DedicatedBlockStorageCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DedicatedBlockStorageClusterState, opts?: pulumi.CustomResourceOptions): DedicatedBlockStorageCluster {
        return new DedicatedBlockStorageCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ebs/dedicatedBlockStorageCluster:DedicatedBlockStorageCluster';

    /**
     * Returns true if the given object is an instance of DedicatedBlockStorageCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DedicatedBlockStorageCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DedicatedBlockStorageCluster.__pulumiType;
    }

    /**
     * The available capacity of the dedicated block storage cluster. Unit: GiB.
     */
    declare public /*out*/ readonly availableCapacity: pulumi.Output<string>;
    /**
     * The type of cloud disk that can be created by a dedicated block storage cluster.
     */
    declare public /*out*/ readonly category: pulumi.Output<string>;
    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The first ID of the resource
     */
    declare public /*out*/ readonly dedicatedBlockStorageClusterId: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public readonly dedicatedBlockStorageClusterName: pulumi.Output<string>;
    /**
     * Capacity to be delivered in GB.
     */
    declare public /*out*/ readonly deliveryCapacity: pulumi.Output<string>;
    /**
     * The description of the dedicated block storage cluster.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
     */
    declare public /*out*/ readonly expiredTime: pulumi.Output<string>;
    /**
     * Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
     */
    declare public /*out*/ readonly performanceLevel: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    declare public /*out*/ readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * This parameter is not supported.
     */
    declare public /*out*/ readonly supportedCategory: pulumi.Output<string>;
    /**
     * The total capacity of the dedicated block storage cluster. Unit: GiB.
     */
    declare public readonly totalCapacity: pulumi.Output<string>;
    /**
     * The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * The used (created disk) capacity of the current cluster, in GB
     */
    declare public /*out*/ readonly usedCapacity: pulumi.Output<string>;
    /**
     * The zone ID  of the resource
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a DedicatedBlockStorageCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DedicatedBlockStorageClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DedicatedBlockStorageClusterArgs | DedicatedBlockStorageClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DedicatedBlockStorageClusterState | undefined;
            resourceInputs["availableCapacity"] = state?.availableCapacity;
            resourceInputs["category"] = state?.category;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["dedicatedBlockStorageClusterId"] = state?.dedicatedBlockStorageClusterId;
            resourceInputs["dedicatedBlockStorageClusterName"] = state?.dedicatedBlockStorageClusterName;
            resourceInputs["deliveryCapacity"] = state?.deliveryCapacity;
            resourceInputs["description"] = state?.description;
            resourceInputs["expiredTime"] = state?.expiredTime;
            resourceInputs["performanceLevel"] = state?.performanceLevel;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["supportedCategory"] = state?.supportedCategory;
            resourceInputs["totalCapacity"] = state?.totalCapacity;
            resourceInputs["type"] = state?.type;
            resourceInputs["usedCapacity"] = state?.usedCapacity;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as DedicatedBlockStorageClusterArgs | undefined;
            if (args?.dedicatedBlockStorageClusterName === undefined && !opts.urn) {
                throw new Error("Missing required property 'dedicatedBlockStorageClusterName'");
            }
            if (args?.totalCapacity === undefined && !opts.urn) {
                throw new Error("Missing required property 'totalCapacity'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["dedicatedBlockStorageClusterName"] = args?.dedicatedBlockStorageClusterName;
            resourceInputs["description"] = args?.description;
            resourceInputs["totalCapacity"] = args?.totalCapacity;
            resourceInputs["type"] = args?.type;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["availableCapacity"] = undefined /*out*/;
            resourceInputs["category"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dedicatedBlockStorageClusterId"] = undefined /*out*/;
            resourceInputs["deliveryCapacity"] = undefined /*out*/;
            resourceInputs["expiredTime"] = undefined /*out*/;
            resourceInputs["performanceLevel"] = undefined /*out*/;
            resourceInputs["resourceGroupId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["supportedCategory"] = undefined /*out*/;
            resourceInputs["usedCapacity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DedicatedBlockStorageCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DedicatedBlockStorageCluster resources.
 */
export interface DedicatedBlockStorageClusterState {
    /**
     * The available capacity of the dedicated block storage cluster. Unit: GiB.
     */
    availableCapacity?: pulumi.Input<string>;
    /**
     * The type of cloud disk that can be created by a dedicated block storage cluster.
     */
    category?: pulumi.Input<string>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * The first ID of the resource
     */
    dedicatedBlockStorageClusterId?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    dedicatedBlockStorageClusterName?: pulumi.Input<string>;
    /**
     * Capacity to be delivered in GB.
     */
    deliveryCapacity?: pulumi.Input<string>;
    /**
     * The description of the dedicated block storage cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
     */
    expiredTime?: pulumi.Input<string>;
    /**
     * Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
     */
    performanceLevel?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * This parameter is not supported.
     */
    supportedCategory?: pulumi.Input<string>;
    /**
     * The total capacity of the dedicated block storage cluster. Unit: GiB.
     */
    totalCapacity?: pulumi.Input<string>;
    /**
     * The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
     */
    type?: pulumi.Input<string>;
    /**
     * The used (created disk) capacity of the current cluster, in GB
     */
    usedCapacity?: pulumi.Input<string>;
    /**
     * The zone ID  of the resource
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DedicatedBlockStorageCluster resource.
 */
export interface DedicatedBlockStorageClusterArgs {
    /**
     * The name of the resource
     */
    dedicatedBlockStorageClusterName: pulumi.Input<string>;
    /**
     * The description of the dedicated block storage cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The total capacity of the dedicated block storage cluster. Unit: GiB.
     */
    totalCapacity: pulumi.Input<string>;
    /**
     * The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
     */
    type: pulumi.Input<string>;
    /**
     * The zone ID  of the resource
     */
    zoneId: pulumi.Input<string>;
}
