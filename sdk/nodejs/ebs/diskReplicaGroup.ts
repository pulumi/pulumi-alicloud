// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Elastic Block Storage(EBS) Disk Replica Group resource.
 *
 * consistent replica group.
 *
 * For information about Elastic Block Storage(EBS) Disk Replica Group and how to use it, see [What is Disk Replica Group](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/creatediskreplicagroup).
 *
 * > **NOTE:** Available since v1.187.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultGetRegions = _default.then(_default => alicloud.ebs.getRegions({
 *     regionId: _default.regions?.[0]?.id,
 * }));
 * const defaultDiskReplicaGroup = new alicloud.ebs.DiskReplicaGroup("default", {
 *     sourceRegionId: _default.then(_default => _default.regions?.[0]?.id),
 *     sourceZoneId: defaultGetRegions.then(defaultGetRegions => defaultGetRegions.regions?.[0]?.zones?.[0]?.zoneId),
 *     destinationRegionId: _default.then(_default => _default.regions?.[0]?.id),
 *     destinationZoneId: defaultGetRegions.then(defaultGetRegions => defaultGetRegions.regions?.[0]?.zones?.[1]?.zoneId),
 *     groupName: name,
 *     description: name,
 *     rpo: 900,
 * });
 * ```
 *
 * ## Import
 *
 * Elastic Block Storage(EBS) Disk Replica Group can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ebs/diskReplicaGroup:DiskReplicaGroup example <id>
 * ```
 */
export class DiskReplicaGroup extends pulumi.CustomResource {
    /**
     * Get an existing DiskReplicaGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiskReplicaGroupState, opts?: pulumi.CustomResourceOptions): DiskReplicaGroup {
        return new DiskReplicaGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ebs/diskReplicaGroup:DiskReplicaGroup';

    /**
     * Returns true if the given object is an instance of DiskReplicaGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiskReplicaGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiskReplicaGroup.__pulumiType;
    }

    /**
     * The description of the consistent replication group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the region to which the disaster recovery site belongs.
     */
    public readonly destinationRegionId!: pulumi.Output<string>;
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     */
    public readonly destinationZoneId!: pulumi.Output<string>;
    /**
     * Consistent replication group name.
     */
    public readonly diskReplicaGroupName!: pulumi.Output<string>;
    /**
     * . Field 'group_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_group_name' instead.
     *
     * @deprecated Field 'group_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_group_name' instead.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     *
     * Default value: false.
     */
    public readonly oneShot!: pulumi.Output<boolean | undefined>;
    /**
     * List of replication pair IDs contained in a consistent replication group.
     */
    public readonly pairIds!: pulumi.Output<string[] | undefined>;
    /**
     * resource group ID of enterprise
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     */
    public readonly reverseReplicate!: pulumi.Output<boolean | undefined>;
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     */
    public readonly rpo!: pulumi.Output<number | undefined>;
    /**
     * The ID of the region to which the production site belongs.
     */
    public readonly sourceRegionId!: pulumi.Output<string>;
    /**
     * The ID of the zone to which the production site belongs.
     */
    public readonly sourceZoneId!: pulumi.Output<string>;
    /**
     * The status of the consistent replication group. Possible values:
     * - invalid: invalid. This state indicates that there is an exception to the replication pair in the consistent replication group.
     * - creating: creating.
     * - created: created.
     * - create_failed: creation failed.
     * - manual_syncing: in a single synchronization. If it is the first single synchronization, this status is also displayed in the synchronization.
     * - syncing: synchronization. This state is the first time data is copied asynchronously between the master and slave disks.
     * - normal: normal. When data replication is completed within the current cycle of asynchronous replication, it will be in this state.
     * - stopping: stopping.
     * - stopped: stopped.
     * - stop_failed: Stop failed.
     * - Failover: failover.
     * - Failed: failover completed.
     * - failover_failed: failover failed.
     * - Reprotection: In reverse copy operation.
     * - reprotect_failed: reverse replication failed.
     * - deleting: deleting.
     * - delete_failed: delete failed.
     * - deleted: deleted.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * The tag of the resource
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a DiskReplicaGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiskReplicaGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiskReplicaGroupArgs | DiskReplicaGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiskReplicaGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationRegionId"] = state ? state.destinationRegionId : undefined;
            resourceInputs["destinationZoneId"] = state ? state.destinationZoneId : undefined;
            resourceInputs["diskReplicaGroupName"] = state ? state.diskReplicaGroupName : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["oneShot"] = state ? state.oneShot : undefined;
            resourceInputs["pairIds"] = state ? state.pairIds : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["reverseReplicate"] = state ? state.reverseReplicate : undefined;
            resourceInputs["rpo"] = state ? state.rpo : undefined;
            resourceInputs["sourceRegionId"] = state ? state.sourceRegionId : undefined;
            resourceInputs["sourceZoneId"] = state ? state.sourceZoneId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DiskReplicaGroupArgs | undefined;
            if ((!args || args.destinationRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationRegionId'");
            }
            if ((!args || args.destinationZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationZoneId'");
            }
            if ((!args || args.sourceRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRegionId'");
            }
            if ((!args || args.sourceZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceZoneId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationRegionId"] = args ? args.destinationRegionId : undefined;
            resourceInputs["destinationZoneId"] = args ? args.destinationZoneId : undefined;
            resourceInputs["diskReplicaGroupName"] = args ? args.diskReplicaGroupName : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["oneShot"] = args ? args.oneShot : undefined;
            resourceInputs["pairIds"] = args ? args.pairIds : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["reverseReplicate"] = args ? args.reverseReplicate : undefined;
            resourceInputs["rpo"] = args ? args.rpo : undefined;
            resourceInputs["sourceRegionId"] = args ? args.sourceRegionId : undefined;
            resourceInputs["sourceZoneId"] = args ? args.sourceZoneId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DiskReplicaGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DiskReplicaGroup resources.
 */
export interface DiskReplicaGroupState {
    /**
     * The description of the consistent replication group.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the region to which the disaster recovery site belongs.
     */
    destinationRegionId?: pulumi.Input<string>;
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     */
    destinationZoneId?: pulumi.Input<string>;
    /**
     * Consistent replication group name.
     */
    diskReplicaGroupName?: pulumi.Input<string>;
    /**
     * . Field 'group_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_group_name' instead.
     *
     * @deprecated Field 'group_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_group_name' instead.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     *
     * Default value: false.
     */
    oneShot?: pulumi.Input<boolean>;
    /**
     * List of replication pair IDs contained in a consistent replication group.
     */
    pairIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * resource group ID of enterprise
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     */
    reverseReplicate?: pulumi.Input<boolean>;
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     */
    rpo?: pulumi.Input<number>;
    /**
     * The ID of the region to which the production site belongs.
     */
    sourceRegionId?: pulumi.Input<string>;
    /**
     * The ID of the zone to which the production site belongs.
     */
    sourceZoneId?: pulumi.Input<string>;
    /**
     * The status of the consistent replication group. Possible values:
     * - invalid: invalid. This state indicates that there is an exception to the replication pair in the consistent replication group.
     * - creating: creating.
     * - created: created.
     * - create_failed: creation failed.
     * - manual_syncing: in a single synchronization. If it is the first single synchronization, this status is also displayed in the synchronization.
     * - syncing: synchronization. This state is the first time data is copied asynchronously between the master and slave disks.
     * - normal: normal. When data replication is completed within the current cycle of asynchronous replication, it will be in this state.
     * - stopping: stopping.
     * - stopped: stopped.
     * - stop_failed: Stop failed.
     * - Failover: failover.
     * - Failed: failover completed.
     * - failover_failed: failover failed.
     * - Reprotection: In reverse copy operation.
     * - reprotect_failed: reverse replication failed.
     * - deleting: deleting.
     * - delete_failed: delete failed.
     * - deleted: deleted.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DiskReplicaGroup resource.
 */
export interface DiskReplicaGroupArgs {
    /**
     * The description of the consistent replication group.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the region to which the disaster recovery site belongs.
     */
    destinationRegionId: pulumi.Input<string>;
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     */
    destinationZoneId: pulumi.Input<string>;
    /**
     * Consistent replication group name.
     */
    diskReplicaGroupName?: pulumi.Input<string>;
    /**
     * . Field 'group_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_group_name' instead.
     *
     * @deprecated Field 'group_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_group_name' instead.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     *
     * Default value: false.
     */
    oneShot?: pulumi.Input<boolean>;
    /**
     * List of replication pair IDs contained in a consistent replication group.
     */
    pairIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * resource group ID of enterprise
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     */
    reverseReplicate?: pulumi.Input<boolean>;
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     */
    rpo?: pulumi.Input<number>;
    /**
     * The ID of the region to which the production site belongs.
     */
    sourceRegionId: pulumi.Input<string>;
    /**
     * The ID of the zone to which the production site belongs.
     */
    sourceZoneId: pulumi.Input<string>;
    /**
     * The status of the consistent replication group. Possible values:
     * - invalid: invalid. This state indicates that there is an exception to the replication pair in the consistent replication group.
     * - creating: creating.
     * - created: created.
     * - create_failed: creation failed.
     * - manual_syncing: in a single synchronization. If it is the first single synchronization, this status is also displayed in the synchronization.
     * - syncing: synchronization. This state is the first time data is copied asynchronously between the master and slave disks.
     * - normal: normal. When data replication is completed within the current cycle of asynchronous replication, it will be in this state.
     * - stopping: stopping.
     * - stopped: stopped.
     * - stop_failed: Stop failed.
     * - Failover: failover.
     * - Failed: failover completed.
     * - failover_failed: failover failed.
     * - Reprotection: In reverse copy operation.
     * - reprotect_failed: reverse replication failed.
     * - deleting: deleting.
     * - delete_failed: delete failed.
     * - deleted: deleted.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
