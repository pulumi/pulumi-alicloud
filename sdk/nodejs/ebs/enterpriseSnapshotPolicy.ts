// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a EBS Enterprise Snapshot Policy resource. enterprise snapshot policy.
 *
 * For information about EBS Enterprise Snapshot Policy and how to use it, see [What is Enterprise Snapshot Policy](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.215.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultJkW46o = new alicloud.ecs.EcsDisk("defaultJkW46o", {
 *     category: "cloud_essd",
 *     description: "esp-attachment-test",
 *     zoneId: "cn-hangzhou-i",
 *     performanceLevel: "PL1",
 *     size: 20,
 *     diskName: name,
 * });
 * const defaultPE3jjR = new alicloud.ebs.EnterpriseSnapshotPolicy("defaultPE3jjR", {
 *     status: "DISABLED",
 *     desc: "DESC",
 *     schedule: {
 *         cronExpression: "0 0 0 1 * ?",
 *     },
 *     enterpriseSnapshotPolicyName: name,
 *     targetType: "DISK",
 *     retainRule: {
 *         timeInterval: 120,
 *         timeUnit: "DAYS",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * EBS Enterprise Snapshot Policy can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ebs/enterpriseSnapshotPolicy:EnterpriseSnapshotPolicy example <id>
 * ```
 */
export class EnterpriseSnapshotPolicy extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseSnapshotPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnterpriseSnapshotPolicyState, opts?: pulumi.CustomResourceOptions): EnterpriseSnapshotPolicy {
        return new EnterpriseSnapshotPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ebs/enterpriseSnapshotPolicy:EnterpriseSnapshotPolicy';

    /**
     * Returns true if the given object is an instance of EnterpriseSnapshotPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnterpriseSnapshotPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnterpriseSnapshotPolicy.__pulumiType;
    }

    /**
     * The creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Snapshot replication information. See `crossRegionCopyInfo` below.
     */
    public readonly crossRegionCopyInfo!: pulumi.Output<outputs.ebs.EnterpriseSnapshotPolicyCrossRegionCopyInfo>;
    /**
     * Description information representing the resource.
     */
    public readonly desc!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    public readonly enterpriseSnapshotPolicyName!: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Snapshot retention policy representing resources. See `retainRule` below.
     */
    public readonly retainRule!: pulumi.Output<outputs.ebs.EnterpriseSnapshotPolicyRetainRule>;
    /**
     * The scheduling plan that represents the resource. See `schedule` below.
     */
    public readonly schedule!: pulumi.Output<outputs.ebs.EnterpriseSnapshotPolicySchedule>;
    /**
     * Snapshot special retention rules. See `specialRetainRules` below.
     */
    public readonly specialRetainRules!: pulumi.Output<outputs.ebs.EnterpriseSnapshotPolicySpecialRetainRules>;
    /**
     * The status of the resource.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Snapshot storage policy. See `storageRule` below.
     */
    public readonly storageRule!: pulumi.Output<outputs.ebs.EnterpriseSnapshotPolicyStorageRule | undefined>;
    /**
     * The tag of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Represents the target type of resource binding.
     */
    public readonly targetType!: pulumi.Output<string>;

    /**
     * Create a EnterpriseSnapshotPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnterpriseSnapshotPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnterpriseSnapshotPolicyArgs | EnterpriseSnapshotPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnterpriseSnapshotPolicyState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["crossRegionCopyInfo"] = state ? state.crossRegionCopyInfo : undefined;
            resourceInputs["desc"] = state ? state.desc : undefined;
            resourceInputs["enterpriseSnapshotPolicyName"] = state ? state.enterpriseSnapshotPolicyName : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["retainRule"] = state ? state.retainRule : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["specialRetainRules"] = state ? state.specialRetainRules : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageRule"] = state ? state.storageRule : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
        } else {
            const args = argsOrState as EnterpriseSnapshotPolicyArgs | undefined;
            if ((!args || args.enterpriseSnapshotPolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enterpriseSnapshotPolicyName'");
            }
            if ((!args || args.retainRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retainRule'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            if ((!args || args.targetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetType'");
            }
            resourceInputs["crossRegionCopyInfo"] = args ? args.crossRegionCopyInfo : undefined;
            resourceInputs["desc"] = args ? args.desc : undefined;
            resourceInputs["enterpriseSnapshotPolicyName"] = args ? args.enterpriseSnapshotPolicyName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["retainRule"] = args ? args.retainRule : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["specialRetainRules"] = args ? args.specialRetainRules : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["storageRule"] = args ? args.storageRule : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnterpriseSnapshotPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnterpriseSnapshotPolicy resources.
 */
export interface EnterpriseSnapshotPolicyState {
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Snapshot replication information. See `crossRegionCopyInfo` below.
     */
    crossRegionCopyInfo?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicyCrossRegionCopyInfo>;
    /**
     * Description information representing the resource.
     */
    desc?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    enterpriseSnapshotPolicyName?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Snapshot retention policy representing resources. See `retainRule` below.
     */
    retainRule?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicyRetainRule>;
    /**
     * The scheduling plan that represents the resource. See `schedule` below.
     */
    schedule?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicySchedule>;
    /**
     * Snapshot special retention rules. See `specialRetainRules` below.
     */
    specialRetainRules?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicySpecialRetainRules>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * Snapshot storage policy. See `storageRule` below.
     */
    storageRule?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicyStorageRule>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Represents the target type of resource binding.
     */
    targetType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnterpriseSnapshotPolicy resource.
 */
export interface EnterpriseSnapshotPolicyArgs {
    /**
     * Snapshot replication information. See `crossRegionCopyInfo` below.
     */
    crossRegionCopyInfo?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicyCrossRegionCopyInfo>;
    /**
     * Description information representing the resource.
     */
    desc?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    enterpriseSnapshotPolicyName: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Snapshot retention policy representing resources. See `retainRule` below.
     */
    retainRule: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicyRetainRule>;
    /**
     * The scheduling plan that represents the resource. See `schedule` below.
     */
    schedule: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicySchedule>;
    /**
     * Snapshot special retention rules. See `specialRetainRules` below.
     */
    specialRetainRules?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicySpecialRetainRules>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * Snapshot storage policy. See `storageRule` below.
     */
    storageRule?: pulumi.Input<inputs.ebs.EnterpriseSnapshotPolicyStorageRule>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Represents the target type of resource binding.
     */
    targetType: pulumi.Input<string>;
}
