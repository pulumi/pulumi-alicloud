// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Private Link Vpc Endpoint Service resource.
 *
 * For information about Private Link Vpc Endpoint Service and how to use it, see [What is Vpc Endpoint Service](https://www.alibabacloud.com/help/en/privatelink/latest/api-privatelink-2020-04-15-createvpcendpointservice).
 *
 * > **NOTE:** Available since v1.109.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const example = new alicloud.privatelink.VpcEndpointService("example", {
 *     serviceDescription: name,
 *     connectBandwidth: 103,
 *     autoAcceptConnection: false,
 * });
 * ```
 *
 * ## Import
 *
 * Private Link Vpc Endpoint Service can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:privatelink/vpcEndpointService:VpcEndpointService example <id>
 * ```
 */
export class VpcEndpointService extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointServiceState, opts?: pulumi.CustomResourceOptions): VpcEndpointService {
        return new VpcEndpointService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:privatelink/vpcEndpointService:VpcEndpointService';

    /**
     * Returns true if the given object is an instance of VpcEndpointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcEndpointService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointService.__pulumiType;
    }

    /**
     * The IP address version.
     */
    declare public readonly addressIpVersion: pulumi.Output<string>;
    /**
     * Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
     */
    declare public readonly autoAcceptConnection: pulumi.Output<boolean | undefined>;
    /**
     * The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
     */
    declare public readonly connectBandwidth: pulumi.Output<number>;
    /**
     * The time when the endpoint service was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     */
    declare public readonly dryRun: pulumi.Output<boolean | undefined>;
    /**
     * The payer of the endpoint service. Valid values:
     * - `Endpoint`: the service consumer.
     * - `EndpointService`: the service provider.
     */
    declare public readonly payer: pulumi.Output<string>;
    /**
     * The ID of the region to which the endpoint service belongs.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The resource group ID.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The service state of the endpoint service.
     */
    declare public /*out*/ readonly serviceBusinessStatus: pulumi.Output<string>;
    /**
     * The description of the endpoint service.
     */
    declare public readonly serviceDescription: pulumi.Output<string | undefined>;
    /**
     * The domain name of the endpoint service.
     */
    declare public /*out*/ readonly serviceDomain: pulumi.Output<string>;
    /**
     * The service resource type. Value:
     */
    declare public readonly serviceResourceType: pulumi.Output<string>;
    /**
     * Specifies whether to enable IPv6 for the endpoint service. Valid values:
     */
    declare public readonly serviceSupportIpv6: pulumi.Output<boolean>;
    /**
     * The state of the endpoint service.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The list of tags.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the endpoint service.
     */
    declare public /*out*/ readonly vpcEndpointServiceName: pulumi.Output<string>;
    /**
     * Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
     */
    declare public readonly zoneAffinityEnabled: pulumi.Output<boolean>;

    /**
     * Create a VpcEndpointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcEndpointServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcEndpointServiceArgs | VpcEndpointServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcEndpointServiceState | undefined;
            resourceInputs["addressIpVersion"] = state?.addressIpVersion;
            resourceInputs["autoAcceptConnection"] = state?.autoAcceptConnection;
            resourceInputs["connectBandwidth"] = state?.connectBandwidth;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["dryRun"] = state?.dryRun;
            resourceInputs["payer"] = state?.payer;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["serviceBusinessStatus"] = state?.serviceBusinessStatus;
            resourceInputs["serviceDescription"] = state?.serviceDescription;
            resourceInputs["serviceDomain"] = state?.serviceDomain;
            resourceInputs["serviceResourceType"] = state?.serviceResourceType;
            resourceInputs["serviceSupportIpv6"] = state?.serviceSupportIpv6;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vpcEndpointServiceName"] = state?.vpcEndpointServiceName;
            resourceInputs["zoneAffinityEnabled"] = state?.zoneAffinityEnabled;
        } else {
            const args = argsOrState as VpcEndpointServiceArgs | undefined;
            resourceInputs["addressIpVersion"] = args?.addressIpVersion;
            resourceInputs["autoAcceptConnection"] = args?.autoAcceptConnection;
            resourceInputs["connectBandwidth"] = args?.connectBandwidth;
            resourceInputs["dryRun"] = args?.dryRun;
            resourceInputs["payer"] = args?.payer;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["serviceDescription"] = args?.serviceDescription;
            resourceInputs["serviceResourceType"] = args?.serviceResourceType;
            resourceInputs["serviceSupportIpv6"] = args?.serviceSupportIpv6;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["zoneAffinityEnabled"] = args?.zoneAffinityEnabled;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["serviceBusinessStatus"] = undefined /*out*/;
            resourceInputs["serviceDomain"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcEndpointServiceName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcEndpointService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcEndpointService resources.
 */
export interface VpcEndpointServiceState {
    /**
     * The IP address version.
     */
    addressIpVersion?: pulumi.Input<string>;
    /**
     * Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
     */
    autoAcceptConnection?: pulumi.Input<boolean>;
    /**
     * The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
     */
    connectBandwidth?: pulumi.Input<number>;
    /**
     * The time when the endpoint service was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The payer of the endpoint service. Valid values:
     * - `Endpoint`: the service consumer.
     * - `EndpointService`: the service provider.
     */
    payer?: pulumi.Input<string>;
    /**
     * The ID of the region to which the endpoint service belongs.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The resource group ID.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The service state of the endpoint service.
     */
    serviceBusinessStatus?: pulumi.Input<string>;
    /**
     * The description of the endpoint service.
     */
    serviceDescription?: pulumi.Input<string>;
    /**
     * The domain name of the endpoint service.
     */
    serviceDomain?: pulumi.Input<string>;
    /**
     * The service resource type. Value:
     */
    serviceResourceType?: pulumi.Input<string>;
    /**
     * Specifies whether to enable IPv6 for the endpoint service. Valid values:
     */
    serviceSupportIpv6?: pulumi.Input<boolean>;
    /**
     * The state of the endpoint service.
     */
    status?: pulumi.Input<string>;
    /**
     * The list of tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the endpoint service.
     */
    vpcEndpointServiceName?: pulumi.Input<string>;
    /**
     * Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
     */
    zoneAffinityEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a VpcEndpointService resource.
 */
export interface VpcEndpointServiceArgs {
    /**
     * The IP address version.
     */
    addressIpVersion?: pulumi.Input<string>;
    /**
     * Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
     */
    autoAcceptConnection?: pulumi.Input<boolean>;
    /**
     * The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
     */
    connectBandwidth?: pulumi.Input<number>;
    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The payer of the endpoint service. Valid values:
     * - `Endpoint`: the service consumer.
     * - `EndpointService`: the service provider.
     */
    payer?: pulumi.Input<string>;
    /**
     * The resource group ID.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The description of the endpoint service.
     */
    serviceDescription?: pulumi.Input<string>;
    /**
     * The service resource type. Value:
     */
    serviceResourceType?: pulumi.Input<string>;
    /**
     * Specifies whether to enable IPv6 for the endpoint service. Valid values:
     */
    serviceSupportIpv6?: pulumi.Input<boolean>;
    /**
     * The list of tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
     */
    zoneAffinityEnabled?: pulumi.Input<boolean>;
}
