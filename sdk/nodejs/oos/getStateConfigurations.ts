// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Oos State Configurations of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.147.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.oos.getStateConfigurations({});
 * export const oosStateConfigurationId1 = ids.then(ids => ids.configurations?[0]?.id);
 * ```
 */
export function getStateConfigurations(args?: GetStateConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetStateConfigurationsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:oos/getStateConfigurations:getStateConfigurations", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getStateConfigurations.
 */
export interface GetStateConfigurationsArgs {
    /**
     * A list of State Configuration IDs.
     */
    ids?: string[];
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The tag of the resource.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getStateConfigurations.
 */
export interface GetStateConfigurationsResult {
    readonly configurations: outputs.oos.GetStateConfigurationsConfiguration[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly resourceGroupId?: string;
    readonly tags?: {[key: string]: any};
}

export function getStateConfigurationsOutput(args?: GetStateConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStateConfigurationsResult> {
    return pulumi.output(args).apply(a => getStateConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getStateConfigurations.
 */
export interface GetStateConfigurationsOutputArgs {
    /**
     * A list of State Configuration IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
