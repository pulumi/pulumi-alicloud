// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a OOS Execution resource. For information about Alicloud OOS Execution and how to use it, see [What is Resource Alicloud OOS Execution](https://www.alibabacloud.com/help/doc-detail/120771.htm).
 *
 * > **NOTE:** Available since v1.93.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const _default = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultTemplate = new alicloud.oos.Template("default", {
 *     content: `  {
 *     "FormatVersion": "OOS-2019-06-01",
 *     "Description": "Update Describe instances of given status",
 *     "Parameters":{
 *       "Status":{
 *         "Type": "String",
 *         "Description": "(Required) The status of the Ecs instance."
 *       }
 *     },
 *     "Tasks": [
 *       {
 *         "Properties" :{
 *           "Parameters":{
 *             "Status": "{{ Status }}"
 *           },
 *           "API": "DescribeInstances",
 *           "Service": "Ecs"
 *         },
 *         "Name": "foo",
 *         "Action": "ACS::ExecuteApi"
 *       }]
 *   }
 * `,
 *     templateName: `tf-example-name-${_default.result}`,
 *     versionName: "example",
 *     tags: {
 *         Created: "TF",
 *         For: "acceptance Test",
 *     },
 * });
 * const example = new alicloud.oos.Execution("example", {
 *     templateName: defaultTemplate.templateName,
 *     description: "From TF Test",
 *     parameters: "\x09\x09\x09\x09{\"Status\":\"Running\"}\n",
 * });
 * ```
 *
 * ## Import
 *
 * OOS Execution can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:oos/execution:Execution example exec-ef6xxxx
 * ```
 */
export class Execution extends pulumi.CustomResource {
    /**
     * Get an existing Execution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExecutionState, opts?: pulumi.CustomResourceOptions): Execution {
        return new Execution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:oos/execution:Execution';

    /**
     * Returns true if the given object is an instance of Execution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Execution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Execution.__pulumiType;
    }

    /**
     * The counters of OOS Execution.
     */
    declare public /*out*/ readonly counters: pulumi.Output<string>;
    /**
     * The time when the execution was created.
     */
    declare public /*out*/ readonly createDate: pulumi.Output<string>;
    /**
     * The description of OOS Execution.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The time when the execution was ended.
     */
    declare public /*out*/ readonly endDate: pulumi.Output<string>;
    /**
     * The user who execute the template.
     */
    declare public /*out*/ readonly executedBy: pulumi.Output<string>;
    /**
     * Whether to include subtasks.
     */
    declare public /*out*/ readonly isParent: pulumi.Output<boolean>;
    /**
     * The loop mode of OOS Execution.
     */
    declare public readonly loopMode: pulumi.Output<string | undefined>;
    /**
     * The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
     */
    declare public readonly mode: pulumi.Output<string | undefined>;
    /**
     * The outputs of OOS Execution.
     */
    declare public /*out*/ readonly outputs: pulumi.Output<string>;
    /**
     * The parameters required by the template. Default to `{}`.
     */
    declare public readonly parameters: pulumi.Output<string | undefined>;
    /**
     * The id of parent execution.
     */
    declare public readonly parentExecutionId: pulumi.Output<string | undefined>;
    /**
     * The role that executes the current template.
     */
    declare public /*out*/ readonly ramRole: pulumi.Output<string>;
    /**
     * The mode of safety check.
     */
    declare public readonly safetyCheck: pulumi.Output<string | undefined>;
    /**
     * The time when the execution was started.
     */
    declare public /*out*/ readonly startDate: pulumi.Output<string>;
    /**
     * The status of OOS Execution.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The message of status.
     */
    declare public /*out*/ readonly statusMessage: pulumi.Output<string>;
    /**
     * The content of template. When the user selects an existing template to create and execute a task, it is not necessary to pass in this field.
     */
    declare public readonly templateContent: pulumi.Output<string | undefined>;
    /**
     * The id of template.
     */
    declare public /*out*/ readonly templateId: pulumi.Output<string>;
    /**
     * The name of execution template.
     */
    declare public readonly templateName: pulumi.Output<string>;
    /**
     * The version of execution template.
     */
    declare public readonly templateVersion: pulumi.Output<string>;
    /**
     * The time when the execution was updated.
     */
    declare public /*out*/ readonly updateDate: pulumi.Output<string>;

    /**
     * Create a Execution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExecutionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExecutionArgs | ExecutionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExecutionState | undefined;
            resourceInputs["counters"] = state?.counters;
            resourceInputs["createDate"] = state?.createDate;
            resourceInputs["description"] = state?.description;
            resourceInputs["endDate"] = state?.endDate;
            resourceInputs["executedBy"] = state?.executedBy;
            resourceInputs["isParent"] = state?.isParent;
            resourceInputs["loopMode"] = state?.loopMode;
            resourceInputs["mode"] = state?.mode;
            resourceInputs["outputs"] = state?.outputs;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["parentExecutionId"] = state?.parentExecutionId;
            resourceInputs["ramRole"] = state?.ramRole;
            resourceInputs["safetyCheck"] = state?.safetyCheck;
            resourceInputs["startDate"] = state?.startDate;
            resourceInputs["status"] = state?.status;
            resourceInputs["statusMessage"] = state?.statusMessage;
            resourceInputs["templateContent"] = state?.templateContent;
            resourceInputs["templateId"] = state?.templateId;
            resourceInputs["templateName"] = state?.templateName;
            resourceInputs["templateVersion"] = state?.templateVersion;
            resourceInputs["updateDate"] = state?.updateDate;
        } else {
            const args = argsOrState as ExecutionArgs | undefined;
            if (args?.templateName === undefined && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["loopMode"] = args?.loopMode;
            resourceInputs["mode"] = args?.mode;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["parentExecutionId"] = args?.parentExecutionId;
            resourceInputs["safetyCheck"] = args?.safetyCheck;
            resourceInputs["templateContent"] = args?.templateContent;
            resourceInputs["templateName"] = args?.templateName;
            resourceInputs["templateVersion"] = args?.templateVersion;
            resourceInputs["counters"] = undefined /*out*/;
            resourceInputs["createDate"] = undefined /*out*/;
            resourceInputs["endDate"] = undefined /*out*/;
            resourceInputs["executedBy"] = undefined /*out*/;
            resourceInputs["isParent"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["ramRole"] = undefined /*out*/;
            resourceInputs["startDate"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
            resourceInputs["templateId"] = undefined /*out*/;
            resourceInputs["updateDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Execution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Execution resources.
 */
export interface ExecutionState {
    /**
     * The counters of OOS Execution.
     */
    counters?: pulumi.Input<string>;
    /**
     * The time when the execution was created.
     */
    createDate?: pulumi.Input<string>;
    /**
     * The description of OOS Execution.
     */
    description?: pulumi.Input<string>;
    /**
     * The time when the execution was ended.
     */
    endDate?: pulumi.Input<string>;
    /**
     * The user who execute the template.
     */
    executedBy?: pulumi.Input<string>;
    /**
     * Whether to include subtasks.
     */
    isParent?: pulumi.Input<boolean>;
    /**
     * The loop mode of OOS Execution.
     */
    loopMode?: pulumi.Input<string>;
    /**
     * The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
     */
    mode?: pulumi.Input<string>;
    /**
     * The outputs of OOS Execution.
     */
    outputs?: pulumi.Input<string>;
    /**
     * The parameters required by the template. Default to `{}`.
     */
    parameters?: pulumi.Input<string>;
    /**
     * The id of parent execution.
     */
    parentExecutionId?: pulumi.Input<string>;
    /**
     * The role that executes the current template.
     */
    ramRole?: pulumi.Input<string>;
    /**
     * The mode of safety check.
     */
    safetyCheck?: pulumi.Input<string>;
    /**
     * The time when the execution was started.
     */
    startDate?: pulumi.Input<string>;
    /**
     * The status of OOS Execution.
     */
    status?: pulumi.Input<string>;
    /**
     * The message of status.
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * The content of template. When the user selects an existing template to create and execute a task, it is not necessary to pass in this field.
     */
    templateContent?: pulumi.Input<string>;
    /**
     * The id of template.
     */
    templateId?: pulumi.Input<string>;
    /**
     * The name of execution template.
     */
    templateName?: pulumi.Input<string>;
    /**
     * The version of execution template.
     */
    templateVersion?: pulumi.Input<string>;
    /**
     * The time when the execution was updated.
     */
    updateDate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Execution resource.
 */
export interface ExecutionArgs {
    /**
     * The description of OOS Execution.
     */
    description?: pulumi.Input<string>;
    /**
     * The loop mode of OOS Execution.
     */
    loopMode?: pulumi.Input<string>;
    /**
     * The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
     */
    mode?: pulumi.Input<string>;
    /**
     * The parameters required by the template. Default to `{}`.
     */
    parameters?: pulumi.Input<string>;
    /**
     * The id of parent execution.
     */
    parentExecutionId?: pulumi.Input<string>;
    /**
     * The mode of safety check.
     */
    safetyCheck?: pulumi.Input<string>;
    /**
     * The content of template. When the user selects an existing template to create and execute a task, it is not necessary to pass in this field.
     */
    templateContent?: pulumi.Input<string>;
    /**
     * The name of execution template.
     */
    templateName: pulumi.Input<string>;
    /**
     * The version of execution template.
     */
    templateVersion?: pulumi.Input<string>;
}
