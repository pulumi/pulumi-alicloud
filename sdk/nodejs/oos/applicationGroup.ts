// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a OOS Application Group resource.
 *
 * For information about OOS Application Group and how to use it, see [What is Application Group](https://www.alibabacloud.com/help/en/doc-detail/120556.html).
 *
 * > **NOTE:** Available in v1.146.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultResourceGroups = alicloud.resourcemanager.getResourceGroups({});
 * const defaultApplication = new alicloud.oos.Application("defaultApplication", {
 *     resourceGroupId: defaultResourceGroups.then(defaultResourceGroups => defaultResourceGroups.groups?[0]?.id),
 *     applicationName: "example_value",
 *     description: "example_value",
 *     tags: {
 *         Created: "TF",
 *     },
 * });
 * const defaultApplicationGroup = new alicloud.oos.ApplicationGroup("defaultApplicationGroup", {
 *     applicationGroupName: _var.name,
 *     applicationName: defaultApplication.id,
 *     deployRegionId: "example_value",
 *     description: "example_value",
 *     importTagKey: "example_value",
 *     importTagValue: "example_value",
 * });
 * ```
 *
 * ## Import
 *
 * OOS Application Group can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:oos/applicationGroup:ApplicationGroup example <application_name>:<application_group_name>
 * ```
 */
export class ApplicationGroup extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationGroupState, opts?: pulumi.CustomResourceOptions): ApplicationGroup {
        return new ApplicationGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:oos/applicationGroup:ApplicationGroup';

    /**
     * Returns true if the given object is an instance of ApplicationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationGroup.__pulumiType;
    }

    /**
     * The name of the Application group.
     */
    public readonly applicationGroupName!: pulumi.Output<string>;
    /**
     * The name of the Application.
     */
    public readonly applicationName!: pulumi.Output<string>;
    /**
     * The region ID of the deployment.
     */
    public readonly deployRegionId!: pulumi.Output<string>;
    /**
     * Application group description information.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The tag key must be passed in at the same time as the tag value (import_tag_value) or none, not just one. If both `importTagKey` and `importTagValue` are left empty, the default is app-{ApplicationName} (application name).
     */
    public readonly importTagKey!: pulumi.Output<string>;
    /**
     * The tag value must be passed in at the same time as the tag key (import_tag_key) or none, not just one. If both `importTagKey` and `importTagValue` are left empty, the default is application group name.
     * .
     */
    public readonly importTagValue!: pulumi.Output<string>;

    /**
     * Create a ApplicationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationGroupArgs | ApplicationGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationGroupState | undefined;
            resourceInputs["applicationGroupName"] = state ? state.applicationGroupName : undefined;
            resourceInputs["applicationName"] = state ? state.applicationName : undefined;
            resourceInputs["deployRegionId"] = state ? state.deployRegionId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["importTagKey"] = state ? state.importTagKey : undefined;
            resourceInputs["importTagValue"] = state ? state.importTagValue : undefined;
        } else {
            const args = argsOrState as ApplicationGroupArgs | undefined;
            if ((!args || args.applicationGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationGroupName'");
            }
            if ((!args || args.applicationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationName'");
            }
            if ((!args || args.deployRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployRegionId'");
            }
            resourceInputs["applicationGroupName"] = args ? args.applicationGroupName : undefined;
            resourceInputs["applicationName"] = args ? args.applicationName : undefined;
            resourceInputs["deployRegionId"] = args ? args.deployRegionId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["importTagKey"] = args ? args.importTagKey : undefined;
            resourceInputs["importTagValue"] = args ? args.importTagValue : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationGroup resources.
 */
export interface ApplicationGroupState {
    /**
     * The name of the Application group.
     */
    applicationGroupName?: pulumi.Input<string>;
    /**
     * The name of the Application.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * The region ID of the deployment.
     */
    deployRegionId?: pulumi.Input<string>;
    /**
     * Application group description information.
     */
    description?: pulumi.Input<string>;
    /**
     * The tag key must be passed in at the same time as the tag value (import_tag_value) or none, not just one. If both `importTagKey` and `importTagValue` are left empty, the default is app-{ApplicationName} (application name).
     */
    importTagKey?: pulumi.Input<string>;
    /**
     * The tag value must be passed in at the same time as the tag key (import_tag_key) or none, not just one. If both `importTagKey` and `importTagValue` are left empty, the default is application group name.
     * .
     */
    importTagValue?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationGroup resource.
 */
export interface ApplicationGroupArgs {
    /**
     * The name of the Application group.
     */
    applicationGroupName: pulumi.Input<string>;
    /**
     * The name of the Application.
     */
    applicationName: pulumi.Input<string>;
    /**
     * The region ID of the deployment.
     */
    deployRegionId: pulumi.Input<string>;
    /**
     * Application group description information.
     */
    description?: pulumi.Input<string>;
    /**
     * The tag key must be passed in at the same time as the tag value (import_tag_value) or none, not just one. If both `importTagKey` and `importTagValue` are left empty, the default is app-{ApplicationName} (application name).
     */
    importTagKey?: pulumi.Input<string>;
    /**
     * The tag value must be passed in at the same time as the tag key (import_tag_key) or none, not just one. If both `importTagKey` and `importTagValue` are left empty, the default is application group name.
     * .
     */
    importTagValue?: pulumi.Input<string>;
}
