// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FaceConfigArgs, FaceConfigState } from "./faceConfig";
export type FaceConfig = import("./faceConfig").FaceConfig;
export const FaceConfig: typeof import("./faceConfig").FaceConfig = null as any;
utilities.lazyLoad(exports, ["FaceConfig"], () => require("./faceConfig"));

export { GetFaceConfigsArgs, GetFaceConfigsResult, GetFaceConfigsOutputArgs } from "./getFaceConfigs";
export const getFaceConfigs: typeof import("./getFaceConfigs").getFaceConfigs = null as any;
export const getFaceConfigsOutput: typeof import("./getFaceConfigs").getFaceConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getFaceConfigs","getFaceConfigsOutput"], () => require("./getFaceConfigs"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:cloudauth/faceConfig:FaceConfig":
                return new FaceConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "cloudauth/faceConfig", _module)
