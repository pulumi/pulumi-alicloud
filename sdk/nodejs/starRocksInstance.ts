// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Star Rocks Instance resource.
 *
 * StarRocks resource instance.
 *
 * For information about Star Rocks Instance and how to use it, see [What is Instance](https://next.api.alibabacloud.com/document/starrocks/2022-10-19/CreateInstanceV1).
 *
 * > **NOTE:** Available since v1.256.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultB21JUD = new alicloud.vpc.Network("defaultB21JUD", {cidrBlock: "172.16.0.0/12"});
 * const default106DkE = new alicloud.vpc.Switch("default106DkE", {
 *     vpcId: defaultB21JUD.id,
 *     cidrBlock: "172.16.1.0/24",
 *     vswitchName: "sr-example",
 *     zoneId: "cn-hangzhou-i",
 * });
 * const defaultStarRocksInstance = new alicloud.StarRocksInstance("default", {
 *     instanceName: "create-instance-1",
 *     autoRenew: false,
 *     frontendNodeGroups: [{
 *         cu: 8,
 *         storageSize: 100,
 *         residentNodeNumber: 3,
 *         storagePerformanceLevel: "pl1",
 *         specType: "standard",
 *         diskNumber: 1,
 *         zoneId: "cn-hangzhou-i",
 *         localStorageInstanceType: "null",
 *     }],
 *     vswitches: [{
 *         vswitchId: default106DkE.id,
 *         zoneId: "cn-hangzhou-i",
 *     }],
 *     backendNodeGroups: [{
 *         cu: 8,
 *         storageSize: 100,
 *         residentNodeNumber: 3,
 *         diskNumber: 1,
 *         storagePerformanceLevel: "pl1",
 *         specType: "standard",
 *         zoneId: "cn-hangzhou-i",
 *         localStorageInstanceType: "null",
 *     }],
 *     clusterZoneId: "cn-hangzhou-i",
 *     duration: 1,
 *     payType: "postPaid",
 *     vpcId: defaultB21JUD.id,
 *     version: "3.3",
 *     runMode: "shared_data",
 *     packageType: "official",
 *     adminPassword: "1qaz@QAZ",
 *     ossAccessingRoleName: "AliyunEMRStarRocksAccessingOSSRole",
 *     pricingCycle: "Month",
 *     kmsKeyId: "123",
 *     promotionOptionNo: "123",
 *     encrypted: false,
 *     observerNodeGroups: [{
 *         cu: 8,
 *         storageSize: 100,
 *         storagePerformanceLevel: "pl1",
 *         diskNumber: 1,
 *         residentNodeNumber: 1,
 *         specType: "standard",
 *         localStorageInstanceType: "null",
 *         zoneId: "cn-hangzhou-h",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Star Rocks Instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:index/starRocksInstance:StarRocksInstance example <id>
 * ```
 */
export class StarRocksInstance extends pulumi.CustomResource {
    /**
     * Get an existing StarRocksInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StarRocksInstanceState, opts?: pulumi.CustomResourceOptions): StarRocksInstance {
        return new StarRocksInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/starRocksInstance:StarRocksInstance';

    /**
     * Returns true if the given object is an instance of StarRocksInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StarRocksInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StarRocksInstance.__pulumiType;
    }

    /**
     * Password of admin user.
     */
    public readonly adminPassword!: pulumi.Output<string>;
    /**
     * Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
     */
    public readonly autoRenew!: pulumi.Output<boolean | undefined>;
    /**
     * BackendNodeGroups See `backendNodeGroups` below.
     */
    public readonly backendNodeGroups!: pulumi.Output<outputs.StarRocksInstanceBackendNodeGroup[] | undefined>;
    /**
     * ZoneId of instance.
     */
    public readonly clusterZoneId!: pulumi.Output<string>;
    /**
     * The creation time of the instance.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Duration of purchase. It is only meaningful when payType is set to PrePaid.
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * Whether encrypted
     */
    public readonly encrypted!: pulumi.Output<boolean | undefined>;
    /**
     * FrontendNodeGroups See `frontendNodeGroups` below.
     */
    public readonly frontendNodeGroups!: pulumi.Output<outputs.StarRocksInstanceFrontendNodeGroup[] | undefined>;
    /**
     * The name of the instance.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * KmsKeyId
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * ObserverNodeGroups See `observerNodeGroups` below.
     */
    public readonly observerNodeGroups!: pulumi.Output<outputs.StarRocksInstanceObserverNodeGroup[] | undefined>;
    /**
     * Role name used for password-free access to OSS.
     */
    public readonly ossAccessingRoleName!: pulumi.Output<string | undefined>;
    /**
     * The package type of the instance:
     * - trial
     * - official
     */
    public readonly packageType!: pulumi.Output<string>;
    /**
     * The pay type of the instance:
     * - prePaid
     * - postPaid
     */
    public readonly payType!: pulumi.Output<string>;
    /**
     * The duration unit for purchasing:
     * - Month
     * - Year
     * This is only meaningful when PayType is set to PrePaid.
     */
    public readonly pricingCycle!: pulumi.Output<string | undefined>;
    /**
     * Promotion
     */
    public readonly promotionOptionNo!: pulumi.Output<string | undefined>;
    /**
     * The region ID of the instance.
     */
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    /**
     * ResourceGroupId
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The run mode of the instance:
     * - sharedNothing
     * - sharedData
     * - lakehouse
     */
    public readonly runMode!: pulumi.Output<string>;
    /**
     * The status of the instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tag list of the instance.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The version of the instance.
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * The VPC ID of the instance.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The VSwitches info of the instance. See `vswitches` below.
     */
    public readonly vswitches!: pulumi.Output<outputs.StarRocksInstanceVswitch[] | undefined>;

    /**
     * Create a StarRocksInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StarRocksInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StarRocksInstanceArgs | StarRocksInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StarRocksInstanceState | undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["backendNodeGroups"] = state ? state.backendNodeGroups : undefined;
            resourceInputs["clusterZoneId"] = state ? state.clusterZoneId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["encrypted"] = state ? state.encrypted : undefined;
            resourceInputs["frontendNodeGroups"] = state ? state.frontendNodeGroups : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["observerNodeGroups"] = state ? state.observerNodeGroups : undefined;
            resourceInputs["ossAccessingRoleName"] = state ? state.ossAccessingRoleName : undefined;
            resourceInputs["packageType"] = state ? state.packageType : undefined;
            resourceInputs["payType"] = state ? state.payType : undefined;
            resourceInputs["pricingCycle"] = state ? state.pricingCycle : undefined;
            resourceInputs["promotionOptionNo"] = state ? state.promotionOptionNo : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["runMode"] = state ? state.runMode : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitches"] = state ? state.vswitches : undefined;
        } else {
            const args = argsOrState as StarRocksInstanceArgs | undefined;
            if ((!args || args.adminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminPassword'");
            }
            if ((!args || args.clusterZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterZoneId'");
            }
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.packageType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageType'");
            }
            if ((!args || args.payType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'payType'");
            }
            if ((!args || args.runMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runMode'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["adminPassword"] = args ? args.adminPassword : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["backendNodeGroups"] = args ? args.backendNodeGroups : undefined;
            resourceInputs["clusterZoneId"] = args ? args.clusterZoneId : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["encrypted"] = args ? args.encrypted : undefined;
            resourceInputs["frontendNodeGroups"] = args ? args.frontendNodeGroups : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["observerNodeGroups"] = args ? args.observerNodeGroups : undefined;
            resourceInputs["ossAccessingRoleName"] = args ? args.ossAccessingRoleName : undefined;
            resourceInputs["packageType"] = args ? args.packageType : undefined;
            resourceInputs["payType"] = args ? args.payType : undefined;
            resourceInputs["pricingCycle"] = args ? args.pricingCycle : undefined;
            resourceInputs["promotionOptionNo"] = args ? args.promotionOptionNo : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["runMode"] = args ? args.runMode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitches"] = args ? args.vswitches : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StarRocksInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StarRocksInstance resources.
 */
export interface StarRocksInstanceState {
    /**
     * Password of admin user.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * BackendNodeGroups See `backendNodeGroups` below.
     */
    backendNodeGroups?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceBackendNodeGroup>[]>;
    /**
     * ZoneId of instance.
     */
    clusterZoneId?: pulumi.Input<string>;
    /**
     * The creation time of the instance.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Duration of purchase. It is only meaningful when payType is set to PrePaid.
     */
    duration?: pulumi.Input<number>;
    /**
     * Whether encrypted
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * FrontendNodeGroups See `frontendNodeGroups` below.
     */
    frontendNodeGroups?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceFrontendNodeGroup>[]>;
    /**
     * The name of the instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * KmsKeyId
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * ObserverNodeGroups See `observerNodeGroups` below.
     */
    observerNodeGroups?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceObserverNodeGroup>[]>;
    /**
     * Role name used for password-free access to OSS.
     */
    ossAccessingRoleName?: pulumi.Input<string>;
    /**
     * The package type of the instance:
     * - trial
     * - official
     */
    packageType?: pulumi.Input<string>;
    /**
     * The pay type of the instance:
     * - prePaid
     * - postPaid
     */
    payType?: pulumi.Input<string>;
    /**
     * The duration unit for purchasing:
     * - Month
     * - Year
     * This is only meaningful when PayType is set to PrePaid.
     */
    pricingCycle?: pulumi.Input<string>;
    /**
     * Promotion
     */
    promotionOptionNo?: pulumi.Input<string>;
    /**
     * The region ID of the instance.
     */
    regionId?: pulumi.Input<string>;
    /**
     * ResourceGroupId
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The run mode of the instance:
     * - sharedNothing
     * - sharedData
     * - lakehouse
     */
    runMode?: pulumi.Input<string>;
    /**
     * The status of the instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Tag list of the instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The version of the instance.
     */
    version?: pulumi.Input<string>;
    /**
     * The VPC ID of the instance.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The VSwitches info of the instance. See `vswitches` below.
     */
    vswitches?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceVswitch>[]>;
}

/**
 * The set of arguments for constructing a StarRocksInstance resource.
 */
export interface StarRocksInstanceArgs {
    /**
     * Password of admin user.
     */
    adminPassword: pulumi.Input<string>;
    /**
     * Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * BackendNodeGroups See `backendNodeGroups` below.
     */
    backendNodeGroups?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceBackendNodeGroup>[]>;
    /**
     * ZoneId of instance.
     */
    clusterZoneId: pulumi.Input<string>;
    /**
     * Duration of purchase. It is only meaningful when payType is set to PrePaid.
     */
    duration?: pulumi.Input<number>;
    /**
     * Whether encrypted
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * FrontendNodeGroups See `frontendNodeGroups` below.
     */
    frontendNodeGroups?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceFrontendNodeGroup>[]>;
    /**
     * The name of the instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * KmsKeyId
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * ObserverNodeGroups See `observerNodeGroups` below.
     */
    observerNodeGroups?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceObserverNodeGroup>[]>;
    /**
     * Role name used for password-free access to OSS.
     */
    ossAccessingRoleName?: pulumi.Input<string>;
    /**
     * The package type of the instance:
     * - trial
     * - official
     */
    packageType: pulumi.Input<string>;
    /**
     * The pay type of the instance:
     * - prePaid
     * - postPaid
     */
    payType: pulumi.Input<string>;
    /**
     * The duration unit for purchasing:
     * - Month
     * - Year
     * This is only meaningful when PayType is set to PrePaid.
     */
    pricingCycle?: pulumi.Input<string>;
    /**
     * Promotion
     */
    promotionOptionNo?: pulumi.Input<string>;
    /**
     * ResourceGroupId
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The run mode of the instance:
     * - sharedNothing
     * - sharedData
     * - lakehouse
     */
    runMode: pulumi.Input<string>;
    /**
     * Tag list of the instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The version of the instance.
     */
    version: pulumi.Input<string>;
    /**
     * The VPC ID of the instance.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The VSwitches info of the instance. See `vswitches` below.
     */
    vswitches?: pulumi.Input<pulumi.Input<inputs.StarRocksInstanceVswitch>[]>;
}
