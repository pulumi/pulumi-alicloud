// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a PAI Workspace Model Version resource.
 *
 * For information about PAI Workspace Model Version and how to use it, see [What is Model Version](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateModelVersion).
 *
 * > **NOTE:** Available since v1.248.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const _default = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultDI9fsL = new alicloud.pai.WorkspaceWorkspace("defaultDI9fsL", {
 *     description: "802",
 *     displayName: name,
 *     workspaceName: `${name}_${_default.result}`,
 *     envTypes: ["prod"],
 * });
 * const defaultsHptEL = new alicloud.pai.WorkspaceModel("defaultsHptEL", {
 *     modelName: name,
 *     workspaceId: defaultDI9fsL.id,
 *     origin: "Civitai",
 *     task: "text-to-image-synthesis",
 *     accessibility: "PRIVATE",
 *     modelType: "Checkpoint",
 *     orderNumber: 1,
 *     modelDescription: "ModelDescription.",
 *     modelDoc: "https://eas-***.oss-cn-hangzhou.aliyuncs.com/s**.safetensors",
 *     domain: "aigc",
 *     labels: [{
 *         key: "base_model",
 *         value: "SD 1.5",
 *     }],
 *     extraInfo: {
 *         test: "15",
 *     },
 * });
 * const defaultWorkspaceModelVersion = new alicloud.pai.WorkspaceModelVersion("default", {
 *     versionDescription: "VersionDescription.",
 *     sourceType: "TrainingService",
 *     sourceId: "region=${region},workspaceId=${workspace_id},kind=TrainingJob,id=job-id",
 *     extraInfo: {
 *         test: "15",
 *     },
 *     trainingSpec: {
 *         test: "TrainingSpec",
 *     },
 *     uri: "oss://hz-example-0701.oss-cn-hangzhou-internal.aliyuncs.com/checkpoints/",
 *     inferenceSpec: {
 *         test: "InferenceSpec",
 *     },
 *     modelId: defaultsHptEL.id,
 *     formatType: "SavedModel",
 *     approvalStatus: "Pending",
 *     frameworkType: "PyTorch",
 *     versionName: "1.0.0",
 *     metrics: {},
 *     labels: [{
 *         key: "k1",
 *         value: "vs1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * PAI Workspace Model Version can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:pai/workspaceModelVersion:WorkspaceModelVersion example <model_id>:<version_name>
 * ```
 */
export class WorkspaceModelVersion extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceModelVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceModelVersionState, opts?: pulumi.CustomResourceOptions): WorkspaceModelVersion {
        return new WorkspaceModelVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:pai/workspaceModelVersion:WorkspaceModelVersion';

    /**
     * Returns true if the given object is an instance of WorkspaceModelVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceModelVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceModelVersion.__pulumiType;
    }

    /**
     * The approval status. Valid values:
     * - Pending: To be determined.
     * - Approved: Allow to go online.
     * - Rejected: Online is not allowed.
     */
    declare public readonly approvalStatus: pulumi.Output<string>;
    /**
     * Other information.
     */
    declare public readonly extraInfo: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The format of the model. Valid values:
     * - OfflineModel
     * - SavedModel
     * - Keras H5
     * - Frozen Pb
     * - Caffe Prototxt
     * - TorchScript
     * - XGBoost
     * - PMML
     * - AlinkModel
     * - ONNX
     */
    declare public readonly formatType: pulumi.Output<string | undefined>;
    /**
     * The framework of the model. Valid values:
     * - Pytorch
     * - XGBoost
     * - Keras
     * - Caffe
     * - Alink
     * - Xflow
     * - TensorFlow
     */
    declare public readonly frameworkType: pulumi.Output<string | undefined>;
    /**
     * Describes how to apply to downstream inference services.
     */
    declare public readonly inferenceSpec: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of model version labels. See `labels` below.
     */
    declare public readonly labels: pulumi.Output<outputs.pai.WorkspaceModelVersionLabel[] | undefined>;
    /**
     * The metrics for the model. The serialized length is limited to 8192.
     */
    declare public readonly metrics: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The model ID.
     */
    declare public readonly modelId: pulumi.Output<string>;
    /**
     * The extended field. This is a JSON string.
     */
    declare public readonly options: pulumi.Output<string | undefined>;
    /**
     * The source ID.
     */
    declare public readonly sourceId: pulumi.Output<string | undefined>;
    /**
     * The type of the model source. Valid values:
     * - Custom: Custom.
     * - PAIFlow:PAI workflow.
     * - TrainingService:PAI training service.
     */
    declare public readonly sourceType: pulumi.Output<string>;
    /**
     * The training configurations. Used for fine-tuning and incremental training.
     */
    declare public readonly trainingSpec: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The URI of the model version.
     */
    declare public readonly uri: pulumi.Output<string>;
    /**
     * The version descriptions.
     */
    declare public readonly versionDescription: pulumi.Output<string | undefined>;
    /**
     * The Model version.
     */
    declare public readonly versionName: pulumi.Output<string>;

    /**
     * Create a WorkspaceModelVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceModelVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceModelVersionArgs | WorkspaceModelVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceModelVersionState | undefined;
            resourceInputs["approvalStatus"] = state?.approvalStatus;
            resourceInputs["extraInfo"] = state?.extraInfo;
            resourceInputs["formatType"] = state?.formatType;
            resourceInputs["frameworkType"] = state?.frameworkType;
            resourceInputs["inferenceSpec"] = state?.inferenceSpec;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["metrics"] = state?.metrics;
            resourceInputs["modelId"] = state?.modelId;
            resourceInputs["options"] = state?.options;
            resourceInputs["sourceId"] = state?.sourceId;
            resourceInputs["sourceType"] = state?.sourceType;
            resourceInputs["trainingSpec"] = state?.trainingSpec;
            resourceInputs["uri"] = state?.uri;
            resourceInputs["versionDescription"] = state?.versionDescription;
            resourceInputs["versionName"] = state?.versionName;
        } else {
            const args = argsOrState as WorkspaceModelVersionArgs | undefined;
            if (args?.modelId === undefined && !opts.urn) {
                throw new Error("Missing required property 'modelId'");
            }
            if (args?.uri === undefined && !opts.urn) {
                throw new Error("Missing required property 'uri'");
            }
            resourceInputs["approvalStatus"] = args?.approvalStatus;
            resourceInputs["extraInfo"] = args?.extraInfo;
            resourceInputs["formatType"] = args?.formatType;
            resourceInputs["frameworkType"] = args?.frameworkType;
            resourceInputs["inferenceSpec"] = args?.inferenceSpec;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["metrics"] = args?.metrics;
            resourceInputs["modelId"] = args?.modelId;
            resourceInputs["options"] = args?.options;
            resourceInputs["sourceId"] = args?.sourceId;
            resourceInputs["sourceType"] = args?.sourceType;
            resourceInputs["trainingSpec"] = args?.trainingSpec;
            resourceInputs["uri"] = args?.uri;
            resourceInputs["versionDescription"] = args?.versionDescription;
            resourceInputs["versionName"] = args?.versionName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceModelVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceModelVersion resources.
 */
export interface WorkspaceModelVersionState {
    /**
     * The approval status. Valid values:
     * - Pending: To be determined.
     * - Approved: Allow to go online.
     * - Rejected: Online is not allowed.
     */
    approvalStatus?: pulumi.Input<string>;
    /**
     * Other information.
     */
    extraInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The format of the model. Valid values:
     * - OfflineModel
     * - SavedModel
     * - Keras H5
     * - Frozen Pb
     * - Caffe Prototxt
     * - TorchScript
     * - XGBoost
     * - PMML
     * - AlinkModel
     * - ONNX
     */
    formatType?: pulumi.Input<string>;
    /**
     * The framework of the model. Valid values:
     * - Pytorch
     * - XGBoost
     * - Keras
     * - Caffe
     * - Alink
     * - Xflow
     * - TensorFlow
     */
    frameworkType?: pulumi.Input<string>;
    /**
     * Describes how to apply to downstream inference services.
     */
    inferenceSpec?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of model version labels. See `labels` below.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.pai.WorkspaceModelVersionLabel>[]>;
    /**
     * The metrics for the model. The serialized length is limited to 8192.
     */
    metrics?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The model ID.
     */
    modelId?: pulumi.Input<string>;
    /**
     * The extended field. This is a JSON string.
     */
    options?: pulumi.Input<string>;
    /**
     * The source ID.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * The type of the model source. Valid values:
     * - Custom: Custom.
     * - PAIFlow:PAI workflow.
     * - TrainingService:PAI training service.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The training configurations. Used for fine-tuning and incremental training.
     */
    trainingSpec?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The URI of the model version.
     */
    uri?: pulumi.Input<string>;
    /**
     * The version descriptions.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The Model version.
     */
    versionName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceModelVersion resource.
 */
export interface WorkspaceModelVersionArgs {
    /**
     * The approval status. Valid values:
     * - Pending: To be determined.
     * - Approved: Allow to go online.
     * - Rejected: Online is not allowed.
     */
    approvalStatus?: pulumi.Input<string>;
    /**
     * Other information.
     */
    extraInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The format of the model. Valid values:
     * - OfflineModel
     * - SavedModel
     * - Keras H5
     * - Frozen Pb
     * - Caffe Prototxt
     * - TorchScript
     * - XGBoost
     * - PMML
     * - AlinkModel
     * - ONNX
     */
    formatType?: pulumi.Input<string>;
    /**
     * The framework of the model. Valid values:
     * - Pytorch
     * - XGBoost
     * - Keras
     * - Caffe
     * - Alink
     * - Xflow
     * - TensorFlow
     */
    frameworkType?: pulumi.Input<string>;
    /**
     * Describes how to apply to downstream inference services.
     */
    inferenceSpec?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of model version labels. See `labels` below.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.pai.WorkspaceModelVersionLabel>[]>;
    /**
     * The metrics for the model. The serialized length is limited to 8192.
     */
    metrics?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The model ID.
     */
    modelId: pulumi.Input<string>;
    /**
     * The extended field. This is a JSON string.
     */
    options?: pulumi.Input<string>;
    /**
     * The source ID.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * The type of the model source. Valid values:
     * - Custom: Custom.
     * - PAIFlow:PAI workflow.
     * - TrainingService:PAI training service.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The training configurations. Used for fine-tuning and incremental training.
     */
    trainingSpec?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The URI of the model version.
     */
    uri: pulumi.Input<string>;
    /**
     * The version descriptions.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The Model version.
     */
    versionName?: pulumi.Input<string>;
}
