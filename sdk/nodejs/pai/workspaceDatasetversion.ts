// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a PAI Workspace Datasetversion resource.
 *
 * For information about PAI Workspace Dataset Version and how to use it, see [What is Dataset Version](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateDatasetVersion).
 * > **NOTE:** Available since v1.236.0.
 *
 * ## Import
 *
 * PAI Workspace Datasetversion can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:pai/workspaceDatasetversion:WorkspaceDatasetversion example <dataset_id>:<version_name>
 * ```
 */
export class WorkspaceDatasetversion extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceDatasetversion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceDatasetversionState, opts?: pulumi.CustomResourceOptions): WorkspaceDatasetversion {
        return new WorkspaceDatasetversion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:pai/workspaceDatasetversion:WorkspaceDatasetversion';

    /**
     * Returns true if the given object is an instance of WorkspaceDatasetversion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceDatasetversion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceDatasetversion.__pulumiType;
    }

    /**
     * Update time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Data count.
     */
    public readonly dataCount!: pulumi.Output<number | undefined>;
    /**
     * Data size.
     */
    public readonly dataSize!: pulumi.Output<number | undefined>;
    /**
     * The data source type. The following values are supported:
     * - OSS: Alibaba Cloud Object Storage (OSS).
     * - NAS: Alibaba cloud file storage (NAS).
     */
    public readonly dataSourceType!: pulumi.Output<string>;
    /**
     * The first ID of the resource
     */
    public readonly datasetId!: pulumi.Output<string>;
    /**
     * Description of dataset version.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The tag of the resource See `labels` below.
     */
    public readonly labels!: pulumi.Output<outputs.pai.WorkspaceDatasetversionLabel[] | undefined>;
    /**
     * The extended field, which is of the JsonString type.
     *
     * When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
     */
    public readonly options!: pulumi.Output<string | undefined>;
    /**
     * The properties of the dataset. The following values are supported:
     * - FILE: FILE.
     * - DIRECTORY: folder.
     */
    public readonly property!: pulumi.Output<string>;
    /**
     * The data source ID.
     */
    public readonly sourceId!: pulumi.Output<string | undefined>;
    /**
     * The data source type. The default value is USER.
     */
    public readonly sourceType!: pulumi.Output<string | undefined>;
    /**
     * The Uri configuration sample is as follows:
     * - The data source type is OSS:'oss:// bucket.endpoint/object'
     * - The data source type is NAS:
     *
     * The general NAS format is: 'nas://.region/subpath/to/dir/';
     *
     * CPFS1.0:'nas://.region/subpath/to/dir /';
     *
     * CPFS2.0:'nas://.region//'.
     *
     * CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
     */
    public readonly uri!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly versionName!: pulumi.Output<string>;

    /**
     * Create a WorkspaceDatasetversion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceDatasetversionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceDatasetversionArgs | WorkspaceDatasetversionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceDatasetversionState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataCount"] = state ? state.dataCount : undefined;
            resourceInputs["dataSize"] = state ? state.dataSize : undefined;
            resourceInputs["dataSourceType"] = state ? state.dataSourceType : undefined;
            resourceInputs["datasetId"] = state ? state.datasetId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["property"] = state ? state.property : undefined;
            resourceInputs["sourceId"] = state ? state.sourceId : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
            resourceInputs["versionName"] = state ? state.versionName : undefined;
        } else {
            const args = argsOrState as WorkspaceDatasetversionArgs | undefined;
            if ((!args || args.dataSourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataSourceType'");
            }
            if ((!args || args.datasetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetId'");
            }
            if ((!args || args.property === undefined) && !opts.urn) {
                throw new Error("Missing required property 'property'");
            }
            if ((!args || args.uri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'uri'");
            }
            resourceInputs["dataCount"] = args ? args.dataCount : undefined;
            resourceInputs["dataSize"] = args ? args.dataSize : undefined;
            resourceInputs["dataSourceType"] = args ? args.dataSourceType : undefined;
            resourceInputs["datasetId"] = args ? args.datasetId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["property"] = args ? args.property : undefined;
            resourceInputs["sourceId"] = args ? args.sourceId : undefined;
            resourceInputs["sourceType"] = args ? args.sourceType : undefined;
            resourceInputs["uri"] = args ? args.uri : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["versionName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceDatasetversion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceDatasetversion resources.
 */
export interface WorkspaceDatasetversionState {
    /**
     * Update time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Data count.
     */
    dataCount?: pulumi.Input<number>;
    /**
     * Data size.
     */
    dataSize?: pulumi.Input<number>;
    /**
     * The data source type. The following values are supported:
     * - OSS: Alibaba Cloud Object Storage (OSS).
     * - NAS: Alibaba cloud file storage (NAS).
     */
    dataSourceType?: pulumi.Input<string>;
    /**
     * The first ID of the resource
     */
    datasetId?: pulumi.Input<string>;
    /**
     * Description of dataset version.
     */
    description?: pulumi.Input<string>;
    /**
     * The tag of the resource See `labels` below.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.pai.WorkspaceDatasetversionLabel>[]>;
    /**
     * The extended field, which is of the JsonString type.
     *
     * When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
     */
    options?: pulumi.Input<string>;
    /**
     * The properties of the dataset. The following values are supported:
     * - FILE: FILE.
     * - DIRECTORY: folder.
     */
    property?: pulumi.Input<string>;
    /**
     * The data source ID.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * The data source type. The default value is USER.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The Uri configuration sample is as follows:
     * - The data source type is OSS:'oss:// bucket.endpoint/object'
     * - The data source type is NAS:
     *
     * The general NAS format is: 'nas://.region/subpath/to/dir/';
     *
     * CPFS1.0:'nas://.region/subpath/to/dir /';
     *
     * CPFS2.0:'nas://.region//'.
     *
     * CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
     */
    uri?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    versionName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceDatasetversion resource.
 */
export interface WorkspaceDatasetversionArgs {
    /**
     * Data count.
     */
    dataCount?: pulumi.Input<number>;
    /**
     * Data size.
     */
    dataSize?: pulumi.Input<number>;
    /**
     * The data source type. The following values are supported:
     * - OSS: Alibaba Cloud Object Storage (OSS).
     * - NAS: Alibaba cloud file storage (NAS).
     */
    dataSourceType: pulumi.Input<string>;
    /**
     * The first ID of the resource
     */
    datasetId: pulumi.Input<string>;
    /**
     * Description of dataset version.
     */
    description?: pulumi.Input<string>;
    /**
     * The tag of the resource See `labels` below.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.pai.WorkspaceDatasetversionLabel>[]>;
    /**
     * The extended field, which is of the JsonString type.
     *
     * When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
     */
    options?: pulumi.Input<string>;
    /**
     * The properties of the dataset. The following values are supported:
     * - FILE: FILE.
     * - DIRECTORY: folder.
     */
    property: pulumi.Input<string>;
    /**
     * The data source ID.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * The data source type. The default value is USER.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The Uri configuration sample is as follows:
     * - The data source type is OSS:'oss:// bucket.endpoint/object'
     * - The data source type is NAS:
     *
     * The general NAS format is: 'nas://.region/subpath/to/dir/';
     *
     * CPFS1.0:'nas://.region/subpath/to/dir /';
     *
     * CPFS2.0:'nas://.region//'.
     *
     * CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
     */
    uri: pulumi.Input<string>;
}
