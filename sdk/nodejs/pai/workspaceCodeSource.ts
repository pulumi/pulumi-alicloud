// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a PAI Workspace Code Source resource.
 *
 * For information about PAI Workspace Code Source and how to use it, see [What is Code Source](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.236.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaultgklBnM = new alicloud.pai.WorkspaceWorkspace("defaultgklBnM", {
 *     description: "for-pop-example",
 *     displayName: "CodeSourceTest_1732796227",
 *     workspaceName: name,
 *     envTypes: ["prod"],
 * });
 * const _default = new alicloud.pai.WorkspaceCodeSource("default", {
 *     mountPath: "/mnt/code/dir_01/",
 *     codeRepo: "https://github.com/mattn/go-sqlite3.git",
 *     description: "desc-01",
 *     codeRepoAccessToken: "token-01",
 *     accessibility: "PRIVATE",
 *     displayName: "codesource-example-01",
 *     workspaceId: defaultgklBnM.id,
 *     codeBranch: "master",
 *     codeRepoUserName: "user-01",
 * });
 * ```
 *
 * ## Import
 *
 * PAI Workspace Code Source can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:pai/workspaceCodeSource:WorkspaceCodeSource example <id>
 * ```
 */
export class WorkspaceCodeSource extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceCodeSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceCodeSourceState, opts?: pulumi.CustomResourceOptions): WorkspaceCodeSource {
        return new WorkspaceCodeSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:pai/workspaceCodeSource:WorkspaceCodeSource';

    /**
     * Returns true if the given object is an instance of WorkspaceCodeSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceCodeSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceCodeSource.__pulumiType;
    }

    /**
     * Visibility of the code configuration, possible values:
     * - PRIVATE: In this workspace, it is only visible to you and the administrator.
     * - PUBLIC: In this workspace, it is visible to everyone.
     */
    public readonly accessibility!: pulumi.Output<string>;
    /**
     * Code repository branch.
     */
    public readonly codeBranch!: pulumi.Output<string | undefined>;
    /**
     * The code CommitId.
     */
    public readonly codeCommit!: pulumi.Output<string | undefined>;
    /**
     * Code repository address.
     */
    public readonly codeRepo!: pulumi.Output<string>;
    /**
     * The Token used to access the code repository.
     */
    public readonly codeRepoAccessToken!: pulumi.Output<string | undefined>;
    /**
     * The user name of the code repository.
     */
    public readonly codeRepoUserName!: pulumi.Output<string | undefined>;
    /**
     * The creation time of the resource
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A detailed description of the code configuration.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Code source configuration name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The local Mount Directory of the code.
     */
    public readonly mountPath!: pulumi.Output<string>;
    /**
     * The ID of the workspace.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceCodeSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceCodeSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceCodeSourceArgs | WorkspaceCodeSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceCodeSourceState | undefined;
            resourceInputs["accessibility"] = state ? state.accessibility : undefined;
            resourceInputs["codeBranch"] = state ? state.codeBranch : undefined;
            resourceInputs["codeCommit"] = state ? state.codeCommit : undefined;
            resourceInputs["codeRepo"] = state ? state.codeRepo : undefined;
            resourceInputs["codeRepoAccessToken"] = state ? state.codeRepoAccessToken : undefined;
            resourceInputs["codeRepoUserName"] = state ? state.codeRepoUserName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["mountPath"] = state ? state.mountPath : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceCodeSourceArgs | undefined;
            if ((!args || args.accessibility === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessibility'");
            }
            if ((!args || args.codeRepo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'codeRepo'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.mountPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mountPath'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["accessibility"] = args ? args.accessibility : undefined;
            resourceInputs["codeBranch"] = args ? args.codeBranch : undefined;
            resourceInputs["codeCommit"] = args ? args.codeCommit : undefined;
            resourceInputs["codeRepo"] = args ? args.codeRepo : undefined;
            resourceInputs["codeRepoAccessToken"] = args ? args.codeRepoAccessToken : undefined;
            resourceInputs["codeRepoUserName"] = args ? args.codeRepoUserName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["mountPath"] = args ? args.mountPath : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceCodeSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceCodeSource resources.
 */
export interface WorkspaceCodeSourceState {
    /**
     * Visibility of the code configuration, possible values:
     * - PRIVATE: In this workspace, it is only visible to you and the administrator.
     * - PUBLIC: In this workspace, it is visible to everyone.
     */
    accessibility?: pulumi.Input<string>;
    /**
     * Code repository branch.
     */
    codeBranch?: pulumi.Input<string>;
    /**
     * The code CommitId.
     */
    codeCommit?: pulumi.Input<string>;
    /**
     * Code repository address.
     */
    codeRepo?: pulumi.Input<string>;
    /**
     * The Token used to access the code repository.
     */
    codeRepoAccessToken?: pulumi.Input<string>;
    /**
     * The user name of the code repository.
     */
    codeRepoUserName?: pulumi.Input<string>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * A detailed description of the code configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * Code source configuration name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The local Mount Directory of the code.
     */
    mountPath?: pulumi.Input<string>;
    /**
     * The ID of the workspace.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceCodeSource resource.
 */
export interface WorkspaceCodeSourceArgs {
    /**
     * Visibility of the code configuration, possible values:
     * - PRIVATE: In this workspace, it is only visible to you and the administrator.
     * - PUBLIC: In this workspace, it is visible to everyone.
     */
    accessibility: pulumi.Input<string>;
    /**
     * Code repository branch.
     */
    codeBranch?: pulumi.Input<string>;
    /**
     * The code CommitId.
     */
    codeCommit?: pulumi.Input<string>;
    /**
     * Code repository address.
     */
    codeRepo: pulumi.Input<string>;
    /**
     * The Token used to access the code repository.
     */
    codeRepoAccessToken?: pulumi.Input<string>;
    /**
     * The user name of the code repository.
     */
    codeRepoUserName?: pulumi.Input<string>;
    /**
     * A detailed description of the code configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * Code source configuration name.
     */
    displayName: pulumi.Input<string>;
    /**
     * The local Mount Directory of the code.
     */
    mountPath: pulumi.Input<string>;
    /**
     * The ID of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
