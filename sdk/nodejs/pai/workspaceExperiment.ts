// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a PAI Workspace Experiment resource.
 *
 * For information about PAI Workspace Experiment and how to use it, see [What is Experiment](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateExperiment).
 *
 * > **NOTE:** Available since v1.236.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaultDI9fsL = new alicloud.pai.WorkspaceWorkspace("defaultDI9fsL", {
 *     description: name,
 *     displayName: name,
 *     workspaceName: name,
 *     envTypes: ["prod"],
 * });
 * const _default = new alicloud.pai.WorkspaceExperiment("default", {
 *     accessibility: "PRIVATE",
 *     artifactUri: "oss://yyt-409262.oss-cn-hangzhou.aliyuncs.com/example/",
 *     experimentName: name,
 *     workspaceId: defaultDI9fsL.id,
 * });
 * ```
 *
 * ## Import
 *
 * PAI Workspace Experiment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:pai/workspaceExperiment:WorkspaceExperiment example <id>
 * ```
 */
export class WorkspaceExperiment extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceExperiment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceExperimentState, opts?: pulumi.CustomResourceOptions): WorkspaceExperiment {
        return new WorkspaceExperiment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:pai/workspaceExperiment:WorkspaceExperiment';

    /**
     * Returns true if the given object is an instance of WorkspaceExperiment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceExperiment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceExperiment.__pulumiType;
    }

    /**
     * Experimental Visibility
     */
    public readonly accessibility!: pulumi.Output<string>;
    /**
     * ArtifactUri is default OSS storage path of the output of trials in the experiment
     */
    public readonly artifactUri!: pulumi.Output<string>;
    /**
     * GmtCreateTime is time when this entity is created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Name is the name of the experiment, unique in a namespace
     */
    public readonly experimentName!: pulumi.Output<string>;
    /**
     * WorkspaceId is the workspace id which contains the experiment
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceExperiment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceExperimentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceExperimentArgs | WorkspaceExperimentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceExperimentState | undefined;
            resourceInputs["accessibility"] = state ? state.accessibility : undefined;
            resourceInputs["artifactUri"] = state ? state.artifactUri : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["experimentName"] = state ? state.experimentName : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceExperimentArgs | undefined;
            if ((!args || args.artifactUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactUri'");
            }
            if ((!args || args.experimentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'experimentName'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["accessibility"] = args ? args.accessibility : undefined;
            resourceInputs["artifactUri"] = args ? args.artifactUri : undefined;
            resourceInputs["experimentName"] = args ? args.experimentName : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceExperiment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceExperiment resources.
 */
export interface WorkspaceExperimentState {
    /**
     * Experimental Visibility
     */
    accessibility?: pulumi.Input<string>;
    /**
     * ArtifactUri is default OSS storage path of the output of trials in the experiment
     */
    artifactUri?: pulumi.Input<string>;
    /**
     * GmtCreateTime is time when this entity is created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Name is the name of the experiment, unique in a namespace
     */
    experimentName?: pulumi.Input<string>;
    /**
     * WorkspaceId is the workspace id which contains the experiment
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceExperiment resource.
 */
export interface WorkspaceExperimentArgs {
    /**
     * Experimental Visibility
     */
    accessibility?: pulumi.Input<string>;
    /**
     * ArtifactUri is default OSS storage path of the output of trials in the experiment
     */
    artifactUri: pulumi.Input<string>;
    /**
     * Name is the name of the experiment, unique in a namespace
     */
    experimentName: pulumi.Input<string>;
    /**
     * WorkspaceId is the workspace id which contains the experiment
     */
    workspaceId: pulumi.Input<string>;
}
