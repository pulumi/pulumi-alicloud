// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cassandra cluster resource supports replica set clusters only. The Cassandra provides stable, reliable, and automatic scalable database services.
 * It offers a full range of database solutions, such as disaster recovery, backup, recovery, monitoring, and alarms.
 * You can see detail product introduction [here](https://www.alibabacloud.com/help/product/49055.htm).
 *
 * > **NOTE:** Available since v1.88.0.
 *
 * > **NOTE:**  The following regions support create Vpc network Cassandra cluster.
 * The official website mark more regions. Or you can call [DescribeRegions](https://help.aliyun.com/document_detail/157540.html).
 *
 * > **NOTE:**  Create Cassandra cluster or change cluster type and storage would cost 30 minutes. Please make full preparation.
 *
 * > **DEPRECATED:**  This resource has been [deprecated](https://www.alibabacloud.com/help/en/apsaradb-for-cassandra/latest/cassandra-delisting-notice) from version `1.220.0`.
 *
 * ## Example Usage
 *
 * ### Create a cassandra cluster
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.cassandra.Cluster("default", {
 *     clusterName: "cassandra-cluster-name-tf",
 *     dataCenterName: "dc-1",
 *     autoRenew: false,
 *     instanceType: "cassandra.c.large",
 *     majorVersion: "3.11",
 *     nodeCount: 2,
 *     payType: "PayAsYouGo",
 *     vswitchId: "vsw-xxxx",
 *     diskSize: 160,
 *     diskType: "cloud_ssd",
 *     maintainStartTime: "18:00Z",
 *     maintainEndTime: "20:00Z",
 *     ipWhite: "127.0.0.1",
 * });
 * ```
 *
 * This is a example for class netType cluster. You can find more detail with the examples/cassandra_cluster dir.
 *
 * ## Import
 *
 * Cassandra cluster can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cassandra/cluster:Cluster example cds-wz9sr400dd7xxxxx
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cassandra/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Auto renew of dataCenter-1,`true` or `false`. System default to `false`, valid when payType = PrePaid.
     */
    declare public readonly autoRenew: pulumi.Output<boolean | undefined>;
    /**
     * Period of dataCenter-1 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when payType = Subscription. Unit: month.
     */
    declare public readonly autoRenewPeriod: pulumi.Output<number | undefined>;
    /**
     * Cassandra cluster name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     */
    declare public readonly clusterName: pulumi.Output<string | undefined>;
    /**
     * Cassandra dataCenter-1 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     */
    declare public readonly dataCenterName: pulumi.Output<string | undefined>;
    /**
     * User-defined Cassandra dataCenter-1 one node's storage space.Unit: GB. Value range:
     * - Custom storage space; value range: [160, 2000].
     * - 80-GB increments.
     */
    declare public readonly diskSize: pulumi.Output<number | undefined>;
    /**
     * The disk type of Cassandra dataCenter-1. Valid values are `cloudSsd`, `cloudEfficiency`, `localHddPro`, `localSsdPro`, localDisk size is fixed.
     */
    declare public readonly diskType: pulumi.Output<string | undefined>;
    declare public readonly enablePublic: pulumi.Output<boolean | undefined>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
     */
    declare public readonly instanceType: pulumi.Output<string>;
    /**
     * Set the instance's IP whitelist in VPC network.
     */
    declare public readonly ipWhite: pulumi.Output<string>;
    /**
     * The end time of the operation and maintenance time period of the cluster, in the format of HH:mmZ (UTC time).
     */
    declare public readonly maintainEndTime: pulumi.Output<string | undefined>;
    /**
     * The start time of the operation and maintenance time period of the cluster, in the format of HH:mmZ (UTC time).
     */
    declare public readonly maintainStartTime: pulumi.Output<string | undefined>;
    /**
     * Cassandra major version. Now only support version `3.11`.
     */
    declare public readonly majorVersion: pulumi.Output<string>;
    /**
     * The node count of Cassandra dataCenter-1 default to 2.
     */
    declare public readonly nodeCount: pulumi.Output<number>;
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * The pay type of Cassandra dataCenter-1. Valid values are `Subscription`, `PayAsYouGo`,System default to `PayAsYouGo`.
     */
    declare public readonly payType: pulumi.Output<string>;
    declare public readonly period: pulumi.Output<number | undefined>;
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly publicPoints: pulumi.Output<string[]>;
    /**
     * A list of security group ids to associate with.
     *
     * > **NOTE:** Now cluster_name,data_center_name,instance_type,node_count,disk_type,disk_size,maintain_start_time,maintain_end_time,tags,ip_white,security_groups can be change. The others(auto_renew, autoRenewPeriod and so on) will be supported in the furture.
     */
    declare public readonly securityGroups: pulumi.Output<string[]>;
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The vswitchId of dataCenter-1, can not empty.
     */
    declare public readonly vswitchId: pulumi.Output<string>;
    /**
     * The Zone to launch the Cassandra cluster. If vswitchId is not empty, this zoneId can be "" or consistent.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["autoRenewPeriod"] = state?.autoRenewPeriod;
            resourceInputs["clusterName"] = state?.clusterName;
            resourceInputs["dataCenterName"] = state?.dataCenterName;
            resourceInputs["diskSize"] = state?.diskSize;
            resourceInputs["diskType"] = state?.diskType;
            resourceInputs["enablePublic"] = state?.enablePublic;
            resourceInputs["instanceType"] = state?.instanceType;
            resourceInputs["ipWhite"] = state?.ipWhite;
            resourceInputs["maintainEndTime"] = state?.maintainEndTime;
            resourceInputs["maintainStartTime"] = state?.maintainStartTime;
            resourceInputs["majorVersion"] = state?.majorVersion;
            resourceInputs["nodeCount"] = state?.nodeCount;
            resourceInputs["password"] = state?.password;
            resourceInputs["payType"] = state?.payType;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["publicPoints"] = state?.publicPoints;
            resourceInputs["securityGroups"] = state?.securityGroups;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if (args?.instanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (args?.majorVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'majorVersion'");
            }
            if (args?.nodeCount === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            if (args?.payType === undefined && !opts.urn) {
                throw new Error("Missing required property 'payType'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["autoRenewPeriod"] = args?.autoRenewPeriod;
            resourceInputs["clusterName"] = args?.clusterName;
            resourceInputs["dataCenterName"] = args?.dataCenterName;
            resourceInputs["diskSize"] = args?.diskSize;
            resourceInputs["diskType"] = args?.diskType;
            resourceInputs["enablePublic"] = args?.enablePublic;
            resourceInputs["instanceType"] = args?.instanceType;
            resourceInputs["ipWhite"] = args?.ipWhite;
            resourceInputs["maintainEndTime"] = args?.maintainEndTime;
            resourceInputs["maintainStartTime"] = args?.maintainStartTime;
            resourceInputs["majorVersion"] = args?.majorVersion;
            resourceInputs["nodeCount"] = args?.nodeCount;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["payType"] = args?.payType;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["securityGroups"] = args?.securityGroups;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["publicPoints"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Auto renew of dataCenter-1,`true` or `false`. System default to `false`, valid when payType = PrePaid.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Period of dataCenter-1 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when payType = Subscription. Unit: month.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * Cassandra cluster name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Cassandra dataCenter-1 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     */
    dataCenterName?: pulumi.Input<string>;
    /**
     * User-defined Cassandra dataCenter-1 one node's storage space.Unit: GB. Value range:
     * - Custom storage space; value range: [160, 2000].
     * - 80-GB increments.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The disk type of Cassandra dataCenter-1. Valid values are `cloudSsd`, `cloudEfficiency`, `localHddPro`, `localSsdPro`, localDisk size is fixed.
     */
    diskType?: pulumi.Input<string>;
    enablePublic?: pulumi.Input<boolean>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Set the instance's IP whitelist in VPC network.
     */
    ipWhite?: pulumi.Input<string>;
    /**
     * The end time of the operation and maintenance time period of the cluster, in the format of HH:mmZ (UTC time).
     */
    maintainEndTime?: pulumi.Input<string>;
    /**
     * The start time of the operation and maintenance time period of the cluster, in the format of HH:mmZ (UTC time).
     */
    maintainStartTime?: pulumi.Input<string>;
    /**
     * Cassandra major version. Now only support version `3.11`.
     */
    majorVersion?: pulumi.Input<string>;
    /**
     * The node count of Cassandra dataCenter-1 default to 2.
     */
    nodeCount?: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    /**
     * The pay type of Cassandra dataCenter-1. Valid values are `Subscription`, `PayAsYouGo`,System default to `PayAsYouGo`.
     */
    payType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    publicPoints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of security group ids to associate with.
     *
     * > **NOTE:** Now cluster_name,data_center_name,instance_type,node_count,disk_type,disk_size,maintain_start_time,maintain_end_time,tags,ip_white,security_groups can be change. The others(auto_renew, autoRenewPeriod and so on) will be supported in the furture.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The vswitchId of dataCenter-1, can not empty.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The Zone to launch the Cassandra cluster. If vswitchId is not empty, this zoneId can be "" or consistent.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Auto renew of dataCenter-1,`true` or `false`. System default to `false`, valid when payType = PrePaid.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Period of dataCenter-1 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when payType = Subscription. Unit: month.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * Cassandra cluster name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Cassandra dataCenter-1 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     */
    dataCenterName?: pulumi.Input<string>;
    /**
     * User-defined Cassandra dataCenter-1 one node's storage space.Unit: GB. Value range:
     * - Custom storage space; value range: [160, 2000].
     * - 80-GB increments.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The disk type of Cassandra dataCenter-1. Valid values are `cloudSsd`, `cloudEfficiency`, `localHddPro`, `localSsdPro`, localDisk size is fixed.
     */
    diskType?: pulumi.Input<string>;
    enablePublic?: pulumi.Input<boolean>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Set the instance's IP whitelist in VPC network.
     */
    ipWhite?: pulumi.Input<string>;
    /**
     * The end time of the operation and maintenance time period of the cluster, in the format of HH:mmZ (UTC time).
     */
    maintainEndTime?: pulumi.Input<string>;
    /**
     * The start time of the operation and maintenance time period of the cluster, in the format of HH:mmZ (UTC time).
     */
    maintainStartTime?: pulumi.Input<string>;
    /**
     * Cassandra major version. Now only support version `3.11`.
     */
    majorVersion: pulumi.Input<string>;
    /**
     * The node count of Cassandra dataCenter-1 default to 2.
     */
    nodeCount: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    /**
     * The pay type of Cassandra dataCenter-1. Valid values are `Subscription`, `PayAsYouGo`,System default to `PayAsYouGo`.
     */
    payType: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    /**
     * A list of security group ids to associate with.
     *
     * > **NOTE:** Now cluster_name,data_center_name,instance_type,node_count,disk_type,disk_size,maintain_start_time,maintain_end_time,tags,ip_white,security_groups can be change. The others(auto_renew, autoRenewPeriod and so on) will be supported in the furture.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The vswitchId of dataCenter-1, can not empty.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The Zone to launch the Cassandra cluster. If vswitchId is not empty, this zoneId can be "" or consistent.
     */
    zoneId?: pulumi.Input<string>;
}
