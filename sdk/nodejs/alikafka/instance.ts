// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an ALIKAFKA instance resource.
 *
 * For information about ALIKAFKA instance and how to use it, see [What is ALIKAFKA instance](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/api-doc-alikafka-2019-09-16-api-doc-startinstance).
 *
 * > **NOTE:** Available in 1.59.0+
 *
 * > **NOTE:** Creation or modification may took about 10-40 minutes.
 *
 * > **NOTE:** Only the following regions support create alikafka pre paid instance.
 * [`cn-hangzhou`,`cn-beijing`,`cn-shenzhen`,`cn-shanghai`,`cn-qingdao`,`cn-hongkong`,`cn-huhehaote`,`cn-zhangjiakou`,`cn-chengdu`,`cn-heyuan`,`ap-southeast-1`,`ap-southeast-3`,`ap-southeast-5`,`ap-south-1`,`ap-northeast-1`,`eu-central-1`,`eu-west-1`,`us-west-1`,`us-east-1`]
 *
 * > **NOTE:** Only the following regions support create alikafka post paid instance.
 * [`cn-hangzhou`,`cn-beijing`,`cn-shenzhen`,`cn-shanghai`,`cn-qingdao`,`cn-hongkong`,`cn-huhehaote`,`cn-zhangjiakou`,`cn-chengdu`,`cn-heyuan`,`ap-southeast-1`,`ap-southeast-3`,`ap-southeast-5`,`ap-south-1`,`ap-northeast-1`,`eu-central-1`,`eu-west-1`,`us-west-1`,`us-east-1`]
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const instanceName = config.get("instanceName") || "alikafkaInstanceName";
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {cidrBlock: "172.16.0.0/12"});
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {vpcId: defaultNetwork.id});
 * const defaultInstance = new alicloud.alikafka.Instance("defaultInstance", {
 *     partitionNum: 50,
 *     diskType: 1,
 *     diskSize: 500,
 *     deployType: 4,
 *     ioMax: 20,
 *     vswitchId: defaultSwitch.id,
 *     securityGroup: defaultSecurityGroup.id,
 * });
 * ```
 *
 * ## Import
 *
 * ALIKAFKA TOPIC can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:alikafka/instance:Instance instance alikafka_post-cn-123455abc
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:alikafka/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
     */
    public readonly config!: pulumi.Output<string>;
    /**
     * The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * - 4: eip/vpc instance
     * - 5: vpc instance.
     */
    public readonly deployType!: pulumi.Output<number>;
    /**
     * The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * The disk type of the instance. 0: efficient cloud disk , 1: SSD.
     */
    public readonly diskType!: pulumi.Output<number>;
    /**
     * The max bandwidth of the instance. It will be ignored when `deployType = 5`. When modify this value, it only supports adjust to a greater value.
     */
    public readonly eipMax!: pulumi.Output<number>;
    /**
     * The EndPoint to access the kafka instance.
     */
    public /*out*/ readonly endPoint!: pulumi.Output<string>;
    /**
     * The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     */
    public readonly ioMax!: pulumi.Output<number>;
    /**
     * The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `ioMax` and `ioMaxSpec` parameters, and `ioMaxSpec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     */
    public readonly ioMaxSpec!: pulumi.Output<string>;
    /**
     * The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The paid type of the instance. Support two type, "PrePaid": pre paid type instance, "PostPaid": post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
     */
    public readonly paidType!: pulumi.Output<string | undefined>;
    /**
     * The number of partitions.
     */
    public readonly partitionNum!: pulumi.Output<number | undefined>;
    /**
     * The ID of security group for this instance. If the security group is empty, system will create a default one.
     */
    public readonly securityGroup!: pulumi.Output<string>;
    /**
     * The zones among which you want to deploy the instance.
     */
    public readonly selectedZones!: pulumi.Output<string[] | undefined>;
    /**
     * The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
     */
    public readonly serviceVersion!: pulumi.Output<string>;
    /**
     * The spec type of the instance. Support two type, "normal": normal version instance, "professional": professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
     */
    public readonly specType!: pulumi.Output<string | undefined>;
    /**
     * The status of the instance. Valid values:
     * - 0: pending
     * - 1: deploying
     * - 5: running
     * - 15: expired
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The max num of topic can be creation of the instance. 
     * It has been deprecated from version 1.194.0 and using `partitionNum` instead.
     *
     * @deprecated Attribute 'topic_quota' has been deprecated from 1.194.0 and it will be removed in the next future. Using new attribute 'partition_num' instead.
     */
    public readonly topicQuota!: pulumi.Output<number>;
    /**
     * The VPC ID of the instance.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The ID of attaching vswitch to instance.
     */
    public readonly vswitchId!: pulumi.Output<string>;
    /**
     * The zone ID of the instance.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["deployType"] = state ? state.deployType : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["diskType"] = state ? state.diskType : undefined;
            resourceInputs["eipMax"] = state ? state.eipMax : undefined;
            resourceInputs["endPoint"] = state ? state.endPoint : undefined;
            resourceInputs["ioMax"] = state ? state.ioMax : undefined;
            resourceInputs["ioMaxSpec"] = state ? state.ioMaxSpec : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paidType"] = state ? state.paidType : undefined;
            resourceInputs["partitionNum"] = state ? state.partitionNum : undefined;
            resourceInputs["securityGroup"] = state ? state.securityGroup : undefined;
            resourceInputs["selectedZones"] = state ? state.selectedZones : undefined;
            resourceInputs["serviceVersion"] = state ? state.serviceVersion : undefined;
            resourceInputs["specType"] = state ? state.specType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["topicQuota"] = state ? state.topicQuota : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.deployType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployType'");
            }
            if ((!args || args.diskSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskSize'");
            }
            if ((!args || args.diskType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskType'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["deployType"] = args ? args.deployType : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["diskType"] = args ? args.diskType : undefined;
            resourceInputs["eipMax"] = args ? args.eipMax : undefined;
            resourceInputs["ioMax"] = args ? args.ioMax : undefined;
            resourceInputs["ioMaxSpec"] = args ? args.ioMaxSpec : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paidType"] = args ? args.paidType : undefined;
            resourceInputs["partitionNum"] = args ? args.partitionNum : undefined;
            resourceInputs["securityGroup"] = args ? args.securityGroup : undefined;
            resourceInputs["selectedZones"] = args ? args.selectedZones : undefined;
            resourceInputs["serviceVersion"] = args ? args.serviceVersion : undefined;
            resourceInputs["specType"] = args ? args.specType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["topicQuota"] = args ? args.topicQuota : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["endPoint"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
     */
    config?: pulumi.Input<string>;
    /**
     * The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * - 4: eip/vpc instance
     * - 5: vpc instance.
     */
    deployType?: pulumi.Input<number>;
    /**
     * The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The disk type of the instance. 0: efficient cloud disk , 1: SSD.
     */
    diskType?: pulumi.Input<number>;
    /**
     * The max bandwidth of the instance. It will be ignored when `deployType = 5`. When modify this value, it only supports adjust to a greater value.
     */
    eipMax?: pulumi.Input<number>;
    /**
     * The EndPoint to access the kafka instance.
     */
    endPoint?: pulumi.Input<string>;
    /**
     * The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     */
    ioMax?: pulumi.Input<number>;
    /**
     * The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `ioMax` and `ioMaxSpec` parameters, and `ioMaxSpec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     */
    ioMaxSpec?: pulumi.Input<string>;
    /**
     * The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * The paid type of the instance. Support two type, "PrePaid": pre paid type instance, "PostPaid": post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
     */
    paidType?: pulumi.Input<string>;
    /**
     * The number of partitions.
     */
    partitionNum?: pulumi.Input<number>;
    /**
     * The ID of security group for this instance. If the security group is empty, system will create a default one.
     */
    securityGroup?: pulumi.Input<string>;
    /**
     * The zones among which you want to deploy the instance.
     */
    selectedZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
     */
    serviceVersion?: pulumi.Input<string>;
    /**
     * The spec type of the instance. Support two type, "normal": normal version instance, "professional": professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
     */
    specType?: pulumi.Input<string>;
    /**
     * The status of the instance. Valid values:
     * - 0: pending
     * - 1: deploying
     * - 5: running
     * - 15: expired
     */
    status?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The max num of topic can be creation of the instance. 
     * It has been deprecated from version 1.194.0 and using `partitionNum` instead.
     *
     * @deprecated Attribute 'topic_quota' has been deprecated from 1.194.0 and it will be removed in the next future. Using new attribute 'partition_num' instead.
     */
    topicQuota?: pulumi.Input<number>;
    /**
     * The VPC ID of the instance.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of attaching vswitch to instance.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID of the instance.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
     */
    config?: pulumi.Input<string>;
    /**
     * The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * - 4: eip/vpc instance
     * - 5: vpc instance.
     */
    deployType: pulumi.Input<number>;
    /**
     * The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     */
    diskSize: pulumi.Input<number>;
    /**
     * The disk type of the instance. 0: efficient cloud disk , 1: SSD.
     */
    diskType: pulumi.Input<number>;
    /**
     * The max bandwidth of the instance. It will be ignored when `deployType = 5`. When modify this value, it only supports adjust to a greater value.
     */
    eipMax?: pulumi.Input<number>;
    /**
     * The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     */
    ioMax?: pulumi.Input<number>;
    /**
     * The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `ioMax` and `ioMaxSpec` parameters, and `ioMaxSpec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     */
    ioMaxSpec?: pulumi.Input<string>;
    /**
     * The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * The paid type of the instance. Support two type, "PrePaid": pre paid type instance, "PostPaid": post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
     */
    paidType?: pulumi.Input<string>;
    /**
     * The number of partitions.
     */
    partitionNum?: pulumi.Input<number>;
    /**
     * The ID of security group for this instance. If the security group is empty, system will create a default one.
     */
    securityGroup?: pulumi.Input<string>;
    /**
     * The zones among which you want to deploy the instance.
     */
    selectedZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
     */
    serviceVersion?: pulumi.Input<string>;
    /**
     * The spec type of the instance. Support two type, "normal": normal version instance, "professional": professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
     */
    specType?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The max num of topic can be creation of the instance. 
     * It has been deprecated from version 1.194.0 and using `partitionNum` instead.
     *
     * @deprecated Attribute 'topic_quota' has been deprecated from 1.194.0 and it will be removed in the next future. Using new attribute 'partition_num' instead.
     */
    topicQuota?: pulumi.Input<number>;
    /**
     * The VPC ID of the instance.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of attaching vswitch to instance.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The zone ID of the instance.
     */
    zoneId?: pulumi.Input<string>;
}
