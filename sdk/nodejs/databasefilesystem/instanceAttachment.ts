// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a DBFS Instance Attachment resource.
 *
 * For information about DBFS Instance Attachment and how to use it, see [What is Instance Attachment](https://help.aliyun.com/document_detail/149726.html).
 *
 * > **NOTE:** Available in v1.156.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "default-NODELETING",
 * });
 * const zoneId = "cn-hangzhou-i";
 * const defaultSwitches = defaultNetworks.then(defaultNetworks => alicloud.vpc.getSwitches({
 *     vpcId: defaultNetworks.ids?[0],
 *     zoneId: zoneId,
 * }));
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {
 *     description: "tf test",
 *     vpcId: defaultNetworks.then(defaultNetworks => defaultNetworks.ids?[0]),
 * });
 * const defaultImages = alicloud.ecs.getImages({
 *     owners: "system",
 *     nameRegex: "^centos_8",
 *     mostRecent: true,
 * });
 * const defaultInstance = new alicloud.ecs.Instance("defaultInstance", {
 *     imageId: defaultImages.then(defaultImages => defaultImages.images?[0]?.id),
 *     instanceName: _var.name,
 *     instanceType: "ecs.g7se.large",
 *     availabilityZone: zoneId,
 *     vswitchId: defaultSwitches.then(defaultSwitches => defaultSwitches.ids?[0]),
 *     systemDiskCategory: "cloud_essd",
 *     securityGroups: [defaultSecurityGroup.id],
 * });
 * const defaultDatabasefilesystem_instanceInstance = new alicloud.databasefilesystem.Instance("defaultDatabasefilesystem/instanceInstance", {
 *     category: "standard",
 *     zoneId: defaultInstance.availabilityZone,
 *     performanceLevel: "PL1",
 *     instanceName: _var.name,
 *     size: 100,
 * });
 * const example = new alicloud.databasefilesystem.InstanceAttachment("example", {
 *     ecsId: defaultInstance.id,
 *     instanceId: defaultDatabasefilesystem / instanceInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * DBFS Instance Attachment can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:databasefilesystem/instanceAttachment:InstanceAttachment example <instance_id>:<ecs_id>
 * ```
 */
export class InstanceAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InstanceAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceAttachmentState, opts?: pulumi.CustomResourceOptions): InstanceAttachment {
        return new InstanceAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:databasefilesystem/instanceAttachment:InstanceAttachment';

    /**
     * Returns true if the given object is an instance of InstanceAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceAttachment.__pulumiType;
    }

    /**
     * The ID of the ECS instance.
     */
    public readonly ecsId!: pulumi.Output<string>;
    /**
     * The ID of the database file system.
     */
    public readonly instanceId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a InstanceAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceAttachmentArgs | InstanceAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceAttachmentState | undefined;
            resourceInputs["ecsId"] = state ? state.ecsId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as InstanceAttachmentArgs | undefined;
            if ((!args || args.ecsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ecsId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["ecsId"] = args ? args.ecsId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceAttachment resources.
 */
export interface InstanceAttachmentState {
    /**
     * The ID of the ECS instance.
     */
    ecsId?: pulumi.Input<string>;
    /**
     * The ID of the database file system.
     */
    instanceId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceAttachment resource.
 */
export interface InstanceAttachmentArgs {
    /**
     * The ID of the ECS instance.
     */
    ecsId: pulumi.Input<string>;
    /**
     * The ID of the database file system.
     */
    instanceId: pulumi.Input<string>;
}
