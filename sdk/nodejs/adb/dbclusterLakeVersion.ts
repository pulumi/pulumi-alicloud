// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.
 *
 * For information about AnalyticDB for MySQL (ADB) DB Cluster Lake Version and how to use it, see [What is DB Cluster Lake Version](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/developer-reference/api-adb-2021-12-01-createdbcluster).
 *
 * > **NOTE:** Available since v1.190.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.adb.getZones({});
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.ids?.[0],
 * }));
 * const defaultDBClusterLakeVersion = new alicloud.adb.DBClusterLakeVersion("default", {
 *     dbClusterVersion: "5.0",
 *     vpcId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.ids?.[0]),
 *     zoneId: _default.then(_default => _default.ids?.[0]),
 *     computeResource: "16ACU",
 *     storageResource: "0ACU",
 *     paymentType: "PayAsYouGo",
 *     enableDefaultResourceGroup: false,
 * });
 * ```
 *
 * ## Import
 *
 * AnalyticDB for MySQL (ADB) DB Cluster Lake Version can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion example <id>
 * ```
 */
export class DBClusterLakeVersion extends pulumi.CustomResource {
    /**
     * Get an existing DBClusterLakeVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DBClusterLakeVersionState, opts?: pulumi.CustomResourceOptions): DBClusterLakeVersion {
        return new DBClusterLakeVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion';

    /**
     * Returns true if the given object is an instance of DBClusterLakeVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DBClusterLakeVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DBClusterLakeVersion.__pulumiType;
    }

    /**
     * The ID of the backup set that you want to use to restore data.
     */
    declare public readonly backupSetId: pulumi.Output<string | undefined>;
    /**
     * The name of the service.
     */
    declare public /*out*/ readonly commodityCode: pulumi.Output<string>;
    /**
     * The computing resources of the cluster.
     */
    declare public readonly computeResource: pulumi.Output<string>;
    /**
     * The endpoint of the cluster.
     */
    declare public /*out*/ readonly connectionString: pulumi.Output<string>;
    /**
     * The createTime of the cluster.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The description of the cluster.
     */
    declare public readonly dbClusterDescription: pulumi.Output<string>;
    /**
     * The version of the cluster. Valid values: `5.0`.
     */
    declare public readonly dbClusterVersion: pulumi.Output<string>;
    /**
     * Specifies whether to enable disk encryption. Valid values: `true`, `false`.
     */
    declare public readonly diskEncryption: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable default allocation of resources to userDefault resource groups.
     */
    declare public readonly enableDefaultResourceGroup: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to enable SSL encryption. Valid values: `true`, `false`.
     */
    declare public readonly enableSsl: pulumi.Output<boolean | undefined>;
    /**
     * The engine of the database.
     */
    declare public /*out*/ readonly engine: pulumi.Output<string>;
    /**
     * The engine version of the database.
     */
    declare public /*out*/ readonly engineVersion: pulumi.Output<string>;
    /**
     * The time when the cluster expires.
     */
    declare public /*out*/ readonly expireTime: pulumi.Output<string>;
    /**
     * Indicates whether the cluster has expired.
     */
    declare public /*out*/ readonly expired: pulumi.Output<boolean>;
    /**
     * The ID of the key that is used to encrypt disk data. `kmsId` is valid only when `diskEncryption` is set to `true`.
     */
    declare public readonly kmsId: pulumi.Output<string | undefined>;
    /**
     * The lock mode of the cluster.
     */
    declare public /*out*/ readonly lockMode: pulumi.Output<string>;
    /**
     * The reason why the cluster is locked.
     */
    declare public /*out*/ readonly lockReason: pulumi.Output<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`. **NOTE:** From version 1.245.0, `paymentType` can be set to `Subscription`.
     */
    declare public readonly paymentType: pulumi.Output<string>;
    /**
     * The subscription period of the subscription cluster. Valid values: `1` to `9`, `12`, `24`, `36`.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * The port that is used to access the cluster.
     */
    declare public /*out*/ readonly port: pulumi.Output<string>;
    /**
     * The product form of the cluster. Valid values:
     * - `IntegrationForm`: Integrated.
     * - `LegacyForm`: Data Lakehouse Edition.
     */
    declare public readonly productForm: pulumi.Output<string>;
    /**
     * The edition of the cluster. Valid values:
     * - `BasicVersion`: Basic Edition.
     * - `EnterpriseVersion`: Enterprise Edition.
     * > **NOTE:** `productVersion` must be specified only when `productForm` is set to `IntegrationForm`.
     */
    declare public readonly productVersion: pulumi.Output<string>;
    /**
     * The number of reserved resource nodes.
     */
    declare public readonly reservedNodeCount: pulumi.Output<number>;
    /**
     * The specifications of reserved resource nodes.
     */
    declare public readonly reservedNodeSize: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The point in time to which you want to restore data from the backup set.
     */
    declare public readonly restoreToTime: pulumi.Output<string | undefined>;
    /**
     * The method that you want to use to restore data. Valid values:
     */
    declare public readonly restoreType: pulumi.Output<string | undefined>;
    /**
     * The ID of the secondary zone.
     */
    declare public readonly secondaryVswitchId: pulumi.Output<string | undefined>;
    /**
     * The ID of the secondary vSwitch.
     */
    declare public readonly secondaryZoneId: pulumi.Output<string | undefined>;
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     */
    declare public readonly securityIps: pulumi.Output<string>;
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     */
    declare public readonly sourceDbClusterId: pulumi.Output<string | undefined>;
    /**
     * The status of the resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The storage resources of the cluster.
     */
    declare public readonly storageResource: pulumi.Output<string>;
    /**
     * The vpc ID of the resource.
     */
    declare public readonly vpcId: pulumi.Output<string>;
    /**
     * The ID of the vSwitch.
     */
    declare public readonly vswitchId: pulumi.Output<string>;
    /**
     * The zone ID of the resource.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a DBClusterLakeVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DBClusterLakeVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DBClusterLakeVersionArgs | DBClusterLakeVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DBClusterLakeVersionState | undefined;
            resourceInputs["backupSetId"] = state?.backupSetId;
            resourceInputs["commodityCode"] = state?.commodityCode;
            resourceInputs["computeResource"] = state?.computeResource;
            resourceInputs["connectionString"] = state?.connectionString;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["dbClusterDescription"] = state?.dbClusterDescription;
            resourceInputs["dbClusterVersion"] = state?.dbClusterVersion;
            resourceInputs["diskEncryption"] = state?.diskEncryption;
            resourceInputs["enableDefaultResourceGroup"] = state?.enableDefaultResourceGroup;
            resourceInputs["enableSsl"] = state?.enableSsl;
            resourceInputs["engine"] = state?.engine;
            resourceInputs["engineVersion"] = state?.engineVersion;
            resourceInputs["expireTime"] = state?.expireTime;
            resourceInputs["expired"] = state?.expired;
            resourceInputs["kmsId"] = state?.kmsId;
            resourceInputs["lockMode"] = state?.lockMode;
            resourceInputs["lockReason"] = state?.lockReason;
            resourceInputs["paymentType"] = state?.paymentType;
            resourceInputs["period"] = state?.period;
            resourceInputs["port"] = state?.port;
            resourceInputs["productForm"] = state?.productForm;
            resourceInputs["productVersion"] = state?.productVersion;
            resourceInputs["reservedNodeCount"] = state?.reservedNodeCount;
            resourceInputs["reservedNodeSize"] = state?.reservedNodeSize;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["restoreToTime"] = state?.restoreToTime;
            resourceInputs["restoreType"] = state?.restoreType;
            resourceInputs["secondaryVswitchId"] = state?.secondaryVswitchId;
            resourceInputs["secondaryZoneId"] = state?.secondaryZoneId;
            resourceInputs["securityIps"] = state?.securityIps;
            resourceInputs["sourceDbClusterId"] = state?.sourceDbClusterId;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageResource"] = state?.storageResource;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as DBClusterLakeVersionArgs | undefined;
            if (args?.dbClusterVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbClusterVersion'");
            }
            if (args?.paymentType === undefined && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["backupSetId"] = args?.backupSetId;
            resourceInputs["computeResource"] = args?.computeResource;
            resourceInputs["dbClusterDescription"] = args?.dbClusterDescription;
            resourceInputs["dbClusterVersion"] = args?.dbClusterVersion;
            resourceInputs["diskEncryption"] = args?.diskEncryption;
            resourceInputs["enableDefaultResourceGroup"] = args?.enableDefaultResourceGroup;
            resourceInputs["enableSsl"] = args?.enableSsl;
            resourceInputs["kmsId"] = args?.kmsId;
            resourceInputs["paymentType"] = args?.paymentType;
            resourceInputs["period"] = args?.period;
            resourceInputs["productForm"] = args?.productForm;
            resourceInputs["productVersion"] = args?.productVersion;
            resourceInputs["reservedNodeCount"] = args?.reservedNodeCount;
            resourceInputs["reservedNodeSize"] = args?.reservedNodeSize;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["restoreToTime"] = args?.restoreToTime;
            resourceInputs["restoreType"] = args?.restoreType;
            resourceInputs["secondaryVswitchId"] = args?.secondaryVswitchId;
            resourceInputs["secondaryZoneId"] = args?.secondaryZoneId;
            resourceInputs["securityIps"] = args?.securityIps;
            resourceInputs["sourceDbClusterId"] = args?.sourceDbClusterId;
            resourceInputs["storageResource"] = args?.storageResource;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["commodityCode"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["engineVersion"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["expired"] = undefined /*out*/;
            resourceInputs["lockMode"] = undefined /*out*/;
            resourceInputs["lockReason"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DBClusterLakeVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DBClusterLakeVersion resources.
 */
export interface DBClusterLakeVersionState {
    /**
     * The ID of the backup set that you want to use to restore data.
     */
    backupSetId?: pulumi.Input<string>;
    /**
     * The name of the service.
     */
    commodityCode?: pulumi.Input<string>;
    /**
     * The computing resources of the cluster.
     */
    computeResource?: pulumi.Input<string>;
    /**
     * The endpoint of the cluster.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The createTime of the cluster.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the cluster.
     */
    dbClusterDescription?: pulumi.Input<string>;
    /**
     * The version of the cluster. Valid values: `5.0`.
     */
    dbClusterVersion?: pulumi.Input<string>;
    /**
     * Specifies whether to enable disk encryption. Valid values: `true`, `false`.
     */
    diskEncryption?: pulumi.Input<boolean>;
    /**
     * Whether to enable default allocation of resources to userDefault resource groups.
     */
    enableDefaultResourceGroup?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable SSL encryption. Valid values: `true`, `false`.
     */
    enableSsl?: pulumi.Input<boolean>;
    /**
     * The engine of the database.
     */
    engine?: pulumi.Input<string>;
    /**
     * The engine version of the database.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The time when the cluster expires.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Indicates whether the cluster has expired.
     */
    expired?: pulumi.Input<boolean>;
    /**
     * The ID of the key that is used to encrypt disk data. `kmsId` is valid only when `diskEncryption` is set to `true`.
     */
    kmsId?: pulumi.Input<string>;
    /**
     * The lock mode of the cluster.
     */
    lockMode?: pulumi.Input<string>;
    /**
     * The reason why the cluster is locked.
     */
    lockReason?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`. **NOTE:** From version 1.245.0, `paymentType` can be set to `Subscription`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The subscription period of the subscription cluster. Valid values: `1` to `9`, `12`, `24`, `36`.
     */
    period?: pulumi.Input<number>;
    /**
     * The port that is used to access the cluster.
     */
    port?: pulumi.Input<string>;
    /**
     * The product form of the cluster. Valid values:
     * - `IntegrationForm`: Integrated.
     * - `LegacyForm`: Data Lakehouse Edition.
     */
    productForm?: pulumi.Input<string>;
    /**
     * The edition of the cluster. Valid values:
     * - `BasicVersion`: Basic Edition.
     * - `EnterpriseVersion`: Enterprise Edition.
     * > **NOTE:** `productVersion` must be specified only when `productForm` is set to `IntegrationForm`.
     */
    productVersion?: pulumi.Input<string>;
    /**
     * The number of reserved resource nodes.
     */
    reservedNodeCount?: pulumi.Input<number>;
    /**
     * The specifications of reserved resource nodes.
     */
    reservedNodeSize?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The point in time to which you want to restore data from the backup set.
     */
    restoreToTime?: pulumi.Input<string>;
    /**
     * The method that you want to use to restore data. Valid values:
     */
    restoreType?: pulumi.Input<string>;
    /**
     * The ID of the secondary zone.
     */
    secondaryVswitchId?: pulumi.Input<string>;
    /**
     * The ID of the secondary vSwitch.
     */
    secondaryZoneId?: pulumi.Input<string>;
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     */
    securityIps?: pulumi.Input<string>;
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     */
    sourceDbClusterId?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage resources of the cluster.
     */
    storageResource?: pulumi.Input<string>;
    /**
     * The vpc ID of the resource.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID of the resource.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DBClusterLakeVersion resource.
 */
export interface DBClusterLakeVersionArgs {
    /**
     * The ID of the backup set that you want to use to restore data.
     */
    backupSetId?: pulumi.Input<string>;
    /**
     * The computing resources of the cluster.
     */
    computeResource?: pulumi.Input<string>;
    /**
     * The description of the cluster.
     */
    dbClusterDescription?: pulumi.Input<string>;
    /**
     * The version of the cluster. Valid values: `5.0`.
     */
    dbClusterVersion: pulumi.Input<string>;
    /**
     * Specifies whether to enable disk encryption. Valid values: `true`, `false`.
     */
    diskEncryption?: pulumi.Input<boolean>;
    /**
     * Whether to enable default allocation of resources to userDefault resource groups.
     */
    enableDefaultResourceGroup?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable SSL encryption. Valid values: `true`, `false`.
     */
    enableSsl?: pulumi.Input<boolean>;
    /**
     * The ID of the key that is used to encrypt disk data. `kmsId` is valid only when `diskEncryption` is set to `true`.
     */
    kmsId?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`. **NOTE:** From version 1.245.0, `paymentType` can be set to `Subscription`.
     */
    paymentType: pulumi.Input<string>;
    /**
     * The subscription period of the subscription cluster. Valid values: `1` to `9`, `12`, `24`, `36`.
     */
    period?: pulumi.Input<number>;
    /**
     * The product form of the cluster. Valid values:
     * - `IntegrationForm`: Integrated.
     * - `LegacyForm`: Data Lakehouse Edition.
     */
    productForm?: pulumi.Input<string>;
    /**
     * The edition of the cluster. Valid values:
     * - `BasicVersion`: Basic Edition.
     * - `EnterpriseVersion`: Enterprise Edition.
     * > **NOTE:** `productVersion` must be specified only when `productForm` is set to `IntegrationForm`.
     */
    productVersion?: pulumi.Input<string>;
    /**
     * The number of reserved resource nodes.
     */
    reservedNodeCount?: pulumi.Input<number>;
    /**
     * The specifications of reserved resource nodes.
     */
    reservedNodeSize?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The point in time to which you want to restore data from the backup set.
     */
    restoreToTime?: pulumi.Input<string>;
    /**
     * The method that you want to use to restore data. Valid values:
     */
    restoreType?: pulumi.Input<string>;
    /**
     * The ID of the secondary zone.
     */
    secondaryVswitchId?: pulumi.Input<string>;
    /**
     * The ID of the secondary vSwitch.
     */
    secondaryZoneId?: pulumi.Input<string>;
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     */
    securityIps?: pulumi.Input<string>;
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     */
    sourceDbClusterId?: pulumi.Input<string>;
    /**
     * The storage resources of the cluster.
     */
    storageResource?: pulumi.Input<string>;
    /**
     * The vpc ID of the resource.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The zone ID of the resource.
     */
    zoneId: pulumi.Input<string>;
}
