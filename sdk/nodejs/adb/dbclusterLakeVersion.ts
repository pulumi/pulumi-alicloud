// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.
 *
 * For information about AnalyticDB for MySQL (ADB) DB Cluster Lake Version and how to use it, see [What is DB Cluster Lake Version](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/developer-reference/api-adb-2021-12-01-createdbcluster).
 *
 * > **NOTE:** Available since v1.190.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultZones = alicloud.adb.getZones({});
 * const defaultNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultSwitches = Promise.all([defaultNetworks, defaultZones]).then(([defaultNetworks, defaultZones]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultNetworks.ids?.[0],
 *     zoneId: defaultZones.ids?.[0],
 * }));
 * const defaultDBClusterLakeVersion = new alicloud.adb.DBClusterLakeVersion("defaultDBClusterLakeVersion", {
 *     dbClusterVersion: "5.0",
 *     vpcId: defaultNetworks.then(defaultNetworks => defaultNetworks.ids?.[0]),
 *     vswitchId: defaultSwitches.then(defaultSwitches => defaultSwitches.ids?.[0]),
 *     zoneId: defaultZones.then(defaultZones => defaultZones.ids?.[0]),
 *     computeResource: "16ACU",
 *     storageResource: "0ACU",
 *     paymentType: "PayAsYouGo",
 *     enableDefaultResourceGroup: false,
 * });
 * ```
 *
 * ## Import
 *
 * AnalyticDB for MySQL (ADB) DB Cluster Lake Version can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion example <id>
 * ```
 */
export class DBClusterLakeVersion extends pulumi.CustomResource {
    /**
     * Get an existing DBClusterLakeVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DBClusterLakeVersionState, opts?: pulumi.CustomResourceOptions): DBClusterLakeVersion {
        return new DBClusterLakeVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion';

    /**
     * Returns true if the given object is an instance of DBClusterLakeVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DBClusterLakeVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DBClusterLakeVersion.__pulumiType;
    }

    /**
     * The ID of the backup set that you want to use to restore data.
     */
    public readonly backupSetId!: pulumi.Output<string | undefined>;
    /**
     * The name of the service.
     */
    public /*out*/ readonly commodityCode!: pulumi.Output<string>;
    /**
     * The computing resources of the cluster.
     */
    public readonly computeResource!: pulumi.Output<string>;
    /**
     * The endpoint of the cluster.
     */
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    /**
     * The createTime of the cluster.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the cluster.
     */
    public readonly dbClusterDescription!: pulumi.Output<string>;
    /**
     * The version of the cluster. Valid values: `5.0`.
     */
    public readonly dbClusterVersion!: pulumi.Output<string>;
    /**
     * Whether to enable default allocation of resources to userDefault resource groups.
     */
    public readonly enableDefaultResourceGroup!: pulumi.Output<boolean | undefined>;
    /**
     * The engine of the database.
     */
    public /*out*/ readonly engine!: pulumi.Output<string>;
    /**
     * The engine version of the database.
     */
    public /*out*/ readonly engineVersion!: pulumi.Output<string>;
    /**
     * The time when the cluster expires.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * Indicates whether the cluster has expired.
     */
    public /*out*/ readonly expired!: pulumi.Output<string>;
    /**
     * The lock mode of the cluster.
     */
    public /*out*/ readonly lockMode!: pulumi.Output<string>;
    /**
     * The reason why the cluster is locked.
     */
    public /*out*/ readonly lockReason!: pulumi.Output<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The port that is used to access the cluster.
     */
    public /*out*/ readonly port!: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The point in time to which you want to restore data from the backup set.
     */
    public readonly restoreToTime!: pulumi.Output<string | undefined>;
    /**
     * The method that you want to use to restore data. Valid values:
     */
    public readonly restoreType!: pulumi.Output<string | undefined>;
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     */
    public readonly securityIps!: pulumi.Output<string>;
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     */
    public readonly sourceDbClusterId!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The storage resources of the cluster.
     */
    public readonly storageResource!: pulumi.Output<string>;
    /**
     * The vpc ID of the resource.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The ID of the vSwitch.
     */
    public readonly vswitchId!: pulumi.Output<string>;
    /**
     * The zone ID of the resource.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a DBClusterLakeVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DBClusterLakeVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DBClusterLakeVersionArgs | DBClusterLakeVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DBClusterLakeVersionState | undefined;
            resourceInputs["backupSetId"] = state ? state.backupSetId : undefined;
            resourceInputs["commodityCode"] = state ? state.commodityCode : undefined;
            resourceInputs["computeResource"] = state ? state.computeResource : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dbClusterDescription"] = state ? state.dbClusterDescription : undefined;
            resourceInputs["dbClusterVersion"] = state ? state.dbClusterVersion : undefined;
            resourceInputs["enableDefaultResourceGroup"] = state ? state.enableDefaultResourceGroup : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["expired"] = state ? state.expired : undefined;
            resourceInputs["lockMode"] = state ? state.lockMode : undefined;
            resourceInputs["lockReason"] = state ? state.lockReason : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["restoreToTime"] = state ? state.restoreToTime : undefined;
            resourceInputs["restoreType"] = state ? state.restoreType : undefined;
            resourceInputs["securityIps"] = state ? state.securityIps : undefined;
            resourceInputs["sourceDbClusterId"] = state ? state.sourceDbClusterId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageResource"] = state ? state.storageResource : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as DBClusterLakeVersionArgs | undefined;
            if ((!args || args.computeResource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeResource'");
            }
            if ((!args || args.dbClusterVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterVersion'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.storageResource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageResource'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["backupSetId"] = args ? args.backupSetId : undefined;
            resourceInputs["computeResource"] = args ? args.computeResource : undefined;
            resourceInputs["dbClusterDescription"] = args ? args.dbClusterDescription : undefined;
            resourceInputs["dbClusterVersion"] = args ? args.dbClusterVersion : undefined;
            resourceInputs["enableDefaultResourceGroup"] = args ? args.enableDefaultResourceGroup : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["restoreToTime"] = args ? args.restoreToTime : undefined;
            resourceInputs["restoreType"] = args ? args.restoreType : undefined;
            resourceInputs["securityIps"] = args ? args.securityIps : undefined;
            resourceInputs["sourceDbClusterId"] = args ? args.sourceDbClusterId : undefined;
            resourceInputs["storageResource"] = args ? args.storageResource : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["commodityCode"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["engineVersion"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["expired"] = undefined /*out*/;
            resourceInputs["lockMode"] = undefined /*out*/;
            resourceInputs["lockReason"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DBClusterLakeVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DBClusterLakeVersion resources.
 */
export interface DBClusterLakeVersionState {
    /**
     * The ID of the backup set that you want to use to restore data.
     */
    backupSetId?: pulumi.Input<string>;
    /**
     * The name of the service.
     */
    commodityCode?: pulumi.Input<string>;
    /**
     * The computing resources of the cluster.
     */
    computeResource?: pulumi.Input<string>;
    /**
     * The endpoint of the cluster.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The createTime of the cluster.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the cluster.
     */
    dbClusterDescription?: pulumi.Input<string>;
    /**
     * The version of the cluster. Valid values: `5.0`.
     */
    dbClusterVersion?: pulumi.Input<string>;
    /**
     * Whether to enable default allocation of resources to userDefault resource groups.
     */
    enableDefaultResourceGroup?: pulumi.Input<boolean>;
    /**
     * The engine of the database.
     */
    engine?: pulumi.Input<string>;
    /**
     * The engine version of the database.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The time when the cluster expires.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Indicates whether the cluster has expired.
     */
    expired?: pulumi.Input<string>;
    /**
     * The lock mode of the cluster.
     */
    lockMode?: pulumi.Input<string>;
    /**
     * The reason why the cluster is locked.
     */
    lockReason?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The port that is used to access the cluster.
     */
    port?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The point in time to which you want to restore data from the backup set.
     */
    restoreToTime?: pulumi.Input<string>;
    /**
     * The method that you want to use to restore data. Valid values:
     */
    restoreType?: pulumi.Input<string>;
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     */
    securityIps?: pulumi.Input<string>;
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     */
    sourceDbClusterId?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage resources of the cluster.
     */
    storageResource?: pulumi.Input<string>;
    /**
     * The vpc ID of the resource.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID of the resource.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DBClusterLakeVersion resource.
 */
export interface DBClusterLakeVersionArgs {
    /**
     * The ID of the backup set that you want to use to restore data.
     */
    backupSetId?: pulumi.Input<string>;
    /**
     * The computing resources of the cluster.
     */
    computeResource: pulumi.Input<string>;
    /**
     * The description of the cluster.
     */
    dbClusterDescription?: pulumi.Input<string>;
    /**
     * The version of the cluster. Valid values: `5.0`.
     */
    dbClusterVersion: pulumi.Input<string>;
    /**
     * Whether to enable default allocation of resources to userDefault resource groups.
     */
    enableDefaultResourceGroup?: pulumi.Input<boolean>;
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`.
     */
    paymentType: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The point in time to which you want to restore data from the backup set.
     */
    restoreToTime?: pulumi.Input<string>;
    /**
     * The method that you want to use to restore data. Valid values:
     */
    restoreType?: pulumi.Input<string>;
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     */
    securityIps?: pulumi.Input<string>;
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     */
    sourceDbClusterId?: pulumi.Input<string>;
    /**
     * The storage resources of the cluster.
     */
    storageResource: pulumi.Input<string>;
    /**
     * The vpc ID of the resource.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The zone ID of the resource.
     */
    zoneId: pulumi.Input<string>;
}
