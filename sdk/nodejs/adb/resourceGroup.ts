// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Adb Resource Group resource.
 *
 * For information about Adb Resource Group and how to use it, see [What is Adb Resource Group](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/latest/api-doc-adb-2019-03-15-api-doc-createdbresourcegroup).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const defaultZones = alicloud.adb.getZones({});
 * const defaultResourceGroups = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "10.4.0.0/24",
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     vswitchName: name,
 * });
 * const defaultDBCluster = new alicloud.adb.DBCluster("defaultDBCluster", {
 *     computeResource: "48Core192GBNEW",
 *     dbClusterCategory: "MixedStorage",
 *     dbClusterVersion: "3.0",
 *     dbNodeClass: "E32",
 *     dbNodeCount: 1,
 *     dbNodeStorage: 100,
 *     description: name,
 *     elasticIoResource: 1,
 *     maintainTime: "04:00Z-05:00Z",
 *     mode: "flexible",
 *     paymentType: "PayAsYouGo",
 *     resourceGroupId: defaultResourceGroups.then(defaultResourceGroups => defaultResourceGroups.ids?.[0]),
 *     securityIps: [
 *         "10.168.1.12",
 *         "10.168.1.11",
 *     ],
 *     vpcId: defaultNetwork.id,
 *     vswitchId: defaultSwitch.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 * });
 * const defaultResourceGroup = new alicloud.adb.ResourceGroup("defaultResourceGroup", {
 *     groupName: "TF_EXAMPLE",
 *     groupType: "batch",
 *     nodeNum: 1,
 *     dbClusterId: defaultDBCluster.id,
 * });
 * ```
 *
 * ## Import
 *
 * Adb Resource Group can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:adb/resourceGroup:ResourceGroup example <db_cluster_id>:<group_name>
 * ```
 */
export class ResourceGroup extends pulumi.CustomResource {
    /**
     * Get an existing ResourceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceGroupState, opts?: pulumi.CustomResourceOptions): ResourceGroup {
        return new ResourceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:adb/resourceGroup:ResourceGroup';

    /**
     * Returns true if the given object is an instance of ResourceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceGroup.__pulumiType;
    }

    /**
     * Creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * DB cluster id.
     */
    public readonly dbClusterId!: pulumi.Output<string>;
    /**
     * The name of the resource pool. The group name must be 2 to 30 characters in length, and can contain upper case letters, digits, and underscore(_).
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * Query type, value description:
     * * **etl**: Batch query mode.
     * * **interactive**: interactive Query mode.
     * * **default_type**: the default query mode.
     */
    public readonly groupType!: pulumi.Output<string>;
    /**
     * The number of nodes. The default number of nodes is 0. The number of nodes must be less than or equal to the number of nodes whose resource name is USER_DEFAULT.
     */
    public readonly nodeNum!: pulumi.Output<number>;
    /**
     * Update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Binding User.
     */
    public /*out*/ readonly user!: pulumi.Output<string>;

    /**
     * Create a ResourceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceGroupArgs | ResourceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceGroupState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dbClusterId"] = state ? state.dbClusterId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["groupType"] = state ? state.groupType : undefined;
            resourceInputs["nodeNum"] = state ? state.nodeNum : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        } else {
            const args = argsOrState as ResourceGroupArgs | undefined;
            if ((!args || args.dbClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterId'");
            }
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            resourceInputs["dbClusterId"] = args ? args.dbClusterId : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["groupType"] = args ? args.groupType : undefined;
            resourceInputs["nodeNum"] = args ? args.nodeNum : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["user"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceGroup resources.
 */
export interface ResourceGroupState {
    /**
     * Creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * DB cluster id.
     */
    dbClusterId?: pulumi.Input<string>;
    /**
     * The name of the resource pool. The group name must be 2 to 30 characters in length, and can contain upper case letters, digits, and underscore(_).
     */
    groupName?: pulumi.Input<string>;
    /**
     * Query type, value description:
     * * **etl**: Batch query mode.
     * * **interactive**: interactive Query mode.
     * * **default_type**: the default query mode.
     */
    groupType?: pulumi.Input<string>;
    /**
     * The number of nodes. The default number of nodes is 0. The number of nodes must be less than or equal to the number of nodes whose resource name is USER_DEFAULT.
     */
    nodeNum?: pulumi.Input<number>;
    /**
     * Update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Binding User.
     */
    user?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceGroup resource.
 */
export interface ResourceGroupArgs {
    /**
     * DB cluster id.
     */
    dbClusterId: pulumi.Input<string>;
    /**
     * The name of the resource pool. The group name must be 2 to 30 characters in length, and can contain upper case letters, digits, and underscore(_).
     */
    groupName: pulumi.Input<string>;
    /**
     * Query type, value description:
     * * **etl**: Batch query mode.
     * * **interactive**: interactive Query mode.
     * * **default_type**: the default query mode.
     */
    groupType?: pulumi.Input<string>;
    /**
     * The number of nodes. The default number of nodes is 0. The number of nodes must be less than or equal to the number of nodes whose resource name is USER_DEFAULT.
     */
    nodeNum?: pulumi.Input<number>;
}
