// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Adb DBCluster Lake Versions of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.190.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.adb.getZones({});
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.ids?.[0],
 * }));
 * const defaultDBClusterLakeVersion = new alicloud.adb.DBClusterLakeVersion("default", {
 *     dbClusterVersion: "5.0",
 *     vpcId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.ids?.[0]),
 *     zoneId: _default.then(_default => _default.ids?.[0]),
 *     computeResource: "16ACU",
 *     storageResource: "0ACU",
 *     paymentType: "PayAsYouGo",
 *     enableDefaultResourceGroup: false,
 * });
 * const ids = alicloud.adb.getDBClusterLakeVersionsOutput({
 *     ids: [defaultDBClusterLakeVersion.id],
 * });
 * export const adbDbClusterLakeVersionId1 = ids.apply(ids => ids.versions?.[0]?.id);
 * ```
 */
export function getDBClusterLakeVersions(args?: GetDBClusterLakeVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDBClusterLakeVersionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:adb/getDBClusterLakeVersions:getDBClusterLakeVersions", {
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDBClusterLakeVersions.
 */
export interface GetDBClusterLakeVersionsArgs {
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of DBCluster IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The status of the resource. Valid values: `Preparing`, `Creating`, `Restoring`, `Running`, `Deleting`, `ClassChanging`, `NetAddressCreating`, `NetAddressDeleting`.
     */
    status?: string;
}

/**
 * A collection of values returned by getDBClusterLakeVersions.
 */
export interface GetDBClusterLakeVersionsResult {
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * The status of the resource.
     */
    readonly status?: string;
    /**
     * A list of Adb Db Clusters. Each element contains the following attributes:
     */
    readonly versions: outputs.adb.GetDBClusterLakeVersionsVersion[];
}
/**
 * This data source provides the Adb DBCluster Lake Versions of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.190.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.adb.getZones({});
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.ids?.[0],
 * }));
 * const defaultDBClusterLakeVersion = new alicloud.adb.DBClusterLakeVersion("default", {
 *     dbClusterVersion: "5.0",
 *     vpcId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.ids?.[0]),
 *     zoneId: _default.then(_default => _default.ids?.[0]),
 *     computeResource: "16ACU",
 *     storageResource: "0ACU",
 *     paymentType: "PayAsYouGo",
 *     enableDefaultResourceGroup: false,
 * });
 * const ids = alicloud.adb.getDBClusterLakeVersionsOutput({
 *     ids: [defaultDBClusterLakeVersion.id],
 * });
 * export const adbDbClusterLakeVersionId1 = ids.apply(ids => ids.versions?.[0]?.id);
 * ```
 */
export function getDBClusterLakeVersionsOutput(args?: GetDBClusterLakeVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDBClusterLakeVersionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:adb/getDBClusterLakeVersions:getDBClusterLakeVersions", {
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDBClusterLakeVersions.
 */
export interface GetDBClusterLakeVersionsOutputArgs {
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of DBCluster IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `Preparing`, `Creating`, `Restoring`, `Running`, `Deleting`, `ClassChanging`, `NetAddressCreating`, `NetAddressDeleting`.
     */
    status?: pulumi.Input<string>;
}
