// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Amqp Queues of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.127.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.amqp.getQueues({
 *     instanceId: "amqp-abc12345",
 *     virtualHostName: "my-VirtualHost",
 *     ids: [
 *         "my-Queue-1",
 *         "my-Queue-2",
 *     ],
 * });
 * export const amqpQueueId1 = ids.then(ids => ids.queues?[0]?.id);
 * const nameRegex = alicloud.amqp.getQueues({
 *     instanceId: "amqp-abc12345",
 *     virtualHostName: "my-VirtualHost",
 *     nameRegex: "^my-Queue",
 * });
 * export const amqpQueueId2 = nameRegex.then(nameRegex => nameRegex.queues?[0]?.id);
 * ```
 */
export function getQueues(args: GetQueuesArgs, opts?: pulumi.InvokeOptions): Promise<GetQueuesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:amqp/getQueues:getQueues", {
        "ids": args.ids,
        "instanceId": args.instanceId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "virtualHostName": args.virtualHostName,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueues.
 */
export interface GetQueuesArgs {
    /**
     * A list of Queue IDs. Its element value is same as Queue Name.
     */
    ids?: string[];
    /**
     * The ID of the instance.
     */
    instanceId: string;
    /**
     * A regex string to filter results by Queue name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The name of the virtual host.
     */
    virtualHostName: string;
}

/**
 * A collection of values returned by getQueues.
 */
export interface GetQueuesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly queues: outputs.amqp.GetQueuesQueue[];
    readonly virtualHostName: string;
}

export function getQueuesOutput(args: GetQueuesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueuesResult> {
    return pulumi.output(args).apply(a => getQueues(a, opts))
}

/**
 * A collection of arguments for invoking getQueues.
 */
export interface GetQueuesOutputArgs {
    /**
     * A list of Queue IDs. Its element value is same as Queue Name.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * A regex string to filter results by Queue name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the virtual host.
     */
    virtualHostName: pulumi.Input<string>;
}
