// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Cloud Architect Design Tools (BPStudio) Applications of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.192.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.bp.getStudioApplications({
 *     ids: ["example_id"],
 * });
 * export const bpStudioApplicationId1 = ids.then(ids => ids.applications?.[0]?.id);
 * const nameRegex = alicloud.bp.getStudioApplications({
 *     nameRegex: "^my-Application",
 * });
 * export const bpStudioApplicationId2 = nameRegex.then(nameRegex => nameRegex.applications?.[0]?.id);
 * ```
 */
export function getStudioApplications(args?: GetStudioApplicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetStudioApplicationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:bp/getStudioApplications:getStudioApplications", {
        "ids": args.ids,
        "keyword": args.keyword,
        "maxResults": args.maxResults,
        "nameRegex": args.nameRegex,
        "orderType": args.orderType,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getStudioApplications.
 */
export interface GetStudioApplicationsArgs {
    /**
     * A list of Application IDs.
     */
    ids?: string[];
    /**
     * The keyword of the Application.
     */
    keyword?: string;
    maxResults?: number;
    /**
     * A regex string to filter results by Application name.
     */
    nameRegex?: string;
    /**
     * The order type of the Application. Valid values:
     */
    orderType?: number;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The status of the Application. Valid values: `success`, `release`.
     */
    status?: string;
}

/**
 * A collection of values returned by getStudioApplications.
 */
export interface GetStudioApplicationsResult {
    /**
     * A list of Cloud Architect Design Tools (BPStudio) Applications. Each element contains the following attributes:
     */
    readonly applications: outputs.bp.GetStudioApplicationsApplication[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly keyword?: string;
    readonly maxResults?: number;
    readonly nameRegex?: string;
    /**
     * A list of Application names.
     */
    readonly names: string[];
    readonly orderType?: number;
    readonly outputFile?: string;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * The status of the Application.
     */
    readonly status?: string;
}
/**
 * This data source provides the Cloud Architect Design Tools (BPStudio) Applications of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.192.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.bp.getStudioApplications({
 *     ids: ["example_id"],
 * });
 * export const bpStudioApplicationId1 = ids.then(ids => ids.applications?.[0]?.id);
 * const nameRegex = alicloud.bp.getStudioApplications({
 *     nameRegex: "^my-Application",
 * });
 * export const bpStudioApplicationId2 = nameRegex.then(nameRegex => nameRegex.applications?.[0]?.id);
 * ```
 */
export function getStudioApplicationsOutput(args?: GetStudioApplicationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStudioApplicationsResult> {
    return pulumi.output(args).apply((a: any) => getStudioApplications(a, opts))
}

/**
 * A collection of arguments for invoking getStudioApplications.
 */
export interface GetStudioApplicationsOutputArgs {
    /**
     * A list of Application IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The keyword of the Application.
     */
    keyword?: pulumi.Input<string>;
    maxResults?: pulumi.Input<number>;
    /**
     * A regex string to filter results by Application name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The order type of the Application. Valid values:
     */
    orderType?: pulumi.Input<number>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the Application. Valid values: `success`, `release`.
     */
    status?: pulumi.Input<string>;
}
