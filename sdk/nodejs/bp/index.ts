// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetStudioApplicationsArgs, GetStudioApplicationsResult, GetStudioApplicationsOutputArgs } from "./getStudioApplications";
export const getStudioApplications: typeof import("./getStudioApplications").getStudioApplications = null as any;
export const getStudioApplicationsOutput: typeof import("./getStudioApplications").getStudioApplicationsOutput = null as any;
utilities.lazyLoad(exports, ["getStudioApplications","getStudioApplicationsOutput"], () => require("./getStudioApplications"));

export { StudioApplicationArgs, StudioApplicationState } from "./studioApplication";
export type StudioApplication = import("./studioApplication").StudioApplication;
export const StudioApplication: typeof import("./studioApplication").StudioApplication = null as any;
utilities.lazyLoad(exports, ["StudioApplication"], () => require("./studioApplication"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:bp/studioApplication:StudioApplication":
                return new StudioApplication(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "bp/studioApplication", _module)
