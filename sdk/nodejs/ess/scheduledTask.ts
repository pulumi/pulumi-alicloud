// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ESS schedule task can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ess/scheduledTask:ScheduledTask example abc123456
 * ```
 */
export class ScheduledTask extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduledTaskState, opts?: pulumi.CustomResourceOptions): ScheduledTask {
        return new ScheduledTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ess/scheduledTask:ScheduledTask';

    /**
     * Returns true if the given object is an instance of ScheduledTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScheduledTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledTask.__pulumiType;
    }

    /**
     * Description of the scheduled task, which is 2-200 characters (English or Chinese) long.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The expected number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group. **NOTE:** You must specify the `DesiredCapacity` parameter when you create the scaling group.
     */
    public readonly desiredCapacity!: pulumi.Output<number | undefined>;
    /**
     * The time period during which a failed scheduled task is retried. Unit: seconds. Valid values: 0 to 21600. Default value: 600
     */
    public readonly launchExpirationTime!: pulumi.Output<number | undefined>;
    /**
     * The time at which the scheduled task is triggered. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. 
     * The time must be in UTC. You cannot enter a time point later than 90 days from the date of scheduled task creation.
     * If the `recurrenceType` parameter is specified, the task is executed repeatedly at the time specified by LaunchTime.
     * Otherwise, the task is only executed once at the date and time specified by LaunchTime.
     */
    public readonly launchTime!: pulumi.Output<string | undefined>;
    /**
     * The maximum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
     */
    public readonly maxValue!: pulumi.Output<number | undefined>;
    /**
     * The minimum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
     */
    public readonly minValue!: pulumi.Output<number | undefined>;
    /**
     * Specifies the end time after which the scheduled task is no longer repeated. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mm:ssZ format. 
     * The time must be in UTC. You cannot enter a time point later than 365 days from the date of scheduled task creation. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time.
     */
    public readonly recurrenceEndTime!: pulumi.Output<string>;
    /**
     * Specifies the recurrence type of the scheduled task. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. Valid values:
     * - Daily: The scheduled task is executed once every specified number of days.
     * - Weekly: The scheduled task is executed on each specified day of a week.
     * - Monthly: The scheduled task is executed on each specified day of a month.
     * - Cron: (Available in 1.60.0+) The scheduled task is executed based on the specified cron expression.
     */
    public readonly recurrenceType!: pulumi.Output<string>;
    /**
     * Specifies how often a scheduled task recurs. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. The valid value depends on `recurrenceType`
     * - Daily: You can enter one value. Valid values: 1 to 31.
     * - Weekly: You can enter multiple values and separate them with commas (,). For example, the values 0 to 6 correspond to the days of the week in sequence from Sunday to Saturday.
     * - Monthly: You can enter two values in A-B format. Valid values of A and B: 1 to 31. The value of B must be greater than or equal to the value of A.
     * - Cron: You can enter a cron expression which is written in UTC and consists of five fields: minute, hour, day of month (date), month, and day of week. The expression can contain wildcard characters including commas (,), question marks (?), hyphens (-), asterisks (*), number signs (#), forward slashes (/), and the L and W letters.
     */
    public readonly recurrenceValue!: pulumi.Output<string>;
    /**
     * The ID of the scaling group where the number of instances is modified when the scheduled task is triggered. After the `ScalingGroupId` parameter is specified, the scaling method of the scheduled task is to specify the number of instances in a scaling group. You must specify at least one of the following parameters: `MinValue`, `MaxValue`, and `DesiredCapacity`. **NOTE:** You cannot specify `scheduledAction` and `scalingGroupId` at the same time.
     */
    public readonly scalingGroupId!: pulumi.Output<string>;
    /**
     * The operation to be performed when a scheduled task is triggered. Enter the unique identifier of a scaling rule. **NOTE:** You cannot specify `scheduledAction` and `scalingGroupId` at the same time.
     */
    public readonly scheduledAction!: pulumi.Output<string | undefined>;
    /**
     * Display name of the scheduled task, which must be 2-40 characters (English or Chinese) long.
     */
    public readonly scheduledTaskName!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to start the scheduled task. Default to true.
     */
    public readonly taskEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ScheduledTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ScheduledTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduledTaskArgs | ScheduledTaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduledTaskState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            resourceInputs["launchExpirationTime"] = state ? state.launchExpirationTime : undefined;
            resourceInputs["launchTime"] = state ? state.launchTime : undefined;
            resourceInputs["maxValue"] = state ? state.maxValue : undefined;
            resourceInputs["minValue"] = state ? state.minValue : undefined;
            resourceInputs["recurrenceEndTime"] = state ? state.recurrenceEndTime : undefined;
            resourceInputs["recurrenceType"] = state ? state.recurrenceType : undefined;
            resourceInputs["recurrenceValue"] = state ? state.recurrenceValue : undefined;
            resourceInputs["scalingGroupId"] = state ? state.scalingGroupId : undefined;
            resourceInputs["scheduledAction"] = state ? state.scheduledAction : undefined;
            resourceInputs["scheduledTaskName"] = state ? state.scheduledTaskName : undefined;
            resourceInputs["taskEnabled"] = state ? state.taskEnabled : undefined;
        } else {
            const args = argsOrState as ScheduledTaskArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            resourceInputs["launchExpirationTime"] = args ? args.launchExpirationTime : undefined;
            resourceInputs["launchTime"] = args ? args.launchTime : undefined;
            resourceInputs["maxValue"] = args ? args.maxValue : undefined;
            resourceInputs["minValue"] = args ? args.minValue : undefined;
            resourceInputs["recurrenceEndTime"] = args ? args.recurrenceEndTime : undefined;
            resourceInputs["recurrenceType"] = args ? args.recurrenceType : undefined;
            resourceInputs["recurrenceValue"] = args ? args.recurrenceValue : undefined;
            resourceInputs["scalingGroupId"] = args ? args.scalingGroupId : undefined;
            resourceInputs["scheduledAction"] = args ? args.scheduledAction : undefined;
            resourceInputs["scheduledTaskName"] = args ? args.scheduledTaskName : undefined;
            resourceInputs["taskEnabled"] = args ? args.taskEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScheduledTask.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScheduledTask resources.
 */
export interface ScheduledTaskState {
    /**
     * Description of the scheduled task, which is 2-200 characters (English or Chinese) long.
     */
    description?: pulumi.Input<string>;
    /**
     * The expected number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group. **NOTE:** You must specify the `DesiredCapacity` parameter when you create the scaling group.
     */
    desiredCapacity?: pulumi.Input<number>;
    /**
     * The time period during which a failed scheduled task is retried. Unit: seconds. Valid values: 0 to 21600. Default value: 600
     */
    launchExpirationTime?: pulumi.Input<number>;
    /**
     * The time at which the scheduled task is triggered. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. 
     * The time must be in UTC. You cannot enter a time point later than 90 days from the date of scheduled task creation.
     * If the `recurrenceType` parameter is specified, the task is executed repeatedly at the time specified by LaunchTime.
     * Otherwise, the task is only executed once at the date and time specified by LaunchTime.
     */
    launchTime?: pulumi.Input<string>;
    /**
     * The maximum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
     */
    maxValue?: pulumi.Input<number>;
    /**
     * The minimum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
     */
    minValue?: pulumi.Input<number>;
    /**
     * Specifies the end time after which the scheduled task is no longer repeated. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mm:ssZ format. 
     * The time must be in UTC. You cannot enter a time point later than 365 days from the date of scheduled task creation. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time.
     */
    recurrenceEndTime?: pulumi.Input<string>;
    /**
     * Specifies the recurrence type of the scheduled task. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. Valid values:
     * - Daily: The scheduled task is executed once every specified number of days.
     * - Weekly: The scheduled task is executed on each specified day of a week.
     * - Monthly: The scheduled task is executed on each specified day of a month.
     * - Cron: (Available in 1.60.0+) The scheduled task is executed based on the specified cron expression.
     */
    recurrenceType?: pulumi.Input<string>;
    /**
     * Specifies how often a scheduled task recurs. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. The valid value depends on `recurrenceType`
     * - Daily: You can enter one value. Valid values: 1 to 31.
     * - Weekly: You can enter multiple values and separate them with commas (,). For example, the values 0 to 6 correspond to the days of the week in sequence from Sunday to Saturday.
     * - Monthly: You can enter two values in A-B format. Valid values of A and B: 1 to 31. The value of B must be greater than or equal to the value of A.
     * - Cron: You can enter a cron expression which is written in UTC and consists of five fields: minute, hour, day of month (date), month, and day of week. The expression can contain wildcard characters including commas (,), question marks (?), hyphens (-), asterisks (*), number signs (#), forward slashes (/), and the L and W letters.
     */
    recurrenceValue?: pulumi.Input<string>;
    /**
     * The ID of the scaling group where the number of instances is modified when the scheduled task is triggered. After the `ScalingGroupId` parameter is specified, the scaling method of the scheduled task is to specify the number of instances in a scaling group. You must specify at least one of the following parameters: `MinValue`, `MaxValue`, and `DesiredCapacity`. **NOTE:** You cannot specify `scheduledAction` and `scalingGroupId` at the same time.
     */
    scalingGroupId?: pulumi.Input<string>;
    /**
     * The operation to be performed when a scheduled task is triggered. Enter the unique identifier of a scaling rule. **NOTE:** You cannot specify `scheduledAction` and `scalingGroupId` at the same time.
     */
    scheduledAction?: pulumi.Input<string>;
    /**
     * Display name of the scheduled task, which must be 2-40 characters (English or Chinese) long.
     */
    scheduledTaskName?: pulumi.Input<string>;
    /**
     * Specifies whether to start the scheduled task. Default to true.
     */
    taskEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ScheduledTask resource.
 */
export interface ScheduledTaskArgs {
    /**
     * Description of the scheduled task, which is 2-200 characters (English or Chinese) long.
     */
    description?: pulumi.Input<string>;
    /**
     * The expected number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group. **NOTE:** You must specify the `DesiredCapacity` parameter when you create the scaling group.
     */
    desiredCapacity?: pulumi.Input<number>;
    /**
     * The time period during which a failed scheduled task is retried. Unit: seconds. Valid values: 0 to 21600. Default value: 600
     */
    launchExpirationTime?: pulumi.Input<number>;
    /**
     * The time at which the scheduled task is triggered. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. 
     * The time must be in UTC. You cannot enter a time point later than 90 days from the date of scheduled task creation.
     * If the `recurrenceType` parameter is specified, the task is executed repeatedly at the time specified by LaunchTime.
     * Otherwise, the task is only executed once at the date and time specified by LaunchTime.
     */
    launchTime?: pulumi.Input<string>;
    /**
     * The maximum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
     */
    maxValue?: pulumi.Input<number>;
    /**
     * The minimum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
     */
    minValue?: pulumi.Input<number>;
    /**
     * Specifies the end time after which the scheduled task is no longer repeated. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mm:ssZ format. 
     * The time must be in UTC. You cannot enter a time point later than 365 days from the date of scheduled task creation. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time.
     */
    recurrenceEndTime?: pulumi.Input<string>;
    /**
     * Specifies the recurrence type of the scheduled task. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. Valid values:
     * - Daily: The scheduled task is executed once every specified number of days.
     * - Weekly: The scheduled task is executed on each specified day of a week.
     * - Monthly: The scheduled task is executed on each specified day of a month.
     * - Cron: (Available in 1.60.0+) The scheduled task is executed based on the specified cron expression.
     */
    recurrenceType?: pulumi.Input<string>;
    /**
     * Specifies how often a scheduled task recurs. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. The valid value depends on `recurrenceType`
     * - Daily: You can enter one value. Valid values: 1 to 31.
     * - Weekly: You can enter multiple values and separate them with commas (,). For example, the values 0 to 6 correspond to the days of the week in sequence from Sunday to Saturday.
     * - Monthly: You can enter two values in A-B format. Valid values of A and B: 1 to 31. The value of B must be greater than or equal to the value of A.
     * - Cron: You can enter a cron expression which is written in UTC and consists of five fields: minute, hour, day of month (date), month, and day of week. The expression can contain wildcard characters including commas (,), question marks (?), hyphens (-), asterisks (*), number signs (#), forward slashes (/), and the L and W letters.
     */
    recurrenceValue?: pulumi.Input<string>;
    /**
     * The ID of the scaling group where the number of instances is modified when the scheduled task is triggered. After the `ScalingGroupId` parameter is specified, the scaling method of the scheduled task is to specify the number of instances in a scaling group. You must specify at least one of the following parameters: `MinValue`, `MaxValue`, and `DesiredCapacity`. **NOTE:** You cannot specify `scheduledAction` and `scalingGroupId` at the same time.
     */
    scalingGroupId?: pulumi.Input<string>;
    /**
     * The operation to be performed when a scheduled task is triggered. Enter the unique identifier of a scaling rule. **NOTE:** You cannot specify `scheduledAction` and `scalingGroupId` at the same time.
     */
    scheduledAction?: pulumi.Input<string>;
    /**
     * Display name of the scheduled task, which must be 2-40 characters (English or Chinese) long.
     */
    scheduledTaskName?: pulumi.Input<string>;
    /**
     * Specifies whether to start the scheduled task. Default to true.
     */
    taskEnabled?: pulumi.Input<boolean>;
}
