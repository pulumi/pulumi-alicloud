// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Attaches/Detaches vserver groups to a specified scaling group.
 *
 * > **NOTE:** The load balancer of which vserver groups belongs to must be in `active` status.
 *
 * > **NOTE:** If scaling group's network type is `VPC`, the vserver groups must be in the same `VPC`.
 *
 * > **NOTE:** A scaling group can have at most 5 vserver groups attached by default.
 *
 * > **NOTE:** Vserver groups and the default group of loadbalancer share the same backend server quota.
 *
 * > **NOTE:** When attach vserver groups to scaling group, existing ECS instances will be added to vserver groups; Instead, ECS instances will be removed from vserver group when detach.
 *
 * > **NOTE:** Detach action will be executed before attach action.
 *
 * > **NOTE:** Vserver group is defined uniquely by `loadbalancerId`, `vserverGroupId`, `port`.
 *
 * > **NOTE:** Modifing `weight` attribute means detach vserver group first and then, attach with new weight parameter.
 *
 * > **NOTE:** Available since v1.53.0.
 *
 * ## Import
 *
 * ESS vserver groups can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ess/scalingGroupVServerGroups:ScalingGroupVServerGroups example abc123456
 * ```
 */
export class ScalingGroupVServerGroups extends pulumi.CustomResource {
    /**
     * Get an existing ScalingGroupVServerGroups resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScalingGroupVServerGroupsState, opts?: pulumi.CustomResourceOptions): ScalingGroupVServerGroups {
        return new ScalingGroupVServerGroups(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ess/scalingGroupVServerGroups:ScalingGroupVServerGroups';

    /**
     * Returns true if the given object is an instance of ScalingGroupVServerGroups.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingGroupVServerGroups {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingGroupVServerGroups.__pulumiType;
    }

    /**
     * If instances of scaling group are attached/removed from slb backend server when attach/detach vserver group from scaling group. Default to true.
     */
    public readonly force!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the scaling group.
     */
    public readonly scalingGroupId!: pulumi.Output<string>;
    /**
     * A list of vserver groups attached on scaling group. See `vserverGroups` below.
     */
    public readonly vserverGroups!: pulumi.Output<outputs.ess.ScalingGroupVServerGroupsVserverGroup[]>;

    /**
     * Create a ScalingGroupVServerGroups resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingGroupVServerGroupsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScalingGroupVServerGroupsArgs | ScalingGroupVServerGroupsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScalingGroupVServerGroupsState | undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["scalingGroupId"] = state ? state.scalingGroupId : undefined;
            resourceInputs["vserverGroups"] = state ? state.vserverGroups : undefined;
        } else {
            const args = argsOrState as ScalingGroupVServerGroupsArgs | undefined;
            if ((!args || args.scalingGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingGroupId'");
            }
            if ((!args || args.vserverGroups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vserverGroups'");
            }
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["scalingGroupId"] = args ? args.scalingGroupId : undefined;
            resourceInputs["vserverGroups"] = args ? args.vserverGroups : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalingGroupVServerGroups.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScalingGroupVServerGroups resources.
 */
export interface ScalingGroupVServerGroupsState {
    /**
     * If instances of scaling group are attached/removed from slb backend server when attach/detach vserver group from scaling group. Default to true.
     */
    force?: pulumi.Input<boolean>;
    /**
     * ID of the scaling group.
     */
    scalingGroupId?: pulumi.Input<string>;
    /**
     * A list of vserver groups attached on scaling group. See `vserverGroups` below.
     */
    vserverGroups?: pulumi.Input<pulumi.Input<inputs.ess.ScalingGroupVServerGroupsVserverGroup>[]>;
}

/**
 * The set of arguments for constructing a ScalingGroupVServerGroups resource.
 */
export interface ScalingGroupVServerGroupsArgs {
    /**
     * If instances of scaling group are attached/removed from slb backend server when attach/detach vserver group from scaling group. Default to true.
     */
    force?: pulumi.Input<boolean>;
    /**
     * ID of the scaling group.
     */
    scalingGroupId: pulumi.Input<string>;
    /**
     * A list of vserver groups attached on scaling group. See `vserverGroups` below.
     */
    vserverGroups: pulumi.Input<pulumi.Input<inputs.ess.ScalingGroupVServerGroupsVserverGroup>[]>;
}
