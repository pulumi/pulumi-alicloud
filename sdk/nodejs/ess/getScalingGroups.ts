// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides available scaling group resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const scalinggroupsDs = pulumi.output(alicloud.ess.getScalingGroups({
 *     ids: [
 *         "scaling_group_id1",
 *         "scaling_group_id2",
 *     ],
 *     nameRegex: "scaling_group_name",
 * }));
 *
 * export const firstScalingGroup = scalinggroupsDs.groups[0].id;
 * ```
 */
export function getScalingGroups(args?: GetScalingGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetScalingGroupsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:ess/getScalingGroups:getScalingGroups", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getScalingGroups.
 */
export interface GetScalingGroupsArgs {
    /**
     * A list of scaling group IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter resulting scaling groups by name.
     */
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getScalingGroups.
 */
export interface GetScalingGroupsResult {
    /**
     * A list of scaling groups. Each element contains the following attributes:
     */
    readonly groups: outputs.ess.GetScalingGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of scaling group ids.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of scaling group names.
     */
    readonly names: string[];
    readonly outputFile?: string;
}

export function getScalingGroupsOutput(args?: GetScalingGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScalingGroupsResult> {
    return pulumi.output(args).apply(a => getScalingGroups(a, opts))
}

/**
 * A collection of arguments for invoking getScalingGroups.
 */
export interface GetScalingGroupsOutputArgs {
    /**
     * A list of scaling group IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter resulting scaling groups by name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
