// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a ESS alarm task resource.
 *
 * For information about ess alarm, see [CreateAlarm](https://www.alibabacloud.com/help/en/auto-scaling/latest/createalarm).
 *
 * > **NOTE:** Available since v1.15.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const myName = `${name}-${defaultInteger.result}`;
 * const _default = alicloud.getZones({
 *     availableDiskCategory: "cloud_efficiency",
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultGetInstanceTypes = _default.then(_default => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: _default.zones?.[0]?.id,
 *     cpuCoreCount: 2,
 *     memorySize: 4,
 * }));
 * const defaultGetImages = alicloud.ecs.getImages({
 *     nameRegex: "^ubuntu_18.*64",
 *     mostRecent: true,
 *     owners: "system",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: myName,
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     vswitchName: myName,
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: myName,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultSecurityGroupRule = new alicloud.ecs.SecurityGroupRule("default", {
 *     type: "ingress",
 *     ipProtocol: "tcp",
 *     nicType: "intranet",
 *     policy: "accept",
 *     portRange: "22/22",
 *     priority: 1,
 *     securityGroupId: defaultSecurityGroup.id,
 *     cidrIp: "172.16.0.0/24",
 * });
 * const default2 = new alicloud.vpc.Switch("default2", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.1.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     vswitchName: `${name}-bar`,
 * });
 * const defaultScalingGroup = new alicloud.ess.ScalingGroup("default", {
 *     minSize: 1,
 *     maxSize: 1,
 *     scalingGroupName: myName,
 *     defaultCooldown: 20,
 *     vswitchIds: [
 *         defaultSwitch.id,
 *         default2.id,
 *     ],
 *     removalPolicies: [
 *         "OldestInstance",
 *         "NewestInstance",
 *     ],
 * });
 * const defaultScalingRule = new alicloud.ess.ScalingRule("default", {
 *     scalingRuleName: myName,
 *     scalingGroupId: defaultScalingGroup.id,
 *     adjustmentType: "TotalCapacity",
 *     adjustmentValue: 2,
 *     cooldown: 60,
 * });
 * const defaultAlarm = new alicloud.ess.Alarm("default", {
 *     name: myName,
 *     description: name,
 *     alarmActions: [defaultScalingRule.ari],
 *     scalingGroupId: defaultScalingGroup.id,
 *     metricType: "system",
 *     metricName: "CpuUtilization",
 *     period: 300,
 *     statistics: "Average",
 *     threshold: "200.3",
 *     comparisonOperator: ">=",
 *     evaluationCount: 2,
 * });
 * ```
 *
 * ## Module Support
 *
 * You can use to the existing autoscaling-rule module
 * to create alarm task, different type rules and scheduled task one-click.
 *
 * ## Import
 *
 * Ess alarm can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ess/alarm:Alarm example asg-2ze500_045efffe-4d05
 * ```
 */
export class Alarm extends pulumi.CustomResource {
    /**
     * Get an existing Alarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlarmState, opts?: pulumi.CustomResourceOptions): Alarm {
        return new Alarm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ess/alarm:Alarm';

    /**
     * Returns true if the given object is an instance of Alarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Alarm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alarm.__pulumiType;
    }

    /**
     * The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
     */
    declare public readonly alarmActions: pulumi.Output<string[]>;
    /**
     * Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
     */
    declare public readonly cloudMonitorGroupId: pulumi.Output<number | undefined>;
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
     */
    declare public readonly comparisonOperator: pulumi.Output<string>;
    /**
     * The description for the alarm.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
     */
    declare public readonly dimensions: pulumi.Output<{[key: string]: string}>;
    /**
     * The effective period of the event-triggered task. By default, the event-triggered task is in effect at all times.
     */
    declare public readonly effective: pulumi.Output<string>;
    /**
     * Whether to enable specific ess alarm. Default to true.
     */
    declare public readonly enable: pulumi.Output<boolean | undefined>;
    /**
     * The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
     */
    declare public readonly evaluationCount: pulumi.Output<number | undefined>;
    /**
     * Support multi alert rule. See `expressions` below for details.
     */
    declare public readonly expressions: pulumi.Output<outputs.ess.AlarmExpression[]>;
    /**
     * The relationship between the trigger conditions in the multi-metric alert rule.
     */
    declare public readonly expressionsLogicOperator: pulumi.Output<string>;
    /**
     * The name for the alarm's associated metric. See `dimensions` below for details.
     */
    declare public readonly metricName: pulumi.Output<string>;
    /**
     * The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
     */
    declare public readonly metricType: pulumi.Output<string | undefined>;
    /**
     * The name for ess alarm.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
     */
    declare public readonly period: pulumi.Output<number>;
    /**
     * The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
     */
    declare public readonly scalingGroupId: pulumi.Output<string>;
    /**
     * The status of the event-triggered task. Valid values:
     * - ALARM: The alert condition is met and an alert is triggered.
     * - OK: The alert condition is not met.
     * - INSUFFICIENT_DATA: Auto Scaling cannot determine whether the alert condition is met due to insufficient data.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
     */
    declare public readonly statistics: pulumi.Output<string>;
    /**
     * The value against which the specified statistics is compared.
     */
    declare public readonly threshold: pulumi.Output<string>;

    /**
     * Create a Alarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlarmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlarmArgs | AlarmState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlarmState | undefined;
            resourceInputs["alarmActions"] = state?.alarmActions;
            resourceInputs["cloudMonitorGroupId"] = state?.cloudMonitorGroupId;
            resourceInputs["comparisonOperator"] = state?.comparisonOperator;
            resourceInputs["description"] = state?.description;
            resourceInputs["dimensions"] = state?.dimensions;
            resourceInputs["effective"] = state?.effective;
            resourceInputs["enable"] = state?.enable;
            resourceInputs["evaluationCount"] = state?.evaluationCount;
            resourceInputs["expressions"] = state?.expressions;
            resourceInputs["expressionsLogicOperator"] = state?.expressionsLogicOperator;
            resourceInputs["metricName"] = state?.metricName;
            resourceInputs["metricType"] = state?.metricType;
            resourceInputs["name"] = state?.name;
            resourceInputs["period"] = state?.period;
            resourceInputs["scalingGroupId"] = state?.scalingGroupId;
            resourceInputs["state"] = state?.state;
            resourceInputs["statistics"] = state?.statistics;
            resourceInputs["threshold"] = state?.threshold;
        } else {
            const args = argsOrState as AlarmArgs | undefined;
            if (args?.alarmActions === undefined && !opts.urn) {
                throw new Error("Missing required property 'alarmActions'");
            }
            if (args?.scalingGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'scalingGroupId'");
            }
            resourceInputs["alarmActions"] = args?.alarmActions;
            resourceInputs["cloudMonitorGroupId"] = args?.cloudMonitorGroupId;
            resourceInputs["comparisonOperator"] = args?.comparisonOperator;
            resourceInputs["description"] = args?.description;
            resourceInputs["dimensions"] = args?.dimensions;
            resourceInputs["effective"] = args?.effective;
            resourceInputs["enable"] = args?.enable;
            resourceInputs["evaluationCount"] = args?.evaluationCount;
            resourceInputs["expressions"] = args?.expressions;
            resourceInputs["expressionsLogicOperator"] = args?.expressionsLogicOperator;
            resourceInputs["metricName"] = args?.metricName;
            resourceInputs["metricType"] = args?.metricType;
            resourceInputs["name"] = args?.name;
            resourceInputs["period"] = args?.period;
            resourceInputs["scalingGroupId"] = args?.scalingGroupId;
            resourceInputs["statistics"] = args?.statistics;
            resourceInputs["threshold"] = args?.threshold;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alarm.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Alarm resources.
 */
export interface AlarmState {
    /**
     * The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
     */
    alarmActions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
     */
    cloudMonitorGroupId?: pulumi.Input<number>;
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
     */
    comparisonOperator?: pulumi.Input<string>;
    /**
     * The description for the alarm.
     */
    description?: pulumi.Input<string>;
    /**
     * The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
     */
    dimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The effective period of the event-triggered task. By default, the event-triggered task is in effect at all times.
     */
    effective?: pulumi.Input<string>;
    /**
     * Whether to enable specific ess alarm. Default to true.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
     */
    evaluationCount?: pulumi.Input<number>;
    /**
     * Support multi alert rule. See `expressions` below for details.
     */
    expressions?: pulumi.Input<pulumi.Input<inputs.ess.AlarmExpression>[]>;
    /**
     * The relationship between the trigger conditions in the multi-metric alert rule.
     */
    expressionsLogicOperator?: pulumi.Input<string>;
    /**
     * The name for the alarm's associated metric. See `dimensions` below for details.
     */
    metricName?: pulumi.Input<string>;
    /**
     * The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
     */
    metricType?: pulumi.Input<string>;
    /**
     * The name for ess alarm.
     */
    name?: pulumi.Input<string>;
    /**
     * The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
     */
    period?: pulumi.Input<number>;
    /**
     * The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
     */
    scalingGroupId?: pulumi.Input<string>;
    /**
     * The status of the event-triggered task. Valid values:
     * - ALARM: The alert condition is met and an alert is triggered.
     * - OK: The alert condition is not met.
     * - INSUFFICIENT_DATA: Auto Scaling cannot determine whether the alert condition is met due to insufficient data.
     */
    state?: pulumi.Input<string>;
    /**
     * The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
     */
    statistics?: pulumi.Input<string>;
    /**
     * The value against which the specified statistics is compared.
     */
    threshold?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Alarm resource.
 */
export interface AlarmArgs {
    /**
     * The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
     */
    alarmActions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
     */
    cloudMonitorGroupId?: pulumi.Input<number>;
    /**
     * The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
     */
    comparisonOperator?: pulumi.Input<string>;
    /**
     * The description for the alarm.
     */
    description?: pulumi.Input<string>;
    /**
     * The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
     */
    dimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The effective period of the event-triggered task. By default, the event-triggered task is in effect at all times.
     */
    effective?: pulumi.Input<string>;
    /**
     * Whether to enable specific ess alarm. Default to true.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
     */
    evaluationCount?: pulumi.Input<number>;
    /**
     * Support multi alert rule. See `expressions` below for details.
     */
    expressions?: pulumi.Input<pulumi.Input<inputs.ess.AlarmExpression>[]>;
    /**
     * The relationship between the trigger conditions in the multi-metric alert rule.
     */
    expressionsLogicOperator?: pulumi.Input<string>;
    /**
     * The name for the alarm's associated metric. See `dimensions` below for details.
     */
    metricName?: pulumi.Input<string>;
    /**
     * The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
     */
    metricType?: pulumi.Input<string>;
    /**
     * The name for ess alarm.
     */
    name?: pulumi.Input<string>;
    /**
     * The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
     */
    period?: pulumi.Input<number>;
    /**
     * The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
     */
    scalingGroupId: pulumi.Input<string>;
    /**
     * The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
     */
    statistics?: pulumi.Input<string>;
    /**
     * The value against which the specified statistics is compared.
     */
    threshold?: pulumi.Input<string>;
}
