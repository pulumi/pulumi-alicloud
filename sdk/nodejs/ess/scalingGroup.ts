// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a ESS scaling group resource which is a collection of ECS instances with the same application scenarios.
 *
 * It defines the maximum and minimum numbers of ECS instances in the group, and their associated Server Load Balancer instances, RDS instances, and other attributes.
 *
 * > **NOTE:** You can launch an ESS scaling group for a VPC network via specifying parameter `vswitchIds`.
 *
 * For information about ess scaling rule, see [CreateScalingGroup](https://www.alibabacloud.com/help/en/auto-scaling/latest/createscalinggroup).
 *
 * > **NOTE:** Available since v1.39.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultRandomInteger = new random.RandomInteger("defaultRandomInteger", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const myName = pulumi.interpolate`${name}-${defaultRandomInteger.result}`;
 * const defaultZones = alicloud.getZones({
 *     availableDiskCategory: "cloud_efficiency",
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultInstanceTypes = defaultZones.then(defaultZones => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: defaultZones.zones?.[0]?.id,
 *     cpuCoreCount: 2,
 *     memorySize: 4,
 * }));
 * const defaultImages = alicloud.ecs.getImages({
 *     nameRegex: "^ubuntu_18.*64",
 *     mostRecent: true,
 *     owners: "system",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: myName,
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     vswitchName: myName,
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {vpcId: defaultNetwork.id});
 * const defaultSecurityGroupRule = new alicloud.ecs.SecurityGroupRule("defaultSecurityGroupRule", {
 *     type: "ingress",
 *     ipProtocol: "tcp",
 *     nicType: "intranet",
 *     policy: "accept",
 *     portRange: "22/22",
 *     priority: 1,
 *     securityGroupId: defaultSecurityGroup.id,
 *     cidrIp: "172.16.0.0/24",
 * });
 * const default2 = new alicloud.vpc.Switch("default2", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.1.0/24",
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     vswitchName: `${name}-bar`,
 * });
 * const defaultScalingGroup = new alicloud.ess.ScalingGroup("defaultScalingGroup", {
 *     minSize: 1,
 *     maxSize: 1,
 *     scalingGroupName: myName,
 *     defaultCooldown: 20,
 *     vswitchIds: [
 *         defaultSwitch.id,
 *         default2.id,
 *     ],
 *     removalPolicies: [
 *         "OldestInstance",
 *         "NewestInstance",
 *     ],
 * });
 * ```
 * ## Module Support
 *
 * You can use to the existing autoscaling module
 * to create a scaling group, configuration and lifecycle hook one-click.
 *
 * ## Import
 *
 * ESS scaling group can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ess/scalingGroup:ScalingGroup example asg-abc123456
 * ```
 */
export class ScalingGroup extends pulumi.CustomResource {
    /**
     * Get an existing ScalingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScalingGroupState, opts?: pulumi.CustomResourceOptions): ScalingGroup {
        return new ScalingGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ess/scalingGroup:ScalingGroup';

    /**
     * Returns true if the given object is an instance of ScalingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingGroup.__pulumiType;
    }

    /**
     * If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
     * - The specified RDS instance must be in running status.
     * - The specified RDS instanceâ€™s whitelist must have room for more IP addresses.
     */
    public readonly dbInstanceIds!: pulumi.Output<string[] | undefined>;
    /**
     * Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
     */
    public readonly defaultCooldown!: pulumi.Output<number | undefined>;
    /**
     * Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
     */
    public readonly desiredCapacity!: pulumi.Output<number | undefined>;
    /**
     * Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
     */
    public readonly groupDeletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
     */
    public readonly groupType!: pulumi.Output<string>;
    /**
     * Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
     */
    public readonly healthCheckType!: pulumi.Output<string>;
    /**
     * Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
     */
    public readonly launchTemplateId!: pulumi.Output<string | undefined>;
    /**
     * The details of the instance types that are specified by using the Extend Instance Type of Launch Template feature..  See `launchTemplateOverride` below for details.
     */
    public readonly launchTemplateOverrides!: pulumi.Output<outputs.ess.ScalingGroupLaunchTemplateOverride[] | undefined>;
    /**
     * The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
     */
    public readonly launchTemplateVersion!: pulumi.Output<string | undefined>;
    /**
     * If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
     * - The Server Load Balancer instance must be enabled.
     * - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
     * targeting your `alicloud.slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
     * - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
     * - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
     */
    public readonly loadbalancerIds!: pulumi.Output<string[] | undefined>;
    /**
     * Maximum number of ECS instances in the scaling group. Value range: [0, 2000].
     * **NOTE:** From version 1.204.1, `maxSize` can be set to `2000`.
     */
    public readonly maxSize!: pulumi.Output<number>;
    /**
     * Minimum number of ECS instances in the scaling group. Value range: [0, 2000].
     * **NOTE:** From version 1.204.1, `minSize` can be set to `2000`.
     */
    public readonly minSize!: pulumi.Output<number>;
    /**
     * Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available since v1.54.0).
     */
    public readonly multiAzPolicy!: pulumi.Output<string | undefined>;
    /**
     * The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
     */
    public readonly onDemandBaseCapacity!: pulumi.Output<number>;
    /**
     * Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
     */
    public readonly onDemandPercentageAboveBaseCapacity!: pulumi.Output<number>;
    /**
     * Set or unset instances within group into protected status.
     */
    public readonly protectedInstances!: pulumi.Output<string[] | undefined>;
    /**
     * RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
     * - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
     * - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
     * - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
     * - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
     */
    public readonly removalPolicies!: pulumi.Output<string[]>;
    /**
     * Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
     */
    public readonly scalingGroupName!: pulumi.Output<string | undefined>;
    /**
     * The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
     */
    public readonly spotInstancePools!: pulumi.Output<number>;
    /**
     * Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
     */
    public readonly spotInstanceRemedy!: pulumi.Output<boolean>;
    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
     *
     * @deprecated Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
     */
    public readonly vswitchId!: pulumi.Output<string | undefined>;
    /**
     * List of virtual switch IDs in which the ecs instances to be launched.
     */
    public readonly vswitchIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ScalingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScalingGroupArgs | ScalingGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScalingGroupState | undefined;
            resourceInputs["dbInstanceIds"] = state ? state.dbInstanceIds : undefined;
            resourceInputs["defaultCooldown"] = state ? state.defaultCooldown : undefined;
            resourceInputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            resourceInputs["groupDeletionProtection"] = state ? state.groupDeletionProtection : undefined;
            resourceInputs["groupType"] = state ? state.groupType : undefined;
            resourceInputs["healthCheckType"] = state ? state.healthCheckType : undefined;
            resourceInputs["launchTemplateId"] = state ? state.launchTemplateId : undefined;
            resourceInputs["launchTemplateOverrides"] = state ? state.launchTemplateOverrides : undefined;
            resourceInputs["launchTemplateVersion"] = state ? state.launchTemplateVersion : undefined;
            resourceInputs["loadbalancerIds"] = state ? state.loadbalancerIds : undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["minSize"] = state ? state.minSize : undefined;
            resourceInputs["multiAzPolicy"] = state ? state.multiAzPolicy : undefined;
            resourceInputs["onDemandBaseCapacity"] = state ? state.onDemandBaseCapacity : undefined;
            resourceInputs["onDemandPercentageAboveBaseCapacity"] = state ? state.onDemandPercentageAboveBaseCapacity : undefined;
            resourceInputs["protectedInstances"] = state ? state.protectedInstances : undefined;
            resourceInputs["removalPolicies"] = state ? state.removalPolicies : undefined;
            resourceInputs["scalingGroupName"] = state ? state.scalingGroupName : undefined;
            resourceInputs["spotInstancePools"] = state ? state.spotInstancePools : undefined;
            resourceInputs["spotInstanceRemedy"] = state ? state.spotInstanceRemedy : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["vswitchIds"] = state ? state.vswitchIds : undefined;
        } else {
            const args = argsOrState as ScalingGroupArgs | undefined;
            if ((!args || args.maxSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxSize'");
            }
            if ((!args || args.minSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minSize'");
            }
            resourceInputs["dbInstanceIds"] = args ? args.dbInstanceIds : undefined;
            resourceInputs["defaultCooldown"] = args ? args.defaultCooldown : undefined;
            resourceInputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            resourceInputs["groupDeletionProtection"] = args ? args.groupDeletionProtection : undefined;
            resourceInputs["groupType"] = args ? args.groupType : undefined;
            resourceInputs["healthCheckType"] = args ? args.healthCheckType : undefined;
            resourceInputs["launchTemplateId"] = args ? args.launchTemplateId : undefined;
            resourceInputs["launchTemplateOverrides"] = args ? args.launchTemplateOverrides : undefined;
            resourceInputs["launchTemplateVersion"] = args ? args.launchTemplateVersion : undefined;
            resourceInputs["loadbalancerIds"] = args ? args.loadbalancerIds : undefined;
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["minSize"] = args ? args.minSize : undefined;
            resourceInputs["multiAzPolicy"] = args ? args.multiAzPolicy : undefined;
            resourceInputs["onDemandBaseCapacity"] = args ? args.onDemandBaseCapacity : undefined;
            resourceInputs["onDemandPercentageAboveBaseCapacity"] = args ? args.onDemandPercentageAboveBaseCapacity : undefined;
            resourceInputs["protectedInstances"] = args ? args.protectedInstances : undefined;
            resourceInputs["removalPolicies"] = args ? args.removalPolicies : undefined;
            resourceInputs["scalingGroupName"] = args ? args.scalingGroupName : undefined;
            resourceInputs["spotInstancePools"] = args ? args.spotInstancePools : undefined;
            resourceInputs["spotInstanceRemedy"] = args ? args.spotInstanceRemedy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["vswitchIds"] = args ? args.vswitchIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalingGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScalingGroup resources.
 */
export interface ScalingGroupState {
    /**
     * If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
     * - The specified RDS instance must be in running status.
     * - The specified RDS instanceâ€™s whitelist must have room for more IP addresses.
     */
    dbInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
     */
    defaultCooldown?: pulumi.Input<number>;
    /**
     * Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
     */
    desiredCapacity?: pulumi.Input<number>;
    /**
     * Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
     */
    groupDeletionProtection?: pulumi.Input<boolean>;
    /**
     * Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
     */
    groupType?: pulumi.Input<string>;
    /**
     * Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
     */
    healthCheckType?: pulumi.Input<string>;
    /**
     * Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
     */
    launchTemplateId?: pulumi.Input<string>;
    /**
     * The details of the instance types that are specified by using the Extend Instance Type of Launch Template feature..  See `launchTemplateOverride` below for details.
     */
    launchTemplateOverrides?: pulumi.Input<pulumi.Input<inputs.ess.ScalingGroupLaunchTemplateOverride>[]>;
    /**
     * The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
     */
    launchTemplateVersion?: pulumi.Input<string>;
    /**
     * If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
     * - The Server Load Balancer instance must be enabled.
     * - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
     * targeting your `alicloud.slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
     * - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
     * - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
     */
    loadbalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Maximum number of ECS instances in the scaling group. Value range: [0, 2000].
     * **NOTE:** From version 1.204.1, `maxSize` can be set to `2000`.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Minimum number of ECS instances in the scaling group. Value range: [0, 2000].
     * **NOTE:** From version 1.204.1, `minSize` can be set to `2000`.
     */
    minSize?: pulumi.Input<number>;
    /**
     * Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available since v1.54.0).
     */
    multiAzPolicy?: pulumi.Input<string>;
    /**
     * The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
     */
    onDemandBaseCapacity?: pulumi.Input<number>;
    /**
     * Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
     */
    onDemandPercentageAboveBaseCapacity?: pulumi.Input<number>;
    /**
     * Set or unset instances within group into protected status.
     */
    protectedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
     * - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
     * - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
     * - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
     * - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
     */
    removalPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
     */
    scalingGroupName?: pulumi.Input<string>;
    /**
     * The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
     */
    spotInstancePools?: pulumi.Input<number>;
    /**
     * Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
     */
    spotInstanceRemedy?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
     *
     * @deprecated Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * List of virtual switch IDs in which the ecs instances to be launched.
     */
    vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ScalingGroup resource.
 */
export interface ScalingGroupArgs {
    /**
     * If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
     * - The specified RDS instance must be in running status.
     * - The specified RDS instanceâ€™s whitelist must have room for more IP addresses.
     */
    dbInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
     */
    defaultCooldown?: pulumi.Input<number>;
    /**
     * Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
     */
    desiredCapacity?: pulumi.Input<number>;
    /**
     * Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
     */
    groupDeletionProtection?: pulumi.Input<boolean>;
    /**
     * Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
     */
    groupType?: pulumi.Input<string>;
    /**
     * Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
     */
    healthCheckType?: pulumi.Input<string>;
    /**
     * Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
     */
    launchTemplateId?: pulumi.Input<string>;
    /**
     * The details of the instance types that are specified by using the Extend Instance Type of Launch Template feature..  See `launchTemplateOverride` below for details.
     */
    launchTemplateOverrides?: pulumi.Input<pulumi.Input<inputs.ess.ScalingGroupLaunchTemplateOverride>[]>;
    /**
     * The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
     */
    launchTemplateVersion?: pulumi.Input<string>;
    /**
     * If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
     * - The Server Load Balancer instance must be enabled.
     * - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
     * targeting your `alicloud.slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
     * - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
     * - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
     */
    loadbalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Maximum number of ECS instances in the scaling group. Value range: [0, 2000].
     * **NOTE:** From version 1.204.1, `maxSize` can be set to `2000`.
     */
    maxSize: pulumi.Input<number>;
    /**
     * Minimum number of ECS instances in the scaling group. Value range: [0, 2000].
     * **NOTE:** From version 1.204.1, `minSize` can be set to `2000`.
     */
    minSize: pulumi.Input<number>;
    /**
     * Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available since v1.54.0).
     */
    multiAzPolicy?: pulumi.Input<string>;
    /**
     * The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
     */
    onDemandBaseCapacity?: pulumi.Input<number>;
    /**
     * Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
     */
    onDemandPercentageAboveBaseCapacity?: pulumi.Input<number>;
    /**
     * Set or unset instances within group into protected status.
     */
    protectedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
     * - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
     * - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
     * - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
     * - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
     */
    removalPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
     */
    scalingGroupName?: pulumi.Input<string>;
    /**
     * The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
     */
    spotInstancePools?: pulumi.Input<number>;
    /**
     * Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
     */
    spotInstanceRemedy?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
     *
     * @deprecated Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * List of virtual switch IDs in which the ecs instances to be launched.
     */
    vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
}
