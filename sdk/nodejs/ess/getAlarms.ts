// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides available alarm resources.
 *
 * > **NOTE** Available in 1.72.0+
 */
export function getAlarms(args?: GetAlarmsArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ess/getAlarms:getAlarms", {
        "ids": args.ids,
        "metricType": args.metricType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "scalingGroupId": args.scalingGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarms.
 */
export interface GetAlarmsArgs {
    /**
     * A list of alarm IDs.
     */
    ids?: string[];
    /**
     * The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
     */
    metricType?: string;
    /**
     * A regex string to filter resulting alarms by name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Scaling group id the alarms belong to.
     */
    scalingGroupId?: string;
}

/**
 * A collection of values returned by getAlarms.
 */
export interface GetAlarmsResult {
    /**
     * A list of alarms. Each element contains the following attributes:
     */
    readonly alarms: outputs.ess.GetAlarmsAlarm[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of alarm ids.
     */
    readonly ids: string[];
    /**
     * The type for the alarm's associated metric.
     */
    readonly metricType?: string;
    readonly nameRegex?: string;
    /**
     * A list of alarm names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The scaling group associated with this alarm.
     */
    readonly scalingGroupId?: string;
}
/**
 * This data source provides available alarm resources.
 *
 * > **NOTE** Available in 1.72.0+
 */
export function getAlarmsOutput(args?: GetAlarmsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlarmsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:ess/getAlarms:getAlarms", {
        "ids": args.ids,
        "metricType": args.metricType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "scalingGroupId": args.scalingGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarms.
 */
export interface GetAlarmsOutputArgs {
    /**
     * A list of alarm IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
     */
    metricType?: pulumi.Input<string>;
    /**
     * A regex string to filter resulting alarms by name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Scaling group id the alarms belong to.
     */
    scalingGroupId?: pulumi.Input<string>;
}
