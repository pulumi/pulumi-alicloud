// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides available notification resources.
 *
 * > **NOTE:** Available in 1.72.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ds = alicloud.ess.getNotifications({
 *     scalingGroupId: "scaling_group_id",
 * });
 * export const firstNotification = ds.then(ds => ds.notifications?.[0]?.id);
 * ```
 */
export function getNotifications(args: GetNotificationsArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ess/getNotifications:getNotifications", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "scalingGroupId": args.scalingGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotifications.
 */
export interface GetNotificationsArgs {
    /**
     * A list of notification ids.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Scaling group id the notifications belong to.
     */
    scalingGroupId: string;
}

/**
 * A collection of values returned by getNotifications.
 */
export interface GetNotificationsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of notification ids.
     */
    readonly ids?: string[];
    /**
     * A list of notifications. Each element contains the following attributes:
     */
    readonly notifications: outputs.ess.GetNotificationsNotification[];
    readonly outputFile?: string;
    /**
     * ID of the scaling group.
     */
    readonly scalingGroupId: string;
}
/**
 * This data source provides available notification resources.
 *
 * > **NOTE:** Available in 1.72.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ds = alicloud.ess.getNotifications({
 *     scalingGroupId: "scaling_group_id",
 * });
 * export const firstNotification = ds.then(ds => ds.notifications?.[0]?.id);
 * ```
 */
export function getNotificationsOutput(args: GetNotificationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationsResult> {
    return pulumi.output(args).apply((a: any) => getNotifications(a, opts))
}

/**
 * A collection of arguments for invoking getNotifications.
 */
export interface GetNotificationsOutputArgs {
    /**
     * A list of notification ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Scaling group id the notifications belong to.
     */
    scalingGroupId: pulumi.Input<string>;
}
