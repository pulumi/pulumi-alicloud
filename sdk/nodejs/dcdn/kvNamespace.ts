// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Dcdn Kv Namespace resource.
 *
 * For information about Dcdn Kv Namespace and how to use it, see [What is Kv Namespace](https://www.alibabacloud.com/help/en/dcdn/developer-reference/api-dcdn-2018-01-15-putdcdnkvnamespace).
 *
 * > **NOTE:** Available since v1.198.0.
 *
 * ## Import
 *
 * Dcdn Kv Namespace can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:dcdn/kvNamespace:KvNamespace example
 * ```
 */
export class KvNamespace extends pulumi.CustomResource {
    /**
     * Get an existing KvNamespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KvNamespaceState, opts?: pulumi.CustomResourceOptions): KvNamespace {
        return new KvNamespace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dcdn/kvNamespace:KvNamespace';

    /**
     * Returns true if the given object is an instance of KvNamespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KvNamespace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KvNamespace.__pulumiType;
    }

    /**
     * Namespace description information
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Namespace name. The name can contain letters, digits, hyphens (-), and underscores (_).
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a KvNamespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KvNamespaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KvNamespaceArgs | KvNamespaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KvNamespaceState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as KvNamespaceArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KvNamespace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KvNamespace resources.
 */
export interface KvNamespaceState {
    /**
     * Namespace description information
     */
    description?: pulumi.Input<string>;
    /**
     * Namespace name. The name can contain letters, digits, hyphens (-), and underscores (_).
     */
    namespace?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KvNamespace resource.
 */
export interface KvNamespaceArgs {
    /**
     * Namespace description information
     */
    description: pulumi.Input<string>;
    /**
     * Namespace name. The name can contain letters, digits, hyphens (-), and underscores (_).
     */
    namespace: pulumi.Input<string>;
}
