// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DomainArgs, DomainState } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { DomainConfigArgs, DomainConfigState } from "./domainConfig";
export type DomainConfig = import("./domainConfig").DomainConfig;
export const DomainConfig: typeof import("./domainConfig").DomainConfig = null as any;
utilities.lazyLoad(exports, ["DomainConfig"], () => require("./domainConfig"));

export { ErArgs, ErState } from "./er";
export type Er = import("./er").Er;
export const Er: typeof import("./er").Er = null as any;
utilities.lazyLoad(exports, ["Er"], () => require("./er"));

export { GetDomainsArgs, GetDomainsResult, GetDomainsOutputArgs } from "./getDomains";
export const getDomains: typeof import("./getDomains").getDomains = null as any;
export const getDomainsOutput: typeof import("./getDomains").getDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getDomains","getDomainsOutput"], () => require("./getDomains"));

export { GetIpaDomainsArgs, GetIpaDomainsResult, GetIpaDomainsOutputArgs } from "./getIpaDomains";
export const getIpaDomains: typeof import("./getIpaDomains").getIpaDomains = null as any;
export const getIpaDomainsOutput: typeof import("./getIpaDomains").getIpaDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getIpaDomains","getIpaDomainsOutput"], () => require("./getIpaDomains"));

export { GetKvAccountArgs, GetKvAccountResult, GetKvAccountOutputArgs } from "./getKvAccount";
export const getKvAccount: typeof import("./getKvAccount").getKvAccount = null as any;
export const getKvAccountOutput: typeof import("./getKvAccount").getKvAccountOutput = null as any;
utilities.lazyLoad(exports, ["getKvAccount","getKvAccountOutput"], () => require("./getKvAccount"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));

export { GetWafDomainsArgs, GetWafDomainsResult, GetWafDomainsOutputArgs } from "./getWafDomains";
export const getWafDomains: typeof import("./getWafDomains").getWafDomains = null as any;
export const getWafDomainsOutput: typeof import("./getWafDomains").getWafDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getWafDomains","getWafDomainsOutput"], () => require("./getWafDomains"));

export { GetWafPoliciesArgs, GetWafPoliciesResult, GetWafPoliciesOutputArgs } from "./getWafPolicies";
export const getWafPolicies: typeof import("./getWafPolicies").getWafPolicies = null as any;
export const getWafPoliciesOutput: typeof import("./getWafPolicies").getWafPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getWafPolicies","getWafPoliciesOutput"], () => require("./getWafPolicies"));

export { GetWafRulesArgs, GetWafRulesResult, GetWafRulesOutputArgs } from "./getWafRules";
export const getWafRules: typeof import("./getWafRules").getWafRules = null as any;
export const getWafRulesOutput: typeof import("./getWafRules").getWafRulesOutput = null as any;
utilities.lazyLoad(exports, ["getWafRules","getWafRulesOutput"], () => require("./getWafRules"));

export { IpaDomainArgs, IpaDomainState } from "./ipaDomain";
export type IpaDomain = import("./ipaDomain").IpaDomain;
export const IpaDomain: typeof import("./ipaDomain").IpaDomain = null as any;
utilities.lazyLoad(exports, ["IpaDomain"], () => require("./ipaDomain"));

export { KvArgs, KvState } from "./kv";
export type Kv = import("./kv").Kv;
export const Kv: typeof import("./kv").Kv = null as any;
utilities.lazyLoad(exports, ["Kv"], () => require("./kv"));

export { KvNamespaceArgs, KvNamespaceState } from "./kvNamespace";
export type KvNamespace = import("./kvNamespace").KvNamespace;
export const KvNamespace: typeof import("./kvNamespace").KvNamespace = null as any;
utilities.lazyLoad(exports, ["KvNamespace"], () => require("./kvNamespace"));

export { WafDomainArgs, WafDomainState } from "./wafDomain";
export type WafDomain = import("./wafDomain").WafDomain;
export const WafDomain: typeof import("./wafDomain").WafDomain = null as any;
utilities.lazyLoad(exports, ["WafDomain"], () => require("./wafDomain"));

export { WafPolicyArgs, WafPolicyState } from "./wafPolicy";
export type WafPolicy = import("./wafPolicy").WafPolicy;
export const WafPolicy: typeof import("./wafPolicy").WafPolicy = null as any;
utilities.lazyLoad(exports, ["WafPolicy"], () => require("./wafPolicy"));

export { WafPolicyDomainAttachmentArgs, WafPolicyDomainAttachmentState } from "./wafPolicyDomainAttachment";
export type WafPolicyDomainAttachment = import("./wafPolicyDomainAttachment").WafPolicyDomainAttachment;
export const WafPolicyDomainAttachment: typeof import("./wafPolicyDomainAttachment").WafPolicyDomainAttachment = null as any;
utilities.lazyLoad(exports, ["WafPolicyDomainAttachment"], () => require("./wafPolicyDomainAttachment"));

export { WafRuleArgs, WafRuleState } from "./wafRule";
export type WafRule = import("./wafRule").WafRule;
export const WafRule: typeof import("./wafRule").WafRule = null as any;
utilities.lazyLoad(exports, ["WafRule"], () => require("./wafRule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:dcdn/domain:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "alicloud:dcdn/domainConfig:DomainConfig":
                return new DomainConfig(name, <any>undefined, { urn })
            case "alicloud:dcdn/er:Er":
                return new Er(name, <any>undefined, { urn })
            case "alicloud:dcdn/ipaDomain:IpaDomain":
                return new IpaDomain(name, <any>undefined, { urn })
            case "alicloud:dcdn/kv:Kv":
                return new Kv(name, <any>undefined, { urn })
            case "alicloud:dcdn/kvNamespace:KvNamespace":
                return new KvNamespace(name, <any>undefined, { urn })
            case "alicloud:dcdn/wafDomain:WafDomain":
                return new WafDomain(name, <any>undefined, { urn })
            case "alicloud:dcdn/wafPolicy:WafPolicy":
                return new WafPolicy(name, <any>undefined, { urn })
            case "alicloud:dcdn/wafPolicyDomainAttachment:WafPolicyDomainAttachment":
                return new WafPolicyDomainAttachment(name, <any>undefined, { urn })
            case "alicloud:dcdn/wafRule:WafRule":
                return new WafRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "dcdn/domain", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/domainConfig", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/er", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/ipaDomain", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/kv", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/kvNamespace", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/wafDomain", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/wafPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/wafPolicyDomainAttachment", _module)
pulumi.runtime.registerResourceModule("alicloud", "dcdn/wafRule", _module)
