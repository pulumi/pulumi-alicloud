// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud SSO Access Configuration Provisioning resource.
 *
 * For information about Cloud SSO Access Configuration Provisioning and how to use it, see [What is Access Configuration Provisioning](https://www.alibabacloud.com/help/en/doc-detail/266737.html).
 *
 * > **NOTE:** Available in v1.148.0+.
 *
 * ## Import
 *
 * Cloud SSO Access Configuration Provisioning can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cloudsso/accessConfigurationProvisioning:AccessConfigurationProvisioning example <directory_id>:<access_configuration_id>:<target_type>:<target_id>
 * ```
 */
export class AccessConfigurationProvisioning extends pulumi.CustomResource {
    /**
     * Get an existing AccessConfigurationProvisioning resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessConfigurationProvisioningState, opts?: pulumi.CustomResourceOptions): AccessConfigurationProvisioning {
        return new AccessConfigurationProvisioning(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cloudsso/accessConfigurationProvisioning:AccessConfigurationProvisioning';

    /**
     * Returns true if the given object is an instance of AccessConfigurationProvisioning.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessConfigurationProvisioning {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessConfigurationProvisioning.__pulumiType;
    }

    /**
     * The Access configuration ID.
     */
    public readonly accessConfigurationId!: pulumi.Output<string>;
    /**
     * The ID of the Directory.
     */
    public readonly directoryId!: pulumi.Output<string>;
    /**
     * The status of the resource. Valid values: `Provisioned`, `ReprovisionRequired` and `DeprovisionFailed`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * The ID of the target to create the resource range.
     */
    public readonly targetId!: pulumi.Output<string>;
    /**
     * The type of the resource range target to be accessed. Valid values: `RD-Account`.
     */
    public readonly targetType!: pulumi.Output<string>;

    /**
     * Create a AccessConfigurationProvisioning resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessConfigurationProvisioningArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessConfigurationProvisioningArgs | AccessConfigurationProvisioningState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessConfigurationProvisioningState | undefined;
            resourceInputs["accessConfigurationId"] = state ? state.accessConfigurationId : undefined;
            resourceInputs["directoryId"] = state ? state.directoryId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
        } else {
            const args = argsOrState as AccessConfigurationProvisioningArgs | undefined;
            if ((!args || args.accessConfigurationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessConfigurationId'");
            }
            if ((!args || args.directoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directoryId'");
            }
            if ((!args || args.targetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetId'");
            }
            if ((!args || args.targetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetType'");
            }
            resourceInputs["accessConfigurationId"] = args ? args.accessConfigurationId : undefined;
            resourceInputs["directoryId"] = args ? args.directoryId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["targetId"] = args ? args.targetId : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessConfigurationProvisioning.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessConfigurationProvisioning resources.
 */
export interface AccessConfigurationProvisioningState {
    /**
     * The Access configuration ID.
     */
    accessConfigurationId?: pulumi.Input<string>;
    /**
     * The ID of the Directory.
     */
    directoryId?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `Provisioned`, `ReprovisionRequired` and `DeprovisionFailed`.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the target to create the resource range.
     */
    targetId?: pulumi.Input<string>;
    /**
     * The type of the resource range target to be accessed. Valid values: `RD-Account`.
     */
    targetType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessConfigurationProvisioning resource.
 */
export interface AccessConfigurationProvisioningArgs {
    /**
     * The Access configuration ID.
     */
    accessConfigurationId: pulumi.Input<string>;
    /**
     * The ID of the Directory.
     */
    directoryId: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `Provisioned`, `ReprovisionRequired` and `DeprovisionFailed`.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the target to create the resource range.
     */
    targetId: pulumi.Input<string>;
    /**
     * The type of the resource range target to be accessed. Valid values: `RD-Account`.
     */
    targetType: pulumi.Input<string>;
}
