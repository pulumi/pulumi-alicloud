// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Cloud Sso User Provisioning Event available to the user.[What is User Provisioning Event](https://next.api.alibabacloud.com/document/cloudsso/2021-05-15/GetUserProvisioningEvent)
 *
 * > **NOTE:** Available since v1.261.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultQSrGmc = new alicloud.cloudsso.Directory("defaultQSrGmc", {
 *     directoryGlobalAccessStatus: "Disabled",
 *     passwordPolicy: {
 *         minPasswordLength: 8,
 *         minPasswordDifferentChars: 8,
 *         maxPasswordAge: 90,
 *         passwordReusePrevention: 1,
 *         maxLoginAttempts: 5,
 *     },
 *     mfaAuthenticationSettingInfo: {
 *         mfaAuthenticationAdvanceSettings: "OnlyRiskyLogin",
 *         operationForRiskLogin: "EnforceVerify",
 *     },
 *     directoryName: "tfexample",
 * });
 * const _default = alicloud.cloudsso.getUserProvisioningEventsOutput({
 *     directoryId: defaultQSrGmc.id,
 * });
 * export const alicloudCloudSsoUserProvisioningEventExampleId = _default.apply(_default => _default.events?.[0]?.id);
 * ```
 */
export function getUserProvisioningEvents(args: GetUserProvisioningEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserProvisioningEventsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:cloudsso/getUserProvisioningEvents:getUserProvisioningEvents", {
        "directoryId": args.directoryId,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "userProvisioningId": args.userProvisioningId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserProvisioningEvents.
 */
export interface GetUserProvisioningEventsArgs {
    /**
     * Directory ID
     */
    directoryId: string;
    /**
     * A list of User Provisioning Event IDs. The value is formulated as `<directory_id>:<event_id>`.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the User Provisioning.
     */
    userProvisioningId?: string;
}

/**
 * A collection of values returned by getUserProvisioningEvents.
 */
export interface GetUserProvisioningEventsResult {
    /**
     * Directory ID
     */
    readonly directoryId: string;
    /**
     * A list of User Provisioning Event Entries. Each element contains the following attributes:
     */
    readonly events: outputs.cloudsso.GetUserProvisioningEventsEvent[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of User Provisioning Event IDs.
     */
    readonly ids: string[];
    readonly outputFile?: string;
    /**
     * The ID of the User Provisioning.
     */
    readonly userProvisioningId?: string;
}
/**
 * This data source provides Cloud Sso User Provisioning Event available to the user.[What is User Provisioning Event](https://next.api.alibabacloud.com/document/cloudsso/2021-05-15/GetUserProvisioningEvent)
 *
 * > **NOTE:** Available since v1.261.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultQSrGmc = new alicloud.cloudsso.Directory("defaultQSrGmc", {
 *     directoryGlobalAccessStatus: "Disabled",
 *     passwordPolicy: {
 *         minPasswordLength: 8,
 *         minPasswordDifferentChars: 8,
 *         maxPasswordAge: 90,
 *         passwordReusePrevention: 1,
 *         maxLoginAttempts: 5,
 *     },
 *     mfaAuthenticationSettingInfo: {
 *         mfaAuthenticationAdvanceSettings: "OnlyRiskyLogin",
 *         operationForRiskLogin: "EnforceVerify",
 *     },
 *     directoryName: "tfexample",
 * });
 * const _default = alicloud.cloudsso.getUserProvisioningEventsOutput({
 *     directoryId: defaultQSrGmc.id,
 * });
 * export const alicloudCloudSsoUserProvisioningEventExampleId = _default.apply(_default => _default.events?.[0]?.id);
 * ```
 */
export function getUserProvisioningEventsOutput(args: GetUserProvisioningEventsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserProvisioningEventsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:cloudsso/getUserProvisioningEvents:getUserProvisioningEvents", {
        "directoryId": args.directoryId,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "userProvisioningId": args.userProvisioningId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserProvisioningEvents.
 */
export interface GetUserProvisioningEventsOutputArgs {
    /**
     * Directory ID
     */
    directoryId: pulumi.Input<string>;
    /**
     * A list of User Provisioning Event IDs. The value is formulated as `<directory_id>:<event_id>`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the User Provisioning.
     */
    userProvisioningId?: pulumi.Input<string>;
}
