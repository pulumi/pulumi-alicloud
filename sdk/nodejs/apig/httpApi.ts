// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a APIG Http Api resource.
 *
 * For information about APIG Http Api and how to use it, see [What is Http Api](https://next.api.aliyun.com/api/APIG/2024-03-27/CreateHttpApi).
 *
 * > **NOTE:** Available since v1.240.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const protocol = config.get("protocol") || "HTTP";
 * const protocolHttps = config.get("protocolHttps") || "HTTPS";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultHttpApi = new alicloud.apig.HttpApi("default", {
 *     httpApiName: name,
 *     protocols: [protocol],
 *     basePath: "/v1",
 *     description: "zhiwei_pop_examplecase",
 *     type: "Rest",
 * });
 * ```
 *
 * ## Import
 *
 * APIG Http Api can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:apig/httpApi:HttpApi example <id>
 * ```
 */
export class HttpApi extends pulumi.CustomResource {
    /**
     * Get an existing HttpApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HttpApiState, opts?: pulumi.CustomResourceOptions): HttpApi {
        return new HttpApi(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:apig/httpApi:HttpApi';

    /**
     * Returns true if the given object is an instance of HttpApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HttpApi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HttpApi.__pulumiType;
    }

    /**
     * API path
     */
    public readonly basePath!: pulumi.Output<string | undefined>;
    /**
     * Description of API
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    public readonly httpApiName!: pulumi.Output<string>;
    /**
     * API protocol
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * The ID of the resource group
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * API type
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a HttpApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HttpApiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HttpApiArgs | HttpApiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HttpApiState | undefined;
            resourceInputs["basePath"] = state ? state.basePath : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["httpApiName"] = state ? state.httpApiName : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as HttpApiArgs | undefined;
            if ((!args || args.httpApiName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'httpApiName'");
            }
            if ((!args || args.protocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocols'");
            }
            resourceInputs["basePath"] = args ? args.basePath : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["httpApiName"] = args ? args.httpApiName : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HttpApi.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HttpApi resources.
 */
export interface HttpApiState {
    /**
     * API path
     */
    basePath?: pulumi.Input<string>;
    /**
     * Description of API
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    httpApiName?: pulumi.Input<string>;
    /**
     * API protocol
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * API type
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HttpApi resource.
 */
export interface HttpApiArgs {
    /**
     * API path
     */
    basePath?: pulumi.Input<string>;
    /**
     * Description of API
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    httpApiName: pulumi.Input<string>;
    /**
     * API protocol
     */
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * API type
     */
    type?: pulumi.Input<string>;
}
