// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * APIG Gateway can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:apig/gateway:Gateway example <id>
 * ```
 */
export class Gateway extends pulumi.CustomResource {
    /**
     * Get an existing Gateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayState, opts?: pulumi.CustomResourceOptions): Gateway {
        return new Gateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:apig/gateway:Gateway';

    /**
     * Returns true if the given object is an instance of Gateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gateway.__pulumiType;
    }

    /**
     * The creation timestamp. Unit: milliseconds.
     */
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    /**
     * The name of the resource
     */
    public readonly gatewayName!: pulumi.Output<string | undefined>;
    /**
     * Log Configuration See `logConfig` below.
     */
    public readonly logConfig!: pulumi.Output<outputs.apig.GatewayLogConfig | undefined>;
    /**
     * Network Access Configuration See `networkAccessConfig` below.
     */
    public readonly networkAccessConfig!: pulumi.Output<outputs.apig.GatewayNetworkAccessConfig | undefined>;
    /**
     * The payment type of the resource
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Gateway instance specifications
     */
    public readonly spec!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The tag of the resource
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The VPC associated with the Gateway. See `vpc` below.
     */
    public readonly vpc!: pulumi.Output<outputs.apig.GatewayVpc | undefined>;
    /**
     * The virtual switch associated with the Gateway. See `vswitch` below.
     */
    public readonly vswitch!: pulumi.Output<outputs.apig.GatewayVswitch | undefined>;
    /**
     * Availability Zone Configuration See `zoneConfig` below.
     */
    public readonly zoneConfig!: pulumi.Output<outputs.apig.GatewayZoneConfig>;

    /**
     * Create a Gateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GatewayArgs | GatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GatewayState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["gatewayName"] = state ? state.gatewayName : undefined;
            resourceInputs["logConfig"] = state ? state.logConfig : undefined;
            resourceInputs["networkAccessConfig"] = state ? state.networkAccessConfig : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpc"] = state ? state.vpc : undefined;
            resourceInputs["vswitch"] = state ? state.vswitch : undefined;
            resourceInputs["zoneConfig"] = state ? state.zoneConfig : undefined;
        } else {
            const args = argsOrState as GatewayArgs | undefined;
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.zoneConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneConfig'");
            }
            resourceInputs["gatewayName"] = args ? args.gatewayName : undefined;
            resourceInputs["logConfig"] = args ? args.logConfig : undefined;
            resourceInputs["networkAccessConfig"] = args ? args.networkAccessConfig : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpc"] = args ? args.vpc : undefined;
            resourceInputs["vswitch"] = args ? args.vswitch : undefined;
            resourceInputs["zoneConfig"] = args ? args.zoneConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Gateway resources.
 */
export interface GatewayState {
    /**
     * The creation timestamp. Unit: milliseconds.
     */
    createTime?: pulumi.Input<number>;
    /**
     * The name of the resource
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * Log Configuration See `logConfig` below.
     */
    logConfig?: pulumi.Input<inputs.apig.GatewayLogConfig>;
    /**
     * Network Access Configuration See `networkAccessConfig` below.
     */
    networkAccessConfig?: pulumi.Input<inputs.apig.GatewayNetworkAccessConfig>;
    /**
     * The payment type of the resource
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Gateway instance specifications
     */
    spec?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The VPC associated with the Gateway. See `vpc` below.
     */
    vpc?: pulumi.Input<inputs.apig.GatewayVpc>;
    /**
     * The virtual switch associated with the Gateway. See `vswitch` below.
     */
    vswitch?: pulumi.Input<inputs.apig.GatewayVswitch>;
    /**
     * Availability Zone Configuration See `zoneConfig` below.
     */
    zoneConfig?: pulumi.Input<inputs.apig.GatewayZoneConfig>;
}

/**
 * The set of arguments for constructing a Gateway resource.
 */
export interface GatewayArgs {
    /**
     * The name of the resource
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * Log Configuration See `logConfig` below.
     */
    logConfig?: pulumi.Input<inputs.apig.GatewayLogConfig>;
    /**
     * Network Access Configuration See `networkAccessConfig` below.
     */
    networkAccessConfig?: pulumi.Input<inputs.apig.GatewayNetworkAccessConfig>;
    /**
     * The payment type of the resource
     */
    paymentType: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Gateway instance specifications
     */
    spec?: pulumi.Input<string>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The VPC associated with the Gateway. See `vpc` below.
     */
    vpc?: pulumi.Input<inputs.apig.GatewayVpc>;
    /**
     * The virtual switch associated with the Gateway. See `vswitch` below.
     */
    vswitch?: pulumi.Input<inputs.apig.GatewayVswitch>;
    /**
     * Availability Zone Configuration See `zoneConfig` below.
     */
    zoneConfig: pulumi.Input<inputs.apig.GatewayZoneConfig>;
}
