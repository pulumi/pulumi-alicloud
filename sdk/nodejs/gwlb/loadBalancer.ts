// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a GWLB Load Balancer resource.
 *
 * For information about GWLB Load Balancer and how to use it, see [What is Load Balancer](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.234.0.
 *
 * ## Import
 *
 * GWLB Load Balancer can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:gwlb/loadBalancer:LoadBalancer example <id>
 * ```
 */
export class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancer {
        return new LoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:gwlb/loadBalancer:LoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancer.__pulumiType;
    }

    /**
     * The protocol version. Value:
     * - Ipv4: Ipv4 type
     */
    public readonly addressIpVersion!: pulumi.Output<string>;
    /**
     * The resource creation time, in Greenwich Mean Time, in the format of **yyyy-MM-ddTHH:mm:ssZ**.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Gateway Load Balancer instance.
     *
     * It must be 2 to 128 English or Chinese characters in length. It must start with a letter or a Chinese character and can contain digits, half-width periods (.), underscores (_), and dashes (-).
     */
    public readonly loadBalancerName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the resource group
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The status of the Gateway load Balancer instance. Value:, indicating that the instance listener will no longer forward traffic.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The list of tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the VPC which the Gateway Load Balancer instance belongs.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The List of zones and vSwitches mapped. You must add at least one zone and a maximum of 20 zones. If the current region supports two or more zones, we recommend that you add two or more zones. See `zoneMappings` below.
     */
    public readonly zoneMappings!: pulumi.Output<outputs.gwlb.LoadBalancerZoneMapping[]>;

    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerArgs | LoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerState | undefined;
            resourceInputs["addressIpVersion"] = state ? state.addressIpVersion : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["loadBalancerName"] = state ? state.loadBalancerName : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zoneMappings"] = state ? state.zoneMappings : undefined;
        } else {
            const args = argsOrState as LoadBalancerArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.zoneMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneMappings'");
            }
            resourceInputs["addressIpVersion"] = args ? args.addressIpVersion : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["loadBalancerName"] = args ? args.loadBalancerName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zoneMappings"] = args ? args.zoneMappings : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancer resources.
 */
export interface LoadBalancerState {
    /**
     * The protocol version. Value:
     * - Ipv4: Ipv4 type
     */
    addressIpVersion?: pulumi.Input<string>;
    /**
     * The resource creation time, in Greenwich Mean Time, in the format of **yyyy-MM-ddTHH:mm:ssZ**.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The name of the Gateway Load Balancer instance.
     *
     * It must be 2 to 128 English or Chinese characters in length. It must start with a letter or a Chinese character and can contain digits, half-width periods (.), underscores (_), and dashes (-).
     */
    loadBalancerName?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the Gateway load Balancer instance. Value:, indicating that the instance listener will no longer forward traffic.
     */
    status?: pulumi.Input<string>;
    /**
     * The list of tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC which the Gateway Load Balancer instance belongs.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The List of zones and vSwitches mapped. You must add at least one zone and a maximum of 20 zones. If the current region supports two or more zones, we recommend that you add two or more zones. See `zoneMappings` below.
     */
    zoneMappings?: pulumi.Input<pulumi.Input<inputs.gwlb.LoadBalancerZoneMapping>[]>;
}

/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * The protocol version. Value:
     * - Ipv4: Ipv4 type
     */
    addressIpVersion?: pulumi.Input<string>;
    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The name of the Gateway Load Balancer instance.
     *
     * It must be 2 to 128 English or Chinese characters in length. It must start with a letter or a Chinese character and can contain digits, half-width periods (.), underscores (_), and dashes (-).
     */
    loadBalancerName?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The list of tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC which the Gateway Load Balancer instance belongs.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The List of zones and vSwitches mapped. You must add at least one zone and a maximum of 20 zones. If the current region supports two or more zones, we recommend that you add two or more zones. See `zoneMappings` below.
     */
    zoneMappings: pulumi.Input<pulumi.Input<inputs.gwlb.LoadBalancerZoneMapping>[]>;
}
