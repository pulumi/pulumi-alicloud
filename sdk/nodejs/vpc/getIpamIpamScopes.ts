// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Vpc Ipam Ipam Scope available to the user.[What is Ipam Scope](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/CreateIpamScope)
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultIpam = new alicloud.vpc.IpamIpam("defaultIpam", {
 *     operatingRegionLists: ["cn-hangzhou"],
 *     ipamName: name,
 * });
 * const defaultIpamIpamScope = new alicloud.vpc.IpamIpamScope("default", {
 *     ipamScopeName: name,
 *     ipamId: defaultIpam.id,
 *     ipamScopeDescription: "This is a ipam scope.",
 *     ipamScopeType: "private",
 *     tags: {
 *         k1: "v1",
 *     },
 * });
 * const defaultGetIpamIpamScopes = defaultIpamIpamScope.ipamScopeName.apply(ipamScopeName => alicloud.vpc.getIpamIpamScopesOutput({
 *     ipamScopeName: ipamScopeName,
 * }));
 * export const alicloudVpcIpamIpamScopeExampleId = defaultGetIpamIpamScopes.apply(defaultGetIpamIpamScopes => defaultGetIpamIpamScopes.scopes?.[0]?.id);
 * ```
 */
export function getIpamIpamScopes(args?: GetIpamIpamScopesArgs, opts?: pulumi.InvokeOptions): Promise<GetIpamIpamScopesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:vpc/getIpamIpamScopes:getIpamIpamScopes", {
        "ids": args.ids,
        "ipamId": args.ipamId,
        "ipamScopeId": args.ipamScopeId,
        "ipamScopeName": args.ipamScopeName,
        "ipamScopeType": args.ipamScopeType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpamIpamScopes.
 */
export interface GetIpamIpamScopesArgs {
    /**
     * A list of Ipam Scope IDs.
     */
    ids?: string[];
    /**
     * The id of the Ipam instance.
     */
    ipamId?: string;
    /**
     * The first ID of the resource.
     */
    ipamScopeId?: string;
    /**
     * The name of the resource.
     */
    ipamScopeName?: string;
    /**
     * IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
     */
    ipamScopeType?: string;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The tag of the resource.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getIpamIpamScopes.
 */
export interface GetIpamIpamScopesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Ipam Scope IDs.
     */
    readonly ids: string[];
    /**
     * The id of the Ipam instance.
     */
    readonly ipamId?: string;
    /**
     * The first ID of the resource.
     */
    readonly ipamScopeId?: string;
    /**
     * The name of the resource.
     */
    readonly ipamScopeName?: string;
    /**
     * IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
     */
    readonly ipamScopeType?: string;
    readonly nameRegex?: string;
    /**
     * A list of name of Ipam Scopes.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * A list of Ipam Scope Entries. Each element contains the following attributes:
     */
    readonly scopes: outputs.vpc.GetIpamIpamScopesScope[];
    /**
     * The tag of the resource.
     */
    readonly tags?: {[key: string]: string};
}
/**
 * This data source provides Vpc Ipam Ipam Scope available to the user.[What is Ipam Scope](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/CreateIpamScope)
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultIpam = new alicloud.vpc.IpamIpam("defaultIpam", {
 *     operatingRegionLists: ["cn-hangzhou"],
 *     ipamName: name,
 * });
 * const defaultIpamIpamScope = new alicloud.vpc.IpamIpamScope("default", {
 *     ipamScopeName: name,
 *     ipamId: defaultIpam.id,
 *     ipamScopeDescription: "This is a ipam scope.",
 *     ipamScopeType: "private",
 *     tags: {
 *         k1: "v1",
 *     },
 * });
 * const defaultGetIpamIpamScopes = defaultIpamIpamScope.ipamScopeName.apply(ipamScopeName => alicloud.vpc.getIpamIpamScopesOutput({
 *     ipamScopeName: ipamScopeName,
 * }));
 * export const alicloudVpcIpamIpamScopeExampleId = defaultGetIpamIpamScopes.apply(defaultGetIpamIpamScopes => defaultGetIpamIpamScopes.scopes?.[0]?.id);
 * ```
 */
export function getIpamIpamScopesOutput(args?: GetIpamIpamScopesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpamIpamScopesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:vpc/getIpamIpamScopes:getIpamIpamScopes", {
        "ids": args.ids,
        "ipamId": args.ipamId,
        "ipamScopeId": args.ipamScopeId,
        "ipamScopeName": args.ipamScopeName,
        "ipamScopeType": args.ipamScopeType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpamIpamScopes.
 */
export interface GetIpamIpamScopesOutputArgs {
    /**
     * A list of Ipam Scope IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the Ipam instance.
     */
    ipamId?: pulumi.Input<string>;
    /**
     * The first ID of the resource.
     */
    ipamScopeId?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    ipamScopeName?: pulumi.Input<string>;
    /**
     * IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
     */
    ipamScopeType?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
