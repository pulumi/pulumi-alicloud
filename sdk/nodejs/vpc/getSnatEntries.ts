// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides a list of Snat Entries owned by an Alibaba Cloud account.
 *
 * > **NOTE:** Available in 1.37.0+.
 */
export function getSnatEntries(args: GetSnatEntriesArgs, opts?: pulumi.InvokeOptions): Promise<GetSnatEntriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:vpc/getSnatEntries:getSnatEntries", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "snatEntryName": args.snatEntryName,
        "snatIp": args.snatIp,
        "snatTableId": args.snatTableId,
        "sourceCidr": args.sourceCidr,
        "sourceVswitchId": args.sourceVswitchId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnatEntries.
 */
export interface GetSnatEntriesArgs {
    /**
     * A list of Snat Entries IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by the resource name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The name of snat entry.
     */
    snatEntryName?: string;
    /**
     * The public IP of the Snat Entry.
     */
    snatIp?: string;
    /**
     * The ID of the Snat table.
     */
    snatTableId: string;
    /**
     * The source CIDR block of the Snat Entry.
     */
    sourceCidr?: string;
    /**
     * The source vswitch ID.
     */
    sourceVswitchId?: string;
    /**
     * The status of the Snat Entry. Valid values: `Available`, `Deleting` and `Pending`.
     */
    status?: string;
}

/**
 * A collection of values returned by getSnatEntries.
 */
export interface GetSnatEntriesResult {
    /**
     * A list of Snat Entries. Each element contains the following attributes:
     */
    readonly entries: outputs.vpc.GetSnatEntriesEntry[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Optional) A list of Snat Entries IDs.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The name of snat entry.
     */
    readonly snatEntryName?: string;
    /**
     * The public IP of the Snat Entry.
     */
    readonly snatIp?: string;
    readonly snatTableId: string;
    /**
     * The source CIDR block of the Snat Entry.
     */
    readonly sourceCidr?: string;
    /**
     * The source vswitch ID.
     */
    readonly sourceVswitchId?: string;
    /**
     * The status of the Snat Entry.
     */
    readonly status?: string;
}
/**
 * This data source provides a list of Snat Entries owned by an Alibaba Cloud account.
 *
 * > **NOTE:** Available in 1.37.0+.
 */
export function getSnatEntriesOutput(args: GetSnatEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnatEntriesResult> {
    return pulumi.output(args).apply((a: any) => getSnatEntries(a, opts))
}

/**
 * A collection of arguments for invoking getSnatEntries.
 */
export interface GetSnatEntriesOutputArgs {
    /**
     * A list of Snat Entries IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by the resource name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of snat entry.
     */
    snatEntryName?: pulumi.Input<string>;
    /**
     * The public IP of the Snat Entry.
     */
    snatIp?: pulumi.Input<string>;
    /**
     * The ID of the Snat table.
     */
    snatTableId: pulumi.Input<string>;
    /**
     * The source CIDR block of the Snat Entry.
     */
    sourceCidr?: pulumi.Input<string>;
    /**
     * The source vswitch ID.
     */
    sourceVswitchId?: pulumi.Input<string>;
    /**
     * The status of the Snat Entry. Valid values: `Available`, `Deleting` and `Pending`.
     */
    status?: pulumi.Input<string>;
}
