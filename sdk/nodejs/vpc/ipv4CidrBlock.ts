// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a VPC Ipv4 Cidr Block resource.
 *
 * VPC IPv4 additional network segment.
 *
 * For information about VPC Ipv4 Cidr Block and how to use it, see [What is Ipv4 Cidr Block](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/associatevpccidrblock).
 *
 * > **NOTE:** Available since v1.185.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultvpc = new alicloud.vpc.Network("defaultvpc", {description: name});
 * const _default = new alicloud.vpc.Ipv4CidrBlock("default", {
 *     secondaryCidrBlock: "192.168.0.0/16",
 *     vpcId: defaultvpc.id,
 * });
 * ```
 *
 * ## Import
 *
 * VPC Ipv4 Cidr Block can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/ipv4CidrBlock:Ipv4CidrBlock example <vpc_id>:<secondary_cidr_block>
 * ```
 */
export class Ipv4CidrBlock extends pulumi.CustomResource {
    /**
     * Get an existing Ipv4CidrBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv4CidrBlockState, opts?: pulumi.CustomResourceOptions): Ipv4CidrBlock {
        return new Ipv4CidrBlock(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/ipv4CidrBlock:Ipv4CidrBlock';

    /**
     * Returns true if the given object is an instance of Ipv4CidrBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv4CidrBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv4CidrBlock.__pulumiType;
    }

    /**
     * The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
     */
    declare public readonly ipv4IpamPoolId: pulumi.Output<string | undefined>;
    /**
     * The ID of the region where the VPC resides.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * Additional network segment information.
     */
    declare public readonly secondaryCidrBlock: pulumi.Output<string>;
    /**
     * Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
     *
     * > **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
     */
    declare public readonly secondaryCidrMask: pulumi.Output<number | undefined>;
    /**
     * The ID of the VPC.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a Ipv4CidrBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv4CidrBlockArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv4CidrBlockArgs | Ipv4CidrBlockState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv4CidrBlockState | undefined;
            resourceInputs["ipv4IpamPoolId"] = state?.ipv4IpamPoolId;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["secondaryCidrBlock"] = state?.secondaryCidrBlock;
            resourceInputs["secondaryCidrMask"] = state?.secondaryCidrMask;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as Ipv4CidrBlockArgs | undefined;
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["ipv4IpamPoolId"] = args?.ipv4IpamPoolId;
            resourceInputs["secondaryCidrBlock"] = args?.secondaryCidrBlock;
            resourceInputs["secondaryCidrMask"] = args?.secondaryCidrMask;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv4CidrBlock.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ipv4CidrBlock resources.
 */
export interface Ipv4CidrBlockState {
    /**
     * The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
     */
    ipv4IpamPoolId?: pulumi.Input<string>;
    /**
     * The ID of the region where the VPC resides.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Additional network segment information.
     */
    secondaryCidrBlock?: pulumi.Input<string>;
    /**
     * Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
     *
     * > **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
     */
    secondaryCidrMask?: pulumi.Input<number>;
    /**
     * The ID of the VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv4CidrBlock resource.
 */
export interface Ipv4CidrBlockArgs {
    /**
     * The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
     */
    ipv4IpamPoolId?: pulumi.Input<string>;
    /**
     * Additional network segment information.
     */
    secondaryCidrBlock?: pulumi.Input<string>;
    /**
     * Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
     *
     * > **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
     */
    secondaryCidrMask?: pulumi.Input<number>;
    /**
     * The ID of the VPC.
     */
    vpcId: pulumi.Input<string>;
}
