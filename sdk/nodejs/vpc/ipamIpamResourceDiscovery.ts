// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Vpc Ipam Ipam Resource Discovery resource.
 *
 * IP Address Management Resource Discovery.
 *
 * For information about Vpc Ipam Ipam Resource Discovery and how to use it, see [What is Ipam Resource Discovery](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/CreateIpamResourceDiscovery).
 *
 * > **NOTE:** Available since v1.243.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultIpamIpamResourceDiscovery = new alicloud.vpc.IpamIpamResourceDiscovery("default", {
 *     operatingRegionLists: ["cn-hangzhou"],
 *     ipamResourceDiscoveryDescription: "This is a custom IPAM resource discovery.",
 *     ipamResourceDiscoveryName: "example_resource_discovery",
 * });
 * ```
 *
 * ## Import
 *
 * Vpc Ipam Ipam Resource Discovery can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/ipamIpamResourceDiscovery:IpamIpamResourceDiscovery example <id>
 * ```
 */
export class IpamIpamResourceDiscovery extends pulumi.CustomResource {
    /**
     * Get an existing IpamIpamResourceDiscovery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpamIpamResourceDiscoveryState, opts?: pulumi.CustomResourceOptions): IpamIpamResourceDiscovery {
        return new IpamIpamResourceDiscovery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/ipamIpamResourceDiscovery:IpamIpamResourceDiscovery';

    /**
     * Returns true if the given object is an instance of IpamIpamResourceDiscovery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpamIpamResourceDiscovery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpamIpamResourceDiscovery.__pulumiType;
    }

    /**
     * The time when the resource discovery was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The description of resource discovery.
     */
    declare public readonly ipamResourceDiscoveryDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    declare public readonly ipamResourceDiscoveryName: pulumi.Output<string | undefined>;
    /**
     * The list of operating regions for resource discovery.
     */
    declare public readonly operatingRegionLists: pulumi.Output<string[]>;
    /**
     * The region ID of the resource
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The status of the resource discovery instance. Value:
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Label list information.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a IpamIpamResourceDiscovery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpamIpamResourceDiscoveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpamIpamResourceDiscoveryArgs | IpamIpamResourceDiscoveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpamIpamResourceDiscoveryState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["ipamResourceDiscoveryDescription"] = state?.ipamResourceDiscoveryDescription;
            resourceInputs["ipamResourceDiscoveryName"] = state?.ipamResourceDiscoveryName;
            resourceInputs["operatingRegionLists"] = state?.operatingRegionLists;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as IpamIpamResourceDiscoveryArgs | undefined;
            if (args?.operatingRegionLists === undefined && !opts.urn) {
                throw new Error("Missing required property 'operatingRegionLists'");
            }
            resourceInputs["ipamResourceDiscoveryDescription"] = args?.ipamResourceDiscoveryDescription;
            resourceInputs["ipamResourceDiscoveryName"] = args?.ipamResourceDiscoveryName;
            resourceInputs["operatingRegionLists"] = args?.operatingRegionLists;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpamIpamResourceDiscovery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpamIpamResourceDiscovery resources.
 */
export interface IpamIpamResourceDiscoveryState {
    /**
     * The time when the resource discovery was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of resource discovery.
     */
    ipamResourceDiscoveryDescription?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    ipamResourceDiscoveryName?: pulumi.Input<string>;
    /**
     * The list of operating regions for resource discovery.
     */
    operatingRegionLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region ID of the resource
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the resource discovery instance. Value:
     */
    status?: pulumi.Input<string>;
    /**
     * Label list information.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a IpamIpamResourceDiscovery resource.
 */
export interface IpamIpamResourceDiscoveryArgs {
    /**
     * The description of resource discovery.
     */
    ipamResourceDiscoveryDescription?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    ipamResourceDiscoveryName?: pulumi.Input<string>;
    /**
     * The list of operating regions for resource discovery.
     */
    operatingRegionLists: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Label list information.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
