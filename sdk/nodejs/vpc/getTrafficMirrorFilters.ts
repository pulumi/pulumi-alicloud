// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Vpc Traffic Mirror Filters of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.140.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.vpc.getTrafficMirrorFilters({
 *     ids: ["example_id"],
 * });
 * export const vpcTrafficMirrorFilterId1 = ids.then(ids => ids.filters?[0]?.id);
 * const nameRegex = alicloud.vpc.getTrafficMirrorFilters({
 *     nameRegex: "^my-TrafficMirrorFilter",
 * });
 * export const vpcTrafficMirrorFilterId2 = nameRegex.then(nameRegex => nameRegex.filters?[0]?.id);
 * const filterName = alicloud.vpc.getTrafficMirrorFilters({
 *     trafficMirrorFilterName: "example_traffic_mirror_filter_name",
 * });
 * export const vpcTrafficMirrorFilterId3 = filterName.then(filterName => filterName.filters?[0]?.id);
 * const status = alicloud.vpc.getTrafficMirrorFilters({
 *     status: "^my-TrafficMirrorFilter",
 * });
 * export const vpcTrafficMirrorFilterId4 = status.then(status => status.filters?[0]?.id);
 * ```
 */
export function getTrafficMirrorFilters(args?: GetTrafficMirrorFiltersArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficMirrorFiltersResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:vpc/getTrafficMirrorFilters:getTrafficMirrorFilters", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
        "trafficMirrorFilterName": args.trafficMirrorFilterName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficMirrorFilters.
 */
export interface GetTrafficMirrorFiltersArgs {
    /**
     * A list of Traffic Mirror Filter IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Traffic Mirror Filter name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
     */
    status?: string;
    /**
     * The name of the filter.
     */
    trafficMirrorFilterName?: string;
}

/**
 * A collection of values returned by getTrafficMirrorFilters.
 */
export interface GetTrafficMirrorFiltersResult {
    readonly filters: outputs.vpc.GetTrafficMirrorFiltersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly status?: string;
    readonly trafficMirrorFilterName?: string;
}

export function getTrafficMirrorFiltersOutput(args?: GetTrafficMirrorFiltersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrafficMirrorFiltersResult> {
    return pulumi.output(args).apply(a => getTrafficMirrorFilters(a, opts))
}

/**
 * A collection of arguments for invoking getTrafficMirrorFilters.
 */
export interface GetTrafficMirrorFiltersOutputArgs {
    /**
     * A list of Traffic Mirror Filter IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Traffic Mirror Filter name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the filter.
     */
    trafficMirrorFilterName?: pulumi.Input<string>;
}
