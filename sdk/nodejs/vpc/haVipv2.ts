// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a VPC Ha Vip resource.
 *
 * Highly available virtual IP.
 *
 * For information about VPC Ha Vip and how to use it, see [What is Ha Vip](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/createhavip).
 *
 * > **NOTE:** Available since v1.205.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultVpc = new alicloud.vpc.Network("defaultVpc", {
 *     description: name,
 *     vpcName: name,
 *     cidrBlock: "192.168.0.0/16",
 * });
 * const defaultVswitch = new alicloud.vpc.Switch("defaultVswitch", {
 *     vpcId: defaultVpc.id,
 *     cidrBlock: "192.168.0.0/21",
 *     vswitchName: `${name}1`,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     description: name,
 * });
 * const defaultRg = new alicloud.resourcemanager.ResourceGroup("defaultRg", {
 *     displayName: "tf-example-defaultRg",
 *     resourceGroupName: `${name}2`,
 * });
 * const changeRg = new alicloud.resourcemanager.ResourceGroup("changeRg", {
 *     displayName: "tf-example-changeRg",
 *     resourceGroupName: `${name}3`,
 * });
 * const defaultHaVipv2 = new alicloud.vpc.HaVipv2("default", {
 *     description: name,
 *     vswitchId: defaultVswitch.id,
 *     haVipName: name,
 *     ipAddress: "192.168.1.101",
 *     resourceGroupId: defaultRg.id,
 * });
 * ```
 *
 * ## Import
 *
 * VPC Ha Vip can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/haVipv2:HaVipv2 example <id>
 * ```
 */
export class HaVipv2 extends pulumi.CustomResource {
    /**
     * Get an existing HaVipv2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HaVipv2State, opts?: pulumi.CustomResourceOptions): HaVipv2 {
        return new HaVipv2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/haVipv2:HaVipv2';

    /**
     * Returns true if the given object is an instance of HaVipv2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HaVipv2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HaVipv2.__pulumiType;
    }

    /**
     * EIP bound to HaVip
     */
    declare public /*out*/ readonly associatedEipAddresses: pulumi.Output<string[]>;
    /**
     * The type of the instance that is bound to the HaVip. Value:
     * - `EcsInstance`: ECS instance.
     * - `NetworkInterface`: ENI instance.
     */
    declare public /*out*/ readonly associatedInstanceType: pulumi.Output<string>;
    /**
     * The ID of the ECS instance to be associated with the HAVIP.
     */
    declare public /*out*/ readonly associatedInstances: pulumi.Output<string[]>;
    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of the HaVip instance.
     */
    declare public /*out*/ readonly haVipId: pulumi.Output<string>;
    /**
     * The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     */
    declare public readonly haVipName: pulumi.Output<string>;
    /**
     * . Field 'havip_name' has been deprecated from provider version 1.259.0. New field 'ha_vip_name' instead.
     *
     * @deprecated Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead.
     */
    declare public readonly havipName: pulumi.Output<string>;
    /**
     * The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
     */
    declare public readonly ipAddress: pulumi.Output<string>;
    /**
     * The primary instance ID bound to HaVip
     */
    declare public /*out*/ readonly masterInstanceId: pulumi.Output<string>;
    /**
     * The ID of the resource group to which the HAVIP belongs.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The status of this resource instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tags of HaVip.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The VPC ID to which the HaVip instance belongs
     */
    declare public /*out*/ readonly vpcId: pulumi.Output<string>;
    /**
     * The switch ID to which the HaVip instance belongs
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    declare public readonly vswitchId: pulumi.Output<string>;

    /**
     * Create a HaVipv2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HaVipv2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HaVipv2Args | HaVipv2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HaVipv2State | undefined;
            resourceInputs["associatedEipAddresses"] = state?.associatedEipAddresses;
            resourceInputs["associatedInstanceType"] = state?.associatedInstanceType;
            resourceInputs["associatedInstances"] = state?.associatedInstances;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["haVipId"] = state?.haVipId;
            resourceInputs["haVipName"] = state?.haVipName;
            resourceInputs["havipName"] = state?.havipName;
            resourceInputs["ipAddress"] = state?.ipAddress;
            resourceInputs["masterInstanceId"] = state?.masterInstanceId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vswitchId"] = state?.vswitchId;
        } else {
            const args = argsOrState as HaVipv2Args | undefined;
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["haVipName"] = args?.haVipName;
            resourceInputs["havipName"] = args?.havipName;
            resourceInputs["ipAddress"] = args?.ipAddress;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["associatedEipAddresses"] = undefined /*out*/;
            resourceInputs["associatedInstanceType"] = undefined /*out*/;
            resourceInputs["associatedInstances"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["haVipId"] = undefined /*out*/;
            resourceInputs["masterInstanceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HaVipv2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HaVipv2 resources.
 */
export interface HaVipv2State {
    /**
     * EIP bound to HaVip
     */
    associatedEipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the instance that is bound to the HaVip. Value:
     * - `EcsInstance`: ECS instance.
     * - `NetworkInterface`: ENI instance.
     */
    associatedInstanceType?: pulumi.Input<string>;
    /**
     * The ID of the ECS instance to be associated with the HAVIP.
     */
    associatedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the HaVip instance.
     */
    haVipId?: pulumi.Input<string>;
    /**
     * The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     */
    haVipName?: pulumi.Input<string>;
    /**
     * . Field 'havip_name' has been deprecated from provider version 1.259.0. New field 'ha_vip_name' instead.
     *
     * @deprecated Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead.
     */
    havipName?: pulumi.Input<string>;
    /**
     * The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The primary instance ID bound to HaVip
     */
    masterInstanceId?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which the HAVIP belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of this resource instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The tags of HaVip.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The VPC ID to which the HaVip instance belongs
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The switch ID to which the HaVip instance belongs
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HaVipv2 resource.
 */
export interface HaVipv2Args {
    /**
     * The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     */
    haVipName?: pulumi.Input<string>;
    /**
     * . Field 'havip_name' has been deprecated from provider version 1.259.0. New field 'ha_vip_name' instead.
     *
     * @deprecated Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead.
     */
    havipName?: pulumi.Input<string>;
    /**
     * The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which the HAVIP belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tags of HaVip.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The switch ID to which the HaVip instance belongs
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    vswitchId: pulumi.Input<string>;
}
