// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a VPC Ipv6 Internet Bandwidth resource. Public network bandwidth of IPv6 address.
 *
 * For information about VPC Ipv6 Internet Bandwidth and how to use it, see [What is Ipv6 Internet Bandwidth](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/allocateipv6internetbandwidth).
 *
 * > **NOTE:** Available since v1.143.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultZones = alicloud.getZones({});
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: name,
 *     enableIpv6: true,
 *     cidrBlock: "172.16.0.0/12",
 * });
 * const vsw = new alicloud.vpc.Switch("vsw", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/21",
 *     availabilityZone: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     ipv6CidrBlockMask: 22,
 * });
 * const group = new alicloud.ecs.SecurityGroup("group", {
 *     description: "foo",
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultInstanceTypes = defaultZones.then(defaultZones => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: defaultZones.zones?.[0]?.id,
 *     systemDiskCategory: "cloud_efficiency",
 *     cpuCoreCount: 4,
 *     minimumEniIpv6AddressQuantity: 1,
 * }));
 * const defaultImages = alicloud.ecs.getImages({
 *     nameRegex: "^ubuntu_18.*64",
 *     mostRecent: true,
 *     owners: "system",
 * });
 * const vpcInstance = new alicloud.ecs.Instance("vpcInstance", {
 *     availabilityZone: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     ipv6AddressCount: 1,
 *     instanceType: defaultInstanceTypes.then(defaultInstanceTypes => defaultInstanceTypes.instanceTypes?.[0]?.id),
 *     systemDiskCategory: "cloud_efficiency",
 *     imageId: defaultImages.then(defaultImages => defaultImages.images?.[0]?.id),
 *     instanceName: name,
 *     vswitchId: vsw.id,
 *     internetMaxBandwidthOut: 10,
 *     securityGroups: [group].map(__item => __item.id),
 * });
 * const exampleIpv6Gateway = new alicloud.vpc.Ipv6Gateway("exampleIpv6Gateway", {
 *     ipv6GatewayName: "example_value",
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultIpv6Addresses = alicloud.vpc.getIpv6AddressesOutput({
 *     associatedInstanceId: vpcInstance.id,
 *     status: "Available",
 * });
 * const exampleIpv6InternetBandwidth = new alicloud.vpc.Ipv6InternetBandwidth("exampleIpv6InternetBandwidth", {
 *     ipv6AddressId: defaultIpv6Addresses.apply(defaultIpv6Addresses => defaultIpv6Addresses.addresses?.[0]?.id),
 *     ipv6GatewayId: exampleIpv6Gateway.ipv6GatewayId,
 *     internetChargeType: "PayByBandwidth",
 *     bandwidth: 20,
 * });
 * ```
 *
 * ## Import
 *
 * VPC Ipv6 Internet Bandwidth can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/ipv6InternetBandwidth:Ipv6InternetBandwidth example <id>
 * ```
 */
export class Ipv6InternetBandwidth extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6InternetBandwidth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6InternetBandwidthState, opts?: pulumi.CustomResourceOptions): Ipv6InternetBandwidth {
        return new Ipv6InternetBandwidth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/ipv6InternetBandwidth:Ipv6InternetBandwidth';

    /**
     * Returns true if the given object is an instance of Ipv6InternetBandwidth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6InternetBandwidth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6InternetBandwidth.__pulumiType;
    }

    /**
     * The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`. Valid values: `1` to `5000`. **NOTE:** If `internetChargeType` is set to `PayByTraffic`, the amount of Internet bandwidth resources of the IPv6 address is limited by the specification of the IPv6 gateway. `Small` (default): specifies the Free edition and the Internet bandwidth is from `1` to `500` Mbit/s. `Medium`: specifies the Medium edition and the Internet bandwidth is from `1` to `1000` Mbit/s. `Large`: specifies the Large edition and the Internet bandwidth is from `1` to `2000` Mbit/s.
     */
    public readonly bandwidth!: pulumi.Output<number>;
    /**
     * The metering method of the Internet bandwidth resources of the IPv6 gateway. Valid values: `PayByBandwidth`, `PayByTraffic`.
     */
    public readonly internetChargeType!: pulumi.Output<string>;
    /**
     * The ID of the IPv6 address instance.
     */
    public readonly ipv6AddressId!: pulumi.Output<string>;
    /**
     * The ID of the IPv6 gateway to which the IPv6 address belongs.
     */
    public readonly ipv6GatewayId!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Ipv6InternetBandwidth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv6InternetBandwidthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6InternetBandwidthArgs | Ipv6InternetBandwidthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6InternetBandwidthState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["ipv6AddressId"] = state ? state.ipv6AddressId : undefined;
            resourceInputs["ipv6GatewayId"] = state ? state.ipv6GatewayId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as Ipv6InternetBandwidthArgs | undefined;
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if ((!args || args.ipv6AddressId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6AddressId'");
            }
            if ((!args || args.ipv6GatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6GatewayId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["ipv6AddressId"] = args ? args.ipv6AddressId : undefined;
            resourceInputs["ipv6GatewayId"] = args ? args.ipv6GatewayId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6InternetBandwidth.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ipv6InternetBandwidth resources.
 */
export interface Ipv6InternetBandwidthState {
    /**
     * The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`. Valid values: `1` to `5000`. **NOTE:** If `internetChargeType` is set to `PayByTraffic`, the amount of Internet bandwidth resources of the IPv6 address is limited by the specification of the IPv6 gateway. `Small` (default): specifies the Free edition and the Internet bandwidth is from `1` to `500` Mbit/s. `Medium`: specifies the Medium edition and the Internet bandwidth is from `1` to `1000` Mbit/s. `Large`: specifies the Large edition and the Internet bandwidth is from `1` to `2000` Mbit/s.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The metering method of the Internet bandwidth resources of the IPv6 gateway. Valid values: `PayByBandwidth`, `PayByTraffic`.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * The ID of the IPv6 address instance.
     */
    ipv6AddressId?: pulumi.Input<string>;
    /**
     * The ID of the IPv6 gateway to which the IPv6 address belongs.
     */
    ipv6GatewayId?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv6InternetBandwidth resource.
 */
export interface Ipv6InternetBandwidthArgs {
    /**
     * The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`. Valid values: `1` to `5000`. **NOTE:** If `internetChargeType` is set to `PayByTraffic`, the amount of Internet bandwidth resources of the IPv6 address is limited by the specification of the IPv6 gateway. `Small` (default): specifies the Free edition and the Internet bandwidth is from `1` to `500` Mbit/s. `Medium`: specifies the Medium edition and the Internet bandwidth is from `1` to `1000` Mbit/s. `Large`: specifies the Large edition and the Internet bandwidth is from `1` to `2000` Mbit/s.
     */
    bandwidth: pulumi.Input<number>;
    /**
     * The metering method of the Internet bandwidth resources of the IPv6 gateway. Valid values: `PayByBandwidth`, `PayByTraffic`.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * The ID of the IPv6 address instance.
     */
    ipv6AddressId: pulumi.Input<string>;
    /**
     * The ID of the IPv6 gateway to which the IPv6 address belongs.
     */
    ipv6GatewayId: pulumi.Input<string>;
}
