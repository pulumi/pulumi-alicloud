// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Route Entry resource. A Route Entry represents a route item of one VPC Route Table.
 *
 * For information about Route Entry and how to use it, see [What is Route Entry](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-vpc-2016-04-28-createrouteentry).
 *
 * > **NOTE:** Available since v0.1.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.getZones({
 *     availableDiskCategory: "cloud_efficiency",
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultGetImages = alicloud.ecs.getImages({
 *     mostRecent: true,
 *     owners: "system",
 * });
 * const defaultGetInstanceTypes = _default.then(_default => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: _default.zones?.[0]?.id,
 *     cpuCoreCount: 2,
 *     memorySize: 8,
 *     instanceTypeFamily: "ecs.g6",
 * }));
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "192.168.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: name,
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "192.168.192.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultInstance = new alicloud.ecs.Instance("default", {
 *     imageId: defaultGetImages.then(defaultGetImages => defaultGetImages.images?.[0]?.id),
 *     instanceType: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.id),
 *     securityGroups: [defaultSecurityGroup].map(__item => __item.id),
 *     internetChargeType: "PayByTraffic",
 *     internetMaxBandwidthOut: 10,
 *     availabilityZone: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.availabilityZones?.[0]),
 *     instanceChargeType: "PostPaid",
 *     systemDiskCategory: "cloud_efficiency",
 *     vswitchId: defaultSwitch.id,
 *     instanceName: name,
 * });
 * const defaultRouteEntry = new alicloud.vpc.RouteEntry("default", {
 *     routeTableId: defaultNetwork.routeTableId,
 *     destinationCidrblock: "172.11.1.1/32",
 *     nexthopType: "Instance",
 *     nexthopId: defaultInstance.id,
 * });
 * ```
 *
 * ## Module Support
 *
 * You can use to the existing vpc module
 * to create a VPC, several VSwitches and add several route entries one-click.
 *
 * ## Import
 *
 * Route Entry can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/routeEntry:RouteEntry example <route_table_id>:<router_id>:<destination_cidrblock>:<nexthop_type>:<nexthop_id>
 * ```
 */
export class RouteEntry extends pulumi.CustomResource {
    /**
     * Get an existing RouteEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteEntryState, opts?: pulumi.CustomResourceOptions): RouteEntry {
        return new RouteEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/routeEntry:RouteEntry';

    /**
     * Returns true if the given object is an instance of RouteEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouteEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteEntry.__pulumiType;
    }

    /**
     * The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination CIDR block of the custom route entry.
     */
    public readonly destinationCidrblock!: pulumi.Output<string | undefined>;
    /**
     * The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of Next Hop.
     */
    public readonly nexthopId!: pulumi.Output<string | undefined>;
    /**
     * The type of Next Hop. Valid values:
     * - `Instance`: An Elastic Compute Service (ECS) instance.
     * - `HaVip`: A high-availability virtual IP address (HAVIP).
     * - `RouterInterface`: A router interface.
     * - `NetworkInterface`: An elastic network interface (ENI).
     * - `VpnGateway`: A VPN Gateway.
     * - `IPv6Gateway`: An IPv6 gateway.
     * - `NatGateway`: A Nat Gateway.
     * - `Attachment`: A transit router.
     * - `VpcPeer`: A VPC Peering Connection.
     * - `Ipv4Gateway`: An IPv4 gateway.
     * - `GatewayEndpoint`: A gateway endpoint.
     * - `Ecr`: A Express Connect Router (ECR).
     */
    public readonly nexthopType!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Route Table.
     */
    public readonly routeTableId!: pulumi.Output<string>;
    /**
     * This argument has been deprecated. Please use other arguments to launch a custom route entry.
     *
     * @deprecated Attribute routerId has been deprecated and suggest removing it from your template.
     */
    public /*out*/ readonly routerId!: pulumi.Output<string>;

    /**
     * Create a RouteEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteEntryArgs | RouteEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouteEntryState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationCidrblock"] = state ? state.destinationCidrblock : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nexthopId"] = state ? state.nexthopId : undefined;
            resourceInputs["nexthopType"] = state ? state.nexthopType : undefined;
            resourceInputs["routeTableId"] = state ? state.routeTableId : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
        } else {
            const args = argsOrState as RouteEntryArgs | undefined;
            if ((!args || args.routeTableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeTableId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationCidrblock"] = args ? args.destinationCidrblock : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nexthopId"] = args ? args.nexthopId : undefined;
            resourceInputs["nexthopType"] = args ? args.nexthopType : undefined;
            resourceInputs["routeTableId"] = args ? args.routeTableId : undefined;
            resourceInputs["routerId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouteEntry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouteEntry resources.
 */
export interface RouteEntryState {
    /**
     * The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination CIDR block of the custom route entry.
     */
    destinationCidrblock?: pulumi.Input<string>;
    /**
     * The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of Next Hop.
     */
    nexthopId?: pulumi.Input<string>;
    /**
     * The type of Next Hop. Valid values:
     * - `Instance`: An Elastic Compute Service (ECS) instance.
     * - `HaVip`: A high-availability virtual IP address (HAVIP).
     * - `RouterInterface`: A router interface.
     * - `NetworkInterface`: An elastic network interface (ENI).
     * - `VpnGateway`: A VPN Gateway.
     * - `IPv6Gateway`: An IPv6 gateway.
     * - `NatGateway`: A Nat Gateway.
     * - `Attachment`: A transit router.
     * - `VpcPeer`: A VPC Peering Connection.
     * - `Ipv4Gateway`: An IPv4 gateway.
     * - `GatewayEndpoint`: A gateway endpoint.
     * - `Ecr`: A Express Connect Router (ECR).
     */
    nexthopType?: pulumi.Input<string>;
    /**
     * The ID of the Route Table.
     */
    routeTableId?: pulumi.Input<string>;
    /**
     * This argument has been deprecated. Please use other arguments to launch a custom route entry.
     *
     * @deprecated Attribute routerId has been deprecated and suggest removing it from your template.
     */
    routerId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouteEntry resource.
 */
export interface RouteEntryArgs {
    /**
     * The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination CIDR block of the custom route entry.
     */
    destinationCidrblock?: pulumi.Input<string>;
    /**
     * The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of Next Hop.
     */
    nexthopId?: pulumi.Input<string>;
    /**
     * The type of Next Hop. Valid values:
     * - `Instance`: An Elastic Compute Service (ECS) instance.
     * - `HaVip`: A high-availability virtual IP address (HAVIP).
     * - `RouterInterface`: A router interface.
     * - `NetworkInterface`: An elastic network interface (ENI).
     * - `VpnGateway`: A VPN Gateway.
     * - `IPv6Gateway`: An IPv6 gateway.
     * - `NatGateway`: A Nat Gateway.
     * - `Attachment`: A transit router.
     * - `VpcPeer`: A VPC Peering Connection.
     * - `Ipv4Gateway`: An IPv4 gateway.
     * - `GatewayEndpoint`: A gateway endpoint.
     * - `Ecr`: A Express Connect Router (ECR).
     */
    nexthopType?: pulumi.Input<string>;
    /**
     * The ID of the Route Table.
     */
    routeTableId: pulumi.Input<string>;
}
