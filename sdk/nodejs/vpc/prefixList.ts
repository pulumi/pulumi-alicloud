// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Vpc Prefix List resource. This resource is used to create a prefix list.
 *
 * For information about Vpc Prefix List and how to use it, see [What is Prefix List](https://www.alibabacloud.com/help/zh/virtual-private-cloud/latest/creatvpcprefixlist).
 *
 * > **NOTE:** Available since v1.182.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-testacc-example";
 * const defaultRg = new alicloud.resourcemanager.ResourceGroup("defaultRg", {
 *     displayName: "tf-testacc-chenyi",
 *     resourceGroupName: name,
 * });
 * const changeRg = new alicloud.resourcemanager.ResourceGroup("changeRg", {
 *     displayName: "tf-testacc-chenyi-change",
 *     resourceGroupName: `${name}1`,
 * });
 * const _default = new alicloud.vpc.PrefixList("default", {
 *     maxEntries: 50,
 *     resourceGroupId: defaultRg.id,
 *     prefixListDescription: "test",
 *     ipVersion: "IPV4",
 *     prefixListName: name,
 *     entrys: [{
 *         cidr: "192.168.0.0/16",
 *         description: "test",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Vpc Prefix List can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/prefixList:PrefixList example <id>
 * ```
 */
export class PrefixList extends pulumi.CustomResource {
    /**
     * Get an existing PrefixList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrefixListState, opts?: pulumi.CustomResourceOptions): PrefixList {
        return new PrefixList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/prefixList:PrefixList';

    /**
     * Returns true if the given object is an instance of PrefixList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrefixList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrefixList.__pulumiType;
    }

    /**
     * The time when the prefix list was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The CIDR address block list of the prefix list.See the following `Block Entrys`.
     */
    declare public readonly entrys: pulumi.Output<outputs.vpc.PrefixListEntry[] | undefined>;
    /**
     * The IP version of the prefix list. Value:-**IPV4**:IPv4 version.-**IPV6**:IPv6 version.
     */
    declare public readonly ipVersion: pulumi.Output<string>;
    /**
     * The maximum number of entries for CIDR address blocks in the prefix list.
     */
    declare public readonly maxEntries: pulumi.Output<number>;
    /**
     * The association list information of the prefix list.
     */
    declare public /*out*/ readonly prefixListAssociations: pulumi.Output<outputs.vpc.PrefixListPrefixListAssociation[]>;
    /**
     * The description of the prefix list.It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     */
    declare public readonly prefixListDescription: pulumi.Output<string | undefined>;
    /**
     * The ID of the query Prefix List.
     */
    declare public /*out*/ readonly prefixListId: pulumi.Output<string>;
    /**
     * The name of the prefix list. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     */
    declare public readonly prefixListName: pulumi.Output<string | undefined>;
    /**
     * The ID of the resource group to which the PrefixList belongs.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The share type of the prefix list. Value:-**Shared**: indicates that the prefix list is a Shared prefix list.-Null: indicates that the prefix list is not a shared prefix list.
     */
    declare public /*out*/ readonly shareType: pulumi.Output<string>;
    /**
     * Resource attribute fields that represent the status of the resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tags of PrefixList.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a PrefixList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PrefixListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrefixListArgs | PrefixListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrefixListState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["entrys"] = state?.entrys;
            resourceInputs["ipVersion"] = state?.ipVersion;
            resourceInputs["maxEntries"] = state?.maxEntries;
            resourceInputs["prefixListAssociations"] = state?.prefixListAssociations;
            resourceInputs["prefixListDescription"] = state?.prefixListDescription;
            resourceInputs["prefixListId"] = state?.prefixListId;
            resourceInputs["prefixListName"] = state?.prefixListName;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["shareType"] = state?.shareType;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as PrefixListArgs | undefined;
            resourceInputs["entrys"] = args?.entrys;
            resourceInputs["ipVersion"] = args?.ipVersion;
            resourceInputs["maxEntries"] = args?.maxEntries;
            resourceInputs["prefixListDescription"] = args?.prefixListDescription;
            resourceInputs["prefixListName"] = args?.prefixListName;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["prefixListAssociations"] = undefined /*out*/;
            resourceInputs["prefixListId"] = undefined /*out*/;
            resourceInputs["shareType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrefixList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrefixList resources.
 */
export interface PrefixListState {
    /**
     * The time when the prefix list was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The CIDR address block list of the prefix list.See the following `Block Entrys`.
     */
    entrys?: pulumi.Input<pulumi.Input<inputs.vpc.PrefixListEntry>[]>;
    /**
     * The IP version of the prefix list. Value:-**IPV4**:IPv4 version.-**IPV6**:IPv6 version.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The maximum number of entries for CIDR address blocks in the prefix list.
     */
    maxEntries?: pulumi.Input<number>;
    /**
     * The association list information of the prefix list.
     */
    prefixListAssociations?: pulumi.Input<pulumi.Input<inputs.vpc.PrefixListPrefixListAssociation>[]>;
    /**
     * The description of the prefix list.It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     */
    prefixListDescription?: pulumi.Input<string>;
    /**
     * The ID of the query Prefix List.
     */
    prefixListId?: pulumi.Input<string>;
    /**
     * The name of the prefix list. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     */
    prefixListName?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which the PrefixList belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The share type of the prefix list. Value:-**Shared**: indicates that the prefix list is a Shared prefix list.-Null: indicates that the prefix list is not a shared prefix list.
     */
    shareType?: pulumi.Input<string>;
    /**
     * Resource attribute fields that represent the status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The tags of PrefixList.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a PrefixList resource.
 */
export interface PrefixListArgs {
    /**
     * The CIDR address block list of the prefix list.See the following `Block Entrys`.
     */
    entrys?: pulumi.Input<pulumi.Input<inputs.vpc.PrefixListEntry>[]>;
    /**
     * The IP version of the prefix list. Value:-**IPV4**:IPv4 version.-**IPV6**:IPv6 version.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The maximum number of entries for CIDR address blocks in the prefix list.
     */
    maxEntries?: pulumi.Input<number>;
    /**
     * The description of the prefix list.It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     */
    prefixListDescription?: pulumi.Input<string>;
    /**
     * The name of the prefix list. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     */
    prefixListName?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which the PrefixList belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tags of PrefixList.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
