// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Vpc Vswitch Cidr Reservation resource. The reserved network segment of the vswitch. This resource type can be used only in ap-southeast region.
 *
 * For information about Vpc Vswitch Cidr Reservation and how to use it, see [What is Vswitch Cidr Reservation](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/610154).
 *
 * > **NOTE:** Available since v1.205.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultVpc = new alicloud.vpc.Network("defaultVpc", {
 *     vpcName: name,
 *     cidrBlock: "10.0.0.0/8",
 * });
 * const defaultVSwitch = new alicloud.vpc.Switch("defaultVSwitch", {
 *     vpcId: defaultVpc.id,
 *     cidrBlock: "10.0.0.0/20",
 *     vswitchName: `${name}1`,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * });
 * const defaultVswitchCidrReservation = new alicloud.vpc.VswitchCidrReservation("defaultVswitchCidrReservation", {
 *     ipVersion: "IPv4",
 *     vswitchId: defaultVSwitch.id,
 *     cidrReservationDescription: name,
 *     cidrReservationCidr: "10.0.10.0/24",
 *     vswitchCidrReservationName: name,
 *     cidrReservationType: "Prefix",
 * });
 * ```
 *
 * ## Import
 *
 * Vpc Vswitch Cidr Reservation can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:vpc/vswitchCidrReservation:VswitchCidrReservation example <vswitch_id>:<vswitch_cidr_reservation_id>
 * ```
 */
export class VswitchCidrReservation extends pulumi.CustomResource {
    /**
     * Get an existing VswitchCidrReservation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VswitchCidrReservationState, opts?: pulumi.CustomResourceOptions): VswitchCidrReservation {
        return new VswitchCidrReservation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/vswitchCidrReservation:VswitchCidrReservation';

    /**
     * Returns true if the given object is an instance of VswitchCidrReservation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VswitchCidrReservation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VswitchCidrReservation.__pulumiType;
    }

    /**
     * Reserved network segment CIdrBlock.
     */
    public readonly cidrReservationCidr!: pulumi.Output<string>;
    /**
     * The description of the reserved CIDR block.
     */
    public readonly cidrReservationDescription!: pulumi.Output<string | undefined>;
    /**
     * Reserved segment mask.
     */
    public readonly cidrReservationMask!: pulumi.Output<string | undefined>;
    /**
     * Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
     */
    public readonly cidrReservationType!: pulumi.Output<string>;
    /**
     * The creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
     */
    public readonly ipVersion!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The id of the vpc instance to which the reserved CIDR block belongs.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    /**
     * The resource attribute field of the resource ID.
     */
    public /*out*/ readonly vswitchCidrReservationId!: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    public readonly vswitchCidrReservationName!: pulumi.Output<string | undefined>;
    /**
     * The Id of the switch instance.
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a VswitchCidrReservation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VswitchCidrReservationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VswitchCidrReservationArgs | VswitchCidrReservationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VswitchCidrReservationState | undefined;
            resourceInputs["cidrReservationCidr"] = state ? state.cidrReservationCidr : undefined;
            resourceInputs["cidrReservationDescription"] = state ? state.cidrReservationDescription : undefined;
            resourceInputs["cidrReservationMask"] = state ? state.cidrReservationMask : undefined;
            resourceInputs["cidrReservationType"] = state ? state.cidrReservationType : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchCidrReservationId"] = state ? state.vswitchCidrReservationId : undefined;
            resourceInputs["vswitchCidrReservationName"] = state ? state.vswitchCidrReservationName : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as VswitchCidrReservationArgs | undefined;
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["cidrReservationCidr"] = args ? args.cidrReservationCidr : undefined;
            resourceInputs["cidrReservationDescription"] = args ? args.cidrReservationDescription : undefined;
            resourceInputs["cidrReservationMask"] = args ? args.cidrReservationMask : undefined;
            resourceInputs["cidrReservationType"] = args ? args.cidrReservationType : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["vswitchCidrReservationName"] = args ? args.vswitchCidrReservationName : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
            resourceInputs["vswitchCidrReservationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VswitchCidrReservation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VswitchCidrReservation resources.
 */
export interface VswitchCidrReservationState {
    /**
     * Reserved network segment CIdrBlock.
     */
    cidrReservationCidr?: pulumi.Input<string>;
    /**
     * The description of the reserved CIDR block.
     */
    cidrReservationDescription?: pulumi.Input<string>;
    /**
     * Reserved segment mask.
     */
    cidrReservationMask?: pulumi.Input<string>;
    /**
     * Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
     */
    cidrReservationType?: pulumi.Input<string>;
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The id of the vpc instance to which the reserved CIDR block belongs.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The resource attribute field of the resource ID.
     */
    vswitchCidrReservationId?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    vswitchCidrReservationName?: pulumi.Input<string>;
    /**
     * The Id of the switch instance.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VswitchCidrReservation resource.
 */
export interface VswitchCidrReservationArgs {
    /**
     * Reserved network segment CIdrBlock.
     */
    cidrReservationCidr?: pulumi.Input<string>;
    /**
     * The description of the reserved CIDR block.
     */
    cidrReservationDescription?: pulumi.Input<string>;
    /**
     * Reserved segment mask.
     */
    cidrReservationMask?: pulumi.Input<string>;
    /**
     * Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
     */
    cidrReservationType?: pulumi.Input<string>;
    /**
     * Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    vswitchCidrReservationName?: pulumi.Input<string>;
    /**
     * The Id of the switch instance.
     */
    vswitchId: pulumi.Input<string>;
}
