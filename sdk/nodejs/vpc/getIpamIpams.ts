// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Vpc Ipam Ipam available to the user.[What is Ipam](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/CreateIpam)
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultIpamIpam = new alicloud.vpc.IpamIpam("default", {
 *     ipamDescription: "This is my first Ipam.",
 *     ipamName: name,
 *     operatingRegionLists: ["cn-hangzhou"],
 * });
 * const defaultGetIpamIpams = pulumi.all([defaultIpamIpam.id, defaultIpamIpam.ipamName]).apply(([id, ipamName]) => alicloud.vpc.getIpamIpamsOutput({
 *     ids: [id],
 *     nameRegex: ipamName,
 *     ipamName: name,
 * }));
 * export const alicloudVpcIpamIpamExampleId = defaultGetIpamIpams.apply(defaultGetIpamIpams => defaultGetIpamIpams.ipams?.[0]?.id);
 * ```
 */
export function getIpamIpams(args?: GetIpamIpamsArgs, opts?: pulumi.InvokeOptions): Promise<GetIpamIpamsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:vpc/getIpamIpams:getIpamIpams", {
        "ids": args.ids,
        "ipamId": args.ipamId,
        "ipamName": args.ipamName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpamIpams.
 */
export interface GetIpamIpamsArgs {
    /**
     * A list of Ipam IDs.
     */
    ids?: string[];
    /**
     * The first ID of the resource.
     */
    ipamId?: string;
    /**
     * The name of the resource.
     */
    ipamName?: string;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The tag of the resource.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getIpamIpams.
 */
export interface GetIpamIpamsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Ipam IDs.
     */
    readonly ids: string[];
    /**
     * The first ID of the resource.
     */
    readonly ipamId?: string;
    /**
     * The name of the resource.
     */
    readonly ipamName?: string;
    /**
     * A list of Ipam Entries. Each element contains the following attributes:
     */
    readonly ipams: outputs.vpc.GetIpamIpamsIpam[];
    readonly nameRegex?: string;
    /**
     * A list of name of Ipams.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * The tag of the resource.
     */
    readonly tags?: {[key: string]: string};
}
/**
 * This data source provides Vpc Ipam Ipam available to the user.[What is Ipam](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/CreateIpam)
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultIpamIpam = new alicloud.vpc.IpamIpam("default", {
 *     ipamDescription: "This is my first Ipam.",
 *     ipamName: name,
 *     operatingRegionLists: ["cn-hangzhou"],
 * });
 * const defaultGetIpamIpams = pulumi.all([defaultIpamIpam.id, defaultIpamIpam.ipamName]).apply(([id, ipamName]) => alicloud.vpc.getIpamIpamsOutput({
 *     ids: [id],
 *     nameRegex: ipamName,
 *     ipamName: name,
 * }));
 * export const alicloudVpcIpamIpamExampleId = defaultGetIpamIpams.apply(defaultGetIpamIpams => defaultGetIpamIpams.ipams?.[0]?.id);
 * ```
 */
export function getIpamIpamsOutput(args?: GetIpamIpamsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpamIpamsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:vpc/getIpamIpams:getIpamIpams", {
        "ids": args.ids,
        "ipamId": args.ipamId,
        "ipamName": args.ipamName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpamIpams.
 */
export interface GetIpamIpamsOutputArgs {
    /**
     * A list of Ipam IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The first ID of the resource.
     */
    ipamId?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    ipamName?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
