// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Bgp Peer resource.
 *
 * For information about VPC Bgp Peer and how to use it, see [What is Bgp Peer](https://www.alibabacloud.com/help/en/doc-detail/91267.html).
 *
 * > **NOTE:** Available since v1.153.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const example = alicloud.expressconnect.getPhysicalConnections({
 *     nameRegex: "^preserved-NODELETING",
 * });
 * const vlanId = new random.index.Integer("vlan_id", {
 *     max: 2999,
 *     min: 1,
 * });
 * const exampleVirtualBorderRouter = new alicloud.expressconnect.VirtualBorderRouter("example", {
 *     localGatewayIp: "10.0.0.1",
 *     peerGatewayIp: "10.0.0.2",
 *     peeringSubnetMask: "255.255.255.252",
 *     physicalConnectionId: example.then(example => example.connections?.[0]?.id),
 *     virtualBorderRouterName: name,
 *     vlanId: vlanId.id,
 *     minRxInterval: 1000,
 *     minTxInterval: 1000,
 *     detectMultiplier: 10,
 * });
 * const exampleBgpGroup = new alicloud.vpc.BgpGroup("example", {
 *     authKey: "YourPassword+12345678",
 *     bgpGroupName: name,
 *     description: name,
 *     peerAsn: 1111,
 *     routerId: exampleVirtualBorderRouter.id,
 *     isFakeAsn: true,
 * });
 * const exampleBgpPeer = new alicloud.vpc.BgpPeer("example", {
 *     bfdMultiHop: 10,
 *     bgpGroupId: exampleBgpGroup.id,
 *     enableBfd: true,
 *     ipVersion: "IPV4",
 *     peerIpAddress: "1.1.1.1",
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Bgp Peer can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/bgpPeer:BgpPeer example <id>
 * ```
 */
export class BgpPeer extends pulumi.CustomResource {
    /**
     * Get an existing BgpPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpPeerState, opts?: pulumi.CustomResourceOptions): BgpPeer {
        return new BgpPeer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/bgpPeer:BgpPeer';

    /**
     * Returns true if the given object is an instance of BgpPeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BgpPeer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BgpPeer.__pulumiType;
    }

    /**
     * The BFD hop count. Valid values: `1` to `255`. **NOTE:** The attribute is valid when the attribute `enableBfd` is `true`. The parameter specifies the maximum number of network devices that a packet can traverse from the source to the destination. You can set a proper value based on the factors that affect the physical connection.
     */
    declare public readonly bfdMultiHop: pulumi.Output<number | undefined>;
    /**
     * The ID of the BGP group.
     */
    declare public readonly bgpGroupId: pulumi.Output<string>;
    /**
     * The name of the BGP neighbor.
     */
    declare public /*out*/ readonly bgpPeerName: pulumi.Output<string>;
    /**
     * Specifies whether to enable the Bidirectional Forwarding Detection (BFD) feature.
     */
    declare public readonly enableBfd: pulumi.Output<boolean | undefined>;
    /**
     * The IP version.
     */
    declare public readonly ipVersion: pulumi.Output<string>;
    /**
     * The IP address of the BGP peer.
     */
    declare public readonly peerIpAddress: pulumi.Output<string>;
    /**
     * Status of BGP neighbors.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a BgpPeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpPeerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpPeerArgs | BgpPeerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpPeerState | undefined;
            resourceInputs["bfdMultiHop"] = state?.bfdMultiHop;
            resourceInputs["bgpGroupId"] = state?.bgpGroupId;
            resourceInputs["bgpPeerName"] = state?.bgpPeerName;
            resourceInputs["enableBfd"] = state?.enableBfd;
            resourceInputs["ipVersion"] = state?.ipVersion;
            resourceInputs["peerIpAddress"] = state?.peerIpAddress;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as BgpPeerArgs | undefined;
            if (args?.bgpGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'bgpGroupId'");
            }
            resourceInputs["bfdMultiHop"] = args?.bfdMultiHop;
            resourceInputs["bgpGroupId"] = args?.bgpGroupId;
            resourceInputs["enableBfd"] = args?.enableBfd;
            resourceInputs["ipVersion"] = args?.ipVersion;
            resourceInputs["peerIpAddress"] = args?.peerIpAddress;
            resourceInputs["bgpPeerName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BgpPeer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BgpPeer resources.
 */
export interface BgpPeerState {
    /**
     * The BFD hop count. Valid values: `1` to `255`. **NOTE:** The attribute is valid when the attribute `enableBfd` is `true`. The parameter specifies the maximum number of network devices that a packet can traverse from the source to the destination. You can set a proper value based on the factors that affect the physical connection.
     */
    bfdMultiHop?: pulumi.Input<number>;
    /**
     * The ID of the BGP group.
     */
    bgpGroupId?: pulumi.Input<string>;
    /**
     * The name of the BGP neighbor.
     */
    bgpPeerName?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the Bidirectional Forwarding Detection (BFD) feature.
     */
    enableBfd?: pulumi.Input<boolean>;
    /**
     * The IP version.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The IP address of the BGP peer.
     */
    peerIpAddress?: pulumi.Input<string>;
    /**
     * Status of BGP neighbors.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BgpPeer resource.
 */
export interface BgpPeerArgs {
    /**
     * The BFD hop count. Valid values: `1` to `255`. **NOTE:** The attribute is valid when the attribute `enableBfd` is `true`. The parameter specifies the maximum number of network devices that a packet can traverse from the source to the destination. You can set a proper value based on the factors that affect the physical connection.
     */
    bfdMultiHop?: pulumi.Input<number>;
    /**
     * The ID of the BGP group.
     */
    bgpGroupId: pulumi.Input<string>;
    /**
     * Specifies whether to enable the Bidirectional Forwarding Detection (BFD) feature.
     */
    enableBfd?: pulumi.Input<boolean>;
    /**
     * The IP version.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The IP address of the BGP peer.
     */
    peerIpAddress?: pulumi.Input<string>;
}
