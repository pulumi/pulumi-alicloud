// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const exampleNetwork = new alicloud.vpc.Network("exampleNetwork", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("exampleSwitch", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: exampleNetwork.id,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 * });
 * const exampleHAVip = new alicloud.vpc.HAVip("exampleHAVip", {
 *     vswitchId: exampleSwitch.id,
 *     description: name,
 * });
 * ```
 *
 * ## Import
 *
 * The havip can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/hAVip:HAVip foo havip-abc123456
 * ```
 */
export class HAVip extends pulumi.CustomResource {
    /**
     * Get an existing HAVip resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HAVipState, opts?: pulumi.CustomResourceOptions): HAVip {
        return new HAVip(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/hAVip:HAVip';

    /**
     * Returns true if the given object is an instance of HAVip.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HAVip {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HAVip.__pulumiType;
    }

    /**
     * The elastic IP address (EIP) associated with the HAVIP.
     */
    public /*out*/ readonly associatedEipAddresses!: pulumi.Output<string[]>;
    /**
     * The type of the instance with which the HAVIP is associated. Valid values:
     */
    public /*out*/ readonly associatedInstanceType!: pulumi.Output<string>;
    /**
     * The ID of the instance with which the HAVIP is associated.
     */
    public /*out*/ readonly associatedInstances!: pulumi.Output<string[]>;
    /**
     * The time when the HAVIP was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the HaVip instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the HAVIP.
     */
    public /*out*/ readonly haVipId!: pulumi.Output<string>;
    /**
     * The name of the HAVIP.
     */
    public readonly haVipName!: pulumi.Output<string>;
    /**
     * The name of the HaVip instance.
     *
     * @deprecated Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead.
     */
    public readonly havipName!: pulumi.Output<string>;
    /**
     * The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The ID of the active instance that is associated with the HAVIP.
     */
    public /*out*/ readonly masterInstanceId!: pulumi.Output<string>;
    /**
     * The ID of the resource group to which the HAVIP belongs.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * (Available in v1.120.0+) The status of the HaVip instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The list of tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The ID of the VPC to which the HAVIP belongs.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    /**
     * The vswitchId of the HaVip, the field can't be changed.
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a HAVip resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HAVipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HAVipArgs | HAVipState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HAVipState | undefined;
            resourceInputs["associatedEipAddresses"] = state ? state.associatedEipAddresses : undefined;
            resourceInputs["associatedInstanceType"] = state ? state.associatedInstanceType : undefined;
            resourceInputs["associatedInstances"] = state ? state.associatedInstances : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["haVipId"] = state ? state.haVipId : undefined;
            resourceInputs["haVipName"] = state ? state.haVipName : undefined;
            resourceInputs["havipName"] = state ? state.havipName : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["masterInstanceId"] = state ? state.masterInstanceId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as HAVipArgs | undefined;
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["haVipName"] = args ? args.haVipName : undefined;
            resourceInputs["havipName"] = args ? args.havipName : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["associatedEipAddresses"] = undefined /*out*/;
            resourceInputs["associatedInstanceType"] = undefined /*out*/;
            resourceInputs["associatedInstances"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["haVipId"] = undefined /*out*/;
            resourceInputs["masterInstanceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HAVip.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HAVip resources.
 */
export interface HAVipState {
    /**
     * The elastic IP address (EIP) associated with the HAVIP.
     */
    associatedEipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the instance with which the HAVIP is associated. Valid values:
     */
    associatedInstanceType?: pulumi.Input<string>;
    /**
     * The ID of the instance with which the HAVIP is associated.
     */
    associatedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time when the HAVIP was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the HaVip instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the HAVIP.
     */
    haVipId?: pulumi.Input<string>;
    /**
     * The name of the HAVIP.
     */
    haVipName?: pulumi.Input<string>;
    /**
     * The name of the HaVip instance.
     *
     * @deprecated Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead.
     */
    havipName?: pulumi.Input<string>;
    /**
     * The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The ID of the active instance that is associated with the HAVIP.
     */
    masterInstanceId?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which the HAVIP belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * (Available in v1.120.0+) The status of the HaVip instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The list of tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The ID of the VPC to which the HAVIP belongs.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The vswitchId of the HaVip, the field can't be changed.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HAVip resource.
 */
export interface HAVipArgs {
    /**
     * The description of the HaVip instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the HAVIP.
     */
    haVipName?: pulumi.Input<string>;
    /**
     * The name of the HaVip instance.
     *
     * @deprecated Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead.
     */
    havipName?: pulumi.Input<string>;
    /**
     * The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which the HAVIP belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The list of tags.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The vswitchId of the HaVip, the field can't be changed.
     */
    vswitchId: pulumi.Input<string>;
}
