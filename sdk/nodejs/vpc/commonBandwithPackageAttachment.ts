// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.vpc.CommonBandwithPackage("default", {
 *     bandwidth: "3",
 *     internetChargeType: "PayByTraffic",
 * });
 * const defaultEipAddress = new alicloud.ecs.EipAddress("default", {
 *     bandwidth: "3",
 *     internetChargeType: "PayByTraffic",
 * });
 * const defaultCommonBandwithPackageAttachment = new alicloud.vpc.CommonBandwithPackageAttachment("default", {
 *     bandwidthPackageId: _default.id,
 *     instanceId: defaultEipAddress.id,
 *     bandwidthPackageBandwidth: "2",
 *     ipType: "EIP",
 * });
 * ```
 *
 * ## Import
 *
 * EIP Bandwidth Plan (CBWP) Common Bandwidth Package Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpc/commonBandwithPackageAttachment:CommonBandwithPackageAttachment example <bandwidth_package_id>:<instance_id>
 * ```
 */
export class CommonBandwithPackageAttachment extends pulumi.CustomResource {
    /**
     * Get an existing CommonBandwithPackageAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CommonBandwithPackageAttachmentState, opts?: pulumi.CustomResourceOptions): CommonBandwithPackageAttachment {
        return new CommonBandwithPackageAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/commonBandwithPackageAttachment:CommonBandwithPackageAttachment';

    /**
     * Returns true if the given object is an instance of CommonBandwithPackageAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CommonBandwithPackageAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CommonBandwithPackageAttachment.__pulumiType;
    }

    /**
     * The maximum bandwidth for the EIP. This value cannot be larger than the maximum bandwidth of the Internet Shared Bandwidth instance. Unit: Mbit/s.
     */
    declare public readonly bandwidthPackageBandwidth: pulumi.Output<string>;
    /**
     * The ID of the Internet Shared Bandwidth instance.
     */
    declare public readonly bandwidthPackageId: pulumi.Output<string>;
    /**
     * Whether to cancel the maximum bandwidth configuration for the EIP. Default: false.
     */
    declare public readonly cancelCommonBandwidthPackageIpBandwidth: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the EIP that you want to query.
     *
     * You can specify up to 50 EIP IDs. Separate multiple IDs with commas (,).
     *
     * > **NOTE:**   If both `EipAddress` and `AllocationId` are specified, you can specify up to 50 EIP IDs for `AllocationId`, and specify up to 50 EIPs for `EipAddress`.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * The type of IP address. Set the value to `EIP` to associate EIPs with the Internet Shared Bandwidth instance.
     */
    declare public readonly ipType: pulumi.Output<string | undefined>;
    /**
     * The status of the Internet Shared Bandwidth instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a CommonBandwithPackageAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CommonBandwithPackageAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CommonBandwithPackageAttachmentArgs | CommonBandwithPackageAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CommonBandwithPackageAttachmentState | undefined;
            resourceInputs["bandwidthPackageBandwidth"] = state?.bandwidthPackageBandwidth;
            resourceInputs["bandwidthPackageId"] = state?.bandwidthPackageId;
            resourceInputs["cancelCommonBandwidthPackageIpBandwidth"] = state?.cancelCommonBandwidthPackageIpBandwidth;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["ipType"] = state?.ipType;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as CommonBandwithPackageAttachmentArgs | undefined;
            if (args?.bandwidthPackageId === undefined && !opts.urn) {
                throw new Error("Missing required property 'bandwidthPackageId'");
            }
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["bandwidthPackageBandwidth"] = args?.bandwidthPackageBandwidth;
            resourceInputs["bandwidthPackageId"] = args?.bandwidthPackageId;
            resourceInputs["cancelCommonBandwidthPackageIpBandwidth"] = args?.cancelCommonBandwidthPackageIpBandwidth;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["ipType"] = args?.ipType;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CommonBandwithPackageAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CommonBandwithPackageAttachment resources.
 */
export interface CommonBandwithPackageAttachmentState {
    /**
     * The maximum bandwidth for the EIP. This value cannot be larger than the maximum bandwidth of the Internet Shared Bandwidth instance. Unit: Mbit/s.
     */
    bandwidthPackageBandwidth?: pulumi.Input<string>;
    /**
     * The ID of the Internet Shared Bandwidth instance.
     */
    bandwidthPackageId?: pulumi.Input<string>;
    /**
     * Whether to cancel the maximum bandwidth configuration for the EIP. Default: false.
     */
    cancelCommonBandwidthPackageIpBandwidth?: pulumi.Input<boolean>;
    /**
     * The ID of the EIP that you want to query.
     *
     * You can specify up to 50 EIP IDs. Separate multiple IDs with commas (,).
     *
     * > **NOTE:**   If both `EipAddress` and `AllocationId` are specified, you can specify up to 50 EIP IDs for `AllocationId`, and specify up to 50 EIPs for `EipAddress`.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of IP address. Set the value to `EIP` to associate EIPs with the Internet Shared Bandwidth instance.
     */
    ipType?: pulumi.Input<string>;
    /**
     * The status of the Internet Shared Bandwidth instance.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CommonBandwithPackageAttachment resource.
 */
export interface CommonBandwithPackageAttachmentArgs {
    /**
     * The maximum bandwidth for the EIP. This value cannot be larger than the maximum bandwidth of the Internet Shared Bandwidth instance. Unit: Mbit/s.
     */
    bandwidthPackageBandwidth?: pulumi.Input<string>;
    /**
     * The ID of the Internet Shared Bandwidth instance.
     */
    bandwidthPackageId: pulumi.Input<string>;
    /**
     * Whether to cancel the maximum bandwidth configuration for the EIP. Default: false.
     */
    cancelCommonBandwidthPackageIpBandwidth?: pulumi.Input<boolean>;
    /**
     * The ID of the EIP that you want to query.
     *
     * You can specify up to 50 EIP IDs. Separate multiple IDs with commas (,).
     *
     * > **NOTE:**   If both `EipAddress` and `AllocationId` are specified, you can specify up to 50 EIP IDs for `AllocationId`, and specify up to 50 EIPs for `EipAddress`.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The type of IP address. Set the value to `EIP` to associate EIPs with the Internet Shared Bandwidth instance.
     */
    ipType?: pulumi.Input<string>;
}
