// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a VPC Nat Ip Cidr resource.
 *
 * For information about VPC Nat Ip Cidr and how to use it, see [What is Nat Ip Cidr](https://www.alibabacloud.com/help/doc-detail/281972.htm).
 *
 * > **NOTE:** Available in v1.136.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const exampleZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const exampleNetwork = new alicloud.vpc.Network("exampleNetwork", {
 *     vpcName: "example_value",
 *     cidrBlock: "172.16.0.0/12",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("exampleSwitch", {
 *     vpcId: alicloud_vpc["default"].id,
 *     cidrBlock: "172.16.0.0/21",
 *     zoneId: exampleZones.then(exampleZones => exampleZones.zones?[0]?.id),
 *     vswitchName: _var.name,
 * });
 * const exampleNatGateway = new alicloud.vpc.NatGateway("exampleNatGateway", {
 *     vpcId: alicloud_vpc["default"].id,
 *     internetChargeType: "PayByLcu",
 *     natGatewayName: "example_value",
 *     description: "example_value",
 *     natType: "Enhanced",
 *     vswitchId: exampleSwitch.id,
 *     networkType: "intranet",
 * });
 * const exampleNatIpCidr = new alicloud.vpc.NatIpCidr("exampleNatIpCidr", {
 *     natGatewayId: exampleNatGateway.id,
 *     natIpCidrName: "example_value",
 *     natIpCidr: "example_value",
 * });
 * ```
 *
 * ## Import
 *
 * VPC Nat Ip Cidr can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:vpc/natIpCidr:NatIpCidr example <nat_gateway_id>:<nat_ip_cidr>
 * ```
 */
export class NatIpCidr extends pulumi.CustomResource {
    /**
     * Get an existing NatIpCidr resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatIpCidrState, opts?: pulumi.CustomResourceOptions): NatIpCidr {
        return new NatIpCidr(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpc/natIpCidr:NatIpCidr';

    /**
     * Returns true if the given object is an instance of NatIpCidr.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatIpCidr {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatIpCidr.__pulumiType;
    }

    /**
     * Specifies whether to precheck this request only. Valid values: `true` and `false`.
     */
    public readonly dryRun!: pulumi.Output<boolean>;
    /**
     * The ID of the Virtual Private Cloud (VPC) NAT gateway where you want to create the NAT CIDR block.
     */
    public readonly natGatewayId!: pulumi.Output<string>;
    /**
     * The NAT CIDR block to be created. The CIDR block must meet the following conditions: It must be `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`, or one of their subnets. The subnet mask must be `16` to `32` bits in lengths. To use a public CIDR block as the NAT CIDR block, the VPC to which the VPC NAT gateway belongs must be authorized to use public CIDR blocks. For more information, see [Create a VPC NAT gateway](https://www.alibabacloud.com/help/doc-detail/268230.htm).
     */
    public readonly natIpCidr!: pulumi.Output<string | undefined>;
    /**
     * The description of the NAT CIDR block. The description must be `2` to `256` characters in length. It must start with a letter but cannot start with `http://` or `https://`.
     */
    public readonly natIpCidrDescription!: pulumi.Output<string | undefined>;
    /**
     * The name of the NAT CIDR block. The name must be `2` to `128` characters in length and can contain digits, periods (.), underscores (_), and hyphens (-). It must start with a letter. It must start with a letter but cannot start with `http://` or `https://`.
     */
    public readonly natIpCidrName!: pulumi.Output<string | undefined>;
    /**
     * The status of the CIDR block of the NAT gateway. Valid values: `Available`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a NatIpCidr resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatIpCidrArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatIpCidrArgs | NatIpCidrState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatIpCidrState | undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["natGatewayId"] = state ? state.natGatewayId : undefined;
            resourceInputs["natIpCidr"] = state ? state.natIpCidr : undefined;
            resourceInputs["natIpCidrDescription"] = state ? state.natIpCidrDescription : undefined;
            resourceInputs["natIpCidrName"] = state ? state.natIpCidrName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as NatIpCidrArgs | undefined;
            if ((!args || args.natGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'natGatewayId'");
            }
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["natGatewayId"] = args ? args.natGatewayId : undefined;
            resourceInputs["natIpCidr"] = args ? args.natIpCidr : undefined;
            resourceInputs["natIpCidrDescription"] = args ? args.natIpCidrDescription : undefined;
            resourceInputs["natIpCidrName"] = args ? args.natIpCidrName : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatIpCidr.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatIpCidr resources.
 */
export interface NatIpCidrState {
    /**
     * Specifies whether to precheck this request only. Valid values: `true` and `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the Virtual Private Cloud (VPC) NAT gateway where you want to create the NAT CIDR block.
     */
    natGatewayId?: pulumi.Input<string>;
    /**
     * The NAT CIDR block to be created. The CIDR block must meet the following conditions: It must be `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`, or one of their subnets. The subnet mask must be `16` to `32` bits in lengths. To use a public CIDR block as the NAT CIDR block, the VPC to which the VPC NAT gateway belongs must be authorized to use public CIDR blocks. For more information, see [Create a VPC NAT gateway](https://www.alibabacloud.com/help/doc-detail/268230.htm).
     */
    natIpCidr?: pulumi.Input<string>;
    /**
     * The description of the NAT CIDR block. The description must be `2` to `256` characters in length. It must start with a letter but cannot start with `http://` or `https://`.
     */
    natIpCidrDescription?: pulumi.Input<string>;
    /**
     * The name of the NAT CIDR block. The name must be `2` to `128` characters in length and can contain digits, periods (.), underscores (_), and hyphens (-). It must start with a letter. It must start with a letter but cannot start with `http://` or `https://`.
     */
    natIpCidrName?: pulumi.Input<string>;
    /**
     * The status of the CIDR block of the NAT gateway. Valid values: `Available`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NatIpCidr resource.
 */
export interface NatIpCidrArgs {
    /**
     * Specifies whether to precheck this request only. Valid values: `true` and `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The ID of the Virtual Private Cloud (VPC) NAT gateway where you want to create the NAT CIDR block.
     */
    natGatewayId: pulumi.Input<string>;
    /**
     * The NAT CIDR block to be created. The CIDR block must meet the following conditions: It must be `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`, or one of their subnets. The subnet mask must be `16` to `32` bits in lengths. To use a public CIDR block as the NAT CIDR block, the VPC to which the VPC NAT gateway belongs must be authorized to use public CIDR blocks. For more information, see [Create a VPC NAT gateway](https://www.alibabacloud.com/help/doc-detail/268230.htm).
     */
    natIpCidr?: pulumi.Input<string>;
    /**
     * The description of the NAT CIDR block. The description must be `2` to `256` characters in length. It must start with a letter but cannot start with `http://` or `https://`.
     */
    natIpCidrDescription?: pulumi.Input<string>;
    /**
     * The name of the NAT CIDR block. The name must be `2` to `128` characters in length and can contain digits, periods (.), underscores (_), and hyphens (-). It must start with a letter. It must start with a letter but cannot start with `http://` or `https://`.
     */
    natIpCidrName?: pulumi.Input<string>;
}
