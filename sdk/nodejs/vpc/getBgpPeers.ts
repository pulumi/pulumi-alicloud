// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Vpc Bgp Peers of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.153.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.vpc.getBgpPeers({
 *     ids: [
 *         "example_value-1",
 *         "example_value-2",
 *     ],
 * });
 * export const vpcBgpPeerId1 = ids.then(ids => ids.peers?.[0]?.id);
 * const bgpGroupId = alicloud.vpc.getBgpPeers({
 *     bgpGroupId: "example_value",
 * });
 * export const vpcBgpPeerId2 = bgpGroupId.then(bgpGroupId => bgpGroupId.peers?.[0]?.id);
 * const routerId = alicloud.vpc.getBgpPeers({
 *     routerId: "example_value",
 * });
 * export const vpcBgpPeerId3 = routerId.then(routerId => routerId.peers?.[0]?.id);
 * const status = alicloud.vpc.getBgpPeers({
 *     status: "Available",
 * });
 * export const vpcBgpPeerId4 = status.then(status => status.peers?.[0]?.id);
 * ```
 */
export function getBgpPeers(args?: GetBgpPeersArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpPeersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:vpc/getBgpPeers:getBgpPeers", {
        "bgpGroupId": args.bgpGroupId,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "routerId": args.routerId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getBgpPeers.
 */
export interface GetBgpPeersArgs {
    /**
     * The ID of the BGP group.
     */
    bgpGroupId?: string;
    /**
     * A list of Bgp Peer IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the router.
     */
    routerId?: string;
    /**
     * The status of the BGP peer.
     */
    status?: string;
}

/**
 * A collection of values returned by getBgpPeers.
 */
export interface GetBgpPeersResult {
    readonly bgpGroupId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly peers: outputs.vpc.GetBgpPeersPeer[];
    readonly routerId?: string;
    readonly status?: string;
}
/**
 * This data source provides the Vpc Bgp Peers of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.153.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.vpc.getBgpPeers({
 *     ids: [
 *         "example_value-1",
 *         "example_value-2",
 *     ],
 * });
 * export const vpcBgpPeerId1 = ids.then(ids => ids.peers?.[0]?.id);
 * const bgpGroupId = alicloud.vpc.getBgpPeers({
 *     bgpGroupId: "example_value",
 * });
 * export const vpcBgpPeerId2 = bgpGroupId.then(bgpGroupId => bgpGroupId.peers?.[0]?.id);
 * const routerId = alicloud.vpc.getBgpPeers({
 *     routerId: "example_value",
 * });
 * export const vpcBgpPeerId3 = routerId.then(routerId => routerId.peers?.[0]?.id);
 * const status = alicloud.vpc.getBgpPeers({
 *     status: "Available",
 * });
 * export const vpcBgpPeerId4 = status.then(status => status.peers?.[0]?.id);
 * ```
 */
export function getBgpPeersOutput(args?: GetBgpPeersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpPeersResult> {
    return pulumi.output(args).apply((a: any) => getBgpPeers(a, opts))
}

/**
 * A collection of arguments for invoking getBgpPeers.
 */
export interface GetBgpPeersOutputArgs {
    /**
     * The ID of the BGP group.
     */
    bgpGroupId?: pulumi.Input<string>;
    /**
     * A list of Bgp Peer IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the router.
     */
    routerId?: pulumi.Input<string>;
    /**
     * The status of the BGP peer.
     */
    status?: pulumi.Input<string>;
}
