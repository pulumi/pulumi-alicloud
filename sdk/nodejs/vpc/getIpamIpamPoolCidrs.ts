// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Vpc Ipam Ipam Pool Cidr available to the user.[What is Ipam Pool Cidr](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/AddIpamPoolCidr)
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultIpam = new alicloud.vpc.IpamIpam("defaultIpam", {operatingRegionLists: ["cn-hangzhou"]});
 * const defaultIpamPool = new alicloud.vpc.IpamIpamPool("defaultIpamPool", {
 *     ipamScopeId: defaultIpam.privateDefaultScopeId,
 *     poolRegionId: defaultIpam.regionId,
 *     ipVersion: "IPv4",
 * });
 * const defaultIpamIpamPoolCidr = new alicloud.vpc.IpamIpamPoolCidr("default", {
 *     cidr: "10.0.0.0/8",
 *     ipamPoolId: defaultIpamPool.id,
 * });
 * const _default = alicloud.vpc.getIpamIpamPoolCidrsOutput({
 *     cidr: "10.0.0.0/8",
 *     ipamPoolId: defaultIpamIpamPoolCidr.ipamPoolId,
 * });
 * export const alicloudVpcIpamIpamPoolCidrExampleId = _default.apply(_default => _default.cidrs?.[0]?.id);
 * ```
 */
export function getIpamIpamPoolCidrs(args: GetIpamIpamPoolCidrsArgs, opts?: pulumi.InvokeOptions): Promise<GetIpamIpamPoolCidrsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:vpc/getIpamIpamPoolCidrs:getIpamIpamPoolCidrs", {
        "cidr": args.cidr,
        "ipamPoolId": args.ipamPoolId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpamIpamPoolCidrs.
 */
export interface GetIpamIpamPoolCidrsArgs {
    /**
     * The CIDR address segment to be preset.> currently, only IPv4 address segments are supported.
     */
    cidr?: string;
    /**
     * The ID of the IPAM pool instance.
     */
    ipamPoolId: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getIpamIpamPoolCidrs.
 */
export interface GetIpamIpamPoolCidrsResult {
    /**
     * The CIDR address segment to be preset.> currently, only IPv4 address segments are supported.
     */
    readonly cidr?: string;
    /**
     * A list of Ipam Pool Cidr Entries. Each element contains the following attributes:
     */
    readonly cidrs: outputs.vpc.GetIpamIpamPoolCidrsCidr[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the IPAM pool instance.
     */
    readonly ipamPoolId: string;
    readonly outputFile?: string;
}
/**
 * This data source provides Vpc Ipam Ipam Pool Cidr available to the user.[What is Ipam Pool Cidr](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/AddIpamPoolCidr)
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultIpam = new alicloud.vpc.IpamIpam("defaultIpam", {operatingRegionLists: ["cn-hangzhou"]});
 * const defaultIpamPool = new alicloud.vpc.IpamIpamPool("defaultIpamPool", {
 *     ipamScopeId: defaultIpam.privateDefaultScopeId,
 *     poolRegionId: defaultIpam.regionId,
 *     ipVersion: "IPv4",
 * });
 * const defaultIpamIpamPoolCidr = new alicloud.vpc.IpamIpamPoolCidr("default", {
 *     cidr: "10.0.0.0/8",
 *     ipamPoolId: defaultIpamPool.id,
 * });
 * const _default = alicloud.vpc.getIpamIpamPoolCidrsOutput({
 *     cidr: "10.0.0.0/8",
 *     ipamPoolId: defaultIpamIpamPoolCidr.ipamPoolId,
 * });
 * export const alicloudVpcIpamIpamPoolCidrExampleId = _default.apply(_default => _default.cidrs?.[0]?.id);
 * ```
 */
export function getIpamIpamPoolCidrsOutput(args: GetIpamIpamPoolCidrsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpamIpamPoolCidrsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:vpc/getIpamIpamPoolCidrs:getIpamIpamPoolCidrs", {
        "cidr": args.cidr,
        "ipamPoolId": args.ipamPoolId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpamIpamPoolCidrs.
 */
export interface GetIpamIpamPoolCidrsOutputArgs {
    /**
     * The CIDR address segment to be preset.> currently, only IPv4 address segments are supported.
     */
    cidr?: pulumi.Input<string>;
    /**
     * The ID of the IPAM pool instance.
     */
    ipamPoolId: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
}
