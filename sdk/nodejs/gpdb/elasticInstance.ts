// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a AnalyticDB for PostgreSQL instance resource which storage type is flexible. Compared to the reserved storage ADB PG instance, you can scale up each disk and smoothly scale out nodes online.\
 * For more detail product introduction, see [here](https://www.alibabacloud.com/help/doc-detail/141368.htm).
 *
 * > **NOTE:**  Available in 1.127.0+
 *
 * ## Example Usage
 * ### Create a AnalyticDB for PostgreSQL instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "Gpdb",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {cidrBlock: "172.16.0.0/16"});
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?[0]?.id),
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     vswitchName: "vpc-123456",
 * });
 * const adbPgInstance = new alicloud.gpdb.ElasticInstance("adbPgInstance", {
 *     engine: "gpdb",
 *     engineVersion: "6.0",
 *     segStorageType: "cloud_essd",
 *     segNodeNum: 4,
 *     storageSize: 50,
 *     instanceSpec: "2C16G",
 *     dbInstanceDescription: "Created by terraform",
 *     instanceNetworkType: "VPC",
 *     paymentType: "PayAsYouGo",
 *     vswitchId: defaultSwitch.id,
 * });
 * ```
 *
 * ## Import
 *
 * AnalyticDB for PostgreSQL can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:gpdb/elasticInstance:ElasticInstance adb_pg_instance gp-bpxxxxxxxxxxxxxx
 * ```
 */
export class ElasticInstance extends pulumi.CustomResource {
    /**
     * Get an existing ElasticInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticInstanceState, opts?: pulumi.CustomResourceOptions): ElasticInstance {
        return new ElasticInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:gpdb/elasticInstance:ElasticInstance';

    /**
     * Returns true if the given object is an instance of ElasticInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticInstance.__pulumiType;
    }

    /**
     * ADB PG instance connection string.
     */
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    /**
     * The edition of the instance. Valid values: `Basic`, `HighAvailability`. Default value: `HighAvailability`.
     */
    public readonly dbInstanceCategory!: pulumi.Output<string>;
    /**
     * The description of ADB PG instance. It is a string of 2 to 256 characters.
     */
    public readonly dbInstanceDescription!: pulumi.Output<string | undefined>;
    /**
     * The ID of the encryption key. **Note:** If the `encryptionType` parameter is set to `CloudDisk`, you must specify this parameter to the encryption key that is in the same region as the disk that is specified by the EncryptionType parameter. Otherwise, leave this parameter empty.
     */
    public readonly encryptionKey!: pulumi.Output<string | undefined>;
    /**
     * The type of the encryption. Valid values: `CloudDisk`. **Note:** Disk encryption cannot be disabled after it is enabled.
     */
    public readonly encryptionType!: pulumi.Output<string | undefined>;
    /**
     * Database engine: `gpdb`.
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * Database version. Valid value is `6.0`.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * The network type of ADB PG instance. Only `VPC` supported now.
     */
    public readonly instanceNetworkType!: pulumi.Output<string | undefined>;
    /**
     * The specification of segment nodes. 
     * * When `dbInstanceCategory` is `HighAvailability`, Valid values: `2C16G`, `4C32G`, `16C128G`.
     * * When `dbInstanceCategory` is `Basic`, Valid values: `2C8G`, `4C16G`, `8C32G`, `16C64G`.
     */
    public readonly instanceSpec!: pulumi.Output<string>;
    /**
     * The subscription period. Valid values: [1~12]. It is valid when paymentType is `Subscription`.  
     * **NOTE:** Will not take effect after modifying `paymentDuration` for now, if you want to renew a PayAsYouGo instance, need to do in on aliyun console.
     */
    public readonly paymentDuration!: pulumi.Output<number | undefined>;
    /**
     * The unit of the subscription period. Valid values: `Month`, `Year`. It is valid when paymentType is `Subscription`.  
     * **NOTE:** Will not take effect after modifying `paymentDurationUnit` for now, if you want to renew a PayAsYouGo instance, need to do in on aliyun console.
     */
    public readonly paymentDurationUnit!: pulumi.Output<string | undefined>;
    /**
     * Valid values are `PayAsYouGo`, `Subscription`. Default to `PayAsYouGo`.
     */
    public readonly paymentType!: pulumi.Output<string | undefined>;
    /**
     * List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
     */
    public readonly securityIpLists!: pulumi.Output<string[]>;
    /**
     * The number of segment nodes. Minimum is `4`, max is `256`, step is `4`.
     */
    public readonly segNodeNum!: pulumi.Output<number>;
    /**
     * The disk type of segment nodes. Valid values: `cloudEssd`, `cloudEfficiency`.
     */
    public readonly segStorageType!: pulumi.Output<string>;
    /**
     * Instance status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The storage capacity of per segment node. Unit: GB. Minimum is `50`, max is `4000`, step is `50`.
     */
    public readonly storageSize!: pulumi.Output<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The virtual switch ID to launch ADB PG instances in one VPC.
     */
    public readonly vswitchId!: pulumi.Output<string>;
    /**
     * The Zone to launch the ADB PG instance. If specified, must be consistent with the zone where the vswitch is located.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a ElasticInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElasticInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticInstanceArgs | ElasticInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticInstanceState | undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["dbInstanceCategory"] = state ? state.dbInstanceCategory : undefined;
            resourceInputs["dbInstanceDescription"] = state ? state.dbInstanceDescription : undefined;
            resourceInputs["encryptionKey"] = state ? state.encryptionKey : undefined;
            resourceInputs["encryptionType"] = state ? state.encryptionType : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["instanceNetworkType"] = state ? state.instanceNetworkType : undefined;
            resourceInputs["instanceSpec"] = state ? state.instanceSpec : undefined;
            resourceInputs["paymentDuration"] = state ? state.paymentDuration : undefined;
            resourceInputs["paymentDurationUnit"] = state ? state.paymentDurationUnit : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["securityIpLists"] = state ? state.securityIpLists : undefined;
            resourceInputs["segNodeNum"] = state ? state.segNodeNum : undefined;
            resourceInputs["segStorageType"] = state ? state.segStorageType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageSize"] = state ? state.storageSize : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ElasticInstanceArgs | undefined;
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.engineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if ((!args || args.instanceSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceSpec'");
            }
            if ((!args || args.segNodeNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'segNodeNum'");
            }
            if ((!args || args.segStorageType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'segStorageType'");
            }
            if ((!args || args.storageSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSize'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["dbInstanceCategory"] = args ? args.dbInstanceCategory : undefined;
            resourceInputs["dbInstanceDescription"] = args ? args.dbInstanceDescription : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["encryptionType"] = args ? args.encryptionType : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["instanceNetworkType"] = args ? args.instanceNetworkType : undefined;
            resourceInputs["instanceSpec"] = args ? args.instanceSpec : undefined;
            resourceInputs["paymentDuration"] = args ? args.paymentDuration : undefined;
            resourceInputs["paymentDurationUnit"] = args ? args.paymentDurationUnit : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["securityIpLists"] = args ? args.securityIpLists : undefined;
            resourceInputs["segNodeNum"] = args ? args.segNodeNum : undefined;
            resourceInputs["segStorageType"] = args ? args.segStorageType : undefined;
            resourceInputs["storageSize"] = args ? args.storageSize : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElasticInstance resources.
 */
export interface ElasticInstanceState {
    /**
     * ADB PG instance connection string.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The edition of the instance. Valid values: `Basic`, `HighAvailability`. Default value: `HighAvailability`.
     */
    dbInstanceCategory?: pulumi.Input<string>;
    /**
     * The description of ADB PG instance. It is a string of 2 to 256 characters.
     */
    dbInstanceDescription?: pulumi.Input<string>;
    /**
     * The ID of the encryption key. **Note:** If the `encryptionType` parameter is set to `CloudDisk`, you must specify this parameter to the encryption key that is in the same region as the disk that is specified by the EncryptionType parameter. Otherwise, leave this parameter empty.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The type of the encryption. Valid values: `CloudDisk`. **Note:** Disk encryption cannot be disabled after it is enabled.
     */
    encryptionType?: pulumi.Input<string>;
    /**
     * Database engine: `gpdb`.
     */
    engine?: pulumi.Input<string>;
    /**
     * Database version. Valid value is `6.0`.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The network type of ADB PG instance. Only `VPC` supported now.
     */
    instanceNetworkType?: pulumi.Input<string>;
    /**
     * The specification of segment nodes. 
     * * When `dbInstanceCategory` is `HighAvailability`, Valid values: `2C16G`, `4C32G`, `16C128G`.
     * * When `dbInstanceCategory` is `Basic`, Valid values: `2C8G`, `4C16G`, `8C32G`, `16C64G`.
     */
    instanceSpec?: pulumi.Input<string>;
    /**
     * The subscription period. Valid values: [1~12]. It is valid when paymentType is `Subscription`.  
     * **NOTE:** Will not take effect after modifying `paymentDuration` for now, if you want to renew a PayAsYouGo instance, need to do in on aliyun console.
     */
    paymentDuration?: pulumi.Input<number>;
    /**
     * The unit of the subscription period. Valid values: `Month`, `Year`. It is valid when paymentType is `Subscription`.  
     * **NOTE:** Will not take effect after modifying `paymentDurationUnit` for now, if you want to renew a PayAsYouGo instance, need to do in on aliyun console.
     */
    paymentDurationUnit?: pulumi.Input<string>;
    /**
     * Valid values are `PayAsYouGo`, `Subscription`. Default to `PayAsYouGo`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
     */
    securityIpLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of segment nodes. Minimum is `4`, max is `256`, step is `4`.
     */
    segNodeNum?: pulumi.Input<number>;
    /**
     * The disk type of segment nodes. Valid values: `cloudEssd`, `cloudEfficiency`.
     */
    segStorageType?: pulumi.Input<string>;
    /**
     * Instance status.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage capacity of per segment node. Unit: GB. Minimum is `50`, max is `4000`, step is `50`.
     */
    storageSize?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The virtual switch ID to launch ADB PG instances in one VPC.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The Zone to launch the ADB PG instance. If specified, must be consistent with the zone where the vswitch is located.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ElasticInstance resource.
 */
export interface ElasticInstanceArgs {
    /**
     * The edition of the instance. Valid values: `Basic`, `HighAvailability`. Default value: `HighAvailability`.
     */
    dbInstanceCategory?: pulumi.Input<string>;
    /**
     * The description of ADB PG instance. It is a string of 2 to 256 characters.
     */
    dbInstanceDescription?: pulumi.Input<string>;
    /**
     * The ID of the encryption key. **Note:** If the `encryptionType` parameter is set to `CloudDisk`, you must specify this parameter to the encryption key that is in the same region as the disk that is specified by the EncryptionType parameter. Otherwise, leave this parameter empty.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The type of the encryption. Valid values: `CloudDisk`. **Note:** Disk encryption cannot be disabled after it is enabled.
     */
    encryptionType?: pulumi.Input<string>;
    /**
     * Database engine: `gpdb`.
     */
    engine: pulumi.Input<string>;
    /**
     * Database version. Valid value is `6.0`.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * The network type of ADB PG instance. Only `VPC` supported now.
     */
    instanceNetworkType?: pulumi.Input<string>;
    /**
     * The specification of segment nodes. 
     * * When `dbInstanceCategory` is `HighAvailability`, Valid values: `2C16G`, `4C32G`, `16C128G`.
     * * When `dbInstanceCategory` is `Basic`, Valid values: `2C8G`, `4C16G`, `8C32G`, `16C64G`.
     */
    instanceSpec: pulumi.Input<string>;
    /**
     * The subscription period. Valid values: [1~12]. It is valid when paymentType is `Subscription`.  
     * **NOTE:** Will not take effect after modifying `paymentDuration` for now, if you want to renew a PayAsYouGo instance, need to do in on aliyun console.
     */
    paymentDuration?: pulumi.Input<number>;
    /**
     * The unit of the subscription period. Valid values: `Month`, `Year`. It is valid when paymentType is `Subscription`.  
     * **NOTE:** Will not take effect after modifying `paymentDurationUnit` for now, if you want to renew a PayAsYouGo instance, need to do in on aliyun console.
     */
    paymentDurationUnit?: pulumi.Input<string>;
    /**
     * Valid values are `PayAsYouGo`, `Subscription`. Default to `PayAsYouGo`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
     */
    securityIpLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of segment nodes. Minimum is `4`, max is `256`, step is `4`.
     */
    segNodeNum: pulumi.Input<number>;
    /**
     * The disk type of segment nodes. Valid values: `cloudEssd`, `cloudEfficiency`.
     */
    segStorageType: pulumi.Input<string>;
    /**
     * The storage capacity of per segment node. Unit: GB. Minimum is `50`, max is `4000`, step is `50`.
     */
    storageSize: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The virtual switch ID to launch ADB PG instances in one VPC.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The Zone to launch the ADB PG instance. If specified, must be consistent with the zone where the vswitch is located.
     */
    zoneId?: pulumi.Input<string>;
}
