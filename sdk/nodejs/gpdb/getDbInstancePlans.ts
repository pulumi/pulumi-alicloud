// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Gpdb Db Instance Plans of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.189.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.gpdb.getDbInstancePlans({
 *     dbInstanceId: "example_value",
 *     ids: ["example_value"],
 * });
 * export const gpdbDbInstancePlanId1 = ids.then(ids => ids.plans?.[0]?.id);
 * const nameRegex = alicloud.gpdb.getDbInstancePlans({
 *     dbInstanceId: "example_value",
 *     nameRegex: "^my-DBInstancePlan",
 * });
 * export const gpdbDbInstancePlanId2 = nameRegex.then(nameRegex => nameRegex.plans?.[0]?.id);
 * ```
 */
export function getDbInstancePlans(args: GetDbInstancePlansArgs, opts?: pulumi.InvokeOptions): Promise<GetDbInstancePlansResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:gpdb/getDbInstancePlans:getDbInstancePlans", {
        "dbInstanceId": args.dbInstanceId,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "planScheduleType": args.planScheduleType,
        "planType": args.planType,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbInstancePlans.
 */
export interface GetDbInstancePlansArgs {
    /**
     * The ID of the Database instance.
     */
    dbInstanceId: string;
    /**
     * A list of DB Instance Plan IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by DB Instance Plan name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Plan scheduling type. Valid values: `Postpone`, `Regular`.
     */
    planScheduleType?: string;
    /**
     * The type of the Plan. Valid values: `PauseResume`, `Resize`.
     */
    planType?: string;
    /**
     * Planning Status. Valid values: `active`, `cancel`, `deleted`, `finished`.
     */
    status?: string;
}

/**
 * A collection of values returned by getDbInstancePlans.
 */
export interface GetDbInstancePlansResult {
    readonly dbInstanceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly planScheduleType?: string;
    readonly planType?: string;
    readonly plans: outputs.gpdb.GetDbInstancePlansPlan[];
    readonly status?: string;
}
/**
 * This data source provides the Gpdb Db Instance Plans of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.189.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.gpdb.getDbInstancePlans({
 *     dbInstanceId: "example_value",
 *     ids: ["example_value"],
 * });
 * export const gpdbDbInstancePlanId1 = ids.then(ids => ids.plans?.[0]?.id);
 * const nameRegex = alicloud.gpdb.getDbInstancePlans({
 *     dbInstanceId: "example_value",
 *     nameRegex: "^my-DBInstancePlan",
 * });
 * export const gpdbDbInstancePlanId2 = nameRegex.then(nameRegex => nameRegex.plans?.[0]?.id);
 * ```
 */
export function getDbInstancePlansOutput(args: GetDbInstancePlansOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDbInstancePlansResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:gpdb/getDbInstancePlans:getDbInstancePlans", {
        "dbInstanceId": args.dbInstanceId,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "planScheduleType": args.planScheduleType,
        "planType": args.planType,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbInstancePlans.
 */
export interface GetDbInstancePlansOutputArgs {
    /**
     * The ID of the Database instance.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * A list of DB Instance Plan IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by DB Instance Plan name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Plan scheduling type. Valid values: `Postpone`, `Regular`.
     */
    planScheduleType?: pulumi.Input<string>;
    /**
     * The type of the Plan. Valid values: `PauseResume`, `Resize`.
     */
    planType?: pulumi.Input<string>;
    /**
     * Planning Status. Valid values: `active`, `cancel`, `deleted`, `finished`.
     */
    status?: pulumi.Input<string>;
}
