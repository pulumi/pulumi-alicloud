// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Gpdb Logbackup available to the user.[What is Log Backup](https://www.alibabacloud.com/help/en/)
 *
 * > **NOTE:** Available since v1.231.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.gpdb.getInstances({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetLogBackups = Promise.all([_default, _default]).then(([_default, _default1]) => alicloud.gpdb.getLogBackups({
 *     startTime: "2022-12-12T02:00Z",
 *     endTime: "2024-12-12T02:00Z",
 *     dbInstanceId: _default.ids?.[0],
 *     ids: [_default1.ids?.[0]],
 * }));
 * export const alicloudGpdbLogbackupExampleId = defaultGetLogBackups.then(defaultGetLogBackups => defaultGetLogBackups.logbackups?.[0]?.dbInstanceId);
 * ```
 */
export function getLogBackups(args: GetLogBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetLogBackupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:gpdb/getLogBackups:getLogBackups", {
        "dbInstanceId": args.dbInstanceId,
        "endTime": args.endTime,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogBackups.
 */
export interface GetLogBackupsArgs {
    /**
     * The ID of the Master node of the instance.
     */
    dbInstanceId: string;
    /**
     * The query end time, which must be greater than the query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
     */
    endTime?: string;
    /**
     * A list of Logbackup IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Current page number.
     */
    pageNumber?: number;
    /**
     * Number of records per page.
     */
    pageSize?: number;
    /**
     * The query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
     */
    startTime?: string;
}

/**
 * A collection of values returned by getLogBackups.
 */
export interface GetLogBackupsResult {
    /**
     * The ID of the Master node of the instance.
     */
    readonly dbInstanceId: string;
    readonly endTime?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Logbackup IDs.
     */
    readonly ids: string[];
    /**
     * A list of Logbackup Entries. Each element contains the following attributes:
     */
    readonly logbackups: outputs.gpdb.GetLogBackupsLogbackup[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly startTime?: string;
}
/**
 * This data source provides Gpdb Logbackup available to the user.[What is Log Backup](https://www.alibabacloud.com/help/en/)
 *
 * > **NOTE:** Available since v1.231.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.gpdb.getInstances({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetLogBackups = Promise.all([_default, _default]).then(([_default, _default1]) => alicloud.gpdb.getLogBackups({
 *     startTime: "2022-12-12T02:00Z",
 *     endTime: "2024-12-12T02:00Z",
 *     dbInstanceId: _default.ids?.[0],
 *     ids: [_default1.ids?.[0]],
 * }));
 * export const alicloudGpdbLogbackupExampleId = defaultGetLogBackups.then(defaultGetLogBackups => defaultGetLogBackups.logbackups?.[0]?.dbInstanceId);
 * ```
 */
export function getLogBackupsOutput(args: GetLogBackupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLogBackupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:gpdb/getLogBackups:getLogBackups", {
        "dbInstanceId": args.dbInstanceId,
        "endTime": args.endTime,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogBackups.
 */
export interface GetLogBackupsOutputArgs {
    /**
     * The ID of the Master node of the instance.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * The query end time, which must be greater than the query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
     */
    endTime?: pulumi.Input<string>;
    /**
     * A list of Logbackup IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Current page number.
     */
    pageNumber?: pulumi.Input<number>;
    /**
     * Number of records per page.
     */
    pageSize?: pulumi.Input<number>;
    /**
     * The query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
     */
    startTime?: pulumi.Input<string>;
}
