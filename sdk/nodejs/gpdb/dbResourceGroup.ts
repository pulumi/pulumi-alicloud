// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a GPDB Db Resource Group resource.
 *
 * For information about Gpdb Db Resource Group and how to use it, see [What is Db Resource Group](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.225.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultZc8RD9 = new alicloud.vpc.Network("defaultZc8RD9", {cidrBlock: "192.168.0.0/16"});
 * const defaultRv5UXt = new alicloud.vpc.Switch("defaultRv5UXt", {
 *     vpcId: defaultZc8RD9.id,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     cidrBlock: "192.168.1.0/24",
 * });
 * const defaultJXWSlW = new alicloud.gpdb.Instance("defaultJXWSlW", {
 *     instanceSpec: "2C8G",
 *     segNodeNum: 2,
 *     segStorageType: "cloud_essd",
 *     instanceNetworkType: "VPC",
 *     dbInstanceCategory: "Basic",
 *     engine: "gpdb",
 *     paymentType: "PayAsYouGo",
 *     sslEnabled: 0,
 *     engineVersion: "6.0",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     vswitchId: defaultRv5UXt.id,
 *     storageSize: 50,
 *     masterCu: 4,
 *     vpcId: defaultZc8RD9.id,
 *     dbInstanceMode: "StorageElastic",
 *     description: name,
 * });
 * const defaultDbResourceGroup = new alicloud.gpdb.DbResourceGroup("default", {
 *     resourceGroupConfig: JSON.stringify({
 *         CpuRateLimit: 10,
 *         MemoryLimit: 10,
 *         MemorySharedQuota: 80,
 *         MemorySpillRatio: 0,
 *         Concurrency: 10,
 *     }),
 *     dbInstanceId: defaultJXWSlW.id,
 *     resourceGroupName: "yb_example_group",
 * });
 * ```
 *
 * ## Import
 *
 * GPDB Db Resource Group can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:gpdb/dbResourceGroup:DbResourceGroup example <db_instance_id>:<resource_group_name>
 * ```
 */
export class DbResourceGroup extends pulumi.CustomResource {
    /**
     * Get an existing DbResourceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbResourceGroupState, opts?: pulumi.CustomResourceOptions): DbResourceGroup {
        return new DbResourceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:gpdb/dbResourceGroup:DbResourceGroup';

    /**
     * Returns true if the given object is an instance of DbResourceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbResourceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbResourceGroup.__pulumiType;
    }

    /**
     * The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * Resource group configuration.
     */
    public readonly resourceGroupConfig!: pulumi.Output<string>;
    /**
     * Resource group name.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Role List
     */
    public readonly roleLists!: pulumi.Output<string[] | undefined>;

    /**
     * Create a DbResourceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbResourceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbResourceGroupArgs | DbResourceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbResourceGroupState | undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["resourceGroupConfig"] = state ? state.resourceGroupConfig : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["roleLists"] = state ? state.roleLists : undefined;
        } else {
            const args = argsOrState as DbResourceGroupArgs | undefined;
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if ((!args || args.resourceGroupConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupConfig'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["resourceGroupConfig"] = args ? args.resourceGroupConfig : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["roleLists"] = args ? args.roleLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DbResourceGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DbResourceGroup resources.
 */
export interface DbResourceGroupState {
    /**
     * The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * Resource group configuration.
     */
    resourceGroupConfig?: pulumi.Input<string>;
    /**
     * Resource group name.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Role List
     */
    roleLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DbResourceGroup resource.
 */
export interface DbResourceGroupArgs {
    /**
     * The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * Resource group configuration.
     */
    resourceGroupConfig: pulumi.Input<string>;
    /**
     * Resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Role List
     */
    roleLists?: pulumi.Input<pulumi.Input<string>[]>;
}
