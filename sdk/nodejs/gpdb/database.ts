// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a GPDB Database resource.
 *
 * For information about GPDB Database and how to use it, see [What is Database](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.232.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const default35OkxY = new alicloud.vpc.Network("default35OkxY", {cidrBlock: "192.168.0.0/16"});
 * const defaultl8haQ3 = new alicloud.vpc.Switch("defaultl8haQ3", {
 *     vpcId: default35OkxY.id,
 *     zoneId: "cn-beijing-h",
 *     cidrBlock: "192.168.1.0/24",
 * });
 * const defaultTC08a9 = new alicloud.gpdb.Instance("defaultTC08a9", {
 *     instanceSpec: "2C8G",
 *     segNodeNum: 2,
 *     segStorageType: "cloud_essd",
 *     instanceNetworkType: "VPC",
 *     dbInstanceCategory: "Basic",
 *     paymentType: "PayAsYouGo",
 *     sslEnabled: 0,
 *     engineVersion: "6.0",
 *     engine: "gpdb",
 *     zoneId: "cn-beijing-h",
 *     vswitchId: defaultl8haQ3.id,
 *     storageSize: 50,
 *     masterCu: 4,
 *     vpcId: default35OkxY.id,
 *     dbInstanceMode: "StorageElastic",
 * });
 * const _default = new alicloud.gpdb.Database("default", {
 *     characterSetName: "UTF8",
 *     owner: "adbpgadmin",
 *     description: "go-to-the-docks-for-french-fries",
 *     databaseName: "seagull",
 *     collate: "en_US.utf8",
 *     ctype: "en_US.utf8",
 *     dbInstanceId: defaultTC08a9.id,
 * });
 * ```
 *
 * ## Import
 *
 * GPDB Database can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:gpdb/database:Database example <db_instance_id>:<database_name>
 * ```
 */
export class Database extends pulumi.CustomResource {
    /**
     * Get an existing Database resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseState, opts?: pulumi.CustomResourceOptions): Database {
        return new Database(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:gpdb/database:Database';

    /**
     * Returns true if the given object is an instance of Database.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Database {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Database.__pulumiType;
    }

    /**
     * Character set, default value is UTF8
     */
    public readonly characterSetName!: pulumi.Output<string | undefined>;
    /**
     * Database locale parameters, specifying string comparison/collation
     */
    public readonly collate!: pulumi.Output<string | undefined>;
    /**
     * Database locale parameters, specifying character classification/case conversion rules
     */
    public readonly ctype!: pulumi.Output<string | undefined>;
    /**
     * Database Name
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * Instance ID
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * Database Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Data Sheet owner
     */
    public readonly owner!: pulumi.Output<string>;

    /**
     * Create a Database resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseArgs | DatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseState | undefined;
            resourceInputs["characterSetName"] = state ? state.characterSetName : undefined;
            resourceInputs["collate"] = state ? state.collate : undefined;
            resourceInputs["ctype"] = state ? state.ctype : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
        } else {
            const args = argsOrState as DatabaseArgs | undefined;
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if ((!args || args.owner === undefined) && !opts.urn) {
                throw new Error("Missing required property 'owner'");
            }
            resourceInputs["characterSetName"] = args ? args.characterSetName : undefined;
            resourceInputs["collate"] = args ? args.collate : undefined;
            resourceInputs["ctype"] = args ? args.ctype : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Database.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Database resources.
 */
export interface DatabaseState {
    /**
     * Character set, default value is UTF8
     */
    characterSetName?: pulumi.Input<string>;
    /**
     * Database locale parameters, specifying string comparison/collation
     */
    collate?: pulumi.Input<string>;
    /**
     * Database locale parameters, specifying character classification/case conversion rules
     */
    ctype?: pulumi.Input<string>;
    /**
     * Database Name
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Instance ID
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * Database Description
     */
    description?: pulumi.Input<string>;
    /**
     * Data Sheet owner
     */
    owner?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Database resource.
 */
export interface DatabaseArgs {
    /**
     * Character set, default value is UTF8
     */
    characterSetName?: pulumi.Input<string>;
    /**
     * Database locale parameters, specifying string comparison/collation
     */
    collate?: pulumi.Input<string>;
    /**
     * Database locale parameters, specifying character classification/case conversion rules
     */
    ctype?: pulumi.Input<string>;
    /**
     * Database Name
     */
    databaseName: pulumi.Input<string>;
    /**
     * Instance ID
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * Database Description
     */
    description?: pulumi.Input<string>;
    /**
     * Data Sheet owner
     */
    owner: pulumi.Input<string>;
}
