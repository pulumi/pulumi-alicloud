// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a AnalyticDB for PostgreSQL (GPDB) External Data Service resource.
 *
 * External Data Services.
 *
 * For information about AnalyticDB for PostgreSQL (GPDB) External Data Service and how to use it, see [What is External Data Service](https://next.api.alibabacloud.com/document/gpdb/2016-05-03/CreateExternalDataService).
 *
 * > **NOTE:** Available since v1.227.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultrple4a = new alicloud.vpc.Network("defaultrple4a", {cidrBlock: "192.168.0.0/16"});
 * const defaultnYWSkl = new alicloud.vpc.Switch("defaultnYWSkl", {
 *     vpcId: defaultrple4a.id,
 *     zoneId: "cn-beijing-h",
 *     cidrBlock: "192.168.1.0/24",
 * });
 * const defaultZ7DPgB = new alicloud.gpdb.Instance("defaultZ7DPgB", {
 *     instanceSpec: "2C8G",
 *     description: name,
 *     segNodeNum: 2,
 *     segStorageType: "cloud_essd",
 *     instanceNetworkType: "VPC",
 *     dbInstanceCategory: "Basic",
 *     paymentType: "PayAsYouGo",
 *     sslEnabled: 0,
 *     engineVersion: "6.0",
 *     zoneId: "cn-beijing-h",
 *     vswitchId: defaultnYWSkl.id,
 *     storageSize: 50,
 *     masterCu: 4,
 *     vpcId: defaultrple4a.id,
 *     dbInstanceMode: "StorageElastic",
 *     engine: "gpdb",
 * });
 * const defaultExternalDataService = new alicloud.gpdb.ExternalDataService("default", {
 *     serviceName: "example6",
 *     dbInstanceId: defaultZ7DPgB.id,
 *     serviceDescription: "example",
 *     serviceSpec: "8",
 * });
 * ```
 *
 * ## Import
 *
 * AnalyticDB for PostgreSQL (GPDB) External Data Service can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:gpdb/externalDataService:ExternalDataService example <db_instance_id>:<service_id>
 * ```
 */
export class ExternalDataService extends pulumi.CustomResource {
    /**
     * Get an existing ExternalDataService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalDataServiceState, opts?: pulumi.CustomResourceOptions): ExternalDataService {
        return new ExternalDataService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:gpdb/externalDataService:ExternalDataService';

    /**
     * Returns true if the given object is an instance of ExternalDataService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalDataService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalDataService.__pulumiType;
    }

    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Instance ID
     */
    declare public readonly dbInstanceId: pulumi.Output<string>;
    /**
     * Service Description
     */
    declare public readonly serviceDescription: pulumi.Output<string | undefined>;
    /**
     * Service ID
     */
    declare public /*out*/ readonly serviceId: pulumi.Output<number>;
    /**
     * Service Name
     */
    declare public readonly serviceName: pulumi.Output<string>;
    /**
     * Service Specifications
     */
    declare public readonly serviceSpec: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a ExternalDataService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExternalDataServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalDataServiceArgs | ExternalDataServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExternalDataServiceState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["dbInstanceId"] = state?.dbInstanceId;
            resourceInputs["serviceDescription"] = state?.serviceDescription;
            resourceInputs["serviceId"] = state?.serviceId;
            resourceInputs["serviceName"] = state?.serviceName;
            resourceInputs["serviceSpec"] = state?.serviceSpec;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as ExternalDataServiceArgs | undefined;
            if (args?.dbInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if (args?.serviceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if (args?.serviceSpec === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceSpec'");
            }
            resourceInputs["dbInstanceId"] = args?.dbInstanceId;
            resourceInputs["serviceDescription"] = args?.serviceDescription;
            resourceInputs["serviceName"] = args?.serviceName;
            resourceInputs["serviceSpec"] = args?.serviceSpec;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExternalDataService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExternalDataService resources.
 */
export interface ExternalDataServiceState {
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * Instance ID
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * Service Description
     */
    serviceDescription?: pulumi.Input<string>;
    /**
     * Service ID
     */
    serviceId?: pulumi.Input<number>;
    /**
     * Service Name
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Service Specifications
     */
    serviceSpec?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalDataService resource.
 */
export interface ExternalDataServiceArgs {
    /**
     * Instance ID
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * Service Description
     */
    serviceDescription?: pulumi.Input<string>;
    /**
     * Service Name
     */
    serviceName: pulumi.Input<string>;
    /**
     * Service Specifications
     */
    serviceSpec: pulumi.Input<string>;
}
