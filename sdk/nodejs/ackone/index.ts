// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { MembershipAttachmentArgs, MembershipAttachmentState } from "./membershipAttachment";
export type MembershipAttachment = import("./membershipAttachment").MembershipAttachment;
export const MembershipAttachment: typeof import("./membershipAttachment").MembershipAttachment = null as any;
utilities.lazyLoad(exports, ["MembershipAttachment"], () => require("./membershipAttachment"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:ackone/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "alicloud:ackone/membershipAttachment:MembershipAttachment":
                return new MembershipAttachment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "ackone/cluster", _module)
pulumi.runtime.registerResourceModule("alicloud", "ackone/membershipAttachment", _module)
