// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * 
 * const vpnGateways = alicloud.vpn.getGateways({
 *     businessStatus: "Normal",
 *     nameRegex: "testAcc*",
 *     outputFile: "/tmp/vpns",
 *     status: "active",
 *     vpcId: "fake-vpc-id",
 *     vpnGatewayId: "fake-vpn-id",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/vpn_gateways.html.markdown.
 */
export function getGateways(args?: GetGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewaysResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("alicloud:vpn/getGateways:getGateways", {
        "businessStatus": args.businessStatus,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGateways.
 */
export interface GetGatewaysArgs {
    /**
     * Limit search to specific business status - valid value is "Normal", "FinancialLocked".
     */
    readonly businessStatus?: string;
    /**
     * IDs of the VPN.
     */
    readonly ids?: string[];
    /**
     * A regex string of VPN name.
     */
    readonly nameRegex?: string;
    /**
     * Save the result to the file.
     */
    readonly outputFile?: string;
    /**
     * Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
     */
    readonly status?: string;
    /**
     * Use the VPC ID as the search key.
     */
    readonly vpcId?: string;
}

/**
 * A collection of values returned by getGateways.
 */
export interface GetGatewaysResult {
    /**
     * The business status of the VPN gateway.
     */
    readonly businessStatus?: string;
    /**
     * A list of VPN gateways. Each element contains the following attributes:
     */
    readonly gateways: outputs.vpn.GetGatewaysGateway[];
    /**
     * IDs of the VPN.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * names of the VPN.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The status of the VPN
     */
    readonly status?: string;
    /**
     * ID of the VPC that the VPN belongs.
     */
    readonly vpcId?: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
