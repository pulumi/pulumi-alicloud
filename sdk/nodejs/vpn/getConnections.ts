// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const foo = pulumi.output(alicloud.vpn.getConnections({
 *     customerGatewayId: "fake-cgw-id",
 *     ids: ["fake-conn-id"],
 *     outputFile: "/tmp/vpnconn",
 *     vpnGatewayId: "fake-vpn-id",
 * }));
 * ```
 */
export function getConnections(args?: GetConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:vpn/getConnections:getConnections", {
        "customerGatewayId": args.customerGatewayId,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "vpnGatewayId": args.vpnGatewayId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsArgs {
    /**
     * Use the VPN customer gateway ID as the search key.
     */
    customerGatewayId?: string;
    /**
     * IDs of the VPN connections.
     */
    ids?: string[];
    /**
     * A regex string of VPN connection name.
     */
    nameRegex?: string;
    /**
     * Save the result to the file.
     */
    outputFile?: string;
    /**
     * Use the VPN gateway ID as the search key.
     */
    vpnGatewayId?: string;
}

/**
 * A collection of values returned by getConnections.
 */
export interface GetConnectionsResult {
    /**
     * A list of VPN connections. Each element contains the following attributes:
     */
    readonly connections: outputs.vpn.GetConnectionsConnection[];
    /**
     * ID of the VPN customer gateway.
     */
    readonly customerGatewayId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Optional) IDs of the VPN connections.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * (Optional) names of the VPN connections.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * ID of the VPN gateway.
     */
    readonly vpnGatewayId?: string;
}

export function getConnectionsOutput(args?: GetConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectionsResult> {
    return pulumi.output(args).apply(a => getConnections(a, opts))
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsOutputArgs {
    /**
     * Use the VPN customer gateway ID as the search key.
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * IDs of the VPN connections.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string of VPN connection name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * Save the result to the file.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Use the VPN gateway ID as the search key.
     */
    vpnGatewayId?: pulumi.Input<string>;
}
