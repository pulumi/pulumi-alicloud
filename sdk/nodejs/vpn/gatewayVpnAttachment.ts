// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a VPN Gateway Vpn Attachment resource.
 *
 * For information about VPN Gateway Vpn Attachment and how to use it, see [What is Vpn Attachment](https://www.alibabacloud.com/help/zh/virtual-private-cloud/latest/createvpnattachment).
 *
 * > **NOTE:** Available since v1.181.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultCustomerGateway = new alicloud.vpn.CustomerGateway("defaultCustomerGateway", {
 *     ipAddress: "42.104.22.210",
 *     asn: "45014",
 *     description: name,
 * });
 * const defaultGatewayVpnAttachment = new alicloud.vpn.GatewayVpnAttachment("defaultGatewayVpnAttachment", {
 *     customerGatewayId: defaultCustomerGateway.id,
 *     networkType: "public",
 *     localSubnet: "0.0.0.0/0",
 *     remoteSubnet: "0.0.0.0/0",
 *     effectImmediately: false,
 *     ikeConfig: {
 *         ikeAuthAlg: "md5",
 *         ikeEncAlg: "des",
 *         ikeVersion: "ikev2",
 *         ikeMode: "main",
 *         ikeLifetime: 86400,
 *         psk: "tf-testvpn2",
 *         ikePfs: "group1",
 *         remoteId: "testbob2",
 *         localId: "testalice2",
 *     },
 *     ipsecConfig: {
 *         ipsecPfs: "group5",
 *         ipsecEncAlg: "des",
 *         ipsecAuthAlg: "md5",
 *         ipsecLifetime: 86400,
 *     },
 *     bgpConfig: {
 *         enable: true,
 *         localAsn: 45014,
 *         tunnelCidr: "169.254.11.0/30",
 *         localBgpIp: "169.254.11.1",
 *     },
 *     healthCheckConfig: {
 *         enable: true,
 *         sip: "192.168.1.1",
 *         dip: "10.0.0.1",
 *         interval: 10,
 *         retry: 10,
 *         policy: "revoke_route",
 *     },
 *     enableDpd: true,
 *     enableNatTraversal: true,
 *     vpnAttachmentName: name,
 * });
 * ```
 *
 * ## Import
 *
 * VPN Gateway Vpn Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:vpn/gatewayVpnAttachment:GatewayVpnAttachment example <id>
 * ```
 */
export class GatewayVpnAttachment extends pulumi.CustomResource {
    /**
     * Get an existing GatewayVpnAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayVpnAttachmentState, opts?: pulumi.CustomResourceOptions): GatewayVpnAttachment {
        return new GatewayVpnAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:vpn/gatewayVpnAttachment:GatewayVpnAttachment';

    /**
     * Returns true if the given object is an instance of GatewayVpnAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GatewayVpnAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GatewayVpnAttachment.__pulumiType;
    }

    /**
     * Bgp configuration information. See `bgpConfig` below.
     */
    public readonly bgpConfig!: pulumi.Output<outputs.vpn.GatewayVpnAttachmentBgpConfig>;
    /**
     * The ID of the customer gateway. From version 1.196.0, `customerGatewayId` can be modified.
     */
    public readonly customerGatewayId!: pulumi.Output<string>;
    /**
     * Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
     */
    public readonly effectImmediately!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable the DPD (peer survival detection) function.
     */
    public readonly enableDpd!: pulumi.Output<boolean>;
    /**
     * Allow NAT penetration.
     */
    public readonly enableNatTraversal!: pulumi.Output<boolean>;
    /**
     * Health check configuration information. See `healthCheckConfig` below.
     */
    public readonly healthCheckConfig!: pulumi.Output<outputs.vpn.GatewayVpnAttachmentHealthCheckConfig>;
    /**
     * Configuration negotiated in the second stage. See `ikeConfig` below.
     */
    public readonly ikeConfig!: pulumi.Output<outputs.vpn.GatewayVpnAttachmentIkeConfig>;
    /**
     * The VPN gateway IP.
     */
    public /*out*/ readonly internetIp!: pulumi.Output<string>;
    /**
     * Configuration negotiated in the second stage. See `ipsecConfig` below.
     */
    public readonly ipsecConfig!: pulumi.Output<outputs.vpn.GatewayVpnAttachmentIpsecConfig>;
    /**
     * The CIDR block of the virtual private cloud (VPC).
     */
    public readonly localSubnet!: pulumi.Output<string>;
    /**
     * The network type of the IPsec connection. Valid values: `public`, `private`.
     */
    public readonly networkType!: pulumi.Output<string>;
    /**
     * The CIDR block of the on-premises data center.
     */
    public readonly remoteSubnet!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The name of the vpn attachment.
     */
    public readonly vpnAttachmentName!: pulumi.Output<string | undefined>;

    /**
     * Create a GatewayVpnAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayVpnAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GatewayVpnAttachmentArgs | GatewayVpnAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GatewayVpnAttachmentState | undefined;
            resourceInputs["bgpConfig"] = state ? state.bgpConfig : undefined;
            resourceInputs["customerGatewayId"] = state ? state.customerGatewayId : undefined;
            resourceInputs["effectImmediately"] = state ? state.effectImmediately : undefined;
            resourceInputs["enableDpd"] = state ? state.enableDpd : undefined;
            resourceInputs["enableNatTraversal"] = state ? state.enableNatTraversal : undefined;
            resourceInputs["healthCheckConfig"] = state ? state.healthCheckConfig : undefined;
            resourceInputs["ikeConfig"] = state ? state.ikeConfig : undefined;
            resourceInputs["internetIp"] = state ? state.internetIp : undefined;
            resourceInputs["ipsecConfig"] = state ? state.ipsecConfig : undefined;
            resourceInputs["localSubnet"] = state ? state.localSubnet : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["remoteSubnet"] = state ? state.remoteSubnet : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vpnAttachmentName"] = state ? state.vpnAttachmentName : undefined;
        } else {
            const args = argsOrState as GatewayVpnAttachmentArgs | undefined;
            if ((!args || args.customerGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerGatewayId'");
            }
            if ((!args || args.localSubnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localSubnet'");
            }
            if ((!args || args.remoteSubnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteSubnet'");
            }
            resourceInputs["bgpConfig"] = args ? args.bgpConfig : undefined;
            resourceInputs["customerGatewayId"] = args ? args.customerGatewayId : undefined;
            resourceInputs["effectImmediately"] = args ? args.effectImmediately : undefined;
            resourceInputs["enableDpd"] = args ? args.enableDpd : undefined;
            resourceInputs["enableNatTraversal"] = args ? args.enableNatTraversal : undefined;
            resourceInputs["healthCheckConfig"] = args ? args.healthCheckConfig : undefined;
            resourceInputs["ikeConfig"] = args ? args.ikeConfig : undefined;
            resourceInputs["ipsecConfig"] = args ? args.ipsecConfig : undefined;
            resourceInputs["localSubnet"] = args ? args.localSubnet : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["remoteSubnet"] = args ? args.remoteSubnet : undefined;
            resourceInputs["vpnAttachmentName"] = args ? args.vpnAttachmentName : undefined;
            resourceInputs["internetIp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GatewayVpnAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GatewayVpnAttachment resources.
 */
export interface GatewayVpnAttachmentState {
    /**
     * Bgp configuration information. See `bgpConfig` below.
     */
    bgpConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentBgpConfig>;
    /**
     * The ID of the customer gateway. From version 1.196.0, `customerGatewayId` can be modified.
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
     */
    effectImmediately?: pulumi.Input<boolean>;
    /**
     * Whether to enable the DPD (peer survival detection) function.
     */
    enableDpd?: pulumi.Input<boolean>;
    /**
     * Allow NAT penetration.
     */
    enableNatTraversal?: pulumi.Input<boolean>;
    /**
     * Health check configuration information. See `healthCheckConfig` below.
     */
    healthCheckConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentHealthCheckConfig>;
    /**
     * Configuration negotiated in the second stage. See `ikeConfig` below.
     */
    ikeConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentIkeConfig>;
    /**
     * The VPN gateway IP.
     */
    internetIp?: pulumi.Input<string>;
    /**
     * Configuration negotiated in the second stage. See `ipsecConfig` below.
     */
    ipsecConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentIpsecConfig>;
    /**
     * The CIDR block of the virtual private cloud (VPC).
     */
    localSubnet?: pulumi.Input<string>;
    /**
     * The network type of the IPsec connection. Valid values: `public`, `private`.
     */
    networkType?: pulumi.Input<string>;
    /**
     * The CIDR block of the on-premises data center.
     */
    remoteSubnet?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the vpn attachment.
     */
    vpnAttachmentName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GatewayVpnAttachment resource.
 */
export interface GatewayVpnAttachmentArgs {
    /**
     * Bgp configuration information. See `bgpConfig` below.
     */
    bgpConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentBgpConfig>;
    /**
     * The ID of the customer gateway. From version 1.196.0, `customerGatewayId` can be modified.
     */
    customerGatewayId: pulumi.Input<string>;
    /**
     * Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
     */
    effectImmediately?: pulumi.Input<boolean>;
    /**
     * Whether to enable the DPD (peer survival detection) function.
     */
    enableDpd?: pulumi.Input<boolean>;
    /**
     * Allow NAT penetration.
     */
    enableNatTraversal?: pulumi.Input<boolean>;
    /**
     * Health check configuration information. See `healthCheckConfig` below.
     */
    healthCheckConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentHealthCheckConfig>;
    /**
     * Configuration negotiated in the second stage. See `ikeConfig` below.
     */
    ikeConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentIkeConfig>;
    /**
     * Configuration negotiated in the second stage. See `ipsecConfig` below.
     */
    ipsecConfig?: pulumi.Input<inputs.vpn.GatewayVpnAttachmentIpsecConfig>;
    /**
     * The CIDR block of the virtual private cloud (VPC).
     */
    localSubnet: pulumi.Input<string>;
    /**
     * The network type of the IPsec connection. Valid values: `public`, `private`.
     */
    networkType?: pulumi.Input<string>;
    /**
     * The CIDR block of the on-premises data center.
     */
    remoteSubnet: pulumi.Input<string>;
    /**
     * The name of the vpn attachment.
     */
    vpnAttachmentName?: pulumi.Input<string>;
}
