// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Ehpc Cluster resource.
 *
 * For information about Ehpc Cluster and how to use it, see [What is Cluster](https://www.alibabacloud.com/help/en/e-hpc/developer-reference/api-ehpc-2018-04-12-createcluster).
 *
 * > **NOTE:** Available since v1.173.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultImages = alicloud.ecs.getImages({
 *     nameRegex: "^centos_7_6_x64*",
 *     owners: "system",
 * });
 * const defaultInstanceTypes = defaultZones.then(defaultZones => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: defaultZones.zones?.[0]?.id,
 * }));
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: name,
 *     cidrBlock: "10.0.0.0/8",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vswitchName: name,
 *     cidrBlock: "10.1.0.0/16",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * });
 * const defaultFileSystem = new alicloud.nas.FileSystem("defaultFileSystem", {
 *     storageType: "Performance",
 *     protocolType: "NFS",
 * });
 * const defaultMountTarget = new alicloud.nas.MountTarget("defaultMountTarget", {
 *     fileSystemId: defaultFileSystem.id,
 *     accessGroupName: "DEFAULT_VPC_GROUP_NAME",
 *     vswitchId: defaultSwitch.id,
 * });
 * const defaultCluster = new alicloud.ehpc.Cluster("defaultCluster", {
 *     clusterName: name,
 *     deployMode: "Simple",
 *     description: name,
 *     haEnable: false,
 *     imageId: defaultImages.then(defaultImages => defaultImages.images?.[0]?.id),
 *     imageOwnerAlias: "system",
 *     volumeProtocol: "nfs",
 *     volumeId: defaultFileSystem.id,
 *     volumeMountpoint: defaultMountTarget.mountTargetDomain,
 *     computeCount: 1,
 *     computeInstanceType: defaultInstanceTypes.then(defaultInstanceTypes => defaultInstanceTypes.instanceTypes?.[0]?.id),
 *     loginCount: 1,
 *     loginInstanceType: defaultInstanceTypes.then(defaultInstanceTypes => defaultInstanceTypes.instanceTypes?.[0]?.id),
 *     managerCount: 1,
 *     managerInstanceType: defaultInstanceTypes.then(defaultInstanceTypes => defaultInstanceTypes.instanceTypes?.[0]?.id),
 *     osTag: "CentOS_7.6_64",
 *     schedulerType: "pbs",
 *     password: "your-password123",
 *     vswitchId: defaultSwitch.id,
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * });
 * ```
 *
 * ## Import
 *
 * Ehpc Cluster can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ehpc/cluster:Cluster example <id>
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ehpc/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
     */
    public readonly accountType!: pulumi.Output<string>;
    /**
     * The additional volumes. See `additionalVolumes` below.
     */
    public readonly additionalVolumes!: pulumi.Output<outputs.ehpc.ClusterAdditionalVolume[] | undefined>;
    /**
     * The application. See `application` below.
     */
    public readonly applications!: pulumi.Output<outputs.ehpc.ClusterApplication[]>;
    /**
     * Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
     */
    public readonly autoRenew!: pulumi.Output<boolean | undefined>;
    /**
     * The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
     */
    public readonly autoRenewPeriod!: pulumi.Output<number | undefined>;
    /**
     * The version of the E-HPC client. By default, the parameter is set to the latest version number.
     */
    public readonly clientVersion!: pulumi.Output<string>;
    /**
     * The name of the cluster. The name must be `2` to `64` characters in length.
     */
    public readonly clusterName!: pulumi.Output<string>;
    /**
     * The version of the cluster. Default value: `1.0`.
     */
    public readonly clusterVersion!: pulumi.Output<string>;
    /**
     * The number of the compute nodes. Valid values: `1` to `99`.
     */
    public readonly computeCount!: pulumi.Output<number>;
    /**
     * Specifies whether the compute nodes support hyper-threading. Default value: `true`.
     */
    public readonly computeEnableHt!: pulumi.Output<boolean | undefined>;
    /**
     * The instance type of the compute nodes.
     */
    public readonly computeInstanceType!: pulumi.Output<string>;
    /**
     * The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
     */
    public readonly computeSpotPriceLimit!: pulumi.Output<string | undefined>;
    /**
     * The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
     */
    public readonly computeSpotStrategy!: pulumi.Output<string | undefined>;
    /**
     * The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
     */
    public readonly deployMode!: pulumi.Output<string>;
    /**
     * The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * The billing method of the nodes.
     */
    public readonly ecsChargeType!: pulumi.Output<string>;
    /**
     * The version of E-HPC. By default, the parameter is set to the latest version number.
     */
    public readonly ehpcVersion!: pulumi.Output<string>;
    /**
     * Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
     */
    public readonly haEnable!: pulumi.Output<boolean>;
    /**
     * The ID of the image.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
     */
    public readonly imageOwnerAlias!: pulumi.Output<string>;
    /**
     * The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
     */
    public readonly inputFileUrl!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to enable auto scaling. Default value: `false`.
     */
    public readonly isComputeEss!: pulumi.Output<boolean | undefined>;
    /**
     * The queue to which the compute nodes are added.
     */
    public readonly jobQueue!: pulumi.Output<string | undefined>;
    /**
     * The name of the AccessKey pair.
     */
    public readonly keyPairName!: pulumi.Output<string | undefined>;
    /**
     * The number of the logon nodes. Valid values: `1`.
     */
    public readonly loginCount!: pulumi.Output<number>;
    /**
     * The instance type of the logon nodes.
     */
    public readonly loginInstanceType!: pulumi.Output<string>;
    /**
     * The number of the management nodes. Valid values: 1 and 2.
     */
    public readonly managerCount!: pulumi.Output<number>;
    /**
     * The instance type of the management nodes.
     */
    public readonly managerInstanceType!: pulumi.Output<string>;
    /**
     * The image tag of the operating system.
     */
    public readonly osTag!: pulumi.Output<string>;
    /**
     * The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
     * * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
     * * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
     * - pluginMod: the mode of the plug-in. The following modes are supported:
     * - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
     * - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
     * - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
     * - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
     */
    public readonly plugin!: pulumi.Output<string | undefined>;
    /**
     * The post install script. See `postInstallScript` below.
     */
    public readonly postInstallScripts!: pulumi.Output<outputs.ehpc.ClusterPostInstallScript[] | undefined>;
    /**
     * The node of the RAM role.
     */
    public readonly ramNodeTypes!: pulumi.Output<string[] | undefined>;
    /**
     * The name of the Resource Access Management (RAM) role.
     */
    public readonly ramRoleName!: pulumi.Output<string | undefined>;
    /**
     * The release instance. Valid values: `true`.
     */
    public readonly releaseInstance!: pulumi.Output<boolean | undefined>;
    /**
     * The remote directory to which the file system is mounted.
     */
    public readonly remoteDirectory!: pulumi.Output<string>;
    /**
     * Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
     */
    public readonly remoteVisEnable!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
     */
    public readonly sccClusterId!: pulumi.Output<string>;
    /**
     * The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
     */
    public readonly schedulerType!: pulumi.Output<string>;
    /**
     * The ID of the security group to which the cluster belongs.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
     */
    public readonly securityGroupName!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
     */
    public readonly systemDiskLevel!: pulumi.Output<string | undefined>;
    /**
     * The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
     */
    public readonly systemDiskSize!: pulumi.Output<number | undefined>;
    /**
     * The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
     */
    public readonly systemDiskType!: pulumi.Output<string | undefined>;
    /**
     * The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
     */
    public readonly volumeId!: pulumi.Output<string>;
    /**
     * The mount options of the file system.
     */
    public readonly volumeMountOption!: pulumi.Output<string | undefined>;
    /**
     * The mount target of the file system. Take note of the following information:
     * - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
     * - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
     */
    public readonly volumeMountpoint!: pulumi.Output<string>;
    /**
     * The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
     */
    public readonly volumeProtocol!: pulumi.Output<string>;
    /**
     * The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
     */
    public readonly volumeType!: pulumi.Output<string>;
    /**
     * The ID of the virtual private cloud (VPC) to which the cluster belongs.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The ID of the vSwitch. E-HPC supports only VPC networks.
     */
    public readonly vswitchId!: pulumi.Output<string>;
    /**
     * Specifies whether not to install the agent. Default value: `false`.
     */
    public readonly withoutAgent!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
     */
    public readonly withoutElasticIp!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the zone.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["accountType"] = state ? state.accountType : undefined;
            resourceInputs["additionalVolumes"] = state ? state.additionalVolumes : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["autoRenewPeriod"] = state ? state.autoRenewPeriod : undefined;
            resourceInputs["clientVersion"] = state ? state.clientVersion : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["clusterVersion"] = state ? state.clusterVersion : undefined;
            resourceInputs["computeCount"] = state ? state.computeCount : undefined;
            resourceInputs["computeEnableHt"] = state ? state.computeEnableHt : undefined;
            resourceInputs["computeInstanceType"] = state ? state.computeInstanceType : undefined;
            resourceInputs["computeSpotPriceLimit"] = state ? state.computeSpotPriceLimit : undefined;
            resourceInputs["computeSpotStrategy"] = state ? state.computeSpotStrategy : undefined;
            resourceInputs["deployMode"] = state ? state.deployMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["ecsChargeType"] = state ? state.ecsChargeType : undefined;
            resourceInputs["ehpcVersion"] = state ? state.ehpcVersion : undefined;
            resourceInputs["haEnable"] = state ? state.haEnable : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["imageOwnerAlias"] = state ? state.imageOwnerAlias : undefined;
            resourceInputs["inputFileUrl"] = state ? state.inputFileUrl : undefined;
            resourceInputs["isComputeEss"] = state ? state.isComputeEss : undefined;
            resourceInputs["jobQueue"] = state ? state.jobQueue : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["loginCount"] = state ? state.loginCount : undefined;
            resourceInputs["loginInstanceType"] = state ? state.loginInstanceType : undefined;
            resourceInputs["managerCount"] = state ? state.managerCount : undefined;
            resourceInputs["managerInstanceType"] = state ? state.managerInstanceType : undefined;
            resourceInputs["osTag"] = state ? state.osTag : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["plugin"] = state ? state.plugin : undefined;
            resourceInputs["postInstallScripts"] = state ? state.postInstallScripts : undefined;
            resourceInputs["ramNodeTypes"] = state ? state.ramNodeTypes : undefined;
            resourceInputs["ramRoleName"] = state ? state.ramRoleName : undefined;
            resourceInputs["releaseInstance"] = state ? state.releaseInstance : undefined;
            resourceInputs["remoteDirectory"] = state ? state.remoteDirectory : undefined;
            resourceInputs["remoteVisEnable"] = state ? state.remoteVisEnable : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["sccClusterId"] = state ? state.sccClusterId : undefined;
            resourceInputs["schedulerType"] = state ? state.schedulerType : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["securityGroupName"] = state ? state.securityGroupName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemDiskLevel"] = state ? state.systemDiskLevel : undefined;
            resourceInputs["systemDiskSize"] = state ? state.systemDiskSize : undefined;
            resourceInputs["systemDiskType"] = state ? state.systemDiskType : undefined;
            resourceInputs["volumeId"] = state ? state.volumeId : undefined;
            resourceInputs["volumeMountOption"] = state ? state.volumeMountOption : undefined;
            resourceInputs["volumeMountpoint"] = state ? state.volumeMountpoint : undefined;
            resourceInputs["volumeProtocol"] = state ? state.volumeProtocol : undefined;
            resourceInputs["volumeType"] = state ? state.volumeType : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["withoutAgent"] = state ? state.withoutAgent : undefined;
            resourceInputs["withoutElasticIp"] = state ? state.withoutElasticIp : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.computeCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeCount'");
            }
            if ((!args || args.computeInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeInstanceType'");
            }
            if ((!args || args.loginCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loginCount'");
            }
            if ((!args || args.loginInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loginInstanceType'");
            }
            if ((!args || args.managerInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managerInstanceType'");
            }
            if ((!args || args.osTag === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osTag'");
            }
            resourceInputs["accountType"] = args ? args.accountType : undefined;
            resourceInputs["additionalVolumes"] = args ? args.additionalVolumes : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["autoRenewPeriod"] = args ? args.autoRenewPeriod : undefined;
            resourceInputs["clientVersion"] = args ? args.clientVersion : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["clusterVersion"] = args ? args.clusterVersion : undefined;
            resourceInputs["computeCount"] = args ? args.computeCount : undefined;
            resourceInputs["computeEnableHt"] = args ? args.computeEnableHt : undefined;
            resourceInputs["computeInstanceType"] = args ? args.computeInstanceType : undefined;
            resourceInputs["computeSpotPriceLimit"] = args ? args.computeSpotPriceLimit : undefined;
            resourceInputs["computeSpotStrategy"] = args ? args.computeSpotStrategy : undefined;
            resourceInputs["deployMode"] = args ? args.deployMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["ecsChargeType"] = args ? args.ecsChargeType : undefined;
            resourceInputs["ehpcVersion"] = args ? args.ehpcVersion : undefined;
            resourceInputs["haEnable"] = args ? args.haEnable : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["imageOwnerAlias"] = args ? args.imageOwnerAlias : undefined;
            resourceInputs["inputFileUrl"] = args ? args.inputFileUrl : undefined;
            resourceInputs["isComputeEss"] = args ? args.isComputeEss : undefined;
            resourceInputs["jobQueue"] = args ? args.jobQueue : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["loginCount"] = args ? args.loginCount : undefined;
            resourceInputs["loginInstanceType"] = args ? args.loginInstanceType : undefined;
            resourceInputs["managerCount"] = args ? args.managerCount : undefined;
            resourceInputs["managerInstanceType"] = args ? args.managerInstanceType : undefined;
            resourceInputs["osTag"] = args ? args.osTag : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["plugin"] = args ? args.plugin : undefined;
            resourceInputs["postInstallScripts"] = args ? args.postInstallScripts : undefined;
            resourceInputs["ramNodeTypes"] = args ? args.ramNodeTypes : undefined;
            resourceInputs["ramRoleName"] = args ? args.ramRoleName : undefined;
            resourceInputs["releaseInstance"] = args ? args.releaseInstance : undefined;
            resourceInputs["remoteDirectory"] = args ? args.remoteDirectory : undefined;
            resourceInputs["remoteVisEnable"] = args ? args.remoteVisEnable : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["sccClusterId"] = args ? args.sccClusterId : undefined;
            resourceInputs["schedulerType"] = args ? args.schedulerType : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["securityGroupName"] = args ? args.securityGroupName : undefined;
            resourceInputs["systemDiskLevel"] = args ? args.systemDiskLevel : undefined;
            resourceInputs["systemDiskSize"] = args ? args.systemDiskSize : undefined;
            resourceInputs["systemDiskType"] = args ? args.systemDiskType : undefined;
            resourceInputs["volumeId"] = args ? args.volumeId : undefined;
            resourceInputs["volumeMountOption"] = args ? args.volumeMountOption : undefined;
            resourceInputs["volumeMountpoint"] = args ? args.volumeMountpoint : undefined;
            resourceInputs["volumeProtocol"] = args ? args.volumeProtocol : undefined;
            resourceInputs["volumeType"] = args ? args.volumeType : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["withoutAgent"] = args ? args.withoutAgent : undefined;
            resourceInputs["withoutElasticIp"] = args ? args.withoutElasticIp : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
     */
    accountType?: pulumi.Input<string>;
    /**
     * The additional volumes. See `additionalVolumes` below.
     */
    additionalVolumes?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterAdditionalVolume>[]>;
    /**
     * The application. See `application` below.
     */
    applications?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterApplication>[]>;
    /**
     * Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * The version of the E-HPC client. By default, the parameter is set to the latest version number.
     */
    clientVersion?: pulumi.Input<string>;
    /**
     * The name of the cluster. The name must be `2` to `64` characters in length.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The version of the cluster. Default value: `1.0`.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * The number of the compute nodes. Valid values: `1` to `99`.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * Specifies whether the compute nodes support hyper-threading. Default value: `true`.
     */
    computeEnableHt?: pulumi.Input<boolean>;
    /**
     * The instance type of the compute nodes.
     */
    computeInstanceType?: pulumi.Input<string>;
    /**
     * The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
     */
    computeSpotPriceLimit?: pulumi.Input<string>;
    /**
     * The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
     */
    computeSpotStrategy?: pulumi.Input<string>;
    /**
     * The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
     */
    deployMode?: pulumi.Input<string>;
    /**
     * The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
     */
    domain?: pulumi.Input<string>;
    /**
     * The billing method of the nodes.
     */
    ecsChargeType?: pulumi.Input<string>;
    /**
     * The version of E-HPC. By default, the parameter is set to the latest version number.
     */
    ehpcVersion?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
     */
    haEnable?: pulumi.Input<boolean>;
    /**
     * The ID of the image.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
     */
    imageOwnerAlias?: pulumi.Input<string>;
    /**
     * The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
     */
    inputFileUrl?: pulumi.Input<string>;
    /**
     * Specifies whether to enable auto scaling. Default value: `false`.
     */
    isComputeEss?: pulumi.Input<boolean>;
    /**
     * The queue to which the compute nodes are added.
     */
    jobQueue?: pulumi.Input<string>;
    /**
     * The name of the AccessKey pair.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The number of the logon nodes. Valid values: `1`.
     */
    loginCount?: pulumi.Input<number>;
    /**
     * The instance type of the logon nodes.
     */
    loginInstanceType?: pulumi.Input<string>;
    /**
     * The number of the management nodes. Valid values: 1 and 2.
     */
    managerCount?: pulumi.Input<number>;
    /**
     * The instance type of the management nodes.
     */
    managerInstanceType?: pulumi.Input<string>;
    /**
     * The image tag of the operating system.
     */
    osTag?: pulumi.Input<string>;
    /**
     * The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
     */
    password?: pulumi.Input<string>;
    /**
     * The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
     * * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
     * * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
     * - pluginMod: the mode of the plug-in. The following modes are supported:
     * - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
     * - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
     * - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
     * - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
     */
    plugin?: pulumi.Input<string>;
    /**
     * The post install script. See `postInstallScript` below.
     */
    postInstallScripts?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterPostInstallScript>[]>;
    /**
     * The node of the RAM role.
     */
    ramNodeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Resource Access Management (RAM) role.
     */
    ramRoleName?: pulumi.Input<string>;
    /**
     * The release instance. Valid values: `true`.
     */
    releaseInstance?: pulumi.Input<boolean>;
    /**
     * The remote directory to which the file system is mounted.
     */
    remoteDirectory?: pulumi.Input<string>;
    /**
     * Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
     */
    remoteVisEnable?: pulumi.Input<boolean>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
     */
    sccClusterId?: pulumi.Input<string>;
    /**
     * The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
     */
    schedulerType?: pulumi.Input<string>;
    /**
     * The ID of the security group to which the cluster belongs.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
     */
    securityGroupName?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
     */
    systemDiskLevel?: pulumi.Input<string>;
    /**
     * The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
     */
    systemDiskSize?: pulumi.Input<number>;
    /**
     * The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
     */
    systemDiskType?: pulumi.Input<string>;
    /**
     * The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
     */
    volumeId?: pulumi.Input<string>;
    /**
     * The mount options of the file system.
     */
    volumeMountOption?: pulumi.Input<string>;
    /**
     * The mount target of the file system. Take note of the following information:
     * - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
     * - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
     */
    volumeMountpoint?: pulumi.Input<string>;
    /**
     * The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
     */
    volumeProtocol?: pulumi.Input<string>;
    /**
     * The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
     */
    volumeType?: pulumi.Input<string>;
    /**
     * The ID of the virtual private cloud (VPC) to which the cluster belongs.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch. E-HPC supports only VPC networks.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * Specifies whether not to install the agent. Default value: `false`.
     */
    withoutAgent?: pulumi.Input<boolean>;
    /**
     * Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
     */
    withoutElasticIp?: pulumi.Input<boolean>;
    /**
     * The ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
     */
    accountType?: pulumi.Input<string>;
    /**
     * The additional volumes. See `additionalVolumes` below.
     */
    additionalVolumes?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterAdditionalVolume>[]>;
    /**
     * The application. See `application` below.
     */
    applications?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterApplication>[]>;
    /**
     * Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * The version of the E-HPC client. By default, the parameter is set to the latest version number.
     */
    clientVersion?: pulumi.Input<string>;
    /**
     * The name of the cluster. The name must be `2` to `64` characters in length.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The version of the cluster. Default value: `1.0`.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * The number of the compute nodes. Valid values: `1` to `99`.
     */
    computeCount: pulumi.Input<number>;
    /**
     * Specifies whether the compute nodes support hyper-threading. Default value: `true`.
     */
    computeEnableHt?: pulumi.Input<boolean>;
    /**
     * The instance type of the compute nodes.
     */
    computeInstanceType: pulumi.Input<string>;
    /**
     * The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
     */
    computeSpotPriceLimit?: pulumi.Input<string>;
    /**
     * The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
     */
    computeSpotStrategy?: pulumi.Input<string>;
    /**
     * The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
     */
    deployMode?: pulumi.Input<string>;
    /**
     * The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
     */
    domain?: pulumi.Input<string>;
    /**
     * The billing method of the nodes.
     */
    ecsChargeType?: pulumi.Input<string>;
    /**
     * The version of E-HPC. By default, the parameter is set to the latest version number.
     */
    ehpcVersion?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
     */
    haEnable?: pulumi.Input<boolean>;
    /**
     * The ID of the image.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
     */
    imageOwnerAlias?: pulumi.Input<string>;
    /**
     * The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
     */
    inputFileUrl?: pulumi.Input<string>;
    /**
     * Specifies whether to enable auto scaling. Default value: `false`.
     */
    isComputeEss?: pulumi.Input<boolean>;
    /**
     * The queue to which the compute nodes are added.
     */
    jobQueue?: pulumi.Input<string>;
    /**
     * The name of the AccessKey pair.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The number of the logon nodes. Valid values: `1`.
     */
    loginCount: pulumi.Input<number>;
    /**
     * The instance type of the logon nodes.
     */
    loginInstanceType: pulumi.Input<string>;
    /**
     * The number of the management nodes. Valid values: 1 and 2.
     */
    managerCount?: pulumi.Input<number>;
    /**
     * The instance type of the management nodes.
     */
    managerInstanceType: pulumi.Input<string>;
    /**
     * The image tag of the operating system.
     */
    osTag: pulumi.Input<string>;
    /**
     * The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
     */
    password?: pulumi.Input<string>;
    /**
     * The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
     * * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
     * * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
     * - pluginMod: the mode of the plug-in. The following modes are supported:
     * - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
     * - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
     * - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
     * - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
     */
    plugin?: pulumi.Input<string>;
    /**
     * The post install script. See `postInstallScript` below.
     */
    postInstallScripts?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterPostInstallScript>[]>;
    /**
     * The node of the RAM role.
     */
    ramNodeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Resource Access Management (RAM) role.
     */
    ramRoleName?: pulumi.Input<string>;
    /**
     * The release instance. Valid values: `true`.
     */
    releaseInstance?: pulumi.Input<boolean>;
    /**
     * The remote directory to which the file system is mounted.
     */
    remoteDirectory?: pulumi.Input<string>;
    /**
     * Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
     */
    remoteVisEnable?: pulumi.Input<boolean>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
     */
    sccClusterId?: pulumi.Input<string>;
    /**
     * The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
     */
    schedulerType?: pulumi.Input<string>;
    /**
     * The ID of the security group to which the cluster belongs.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
     */
    securityGroupName?: pulumi.Input<string>;
    /**
     * The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
     */
    systemDiskLevel?: pulumi.Input<string>;
    /**
     * The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
     */
    systemDiskSize?: pulumi.Input<number>;
    /**
     * The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
     */
    systemDiskType?: pulumi.Input<string>;
    /**
     * The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
     */
    volumeId?: pulumi.Input<string>;
    /**
     * The mount options of the file system.
     */
    volumeMountOption?: pulumi.Input<string>;
    /**
     * The mount target of the file system. Take note of the following information:
     * - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
     * - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
     */
    volumeMountpoint?: pulumi.Input<string>;
    /**
     * The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
     */
    volumeProtocol?: pulumi.Input<string>;
    /**
     * The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
     */
    volumeType?: pulumi.Input<string>;
    /**
     * The ID of the virtual private cloud (VPC) to which the cluster belongs.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch. E-HPC supports only VPC networks.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * Specifies whether not to install the agent. Default value: `false`.
     */
    withoutAgent?: pulumi.Input<boolean>;
    /**
     * Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
     */
    withoutElasticIp?: pulumi.Input<boolean>;
    /**
     * The ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
