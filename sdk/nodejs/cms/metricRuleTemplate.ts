// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Monitor Service Metric Rule Template resource.
 *
 * For information about Cloud Monitor Service Metric Rule Template and how to use it, see [What is Metric Rule Template](https://www.alibabacloud.com/help/doc-detail/114984.html).
 *
 * > **NOTE:** Available in v1.134.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.cms.MetricRuleTemplate("example", {
 *     alertTemplates: [{
 *         category: "ecs",
 *         escalations: {
 *             critical: {
 *                 comparisonOperator: "GreaterThanThreshold",
 *                 statistics: "Average",
 *                 threshold: "90",
 *                 times: "3",
 *             },
 *         },
 *         metricName: "cpu_total",
 *         namespace: "acs_ecs_dashboard",
 *         ruleName: "tf_testAcc_new",
 *     }],
 *     metricRuleTemplateName: "example_value",
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Monitor Service Metric Rule Template can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cms/metricRuleTemplate:MetricRuleTemplate example <id>
 * ```
 */
export class MetricRuleTemplate extends pulumi.CustomResource {
    /**
     * Get an existing MetricRuleTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetricRuleTemplateState, opts?: pulumi.CustomResourceOptions): MetricRuleTemplate {
        return new MetricRuleTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cms/metricRuleTemplate:MetricRuleTemplate';

    /**
     * Returns true if the given object is an instance of MetricRuleTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MetricRuleTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MetricRuleTemplate.__pulumiType;
    }

    /**
     * The details of alert rules that are generated based on the alert template. See the following `Block alertTemplates`.
     */
    public readonly alertTemplates!: pulumi.Output<outputs.cms.MetricRuleTemplateAlertTemplate[] | undefined>;
    /**
     * The mode in which the alert template is applied. Valid values:`GROUP_INSTANCE_FIRST`or `ALARM_TEMPLATE_FIRST`. GROUP_INSTANCE_FIRST: The metrics in the application group take precedence. If a metric specified in the alert template does not exist in the application group, the system does not generate an alert rule for the metric based on the alert template. ALARM_TEMPLATE_FIRST: The metrics specified in the alert template take precedence. If a metric specified in the alert template does not exist in the application group, the system still generates an alert rule for the metric based on the alert template.
     */
    public readonly applyMode!: pulumi.Output<string | undefined>;
    /**
     * The description of the alert template.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The end of the time period during which the alert rule is effective. Valid values: 00 to 23. The value 00 indicates 00:59 and the value 23 indicates 23:59.
     */
    public readonly enableEndTime!: pulumi.Output<string | undefined>;
    /**
     * The beginning of the time period during which the alert rule is effective. Valid values: 00 to 23. The value 00 indicates 00:00 and the value 23 indicates 23:00.
     */
    public readonly enableStartTime!: pulumi.Output<string | undefined>;
    /**
     * The ID of the application group.
     */
    public readonly groupId!: pulumi.Output<string | undefined>;
    /**
     * The name of the alert template.
     */
    public readonly metricRuleTemplateName!: pulumi.Output<string>;
    /**
     * The alert notification method. Valid values:Set the value to 4. The value 4 indicates that alert notifications are sent by using TradeManager and DingTalk chatbots.
     */
    public readonly notifyLevel!: pulumi.Output<string | undefined>;
    /**
     * The version of the alert template to be modified.
     */
    public /*out*/ readonly restVersion!: pulumi.Output<string>;
    /**
     * The mute period during which notifications are not repeatedly sent for an alert.Valid values: 0 to 86400. Unit: seconds. Default value: `86400`.
     */
    public readonly silenceTime!: pulumi.Output<number | undefined>;
    /**
     * The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
     */
    public readonly webhook!: pulumi.Output<string | undefined>;

    /**
     * Create a MetricRuleTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetricRuleTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MetricRuleTemplateArgs | MetricRuleTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MetricRuleTemplateState | undefined;
            resourceInputs["alertTemplates"] = state ? state.alertTemplates : undefined;
            resourceInputs["applyMode"] = state ? state.applyMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableEndTime"] = state ? state.enableEndTime : undefined;
            resourceInputs["enableStartTime"] = state ? state.enableStartTime : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["metricRuleTemplateName"] = state ? state.metricRuleTemplateName : undefined;
            resourceInputs["notifyLevel"] = state ? state.notifyLevel : undefined;
            resourceInputs["restVersion"] = state ? state.restVersion : undefined;
            resourceInputs["silenceTime"] = state ? state.silenceTime : undefined;
            resourceInputs["webhook"] = state ? state.webhook : undefined;
        } else {
            const args = argsOrState as MetricRuleTemplateArgs | undefined;
            if ((!args || args.metricRuleTemplateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricRuleTemplateName'");
            }
            resourceInputs["alertTemplates"] = args ? args.alertTemplates : undefined;
            resourceInputs["applyMode"] = args ? args.applyMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableEndTime"] = args ? args.enableEndTime : undefined;
            resourceInputs["enableStartTime"] = args ? args.enableStartTime : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["metricRuleTemplateName"] = args ? args.metricRuleTemplateName : undefined;
            resourceInputs["notifyLevel"] = args ? args.notifyLevel : undefined;
            resourceInputs["silenceTime"] = args ? args.silenceTime : undefined;
            resourceInputs["webhook"] = args ? args.webhook : undefined;
            resourceInputs["restVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MetricRuleTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MetricRuleTemplate resources.
 */
export interface MetricRuleTemplateState {
    /**
     * The details of alert rules that are generated based on the alert template. See the following `Block alertTemplates`.
     */
    alertTemplates?: pulumi.Input<pulumi.Input<inputs.cms.MetricRuleTemplateAlertTemplate>[]>;
    /**
     * The mode in which the alert template is applied. Valid values:`GROUP_INSTANCE_FIRST`or `ALARM_TEMPLATE_FIRST`. GROUP_INSTANCE_FIRST: The metrics in the application group take precedence. If a metric specified in the alert template does not exist in the application group, the system does not generate an alert rule for the metric based on the alert template. ALARM_TEMPLATE_FIRST: The metrics specified in the alert template take precedence. If a metric specified in the alert template does not exist in the application group, the system still generates an alert rule for the metric based on the alert template.
     */
    applyMode?: pulumi.Input<string>;
    /**
     * The description of the alert template.
     */
    description?: pulumi.Input<string>;
    /**
     * The end of the time period during which the alert rule is effective. Valid values: 00 to 23. The value 00 indicates 00:59 and the value 23 indicates 23:59.
     */
    enableEndTime?: pulumi.Input<string>;
    /**
     * The beginning of the time period during which the alert rule is effective. Valid values: 00 to 23. The value 00 indicates 00:00 and the value 23 indicates 23:00.
     */
    enableStartTime?: pulumi.Input<string>;
    /**
     * The ID of the application group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the alert template.
     */
    metricRuleTemplateName?: pulumi.Input<string>;
    /**
     * The alert notification method. Valid values:Set the value to 4. The value 4 indicates that alert notifications are sent by using TradeManager and DingTalk chatbots.
     */
    notifyLevel?: pulumi.Input<string>;
    /**
     * The version of the alert template to be modified.
     */
    restVersion?: pulumi.Input<string>;
    /**
     * The mute period during which notifications are not repeatedly sent for an alert.Valid values: 0 to 86400. Unit: seconds. Default value: `86400`.
     */
    silenceTime?: pulumi.Input<number>;
    /**
     * The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
     */
    webhook?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MetricRuleTemplate resource.
 */
export interface MetricRuleTemplateArgs {
    /**
     * The details of alert rules that are generated based on the alert template. See the following `Block alertTemplates`.
     */
    alertTemplates?: pulumi.Input<pulumi.Input<inputs.cms.MetricRuleTemplateAlertTemplate>[]>;
    /**
     * The mode in which the alert template is applied. Valid values:`GROUP_INSTANCE_FIRST`or `ALARM_TEMPLATE_FIRST`. GROUP_INSTANCE_FIRST: The metrics in the application group take precedence. If a metric specified in the alert template does not exist in the application group, the system does not generate an alert rule for the metric based on the alert template. ALARM_TEMPLATE_FIRST: The metrics specified in the alert template take precedence. If a metric specified in the alert template does not exist in the application group, the system still generates an alert rule for the metric based on the alert template.
     */
    applyMode?: pulumi.Input<string>;
    /**
     * The description of the alert template.
     */
    description?: pulumi.Input<string>;
    /**
     * The end of the time period during which the alert rule is effective. Valid values: 00 to 23. The value 00 indicates 00:59 and the value 23 indicates 23:59.
     */
    enableEndTime?: pulumi.Input<string>;
    /**
     * The beginning of the time period during which the alert rule is effective. Valid values: 00 to 23. The value 00 indicates 00:00 and the value 23 indicates 23:00.
     */
    enableStartTime?: pulumi.Input<string>;
    /**
     * The ID of the application group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the alert template.
     */
    metricRuleTemplateName: pulumi.Input<string>;
    /**
     * The alert notification method. Valid values:Set the value to 4. The value 4 indicates that alert notifications are sent by using TradeManager and DingTalk chatbots.
     */
    notifyLevel?: pulumi.Input<string>;
    /**
     * The mute period during which notifications are not repeatedly sent for an alert.Valid values: 0 to 86400. Unit: seconds. Default value: `86400`.
     */
    silenceTime?: pulumi.Input<number>;
    /**
     * The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
     */
    webhook?: pulumi.Input<string>;
}
