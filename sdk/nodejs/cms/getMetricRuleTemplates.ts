// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Cms Metric Rule Templates of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.134.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.cms.getMetricRuleTemplates({
 *     ids: ["example_value"],
 * });
 * export const cmsMetricRuleTemplateId1 = ids.then(ids => ids.templates?[0]?.id);
 * const nameRegex = alicloud.cms.getMetricRuleTemplates({
 *     nameRegex: "^my-MetricRuleTemplate",
 * });
 * export const cmsMetricRuleTemplateId2 = nameRegex.then(nameRegex => nameRegex.templates?[0]?.id);
 * const keyword = alicloud.cms.getMetricRuleTemplates({
 *     keyword: "^my-MetricRuleTemplate",
 * });
 * export const cmsMetricRuleTemplateId3 = nameRegex.then(nameRegex => nameRegex.templates?[0]?.id);
 * const templateId = alicloud.cms.getMetricRuleTemplates({
 *     templateId: "example_value",
 * });
 * export const cmsMetricRuleTemplateId4 = nameRegex.then(nameRegex => nameRegex.templates?[0]?.id);
 * ```
 */
export function getMetricRuleTemplates(args?: GetMetricRuleTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricRuleTemplatesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:cms/getMetricRuleTemplates:getMetricRuleTemplates", {
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "keyword": args.keyword,
        "metricRuleTemplateName": args.metricRuleTemplateName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "templateId": args.templateId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetricRuleTemplates.
 */
export interface GetMetricRuleTemplatesArgs {
    /**
     * Valid values: `true` or `false`. Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of Metric Rule Template IDs.
     */
    ids?: string[];
    /**
     * The name of the alert template. You can perform fuzzy search based on the template name.
     */
    keyword?: string;
    /**
     * The name of the alert template.
     */
    metricRuleTemplateName?: string;
    /**
     * A regex string to filter results by Metric Rule Template name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The ID of the alert template.
     */
    templateId?: string;
}

/**
 * A collection of values returned by getMetricRuleTemplates.
 */
export interface GetMetricRuleTemplatesResult {
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly keyword?: string;
    readonly metricRuleTemplateName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly templateId?: string;
    readonly templates: outputs.cms.GetMetricRuleTemplatesTemplate[];
}

export function getMetricRuleTemplatesOutput(args?: GetMetricRuleTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricRuleTemplatesResult> {
    return pulumi.output(args).apply(a => getMetricRuleTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getMetricRuleTemplates.
 */
export interface GetMetricRuleTemplatesOutputArgs {
    /**
     * Valid values: `true` or `false`. Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of Metric Rule Template IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the alert template. You can perform fuzzy search based on the template name.
     */
    keyword?: pulumi.Input<string>;
    /**
     * The name of the alert template.
     */
    metricRuleTemplateName?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Metric Rule Template name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the alert template.
     */
    templateId?: pulumi.Input<string>;
}
