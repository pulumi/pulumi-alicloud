// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Cms Group Metric Rules of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.104.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.cms.getGroupMetricRules({
 *     ids: ["4a9a8978-a9cc-55ca-aa7c-530ccd91ae57"],
 *     nameRegex: "the_resource_name",
 * });
 * export const firstCmsGroupMetricRuleId = example.then(example => example.rules?[0]?.id);
 * ```
 */
export function getGroupMetricRules(args?: GetGroupMetricRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupMetricRulesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:cms/getGroupMetricRules:getGroupMetricRules", {
        "dimensions": args.dimensions,
        "enableState": args.enableState,
        "groupId": args.groupId,
        "groupMetricRuleName": args.groupMetricRuleName,
        "ids": args.ids,
        "metricName": args.metricName,
        "nameRegex": args.nameRegex,
        "namespace": args.namespace,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupMetricRules.
 */
export interface GetGroupMetricRulesArgs {
    /**
     * The dimensions that specify the resources to be associated with the alert rule.
     */
    dimensions?: string;
    /**
     * Indicates whether the alert rule is enabled.
     */
    enableState?: boolean;
    /**
     * The ID of the application group.
     */
    groupId?: string;
    /**
     * The name of the alert rule.
     */
    groupMetricRuleName?: string;
    /**
     * A list of Group Metric Rule IDs.
     */
    ids?: string[];
    /**
     * The name of the metric.
     */
    metricName?: string;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: string;
    /**
     * The namespace of the service.
     */
    namespace?: string;
    outputFile?: string;
    /**
     * The status of Group Metric Rule..
     */
    status?: string;
}

/**
 * A collection of values returned by getGroupMetricRules.
 */
export interface GetGroupMetricRulesResult {
    readonly dimensions?: string;
    readonly enableState?: boolean;
    readonly groupId?: string;
    readonly groupMetricRuleName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly metricName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly namespace?: string;
    readonly outputFile?: string;
    readonly rules: outputs.cms.GetGroupMetricRulesRule[];
    readonly status?: string;
}

export function getGroupMetricRulesOutput(args?: GetGroupMetricRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupMetricRulesResult> {
    return pulumi.output(args).apply(a => getGroupMetricRules(a, opts))
}

/**
 * A collection of arguments for invoking getGroupMetricRules.
 */
export interface GetGroupMetricRulesOutputArgs {
    /**
     * The dimensions that specify the resources to be associated with the alert rule.
     */
    dimensions?: pulumi.Input<string>;
    /**
     * Indicates whether the alert rule is enabled.
     */
    enableState?: pulumi.Input<boolean>;
    /**
     * The ID of the application group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the alert rule.
     */
    groupMetricRuleName?: pulumi.Input<string>;
    /**
     * A list of Group Metric Rule IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the metric.
     */
    metricName?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The namespace of the service.
     */
    namespace?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The status of Group Metric Rule..
     */
    status?: pulumi.Input<string>;
}
