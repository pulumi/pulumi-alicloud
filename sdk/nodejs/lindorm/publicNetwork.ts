// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Lindorm Public Network can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:lindorm/publicNetwork:PublicNetwork example <id>
 * ```
 */
export class PublicNetwork extends pulumi.CustomResource {
    /**
     * Get an existing PublicNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicNetworkState, opts?: pulumi.CustomResourceOptions): PublicNetwork {
        return new PublicNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:lindorm/publicNetwork:PublicNetwork';

    /**
     * Returns true if the given object is an instance of PublicNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicNetwork.__pulumiType;
    }

    /**
     * Open or close the public connection. Value:
     */
    public readonly enablePublicNetwork!: pulumi.Output<number | undefined>;
    /**
     * Engine type, value:
     */
    public readonly engineType!: pulumi.Output<string>;
    /**
     * Instance ID
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Instance status, returns:_EXPANDING`: Capacity-based cloud storage is being expanded._version_transing`: The minor version is being upgraded._CHANGING`: The specification is being upgraded or downgraded._SWITCHING`:SSL is being changed._OPENING`: The data subscription function is being activated._TRANSFER`: migrates data to the database._CREATING`: in the production disaster recovery instance._RECOVERING`: The backup is being restored._IMPORTING`: Data is being imported._MODIFYING`: The network is being changed._SWITCHING`: The internal network and the external network are being switched._CREATING`: creates a network link._DELETING`: deletes a network link.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a PublicNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublicNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicNetworkArgs | PublicNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PublicNetworkState | undefined;
            resourceInputs["enablePublicNetwork"] = state ? state.enablePublicNetwork : undefined;
            resourceInputs["engineType"] = state ? state.engineType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as PublicNetworkArgs | undefined;
            if ((!args || args.engineType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineType'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["enablePublicNetwork"] = args ? args.enablePublicNetwork : undefined;
            resourceInputs["engineType"] = args ? args.engineType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PublicNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PublicNetwork resources.
 */
export interface PublicNetworkState {
    /**
     * Open or close the public connection. Value:
     */
    enablePublicNetwork?: pulumi.Input<number>;
    /**
     * Engine type, value:
     */
    engineType?: pulumi.Input<string>;
    /**
     * Instance ID
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Instance status, returns:_EXPANDING`: Capacity-based cloud storage is being expanded._version_transing`: The minor version is being upgraded._CHANGING`: The specification is being upgraded or downgraded._SWITCHING`:SSL is being changed._OPENING`: The data subscription function is being activated._TRANSFER`: migrates data to the database._CREATING`: in the production disaster recovery instance._RECOVERING`: The backup is being restored._IMPORTING`: Data is being imported._MODIFYING`: The network is being changed._SWITCHING`: The internal network and the external network are being switched._CREATING`: creates a network link._DELETING`: deletes a network link.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PublicNetwork resource.
 */
export interface PublicNetworkArgs {
    /**
     * Open or close the public connection. Value:
     */
    enablePublicNetwork?: pulumi.Input<number>;
    /**
     * Engine type, value:
     */
    engineType: pulumi.Input<string>;
    /**
     * Instance ID
     */
    instanceId: pulumi.Input<string>;
}
