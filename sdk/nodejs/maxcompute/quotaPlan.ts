// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Max Compute Quota Plan resource.
 *
 * For information about Max Compute Quota Plan and how to use it, see [What is Quota Plan](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.242.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const elasticReservedCu = config.get("elasticReservedCu") || "50";
 * const _default = new alicloud.maxcompute.QuotaPlan("default", {
 *     nickname: "os_terrform_p",
 *     quota: {
 *         parameter: {
 *             elasticReservedCu: elasticReservedCu,
 *         },
 *         subQuotaInfoLists: [
 *             {
 *                 nickName: "sub_quota",
 *                 parameter: {
 *                     minCu: 0,
 *                     maxCu: 20,
 *                     elasticReservedCu: elasticReservedCu,
 *                 },
 *             },
 *             {
 *                 nickName: "os_terrform",
 *                 parameter: {
 *                     minCu: 50,
 *                     maxCu: 50,
 *                     elasticReservedCu: 0,
 *                 },
 *             },
 *         ],
 *     },
 *     planName: "quota_plan",
 * });
 * ```
 *
 * ## Import
 *
 * Max Compute Quota Plan can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:maxcompute/quotaPlan:QuotaPlan example <nickname>:<plan_name>
 * ```
 */
export class QuotaPlan extends pulumi.CustomResource {
    /**
     * Get an existing QuotaPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QuotaPlanState, opts?: pulumi.CustomResourceOptions): QuotaPlan {
        return new QuotaPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:maxcompute/quotaPlan:QuotaPlan';

    /**
     * Returns true if the given object is an instance of QuotaPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QuotaPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QuotaPlan.__pulumiType;
    }

    /**
     * Whether to take effect immediately. “Valid values: true”  
     * .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
     */
    public readonly isEffective!: pulumi.Output<boolean | undefined>;
    /**
     * Quota Name
     */
    public readonly nickname!: pulumi.Output<string>;
    /**
     * The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
     */
    public readonly planName!: pulumi.Output<string>;
    /**
     * Quota property See `quota` below.
     */
    public readonly quota!: pulumi.Output<outputs.maxcompute.QuotaPlanQuota | undefined>;

    /**
     * Create a QuotaPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QuotaPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QuotaPlanArgs | QuotaPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QuotaPlanState | undefined;
            resourceInputs["isEffective"] = state ? state.isEffective : undefined;
            resourceInputs["nickname"] = state ? state.nickname : undefined;
            resourceInputs["planName"] = state ? state.planName : undefined;
            resourceInputs["quota"] = state ? state.quota : undefined;
        } else {
            const args = argsOrState as QuotaPlanArgs | undefined;
            if ((!args || args.nickname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nickname'");
            }
            if ((!args || args.planName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'planName'");
            }
            resourceInputs["isEffective"] = args ? args.isEffective : undefined;
            resourceInputs["nickname"] = args ? args.nickname : undefined;
            resourceInputs["planName"] = args ? args.planName : undefined;
            resourceInputs["quota"] = args ? args.quota : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QuotaPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering QuotaPlan resources.
 */
export interface QuotaPlanState {
    /**
     * Whether to take effect immediately. “Valid values: true”  
     * .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
     */
    isEffective?: pulumi.Input<boolean>;
    /**
     * Quota Name
     */
    nickname?: pulumi.Input<string>;
    /**
     * The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
     */
    planName?: pulumi.Input<string>;
    /**
     * Quota property See `quota` below.
     */
    quota?: pulumi.Input<inputs.maxcompute.QuotaPlanQuota>;
}

/**
 * The set of arguments for constructing a QuotaPlan resource.
 */
export interface QuotaPlanArgs {
    /**
     * Whether to take effect immediately. “Valid values: true”  
     * .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
     */
    isEffective?: pulumi.Input<boolean>;
    /**
     * Quota Name
     */
    nickname: pulumi.Input<string>;
    /**
     * The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
     */
    planName: pulumi.Input<string>;
    /**
     * Quota property See `quota` below.
     */
    quota?: pulumi.Input<inputs.maxcompute.QuotaPlanQuota>;
}
