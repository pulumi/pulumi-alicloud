// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Max Compute Role User Attachment resource.
 *
 * Resources associated with a user and a project-level role.
 *
 * For information about Max Compute Role User Attachment and how to use it, see [What is Role User Attachment](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.242.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const aliyunUser = config.get("aliyunUser") || "ALIYUN$openapiautomation@test.aliyunid.com";
 * const ramUser = config.get("ramUser") || "RAM$openapiautomation@test.aliyunid.com:tf-example";
 * const ramRole = config.get("ramRole") || "RAM$openapiautomation@test.aliyunid.com:role/terraform-no-ak-assumerole-no-deleting";
 * const roleName = config.get("roleName") || "role_project_admin";
 * const projectName = config.get("projectName") || "default_project_669886c";
 * const _default = new alicloud.maxcompute.RoleUserAttachment("default", {
 *     roleName: roleName,
 *     user: ramRole,
 *     projectName: projectName,
 * });
 * ```
 *
 * ## Import
 *
 * Max Compute Role User Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:maxcompute/roleUserAttachment:RoleUserAttachment example <project_name>-<role_name>-<user>
 * ```
 */
export class RoleUserAttachment extends pulumi.CustomResource {
    /**
     * Get an existing RoleUserAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleUserAttachmentState, opts?: pulumi.CustomResourceOptions): RoleUserAttachment {
        return new RoleUserAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:maxcompute/roleUserAttachment:RoleUserAttachment';

    /**
     * Returns true if the given object is an instance of RoleUserAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleUserAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleUserAttachment.__pulumiType;
    }

    /**
     * Project Name
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * Role Name, Valid Values: super_administrator, admin, Custom Role
     *
     * > **NOTE:** -- super_administrator: the built-in management role of MaxCompute. The Super Administrator of the project has the permission to operate all resources in the project and the management permission. Project owners or users with the Super_Administrator role can assign the Super_Administrator role to other users. -- admin: the built-in management role of MaxCompute, which has the permission to operate all resources in the project and some basic management permissions. Project owners can assign the Admin role to other users. -- Custom role: a role that is not built-in to MaxCompute and needs to be customized. You can refer to the role (starting with role_) definition in DataWorks.
     */
    public readonly roleName!: pulumi.Output<string>;
    /**
     * Supported input: Alibaba Cloud account, RAM user, and RAM role
     *
     * > **NOTE:** -- Alibaba Cloud account: the account registered on the Alibaba Cloud official website. - RAM User: a user created by an Alibaba Cloud account to assist the Alibaba Cloud account to complete data processing. -- RAM role: a RAM role, like a RAM user, is a type of RAM identity. A RAM role is a virtual user that does not have a specific identity authentication key and needs to be played by a trusted entity user for normal use.
     */
    public readonly user!: pulumi.Output<string>;

    /**
     * Create a RoleUserAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleUserAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleUserAttachmentArgs | RoleUserAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleUserAttachmentState | undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        } else {
            const args = argsOrState as RoleUserAttachmentArgs | undefined;
            if ((!args || args.projectName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectName'");
            }
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoleUserAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoleUserAttachment resources.
 */
export interface RoleUserAttachmentState {
    /**
     * Project Name
     */
    projectName?: pulumi.Input<string>;
    /**
     * Role Name, Valid Values: super_administrator, admin, Custom Role
     *
     * > **NOTE:** -- super_administrator: the built-in management role of MaxCompute. The Super Administrator of the project has the permission to operate all resources in the project and the management permission. Project owners or users with the Super_Administrator role can assign the Super_Administrator role to other users. -- admin: the built-in management role of MaxCompute, which has the permission to operate all resources in the project and some basic management permissions. Project owners can assign the Admin role to other users. -- Custom role: a role that is not built-in to MaxCompute and needs to be customized. You can refer to the role (starting with role_) definition in DataWorks.
     */
    roleName?: pulumi.Input<string>;
    /**
     * Supported input: Alibaba Cloud account, RAM user, and RAM role
     *
     * > **NOTE:** -- Alibaba Cloud account: the account registered on the Alibaba Cloud official website. - RAM User: a user created by an Alibaba Cloud account to assist the Alibaba Cloud account to complete data processing. -- RAM role: a RAM role, like a RAM user, is a type of RAM identity. A RAM role is a virtual user that does not have a specific identity authentication key and needs to be played by a trusted entity user for normal use.
     */
    user?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoleUserAttachment resource.
 */
export interface RoleUserAttachmentArgs {
    /**
     * Project Name
     */
    projectName: pulumi.Input<string>;
    /**
     * Role Name, Valid Values: super_administrator, admin, Custom Role
     *
     * > **NOTE:** -- super_administrator: the built-in management role of MaxCompute. The Super Administrator of the project has the permission to operate all resources in the project and the management permission. Project owners or users with the Super_Administrator role can assign the Super_Administrator role to other users. -- admin: the built-in management role of MaxCompute, which has the permission to operate all resources in the project and some basic management permissions. Project owners can assign the Admin role to other users. -- Custom role: a role that is not built-in to MaxCompute and needs to be customized. You can refer to the role (starting with role_) definition in DataWorks.
     */
    roleName: pulumi.Input<string>;
    /**
     * Supported input: Alibaba Cloud account, RAM user, and RAM role
     *
     * > **NOTE:** -- Alibaba Cloud account: the account registered on the Alibaba Cloud official website. - RAM User: a user created by an Alibaba Cloud account to assist the Alibaba Cloud account to complete data processing. -- RAM role: a RAM role, like a RAM user, is a type of RAM identity. A RAM role is a virtual user that does not have a specific identity authentication key and needs to be played by a trusted entity user for normal use.
     */
    user?: pulumi.Input<string>;
}
