// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Max Compute Role resource.
 *
 * For information about Max Compute Role and how to use it, see [What is Role](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.242.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.maxcompute.Project("default", {
 *     defaultQuota: "默认后付费Quota",
 *     projectName: name,
 *     comment: name,
 *     productType: "PayAsYouGo",
 * });
 * const defaultRole = new alicloud.maxcompute.Role("default", {
 *     type: "admin",
 *     projectName: _default.id,
 *     policy: JSON.stringify({
 *         Statement: [{
 *             Action: ["odps:*"],
 *             Effect: "Allow",
 *             Resource: [
 *                 "acs:odps:*:projects/project_name/authorization/roles",
 *                 "acs:odps:*:projects/project_name/authorization/roles/*&#47;*",
 *             ],
 *         }],
 *         Version: "1",
 *     }),
 *     roleName: "tf_example112",
 * });
 * ```
 *
 * ## Import
 *
 * Max Compute Role can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:maxcompute/role:Role example <project_name>:<role_name>
 * ```
 */
export class Role extends pulumi.CustomResource {
    /**
     * Get an existing Role resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleState, opts?: pulumi.CustomResourceOptions): Role {
        return new Role(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:maxcompute/role:Role';

    /**
     * Returns true if the given object is an instance of Role.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Role {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Role.__pulumiType;
    }

    /**
     * Policy Authorization
     * Refer to [Policy-based access control](https://www.alibabacloud.com/help/en/maxcompute/user-guide/policy-based-access-control-1) and [Authorization practices](https://www.alibabacloud.com/help/en/maxcompute/use-cases/authorization-practices)
     */
    declare public readonly policy: pulumi.Output<string | undefined>;
    /**
     * Project name
     */
    declare public readonly projectName: pulumi.Output<string>;
    /**
     * Role Name
     *
     * > **NOTE:** At the beginning of a letter, it can contain letters and numbers and can be no more than 64 characters in length.
     */
    declare public readonly roleName: pulumi.Output<string>;
    /**
     * Role type Valid values: admin/resource
     *
     * > **NOTE:** -- management type (admin) role: You can grant management type permissions through Policy. You cannot grant resource permissions to management type roles. You cannot grant management type permissions to management type roles through ACL. -- resource role: you can authorize resource type permissions through Policy or ACL, but cannot authorize management type permissions. For details, see [role-planning](https://www.alibabacloud.com/help/en/maxcompute/user-guide/role-planning)
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a Role resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleArgs | RoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleState | undefined;
            resourceInputs["policy"] = state?.policy;
            resourceInputs["projectName"] = state?.projectName;
            resourceInputs["roleName"] = state?.roleName;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as RoleArgs | undefined;
            if (args?.projectName === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectName'");
            }
            if (args?.roleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["policy"] = args?.policy;
            resourceInputs["projectName"] = args?.projectName;
            resourceInputs["roleName"] = args?.roleName;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Role.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Role resources.
 */
export interface RoleState {
    /**
     * Policy Authorization
     * Refer to [Policy-based access control](https://www.alibabacloud.com/help/en/maxcompute/user-guide/policy-based-access-control-1) and [Authorization practices](https://www.alibabacloud.com/help/en/maxcompute/use-cases/authorization-practices)
     */
    policy?: pulumi.Input<string>;
    /**
     * Project name
     */
    projectName?: pulumi.Input<string>;
    /**
     * Role Name
     *
     * > **NOTE:** At the beginning of a letter, it can contain letters and numbers and can be no more than 64 characters in length.
     */
    roleName?: pulumi.Input<string>;
    /**
     * Role type Valid values: admin/resource
     *
     * > **NOTE:** -- management type (admin) role: You can grant management type permissions through Policy. You cannot grant resource permissions to management type roles. You cannot grant management type permissions to management type roles through ACL. -- resource role: you can authorize resource type permissions through Policy or ACL, but cannot authorize management type permissions. For details, see [role-planning](https://www.alibabacloud.com/help/en/maxcompute/user-guide/role-planning)
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * Policy Authorization
     * Refer to [Policy-based access control](https://www.alibabacloud.com/help/en/maxcompute/user-guide/policy-based-access-control-1) and [Authorization practices](https://www.alibabacloud.com/help/en/maxcompute/use-cases/authorization-practices)
     */
    policy?: pulumi.Input<string>;
    /**
     * Project name
     */
    projectName: pulumi.Input<string>;
    /**
     * Role Name
     *
     * > **NOTE:** At the beginning of a letter, it can contain letters and numbers and can be no more than 64 characters in length.
     */
    roleName: pulumi.Input<string>;
    /**
     * Role type Valid values: admin/resource
     *
     * > **NOTE:** -- management type (admin) role: You can grant management type permissions through Policy. You cannot grant resource permissions to management type roles. You cannot grant management type permissions to management type roles through ACL. -- resource role: you can authorize resource type permissions through Policy or ACL, but cannot authorize management type permissions. For details, see [role-planning](https://www.alibabacloud.com/help/en/maxcompute/user-guide/role-planning)
     */
    type: pulumi.Input<string>;
}
