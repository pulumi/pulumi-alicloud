// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Max Compute Tunnel Quota Timer can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:maxcompute/tunnelQuotaTimer:TunnelQuotaTimer example <id>
 * ```
 */
export class TunnelQuotaTimer extends pulumi.CustomResource {
    /**
     * Get an existing TunnelQuotaTimer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TunnelQuotaTimerState, opts?: pulumi.CustomResourceOptions): TunnelQuotaTimer {
        return new TunnelQuotaTimer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:maxcompute/tunnelQuotaTimer:TunnelQuotaTimer';

    /**
     * Returns true if the given object is an instance of TunnelQuotaTimer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TunnelQuotaTimer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TunnelQuotaTimer.__pulumiType;
    }

    /**
     * The nickname of the exclusive Resource Group (Tunnel Quota) for the level - 1 data transmission service.
     */
    public readonly nickname!: pulumi.Output<string>;
    /**
     * Time-Sharing configuration
     *
     * > **NOTE:** -- The same reserved Quota resource group supports up to 48 time intervals. The minimum duration of a time interval is 30 minutes. -- After the current data transmission service is configured for time-sharing, if you need to perform a downgrade operation on the data transmission service (package year and month), please reduce the time-sharing concurrency first. -- The effective time of the time-sharing configuration is 0 to 5 minutes, and the billing will be calculated according to the actual effective time. -- Please make sure to set the time range completely from 00:00 to 24:00
     * See `quotaTimer` below.
     */
    public readonly quotaTimers!: pulumi.Output<outputs.maxcompute.TunnelQuotaTimerQuotaTimer[] | undefined>;
    /**
     * Time zone, reference: Asia/Shanghai
     * In general, the system will automatically generate the time zone according to the region without configuration.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;

    /**
     * Create a TunnelQuotaTimer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TunnelQuotaTimerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TunnelQuotaTimerArgs | TunnelQuotaTimerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TunnelQuotaTimerState | undefined;
            resourceInputs["nickname"] = state ? state.nickname : undefined;
            resourceInputs["quotaTimers"] = state ? state.quotaTimers : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
        } else {
            const args = argsOrState as TunnelQuotaTimerArgs | undefined;
            if ((!args || args.nickname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nickname'");
            }
            resourceInputs["nickname"] = args ? args.nickname : undefined;
            resourceInputs["quotaTimers"] = args ? args.quotaTimers : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TunnelQuotaTimer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TunnelQuotaTimer resources.
 */
export interface TunnelQuotaTimerState {
    /**
     * The nickname of the exclusive Resource Group (Tunnel Quota) for the level - 1 data transmission service.
     */
    nickname?: pulumi.Input<string>;
    /**
     * Time-Sharing configuration
     *
     * > **NOTE:** -- The same reserved Quota resource group supports up to 48 time intervals. The minimum duration of a time interval is 30 minutes. -- After the current data transmission service is configured for time-sharing, if you need to perform a downgrade operation on the data transmission service (package year and month), please reduce the time-sharing concurrency first. -- The effective time of the time-sharing configuration is 0 to 5 minutes, and the billing will be calculated according to the actual effective time. -- Please make sure to set the time range completely from 00:00 to 24:00
     * See `quotaTimer` below.
     */
    quotaTimers?: pulumi.Input<pulumi.Input<inputs.maxcompute.TunnelQuotaTimerQuotaTimer>[]>;
    /**
     * Time zone, reference: Asia/Shanghai
     * In general, the system will automatically generate the time zone according to the region without configuration.
     */
    timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TunnelQuotaTimer resource.
 */
export interface TunnelQuotaTimerArgs {
    /**
     * The nickname of the exclusive Resource Group (Tunnel Quota) for the level - 1 data transmission service.
     */
    nickname: pulumi.Input<string>;
    /**
     * Time-Sharing configuration
     *
     * > **NOTE:** -- The same reserved Quota resource group supports up to 48 time intervals. The minimum duration of a time interval is 30 minutes. -- After the current data transmission service is configured for time-sharing, if you need to perform a downgrade operation on the data transmission service (package year and month), please reduce the time-sharing concurrency first. -- The effective time of the time-sharing configuration is 0 to 5 minutes, and the billing will be calculated according to the actual effective time. -- Please make sure to set the time range completely from 00:00 to 24:00
     * See `quotaTimer` below.
     */
    quotaTimers?: pulumi.Input<pulumi.Input<inputs.maxcompute.TunnelQuotaTimerQuotaTimer>[]>;
    /**
     * Time zone, reference: Asia/Shanghai
     * In general, the system will automatically generate the time zone according to the region without configuration.
     */
    timeZone?: pulumi.Input<string>;
}
