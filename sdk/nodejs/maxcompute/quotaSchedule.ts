// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Max Compute Quota Schedule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:maxcompute/quotaSchedule:QuotaSchedule example <nickname>:<timezone>
 * ```
 */
export class QuotaSchedule extends pulumi.CustomResource {
    /**
     * Get an existing QuotaSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QuotaScheduleState, opts?: pulumi.CustomResourceOptions): QuotaSchedule {
        return new QuotaSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:maxcompute/quotaSchedule:QuotaSchedule';

    /**
     * Returns true if the given object is an instance of QuotaSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QuotaSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QuotaSchedule.__pulumiType;
    }

    /**
     * The nickname of level-1 compute quota.
     */
    declare public readonly nickname: pulumi.Output<string>;
    /**
     * schedule list See `scheduleList` below.
     */
    declare public readonly scheduleLists: pulumi.Output<outputs.maxcompute.QuotaScheduleScheduleList[] | undefined>;
    /**
     * Time zone, reference value: UTC +8
     */
    declare public readonly timezone: pulumi.Output<string>;

    /**
     * Create a QuotaSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QuotaScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QuotaScheduleArgs | QuotaScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QuotaScheduleState | undefined;
            resourceInputs["nickname"] = state?.nickname;
            resourceInputs["scheduleLists"] = state?.scheduleLists;
            resourceInputs["timezone"] = state?.timezone;
        } else {
            const args = argsOrState as QuotaScheduleArgs | undefined;
            if (args?.nickname === undefined && !opts.urn) {
                throw new Error("Missing required property 'nickname'");
            }
            if (args?.timezone === undefined && !opts.urn) {
                throw new Error("Missing required property 'timezone'");
            }
            resourceInputs["nickname"] = args?.nickname;
            resourceInputs["scheduleLists"] = args?.scheduleLists;
            resourceInputs["timezone"] = args?.timezone;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QuotaSchedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering QuotaSchedule resources.
 */
export interface QuotaScheduleState {
    /**
     * The nickname of level-1 compute quota.
     */
    nickname?: pulumi.Input<string>;
    /**
     * schedule list See `scheduleList` below.
     */
    scheduleLists?: pulumi.Input<pulumi.Input<inputs.maxcompute.QuotaScheduleScheduleList>[]>;
    /**
     * Time zone, reference value: UTC +8
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QuotaSchedule resource.
 */
export interface QuotaScheduleArgs {
    /**
     * The nickname of level-1 compute quota.
     */
    nickname: pulumi.Input<string>;
    /**
     * schedule list See `scheduleList` below.
     */
    scheduleLists?: pulumi.Input<pulumi.Input<inputs.maxcompute.QuotaScheduleScheduleList>[]>;
    /**
     * Time zone, reference value: UTC +8
     */
    timezone: pulumi.Input<string>;
}
