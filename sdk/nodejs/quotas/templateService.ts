// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Quotas Template Service can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:quotas/templateService:TemplateService example
 * ```
 */
export class TemplateService extends pulumi.CustomResource {
    /**
     * Get an existing TemplateService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateServiceState, opts?: pulumi.CustomResourceOptions): TemplateService {
        return new TemplateService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:quotas/templateService:TemplateService';

    /**
     * Returns true if the given object is an instance of TemplateService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateService.__pulumiType;
    }

    /**
     * Status of the quota template. Valid values:
     * - `-1`: disabled.
     */
    public readonly serviceStatus!: pulumi.Output<number>;

    /**
     * Create a TemplateService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateServiceArgs | TemplateServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateServiceState | undefined;
            resourceInputs["serviceStatus"] = state ? state.serviceStatus : undefined;
        } else {
            const args = argsOrState as TemplateServiceArgs | undefined;
            if ((!args || args.serviceStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceStatus'");
            }
            resourceInputs["serviceStatus"] = args ? args.serviceStatus : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TemplateService resources.
 */
export interface TemplateServiceState {
    /**
     * Status of the quota template. Valid values:
     * - `-1`: disabled.
     */
    serviceStatus?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TemplateService resource.
 */
export interface TemplateServiceArgs {
    /**
     * Status of the quota template. Valid values:
     * - `-1`: disabled.
     */
    serviceStatus: pulumi.Input<number>;
}
