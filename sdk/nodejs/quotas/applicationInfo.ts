// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class ApplicationInfo extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationInfo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationInfoState, opts?: pulumi.CustomResourceOptions): ApplicationInfo {
        return new ApplicationInfo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:quotas/applicationInfo:ApplicationInfo';

    /**
     * Returns true if the given object is an instance of ApplicationInfo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationInfo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationInfo.__pulumiType;
    }

    declare public /*out*/ readonly approveValue: pulumi.Output<string>;
    declare public readonly auditMode: pulumi.Output<string>;
    declare public /*out*/ readonly auditReason: pulumi.Output<string>;
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    declare public readonly desireValue: pulumi.Output<number>;
    declare public readonly dimensions: pulumi.Output<outputs.quotas.ApplicationInfoDimension[] | undefined>;
    declare public readonly effectiveTime: pulumi.Output<string | undefined>;
    declare public readonly envLanguage: pulumi.Output<string | undefined>;
    declare public readonly expireTime: pulumi.Output<string | undefined>;
    declare public readonly noticeType: pulumi.Output<number>;
    declare public readonly productCode: pulumi.Output<string>;
    declare public readonly quotaActionCode: pulumi.Output<string>;
    declare public readonly quotaCategory: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly quotaDescription: pulumi.Output<string>;
    declare public /*out*/ readonly quotaName: pulumi.Output<string>;
    declare public /*out*/ readonly quotaUnit: pulumi.Output<string>;
    declare public readonly reason: pulumi.Output<string>;
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a ApplicationInfo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationInfoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationInfoArgs | ApplicationInfoState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationInfoState | undefined;
            resourceInputs["approveValue"] = state?.approveValue;
            resourceInputs["auditMode"] = state?.auditMode;
            resourceInputs["auditReason"] = state?.auditReason;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["desireValue"] = state?.desireValue;
            resourceInputs["dimensions"] = state?.dimensions;
            resourceInputs["effectiveTime"] = state?.effectiveTime;
            resourceInputs["envLanguage"] = state?.envLanguage;
            resourceInputs["expireTime"] = state?.expireTime;
            resourceInputs["noticeType"] = state?.noticeType;
            resourceInputs["productCode"] = state?.productCode;
            resourceInputs["quotaActionCode"] = state?.quotaActionCode;
            resourceInputs["quotaCategory"] = state?.quotaCategory;
            resourceInputs["quotaDescription"] = state?.quotaDescription;
            resourceInputs["quotaName"] = state?.quotaName;
            resourceInputs["quotaUnit"] = state?.quotaUnit;
            resourceInputs["reason"] = state?.reason;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as ApplicationInfoArgs | undefined;
            if (args?.desireValue === undefined && !opts.urn) {
                throw new Error("Missing required property 'desireValue'");
            }
            if (args?.productCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'productCode'");
            }
            if (args?.quotaActionCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'quotaActionCode'");
            }
            if (args?.reason === undefined && !opts.urn) {
                throw new Error("Missing required property 'reason'");
            }
            resourceInputs["auditMode"] = args?.auditMode;
            resourceInputs["desireValue"] = args?.desireValue;
            resourceInputs["dimensions"] = args?.dimensions;
            resourceInputs["effectiveTime"] = args?.effectiveTime;
            resourceInputs["envLanguage"] = args?.envLanguage;
            resourceInputs["expireTime"] = args?.expireTime;
            resourceInputs["noticeType"] = args?.noticeType;
            resourceInputs["productCode"] = args?.productCode;
            resourceInputs["quotaActionCode"] = args?.quotaActionCode;
            resourceInputs["quotaCategory"] = args?.quotaCategory;
            resourceInputs["reason"] = args?.reason;
            resourceInputs["approveValue"] = undefined /*out*/;
            resourceInputs["auditReason"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["quotaDescription"] = undefined /*out*/;
            resourceInputs["quotaName"] = undefined /*out*/;
            resourceInputs["quotaUnit"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationInfo.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationInfo resources.
 */
export interface ApplicationInfoState {
    approveValue?: pulumi.Input<string>;
    auditMode?: pulumi.Input<string>;
    auditReason?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    desireValue?: pulumi.Input<number>;
    dimensions?: pulumi.Input<pulumi.Input<inputs.quotas.ApplicationInfoDimension>[]>;
    effectiveTime?: pulumi.Input<string>;
    envLanguage?: pulumi.Input<string>;
    expireTime?: pulumi.Input<string>;
    noticeType?: pulumi.Input<number>;
    productCode?: pulumi.Input<string>;
    quotaActionCode?: pulumi.Input<string>;
    quotaCategory?: pulumi.Input<string>;
    quotaDescription?: pulumi.Input<string>;
    quotaName?: pulumi.Input<string>;
    quotaUnit?: pulumi.Input<string>;
    reason?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationInfo resource.
 */
export interface ApplicationInfoArgs {
    auditMode?: pulumi.Input<string>;
    desireValue: pulumi.Input<number>;
    dimensions?: pulumi.Input<pulumi.Input<inputs.quotas.ApplicationInfoDimension>[]>;
    effectiveTime?: pulumi.Input<string>;
    envLanguage?: pulumi.Input<string>;
    expireTime?: pulumi.Input<string>;
    noticeType?: pulumi.Input<number>;
    productCode: pulumi.Input<string>;
    quotaActionCode: pulumi.Input<string>;
    quotaCategory?: pulumi.Input<string>;
    reason: pulumi.Input<string>;
}
