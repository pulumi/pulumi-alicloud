// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Ros Template Scratches of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.151.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.ros.getTemplateScratches({
 *     ids: ["example_value"],
 * });
 * export const rosTemplateScratchId1 = ids.then(ids => ids.scratches?[0]?.id);
 * const status = alicloud.ros.getTemplateScratches({
 *     status: "GENERATE_COMPLETE",
 * });
 * export const rosTemplateScratchId2 = status.then(status => status.scratches?[0]?.id);
 * const templateScratchType = alicloud.ros.getTemplateScratches({
 *     templateScratchType: "ResourceImport",
 * });
 * export const rosTemplateScratchId3 = templateScratchType.then(templateScratchType => templateScratchType.scratches?[0]?.id);
 * ```
 */
export function getTemplateScratches(args?: GetTemplateScratchesArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateScratchesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:ros/getTemplateScratches:getTemplateScratches", {
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "status": args.status,
        "templateScratchType": args.templateScratchType,
    }, opts);
}

/**
 * A collection of arguments for invoking getTemplateScratches.
 */
export interface GetTemplateScratchesArgs {
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of Template Scratch IDs.
     */
    ids?: string[];
    outputFile?: string;
    /**
     * The status of the resource.
     */
    status?: string;
    /**
     * The type of the Template Scratch.
     */
    templateScratchType?: string;
}

/**
 * A collection of values returned by getTemplateScratches.
 */
export interface GetTemplateScratchesResult {
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly scratches: outputs.ros.GetTemplateScratchesScratch[];
    readonly status?: string;
    readonly templateScratchType?: string;
}

export function getTemplateScratchesOutput(args?: GetTemplateScratchesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateScratchesResult> {
    return pulumi.output(args).apply(a => getTemplateScratches(a, opts))
}

/**
 * A collection of arguments for invoking getTemplateScratches.
 */
export interface GetTemplateScratchesOutputArgs {
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of Template Scratch IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The type of the Template Scratch.
     */
    templateScratchType?: pulumi.Input<string>;
}
