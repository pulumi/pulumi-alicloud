// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a ROS Stack Instance resource.
 *
 * For information about ROS Stack Instance and how to use it, see [What is Stack Instance](https://www.alibabacloud.com/help/en/doc-detail/151338.html).
 *
 * > **NOTE:** Available in v1.145.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const exampleRegions = alicloud.ros.getRegions({});
 * const exampleStackGroup = new alicloud.ros.StackGroup("exampleStackGroup", {
 *     stackGroupName: _var.name,
 *     templateBody: "{\"ROSTemplateFormatVersion\":\"2015-09-01\", \"Parameters\": {\"VpcName\": {\"Type\": \"String\"},\"InstanceType\": {\"Type\": \"String\"}}}",
 *     description: "test for stack groups",
 *     parameters: [
 *         {
 *             parameterKey: "VpcName",
 *             parameterValue: "VpcName",
 *         },
 *         {
 *             parameterKey: "InstanceType",
 *             parameterValue: "InstanceType",
 *         },
 *     ],
 * });
 * const exampleStackInstance = new alicloud.ros.StackInstance("exampleStackInstance", {
 *     stackGroupName: exampleStackGroup.stackGroupName,
 *     stackInstanceAccountId: "example_value",
 *     stackInstanceRegionId: exampleRegions.then(exampleRegions => exampleRegions.regions?[0]?.regionId),
 *     operationPreferences: "{\"FailureToleranceCount\": 1, \"MaxConcurrentCount\": 2}",
 *     parameterOverrides: [{
 *         parameterValue: "VpcName",
 *         parameterKey: "VpcName",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ROS Stack Instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ros/stackInstance:StackInstance example <stack_group_name>:<stack_instance_account_id>:<stack_instance_region_id>
 * ```
 */
export class StackInstance extends pulumi.CustomResource {
    /**
     * Get an existing StackInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StackInstanceState, opts?: pulumi.CustomResourceOptions): StackInstance {
        return new StackInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ros/stackInstance:StackInstance';

    /**
     * Returns true if the given object is an instance of StackInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StackInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StackInstance.__pulumiType;
    }

    /**
     * The operation description.
     */
    public readonly operationDescription!: pulumi.Output<string | undefined>;
    /**
     * The operation preferences. The operation settings. The following fields are supported:
     */
    public readonly operationPreferences!: pulumi.Output<string | undefined>;
    /**
     * ParameterOverrides. See the following `Block parameterOverrides`.
     */
    public readonly parameterOverrides!: pulumi.Output<outputs.ros.StackInstanceParameterOverride[] | undefined>;
    /**
     * Specifies whether to retain the stack corresponding to the stack instance.Default value `false`. **NOTE:** When `retainStacks` is `true`, the stack is retained. If the stack is retained, the corresponding stack is not deleted when the stack instance is deleted from the stack group.
     */
    public readonly retainStacks!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the stack group.
     */
    public readonly stackGroupName!: pulumi.Output<string>;
    /**
     * The account to which the stack instance belongs.
     */
    public readonly stackInstanceAccountId!: pulumi.Output<string>;
    /**
     * The region of the stack instance.
     */
    public readonly stackInstanceRegionId!: pulumi.Output<string>;
    /**
     * The status of the stack instance. Valid values: `CURRENT` or `OUTDATED`. 
     * * `CURRENT`: The stack corresponding to the stack instance is up to date with the stack group.
     * * `OUTDATED`: The stack corresponding to the stack instance is not up to date with the stack group. The `OUTDATED` state has the following possible causes:
     * * When the CreateStackInstances operation is called to create stack instances, the corresponding stacks fail to be created.
     * * When the UpdateStackInstances or UpdateStackGroup operation is called to update stack instances, the corresponding stacks fail to be updated, or only some of the stack instances are updated.
     * * The create or update operation is not complete.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The timeout period that is specified for the stack creation request. Default value: `60`. Unit: `minutes`.
     */
    public readonly timeoutInMinutes!: pulumi.Output<string | undefined>;

    /**
     * Create a StackInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StackInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StackInstanceArgs | StackInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StackInstanceState | undefined;
            resourceInputs["operationDescription"] = state ? state.operationDescription : undefined;
            resourceInputs["operationPreferences"] = state ? state.operationPreferences : undefined;
            resourceInputs["parameterOverrides"] = state ? state.parameterOverrides : undefined;
            resourceInputs["retainStacks"] = state ? state.retainStacks : undefined;
            resourceInputs["stackGroupName"] = state ? state.stackGroupName : undefined;
            resourceInputs["stackInstanceAccountId"] = state ? state.stackInstanceAccountId : undefined;
            resourceInputs["stackInstanceRegionId"] = state ? state.stackInstanceRegionId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeoutInMinutes"] = state ? state.timeoutInMinutes : undefined;
        } else {
            const args = argsOrState as StackInstanceArgs | undefined;
            if ((!args || args.stackGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackGroupName'");
            }
            if ((!args || args.stackInstanceAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackInstanceAccountId'");
            }
            if ((!args || args.stackInstanceRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackInstanceRegionId'");
            }
            resourceInputs["operationDescription"] = args ? args.operationDescription : undefined;
            resourceInputs["operationPreferences"] = args ? args.operationPreferences : undefined;
            resourceInputs["parameterOverrides"] = args ? args.parameterOverrides : undefined;
            resourceInputs["retainStacks"] = args ? args.retainStacks : undefined;
            resourceInputs["stackGroupName"] = args ? args.stackGroupName : undefined;
            resourceInputs["stackInstanceAccountId"] = args ? args.stackInstanceAccountId : undefined;
            resourceInputs["stackInstanceRegionId"] = args ? args.stackInstanceRegionId : undefined;
            resourceInputs["timeoutInMinutes"] = args ? args.timeoutInMinutes : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StackInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StackInstance resources.
 */
export interface StackInstanceState {
    /**
     * The operation description.
     */
    operationDescription?: pulumi.Input<string>;
    /**
     * The operation preferences. The operation settings. The following fields are supported:
     */
    operationPreferences?: pulumi.Input<string>;
    /**
     * ParameterOverrides. See the following `Block parameterOverrides`.
     */
    parameterOverrides?: pulumi.Input<pulumi.Input<inputs.ros.StackInstanceParameterOverride>[]>;
    /**
     * Specifies whether to retain the stack corresponding to the stack instance.Default value `false`. **NOTE:** When `retainStacks` is `true`, the stack is retained. If the stack is retained, the corresponding stack is not deleted when the stack instance is deleted from the stack group.
     */
    retainStacks?: pulumi.Input<boolean>;
    /**
     * The name of the stack group.
     */
    stackGroupName?: pulumi.Input<string>;
    /**
     * The account to which the stack instance belongs.
     */
    stackInstanceAccountId?: pulumi.Input<string>;
    /**
     * The region of the stack instance.
     */
    stackInstanceRegionId?: pulumi.Input<string>;
    /**
     * The status of the stack instance. Valid values: `CURRENT` or `OUTDATED`. 
     * * `CURRENT`: The stack corresponding to the stack instance is up to date with the stack group.
     * * `OUTDATED`: The stack corresponding to the stack instance is not up to date with the stack group. The `OUTDATED` state has the following possible causes:
     * * When the CreateStackInstances operation is called to create stack instances, the corresponding stacks fail to be created.
     * * When the UpdateStackInstances or UpdateStackGroup operation is called to update stack instances, the corresponding stacks fail to be updated, or only some of the stack instances are updated.
     * * The create or update operation is not complete.
     */
    status?: pulumi.Input<string>;
    /**
     * The timeout period that is specified for the stack creation request. Default value: `60`. Unit: `minutes`.
     */
    timeoutInMinutes?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StackInstance resource.
 */
export interface StackInstanceArgs {
    /**
     * The operation description.
     */
    operationDescription?: pulumi.Input<string>;
    /**
     * The operation preferences. The operation settings. The following fields are supported:
     */
    operationPreferences?: pulumi.Input<string>;
    /**
     * ParameterOverrides. See the following `Block parameterOverrides`.
     */
    parameterOverrides?: pulumi.Input<pulumi.Input<inputs.ros.StackInstanceParameterOverride>[]>;
    /**
     * Specifies whether to retain the stack corresponding to the stack instance.Default value `false`. **NOTE:** When `retainStacks` is `true`, the stack is retained. If the stack is retained, the corresponding stack is not deleted when the stack instance is deleted from the stack group.
     */
    retainStacks?: pulumi.Input<boolean>;
    /**
     * The name of the stack group.
     */
    stackGroupName: pulumi.Input<string>;
    /**
     * The account to which the stack instance belongs.
     */
    stackInstanceAccountId: pulumi.Input<string>;
    /**
     * The region of the stack instance.
     */
    stackInstanceRegionId: pulumi.Input<string>;
    /**
     * The timeout period that is specified for the stack creation request. Default value: `60`. Unit: `minutes`.
     */
    timeoutInMinutes?: pulumi.Input<string>;
}
