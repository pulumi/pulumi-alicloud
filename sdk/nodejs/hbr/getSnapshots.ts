// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Hbr Snapshots of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.133.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultEcsBackupPlans = alicloud.hbr.getEcsBackupPlans({
 *     nameRegex: "plan-tf-used-dont-delete",
 * });
 * const defaultOssBackupPlans = alicloud.hbr.getOssBackupPlans({
 *     nameRegex: "plan-tf-used-dont-delete",
 * });
 * const defaultNasBackupPlans = alicloud.hbr.getNasBackupPlans({
 *     nameRegex: "plan-tf-used-dont-delete",
 * });
 * const ecsSnapshots = Promise.all([defaultEcsBackupPlans, defaultEcsBackupPlans]).then(([defaultEcsBackupPlans, defaultEcsBackupPlans1]) => alicloud.hbr.getSnapshots({
 *     sourceType: "ECS_FILE",
 *     vaultId: defaultEcsBackupPlans.plans?[0]?.vaultId,
 *     instanceId: defaultEcsBackupPlans1.plans?[0]?.instanceId,
 * }));
 * const ossSnapshots = Promise.all([defaultOssBackupPlans, defaultOssBackupPlans]).then(([defaultOssBackupPlans, defaultOssBackupPlans1]) => alicloud.hbr.getSnapshots({
 *     sourceType: "OSS",
 *     vaultId: defaultOssBackupPlans.plans?[0]?.vaultId,
 *     bucket: defaultOssBackupPlans1.plans?[0]?.bucket,
 *     completeTime: "2021-07-20T14:17:15CST,2021-07-24T14:17:15CST",
 *     completeTimeChecker: "BETWEEN",
 * }));
 * const nasSnapshots = Promise.all([defaultNasBackupPlans, defaultNasBackupPlans, defaultNasBackupPlans]).then(([defaultNasBackupPlans, defaultNasBackupPlans1, defaultNasBackupPlans2]) => alicloud.hbr.getSnapshots({
 *     sourceType: "NAS",
 *     vaultId: defaultNasBackupPlans.plans?[0]?.vaultId,
 *     fileSystemId: defaultNasBackupPlans1.plans?[0]?.fileSystemId,
 *     createTime: defaultNasBackupPlans2.plans?[0]?.createTime,
 *     completeTime: "2021-08-23T14:17:15CST",
 *     completeTimeChecker: "GREATER_THAN_OR_EQUAL",
 * }));
 * export const hbrSnapshotId1 = nasSnapshots.then(nasSnapshots => nasSnapshots.snapshots?[0]?.id);
 * ```
 */
export function getSnapshots(args: GetSnapshotsArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:hbr/getSnapshots:getSnapshots", {
        "bucket": args.bucket,
        "completeTime": args.completeTime,
        "completeTimeChecker": args.completeTimeChecker,
        "createTime": args.createTime,
        "enableDetails": args.enableDetails,
        "fileSystemId": args.fileSystemId,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "limit": args.limit,
        "outputFile": args.outputFile,
        "query": args.query,
        "sourceType": args.sourceType,
        "status": args.status,
        "vaultId": args.vaultId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnapshots.
 */
export interface GetSnapshotsArgs {
    /**
     * The name of OSS bucket.
     */
    bucket?: string;
    /**
     * The time when the snapshot completed. UNIX time in seconds.
     */
    completeTime?: string;
    /**
     * Complete time filter operator. Optional values: `MATCH_TERM`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `BETWEEN`.
     */
    completeTimeChecker?: string;
    /**
     * File System Creation Time of Nas. Unix Time Seconds.
     */
    createTime?: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * The ID of NAS File system.
     */
    fileSystemId?: string;
    /**
     * A list of Snapshot IDs.
     */
    ids?: string[];
    /**
     * The ID of ECS instance.
     */
    instanceId?: string;
    limit?: number;
    outputFile?: string;
    query?: string;
    /**
     * Data source type, optional values: `ECS_FILE`, `OSS`, `NAS`.
     */
    sourceType: string;
    /**
     * The status of snapshot execution. Possible values: `COMPLETE`, `PARTIAL_COMPLETE`, `FAILED`.
     */
    status?: string;
    /**
     * The ID of Vault.
     */
    vaultId: string;
}

/**
 * A collection of values returned by getSnapshots.
 */
export interface GetSnapshotsResult {
    readonly bucket?: string;
    readonly completeTime?: string;
    readonly completeTimeChecker?: string;
    readonly createTime?: string;
    readonly enableDetails?: boolean;
    readonly fileSystemId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId?: string;
    readonly limit?: number;
    readonly outputFile?: string;
    readonly query?: string;
    readonly snapshots: outputs.hbr.GetSnapshotsSnapshot[];
    readonly sourceType: string;
    readonly status?: string;
    readonly vaultId: string;
}

export function getSnapshotsOutput(args: GetSnapshotsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotsResult> {
    return pulumi.output(args).apply(a => getSnapshots(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshots.
 */
export interface GetSnapshotsOutputArgs {
    /**
     * The name of OSS bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The time when the snapshot completed. UNIX time in seconds.
     */
    completeTime?: pulumi.Input<string>;
    /**
     * Complete time filter operator. Optional values: `MATCH_TERM`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `BETWEEN`.
     */
    completeTimeChecker?: pulumi.Input<string>;
    /**
     * File System Creation Time of Nas. Unix Time Seconds.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * The ID of NAS File system.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * A list of Snapshot IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of ECS instance.
     */
    instanceId?: pulumi.Input<string>;
    limit?: pulumi.Input<number>;
    outputFile?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    /**
     * Data source type, optional values: `ECS_FILE`, `OSS`, `NAS`.
     */
    sourceType: pulumi.Input<string>;
    /**
     * The status of snapshot execution. Possible values: `COMPLETE`, `PARTIAL_COMPLETE`, `FAILED`.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of Vault.
     */
    vaultId: pulumi.Input<string>;
}
