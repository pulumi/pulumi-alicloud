// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a HBR Policy Binding resource. A policy binding relationship consists of a data source, a policy, and binding options.
 *
 * For information about HBR Policy Binding and how to use it, see [What is Policy Binding](https://www.alibabacloud.com/help/en/cloud-backup/developer-reference/api-hbr-2017-09-08-createpolicybindings).
 *
 * > **NOTE:** Available since v1.221.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new random.index.Integer("default", {
 *     max: 99999,
 *     min: 10000,
 * });
 * const defaultyk84Hc = new alicloud.hbr.Vault("defaultyk84Hc", {
 *     vaultType: "STANDARD",
 *     vaultName: `example-value-${_default.result}`,
 * });
 * const defaultoqWvHQ = new alicloud.hbr.Policy("defaultoqWvHQ", {
 *     policyName: `example-value-${_default.result}`,
 *     rules: [{
 *         ruleType: "BACKUP",
 *         backupType: "COMPLETE",
 *         schedule: "I|1631685600|P1D",
 *         retention: 7,
 *         archiveDays: 0,
 *         vaultId: defaultyk84Hc.id,
 *     }],
 *     policyDescription: "policy example",
 * });
 * const defaultKtt2XY = new alicloud.oss.Bucket("defaultKtt2XY", {
 *     storageClass: "Standard",
 *     bucket: `example-value-${_default.result}`,
 * });
 * const defaultPolicyBinding = new alicloud.hbr.PolicyBinding("default", {
 *     sourceType: "OSS",
 *     disabled: false,
 *     policyId: defaultoqWvHQ.id,
 *     dataSourceId: defaultKtt2XY.bucket,
 *     policyBindingDescription: "policy binding example (update)",
 *     source: "prefix-example-update/",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * HBR Policy Binding can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:hbr/policyBinding:PolicyBinding example <policy_id>:<source_type>:<data_source_id>
 * ```
 */
export class PolicyBinding extends pulumi.CustomResource {
    /**
     * Get an existing PolicyBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyBindingState, opts?: pulumi.CustomResourceOptions): PolicyBinding {
        return new PolicyBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:hbr/policyBinding:PolicyBinding';

    /**
     * Returns true if the given object is an instance of PolicyBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyBinding.__pulumiType;
    }

    /**
     * Backup Advanced Options. See `advancedOptions` below.
     */
    public readonly advancedOptions!: pulumi.Output<outputs.hbr.PolicyBindingAdvancedOptions>;
    /**
     * The creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The data source ID.
     */
    public readonly dataSourceId!: pulumi.Output<string>;
    /**
     * Whether the policy is effective for the data source.
     * - true: Pause
     * - false: not paused.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
     */
    public readonly exclude!: pulumi.Output<string | undefined>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
     */
    public readonly include!: pulumi.Output<string | undefined>;
    /**
     * Resource Description.
     */
    public readonly policyBindingDescription!: pulumi.Output<string | undefined>;
    /**
     * The policy ID.
     */
    public readonly policyId!: pulumi.Output<string>;
    /**
     * When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
     */
    public readonly source!: pulumi.Output<string | undefined>;
    /**
     * Data source type, value range:
     * - **UDM_ECS**: indicates the ECS instance backup.
     * - **OSS**: indicates an OSS backup.
     * - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
     * - **ECS_FILE**: indicates that the ECS file is backed up.
     * - **File**: indicates a local File backup.
     */
    public readonly sourceType!: pulumi.Output<string>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
     */
    public readonly speedLimit!: pulumi.Output<string | undefined>;

    /**
     * Create a PolicyBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PolicyBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyBindingArgs | PolicyBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyBindingState | undefined;
            resourceInputs["advancedOptions"] = state ? state.advancedOptions : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["exclude"] = state ? state.exclude : undefined;
            resourceInputs["include"] = state ? state.include : undefined;
            resourceInputs["policyBindingDescription"] = state ? state.policyBindingDescription : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
            resourceInputs["speedLimit"] = state ? state.speedLimit : undefined;
        } else {
            const args = argsOrState as PolicyBindingArgs | undefined;
            resourceInputs["advancedOptions"] = args ? args.advancedOptions : undefined;
            resourceInputs["dataSourceId"] = args ? args.dataSourceId : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["exclude"] = args ? args.exclude : undefined;
            resourceInputs["include"] = args ? args.include : undefined;
            resourceInputs["policyBindingDescription"] = args ? args.policyBindingDescription : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceType"] = args ? args.sourceType : undefined;
            resourceInputs["speedLimit"] = args ? args.speedLimit : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyBinding.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyBinding resources.
 */
export interface PolicyBindingState {
    /**
     * Backup Advanced Options. See `advancedOptions` below.
     */
    advancedOptions?: pulumi.Input<inputs.hbr.PolicyBindingAdvancedOptions>;
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The data source ID.
     */
    dataSourceId?: pulumi.Input<string>;
    /**
     * Whether the policy is effective for the data source.
     * - true: Pause
     * - false: not paused.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
     */
    exclude?: pulumi.Input<string>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
     */
    include?: pulumi.Input<string>;
    /**
     * Resource Description.
     */
    policyBindingDescription?: pulumi.Input<string>;
    /**
     * The policy ID.
     */
    policyId?: pulumi.Input<string>;
    /**
     * When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
     */
    source?: pulumi.Input<string>;
    /**
     * Data source type, value range:
     * - **UDM_ECS**: indicates the ECS instance backup.
     * - **OSS**: indicates an OSS backup.
     * - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
     * - **ECS_FILE**: indicates that the ECS file is backed up.
     * - **File**: indicates a local File backup.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
     */
    speedLimit?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyBinding resource.
 */
export interface PolicyBindingArgs {
    /**
     * Backup Advanced Options. See `advancedOptions` below.
     */
    advancedOptions?: pulumi.Input<inputs.hbr.PolicyBindingAdvancedOptions>;
    /**
     * The data source ID.
     */
    dataSourceId?: pulumi.Input<string>;
    /**
     * Whether the policy is effective for the data source.
     * - true: Pause
     * - false: not paused.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
     */
    exclude?: pulumi.Input<string>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
     */
    include?: pulumi.Input<string>;
    /**
     * Resource Description.
     */
    policyBindingDescription?: pulumi.Input<string>;
    /**
     * The policy ID.
     */
    policyId?: pulumi.Input<string>;
    /**
     * When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
     */
    source?: pulumi.Input<string>;
    /**
     * Data source type, value range:
     * - **UDM_ECS**: indicates the ECS instance backup.
     * - **OSS**: indicates an OSS backup.
     * - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
     * - **ECS_FILE**: indicates that the ECS file is backed up.
     * - **File**: indicates a local File backup.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
     */
    speedLimit?: pulumi.Input<string>;
}
