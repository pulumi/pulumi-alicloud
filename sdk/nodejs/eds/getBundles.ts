// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Ecd bundles of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.143.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultBundles = pulumi.output(alicloud.eds.getBundles({
 *     bundleType: "SYSTEM",
 * }));
 * ```
 */
export function getBundles(args?: GetBundlesArgs, opts?: pulumi.InvokeOptions): Promise<GetBundlesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:eds/getBundles:getBundles", {
        "bundleIds": args.bundleIds,
        "bundleType": args.bundleType,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getBundles.
 */
export interface GetBundlesArgs {
    /**
     * The bundle id of the bundle.
     */
    bundleIds?: string[];
    /**
     * The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
     */
    bundleType?: string;
    /**
     * A list of Bundle IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Bundle name.
     */
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getBundles.
 */
export interface GetBundlesResult {
    readonly bundleIds: string[];
    readonly bundleType?: string;
    readonly bundles: outputs.eds.GetBundlesBundle[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
}

export function getBundlesOutput(args?: GetBundlesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBundlesResult> {
    return pulumi.output(args).apply(a => getBundles(a, opts))
}

/**
 * A collection of arguments for invoking getBundles.
 */
export interface GetBundlesOutputArgs {
    /**
     * The bundle id of the bundle.
     */
    bundleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
     */
    bundleType?: pulumi.Input<string>;
    /**
     * A list of Bundle IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Bundle name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
