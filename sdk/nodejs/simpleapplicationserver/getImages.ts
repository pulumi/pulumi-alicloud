// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function getImages(args?: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:simpleapplicationserver/getImages:getImages", {
        "ids": args.ids,
        "imageType": args.imageType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesArgs {
    ids?: string[];
    /**
     * The type of the image. Valid values: `app`, `custom`, `system`.
     * * `system`: operating system (OS) image.
     * * `app`: application image.
     * * `custom`: custom image.
     */
    imageType?: string;
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getImages.
 */
export interface GetImagesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly imageType?: string;
    readonly images: outputs.simpleapplicationserver.GetImagesImage[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
}

export function getImagesOutput(args?: GetImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesResult> {
    return pulumi.output(args).apply(a => getImages(a, opts))
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesOutputArgs {
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the image. Valid values: `app`, `custom`, `system`.
     * * `system`: operating system (OS) image.
     * * `app`: application image.
     * * `custom`: custom image.
     */
    imageType?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
