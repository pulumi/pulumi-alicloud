// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The `alicloud.polardb.getEndpoints` data source provides a collection of PolarDB endpoints available in Alibaba Cloud account.
 * Filters support regular expression for the cluster name, searches by clusterId, and other filters which are listed below.
 *
 * > **NOTE:** Available since v1.68.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const this = alicloud.polardb.getNodeClasses({
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     category: "Normal",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _this.then(_this => _this.classes?.[0]?.zoneId),
 *     vswitchName: "terraform-example",
 * });
 * const cluster = new alicloud.polardb.Cluster("cluster", {
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     dbNodeCount: 2,
 *     dbNodeClass: _this.then(_this => _this.classes?.[0]?.supportedEngines?.[0]?.availableResources?.[0]?.dbNodeClass),
 *     vswitchId: defaultSwitch.id,
 * });
 * const polardbClustersDs = alicloud.polardb.getClustersOutput({
 *     descriptionRegex: cluster.description,
 *     status: "Running",
 * });
 * const defaultEndpoints = polardbClustersDs.apply(polardbClustersDs => alicloud.polardb.getEndpointsOutput({
 *     dbClusterId: polardbClustersDs.clusters?.[0]?.id,
 * }));
 * export const endpoint = defaultEndpoints.apply(defaultEndpoints => defaultEndpoints.endpoints?.[0]?.dbEndpointId);
 * ```
 */
export function getEndpoints(args: GetEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:polardb/getEndpoints:getEndpoints", {
        "dbClusterId": args.dbClusterId,
        "dbEndpointId": args.dbEndpointId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEndpoints.
 */
export interface GetEndpointsArgs {
    /**
     * PolarDB cluster ID.
     */
    dbClusterId: string;
    /**
     * endpoint of the cluster.
     */
    dbEndpointId?: string;
}

/**
 * A collection of values returned by getEndpoints.
 */
export interface GetEndpointsResult {
    readonly dbClusterId: string;
    /**
     * The endpoint ID.
     */
    readonly dbEndpointId?: string;
    /**
     * A list of PolarDB cluster endpoints. Each element contains the following attributes:
     */
    readonly endpoints: outputs.polardb.GetEndpointsEndpoint[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * The `alicloud.polardb.getEndpoints` data source provides a collection of PolarDB endpoints available in Alibaba Cloud account.
 * Filters support regular expression for the cluster name, searches by clusterId, and other filters which are listed below.
 *
 * > **NOTE:** Available since v1.68.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const this = alicloud.polardb.getNodeClasses({
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     category: "Normal",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _this.then(_this => _this.classes?.[0]?.zoneId),
 *     vswitchName: "terraform-example",
 * });
 * const cluster = new alicloud.polardb.Cluster("cluster", {
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     dbNodeCount: 2,
 *     dbNodeClass: _this.then(_this => _this.classes?.[0]?.supportedEngines?.[0]?.availableResources?.[0]?.dbNodeClass),
 *     vswitchId: defaultSwitch.id,
 * });
 * const polardbClustersDs = alicloud.polardb.getClustersOutput({
 *     descriptionRegex: cluster.description,
 *     status: "Running",
 * });
 * const defaultEndpoints = polardbClustersDs.apply(polardbClustersDs => alicloud.polardb.getEndpointsOutput({
 *     dbClusterId: polardbClustersDs.clusters?.[0]?.id,
 * }));
 * export const endpoint = defaultEndpoints.apply(defaultEndpoints => defaultEndpoints.endpoints?.[0]?.dbEndpointId);
 * ```
 */
export function getEndpointsOutput(args: GetEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointsResult> {
    return pulumi.output(args).apply((a: any) => getEndpoints(a, opts))
}

/**
 * A collection of arguments for invoking getEndpoints.
 */
export interface GetEndpointsOutputArgs {
    /**
     * PolarDB cluster ID.
     */
    dbClusterId: pulumi.Input<string>;
    /**
     * endpoint of the cluster.
     */
    dbEndpointId?: pulumi.Input<string>;
}
