// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * The `alicloud.polardb.getDatabases` data source provides a collection of PolarDB cluster database available in Alibaba Cloud account.
 * Filters support regular expression for the database name, searches by clusterId.
 *
 * > **NOTE:** Available in v1.70.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const polardbClustersDs = alicloud.polardb.getClusters({
 *     descriptionRegex: "pc-\\w+",
 *     status: "Running",
 * });
 * const default = polardbClustersDs.then(polardbClustersDs => alicloud.polardb.getDatabases({
 *     dbClusterId: polardbClustersDs.clusters?[0]?.id,
 * }));
 * export const database = _default.then(_default => _default.databases?[0]?.dbName);
 * ```
 */
export function getDatabases(args: GetDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabasesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:polardb/getDatabases:getDatabases", {
        "dbClusterId": args.dbClusterId,
        "nameRegex": args.nameRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabases.
 */
export interface GetDatabasesArgs {
    /**
     * The polarDB cluster ID.
     */
    dbClusterId: string;
    /**
     * A regex string to filter results by database name.
     */
    nameRegex?: string;
}

/**
 * A collection of values returned by getDatabases.
 */
export interface GetDatabasesResult {
    /**
     * A list of PolarDB cluster databases. Each element contains the following attributes:
     */
    readonly databases: outputs.polardb.GetDatabasesDatabase[];
    readonly dbClusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    /**
     * database name of the cluster.
     */
    readonly names: string[];
}

export function getDatabasesOutput(args: GetDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabasesResult> {
    return pulumi.output(args).apply(a => getDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getDatabases.
 */
export interface GetDatabasesOutputArgs {
    /**
     * The polarDB cluster ID.
     */
    dbClusterId: pulumi.Input<string>;
    /**
     * A regex string to filter results by database name.
     */
    nameRegex?: pulumi.Input<string>;
}
