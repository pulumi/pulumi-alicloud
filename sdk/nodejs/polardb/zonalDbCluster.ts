// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an PolarDB zonal cluster resource. An PolarDB zonal cluster is an isolated database
 * environment in the cloud. An PolarDB zonal cluster can contain multiple user-created
 * databases.
 *
 * > **NOTE:** Available since v1.66.0.
 *
 * ## Example Usage
 *
 * Create a PolarDB MySQL zonal cluster
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * // The advanced configuration for all nodes in the cluster except for the RW node, including db_node_class, hot_replica_mode, and imci_switch properties.
 * const dbClusterNodesConfigs = config.getObject<Record<string, {dbNodeClass?: string, dbNodeRole?: string, hotReplicaMode?: string, imciSwitch?: string}>>("dbClusterNodesConfigs") || {
 *     db_node_1: {
 *         dbNodeClass: "polar.mysql.x4.medium.c",
 *         dbNodeRole: "Writer",
 *         hotReplicaMode: null,
 *         imciSwitch: null,
 *     },
 *     db_node_2: {
 *         dbNodeClass: "polar.mysql.x4.medium.c",
 *         dbNodeRole: "Reader",
 *         hotReplicaMode: null,
 *         imciSwitch: null,
 *     },
 * };
 * const _default = new alicloud.ens.Network("default", {
 *     networkName: "terraform-example",
 *     description: "LoadBalancerNetworkDescription_test",
 *     cidrBlock: "192.168.2.0/24",
 *     ensRegionId: "tr-Istanbul-1",
 * });
 * const defaultVswitch = new alicloud.ens.Vswitch("default", {
 *     description: "LoadBalancerVSwitchDescription_test",
 *     cidrBlock: "192.168.2.0/24",
 *     vswitchName: "terraform-example",
 *     ensRegionId: "tr-Istanbul-1",
 *     networkId: _default.id,
 * });
 * const defaultZonalDbCluster = new alicloud.polardb.ZonalDbCluster("default", {
 *     dbNodeClass: "polar.mysql.x4.medium.c",
 *     description: "terraform-example",
 *     ensRegionId: "tr-Istanbul-1",
 *     vpcId: _default.id,
 *     vswitchId: defaultVswitch.id,
 *     dbClusterNodesConfigs: Object.entries(dbClusterNodesConfigs).reduce((__obj, [node, config]) => ({ ...__obj, [node]: JSON.stringify(Object.entries(config).filter(([k, v]) => v != null).reduce((__obj, [k, v]) => ({ ...__obj, [k]: v }))) })),
 * });
 * ```
 *
 * ## Import
 *
 * PolarDB zonal cluster can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:polardb/zonalDbCluster:ZonalDbCluster example pc-abc12345678
 * ```
 */
export class ZonalDbCluster extends pulumi.CustomResource {
    /**
     * Get an existing ZonalDbCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZonalDbClusterState, opts?: pulumi.CustomResourceOptions): ZonalDbCluster {
        return new ZonalDbCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:polardb/zonalDbCluster:ZonalDbCluster';

    /**
     * Returns true if the given object is an instance of ZonalDbCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZonalDbCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZonalDbCluster.__pulumiType;
    }

    /**
     * Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     */
    declare public readonly autoRenewPeriod: pulumi.Output<number | undefined>;
    /**
     * PolarDB zonal cluster latest version.
     */
    declare public /*out*/ readonly clusterLatestVersion: pulumi.Output<string>;
    /**
     * current DB Cluster revision Version.
     */
    declare public readonly clusterVersion: pulumi.Output<string>;
    /**
     * PolarDB zonal cluster creation time.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The edition of the PolarDB service. Valid values are `SENormal`.
     */
    declare public readonly creationCategory: pulumi.Output<string>;
    /**
     * Cache of the relationship between node key and node ID for PolarDB zonal Cluster
     */
    declare public /*out*/ readonly dbClusterNodesAttributes: pulumi.Output<{[key: string]: string}>;
    /**
     * Map of node needs to be created after DB cluster was launched.
     */
    declare public readonly dbClusterNodesConfigs: pulumi.Output<{[key: string]: string}>;
    /**
     * Cache of node ID for PolarDB zonal Cluster
     */
    declare public /*out*/ readonly dbClusterNodesIds: pulumi.Output<{[key: string]: string}>;
    /**
     * Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
     */
    declare public readonly dbMinorVersion: pulumi.Output<string | undefined>;
    /**
     * The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
     */
    declare public readonly dbNodeClass: pulumi.Output<string>;
    /**
     * Database type. Value options: MySQL, Oracle, PostgreSQL.
     */
    declare public readonly dbType: pulumi.Output<string | undefined>;
    /**
     * Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
     */
    declare public readonly dbVersion: pulumi.Output<string | undefined>;
    /**
     * The description of cluster.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The Zone to launch the DB cluster.
     */
    declare public readonly ensRegionId: pulumi.Output<string>;
    /**
     * Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     */
    declare public readonly payType: pulumi.Output<string | undefined>;
    /**
     * PolarDB zonal cluster region
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     */
    declare public readonly renewalStatus: pulumi.Output<string | undefined>;
    /**
     * The billing method of the storage. Valid values `Prepaid`.
     */
    declare public /*out*/ readonly storagePayType: pulumi.Output<string>;
    /**
     * Storage space charged by space (monthly package). Unit: GB.
     * > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
     */
    declare public readonly storageSpace: pulumi.Output<number | undefined>;
    /**
     * The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
     */
    declare public readonly storageType: pulumi.Output<string | undefined>;
    /**
     * The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
     */
    declare public readonly targetMinorVersion: pulumi.Output<string | undefined>;
    /**
     * The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
     * > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
     */
    declare public readonly usedTime: pulumi.Output<number | undefined>;
    /**
     * The id of the ENS VPC.
     */
    declare public readonly vpcId: pulumi.Output<string>;
    /**
     * The ENS virtual switch ID to launch DB instances in one VPC.
     */
    declare public readonly vswitchId: pulumi.Output<string>;

    /**
     * Create a ZonalDbCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZonalDbClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZonalDbClusterArgs | ZonalDbClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZonalDbClusterState | undefined;
            resourceInputs["autoRenewPeriod"] = state?.autoRenewPeriod;
            resourceInputs["clusterLatestVersion"] = state?.clusterLatestVersion;
            resourceInputs["clusterVersion"] = state?.clusterVersion;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["creationCategory"] = state?.creationCategory;
            resourceInputs["dbClusterNodesAttributes"] = state?.dbClusterNodesAttributes;
            resourceInputs["dbClusterNodesConfigs"] = state?.dbClusterNodesConfigs;
            resourceInputs["dbClusterNodesIds"] = state?.dbClusterNodesIds;
            resourceInputs["dbMinorVersion"] = state?.dbMinorVersion;
            resourceInputs["dbNodeClass"] = state?.dbNodeClass;
            resourceInputs["dbType"] = state?.dbType;
            resourceInputs["dbVersion"] = state?.dbVersion;
            resourceInputs["description"] = state?.description;
            resourceInputs["ensRegionId"] = state?.ensRegionId;
            resourceInputs["payType"] = state?.payType;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["renewalStatus"] = state?.renewalStatus;
            resourceInputs["storagePayType"] = state?.storagePayType;
            resourceInputs["storageSpace"] = state?.storageSpace;
            resourceInputs["storageType"] = state?.storageType;
            resourceInputs["targetMinorVersion"] = state?.targetMinorVersion;
            resourceInputs["usedTime"] = state?.usedTime;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vswitchId"] = state?.vswitchId;
        } else {
            const args = argsOrState as ZonalDbClusterArgs | undefined;
            if (args?.dbClusterNodesConfigs === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbClusterNodesConfigs'");
            }
            if (args?.dbNodeClass === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbNodeClass'");
            }
            if (args?.ensRegionId === undefined && !opts.urn) {
                throw new Error("Missing required property 'ensRegionId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["autoRenewPeriod"] = args?.autoRenewPeriod;
            resourceInputs["clusterVersion"] = args?.clusterVersion;
            resourceInputs["creationCategory"] = args?.creationCategory;
            resourceInputs["dbClusterNodesConfigs"] = args?.dbClusterNodesConfigs;
            resourceInputs["dbMinorVersion"] = args?.dbMinorVersion;
            resourceInputs["dbNodeClass"] = args?.dbNodeClass;
            resourceInputs["dbType"] = args?.dbType;
            resourceInputs["dbVersion"] = args?.dbVersion;
            resourceInputs["description"] = args?.description;
            resourceInputs["ensRegionId"] = args?.ensRegionId;
            resourceInputs["payType"] = args?.payType;
            resourceInputs["renewalStatus"] = args?.renewalStatus;
            resourceInputs["storageSpace"] = args?.storageSpace;
            resourceInputs["storageType"] = args?.storageType;
            resourceInputs["targetMinorVersion"] = args?.targetMinorVersion;
            resourceInputs["usedTime"] = args?.usedTime;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["clusterLatestVersion"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dbClusterNodesAttributes"] = undefined /*out*/;
            resourceInputs["dbClusterNodesIds"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["storagePayType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZonalDbCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZonalDbCluster resources.
 */
export interface ZonalDbClusterState {
    /**
     * Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * PolarDB zonal cluster latest version.
     */
    clusterLatestVersion?: pulumi.Input<string>;
    /**
     * current DB Cluster revision Version.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * PolarDB zonal cluster creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The edition of the PolarDB service. Valid values are `SENormal`.
     */
    creationCategory?: pulumi.Input<string>;
    /**
     * Cache of the relationship between node key and node ID for PolarDB zonal Cluster
     */
    dbClusterNodesAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Map of node needs to be created after DB cluster was launched.
     */
    dbClusterNodesConfigs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Cache of node ID for PolarDB zonal Cluster
     */
    dbClusterNodesIds?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
     */
    dbMinorVersion?: pulumi.Input<string>;
    /**
     * The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
     */
    dbNodeClass?: pulumi.Input<string>;
    /**
     * Database type. Value options: MySQL, Oracle, PostgreSQL.
     */
    dbType?: pulumi.Input<string>;
    /**
     * Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
     */
    dbVersion?: pulumi.Input<string>;
    /**
     * The description of cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The Zone to launch the DB cluster.
     */
    ensRegionId?: pulumi.Input<string>;
    /**
     * Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     */
    payType?: pulumi.Input<string>;
    /**
     * PolarDB zonal cluster region
     */
    regionId?: pulumi.Input<string>;
    /**
     * Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     */
    renewalStatus?: pulumi.Input<string>;
    /**
     * The billing method of the storage. Valid values `Prepaid`.
     */
    storagePayType?: pulumi.Input<string>;
    /**
     * Storage space charged by space (monthly package). Unit: GB.
     * > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
     */
    storageSpace?: pulumi.Input<number>;
    /**
     * The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
     */
    storageType?: pulumi.Input<string>;
    /**
     * The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
     */
    targetMinorVersion?: pulumi.Input<string>;
    /**
     * The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
     * > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
     */
    usedTime?: pulumi.Input<number>;
    /**
     * The id of the ENS VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ENS virtual switch ID to launch DB instances in one VPC.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZonalDbCluster resource.
 */
export interface ZonalDbClusterArgs {
    /**
     * Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * current DB Cluster revision Version.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * The edition of the PolarDB service. Valid values are `SENormal`.
     */
    creationCategory?: pulumi.Input<string>;
    /**
     * Map of node needs to be created after DB cluster was launched.
     */
    dbClusterNodesConfigs: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
     */
    dbMinorVersion?: pulumi.Input<string>;
    /**
     * The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
     */
    dbNodeClass: pulumi.Input<string>;
    /**
     * Database type. Value options: MySQL, Oracle, PostgreSQL.
     */
    dbType?: pulumi.Input<string>;
    /**
     * Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
     */
    dbVersion?: pulumi.Input<string>;
    /**
     * The description of cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The Zone to launch the DB cluster.
     */
    ensRegionId: pulumi.Input<string>;
    /**
     * Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     */
    payType?: pulumi.Input<string>;
    /**
     * Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     */
    renewalStatus?: pulumi.Input<string>;
    /**
     * Storage space charged by space (monthly package). Unit: GB.
     * > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
     */
    storageSpace?: pulumi.Input<number>;
    /**
     * The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
     */
    storageType?: pulumi.Input<string>;
    /**
     * The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
     */
    targetMinorVersion?: pulumi.Input<string>;
    /**
     * The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
     * > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
     */
    usedTime?: pulumi.Input<number>;
    /**
     * The id of the ENS VPC.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The ENS virtual switch ID to launch DB instances in one VPC.
     */
    vswitchId: pulumi.Input<string>;
}
