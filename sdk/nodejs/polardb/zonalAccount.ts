// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a PolarDB Zonal account resource and used to manage databases.
 *
 * > **NOTE:** Available since v1.262.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * // The advanced configuration for all nodes in the cluster except for the RW node, including db_node_class, hot_replica_mode, and imci_switch properties.
 * const dbClusterNodesConfigs = config.getObject<Record<string, {dbNodeClass?: string, dbNodeRole?: string, hotReplicaMode?: string, imciSwitch?: string}>>("dbClusterNodesConfigs") || {
 *     db_node_1: {
 *         dbNodeClass: "polar.mysql.x4.medium.c",
 *         dbNodeRole: "Writer",
 *         hotReplicaMode: null,
 *         imciSwitch: null,
 *     },
 * };
 * const _default = new alicloud.ens.Network("default", {
 *     networkName: "terraform-example",
 *     description: "LoadBalancerNetworkDescription_test",
 *     cidrBlock: "192.168.2.0/24",
 *     ensRegionId: "tr-Istanbul-1",
 * });
 * const defaultVswitch = new alicloud.ens.Vswitch("default", {
 *     description: "LoadBalancerVSwitchDescription_test",
 *     cidrBlock: "192.168.2.0/24",
 *     vswitchName: "terraform-example",
 *     ensRegionId: "tr-Istanbul-1",
 *     networkId: _default.id,
 * });
 * const defaultZonalDbCluster = new alicloud.polardb.ZonalDbCluster("default", {
 *     dbNodeClass: "polar.mysql.x4.medium.c",
 *     description: "terraform-example",
 *     ensRegionId: "tr-Istanbul-1",
 *     vpcId: _default.id,
 *     vswitchId: defaultVswitch.id,
 *     dbClusterNodesConfigs: Object.entries(dbClusterNodesConfigs).reduce((__obj, [node, config]) => ({ ...__obj, [node]: JSON.stringify(Object.entries(config).filter(([k, v]) => v != null).reduce((__obj, [k, v]) => ({ ...__obj, [k]: v }))) })),
 * });
 * const defaultZonalAccount = new alicloud.polardb.ZonalAccount("default", {
 *     dbClusterId: defaultZonalDbCluster.id,
 *     accountName: "terraform_example",
 *     accountPassword: "Example1234",
 * });
 * ```
 *
 * ## Import
 *
 * PolarDB Zonal account can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:polardb/zonalAccount:ZonalAccount example "pc-12345:tf_account"
 * ```
 */
export class ZonalAccount extends pulumi.CustomResource {
    /**
     * Get an existing ZonalAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZonalAccountState, opts?: pulumi.CustomResourceOptions): ZonalAccount {
        return new ZonalAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:polardb/zonalAccount:ZonalAccount';

    /**
     * Returns true if the given object is an instance of ZonalAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZonalAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZonalAccount.__pulumiType;
    }

    /**
     * Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    declare public readonly accountDescription: pulumi.Output<string | undefined>;
    /**
     * Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
     */
    declare public readonly accountName: pulumi.Output<string>;
    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
     */
    declare public readonly accountPassword: pulumi.Output<string>;
    /**
     * Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
     */
    declare public readonly accountType: pulumi.Output<string>;
    /**
     * The Id of cluster in which account belongs.
     */
    declare public readonly dbClusterId: pulumi.Output<string>;

    /**
     * Create a ZonalAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZonalAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZonalAccountArgs | ZonalAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZonalAccountState | undefined;
            resourceInputs["accountDescription"] = state?.accountDescription;
            resourceInputs["accountName"] = state?.accountName;
            resourceInputs["accountPassword"] = state?.accountPassword;
            resourceInputs["accountType"] = state?.accountType;
            resourceInputs["dbClusterId"] = state?.dbClusterId;
        } else {
            const args = argsOrState as ZonalAccountArgs | undefined;
            if (args?.accountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if (args?.dbClusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbClusterId'");
            }
            resourceInputs["accountDescription"] = args?.accountDescription;
            resourceInputs["accountName"] = args?.accountName;
            resourceInputs["accountPassword"] = args?.accountPassword ? pulumi.secret(args.accountPassword) : undefined;
            resourceInputs["accountType"] = args?.accountType;
            resourceInputs["dbClusterId"] = args?.dbClusterId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accountPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ZonalAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZonalAccount resources.
 */
export interface ZonalAccountState {
    /**
     * Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    accountDescription?: pulumi.Input<string>;
    /**
     * Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
     */
    accountType?: pulumi.Input<string>;
    /**
     * The Id of cluster in which account belongs.
     */
    dbClusterId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZonalAccount resource.
 */
export interface ZonalAccountArgs {
    /**
     * Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     */
    accountDescription?: pulumi.Input<string>;
    /**
     * Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
     */
    accountName: pulumi.Input<string>;
    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
     */
    accountType?: pulumi.Input<string>;
    /**
     * The Id of cluster in which account belongs.
     */
    dbClusterId: pulumi.Input<string>;
}
