// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The `alicloud.polardb.getAccounts` data source provides a collection of PolarDB cluster database account available in Alibaba Cloud account.
 * Filters support regular expression for the account name, searches by clusterId.
 *
 * > **NOTE:** Available since v1.70.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const this = alicloud.polardb.getNodeClasses({
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     category: "Normal",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _this.then(_this => _this.classes?.[0]?.zoneId),
 *     vswitchName: "terraform-example",
 * });
 * const cluster = new alicloud.polardb.Cluster("cluster", {
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     dbNodeCount: 2,
 *     dbNodeClass: _this.then(_this => _this.classes?.[0]?.supportedEngines?.[0]?.availableResources?.[0]?.dbNodeClass),
 *     vswitchId: defaultSwitch.id,
 * });
 * const polardbClustersDs = alicloud.polardb.getClustersOutput({
 *     descriptionRegex: cluster.description,
 *     status: "Running",
 * });
 * const accountAccount = new alicloud.polardb.Account("accountAccount", {
 *     dbClusterId: polardbClustersDs.apply(polardbClustersDs => polardbClustersDs.clusters?.[0]?.id),
 *     accountName: "tfnormal_01",
 *     accountPassword: "Test12345",
 *     accountDescription: "tf_account_description",
 *     accountType: "Normal",
 * });
 * const defaultAccounts = pulumi.all([polardbClustersDs, accountAccount.accountName]).apply(([polardbClustersDs, accountName]) => alicloud.polardb.getAccountsOutput({
 *     dbClusterId: polardbClustersDs.clusters?.[0]?.id,
 *     nameRegex: accountName,
 * }));
 * export const account = defaultAccounts.apply(defaultAccounts => defaultAccounts.accounts?.[0]?.accountName);
 * ```
 */
export function getAccounts(args: GetAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:polardb/getAccounts:getAccounts", {
        "dbClusterId": args.dbClusterId,
        "nameRegex": args.nameRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccounts.
 */
export interface GetAccountsArgs {
    /**
     * The polarDB cluster ID.
     */
    dbClusterId: string;
    /**
     * A regex string to filter results by account name.
     */
    nameRegex?: string;
}

/**
 * A collection of values returned by getAccounts.
 */
export interface GetAccountsResult {
    /**
     * A list of PolarDB cluster accounts. Each element contains the following attributes:
     */
    readonly accounts: outputs.polardb.GetAccountsAccount[];
    readonly dbClusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    /**
     * Account name of the cluster.
     */
    readonly names: string[];
}
/**
 * The `alicloud.polardb.getAccounts` data source provides a collection of PolarDB cluster database account available in Alibaba Cloud account.
 * Filters support regular expression for the account name, searches by clusterId.
 *
 * > **NOTE:** Available since v1.70.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const this = alicloud.polardb.getNodeClasses({
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     category: "Normal",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: _this.then(_this => _this.classes?.[0]?.zoneId),
 *     vswitchName: "terraform-example",
 * });
 * const cluster = new alicloud.polardb.Cluster("cluster", {
 *     dbType: "MySQL",
 *     dbVersion: "8.0",
 *     payType: "PostPaid",
 *     dbNodeCount: 2,
 *     dbNodeClass: _this.then(_this => _this.classes?.[0]?.supportedEngines?.[0]?.availableResources?.[0]?.dbNodeClass),
 *     vswitchId: defaultSwitch.id,
 * });
 * const polardbClustersDs = alicloud.polardb.getClustersOutput({
 *     descriptionRegex: cluster.description,
 *     status: "Running",
 * });
 * const accountAccount = new alicloud.polardb.Account("accountAccount", {
 *     dbClusterId: polardbClustersDs.apply(polardbClustersDs => polardbClustersDs.clusters?.[0]?.id),
 *     accountName: "tfnormal_01",
 *     accountPassword: "Test12345",
 *     accountDescription: "tf_account_description",
 *     accountType: "Normal",
 * });
 * const defaultAccounts = pulumi.all([polardbClustersDs, accountAccount.accountName]).apply(([polardbClustersDs, accountName]) => alicloud.polardb.getAccountsOutput({
 *     dbClusterId: polardbClustersDs.clusters?.[0]?.id,
 *     nameRegex: accountName,
 * }));
 * export const account = defaultAccounts.apply(defaultAccounts => defaultAccounts.accounts?.[0]?.accountName);
 * ```
 */
export function getAccountsOutput(args: GetAccountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountsResult> {
    return pulumi.output(args).apply((a: any) => getAccounts(a, opts))
}

/**
 * A collection of arguments for invoking getAccounts.
 */
export interface GetAccountsOutputArgs {
    /**
     * The polarDB cluster ID.
     */
    dbClusterId: pulumi.Input<string>;
    /**
     * A regex string to filter results by account name.
     */
    nameRegex?: pulumi.Input<string>;
}
