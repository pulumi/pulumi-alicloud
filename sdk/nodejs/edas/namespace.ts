// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a EDAS Namespace resource.
 *
 * For information about EDAS Namespace and how to use it, see [What is Namespace](https://www.alibabacloud.com/help/en/enterprise-distributed-application-service/latest/insertorupdateregion).
 *
 * > **NOTE:** Available since v1.173.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultRegions = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultNamespace = new alicloud.edas.Namespace("defaultNamespace", {
 *     debugEnable: false,
 *     description: name,
 *     namespaceLogicalId: defaultRegions.then(defaultRegions => `${defaultRegions.regions?.[0]?.id}:example`),
 *     namespaceName: name,
 * });
 * ```
 *
 * ## Import
 *
 * EDAS Namespace can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:edas/namespace:Namespace example <id>
 * ```
 */
export class Namespace extends pulumi.CustomResource {
    /**
     * Get an existing Namespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceState, opts?: pulumi.CustomResourceOptions): Namespace {
        return new Namespace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:edas/namespace:Namespace';

    /**
     * Returns true if the given object is an instance of Namespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Namespace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Namespace.__pulumiType;
    }

    /**
     * Specifies whether to enable remote debugging.
     */
    public readonly debugEnable!: pulumi.Output<boolean>;
    /**
     * The description of the namespace, The description can be up to `128` characters in length.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the namespace.
     * - The ID of a custom namespace is in the `region ID:namespace identifier` format. An example is `cn-beijing:tdy218`.
     * - The ID of the default namespace is in the `region ID` format. An example is cn-beijing.
     */
    public readonly namespaceLogicalId!: pulumi.Output<string>;
    /**
     * The name of the namespace, The name can be up to `63` characters in length.
     */
    public readonly namespaceName!: pulumi.Output<string>;

    /**
     * Create a Namespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceArgs | NamespaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceState | undefined;
            resourceInputs["debugEnable"] = state ? state.debugEnable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["namespaceLogicalId"] = state ? state.namespaceLogicalId : undefined;
            resourceInputs["namespaceName"] = state ? state.namespaceName : undefined;
        } else {
            const args = argsOrState as NamespaceArgs | undefined;
            if ((!args || args.namespaceLogicalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceLogicalId'");
            }
            if ((!args || args.namespaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            resourceInputs["debugEnable"] = args ? args.debugEnable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["namespaceLogicalId"] = args ? args.namespaceLogicalId : undefined;
            resourceInputs["namespaceName"] = args ? args.namespaceName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Namespace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Namespace resources.
 */
export interface NamespaceState {
    /**
     * Specifies whether to enable remote debugging.
     */
    debugEnable?: pulumi.Input<boolean>;
    /**
     * The description of the namespace, The description can be up to `128` characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the namespace.
     * - The ID of a custom namespace is in the `region ID:namespace identifier` format. An example is `cn-beijing:tdy218`.
     * - The ID of the default namespace is in the `region ID` format. An example is cn-beijing.
     */
    namespaceLogicalId?: pulumi.Input<string>;
    /**
     * The name of the namespace, The name can be up to `63` characters in length.
     */
    namespaceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Namespace resource.
 */
export interface NamespaceArgs {
    /**
     * Specifies whether to enable remote debugging.
     */
    debugEnable?: pulumi.Input<boolean>;
    /**
     * The description of the namespace, The description can be up to `128` characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the namespace.
     * - The ID of a custom namespace is in the `region ID:namespace identifier` format. An example is `cn-beijing:tdy218`.
     * - The ID of the default namespace is in the `region ID` format. An example is cn-beijing.
     */
    namespaceLogicalId: pulumi.Input<string>;
    /**
     * The name of the namespace, The name can be up to `63` characters in length.
     */
    namespaceName: pulumi.Input<string>;
}
