// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides a list of EDAS deploy groups in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available in 1.82.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const groups = alicloud.edas.getDeployGroups({
 *     appId: "xxx",
 *     ids: ["xxx"],
 *     outputFile: "groups.txt",
 * });
 * export const firstGroupName = groups.then(groups => groups.groups?[0]?.groupName);
 * ```
 */
export function getDeployGroups(args: GetDeployGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetDeployGroupsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:edas/getDeployGroups:getDeployGroups", {
        "appId": args.appId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeployGroups.
 */
export interface GetDeployGroupsArgs {
    /**
     * ID of the EDAS application.
     */
    appId: string;
    /**
     * A regex string to filter results by the deploy group name.
     */
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getDeployGroups.
 */
export interface GetDeployGroupsResult {
    /**
     * The ID of the application that you want to deploy.
     */
    readonly appId: string;
    /**
     * A list of consumer group ids.
     */
    readonly groups: outputs.edas.GetDeployGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    /**
     * A list of deploy group names.
     */
    readonly names: string[];
    readonly outputFile?: string;
}

export function getDeployGroupsOutput(args: GetDeployGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeployGroupsResult> {
    return pulumi.output(args).apply(a => getDeployGroups(a, opts))
}

/**
 * A collection of arguments for invoking getDeployGroups.
 */
export interface GetDeployGroupsOutputArgs {
    /**
     * ID of the EDAS application.
     */
    appId: pulumi.Input<string>;
    /**
     * A regex string to filter results by the deploy group name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
