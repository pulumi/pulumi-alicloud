// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Binds SLB to an EDAS application.
 *
 * > **NOTE:** Available since v1.82.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultRegions = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultImages = alicloud.ecs.getImages({
 *     nameRegex: "^ubuntu_[0-9]+_[0-9]+_x64*",
 *     owners: "system",
 * });
 * const defaultInstanceTypes = defaultZones.then(defaultZones => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: defaultZones.zones?.[0]?.id,
 *     cpuCoreCount: 1,
 *     memorySize: 2,
 * }));
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {vpcId: defaultNetwork.id});
 * const defaultInstance = new alicloud.ecs.Instance("defaultInstance", {
 *     availabilityZone: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     instanceName: name,
 *     imageId: defaultImages.then(defaultImages => defaultImages.images?.[0]?.id),
 *     instanceType: defaultInstanceTypes.then(defaultInstanceTypes => defaultInstanceTypes.instanceTypes?.[0]?.id),
 *     securityGroups: [defaultSecurityGroup.id],
 *     vswitchId: defaultSwitch.id,
 *     internetMaxBandwidthOut: 10,
 *     internetChargeType: "PayByTraffic",
 *     instanceChargeType: "PostPaid",
 *     systemDiskCategory: "cloud_efficiency",
 * });
 * const defaultCluster = new alicloud.edas.Cluster("defaultCluster", {
 *     clusterName: name,
 *     clusterType: 2,
 *     networkMode: 2,
 *     logicalRegionId: defaultRegions.then(defaultRegions => defaultRegions.regions?.[0]?.id),
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultInstanceClusterAttachment = new alicloud.edas.InstanceClusterAttachment("defaultInstanceClusterAttachment", {
 *     clusterId: defaultCluster.id,
 *     instanceIds: [defaultInstance.id],
 * });
 * const defaultApplication = new alicloud.edas.Application("defaultApplication", {
 *     applicationName: name,
 *     clusterId: defaultCluster.id,
 *     packageType: "JAR",
 * });
 * const defaultApplicationLoadBalancer = new alicloud.slb.ApplicationLoadBalancer("defaultApplicationLoadBalancer", {
 *     loadBalancerName: name,
 *     vswitchId: defaultSwitch.id,
 *     loadBalancerSpec: "slb.s2.small",
 *     addressType: "intranet",
 * });
 * const defaultSlbAttachment = new alicloud.edas.SlbAttachment("defaultSlbAttachment", {
 *     appId: defaultApplication.id,
 *     slbId: defaultApplicationLoadBalancer.id,
 *     slbIp: defaultApplicationLoadBalancer.address,
 *     type: defaultApplicationLoadBalancer.addressType,
 * });
 * ```
 */
export class SlbAttachment extends pulumi.CustomResource {
    /**
     * Get an existing SlbAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbAttachmentState, opts?: pulumi.CustomResourceOptions): SlbAttachment {
        return new SlbAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:edas/slbAttachment:SlbAttachment';

    /**
     * Returns true if the given object is an instance of SlbAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbAttachment.__pulumiType;
    }

    /**
     * The ID of the application to which you want to bind an SLB instance.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The listening port for the bound SLB instance.
     */
    public readonly listenerPort!: pulumi.Output<number | undefined>;
    /**
     * The ID of the SLB instance that is going to be bound.
     */
    public readonly slbId!: pulumi.Output<string>;
    /**
     * The IP address that is allocated to the bound SLB instance.
     */
    public readonly slbIp!: pulumi.Output<string>;
    /**
     * Running Status of SLB instance. Inactive：The instance is stopped, and listener will not monitor and forward traffic. Active：The instance is running. After the instance is created, the default state is active. Locked：The instance is locked, the instance has been owed or locked by Alibaba Cloud. Expired: The instance has expired.
     */
    public /*out*/ readonly slbStatus!: pulumi.Output<string>;
    /**
     * The type of the bound SLB instance.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The ID of the virtual server (VServer) group associated with the intranet SLB instance.
     */
    public readonly vserverGroupId!: pulumi.Output<string | undefined>;
    /**
     * VPC related vswitch ID.
     */
    public /*out*/ readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a SlbAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlbAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbAttachmentArgs | SlbAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbAttachmentState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["listenerPort"] = state ? state.listenerPort : undefined;
            resourceInputs["slbId"] = state ? state.slbId : undefined;
            resourceInputs["slbIp"] = state ? state.slbIp : undefined;
            resourceInputs["slbStatus"] = state ? state.slbStatus : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vserverGroupId"] = state ? state.vserverGroupId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as SlbAttachmentArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.slbId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slbId'");
            }
            if ((!args || args.slbIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slbIp'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["listenerPort"] = args ? args.listenerPort : undefined;
            resourceInputs["slbId"] = args ? args.slbId : undefined;
            resourceInputs["slbIp"] = args ? args.slbIp : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vserverGroupId"] = args ? args.vserverGroupId : undefined;
            resourceInputs["slbStatus"] = undefined /*out*/;
            resourceInputs["vswitchId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SlbAttachment resources.
 */
export interface SlbAttachmentState {
    /**
     * The ID of the application to which you want to bind an SLB instance.
     */
    appId?: pulumi.Input<string>;
    /**
     * The listening port for the bound SLB instance.
     */
    listenerPort?: pulumi.Input<number>;
    /**
     * The ID of the SLB instance that is going to be bound.
     */
    slbId?: pulumi.Input<string>;
    /**
     * The IP address that is allocated to the bound SLB instance.
     */
    slbIp?: pulumi.Input<string>;
    /**
     * Running Status of SLB instance. Inactive：The instance is stopped, and listener will not monitor and forward traffic. Active：The instance is running. After the instance is created, the default state is active. Locked：The instance is locked, the instance has been owed or locked by Alibaba Cloud. Expired: The instance has expired.
     */
    slbStatus?: pulumi.Input<string>;
    /**
     * The type of the bound SLB instance.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the virtual server (VServer) group associated with the intranet SLB instance.
     */
    vserverGroupId?: pulumi.Input<string>;
    /**
     * VPC related vswitch ID.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbAttachment resource.
 */
export interface SlbAttachmentArgs {
    /**
     * The ID of the application to which you want to bind an SLB instance.
     */
    appId: pulumi.Input<string>;
    /**
     * The listening port for the bound SLB instance.
     */
    listenerPort?: pulumi.Input<number>;
    /**
     * The ID of the SLB instance that is going to be bound.
     */
    slbId: pulumi.Input<string>;
    /**
     * The IP address that is allocated to the bound SLB instance.
     */
    slbIp: pulumi.Input<string>;
    /**
     * The type of the bound SLB instance.
     */
    type: pulumi.Input<string>;
    /**
     * The ID of the virtual server (VServer) group associated with the intranet SLB instance.
     */
    vserverGroupId?: pulumi.Input<string>;
}
