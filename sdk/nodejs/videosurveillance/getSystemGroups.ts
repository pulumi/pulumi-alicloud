// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Video Surveillance System Groups of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.135.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultSystemGroup = new alicloud.videosurveillance.SystemGroup("defaultSystemGroup", {
 *     groupName: "groupname",
 *     inProtocol: "rtmp",
 *     outProtocol: "flv",
 *     playDomain: "your_plan_domain",
 *     pushDomain: "your_push_domain",
 * });
 * const defaultSystemGroups = alicloud.videosurveillance.getSystemGroupsOutput({
 *     ids: [defaultSystemGroup.id],
 * });
 * export const vsGroup = defaultSystemGroups.apply(defaultSystemGroups => defaultSystemGroups.ids?[0]);
 * ```
 */
export function getSystemGroups(args?: GetSystemGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemGroupsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:videosurveillance/getSystemGroups:getSystemGroups", {
        "ids": args.ids,
        "inProtocol": args.inProtocol,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemGroups.
 */
export interface GetSystemGroupsArgs {
    /**
     * A list of Group IDs.
     */
    ids?: string[];
    /**
     * The use of the access protocol support `gb28181`,`rtmp`(Real Time Messaging Protocol).
     */
    inProtocol?: string;
    /**
     * The name.
     */
    name?: string;
    /**
     * A regex string to filter results by Group name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The status. Valid values: `on`,`off`.
     */
    status?: string;
}

/**
 * A collection of values returned by getSystemGroups.
 */
export interface GetSystemGroupsResult {
    readonly groups: outputs.videosurveillance.GetSystemGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly inProtocol?: string;
    readonly name?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly status?: string;
}

export function getSystemGroupsOutput(args?: GetSystemGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemGroupsResult> {
    return pulumi.output(args).apply(a => getSystemGroups(a, opts))
}

/**
 * A collection of arguments for invoking getSystemGroups.
 */
export interface GetSystemGroupsOutputArgs {
    /**
     * A list of Group IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The use of the access protocol support `gb28181`,`rtmp`(Real Time Messaging Protocol).
     */
    inProtocol?: pulumi.Input<string>;
    /**
     * The name.
     */
    name?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Group name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The status. Valid values: `on`,`off`.
     */
    status?: pulumi.Input<string>;
}
