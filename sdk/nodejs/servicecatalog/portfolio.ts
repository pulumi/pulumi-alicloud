// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Service Catalog Portfolio resource.
 *
 * For information about Service Catalog Portfolio and how to use it, see [What is Portfolio](https://www.alibabacloud.com/help/en/servicecatalog/latest/api-doc-servicecatalog-2021-09-01-api-doc-createportfolio).
 *
 * > **NOTE:** Available since v1.204.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const _default = new alicloud.servicecatalog.Portfolio("default", {
 *     portfolioName: name,
 *     providerName: name,
 * });
 * ```
 *
 * ## Import
 *
 * Service Catalog Portfolio can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:servicecatalog/portfolio:Portfolio example <id>
 * ```
 */
export class Portfolio extends pulumi.CustomResource {
    /**
     * Get an existing Portfolio resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PortfolioState, opts?: pulumi.CustomResourceOptions): Portfolio {
        return new Portfolio(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:servicecatalog/portfolio:Portfolio';

    /**
     * Returns true if the given object is an instance of Portfolio.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Portfolio {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Portfolio.__pulumiType;
    }

    /**
     * The creation time of the portfolio.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the portfolio. The value must be 1 to 128 characters in length.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ARN of the portfolio.
     */
    public /*out*/ readonly portfolioArn!: pulumi.Output<string>;
    /**
     * The name of the portfolio. The value must be 1 to 128 characters in length.
     */
    public readonly portfolioName!: pulumi.Output<string>;
    /**
     * The provider name of the portfolio. The value must be 1 to 128 characters in length.
     */
    public readonly providerName!: pulumi.Output<string>;

    /**
     * Create a Portfolio resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PortfolioArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PortfolioArgs | PortfolioState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PortfolioState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["portfolioArn"] = state ? state.portfolioArn : undefined;
            resourceInputs["portfolioName"] = state ? state.portfolioName : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
        } else {
            const args = argsOrState as PortfolioArgs | undefined;
            if ((!args || args.portfolioName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portfolioName'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["portfolioName"] = args ? args.portfolioName : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["portfolioArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Portfolio.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Portfolio resources.
 */
export interface PortfolioState {
    /**
     * The creation time of the portfolio.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the portfolio. The value must be 1 to 128 characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The ARN of the portfolio.
     */
    portfolioArn?: pulumi.Input<string>;
    /**
     * The name of the portfolio. The value must be 1 to 128 characters in length.
     */
    portfolioName?: pulumi.Input<string>;
    /**
     * The provider name of the portfolio. The value must be 1 to 128 characters in length.
     */
    providerName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Portfolio resource.
 */
export interface PortfolioArgs {
    /**
     * The description of the portfolio. The value must be 1 to 128 characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the portfolio. The value must be 1 to 128 characters in length.
     */
    portfolioName: pulumi.Input<string>;
    /**
     * The provider name of the portfolio. The value must be 1 to 128 characters in length.
     */
    providerName: pulumi.Input<string>;
}
