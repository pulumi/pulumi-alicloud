// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Service Catalog Product Version resource.
 *
 * There can be one or more versions of the product.
 *
 * For information about Service Catalog Product Version and how to use it, see [What is Product Version](https://www.alibabacloud.com/help/en/service-catalog/developer-reference/api-servicecatalog-2021-09-01-createproductversion).
 *
 * > **NOTE:** Available since v1.230.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultmaeTcE = new alicloud.servicecatalog.Product("defaultmaeTcE", {
 *     providerName: name,
 *     productName: name,
 *     productType: "Ros",
 * });
 * const _default = new alicloud.servicecatalog.ProductVersion("default", {
 *     guidance: "Default",
 *     templateUrl: "oss://servicecatalog-cn-hangzhou/1466115886172051/terraform/template/tpl-bp1x4v3r44u7u7/template.json",
 *     active: true,
 *     description: "产品版本测试",
 *     productVersionName: name,
 *     productId: defaultmaeTcE.id,
 *     templateType: "RosTerraformTemplate",
 * });
 * ```
 *
 * ## Import
 *
 * Service Catalog Product Version can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:servicecatalog/productVersion:ProductVersion example <id>
 * ```
 */
export class ProductVersion extends pulumi.CustomResource {
    /**
     * Get an existing ProductVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProductVersionState, opts?: pulumi.CustomResourceOptions): ProductVersion {
        return new ProductVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:servicecatalog/productVersion:ProductVersion';

    /**
     * Returns true if the given object is an instance of ProductVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProductVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProductVersion.__pulumiType;
    }

    /**
     * Whether the version is activated
     */
    declare public readonly active: pulumi.Output<boolean | undefined>;
    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Version description
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Administrator guidance
     */
    declare public readonly guidance: pulumi.Output<string | undefined>;
    /**
     * Product ID
     */
    declare public readonly productId: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    declare public readonly productVersionName: pulumi.Output<string>;
    /**
     * Template Type
     */
    declare public readonly templateType: pulumi.Output<string>;
    /**
     * Template URL
     */
    declare public readonly templateUrl: pulumi.Output<string>;

    /**
     * Create a ProductVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProductVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProductVersionArgs | ProductVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProductVersionState | undefined;
            resourceInputs["active"] = state?.active;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["guidance"] = state?.guidance;
            resourceInputs["productId"] = state?.productId;
            resourceInputs["productVersionName"] = state?.productVersionName;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["templateUrl"] = state?.templateUrl;
        } else {
            const args = argsOrState as ProductVersionArgs | undefined;
            if (args?.productId === undefined && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            if (args?.productVersionName === undefined && !opts.urn) {
                throw new Error("Missing required property 'productVersionName'");
            }
            if (args?.templateType === undefined && !opts.urn) {
                throw new Error("Missing required property 'templateType'");
            }
            if (args?.templateUrl === undefined && !opts.urn) {
                throw new Error("Missing required property 'templateUrl'");
            }
            resourceInputs["active"] = args?.active;
            resourceInputs["description"] = args?.description;
            resourceInputs["guidance"] = args?.guidance;
            resourceInputs["productId"] = args?.productId;
            resourceInputs["productVersionName"] = args?.productVersionName;
            resourceInputs["templateType"] = args?.templateType;
            resourceInputs["templateUrl"] = args?.templateUrl;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProductVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProductVersion resources.
 */
export interface ProductVersionState {
    /**
     * Whether the version is activated
     */
    active?: pulumi.Input<boolean>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * Version description
     */
    description?: pulumi.Input<string>;
    /**
     * Administrator guidance
     */
    guidance?: pulumi.Input<string>;
    /**
     * Product ID
     */
    productId?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    productVersionName?: pulumi.Input<string>;
    /**
     * Template Type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Template URL
     */
    templateUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProductVersion resource.
 */
export interface ProductVersionArgs {
    /**
     * Whether the version is activated
     */
    active?: pulumi.Input<boolean>;
    /**
     * Version description
     */
    description?: pulumi.Input<string>;
    /**
     * Administrator guidance
     */
    guidance?: pulumi.Input<string>;
    /**
     * Product ID
     */
    productId: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    productVersionName: pulumi.Input<string>;
    /**
     * Template Type
     */
    templateType: pulumi.Input<string>;
    /**
     * Template URL
     */
    templateUrl: pulumi.Input<string>;
}
