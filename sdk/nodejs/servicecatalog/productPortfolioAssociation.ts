// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Service Catalog Product Portfolio Association resource.
 *
 * Product portfolio association.
 *
 * For information about Service Catalog Product Portfolio Association and how to use it, see [What is Product Portfolio Association](https://www.alibabacloud.com/help/en/service-catalog/developer-reference/api-servicecatalog-2021-09-01-associateproductwithportfolio).
 *
 * > **NOTE:** Available since v1.230.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const default0yAgJ8 = new alicloud.servicecatalog.Portfolio("default0yAgJ8", {
 *     providerName: name,
 *     description: "desc",
 *     portfolioName: name,
 * });
 * const defaultRetBJw = new alicloud.servicecatalog.Product("defaultRetBJw", {
 *     providerName: name,
 *     productName: std.format({
 *         input: "%s1",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 *     productType: "Ros",
 * });
 * const _default = new alicloud.servicecatalog.ProductPortfolioAssociation("default", {
 *     portfolioId: default0yAgJ8.id,
 *     productId: defaultRetBJw.id,
 * });
 * ```
 *
 * ## Import
 *
 * Service Catalog Product Portfolio Association can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:servicecatalog/productPortfolioAssociation:ProductPortfolioAssociation example <product_id>:<portfolio_id>
 * ```
 */
export class ProductPortfolioAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ProductPortfolioAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProductPortfolioAssociationState, opts?: pulumi.CustomResourceOptions): ProductPortfolioAssociation {
        return new ProductPortfolioAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:servicecatalog/productPortfolioAssociation:ProductPortfolioAssociation';

    /**
     * Returns true if the given object is an instance of ProductPortfolioAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProductPortfolioAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProductPortfolioAssociation.__pulumiType;
    }

    /**
     * Product Portfolio ID
     */
    public readonly portfolioId!: pulumi.Output<string>;
    /**
     * Product ID
     */
    public readonly productId!: pulumi.Output<string>;

    /**
     * Create a ProductPortfolioAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProductPortfolioAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProductPortfolioAssociationArgs | ProductPortfolioAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProductPortfolioAssociationState | undefined;
            resourceInputs["portfolioId"] = state ? state.portfolioId : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
        } else {
            const args = argsOrState as ProductPortfolioAssociationArgs | undefined;
            if ((!args || args.portfolioId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portfolioId'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            resourceInputs["portfolioId"] = args ? args.portfolioId : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProductPortfolioAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProductPortfolioAssociation resources.
 */
export interface ProductPortfolioAssociationState {
    /**
     * Product Portfolio ID
     */
    portfolioId?: pulumi.Input<string>;
    /**
     * Product ID
     */
    productId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProductPortfolioAssociation resource.
 */
export interface ProductPortfolioAssociationArgs {
    /**
     * Product Portfolio ID
     */
    portfolioId: pulumi.Input<string>;
    /**
     * Product ID
     */
    productId: pulumi.Input<string>;
}
