// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Aligreen Callback resource.
 *
 * Detection Result Callback.
 *
 * For information about Aligreen Callback and how to use it, see [What is Callback](https://next.api.alibabacloud.com/document/Green/2017-08-23/CreateCallback).
 *
 * > **NOTE:** Available since v1.228.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const _default = new alicloud.aligreen.Callback("default", {
 *     callbackUrl: "https://www.aliyun.com",
 *     cryptType: 0,
 *     callbackName: name,
 *     callbackTypes: [
 *         "machineScan",
 *         "selfAudit",
 *         "example",
 *     ],
 *     callbackSuggestions: [
 *         "block",
 *         "review",
 *         "pass",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Aligreen Callback can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:aligreen/callback:Callback example <id>
 * ```
 */
export class Callback extends pulumi.CustomResource {
    /**
     * Get an existing Callback resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CallbackState, opts?: pulumi.CustomResourceOptions): Callback {
        return new Callback(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:aligreen/callback:Callback';

    /**
     * Returns true if the given object is an instance of Callback.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Callback {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Callback.__pulumiType;
    }

    /**
     * The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
     */
    public readonly callbackName!: pulumi.Output<string>;
    /**
     * List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
     */
    public readonly callbackSuggestions!: pulumi.Output<string[]>;
    /**
     * A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
     */
    public readonly callbackTypes!: pulumi.Output<string[]>;
    /**
     * The detection result will be called back to the url.
     */
    public readonly callbackUrl!: pulumi.Output<string>;
    /**
     * The creation time of the Callback.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
     */
    public readonly cryptType!: pulumi.Output<number | undefined>;

    /**
     * Create a Callback resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CallbackArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CallbackArgs | CallbackState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CallbackState | undefined;
            resourceInputs["callbackName"] = state ? state.callbackName : undefined;
            resourceInputs["callbackSuggestions"] = state ? state.callbackSuggestions : undefined;
            resourceInputs["callbackTypes"] = state ? state.callbackTypes : undefined;
            resourceInputs["callbackUrl"] = state ? state.callbackUrl : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["cryptType"] = state ? state.cryptType : undefined;
        } else {
            const args = argsOrState as CallbackArgs | undefined;
            if ((!args || args.callbackName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'callbackName'");
            }
            if ((!args || args.callbackSuggestions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'callbackSuggestions'");
            }
            if ((!args || args.callbackTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'callbackTypes'");
            }
            if ((!args || args.callbackUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'callbackUrl'");
            }
            resourceInputs["callbackName"] = args ? args.callbackName : undefined;
            resourceInputs["callbackSuggestions"] = args ? args.callbackSuggestions : undefined;
            resourceInputs["callbackTypes"] = args ? args.callbackTypes : undefined;
            resourceInputs["callbackUrl"] = args ? args.callbackUrl : undefined;
            resourceInputs["cryptType"] = args ? args.cryptType : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Callback.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Callback resources.
 */
export interface CallbackState {
    /**
     * The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
     */
    callbackName?: pulumi.Input<string>;
    /**
     * List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
     */
    callbackSuggestions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
     */
    callbackTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The detection result will be called back to the url.
     */
    callbackUrl?: pulumi.Input<string>;
    /**
     * The creation time of the Callback.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
     */
    cryptType?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Callback resource.
 */
export interface CallbackArgs {
    /**
     * The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
     */
    callbackName: pulumi.Input<string>;
    /**
     * List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
     */
    callbackSuggestions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
     */
    callbackTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The detection result will be called back to the url.
     */
    callbackUrl: pulumi.Input<string>;
    /**
     * The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
     */
    cryptType?: pulumi.Input<number>;
}
