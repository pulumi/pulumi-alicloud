// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Bastion Host User Attachment resource to add user to one user group.
 *
 * > **NOTE:** Available since v1.134.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitches = Promise.all([defaultNetworks, defaultZones]).then(([defaultNetworks, defaultZones]) => alicloud.vpc.getSwitches({
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: defaultNetworks.ids?.[0],
 *     zoneId: defaultZones.zones?.[0]?.id,
 * }));
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {vpcId: defaultNetworks.then(defaultNetworks => defaultNetworks.ids?.[0])});
 * const defaultInstance = new alicloud.bastionhost.Instance("defaultInstance", {
 *     description: name,
 *     licenseCode: "bhah_ent_50_asset",
 *     planCode: "cloudbastion",
 *     storage: "5",
 *     bandwidth: "5",
 *     period: 1,
 *     vswitchId: defaultSwitches.then(defaultSwitches => defaultSwitches.ids?.[0]),
 *     securityGroupIds: [defaultSecurityGroup.id],
 * });
 * const defaultUserGroup = new alicloud.bastionhost.UserGroup("defaultUserGroup", {
 *     instanceId: defaultInstance.id,
 *     userGroupName: name,
 * });
 * const localUser = new alicloud.bastionhost.User("localUser", {
 *     instanceId: defaultInstance.id,
 *     mobileCountryCode: "CN",
 *     mobile: "13312345678",
 *     password: "YourPassword-123",
 *     source: "Local",
 *     userName: `${name}_local_user`,
 * });
 * const defaultUserAttachment = new alicloud.bastionhost.UserAttachment("defaultUserAttachment", {
 *     instanceId: defaultInstance.id,
 *     userGroupId: defaultUserGroup.userGroupId,
 *     userId: localUser.userId,
 * });
 * ```
 *
 * ## Import
 *
 * Bastion Host User Attachment can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:bastionhost/userAttachment:UserAttachment example <instance_id>:<user_group_id>:<user_id>
 * ```
 */
export class UserAttachment extends pulumi.CustomResource {
    /**
     * Get an existing UserAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserAttachmentState, opts?: pulumi.CustomResourceOptions): UserAttachment {
        return new UserAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:bastionhost/userAttachment:UserAttachment';

    /**
     * Returns true if the given object is an instance of UserAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserAttachment.__pulumiType;
    }

    /**
     * Specifies the user group to add the user's bastion host ID of.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the user group to which you want to add the user ID.
     */
    public readonly userGroupId!: pulumi.Output<string>;
    /**
     * Specify that you want to add to the policy attached to the user group ID. This includes response parameters in a Json-formatted string supports up to set up 100 USER ID.
     */
    public readonly userId!: pulumi.Output<string>;

    /**
     * Create a UserAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserAttachmentArgs | UserAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserAttachmentState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["userGroupId"] = state ? state.userGroupId : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as UserAttachmentArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.userGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userGroupId'");
            }
            if ((!args || args.userId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["userGroupId"] = args ? args.userGroupId : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserAttachment resources.
 */
export interface UserAttachmentState {
    /**
     * Specifies the user group to add the user's bastion host ID of.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the user group to which you want to add the user ID.
     */
    userGroupId?: pulumi.Input<string>;
    /**
     * Specify that you want to add to the policy attached to the user group ID. This includes response parameters in a Json-formatted string supports up to set up 100 USER ID.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserAttachment resource.
 */
export interface UserAttachmentArgs {
    /**
     * Specifies the user group to add the user's bastion host ID of.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the user group to which you want to add the user ID.
     */
    userGroupId: pulumi.Input<string>;
    /**
     * Specify that you want to add to the policy attached to the user group ID. This includes response parameters in a Json-formatted string supports up to set up 100 USER ID.
     */
    userId: pulumi.Input<string>;
}
