// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Bastionhost Host Accounts of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.135.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.bastionhost.getHostAccounts({
 *     hostId: "15",
 *     instanceId: "example_value",
 *     ids: [
 *         "1",
 *         "2",
 *     ],
 * });
 * export const bastionhostHostAccountId1 = ids.then(ids => ids.accounts?[0]?.id);
 * const nameRegex = alicloud.bastionhost.getHostAccounts({
 *     hostId: "15",
 *     instanceId: "example_value",
 *     nameRegex: "^my-HostAccount",
 * });
 * export const bastionhostHostAccountId2 = nameRegex.then(nameRegex => nameRegex.accounts?[0]?.id);
 * ```
 */
export function getHostAccounts(args: GetHostAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetHostAccountsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:bastionhost/getHostAccounts:getHostAccounts", {
        "hostAccountName": args.hostAccountName,
        "hostId": args.hostId,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "protocolName": args.protocolName,
    }, opts);
}

/**
 * A collection of arguments for invoking getHostAccounts.
 */
export interface GetHostAccountsArgs {
    /**
     * Specify the new hosting account's name, support the longest 128 characters.
     */
    hostAccountName?: string;
    /**
     * Specifies the database where you want to create your hosting account's host ID.
     */
    hostId: string;
    /**
     * A list of Host Account IDs.
     */
    ids?: string[];
    /**
     * Specifies the database where you want to create your hosting account's host bastion host ID of.
     */
    instanceId: string;
    /**
     * A regex string to filter results by Host Account name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
     */
    protocolName?: string;
}

/**
 * A collection of values returned by getHostAccounts.
 */
export interface GetHostAccountsResult {
    readonly accounts: outputs.bastionhost.GetHostAccountsAccount[];
    readonly hostAccountName?: string;
    readonly hostId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly protocolName?: string;
}

export function getHostAccountsOutput(args: GetHostAccountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostAccountsResult> {
    return pulumi.output(args).apply(a => getHostAccounts(a, opts))
}

/**
 * A collection of arguments for invoking getHostAccounts.
 */
export interface GetHostAccountsOutputArgs {
    /**
     * Specify the new hosting account's name, support the longest 128 characters.
     */
    hostAccountName?: pulumi.Input<string>;
    /**
     * Specifies the database where you want to create your hosting account's host ID.
     */
    hostId: pulumi.Input<string>;
    /**
     * A list of Host Account IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the database where you want to create your hosting account's host bastion host ID of.
     */
    instanceId: pulumi.Input<string>;
    /**
     * A regex string to filter results by Host Account name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
     */
    protocolName?: pulumi.Input<string>;
}
