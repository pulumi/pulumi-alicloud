// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Yundun_bastionhost instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:bastionhost/instance:Instance example bastionhost-exampe123456
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:bastionhost/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * The AD auth server of the Instance. See `adAuthServer` below.
     */
    declare public readonly adAuthServers: pulumi.Output<outputs.bastionhost.InstanceAdAuthServer[]>;
    /**
     * The bandwidth of Cloud Bastionhost instance.
     * If China-Site Account, its valid values: 0 to 150. Unit: Mbit/s. The value must be a multiple of 5.
     * If International-Site Account, its valid values: 0 to 200. Unit: Mbit/s. The value must be a multiple of 10.
     */
    declare public readonly bandwidth: pulumi.Output<string>;
    /**
     * Description of the instance. This name can have a string of 1 to 63 characters.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Whether to Enable the public internet access to a specified Bastionhost instance. The valid values: `true`, `false`.
     */
    declare public readonly enablePublicAccess: pulumi.Output<boolean>;
    /**
     * The LDAP auth server of the Instance. See `ldapAuthServer` below.
     */
    declare public readonly ldapAuthServers: pulumi.Output<outputs.bastionhost.InstanceLdapAuthServer[]>;
    /**
     * The package type of Cloud Bastionhost instance. You can query more supported types through the [DescribePricingModule](https://help.aliyun.com/document_detail/96469.html).
     */
    declare public readonly licenseCode: pulumi.Output<string>;
    /**
     * Duration for initially producing the instance. Valid values: [1~9], 12, 24, 36. At present, the provider does not support modify "period".
     * > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * The plan code of Cloud Bastionhost instance. Valid values:
     */
    declare public readonly planCode: pulumi.Output<string>;
    declare public readonly publicWhiteLists: pulumi.Output<string[] | undefined>;
    /**
     * Automatic renewal period. Valid values: `1` to `9`, `12`, `24`, `36`. **NOTE:** The `renewPeriod` is required under the condition that `renewalStatus` is `AutoRenewal`. From version 1.193.0, `renewPeriod` can be modified.
     */
    declare public readonly renewPeriod: pulumi.Output<number | undefined>;
    /**
     * The unit of the auto-renewal period. Valid values:  **NOTE:** The `renewalPeriodUnit` is required under the condition that `renewalStatus` is `AutoRenewal`.
     * - `M`: months.
     * - `Y`: years.
     */
    declare public readonly renewalPeriodUnit: pulumi.Output<string>;
    /**
     * Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`, `NotRenewal`. From version 1.193.0, `renewalStatus` can be modified.
     */
    declare public readonly renewalStatus: pulumi.Output<string>;
    /**
     * The Id of resource group which the Bastionhost Instance belongs. If not set, the resource is created in the default resource group.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * security group IDs configured to Bastionhost. 
     * **NOTE:** There is a potential diff error because of the order of `securityGroupIds` values indefinite.
     * So, from version 1.160.0, `securityGroupIds` type has been updated as `set` from `list`,
     * and you can use tolist to convert it to a list.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * The storage of Cloud Bastionhost instance. Valid values: `0` to `500`. Unit: TB. **NOTE:** From version 1.251.0, `storage` can be modified.
     */
    declare public readonly storage: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * VSwitch ID configured to Bastionhost.
     */
    declare public readonly vswitchId: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["adAuthServers"] = state?.adAuthServers;
            resourceInputs["bandwidth"] = state?.bandwidth;
            resourceInputs["description"] = state?.description;
            resourceInputs["enablePublicAccess"] = state?.enablePublicAccess;
            resourceInputs["ldapAuthServers"] = state?.ldapAuthServers;
            resourceInputs["licenseCode"] = state?.licenseCode;
            resourceInputs["period"] = state?.period;
            resourceInputs["planCode"] = state?.planCode;
            resourceInputs["publicWhiteLists"] = state?.publicWhiteLists;
            resourceInputs["renewPeriod"] = state?.renewPeriod;
            resourceInputs["renewalPeriodUnit"] = state?.renewalPeriodUnit;
            resourceInputs["renewalStatus"] = state?.renewalStatus;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["storage"] = state?.storage;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vswitchId"] = state?.vswitchId;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.bandwidth === undefined && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.licenseCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'licenseCode'");
            }
            if (args?.planCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'planCode'");
            }
            if (args?.securityGroupIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupIds'");
            }
            if (args?.storage === undefined && !opts.urn) {
                throw new Error("Missing required property 'storage'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["adAuthServers"] = args?.adAuthServers;
            resourceInputs["bandwidth"] = args?.bandwidth;
            resourceInputs["description"] = args?.description;
            resourceInputs["enablePublicAccess"] = args?.enablePublicAccess;
            resourceInputs["ldapAuthServers"] = args?.ldapAuthServers;
            resourceInputs["licenseCode"] = args?.licenseCode;
            resourceInputs["period"] = args?.period;
            resourceInputs["planCode"] = args?.planCode;
            resourceInputs["publicWhiteLists"] = args?.publicWhiteLists;
            resourceInputs["renewPeriod"] = args?.renewPeriod;
            resourceInputs["renewalPeriodUnit"] = args?.renewalPeriodUnit;
            resourceInputs["renewalStatus"] = args?.renewalStatus;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["storage"] = args?.storage;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vswitchId"] = args?.vswitchId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * The AD auth server of the Instance. See `adAuthServer` below.
     */
    adAuthServers?: pulumi.Input<pulumi.Input<inputs.bastionhost.InstanceAdAuthServer>[]>;
    /**
     * The bandwidth of Cloud Bastionhost instance.
     * If China-Site Account, its valid values: 0 to 150. Unit: Mbit/s. The value must be a multiple of 5.
     * If International-Site Account, its valid values: 0 to 200. Unit: Mbit/s. The value must be a multiple of 10.
     */
    bandwidth?: pulumi.Input<string>;
    /**
     * Description of the instance. This name can have a string of 1 to 63 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to Enable the public internet access to a specified Bastionhost instance. The valid values: `true`, `false`.
     */
    enablePublicAccess?: pulumi.Input<boolean>;
    /**
     * The LDAP auth server of the Instance. See `ldapAuthServer` below.
     */
    ldapAuthServers?: pulumi.Input<pulumi.Input<inputs.bastionhost.InstanceLdapAuthServer>[]>;
    /**
     * The package type of Cloud Bastionhost instance. You can query more supported types through the [DescribePricingModule](https://help.aliyun.com/document_detail/96469.html).
     */
    licenseCode?: pulumi.Input<string>;
    /**
     * Duration for initially producing the instance. Valid values: [1~9], 12, 24, 36. At present, the provider does not support modify "period".
     * > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
     */
    period?: pulumi.Input<number>;
    /**
     * The plan code of Cloud Bastionhost instance. Valid values:
     */
    planCode?: pulumi.Input<string>;
    publicWhiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Automatic renewal period. Valid values: `1` to `9`, `12`, `24`, `36`. **NOTE:** The `renewPeriod` is required under the condition that `renewalStatus` is `AutoRenewal`. From version 1.193.0, `renewPeriod` can be modified.
     */
    renewPeriod?: pulumi.Input<number>;
    /**
     * The unit of the auto-renewal period. Valid values:  **NOTE:** The `renewalPeriodUnit` is required under the condition that `renewalStatus` is `AutoRenewal`.
     * - `M`: months.
     * - `Y`: years.
     */
    renewalPeriodUnit?: pulumi.Input<string>;
    /**
     * Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`, `NotRenewal`. From version 1.193.0, `renewalStatus` can be modified.
     */
    renewalStatus?: pulumi.Input<string>;
    /**
     * The Id of resource group which the Bastionhost Instance belongs. If not set, the resource is created in the default resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * security group IDs configured to Bastionhost. 
     * **NOTE:** There is a potential diff error because of the order of `securityGroupIds` values indefinite.
     * So, from version 1.160.0, `securityGroupIds` type has been updated as `set` from `list`,
     * and you can use tolist to convert it to a list.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The storage of Cloud Bastionhost instance. Valid values: `0` to `500`. Unit: TB. **NOTE:** From version 1.251.0, `storage` can be modified.
     */
    storage?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * VSwitch ID configured to Bastionhost.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The AD auth server of the Instance. See `adAuthServer` below.
     */
    adAuthServers?: pulumi.Input<pulumi.Input<inputs.bastionhost.InstanceAdAuthServer>[]>;
    /**
     * The bandwidth of Cloud Bastionhost instance.
     * If China-Site Account, its valid values: 0 to 150. Unit: Mbit/s. The value must be a multiple of 5.
     * If International-Site Account, its valid values: 0 to 200. Unit: Mbit/s. The value must be a multiple of 10.
     */
    bandwidth: pulumi.Input<string>;
    /**
     * Description of the instance. This name can have a string of 1 to 63 characters.
     */
    description: pulumi.Input<string>;
    /**
     * Whether to Enable the public internet access to a specified Bastionhost instance. The valid values: `true`, `false`.
     */
    enablePublicAccess?: pulumi.Input<boolean>;
    /**
     * The LDAP auth server of the Instance. See `ldapAuthServer` below.
     */
    ldapAuthServers?: pulumi.Input<pulumi.Input<inputs.bastionhost.InstanceLdapAuthServer>[]>;
    /**
     * The package type of Cloud Bastionhost instance. You can query more supported types through the [DescribePricingModule](https://help.aliyun.com/document_detail/96469.html).
     */
    licenseCode: pulumi.Input<string>;
    /**
     * Duration for initially producing the instance. Valid values: [1~9], 12, 24, 36. At present, the provider does not support modify "period".
     * > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
     */
    period?: pulumi.Input<number>;
    /**
     * The plan code of Cloud Bastionhost instance. Valid values:
     */
    planCode: pulumi.Input<string>;
    publicWhiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Automatic renewal period. Valid values: `1` to `9`, `12`, `24`, `36`. **NOTE:** The `renewPeriod` is required under the condition that `renewalStatus` is `AutoRenewal`. From version 1.193.0, `renewPeriod` can be modified.
     */
    renewPeriod?: pulumi.Input<number>;
    /**
     * The unit of the auto-renewal period. Valid values:  **NOTE:** The `renewalPeriodUnit` is required under the condition that `renewalStatus` is `AutoRenewal`.
     * - `M`: months.
     * - `Y`: years.
     */
    renewalPeriodUnit?: pulumi.Input<string>;
    /**
     * Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`, `NotRenewal`. From version 1.193.0, `renewalStatus` can be modified.
     */
    renewalStatus?: pulumi.Input<string>;
    /**
     * The Id of resource group which the Bastionhost Instance belongs. If not set, the resource is created in the default resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * security group IDs configured to Bastionhost. 
     * **NOTE:** There is a potential diff error because of the order of `securityGroupIds` values indefinite.
     * So, from version 1.160.0, `securityGroupIds` type has been updated as `set` from `list`,
     * and you can use tolist to convert it to a list.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The storage of Cloud Bastionhost instance. Valid values: `0` to `500`. Unit: TB. **NOTE:** From version 1.251.0, `storage` can be modified.
     */
    storage: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * VSwitch ID configured to Bastionhost.
     */
    vswitchId: pulumi.Input<string>;
}
