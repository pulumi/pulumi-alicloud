// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Bastion Host Share Key resource.
 *
 * For information about Bastion Host Host Share Key and how to use it, see [What is Host Share Key](https://www.alibabacloud.com/help/en/bastion-host/latest/createhostsharekey).
 *
 * > **NOTE:** Available since v1.165.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * export = async () => {
 *     const config = new pulumi.Config();
 *     const name = config.get("name") || "tf_example";
 *     const default = await alicloud.bastionhost.getInstances({});
 *     const defaultGetZones = await alicloud.getZones({
 *         availableResourceCreation: "VSwitch",
 *     });
 *     const defaultGetNetworks = await alicloud.vpc.getNetworks({
 *         nameRegex: "^default-NODELETING$",
 *         cidrBlock: "10.4.0.0/16",
 *     });
 *     const defaultGetSwitches = await alicloud.vpc.getSwitches({
 *         cidrBlock: "10.4.0.0/24",
 *         vpcId: defaultGetNetworks.ids?.[0],
 *         zoneId: defaultGetZones.zones?.[0]?.id,
 *     });
 *     const defaultSecurityGroup: alicloud.ecs.SecurityGroup[] = [];
 *     for (const range = {value: 0}; range.value < (_default.ids.length > 0 ? 0 : 1); range.value++) {
 *         defaultSecurityGroup.push(new alicloud.ecs.SecurityGroup(`default-${range.value}`, {vpcId: defaultGetNetworks.ids?.[0]}));
 *     }
 *     const defaultInstance: alicloud.bastionhost.Instance[] = [];
 *     for (const range = {value: 0}; range.value < (_default.ids.length > 0 ? 0 : 1); range.value++) {
 *         defaultInstance.push(new alicloud.bastionhost.Instance(`default-${range.value}`, {
 *             description: name,
 *             licenseCode: "bhah_ent_50_asset",
 *             planCode: "cloudbastion",
 *             storage: "5",
 *             bandwidth: "5",
 *             period: 1,
 *             vswitchId: defaultGetSwitches.ids?.[0],
 *             securityGroupIds: [defaultSecurityGroup[0].id],
 *         }));
 *     }
 *     const instanceId = _default.ids.length > 0 ? _default.ids?.[0] : defaultInstance[0].id;
 *     const privateKey = config.get("privateKey") || "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc25oc29SSVVwVXltSG1FVHJXUGxDbkhMa3c3N0JYTm44ZHcvbDg3eG10SUhjd2syCkRybjFDZk5jZkpJV0tSdkFaYkdKMlZTS1RiRDhPTmcyT3JvUHFGUHBLOHJ5QjJRb1NYQVRsaUVHWFhNeW1tRm8KeDBmem12THFscUxpNGZnOExhcTc5UC85aGxLU1djTWhJU0pYVTNHMS9KdEFBUmEyQXc4cXEzSVQvMkZ5NktrdwowMU9MdDdLN2pGUFRPaHhtdmNoSkZ1SVo1YXI0cW5HUlFHQnpCL2hoRHVIWEMwRlhJZ2ozd0NXMDZ4R2V2WjJyCmNCWWwwN1luL2lvZk95MU0wRjZZN0JrMU95N21vYndzM1JsalUyL2FpZlhLMmNOUlk2Qjl5WXNvd1RBZmQ5OTQKQ2YxSlF3TlhsaUZCeTZueEJLQk1YbDhIU1grS1o3L29PUlIwVXdJREFRQUJBb0lCQVFDbU5JSXR5ckhSY3oxdApJMGo0L0FQc295ZE1EL0owRkJMa2FoSUxKWjFaYW1tbmx4ZHh4WHBQUndXRnVXTEw2OTFVbDI5aUoxb1ptazU1Ci9ka2EvZlhnOUN3OUxXWVN2aExLdVlaMEZOTmhxZ3VoUEVBZy9uLytlR1ZCM2ZYZkxaZVZpK0E0L1VHMG15ZFMKVXVlQ2ZRSElZeWh4VkgvWnc3WER5WmNhVFVZVVdMUWlYcVN0Y2JRbnZFOXpwOGc5TWh5UkhBcWYwbEt2UTRqdwphUnNKTnlob3lhZWcvUXlFeHVYNGdBR1lIc1lTSDRFVmtXOHl5WE1aOHpRdk1OSUNiYXhmUkRuSngybUh6a09rCnFHczVXbFp5L3VrQk5jWTQwd2Y0eTY2bEVJaVpKbiswaFhtSTF4Tk5SdHRwMjZnY3ROOXZWbmVicTdLTnpjTDgKeFQrMXZJaEpBb0dCQU9iMVM1YlE4NVRFWDBoZTRmdXc2R3ExbnhRLzJUSU03emZhK2VhZThPQlh2eVNFV3JpdwpPZzM3RFhVUDFNVU1iTEJRenE0STl1dE5YSVZadEFLR0h6ZDR6WmtQeGxORjZPN0FyWnJEWElDNEdKZHdmSEhxCjJZcDkxUDlWekJlOVhkTVdZVGFCNkMzWVdtYzQwM08vYWdyRCtNb2JnL0hqMSt0d2xZR2hjdlV2QW9HQkFNWFMKT2VnWHc5VUF3VEZabFBtZzZKeDI3TzNXUFBHd1E3QzRnYitFZzZkR1pLRnJVR1ZId2VUUG1HaGtwN1BmYU5ESwplaFVoUWFnNm9XOTF4dkE2YldZZ29SQmczUWkxc01MblRWeTExeVN1UEVFSCtMT2s1N3d2akNLSk5XZnM0SjVyCmg1NGw0QXZ6UVhyWWN0UlZkSmYrNjFacGFnTkdZMVBvWVJMTHJMSWRBb0dBTndydzErRzJtNWJ0YW04S2hwU1QKMzVLbmRnajlkM3N6cStrcE03aGZpZWYvcXZGTU9jWHVJQlRjRVRFVHNWNlRyTFdsZkQ2d3NrVitybDFCbEhSbwpqaXpoT3dCU2NOZ3hlbTA3TXE0cXBwYTViYVltVW5QNUlwTjRwdDNJeFVPaFQ4UitxS0h2TnJYZ1hjZGlSYXl4CjFoejhkeFoxckxselpTNHd3M001MVlzQ2dZRUFpUDEwTEUySXg5Q2wrTTdZWTZZU2I0Zkx1MGhKRy9XOGFuemIKSFExZlBrOTVFRytJVlJyRUl2ZS95MHNvOTE4VzdyL0lteWxVbG5ORHFEUWZkK3grSmVNaXBuenRsRUorRGZxdgprQ3c4dUtJUUI5akZXV0l4T0JpVktyVnB6bll6ZG9Gd2dRd3BneDBKazFDZzlIblpMQWpVWUJyUDEwUy9ORFFRClJUdldjK0VDZ1lBeGRIZWxQNG1RdkJaS1oxMlNKbHlLbFVLeW43aHhzSHVkMkphMVNtS3FWeHBERDNlR0w0Y3QKZXA1QTZ5NkF4eGViZkI0aDdYNEZ0QTBBRURPdkZDR0J1QlRvZ3ZBdUNDVUtqK2JIUG1SNG53UVYzcWZ2M3loRAp0TGkwU2FHVElta2wvbUNCUDhZaW9JUys2N0xjby9kbHphUTNGVDlxTnJieFdFWjJlaS9LVlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==";
 *     const defaultHostShareKey = new alicloud.bastionhost.HostShareKey("default", {
 *         hostShareKeyName: name,
 *         instanceId: instanceId,
 *         privateKey: privateKey,
 *     });
 * }
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Bastion Host Share Key can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:bastionhost/hostShareKey:HostShareKey example <instance_id>:<host_share_key_id>
 * ```
 */
export class HostShareKey extends pulumi.CustomResource {
    /**
     * Get an existing HostShareKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostShareKeyState, opts?: pulumi.CustomResourceOptions): HostShareKey {
        return new HostShareKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:bastionhost/hostShareKey:HostShareKey';

    /**
     * Returns true if the given object is an instance of HostShareKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostShareKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostShareKey.__pulumiType;
    }

    /**
     * The first ID of the resource.
     */
    public /*out*/ readonly hostShareKeyId!: pulumi.Output<string>;
    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     */
    public readonly hostShareKeyName!: pulumi.Output<string>;
    /**
     * The ID of the Bastion instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The password of the private key. The value is a Base64-encoded string.
     */
    public readonly passPhrase!: pulumi.Output<string | undefined>;
    /**
     * The private key. The value is a Base64-encoded string.
     */
    public readonly privateKey!: pulumi.Output<string>;
    /**
     * The fingerprint of the private key.
     */
    public /*out*/ readonly privateKeyFingerPrint!: pulumi.Output<string>;

    /**
     * Create a HostShareKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostShareKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostShareKeyArgs | HostShareKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostShareKeyState | undefined;
            resourceInputs["hostShareKeyId"] = state ? state.hostShareKeyId : undefined;
            resourceInputs["hostShareKeyName"] = state ? state.hostShareKeyName : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["passPhrase"] = state ? state.passPhrase : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["privateKeyFingerPrint"] = state ? state.privateKeyFingerPrint : undefined;
        } else {
            const args = argsOrState as HostShareKeyArgs | undefined;
            if ((!args || args.hostShareKeyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostShareKeyName'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.privateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            resourceInputs["hostShareKeyName"] = args ? args.hostShareKeyName : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["passPhrase"] = args?.passPhrase ? pulumi.secret(args.passPhrase) : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["hostShareKeyId"] = undefined /*out*/;
            resourceInputs["privateKeyFingerPrint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passPhrase", "privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(HostShareKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostShareKey resources.
 */
export interface HostShareKeyState {
    /**
     * The first ID of the resource.
     */
    hostShareKeyId?: pulumi.Input<string>;
    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     */
    hostShareKeyName?: pulumi.Input<string>;
    /**
     * The ID of the Bastion instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The password of the private key. The value is a Base64-encoded string.
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * The private key. The value is a Base64-encoded string.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The fingerprint of the private key.
     */
    privateKeyFingerPrint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HostShareKey resource.
 */
export interface HostShareKeyArgs {
    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     */
    hostShareKeyName: pulumi.Input<string>;
    /**
     * The ID of the Bastion instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The password of the private key. The value is a Base64-encoded string.
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * The private key. The value is a Base64-encoded string.
     */
    privateKey: pulumi.Input<string>;
}
