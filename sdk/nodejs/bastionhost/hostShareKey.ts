// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Bastion Host Share Key resource.
 *
 * For information about Bastion Host Host Share Key and how to use it, see [What is Host Share Key](https://www.alibabacloud.com/help/en/bastion-host/latest/createhostsharekey).
 *
 * > **NOTE:** Available since v1.165.0.
 *
 * ## Import
 *
 * Bastion Host Share Key can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:bastionhost/hostShareKey:HostShareKey example <instance_id>:<host_share_key_id>
 * ```
 */
export class HostShareKey extends pulumi.CustomResource {
    /**
     * Get an existing HostShareKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostShareKeyState, opts?: pulumi.CustomResourceOptions): HostShareKey {
        return new HostShareKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:bastionhost/hostShareKey:HostShareKey';

    /**
     * Returns true if the given object is an instance of HostShareKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostShareKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostShareKey.__pulumiType;
    }

    /**
     * The first ID of the resource.
     */
    public /*out*/ readonly hostShareKeyId!: pulumi.Output<string>;
    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     */
    public readonly hostShareKeyName!: pulumi.Output<string>;
    /**
     * The ID of the Bastion instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The password of the private key. The value is a Base64-encoded string.
     */
    public readonly passPhrase!: pulumi.Output<string | undefined>;
    /**
     * The private key. The value is a Base64-encoded string.
     */
    public readonly privateKey!: pulumi.Output<string>;
    /**
     * The fingerprint of the private key.
     */
    public /*out*/ readonly privateKeyFingerPrint!: pulumi.Output<string>;

    /**
     * Create a HostShareKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostShareKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostShareKeyArgs | HostShareKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostShareKeyState | undefined;
            resourceInputs["hostShareKeyId"] = state ? state.hostShareKeyId : undefined;
            resourceInputs["hostShareKeyName"] = state ? state.hostShareKeyName : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["passPhrase"] = state ? state.passPhrase : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["privateKeyFingerPrint"] = state ? state.privateKeyFingerPrint : undefined;
        } else {
            const args = argsOrState as HostShareKeyArgs | undefined;
            if ((!args || args.hostShareKeyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostShareKeyName'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.privateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            resourceInputs["hostShareKeyName"] = args ? args.hostShareKeyName : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["passPhrase"] = args?.passPhrase ? pulumi.secret(args.passPhrase) : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["hostShareKeyId"] = undefined /*out*/;
            resourceInputs["privateKeyFingerPrint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passPhrase", "privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(HostShareKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostShareKey resources.
 */
export interface HostShareKeyState {
    /**
     * The first ID of the resource.
     */
    hostShareKeyId?: pulumi.Input<string>;
    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     */
    hostShareKeyName?: pulumi.Input<string>;
    /**
     * The ID of the Bastion instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The password of the private key. The value is a Base64-encoded string.
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * The private key. The value is a Base64-encoded string.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The fingerprint of the private key.
     */
    privateKeyFingerPrint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HostShareKey resource.
 */
export interface HostShareKeyArgs {
    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     */
    hostShareKeyName: pulumi.Input<string>;
    /**
     * The ID of the Bastion instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The password of the private key. The value is a Base64-encoded string.
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * The private key. The value is a Base64-encoded string.
     */
    privateKey: pulumi.Input<string>;
}
