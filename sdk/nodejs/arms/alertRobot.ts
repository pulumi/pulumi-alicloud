// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Application Real-Time Monitoring Service (ARMS) Alert Robot resource.
 *
 * For information about Application Real-Time Monitoring Service (ARMS) Alert Robot and how to use it, see [What is Alert Robot](https://next.api.alibabacloud.com/document/ARMS/2019-08-08/CreateOrUpdateIMRobot).
 *
 * > **NOTE:** Available since v1.237.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const wechat = new alicloud.arms.AlertRobot("wechat", {
 *     alertRobotName: "example_wechat",
 *     robotType: "wechat",
 *     robotAddr: "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23",
 *     dailyNoc: true,
 *     dailyNocTime: "09:30,17:00",
 * });
 * const dingding = new alicloud.arms.AlertRobot("dingding", {
 *     alertRobotName: "example_dingding",
 *     robotType: "dingding",
 *     robotAddr: "https://oapi.dingtalk.com/robot/send?access_token=1c704e23",
 *     dailyNoc: true,
 *     dailyNocTime: "09:30,17:00",
 * });
 * const feishu = new alicloud.arms.AlertRobot("feishu", {
 *     alertRobotName: "example_feishu",
 *     robotType: "feishu",
 *     robotAddr: "https://open.feishu.cn/open-apis/bot/v2/hook/a48efa01",
 *     dailyNoc: true,
 *     dailyNocTime: "09:30,17:00",
 * });
 * ```
 *
 * ## Import
 *
 * Application Real-Time Monitoring Service (ARMS) Alert Robot can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:arms/alertRobot:AlertRobot example <id>
 * ```
 */
export class AlertRobot extends pulumi.CustomResource {
    /**
     * Get an existing AlertRobot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertRobotState, opts?: pulumi.CustomResourceOptions): AlertRobot {
        return new AlertRobot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:arms/alertRobot:AlertRobot';

    /**
     * Returns true if the given object is an instance of AlertRobot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertRobot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertRobot.__pulumiType;
    }

    /**
     * The name of the resource.
     */
    declare public readonly alertRobotName: pulumi.Output<string>;
    /**
     * Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
     */
    declare public readonly dailyNoc: pulumi.Output<boolean | undefined>;
    /**
     * The time of the daily notification.
     */
    declare public readonly dailyNocTime: pulumi.Output<string | undefined>;
    /**
     * The webhook url of the robot.
     */
    declare public readonly robotAddr: pulumi.Output<string>;
    /**
     * The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
     */
    declare public readonly robotType: pulumi.Output<string>;

    /**
     * Create a AlertRobot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertRobotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertRobotArgs | AlertRobotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertRobotState | undefined;
            resourceInputs["alertRobotName"] = state?.alertRobotName;
            resourceInputs["dailyNoc"] = state?.dailyNoc;
            resourceInputs["dailyNocTime"] = state?.dailyNocTime;
            resourceInputs["robotAddr"] = state?.robotAddr;
            resourceInputs["robotType"] = state?.robotType;
        } else {
            const args = argsOrState as AlertRobotArgs | undefined;
            if (args?.alertRobotName === undefined && !opts.urn) {
                throw new Error("Missing required property 'alertRobotName'");
            }
            if (args?.robotAddr === undefined && !opts.urn) {
                throw new Error("Missing required property 'robotAddr'");
            }
            if (args?.robotType === undefined && !opts.urn) {
                throw new Error("Missing required property 'robotType'");
            }
            resourceInputs["alertRobotName"] = args?.alertRobotName;
            resourceInputs["dailyNoc"] = args?.dailyNoc;
            resourceInputs["dailyNocTime"] = args?.dailyNocTime;
            resourceInputs["robotAddr"] = args?.robotAddr;
            resourceInputs["robotType"] = args?.robotType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertRobot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertRobot resources.
 */
export interface AlertRobotState {
    /**
     * The name of the resource.
     */
    alertRobotName?: pulumi.Input<string>;
    /**
     * Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
     */
    dailyNoc?: pulumi.Input<boolean>;
    /**
     * The time of the daily notification.
     */
    dailyNocTime?: pulumi.Input<string>;
    /**
     * The webhook url of the robot.
     */
    robotAddr?: pulumi.Input<string>;
    /**
     * The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
     */
    robotType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlertRobot resource.
 */
export interface AlertRobotArgs {
    /**
     * The name of the resource.
     */
    alertRobotName: pulumi.Input<string>;
    /**
     * Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
     */
    dailyNoc?: pulumi.Input<boolean>;
    /**
     * The time of the daily notification.
     */
    dailyNocTime?: pulumi.Input<string>;
    /**
     * The webhook url of the robot.
     */
    robotAddr: pulumi.Input<string>;
    /**
     * The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
     */
    robotType: pulumi.Input<string>;
}
