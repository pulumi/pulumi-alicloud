// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the ARMS Environments of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.258.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultEnvironment = new alicloud.arms.Environment("default", {
 *     bindResourceId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 *     environmentSubType: "ECS",
 *     environmentType: "ECS",
 *     environmentName: `${name}-${defaultInteger.result}`,
 *     resourceGroupId: _default.then(_default => _default.ids?.[1]),
 *     tags: {
 *         Created: "TF",
 *         For: "Environment",
 *     },
 * });
 * const ids = alicloud.arms.getEnvironmentsOutput({
 *     ids: [defaultEnvironment.id],
 * });
 * export const armsEnvironmentsId0 = ids.apply(ids => ids.environments?.[0]?.id);
 * ```
 */
export function getEnvironments(args?: GetEnvironmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:arms/getEnvironments:getEnvironments", {
        "environmentType": args.environmentType,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironments.
 */
export interface GetEnvironmentsArgs {
    /**
     * The environment type. Valid values: `CS`, `ECS`, `Cloud`.
     */
    environmentType?: string;
    /**
     * A list of ARMS Environment IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by ARMS Environment name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEnvironments.
 */
export interface GetEnvironmentsResult {
    /**
     * The type of the environment instance.
     */
    readonly environmentType?: string;
    /**
     * A list of ARMS Environments. Each element contains the following attributes:
     */
    readonly environments: outputs.arms.GetEnvironmentsEnvironment[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of ARMS Environment names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * The tags of the environment resource.
     */
    readonly tags?: {[key: string]: string};
}
/**
 * This data source provides the ARMS Environments of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.258.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultEnvironment = new alicloud.arms.Environment("default", {
 *     bindResourceId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 *     environmentSubType: "ECS",
 *     environmentType: "ECS",
 *     environmentName: `${name}-${defaultInteger.result}`,
 *     resourceGroupId: _default.then(_default => _default.ids?.[1]),
 *     tags: {
 *         Created: "TF",
 *         For: "Environment",
 *     },
 * });
 * const ids = alicloud.arms.getEnvironmentsOutput({
 *     ids: [defaultEnvironment.id],
 * });
 * export const armsEnvironmentsId0 = ids.apply(ids => ids.environments?.[0]?.id);
 * ```
 */
export function getEnvironmentsOutput(args?: GetEnvironmentsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEnvironmentsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:arms/getEnvironments:getEnvironments", {
        "environmentType": args.environmentType,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironments.
 */
export interface GetEnvironmentsOutputArgs {
    /**
     * The environment type. Valid values: `CS`, `ECS`, `Cloud`.
     */
    environmentType?: pulumi.Input<string>;
    /**
     * A list of ARMS Environment IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by ARMS Environment name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
