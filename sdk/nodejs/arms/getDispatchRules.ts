// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.136.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.arms.AlertContact("default", {
 *     alertContactName: "example_value",
 *     email: "example_value@aaa.com",
 * });
 * const defaultAlertContactGroup = new alicloud.arms.AlertContactGroup("default", {
 *     alertContactGroupName: "example_value",
 *     contactIds: [_default.id],
 * });
 * const defaultDispatchRule = new alicloud.arms.DispatchRule("default", {
 *     dispatchRuleName: "example_value",
 *     dispatchType: "CREATE_ALERT",
 *     groupRules: [{
 *         groupWaitTime: 5,
 *         groupInterval: 15,
 *         repeatInterval: 100,
 *         groupingFields: ["alertname"],
 *     }],
 *     labelMatchExpressionGrids: [{
 *         labelMatchExpressionGroups: [{
 *             labelMatchExpressions: [{
 *                 key: "_aliyun_arms_involvedObject_kind",
 *                 value: "app",
 *                 operator: "eq",
 *             }],
 *         }],
 *     }],
 *     notifyRules: [{
 *         notifyObjects: [
 *             {
 *                 notifyObjectId: _default.id,
 *                 notifyType: "ARMS_CONTACT",
 *                 name: "example_value",
 *             },
 *             {
 *                 notifyObjectId: defaultAlertContactGroup.id,
 *                 notifyType: "ARMS_CONTACT_GROUP",
 *                 name: "example_value",
 *             },
 *         ],
 *         notifyChannels: [
 *             "dingTalk",
 *             "wechat",
 *         ],
 *         notifyStartTime: "10:00",
 *         notifyEndTime: "23:00",
 *     }],
 * });
 * const ids = alicloud.arms.getDispatchRulesOutput({
 *     ids: [defaultDispatchRule.id],
 * });
 * export const armsDispatchRuleId1 = ids.apply(ids => ids.rules?.[0]?.id);
 * ```
 */
export function getDispatchRules(args?: GetDispatchRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetDispatchRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:arms/getDispatchRules:getDispatchRules", {
        "dispatchRuleName": args.dispatchRuleName,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDispatchRules.
 */
export interface GetDispatchRulesArgs {
    /**
     * The name of the dispatch rule.
     */
    dispatchRuleName?: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of dispatch rule id.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Dispatch Rule name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getDispatchRules.
 */
export interface GetDispatchRulesResult {
    /**
     * The name of the dispatch rule.
     */
    readonly dispatchRuleName?: string;
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of Dispatch Rule names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * A list of Arms Dispatch Rules. Each element contains the following attributes:
     */
    readonly rules: outputs.arms.GetDispatchRulesRule[];
}
/**
 * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.136.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.arms.AlertContact("default", {
 *     alertContactName: "example_value",
 *     email: "example_value@aaa.com",
 * });
 * const defaultAlertContactGroup = new alicloud.arms.AlertContactGroup("default", {
 *     alertContactGroupName: "example_value",
 *     contactIds: [_default.id],
 * });
 * const defaultDispatchRule = new alicloud.arms.DispatchRule("default", {
 *     dispatchRuleName: "example_value",
 *     dispatchType: "CREATE_ALERT",
 *     groupRules: [{
 *         groupWaitTime: 5,
 *         groupInterval: 15,
 *         repeatInterval: 100,
 *         groupingFields: ["alertname"],
 *     }],
 *     labelMatchExpressionGrids: [{
 *         labelMatchExpressionGroups: [{
 *             labelMatchExpressions: [{
 *                 key: "_aliyun_arms_involvedObject_kind",
 *                 value: "app",
 *                 operator: "eq",
 *             }],
 *         }],
 *     }],
 *     notifyRules: [{
 *         notifyObjects: [
 *             {
 *                 notifyObjectId: _default.id,
 *                 notifyType: "ARMS_CONTACT",
 *                 name: "example_value",
 *             },
 *             {
 *                 notifyObjectId: defaultAlertContactGroup.id,
 *                 notifyType: "ARMS_CONTACT_GROUP",
 *                 name: "example_value",
 *             },
 *         ],
 *         notifyChannels: [
 *             "dingTalk",
 *             "wechat",
 *         ],
 *         notifyStartTime: "10:00",
 *         notifyEndTime: "23:00",
 *     }],
 * });
 * const ids = alicloud.arms.getDispatchRulesOutput({
 *     ids: [defaultDispatchRule.id],
 * });
 * export const armsDispatchRuleId1 = ids.apply(ids => ids.rules?.[0]?.id);
 * ```
 */
export function getDispatchRulesOutput(args?: GetDispatchRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDispatchRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:arms/getDispatchRules:getDispatchRules", {
        "dispatchRuleName": args.dispatchRuleName,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDispatchRules.
 */
export interface GetDispatchRulesOutputArgs {
    /**
     * The name of the dispatch rule.
     */
    dispatchRuleName?: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of dispatch rule id.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Dispatch Rule name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
}
