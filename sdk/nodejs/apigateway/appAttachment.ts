// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AppAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AppAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppAttachmentState, opts?: pulumi.CustomResourceOptions): AppAttachment {
        return new AppAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:apigateway/appAttachment:AppAttachment';

    /**
     * Returns true if the given object is an instance of AppAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppAttachment.__pulumiType;
    }

    /**
     * The apiId that app apply to access.
     */
    public readonly apiId!: pulumi.Output<string>;
    /**
     * The app that apply to the authorization.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The group that the api belongs to.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * Stage that the app apply to access.
     */
    public readonly stageName!: pulumi.Output<string>;

    /**
     * Create a AppAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppAttachmentArgs | AppAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppAttachmentState | undefined;
            resourceInputs["apiId"] = state ? state.apiId : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["stageName"] = state ? state.stageName : undefined;
        } else {
            const args = argsOrState as AppAttachmentArgs | undefined;
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.stageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stageName'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["stageName"] = args ? args.stageName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppAttachment resources.
 */
export interface AppAttachmentState {
    /**
     * The apiId that app apply to access.
     */
    apiId?: pulumi.Input<string>;
    /**
     * The app that apply to the authorization.
     */
    appId?: pulumi.Input<string>;
    /**
     * The group that the api belongs to.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Stage that the app apply to access.
     */
    stageName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppAttachment resource.
 */
export interface AppAttachmentArgs {
    /**
     * The apiId that app apply to access.
     */
    apiId: pulumi.Input<string>;
    /**
     * The app that apply to the authorization.
     */
    appId: pulumi.Input<string>;
    /**
     * The group that the api belongs to.
     */
    groupId: pulumi.Input<string>;
    /**
     * Stage that the app apply to access.
     */
    stageName: pulumi.Input<string>;
}
