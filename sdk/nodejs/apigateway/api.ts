// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.apigateway.Group("example", {
 *     name: "tf-example",
 *     description: "tf-example",
 *     basePath: "/",
 * });
 * const exampleApi = new alicloud.apigateway.Api("example", {
 *     groupId: example.id,
 *     name: "tf-example",
 *     description: "tf-example",
 *     authType: "APP",
 *     forceNonceCheck: false,
 *     requestConfig: {
 *         protocol: "HTTP",
 *         method: "GET",
 *         path: "/example/path",
 *         mode: "MAPPING",
 *     },
 *     serviceType: "HTTP",
 *     httpServiceConfig: {
 *         address: "http://apigateway-backend.alicloudapi.com:8080",
 *         method: "GET",
 *         path: "/web/cloudapi",
 *         timeout: 12,
 *         aoneName: "cloudapi-openapi",
 *     },
 *     requestParameters: [{
 *         name: "example",
 *         type: "STRING",
 *         required: "OPTIONAL",
 *         "in": "QUERY",
 *         inService: "QUERY",
 *         nameService: "exampleservice",
 *     }],
 *     stageNames: [
 *         "RELEASE",
 *         "TEST",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Api gateway api can be imported using the id.Format to `<API Group Id>:<API Id>` e.g.
 *
 * ```sh
 * $ pulumi import alicloud:apigateway/api:Api example "ab2351f2ce904edaa8d92a0510832b91:e4f728fca5a94148b023b99a3e5d0b62"
 * ```
 */
export class Api extends pulumi.CustomResource {
    /**
     * Get an existing Api resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiState, opts?: pulumi.CustomResourceOptions): Api {
        return new Api(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:apigateway/api:Api';

    /**
     * Returns true if the given object is an instance of Api.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Api {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Api.__pulumiType;
    }

    /**
     * The ID of the api of api gateway.
     */
    declare public /*out*/ readonly apiId: pulumi.Output<string>;
    /**
     * The authorization Type including APP and ANONYMOUS. Defaults to null.
     */
    declare public readonly authType: pulumi.Output<string>;
    /**
     * constant_parameters defines the constant parameters of the api. See `constantParameters` below.
     */
    declare public readonly constantParameters: pulumi.Output<outputs.apigateway.ApiConstantParameter[] | undefined>;
    /**
     * The description of the api. Defaults to null.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * fc_service_config defines the config when serviceType selected 'FunctionCompute'. See `fcServiceConfig` below.
     */
    declare public readonly fcServiceConfig: pulumi.Output<outputs.apigateway.ApiFcServiceConfig | undefined>;
    /**
     * Whether to prevent API replay attack. Default value: `false`.
     */
    declare public readonly forceNonceCheck: pulumi.Output<boolean>;
    /**
     * The api gateway that the api belongs to. Defaults to null.
     */
    declare public readonly groupId: pulumi.Output<string>;
    /**
     * http_service_config defines the config when serviceType selected 'HTTP'. See `httpServiceConfig` below.
     */
    declare public readonly httpServiceConfig: pulumi.Output<outputs.apigateway.ApiHttpServiceConfig | undefined>;
    /**
     * http_vpc_service_config defines the config when serviceType selected 'HTTP-VPC'. See `httpVpcServiceConfig` below.
     */
    declare public readonly httpVpcServiceConfig: pulumi.Output<outputs.apigateway.ApiHttpVpcServiceConfig | undefined>;
    /**
     * http_service_config defines the config when serviceType selected 'MOCK'. See `mockServiceConfig` below.
     */
    declare public readonly mockServiceConfig: pulumi.Output<outputs.apigateway.ApiMockServiceConfig | undefined>;
    /**
     * The name of the api gateway api. Defaults to null.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Request_config defines how users can send requests to your API. See `requestConfig` below.
     */
    declare public readonly requestConfig: pulumi.Output<outputs.apigateway.ApiRequestConfig>;
    /**
     * request_parameters defines the request parameters of the api. See `requestParameters` below.
     */
    declare public readonly requestParameters: pulumi.Output<outputs.apigateway.ApiRequestParameter[] | undefined>;
    /**
     * The type of backend service. Type including HTTP, VPC, FunctionCompute and MOCK. Defaults to null.
     */
    declare public readonly serviceType: pulumi.Output<string>;
    /**
     * Stages that the api need to be deployed. Valid value: `RELEASE`,`PRE`,`TEST`.
     */
    declare public readonly stageNames: pulumi.Output<string[] | undefined>;
    /**
     * system_parameters defines the system parameters of the api. See `systemParameters` below.
     */
    declare public readonly systemParameters: pulumi.Output<outputs.apigateway.ApiSystemParameter[] | undefined>;

    /**
     * Create a Api resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiArgs | ApiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiState | undefined;
            resourceInputs["apiId"] = state?.apiId;
            resourceInputs["authType"] = state?.authType;
            resourceInputs["constantParameters"] = state?.constantParameters;
            resourceInputs["description"] = state?.description;
            resourceInputs["fcServiceConfig"] = state?.fcServiceConfig;
            resourceInputs["forceNonceCheck"] = state?.forceNonceCheck;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["httpServiceConfig"] = state?.httpServiceConfig;
            resourceInputs["httpVpcServiceConfig"] = state?.httpVpcServiceConfig;
            resourceInputs["mockServiceConfig"] = state?.mockServiceConfig;
            resourceInputs["name"] = state?.name;
            resourceInputs["requestConfig"] = state?.requestConfig;
            resourceInputs["requestParameters"] = state?.requestParameters;
            resourceInputs["serviceType"] = state?.serviceType;
            resourceInputs["stageNames"] = state?.stageNames;
            resourceInputs["systemParameters"] = state?.systemParameters;
        } else {
            const args = argsOrState as ApiArgs | undefined;
            if (args?.authType === undefined && !opts.urn) {
                throw new Error("Missing required property 'authType'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.requestConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'requestConfig'");
            }
            if (args?.serviceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceType'");
            }
            resourceInputs["authType"] = args?.authType;
            resourceInputs["constantParameters"] = args?.constantParameters;
            resourceInputs["description"] = args?.description;
            resourceInputs["fcServiceConfig"] = args?.fcServiceConfig;
            resourceInputs["forceNonceCheck"] = args?.forceNonceCheck;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["httpServiceConfig"] = args?.httpServiceConfig;
            resourceInputs["httpVpcServiceConfig"] = args?.httpVpcServiceConfig;
            resourceInputs["mockServiceConfig"] = args?.mockServiceConfig;
            resourceInputs["name"] = args?.name;
            resourceInputs["requestConfig"] = args?.requestConfig;
            resourceInputs["requestParameters"] = args?.requestParameters;
            resourceInputs["serviceType"] = args?.serviceType;
            resourceInputs["stageNames"] = args?.stageNames;
            resourceInputs["systemParameters"] = args?.systemParameters;
            resourceInputs["apiId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Api.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Api resources.
 */
export interface ApiState {
    /**
     * The ID of the api of api gateway.
     */
    apiId?: pulumi.Input<string>;
    /**
     * The authorization Type including APP and ANONYMOUS. Defaults to null.
     */
    authType?: pulumi.Input<string>;
    /**
     * constant_parameters defines the constant parameters of the api. See `constantParameters` below.
     */
    constantParameters?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiConstantParameter>[]>;
    /**
     * The description of the api. Defaults to null.
     */
    description?: pulumi.Input<string>;
    /**
     * fc_service_config defines the config when serviceType selected 'FunctionCompute'. See `fcServiceConfig` below.
     */
    fcServiceConfig?: pulumi.Input<inputs.apigateway.ApiFcServiceConfig>;
    /**
     * Whether to prevent API replay attack. Default value: `false`.
     */
    forceNonceCheck?: pulumi.Input<boolean>;
    /**
     * The api gateway that the api belongs to. Defaults to null.
     */
    groupId?: pulumi.Input<string>;
    /**
     * http_service_config defines the config when serviceType selected 'HTTP'. See `httpServiceConfig` below.
     */
    httpServiceConfig?: pulumi.Input<inputs.apigateway.ApiHttpServiceConfig>;
    /**
     * http_vpc_service_config defines the config when serviceType selected 'HTTP-VPC'. See `httpVpcServiceConfig` below.
     */
    httpVpcServiceConfig?: pulumi.Input<inputs.apigateway.ApiHttpVpcServiceConfig>;
    /**
     * http_service_config defines the config when serviceType selected 'MOCK'. See `mockServiceConfig` below.
     */
    mockServiceConfig?: pulumi.Input<inputs.apigateway.ApiMockServiceConfig>;
    /**
     * The name of the api gateway api. Defaults to null.
     */
    name?: pulumi.Input<string>;
    /**
     * Request_config defines how users can send requests to your API. See `requestConfig` below.
     */
    requestConfig?: pulumi.Input<inputs.apigateway.ApiRequestConfig>;
    /**
     * request_parameters defines the request parameters of the api. See `requestParameters` below.
     */
    requestParameters?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiRequestParameter>[]>;
    /**
     * The type of backend service. Type including HTTP, VPC, FunctionCompute and MOCK. Defaults to null.
     */
    serviceType?: pulumi.Input<string>;
    /**
     * Stages that the api need to be deployed. Valid value: `RELEASE`,`PRE`,`TEST`.
     */
    stageNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * system_parameters defines the system parameters of the api. See `systemParameters` below.
     */
    systemParameters?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiSystemParameter>[]>;
}

/**
 * The set of arguments for constructing a Api resource.
 */
export interface ApiArgs {
    /**
     * The authorization Type including APP and ANONYMOUS. Defaults to null.
     */
    authType: pulumi.Input<string>;
    /**
     * constant_parameters defines the constant parameters of the api. See `constantParameters` below.
     */
    constantParameters?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiConstantParameter>[]>;
    /**
     * The description of the api. Defaults to null.
     */
    description: pulumi.Input<string>;
    /**
     * fc_service_config defines the config when serviceType selected 'FunctionCompute'. See `fcServiceConfig` below.
     */
    fcServiceConfig?: pulumi.Input<inputs.apigateway.ApiFcServiceConfig>;
    /**
     * Whether to prevent API replay attack. Default value: `false`.
     */
    forceNonceCheck?: pulumi.Input<boolean>;
    /**
     * The api gateway that the api belongs to. Defaults to null.
     */
    groupId: pulumi.Input<string>;
    /**
     * http_service_config defines the config when serviceType selected 'HTTP'. See `httpServiceConfig` below.
     */
    httpServiceConfig?: pulumi.Input<inputs.apigateway.ApiHttpServiceConfig>;
    /**
     * http_vpc_service_config defines the config when serviceType selected 'HTTP-VPC'. See `httpVpcServiceConfig` below.
     */
    httpVpcServiceConfig?: pulumi.Input<inputs.apigateway.ApiHttpVpcServiceConfig>;
    /**
     * http_service_config defines the config when serviceType selected 'MOCK'. See `mockServiceConfig` below.
     */
    mockServiceConfig?: pulumi.Input<inputs.apigateway.ApiMockServiceConfig>;
    /**
     * The name of the api gateway api. Defaults to null.
     */
    name?: pulumi.Input<string>;
    /**
     * Request_config defines how users can send requests to your API. See `requestConfig` below.
     */
    requestConfig: pulumi.Input<inputs.apigateway.ApiRequestConfig>;
    /**
     * request_parameters defines the request parameters of the api. See `requestParameters` below.
     */
    requestParameters?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiRequestParameter>[]>;
    /**
     * The type of backend service. Type including HTTP, VPC, FunctionCompute and MOCK. Defaults to null.
     */
    serviceType: pulumi.Input<string>;
    /**
     * Stages that the api need to be deployed. Valid value: `RELEASE`,`PRE`,`TEST`.
     */
    stageNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * system_parameters defines the system parameters of the api. See `systemParameters` below.
     */
    systemParameters?: pulumi.Input<pulumi.Input<inputs.apigateway.ApiSystemParameter>[]>;
}
