// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Global Accelerator (GA) Accelerator Spare Ip Attachment resource.
 *
 * For information about Global Accelerator (GA) Accelerator Spare Ip Attachment and how to use it, see [What is Accelerator Spare Ip Attachment](https://www.alibabacloud.com/help/en/global-accelerator/latest/api-doc-ga-2019-11-20-api-doc-createspareips).
 *
 * > **NOTE:** Available since v1.167.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultAccelerator = new alicloud.ga.Accelerator("defaultAccelerator", {
 *     duration: 1,
 *     spec: "1",
 *     acceleratorName: "terraform-example",
 *     autoUseCoupon: true,
 *     description: "terraform-example",
 * });
 * const defaultBandwidthPackage = new alicloud.ga.BandwidthPackage("defaultBandwidthPackage", {
 *     bandwidth: 100,
 *     type: "Basic",
 *     bandwidthType: "Basic",
 *     paymentType: "PayAsYouGo",
 *     billingType: "PayBy95",
 *     ratio: 30,
 *     bandwidthPackageName: "terraform-example",
 *     autoPay: true,
 *     autoUseCoupon: true,
 * });
 * const defaultBandwidthPackageAttachment = new alicloud.ga.BandwidthPackageAttachment("defaultBandwidthPackageAttachment", {
 *     acceleratorId: defaultAccelerator.id,
 *     bandwidthPackageId: defaultBandwidthPackage.id,
 * });
 * const defaultAcceleratorSpareIpAttachment = new alicloud.ga.AcceleratorSpareIpAttachment("defaultAcceleratorSpareIpAttachment", {
 *     acceleratorId: defaultBandwidthPackageAttachment.acceleratorId,
 *     spareIp: "127.0.0.1",
 * });
 * ```
 *
 * ## Import
 *
 * Global Accelerator (GA) Accelerator Spare Ip Attachment can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ga/acceleratorSpareIpAttachment:AcceleratorSpareIpAttachment example <accelerator_id>:<spare_ip>
 * ```
 */
export class AcceleratorSpareIpAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AcceleratorSpareIpAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AcceleratorSpareIpAttachmentState, opts?: pulumi.CustomResourceOptions): AcceleratorSpareIpAttachment {
        return new AcceleratorSpareIpAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ga/acceleratorSpareIpAttachment:AcceleratorSpareIpAttachment';

    /**
     * Returns true if the given object is an instance of AcceleratorSpareIpAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AcceleratorSpareIpAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AcceleratorSpareIpAttachment.__pulumiType;
    }

    /**
     * The ID of the global acceleration instance.
     */
    public readonly acceleratorId!: pulumi.Output<string>;
    /**
     * The dry run.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The standby IP address of CNAME. When the acceleration area is abnormal, the traffic is switched to the standby IP address.
     */
    public readonly spareIp!: pulumi.Output<string>;
    /**
     * The status of the standby CNAME IP address.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a AcceleratorSpareIpAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AcceleratorSpareIpAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AcceleratorSpareIpAttachmentArgs | AcceleratorSpareIpAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AcceleratorSpareIpAttachmentState | undefined;
            resourceInputs["acceleratorId"] = state ? state.acceleratorId : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["spareIp"] = state ? state.spareIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AcceleratorSpareIpAttachmentArgs | undefined;
            if ((!args || args.acceleratorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorId'");
            }
            if ((!args || args.spareIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spareIp'");
            }
            resourceInputs["acceleratorId"] = args ? args.acceleratorId : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["spareIp"] = args ? args.spareIp : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AcceleratorSpareIpAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AcceleratorSpareIpAttachment resources.
 */
export interface AcceleratorSpareIpAttachmentState {
    /**
     * The ID of the global acceleration instance.
     */
    acceleratorId?: pulumi.Input<string>;
    /**
     * The dry run.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The standby IP address of CNAME. When the acceleration area is abnormal, the traffic is switched to the standby IP address.
     */
    spareIp?: pulumi.Input<string>;
    /**
     * The status of the standby CNAME IP address.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AcceleratorSpareIpAttachment resource.
 */
export interface AcceleratorSpareIpAttachmentArgs {
    /**
     * The ID of the global acceleration instance.
     */
    acceleratorId: pulumi.Input<string>;
    /**
     * The dry run.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The standby IP address of CNAME. When the acceleration area is abnormal, the traffic is switched to the standby IP address.
     */
    spareIp: pulumi.Input<string>;
}
