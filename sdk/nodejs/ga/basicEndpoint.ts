// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Global Accelerator (GA) Basic Endpoint resource.
 *
 * For information about Global Accelerator (GA) Basic Endpoint and how to use it, see [What is Basic Endpoint](https://www.alibabacloud.com/help/en/global-accelerator/latest/api-ga-2019-11-20-createbasicendpoint).
 *
 * > **NOTE:** Available since v1.194.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const region = config.get("region") || "cn-shenzhen";
 * const endpointRegion = config.get("endpointRegion") || "cn-hangzhou";
 * const sz = new alicloud.Provider("sz", {region: region});
 * const hz = new alicloud.Provider("hz", {region: endpointRegion});
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 * }, {
 *     provider: alicloud.sz,
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vswitchName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * }, {
 *     provider: alicloud.sz,
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {vpcId: defaultNetwork.id}, {
 *     provider: alicloud.sz,
 * });
 * const defaultEcsNetworkInterface = new alicloud.ecs.EcsNetworkInterface("defaultEcsNetworkInterface", {
 *     vswitchId: defaultSwitch.id,
 *     securityGroupIds: [defaultSecurityGroup.id],
 * }, {
 *     provider: alicloud.sz,
 * });
 * const defaultBasicAccelerator = new alicloud.ga.BasicAccelerator("defaultBasicAccelerator", {
 *     duration: 1,
 *     basicAcceleratorName: "terraform-example",
 *     description: "terraform-example",
 *     bandwidthBillingType: "CDT",
 *     autoUseCoupon: "true",
 *     autoPay: true,
 * });
 * const defaultBasicEndpointGroup = new alicloud.ga.BasicEndpointGroup("defaultBasicEndpointGroup", {
 *     acceleratorId: defaultBasicAccelerator.id,
 *     endpointGroupRegion: region,
 *     basicEndpointGroupName: "terraform-example",
 *     description: "terraform-example",
 * });
 * const defaultBasicEndpoint = new alicloud.ga.BasicEndpoint("defaultBasicEndpoint", {
 *     acceleratorId: defaultBasicAccelerator.id,
 *     endpointGroupId: defaultBasicEndpointGroup.id,
 *     endpointType: "ENI",
 *     endpointAddress: defaultEcsNetworkInterface.id,
 *     endpointSubAddressType: "secondary",
 *     endpointSubAddress: "192.168.0.1",
 *     basicEndpointName: "terraform-example",
 * }, {
 *     provider: alicloud.hz,
 * });
 * ```
 *
 * ## Import
 *
 * Global Accelerator (GA) Basic Endpoint can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ga/basicEndpoint:BasicEndpoint example <endpoint_group_id>:<endpoint_id>
 * ```
 */
export class BasicEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing BasicEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BasicEndpointState, opts?: pulumi.CustomResourceOptions): BasicEndpoint {
        return new BasicEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ga/basicEndpoint:BasicEndpoint';

    /**
     * Returns true if the given object is an instance of BasicEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BasicEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BasicEndpoint.__pulumiType;
    }

    /**
     * The ID of the Basic GA instance.
     */
    public readonly acceleratorId!: pulumi.Output<string>;
    /**
     * The name of the Basic Endpoint.
     */
    public readonly basicEndpointName!: pulumi.Output<string | undefined>;
    /**
     * The address of the Basic Endpoint.
     */
    public readonly endpointAddress!: pulumi.Output<string>;
    /**
     * The ID of the Basic Endpoint Group.
     */
    public readonly endpointGroupId!: pulumi.Output<string>;
    /**
     * The ID of the Basic Endpoint.
     */
    public /*out*/ readonly endpointId!: pulumi.Output<string>;
    /**
     * The sub address of the Basic Endpoint.
     */
    public readonly endpointSubAddress!: pulumi.Output<string | undefined>;
    /**
     * The sub address type of the Basic Endpoint. Valid values: `primary`, `secondary`.
     */
    public readonly endpointSubAddressType!: pulumi.Output<string | undefined>;
    /**
     * The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
     */
    public readonly endpointType!: pulumi.Output<string>;
    /**
     * The zone id of the Basic Endpoint.
     */
    public readonly endpointZoneId!: pulumi.Output<string | undefined>;
    /**
     * The status of the Basic Endpoint.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a BasicEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BasicEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BasicEndpointArgs | BasicEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BasicEndpointState | undefined;
            resourceInputs["acceleratorId"] = state ? state.acceleratorId : undefined;
            resourceInputs["basicEndpointName"] = state ? state.basicEndpointName : undefined;
            resourceInputs["endpointAddress"] = state ? state.endpointAddress : undefined;
            resourceInputs["endpointGroupId"] = state ? state.endpointGroupId : undefined;
            resourceInputs["endpointId"] = state ? state.endpointId : undefined;
            resourceInputs["endpointSubAddress"] = state ? state.endpointSubAddress : undefined;
            resourceInputs["endpointSubAddressType"] = state ? state.endpointSubAddressType : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["endpointZoneId"] = state ? state.endpointZoneId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as BasicEndpointArgs | undefined;
            if ((!args || args.acceleratorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorId'");
            }
            if ((!args || args.endpointAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointAddress'");
            }
            if ((!args || args.endpointGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointGroupId'");
            }
            if ((!args || args.endpointType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointType'");
            }
            resourceInputs["acceleratorId"] = args ? args.acceleratorId : undefined;
            resourceInputs["basicEndpointName"] = args ? args.basicEndpointName : undefined;
            resourceInputs["endpointAddress"] = args ? args.endpointAddress : undefined;
            resourceInputs["endpointGroupId"] = args ? args.endpointGroupId : undefined;
            resourceInputs["endpointSubAddress"] = args ? args.endpointSubAddress : undefined;
            resourceInputs["endpointSubAddressType"] = args ? args.endpointSubAddressType : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
            resourceInputs["endpointZoneId"] = args ? args.endpointZoneId : undefined;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BasicEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BasicEndpoint resources.
 */
export interface BasicEndpointState {
    /**
     * The ID of the Basic GA instance.
     */
    acceleratorId?: pulumi.Input<string>;
    /**
     * The name of the Basic Endpoint.
     */
    basicEndpointName?: pulumi.Input<string>;
    /**
     * The address of the Basic Endpoint.
     */
    endpointAddress?: pulumi.Input<string>;
    /**
     * The ID of the Basic Endpoint Group.
     */
    endpointGroupId?: pulumi.Input<string>;
    /**
     * The ID of the Basic Endpoint.
     */
    endpointId?: pulumi.Input<string>;
    /**
     * The sub address of the Basic Endpoint.
     */
    endpointSubAddress?: pulumi.Input<string>;
    /**
     * The sub address type of the Basic Endpoint. Valid values: `primary`, `secondary`.
     */
    endpointSubAddressType?: pulumi.Input<string>;
    /**
     * The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
     */
    endpointType?: pulumi.Input<string>;
    /**
     * The zone id of the Basic Endpoint.
     */
    endpointZoneId?: pulumi.Input<string>;
    /**
     * The status of the Basic Endpoint.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BasicEndpoint resource.
 */
export interface BasicEndpointArgs {
    /**
     * The ID of the Basic GA instance.
     */
    acceleratorId: pulumi.Input<string>;
    /**
     * The name of the Basic Endpoint.
     */
    basicEndpointName?: pulumi.Input<string>;
    /**
     * The address of the Basic Endpoint.
     */
    endpointAddress: pulumi.Input<string>;
    /**
     * The ID of the Basic Endpoint Group.
     */
    endpointGroupId: pulumi.Input<string>;
    /**
     * The sub address of the Basic Endpoint.
     */
    endpointSubAddress?: pulumi.Input<string>;
    /**
     * The sub address type of the Basic Endpoint. Valid values: `primary`, `secondary`.
     */
    endpointSubAddressType?: pulumi.Input<string>;
    /**
     * The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
     */
    endpointType: pulumi.Input<string>;
    /**
     * The zone id of the Basic Endpoint.
     */
    endpointZoneId?: pulumi.Input<string>;
}
