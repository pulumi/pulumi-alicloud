// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Global Accelerator (GA) Basic Endpoints of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.194.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.ga.getBasicEndpoints({
 *     ids: ["example_id"],
 *     endpointGroupId: "example_id",
 * });
 * export const gaBasicEndpointsId1 = ids.then(ids => ids.endpoints?.[0]?.id);
 * const nameRegex = alicloud.ga.getBasicEndpoints({
 *     nameRegex: "tf-example",
 *     endpointGroupId: "example_id",
 * });
 * export const gaBasicEndpointsId2 = nameRegex.then(nameRegex => nameRegex.endpoints?.[0]?.id);
 * ```
 */
export function getBasicEndpoints(args: GetBasicEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetBasicEndpointsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ga/getBasicEndpoints:getBasicEndpoints", {
        "endpointGroupId": args.endpointGroupId,
        "endpointId": args.endpointId,
        "endpointType": args.endpointType,
        "ids": args.ids,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getBasicEndpoints.
 */
export interface GetBasicEndpointsArgs {
    /**
     * The ID of the Basic Endpoint Group.
     */
    endpointGroupId: string;
    /**
     * The ID of the Basic Endpoint.
     */
    endpointId?: string;
    /**
     * The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
     */
    endpointType?: string;
    /**
     * A list of Global Accelerator Basic Endpoints IDs.
     */
    ids?: string[];
    /**
     * The name of the Basic Endpoint.
     */
    name?: string;
    /**
     * A regex string to filter results by Global Accelerator Basic Endpoints name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The status of the Global Accelerator Basic Endpoint. Valid Value: `init`, `active`, `updating`, `binding`, `unbinding`, `deleting`, `bound`.
     */
    status?: string;
}

/**
 * A collection of values returned by getBasicEndpoints.
 */
export interface GetBasicEndpointsResult {
    /**
     * The ID of the Basic Endpoint Group.
     */
    readonly endpointGroupId: string;
    /**
     * The ID of the Basic Endpoint.
     */
    readonly endpointId?: string;
    /**
     * The type of the Basic Endpoint.
     */
    readonly endpointType?: string;
    /**
     * A list of Global Accelerator Basic Endpoints. Each element contains the following attributes:
     */
    readonly endpoints: outputs.ga.GetBasicEndpointsEndpoint[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly name?: string;
    readonly nameRegex?: string;
    /**
     * A list of Global Accelerator Basic Endpoint names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The status of the Basic Endpoint.
     */
    readonly status?: string;
}
/**
 * This data source provides the Global Accelerator (GA) Basic Endpoints of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.194.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.ga.getBasicEndpoints({
 *     ids: ["example_id"],
 *     endpointGroupId: "example_id",
 * });
 * export const gaBasicEndpointsId1 = ids.then(ids => ids.endpoints?.[0]?.id);
 * const nameRegex = alicloud.ga.getBasicEndpoints({
 *     nameRegex: "tf-example",
 *     endpointGroupId: "example_id",
 * });
 * export const gaBasicEndpointsId2 = nameRegex.then(nameRegex => nameRegex.endpoints?.[0]?.id);
 * ```
 */
export function getBasicEndpointsOutput(args: GetBasicEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBasicEndpointsResult> {
    return pulumi.output(args).apply((a: any) => getBasicEndpoints(a, opts))
}

/**
 * A collection of arguments for invoking getBasicEndpoints.
 */
export interface GetBasicEndpointsOutputArgs {
    /**
     * The ID of the Basic Endpoint Group.
     */
    endpointGroupId: pulumi.Input<string>;
    /**
     * The ID of the Basic Endpoint.
     */
    endpointId?: pulumi.Input<string>;
    /**
     * The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
     */
    endpointType?: pulumi.Input<string>;
    /**
     * A list of Global Accelerator Basic Endpoints IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Basic Endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Global Accelerator Basic Endpoints name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The status of the Global Accelerator Basic Endpoint. Valid Value: `init`, `active`, `updating`, `binding`, `unbinding`, `deleting`, `bound`.
     */
    status?: pulumi.Input<string>;
}
