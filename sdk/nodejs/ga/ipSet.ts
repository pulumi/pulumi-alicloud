// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Global Accelerator (GA) Ip Set resource.
 *
 * For information about Global Accelerator (GA) Ip Set and how to use it, see [What is Ip Set](https://www.alibabacloud.com/help/en/doc-detail/153246.htm).
 *
 * > **NOTE:** Available in v1.113.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const exampleAccelerator = new alicloud.ga.Accelerator("exampleAccelerator", {
 *     duration: 1,
 *     autoUseCoupon: true,
 *     spec: "1",
 * });
 * const exampleBandwidthPackage = new alicloud.ga.BandwidthPackage("exampleBandwidthPackage", {
 *     bandwidth: 20,
 *     type: "Basic",
 *     bandwidthType: "Basic",
 *     duration: "1",
 *     autoPay: true,
 *     ratio: 30,
 * });
 * const exampleBandwidthPackageAttachment = new alicloud.ga.BandwidthPackageAttachment("exampleBandwidthPackageAttachment", {
 *     acceleratorId: exampleAccelerator.id,
 *     bandwidthPackageId: exampleBandwidthPackage.id,
 * });
 * const exampleIpSet = new alicloud.ga.IpSet("exampleIpSet", {
 *     accelerateRegionId: "cn-hangzhou",
 *     bandwidth: 5,
 *     acceleratorId: exampleAccelerator.id,
 * }, {
 *     dependsOn: [exampleBandwidthPackageAttachment],
 * });
 * ```
 *
 * ## Import
 *
 * Ga Ip Set can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ga/ipSet:IpSet example <id>
 * ```
 */
export class IpSet extends pulumi.CustomResource {
    /**
     * Get an existing IpSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpSetState, opts?: pulumi.CustomResourceOptions): IpSet {
        return new IpSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ga/ipSet:IpSet';

    /**
     * Returns true if the given object is an instance of IpSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpSet.__pulumiType;
    }

    /**
     * The ID of an acceleration region.
     */
    public readonly accelerateRegionId!: pulumi.Output<string>;
    /**
     * The ID of the Global Accelerator (GA) instance.
     */
    public readonly acceleratorId!: pulumi.Output<string>;
    /**
     * The bandwidth allocated to the acceleration region.
     */
    public readonly bandwidth!: pulumi.Output<number | undefined>;
    /**
     * The list of accelerated IP addresses in the acceleration region.
     */
    public /*out*/ readonly ipAddressLists!: pulumi.Output<string[]>;
    /**
     * The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value is `IPv4`.
     */
    public readonly ipVersion!: pulumi.Output<string | undefined>;
    /**
     * The status of the acceleration region.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a IpSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpSetArgs | IpSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpSetState | undefined;
            resourceInputs["accelerateRegionId"] = state ? state.accelerateRegionId : undefined;
            resourceInputs["acceleratorId"] = state ? state.acceleratorId : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["ipAddressLists"] = state ? state.ipAddressLists : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as IpSetArgs | undefined;
            if ((!args || args.accelerateRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accelerateRegionId'");
            }
            if ((!args || args.acceleratorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorId'");
            }
            resourceInputs["accelerateRegionId"] = args ? args.accelerateRegionId : undefined;
            resourceInputs["acceleratorId"] = args ? args.acceleratorId : undefined;
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["ipAddressLists"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpSet resources.
 */
export interface IpSetState {
    /**
     * The ID of an acceleration region.
     */
    accelerateRegionId?: pulumi.Input<string>;
    /**
     * The ID of the Global Accelerator (GA) instance.
     */
    acceleratorId?: pulumi.Input<string>;
    /**
     * The bandwidth allocated to the acceleration region.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The list of accelerated IP addresses in the acceleration region.
     */
    ipAddressLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value is `IPv4`.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The status of the acceleration region.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpSet resource.
 */
export interface IpSetArgs {
    /**
     * The ID of an acceleration region.
     */
    accelerateRegionId: pulumi.Input<string>;
    /**
     * The ID of the Global Accelerator (GA) instance.
     */
    acceleratorId: pulumi.Input<string>;
    /**
     * The bandwidth allocated to the acceleration region.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value is `IPv4`.
     */
    ipVersion?: pulumi.Input<string>;
}
