// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Global Accelerator (GA) Forwarding Rule resource.
 *
 * For information about Global Accelerator (GA) Forwarding Rule and how to use it, see [What is Forwarding Rule](https://www.alibabacloud.com/help/en/global-accelerator/latest/api-ga-2019-11-20-createforwardingrules).
 *
 * > **NOTE:** Available since v1.120.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const region = config.get("region") || "cn-hangzhou";
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.getRegions({
 *     current: true,
 * });
 * const example = new alicloud.ga.Accelerator("example", {
 *     duration: 3,
 *     spec: "2",
 *     acceleratorName: name,
 *     autoUseCoupon: false,
 *     description: name,
 *     autoRenewDuration: 2,
 *     renewalStatus: "AutoRenewal",
 * });
 * const exampleBandwidthPackage = new alicloud.ga.BandwidthPackage("example", {
 *     type: "Basic",
 *     bandwidth: 20,
 *     bandwidthType: "Basic",
 *     duration: "1",
 *     autoPay: true,
 *     paymentType: "Subscription",
 *     autoUseCoupon: false,
 *     bandwidthPackageName: name,
 *     description: name,
 * });
 * const exampleBandwidthPackageAttachment = new alicloud.ga.BandwidthPackageAttachment("example", {
 *     acceleratorId: example.id,
 *     bandwidthPackageId: exampleBandwidthPackage.id,
 * });
 * const exampleListener = new alicloud.ga.Listener("example", {
 *     acceleratorId: exampleBandwidthPackageAttachment.acceleratorId,
 *     clientAffinity: "SOURCE_IP",
 *     description: name,
 *     name: name,
 *     protocol: "HTTP",
 *     proxyProtocol: true,
 *     portRanges: [{
 *         fromPort: 60,
 *         toPort: 60,
 *     }],
 * });
 * const exampleEipAddress = new alicloud.ecs.EipAddress("example", {
 *     bandwidth: "10",
 *     internetChargeType: "PayByBandwidth",
 * });
 * const virtual = new alicloud.ga.EndpointGroup("virtual", {
 *     acceleratorId: example.id,
 *     endpointConfigurations: [{
 *         endpoint: exampleEipAddress.ipAddress,
 *         type: "PublicIp",
 *         weight: 20,
 *         enableClientipPreservation: true,
 *     }],
 *     endpointGroupRegion: _default.then(_default => _default.regions?.[0]?.id),
 *     listenerId: exampleListener.id,
 *     description: name,
 *     endpointGroupType: "virtual",
 *     endpointRequestProtocol: "HTTPS",
 *     healthCheckIntervalSeconds: 4,
 *     healthCheckPath: "/path",
 *     name: name,
 *     thresholdCount: 4,
 *     trafficPercentage: 20,
 *     portOverrides: {
 *         endpointPort: 80,
 *         listenerPort: 60,
 *     },
 * });
 * const exampleForwardingRule = new alicloud.ga.ForwardingRule("example", {
 *     acceleratorId: example.id,
 *     listenerId: exampleListener.id,
 *     ruleConditions: [
 *         {
 *             ruleConditionType: "Path",
 *             pathConfig: {
 *                 values: ["/testpathconfig"],
 *             },
 *         },
 *         {
 *             ruleConditionType: "Host",
 *             hostConfigs: [{
 *                 values: ["www.test.com"],
 *             }],
 *         },
 *     ],
 *     ruleActions: [{
 *         order: 40,
 *         ruleActionType: "ForwardGroup",
 *         forwardGroupConfig: {
 *             serverGroupTuples: [{
 *                 endpointGroupId: virtual.id,
 *             }],
 *         },
 *     }],
 *     priority: 2,
 *     forwardingRuleName: name,
 * });
 * ```
 *
 * ## Import
 *
 * Ga Forwarding Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ga/forwardingRule:ForwardingRule example <accelerator_id>:<listener_id>:<forwarding_rule_id>
 * ```
 */
export class ForwardingRule extends pulumi.CustomResource {
    /**
     * Get an existing ForwardingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ForwardingRuleState, opts?: pulumi.CustomResourceOptions): ForwardingRule {
        return new ForwardingRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ga/forwardingRule:ForwardingRule';

    /**
     * Returns true if the given object is an instance of ForwardingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ForwardingRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ForwardingRule.__pulumiType;
    }

    /**
     * The ID of the Global Accelerator instance.
     */
    declare public readonly acceleratorId: pulumi.Output<string>;
    /**
     * The ID of the Forwarding Rule.
     */
    declare public /*out*/ readonly forwardingRuleId: pulumi.Output<string>;
    /**
     * Forwarding policy name. The length of the name is 2-128 English or Chinese characters. It must start with uppercase and lowercase letters or Chinese characters. It can contain numbers, half width period (.), underscores (_) And dash (-).
     */
    declare public readonly forwardingRuleName: pulumi.Output<string | undefined>;
    /**
     * The status of the Forwarding Rule.
     */
    declare public /*out*/ readonly forwardingRuleStatus: pulumi.Output<string>;
    /**
     * The ID of the listener.
     */
    declare public readonly listenerId: pulumi.Output<string>;
    /**
     * Forwarding policy priority.
     */
    declare public readonly priority: pulumi.Output<number>;
    /**
     * Forward action. See `ruleActions` below.
     */
    declare public readonly ruleActions: pulumi.Output<outputs.ga.ForwardingRuleRuleAction[]>;
    /**
     * Forwarding condition list. See `ruleConditions` below.
     */
    declare public readonly ruleConditions: pulumi.Output<outputs.ga.ForwardingRuleRuleCondition[]>;

    /**
     * Create a ForwardingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ForwardingRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ForwardingRuleArgs | ForwardingRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ForwardingRuleState | undefined;
            resourceInputs["acceleratorId"] = state?.acceleratorId;
            resourceInputs["forwardingRuleId"] = state?.forwardingRuleId;
            resourceInputs["forwardingRuleName"] = state?.forwardingRuleName;
            resourceInputs["forwardingRuleStatus"] = state?.forwardingRuleStatus;
            resourceInputs["listenerId"] = state?.listenerId;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["ruleActions"] = state?.ruleActions;
            resourceInputs["ruleConditions"] = state?.ruleConditions;
        } else {
            const args = argsOrState as ForwardingRuleArgs | undefined;
            if (args?.acceleratorId === undefined && !opts.urn) {
                throw new Error("Missing required property 'acceleratorId'");
            }
            if (args?.listenerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            if (args?.ruleActions === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleActions'");
            }
            if (args?.ruleConditions === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleConditions'");
            }
            resourceInputs["acceleratorId"] = args?.acceleratorId;
            resourceInputs["forwardingRuleName"] = args?.forwardingRuleName;
            resourceInputs["listenerId"] = args?.listenerId;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["ruleActions"] = args?.ruleActions;
            resourceInputs["ruleConditions"] = args?.ruleConditions;
            resourceInputs["forwardingRuleId"] = undefined /*out*/;
            resourceInputs["forwardingRuleStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ForwardingRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ForwardingRule resources.
 */
export interface ForwardingRuleState {
    /**
     * The ID of the Global Accelerator instance.
     */
    acceleratorId?: pulumi.Input<string>;
    /**
     * The ID of the Forwarding Rule.
     */
    forwardingRuleId?: pulumi.Input<string>;
    /**
     * Forwarding policy name. The length of the name is 2-128 English or Chinese characters. It must start with uppercase and lowercase letters or Chinese characters. It can contain numbers, half width period (.), underscores (_) And dash (-).
     */
    forwardingRuleName?: pulumi.Input<string>;
    /**
     * The status of the Forwarding Rule.
     */
    forwardingRuleStatus?: pulumi.Input<string>;
    /**
     * The ID of the listener.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * Forwarding policy priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Forward action. See `ruleActions` below.
     */
    ruleActions?: pulumi.Input<pulumi.Input<inputs.ga.ForwardingRuleRuleAction>[]>;
    /**
     * Forwarding condition list. See `ruleConditions` below.
     */
    ruleConditions?: pulumi.Input<pulumi.Input<inputs.ga.ForwardingRuleRuleCondition>[]>;
}

/**
 * The set of arguments for constructing a ForwardingRule resource.
 */
export interface ForwardingRuleArgs {
    /**
     * The ID of the Global Accelerator instance.
     */
    acceleratorId: pulumi.Input<string>;
    /**
     * Forwarding policy name. The length of the name is 2-128 English or Chinese characters. It must start with uppercase and lowercase letters or Chinese characters. It can contain numbers, half width period (.), underscores (_) And dash (-).
     */
    forwardingRuleName?: pulumi.Input<string>;
    /**
     * The ID of the listener.
     */
    listenerId: pulumi.Input<string>;
    /**
     * Forwarding policy priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Forward action. See `ruleActions` below.
     */
    ruleActions: pulumi.Input<pulumi.Input<inputs.ga.ForwardingRuleRuleAction>[]>;
    /**
     * Forwarding condition list. See `ruleConditions` below.
     */
    ruleConditions: pulumi.Input<pulumi.Input<inputs.ga.ForwardingRuleRuleCondition>[]>;
}
