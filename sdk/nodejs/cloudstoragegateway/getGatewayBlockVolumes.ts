// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Cloud Storage Gateway Gateway Block Volumes of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.144.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.cloudstoragegateway.getGatewayBlockVolumes({
 *     gatewayId: "example_value",
 *     ids: [
 *         "example_value-1",
 *         "example_value-2",
 *     ],
 * });
 * export const cloudStorageGatewayGatewayBlockVolumeId1 = ids.then(ids => ids.volumes?[0]?.id);
 * const nameRegex = alicloud.cloudstoragegateway.getGatewayBlockVolumes({
 *     gatewayId: "example_value",
 *     nameRegex: "^my-GatewayBlockVolume",
 * });
 * export const cloudStorageGatewayGatewayBlockVolumeId2 = nameRegex.then(nameRegex => nameRegex.volumes?[0]?.id);
 * ```
 */
export function getGatewayBlockVolumes(args: GetGatewayBlockVolumesArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayBlockVolumesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:cloudstoragegateway/getGatewayBlockVolumes:getGatewayBlockVolumes", {
        "gatewayId": args.gatewayId,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewayBlockVolumes.
 */
export interface GetGatewayBlockVolumesArgs {
    /**
     * The Gateway ID.
     */
    gatewayId: string;
    /**
     * A list of Gateway Block Volume IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Gateway Block Volume name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The status of volume.
     */
    status?: number;
}

/**
 * A collection of values returned by getGatewayBlockVolumes.
 */
export interface GetGatewayBlockVolumesResult {
    readonly gatewayId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly status?: number;
    readonly volumes: outputs.cloudstoragegateway.GetGatewayBlockVolumesVolume[];
}

export function getGatewayBlockVolumesOutput(args: GetGatewayBlockVolumesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayBlockVolumesResult> {
    return pulumi.output(args).apply(a => getGatewayBlockVolumes(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayBlockVolumes.
 */
export interface GetGatewayBlockVolumesOutputArgs {
    /**
     * The Gateway ID.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * A list of Gateway Block Volume IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Gateway Block Volume name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The status of volume.
     */
    status?: pulumi.Input<number>;
}
