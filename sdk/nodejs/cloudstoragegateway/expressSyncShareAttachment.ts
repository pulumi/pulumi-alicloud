// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Storage Gateway Express Sync Share Attachment resource.
 *
 * For information about Cloud Storage Gateway Express Sync Share Attachment and how to use it, see [What is Express Sync Share Attachment](https://www.alibabacloud.com/help/en/cloud-storage-gateway/latest/addsharestoexpresssync).
 *
 * > **NOTE:** Available since v1.144.0.
 *
 * ## Import
 *
 * Cloud Storage Gateway Express Sync Share Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cloudstoragegateway/expressSyncShareAttachment:ExpressSyncShareAttachment example <express_sync_id>:<gateway_id>:<share_name>
 * ```
 */
export class ExpressSyncShareAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ExpressSyncShareAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExpressSyncShareAttachmentState, opts?: pulumi.CustomResourceOptions): ExpressSyncShareAttachment {
        return new ExpressSyncShareAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cloudstoragegateway/expressSyncShareAttachment:ExpressSyncShareAttachment';

    /**
     * Returns true if the given object is an instance of ExpressSyncShareAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExpressSyncShareAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExpressSyncShareAttachment.__pulumiType;
    }

    /**
     * The ID of the ExpressSync.
     */
    declare public readonly expressSyncId: pulumi.Output<string>;
    /**
     * The ID of the Gateway.
     */
    declare public readonly gatewayId: pulumi.Output<string>;
    /**
     * The name of the GatewayFileShare. **NOTE:** When GatewayFileShare is associated with a speed sync group, its reverse synchronization function will be turned off by default.
     */
    declare public readonly shareName: pulumi.Output<string>;

    /**
     * Create a ExpressSyncShareAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExpressSyncShareAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExpressSyncShareAttachmentArgs | ExpressSyncShareAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExpressSyncShareAttachmentState | undefined;
            resourceInputs["expressSyncId"] = state?.expressSyncId;
            resourceInputs["gatewayId"] = state?.gatewayId;
            resourceInputs["shareName"] = state?.shareName;
        } else {
            const args = argsOrState as ExpressSyncShareAttachmentArgs | undefined;
            if (args?.expressSyncId === undefined && !opts.urn) {
                throw new Error("Missing required property 'expressSyncId'");
            }
            if (args?.gatewayId === undefined && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if (args?.shareName === undefined && !opts.urn) {
                throw new Error("Missing required property 'shareName'");
            }
            resourceInputs["expressSyncId"] = args?.expressSyncId;
            resourceInputs["gatewayId"] = args?.gatewayId;
            resourceInputs["shareName"] = args?.shareName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExpressSyncShareAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExpressSyncShareAttachment resources.
 */
export interface ExpressSyncShareAttachmentState {
    /**
     * The ID of the ExpressSync.
     */
    expressSyncId?: pulumi.Input<string>;
    /**
     * The ID of the Gateway.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * The name of the GatewayFileShare. **NOTE:** When GatewayFileShare is associated with a speed sync group, its reverse synchronization function will be turned off by default.
     */
    shareName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExpressSyncShareAttachment resource.
 */
export interface ExpressSyncShareAttachmentArgs {
    /**
     * The ID of the ExpressSync.
     */
    expressSyncId: pulumi.Input<string>;
    /**
     * The ID of the Gateway.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * The name of the GatewayFileShare. **NOTE:** When GatewayFileShare is associated with a speed sync group, its reverse synchronization function will be turned off by default.
     */
    shareName: pulumi.Input<string>;
}
