// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Origin Rule resource.
 *
 * For information about ESA Origin Rule and how to use it, see [What is Origin Rule](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateOriginRule).
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const defaultOriginRule = new alicloud.esa.OriginRule("default", {
 *     originSni: "origin.example.com",
 *     siteId: _default.then(_default => _default.sites?.[0]?.id),
 *     originHost: "origin.example.com",
 *     dnsRecord: "tf.example.com",
 *     siteVersion: 0,
 *     ruleName: "tf",
 *     originHttpsPort: "443",
 *     originScheme: "http",
 *     range: "on",
 *     originHttpPort: "8080",
 *     rule: "(http.host eq \"video.example.com\")",
 *     ruleEnable: "on",
 * });
 * ```
 *
 * ## Import
 *
 * ESA Origin Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/originRule:OriginRule example <site_id>:<config_id>
 * ```
 */
export class OriginRule extends pulumi.CustomResource {
    /**
     * Get an existing OriginRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OriginRuleState, opts?: pulumi.CustomResourceOptions): OriginRule {
        return new OriginRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/originRule:OriginRule';

    /**
     * Returns true if the given object is an instance of OriginRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OriginRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OriginRule.__pulumiType;
    }

    /**
     * Back-to-source rule configuration ID
     */
    declare public /*out*/ readonly configId: pulumi.Output<number>;
    /**
     * Overwrite the DNS resolution record of the origin request.
     */
    declare public readonly dnsRecord: pulumi.Output<string | undefined>;
    /**
     * The HOST carried in the back-to-origin request.
     */
    declare public readonly originHost: pulumi.Output<string | undefined>;
    /**
     * The port of the origin station accessed when the HTTP protocol is used to return to the origin.
     */
    declare public readonly originHttpPort: pulumi.Output<string | undefined>;
    /**
     * The port of the origin station accessed when the HTTPS protocol is used to return to the origin.
     */
    declare public readonly originHttpsPort: pulumi.Output<string | undefined>;
    /**
     * The protocol used by the back-to-origin request. Value range:
     */
    declare public readonly originScheme: pulumi.Output<string | undefined>;
    /**
     * SNI carried in the back-to-origin request.
     */
    declare public readonly originSni: pulumi.Output<string | undefined>;
    /**
     * Use the range sharding method to download the file from the source. Value range:
     */
    declare public readonly range: pulumi.Output<string | undefined>;
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
     */
    declare public readonly rule: pulumi.Output<string | undefined>;
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * - on: open.
     * - off: close.
     */
    declare public readonly ruleEnable: pulumi.Output<string | undefined>;
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     */
    declare public readonly ruleName: pulumi.Output<string | undefined>;
    /**
     * The site ID.
     */
    declare public readonly siteId: pulumi.Output<number>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    declare public readonly siteVersion: pulumi.Output<number | undefined>;

    /**
     * Create a OriginRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OriginRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OriginRuleArgs | OriginRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OriginRuleState | undefined;
            resourceInputs["configId"] = state?.configId;
            resourceInputs["dnsRecord"] = state?.dnsRecord;
            resourceInputs["originHost"] = state?.originHost;
            resourceInputs["originHttpPort"] = state?.originHttpPort;
            resourceInputs["originHttpsPort"] = state?.originHttpsPort;
            resourceInputs["originScheme"] = state?.originScheme;
            resourceInputs["originSni"] = state?.originSni;
            resourceInputs["range"] = state?.range;
            resourceInputs["rule"] = state?.rule;
            resourceInputs["ruleEnable"] = state?.ruleEnable;
            resourceInputs["ruleName"] = state?.ruleName;
            resourceInputs["siteId"] = state?.siteId;
            resourceInputs["siteVersion"] = state?.siteVersion;
        } else {
            const args = argsOrState as OriginRuleArgs | undefined;
            if (args?.siteId === undefined && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["dnsRecord"] = args?.dnsRecord;
            resourceInputs["originHost"] = args?.originHost;
            resourceInputs["originHttpPort"] = args?.originHttpPort;
            resourceInputs["originHttpsPort"] = args?.originHttpsPort;
            resourceInputs["originScheme"] = args?.originScheme;
            resourceInputs["originSni"] = args?.originSni;
            resourceInputs["range"] = args?.range;
            resourceInputs["rule"] = args?.rule;
            resourceInputs["ruleEnable"] = args?.ruleEnable;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["siteId"] = args?.siteId;
            resourceInputs["siteVersion"] = args?.siteVersion;
            resourceInputs["configId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OriginRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OriginRule resources.
 */
export interface OriginRuleState {
    /**
     * Back-to-source rule configuration ID
     */
    configId?: pulumi.Input<number>;
    /**
     * Overwrite the DNS resolution record of the origin request.
     */
    dnsRecord?: pulumi.Input<string>;
    /**
     * The HOST carried in the back-to-origin request.
     */
    originHost?: pulumi.Input<string>;
    /**
     * The port of the origin station accessed when the HTTP protocol is used to return to the origin.
     */
    originHttpPort?: pulumi.Input<string>;
    /**
     * The port of the origin station accessed when the HTTPS protocol is used to return to the origin.
     */
    originHttpsPort?: pulumi.Input<string>;
    /**
     * The protocol used by the back-to-origin request. Value range:
     */
    originScheme?: pulumi.Input<string>;
    /**
     * SNI carried in the back-to-origin request.
     */
    originSni?: pulumi.Input<string>;
    /**
     * Use the range sharding method to download the file from the source. Value range:
     */
    range?: pulumi.Input<string>;
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
     */
    rule?: pulumi.Input<string>;
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * - on: open.
     * - off: close.
     */
    ruleEnable?: pulumi.Input<string>;
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The site ID.
     */
    siteId?: pulumi.Input<number>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    siteVersion?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a OriginRule resource.
 */
export interface OriginRuleArgs {
    /**
     * Overwrite the DNS resolution record of the origin request.
     */
    dnsRecord?: pulumi.Input<string>;
    /**
     * The HOST carried in the back-to-origin request.
     */
    originHost?: pulumi.Input<string>;
    /**
     * The port of the origin station accessed when the HTTP protocol is used to return to the origin.
     */
    originHttpPort?: pulumi.Input<string>;
    /**
     * The port of the origin station accessed when the HTTPS protocol is used to return to the origin.
     */
    originHttpsPort?: pulumi.Input<string>;
    /**
     * The protocol used by the back-to-origin request. Value range:
     */
    originScheme?: pulumi.Input<string>;
    /**
     * SNI carried in the back-to-origin request.
     */
    originSni?: pulumi.Input<string>;
    /**
     * Use the range sharding method to download the file from the source. Value range:
     */
    range?: pulumi.Input<string>;
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
     */
    rule?: pulumi.Input<string>;
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * - on: open.
     * - off: close.
     */
    ruleEnable?: pulumi.Input<string>;
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The site ID.
     */
    siteId: pulumi.Input<number>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    siteVersion?: pulumi.Input<number>;
}
