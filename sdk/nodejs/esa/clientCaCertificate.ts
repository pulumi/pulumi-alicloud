// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Client Ca Certificate resource.
 *
 * For information about ESA Client Ca Certificate and how to use it, see [What is Client Ca Certificate](https://next.api.alibabacloud.com/document/ESA/2024-09-10/UploadClientCaCertificate).
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 *     siteName: "gositecdn.cn",
 * });
 * const defaultClientCaCertificate = new alicloud.esa.ClientCaCertificate("default", {
 *     certificate: `-----BEGIN CERTIFICATE-----
 * ****-----END CERTIFICATE-----`,
 *     clientCaCertName: "example",
 *     siteId: _default.then(_default => _default.sites?.[0]?.id),
 * });
 * ```
 *
 * ## Import
 *
 * ESA Client Ca Certificate can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/clientCaCertificate:ClientCaCertificate example <site_id>:<client_ca_cert_id>
 * ```
 */
export class ClientCaCertificate extends pulumi.CustomResource {
    /**
     * Get an existing ClientCaCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClientCaCertificateState, opts?: pulumi.CustomResourceOptions): ClientCaCertificate {
        return new ClientCaCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/clientCaCertificate:ClientCaCertificate';

    /**
     * Returns true if the given object is an instance of ClientCaCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClientCaCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClientCaCertificate.__pulumiType;
    }

    /**
     * Certificate content.
     */
    public readonly certificate!: pulumi.Output<string>;
    /**
     * ClientCaCertificate Id
     */
    public /*out*/ readonly clientCaCertId!: pulumi.Output<string>;
    /**
     * The certificate name.
     */
    public readonly clientCaCertName!: pulumi.Output<string | undefined>;
    /**
     * Creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Site Id
     */
    public readonly siteId!: pulumi.Output<number>;
    /**
     * Certificate status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ClientCaCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClientCaCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClientCaCertificateArgs | ClientCaCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClientCaCertificateState | undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["clientCaCertId"] = state ? state.clientCaCertId : undefined;
            resourceInputs["clientCaCertName"] = state ? state.clientCaCertName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ClientCaCertificateArgs | undefined;
            if ((!args || args.certificate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificate'");
            }
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["clientCaCertName"] = args ? args.clientCaCertName : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["clientCaCertId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClientCaCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClientCaCertificate resources.
 */
export interface ClientCaCertificateState {
    /**
     * Certificate content.
     */
    certificate?: pulumi.Input<string>;
    /**
     * ClientCaCertificate Id
     */
    clientCaCertId?: pulumi.Input<string>;
    /**
     * The certificate name.
     */
    clientCaCertName?: pulumi.Input<string>;
    /**
     * Creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Site Id
     */
    siteId?: pulumi.Input<number>;
    /**
     * Certificate status.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClientCaCertificate resource.
 */
export interface ClientCaCertificateArgs {
    /**
     * Certificate content.
     */
    certificate: pulumi.Input<string>;
    /**
     * The certificate name.
     */
    clientCaCertName?: pulumi.Input<string>;
    /**
     * Site Id
     */
    siteId: pulumi.Input<number>;
}
