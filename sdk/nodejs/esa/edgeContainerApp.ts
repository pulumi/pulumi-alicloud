// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Edge Container App resource.
 *
 * For information about ESA Edge Container App and how to use it, see [What is Edge Container App](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateEdgeContainerApp).
 *
 * > **NOTE:** Available since v1.247.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tfexample";
 * const _default = new alicloud.esa.EdgeContainerApp("default", {
 *     targetPort: 3000,
 *     healthCheckHost: "example.com",
 *     remarks: name,
 *     healthCheckPort: 80,
 *     healthCheckUri: "/",
 *     healthCheckTimeout: 3,
 *     healthCheckMethod: "HEAD",
 *     healthCheckHttpCode: "http_2xx",
 *     healthCheckFailTimes: 5,
 *     servicePort: 80,
 *     healthCheckInterval: 5,
 *     healthCheckSuccTimes: 2,
 *     edgeContainerAppName: name,
 *     healthCheckType: "l7",
 * });
 * ```
 *
 * ## Import
 *
 * ESA Edge Container App can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/edgeContainerApp:EdgeContainerApp example <id>
 * ```
 */
export class EdgeContainerApp extends pulumi.CustomResource {
    /**
     * Get an existing EdgeContainerApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeContainerAppState, opts?: pulumi.CustomResourceOptions): EdgeContainerApp {
        return new EdgeContainerApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/edgeContainerApp:EdgeContainerApp';

    /**
     * Returns true if the given object is an instance of EdgeContainerApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeContainerApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeContainerApp.__pulumiType;
    }

    /**
     * The time when the application was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The application name must start with a lowercase letter. Lowercase letters, numbers, and bars are supported. The length is limited to 6 to 128 characters.
     */
    declare public readonly edgeContainerAppName: pulumi.Output<string>;
    /**
     * The number of consecutive successful health checks required for an application to be considered as healthy. Valid values: 1 to 10. Default value: 2.
     */
    declare public readonly healthCheckFailTimes: pulumi.Output<number | undefined>;
    /**
     * The health check type. By default, this parameter is left empty.
     *
     * Valid values:
     */
    declare public readonly healthCheckHost: pulumi.Output<string | undefined>;
    /**
     * The domain name that is used for health checks. This parameter is empty by default.
     */
    declare public readonly healthCheckHttpCode: pulumi.Output<string>;
    /**
     * The timeout period of a health check response. If a backend ECS instance does not respond within the specified timeout period, the ECS instance fails the health check. Unit: seconds.
     * Valid values: `1` to `100`.
     * Default value: `3`.
     */
    declare public readonly healthCheckInterval: pulumi.Output<number>;
    /**
     * The HTTP status code returned for a successful health check. Valid values:
     *
     * - **http\_2xx** (default)
     * - **http\_3xx**
     */
    declare public readonly healthCheckMethod: pulumi.Output<string>;
    /**
     * The URI used for health checks. The URI must be `1` to `80` characters in length. Default value: "/".
     */
    declare public readonly healthCheckPort: pulumi.Output<number>;
    /**
     * The interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `5`.
     */
    declare public readonly healthCheckSuccTimes: pulumi.Output<number>;
    /**
     * The port used for health checks. Valid values: 1 to 65535. Default value: 80.
     */
    declare public readonly healthCheckTimeout: pulumi.Output<number>;
    /**
     * The remarks. This parameter is empty by default.
     */
    declare public readonly healthCheckType: pulumi.Output<string>;
    /**
     * The HTTP request method for health checks. Valid values:
     *
     * - `HEAD` (default): requests the headers of the resource.
     * - `GET`: requests the specified resource and returns both the headers and entity body.
     */
    declare public readonly healthCheckUri: pulumi.Output<string>;
    /**
     * The backend port, which is also the service port of the application. Valid values: 1 to 65535.
     */
    declare public readonly remarks: pulumi.Output<string | undefined>;
    /**
     * The name of the application. The name must start with a lowercase letter and can contain lowercase letters, digits, and hyphens (-). The name must be 6 to 128 characters in length.
     */
    declare public readonly servicePort: pulumi.Output<number>;
    /**
     * The status of the application.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The server port. Valid values: 1 to 65535.
     */
    declare public readonly targetPort: pulumi.Output<number>;

    /**
     * Create a EdgeContainerApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeContainerAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeContainerAppArgs | EdgeContainerAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeContainerAppState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["edgeContainerAppName"] = state?.edgeContainerAppName;
            resourceInputs["healthCheckFailTimes"] = state?.healthCheckFailTimes;
            resourceInputs["healthCheckHost"] = state?.healthCheckHost;
            resourceInputs["healthCheckHttpCode"] = state?.healthCheckHttpCode;
            resourceInputs["healthCheckInterval"] = state?.healthCheckInterval;
            resourceInputs["healthCheckMethod"] = state?.healthCheckMethod;
            resourceInputs["healthCheckPort"] = state?.healthCheckPort;
            resourceInputs["healthCheckSuccTimes"] = state?.healthCheckSuccTimes;
            resourceInputs["healthCheckTimeout"] = state?.healthCheckTimeout;
            resourceInputs["healthCheckType"] = state?.healthCheckType;
            resourceInputs["healthCheckUri"] = state?.healthCheckUri;
            resourceInputs["remarks"] = state?.remarks;
            resourceInputs["servicePort"] = state?.servicePort;
            resourceInputs["status"] = state?.status;
            resourceInputs["targetPort"] = state?.targetPort;
        } else {
            const args = argsOrState as EdgeContainerAppArgs | undefined;
            if (args?.edgeContainerAppName === undefined && !opts.urn) {
                throw new Error("Missing required property 'edgeContainerAppName'");
            }
            if (args?.servicePort === undefined && !opts.urn) {
                throw new Error("Missing required property 'servicePort'");
            }
            if (args?.targetPort === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetPort'");
            }
            resourceInputs["edgeContainerAppName"] = args?.edgeContainerAppName;
            resourceInputs["healthCheckFailTimes"] = args?.healthCheckFailTimes;
            resourceInputs["healthCheckHost"] = args?.healthCheckHost;
            resourceInputs["healthCheckHttpCode"] = args?.healthCheckHttpCode;
            resourceInputs["healthCheckInterval"] = args?.healthCheckInterval;
            resourceInputs["healthCheckMethod"] = args?.healthCheckMethod;
            resourceInputs["healthCheckPort"] = args?.healthCheckPort;
            resourceInputs["healthCheckSuccTimes"] = args?.healthCheckSuccTimes;
            resourceInputs["healthCheckTimeout"] = args?.healthCheckTimeout;
            resourceInputs["healthCheckType"] = args?.healthCheckType;
            resourceInputs["healthCheckUri"] = args?.healthCheckUri;
            resourceInputs["remarks"] = args?.remarks;
            resourceInputs["servicePort"] = args?.servicePort;
            resourceInputs["targetPort"] = args?.targetPort;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeContainerApp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeContainerApp resources.
 */
export interface EdgeContainerAppState {
    /**
     * The time when the application was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The application name must start with a lowercase letter. Lowercase letters, numbers, and bars are supported. The length is limited to 6 to 128 characters.
     */
    edgeContainerAppName?: pulumi.Input<string>;
    /**
     * The number of consecutive successful health checks required for an application to be considered as healthy. Valid values: 1 to 10. Default value: 2.
     */
    healthCheckFailTimes?: pulumi.Input<number>;
    /**
     * The health check type. By default, this parameter is left empty.
     *
     * Valid values:
     */
    healthCheckHost?: pulumi.Input<string>;
    /**
     * The domain name that is used for health checks. This parameter is empty by default.
     */
    healthCheckHttpCode?: pulumi.Input<string>;
    /**
     * The timeout period of a health check response. If a backend ECS instance does not respond within the specified timeout period, the ECS instance fails the health check. Unit: seconds.
     * Valid values: `1` to `100`.
     * Default value: `3`.
     */
    healthCheckInterval?: pulumi.Input<number>;
    /**
     * The HTTP status code returned for a successful health check. Valid values:
     *
     * - **http\_2xx** (default)
     * - **http\_3xx**
     */
    healthCheckMethod?: pulumi.Input<string>;
    /**
     * The URI used for health checks. The URI must be `1` to `80` characters in length. Default value: "/".
     */
    healthCheckPort?: pulumi.Input<number>;
    /**
     * The interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `5`.
     */
    healthCheckSuccTimes?: pulumi.Input<number>;
    /**
     * The port used for health checks. Valid values: 1 to 65535. Default value: 80.
     */
    healthCheckTimeout?: pulumi.Input<number>;
    /**
     * The remarks. This parameter is empty by default.
     */
    healthCheckType?: pulumi.Input<string>;
    /**
     * The HTTP request method for health checks. Valid values:
     *
     * - `HEAD` (default): requests the headers of the resource.
     * - `GET`: requests the specified resource and returns both the headers and entity body.
     */
    healthCheckUri?: pulumi.Input<string>;
    /**
     * The backend port, which is also the service port of the application. Valid values: 1 to 65535.
     */
    remarks?: pulumi.Input<string>;
    /**
     * The name of the application. The name must start with a lowercase letter and can contain lowercase letters, digits, and hyphens (-). The name must be 6 to 128 characters in length.
     */
    servicePort?: pulumi.Input<number>;
    /**
     * The status of the application.
     */
    status?: pulumi.Input<string>;
    /**
     * The server port. Valid values: 1 to 65535.
     */
    targetPort?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a EdgeContainerApp resource.
 */
export interface EdgeContainerAppArgs {
    /**
     * The application name must start with a lowercase letter. Lowercase letters, numbers, and bars are supported. The length is limited to 6 to 128 characters.
     */
    edgeContainerAppName: pulumi.Input<string>;
    /**
     * The number of consecutive successful health checks required for an application to be considered as healthy. Valid values: 1 to 10. Default value: 2.
     */
    healthCheckFailTimes?: pulumi.Input<number>;
    /**
     * The health check type. By default, this parameter is left empty.
     *
     * Valid values:
     */
    healthCheckHost?: pulumi.Input<string>;
    /**
     * The domain name that is used for health checks. This parameter is empty by default.
     */
    healthCheckHttpCode?: pulumi.Input<string>;
    /**
     * The timeout period of a health check response. If a backend ECS instance does not respond within the specified timeout period, the ECS instance fails the health check. Unit: seconds.
     * Valid values: `1` to `100`.
     * Default value: `3`.
     */
    healthCheckInterval?: pulumi.Input<number>;
    /**
     * The HTTP status code returned for a successful health check. Valid values:
     *
     * - **http\_2xx** (default)
     * - **http\_3xx**
     */
    healthCheckMethod?: pulumi.Input<string>;
    /**
     * The URI used for health checks. The URI must be `1` to `80` characters in length. Default value: "/".
     */
    healthCheckPort?: pulumi.Input<number>;
    /**
     * The interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `5`.
     */
    healthCheckSuccTimes?: pulumi.Input<number>;
    /**
     * The port used for health checks. Valid values: 1 to 65535. Default value: 80.
     */
    healthCheckTimeout?: pulumi.Input<number>;
    /**
     * The remarks. This parameter is empty by default.
     */
    healthCheckType?: pulumi.Input<string>;
    /**
     * The HTTP request method for health checks. Valid values:
     *
     * - `HEAD` (default): requests the headers of the resource.
     * - `GET`: requests the specified resource and returns both the headers and entity body.
     */
    healthCheckUri?: pulumi.Input<string>;
    /**
     * The backend port, which is also the service port of the application. Valid values: 1 to 65535.
     */
    remarks?: pulumi.Input<string>;
    /**
     * The name of the application. The name must start with a lowercase letter and can contain lowercase letters, digits, and hyphens (-). The name must be 6 to 128 characters in length.
     */
    servicePort: pulumi.Input<number>;
    /**
     * The server port. Valid values: 1 to 65535.
     */
    targetPort: pulumi.Input<number>;
}
