// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Esa Site available to the user.[What is Site](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateSite)
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultIEoDfU = new alicloud.esa.RatePlanInstance("defaultIEoDfU", {
 *     type: "NS",
 *     autoRenew: true,
 *     period: 1,
 *     paymentType: "Subscription",
 *     coverage: "overseas",
 *     autoPay: true,
 *     planName: "basic",
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: "bcd.com",
 *     coverage: "overseas",
 *     accessType: "NS",
 *     instanceId: defaultIEoDfU.id,
 * });
 * const _default = alicloud.esa.getSitesOutput({
 *     ids: [defaultSite.id],
 *     nameRegex: defaultSite.siteName,
 *     siteName: "bcd.com",
 * });
 * export const alicloudEsaSiteExampleId = _default.apply(_default => _default.sites?.[0]?.id);
 * ```
 */
export function getSites(args?: GetSitesArgs, opts?: pulumi.InvokeOptions): Promise<GetSitesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:esa/getSites:getSites", {
        "accessType": args.accessType,
        "coverage": args.coverage,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "onlyEnterprise": args.onlyEnterprise,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "planSubscribeType": args.planSubscribeType,
        "resourceGroupId": args.resourceGroupId,
        "siteName": args.siteName,
        "siteSearchType": args.siteSearchType,
        "status": args.status,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSites.
 */
export interface GetSitesArgs {
    /**
     * Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     */
    accessType?: string;
    /**
     * Acceleration area
     */
    coverage?: string;
    /**
     * A list of Site IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: string;
    /**
     * Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
     */
    onlyEnterprise?: boolean;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Current page number.
     */
    pageNumber?: number;
    /**
     * Number of records per page.
     */
    pageSize?: number;
    /**
     * Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
     */
    planSubscribeType?: string;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: string;
    /**
     * Site Name
     */
    siteName?: string;
    /**
     * The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
     */
    siteSearchType?: string;
    /**
     * The status of the resource
     */
    status?: string;
    /**
     * Resource tags
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getSites.
 */
export interface GetSitesResult {
    /**
     * Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     */
    readonly accessType?: string;
    /**
     * Acceleration area
     */
    readonly coverage?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Site IDs.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of name of Sites.
     */
    readonly names: string[];
    readonly onlyEnterprise?: boolean;
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly planSubscribeType?: string;
    /**
     * The ID of the resource group
     */
    readonly resourceGroupId?: string;
    /**
     * Site Name
     */
    readonly siteName?: string;
    readonly siteSearchType?: string;
    /**
     * A list of Site Entries. Each element contains the following attributes:
     */
    readonly sites: outputs.esa.GetSitesSite[];
    /**
     * The status of the resource
     */
    readonly status?: string;
    readonly tags?: {[key: string]: string};
}
/**
 * This data source provides Esa Site available to the user.[What is Site](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateSite)
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultIEoDfU = new alicloud.esa.RatePlanInstance("defaultIEoDfU", {
 *     type: "NS",
 *     autoRenew: true,
 *     period: 1,
 *     paymentType: "Subscription",
 *     coverage: "overseas",
 *     autoPay: true,
 *     planName: "basic",
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: "bcd.com",
 *     coverage: "overseas",
 *     accessType: "NS",
 *     instanceId: defaultIEoDfU.id,
 * });
 * const _default = alicloud.esa.getSitesOutput({
 *     ids: [defaultSite.id],
 *     nameRegex: defaultSite.siteName,
 *     siteName: "bcd.com",
 * });
 * export const alicloudEsaSiteExampleId = _default.apply(_default => _default.sites?.[0]?.id);
 * ```
 */
export function getSitesOutput(args?: GetSitesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSitesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:esa/getSites:getSites", {
        "accessType": args.accessType,
        "coverage": args.coverage,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "onlyEnterprise": args.onlyEnterprise,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "planSubscribeType": args.planSubscribeType,
        "resourceGroupId": args.resourceGroupId,
        "siteName": args.siteName,
        "siteSearchType": args.siteSearchType,
        "status": args.status,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSites.
 */
export interface GetSitesOutputArgs {
    /**
     * Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     */
    accessType?: pulumi.Input<string>;
    /**
     * Acceleration area
     */
    coverage?: pulumi.Input<string>;
    /**
     * A list of Site IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Group Metric Rule name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
     */
    onlyEnterprise?: pulumi.Input<boolean>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Current page number.
     */
    pageNumber?: pulumi.Input<number>;
    /**
     * Number of records per page.
     */
    pageSize?: pulumi.Input<number>;
    /**
     * Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
     */
    planSubscribeType?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Site Name
     */
    siteName?: pulumi.Input<string>;
    /**
     * The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
     */
    siteSearchType?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
