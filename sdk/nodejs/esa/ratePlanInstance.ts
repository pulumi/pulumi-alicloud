// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ESA Rate Plan Instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/ratePlanInstance:RatePlanInstance example <id>
 * ```
 */
export class RatePlanInstance extends pulumi.CustomResource {
    /**
     * Get an existing RatePlanInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RatePlanInstanceState, opts?: pulumi.CustomResourceOptions): RatePlanInstance {
        return new RatePlanInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/ratePlanInstance:RatePlanInstance';

    /**
     * Returns true if the given object is an instance of RatePlanInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RatePlanInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RatePlanInstance.__pulumiType;
    }

    /**
     * Whether to pay automatically.
     */
    public readonly autoPay!: pulumi.Output<boolean | undefined>;
    /**
     * Auto Renew:
     *
     * true: Automatic renewal.
     *
     * false: Do not renew automatically.
     */
    public readonly autoRenew!: pulumi.Output<boolean | undefined>;
    /**
     * Acceleration area:
     *
     * domestic: Mainland China only.
     *
     * global: global.
     *
     * overseas: Global (excluding Mainland China).
     */
    public readonly coverage!: pulumi.Output<string | undefined>;
    /**
     * The new purchase time of the package instance.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Renewing: renewing
     */
    public /*out*/ readonly instanceStatus!: pulumi.Output<string>;
    /**
     * The payment type of the resource, Valid vales: Subscription.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * Purchase cycle (in months).
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The plan name, which is obtained from the DescribeRatePlanPrice interface.
     */
    public readonly planName!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Site access type:
     *
     * NS:NS access.
     *
     * CNAME:CNAME access.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a RatePlanInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RatePlanInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RatePlanInstanceArgs | RatePlanInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RatePlanInstanceState | undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["coverage"] = state ? state.coverage : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["instanceStatus"] = state ? state.instanceStatus : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["planName"] = state ? state.planName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as RatePlanInstanceArgs | undefined;
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["coverage"] = args ? args.coverage : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["planName"] = args ? args.planName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["instanceStatus"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RatePlanInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RatePlanInstance resources.
 */
export interface RatePlanInstanceState {
    /**
     * Whether to pay automatically.
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Auto Renew:
     *
     * true: Automatic renewal.
     *
     * false: Do not renew automatically.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Acceleration area:
     *
     * domestic: Mainland China only.
     *
     * global: global.
     *
     * overseas: Global (excluding Mainland China).
     */
    coverage?: pulumi.Input<string>;
    /**
     * The new purchase time of the package instance.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Renewing: renewing
     */
    instanceStatus?: pulumi.Input<string>;
    /**
     * The payment type of the resource, Valid vales: Subscription.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Purchase cycle (in months).
     */
    period?: pulumi.Input<number>;
    /**
     * The plan name, which is obtained from the DescribeRatePlanPrice interface.
     */
    planName?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Site access type:
     *
     * NS:NS access.
     *
     * CNAME:CNAME access.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RatePlanInstance resource.
 */
export interface RatePlanInstanceArgs {
    /**
     * Whether to pay automatically.
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Auto Renew:
     *
     * true: Automatic renewal.
     *
     * false: Do not renew automatically.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Acceleration area:
     *
     * domestic: Mainland China only.
     *
     * global: global.
     *
     * overseas: Global (excluding Mainland China).
     */
    coverage?: pulumi.Input<string>;
    /**
     * The payment type of the resource, Valid vales: Subscription.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Purchase cycle (in months).
     */
    period?: pulumi.Input<number>;
    /**
     * The plan name, which is obtained from the DescribeRatePlanPrice interface.
     */
    planName?: pulumi.Input<string>;
    /**
     * Site access type:
     *
     * NS:NS access.
     *
     * CNAME:CNAME access.
     */
    type?: pulumi.Input<string>;
}
