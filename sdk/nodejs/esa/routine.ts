// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Routine resource.
 *
 * For information about ESA Routine and how to use it, see [What is Routine](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateRoutine).
 *
 * > **NOTE:** Available since v1.251.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.esa.Routine("default", {
 *     description: name,
 *     name: name,
 * });
 * ```
 *
 * ## Import
 *
 * ESA Routine can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/routine:Routine example <id>
 * ```
 */
export class Routine extends pulumi.CustomResource {
    /**
     * Get an existing Routine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutineState, opts?: pulumi.CustomResourceOptions): Routine {
        return new Routine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/routine:Routine';

    /**
     * Returns true if the given object is an instance of Routine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Routine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Routine.__pulumiType;
    }

    /**
     * The time when the routine was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The routine name, which must be unique in the same account.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Routine Name
     */
    declare public readonly name: pulumi.Output<string>;

    /**
     * Create a Routine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoutineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutineArgs | RoutineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutineState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
        } else {
            const args = argsOrState as RoutineArgs | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Routine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Routine resources.
 */
export interface RoutineState {
    /**
     * The time when the routine was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The routine name, which must be unique in the same account.
     */
    description?: pulumi.Input<string>;
    /**
     * Routine Name
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Routine resource.
 */
export interface RoutineArgs {
    /**
     * The routine name, which must be unique in the same account.
     */
    description?: pulumi.Input<string>;
    /**
     * Routine Name
     */
    name?: pulumi.Input<string>;
}
