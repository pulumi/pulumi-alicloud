// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Site Version resource.
 *
 * For information about ESA Site Version and how to use it, see [What is Site Version](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CloneVersion).
 *
 * > **NOTE:** Available since v1.251.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "bcd72239.com";
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: name,
 *     instanceId: _default.then(_default => _default.sites?.[0]?.instanceId),
 *     coverage: "overseas",
 *     accessType: "NS",
 *     versionManagement: true,
 * });
 * const defaultVersion = new alicloud.esa.Version("default", {
 *     siteId: defaultSite.id,
 *     description: "example",
 *     originVersion: 0,
 * });
 * ```
 *
 * ## Import
 *
 * ESA Site Version can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/version:Version example <site_id>:<site_version>
 * ```
 */
export class Version extends pulumi.CustomResource {
    /**
     * Get an existing Version resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VersionState, opts?: pulumi.CustomResourceOptions): Version {
        return new Version(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/version:Version';

    /**
     * Returns true if the given object is an instance of Version.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Version {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Version.__pulumiType;
    }

    /**
     * The creation time. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The Site version's description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    public readonly originVersion!: pulumi.Output<number>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    public readonly siteId!: pulumi.Output<number>;
    /**
     * The version number of the site configuration.
     */
    public /*out*/ readonly siteVersion!: pulumi.Output<number>;
    /**
     * Site version status:：`online`.：`configuring`._faild`：`configureFaild`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Version resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VersionArgs | VersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VersionState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["originVersion"] = state ? state.originVersion : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["siteVersion"] = state ? state.siteVersion : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as VersionArgs | undefined;
            if ((!args || args.originVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originVersion'");
            }
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["originVersion"] = args ? args.originVersion : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["siteVersion"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Version.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Version resources.
 */
export interface VersionState {
    /**
     * The creation time. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The Site version's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    originVersion?: pulumi.Input<number>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId?: pulumi.Input<number>;
    /**
     * The version number of the site configuration.
     */
    siteVersion?: pulumi.Input<number>;
    /**
     * Site version status:：`online`.：`configuring`._faild`：`configureFaild`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Version resource.
 */
export interface VersionArgs {
    /**
     * The Site version's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    originVersion: pulumi.Input<number>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId: pulumi.Input<number>;
}
