// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Waiting Room Rule resource.
 *
 * For information about ESA Waiting Room Rule and how to use it, see [What is Waiting Room Rule](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateWaitingRoomRule).
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: "terraform.site",
 *     instanceId: _default.then(_default => _default.sites?.[0]?.instanceId),
 *     coverage: "overseas",
 *     accessType: "NS",
 * });
 * const defaultWaitingRoom = new alicloud.esa.WaitingRoom("default", {
 *     status: "off",
 *     siteId: defaultSite.id,
 *     jsonResponseEnable: "off",
 *     description: "example",
 *     waitingRoomType: "default",
 *     disableSessionRenewalEnable: "off",
 *     cookieName: "__aliwaitingroom_example",
 *     waitingRoomName: "waitingroom_example",
 *     queueAllEnable: "off",
 *     queuingStatusCode: "200",
 *     customPageHtml: "",
 *     newUsersPerMinute: "200",
 *     sessionDuration: "5",
 *     language: "zhcn",
 *     totalActiveUsers: "300",
 *     queuingMethod: "fifo",
 *     hostNameAndPaths: [{
 *         domain: "sub_domain.com",
 *         path: "/example",
 *         subdomain: "example_sub_domain.com.",
 *     }],
 * });
 * const defaultWaitingRoomRule = new alicloud.esa.WaitingRoomRule("default", {
 *     rule: "(http.host eq \"video.example.com\")",
 *     waitingRoomId: defaultWaitingRoom.waitingRoomId,
 *     ruleName: "WaitingRoomRule_example1",
 *     status: "off",
 *     siteId: defaultSite.id,
 * });
 * ```
 *
 * ## Import
 *
 * ESA Waiting Room Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/waitingRoomRule:WaitingRoomRule example <site_id>:<waiting_room_id>:<waiting_room_rule_id>
 * ```
 */
export class WaitingRoomRule extends pulumi.CustomResource {
    /**
     * Get an existing WaitingRoomRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WaitingRoomRuleState, opts?: pulumi.CustomResourceOptions): WaitingRoomRule {
        return new WaitingRoomRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/waitingRoomRule:WaitingRoomRule';

    /**
     * Returns true if the given object is an instance of WaitingRoomRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WaitingRoomRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WaitingRoomRule.__pulumiType;
    }

    /**
     * The content of the rule, the implemented policy or conditional expression.
     */
    public readonly rule!: pulumi.Output<string>;
    /**
     * Rule name, optional, used to query by waiting room bypass rule name.
     */
    public readonly ruleName!: pulumi.Output<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    public readonly siteId!: pulumi.Output<number>;
    /**
     * Rule enabled status, supporting:
     * -'on': means enabled.
     * -'off': means disabled.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
     */
    public readonly waitingRoomId!: pulumi.Output<string>;
    /**
     * The rule ID, which can be used to query a specific rule.
     */
    public /*out*/ readonly waitingRoomRuleId!: pulumi.Output<number>;

    /**
     * Create a WaitingRoomRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WaitingRoomRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WaitingRoomRuleArgs | WaitingRoomRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WaitingRoomRuleState | undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["waitingRoomId"] = state ? state.waitingRoomId : undefined;
            resourceInputs["waitingRoomRuleId"] = state ? state.waitingRoomRuleId : undefined;
        } else {
            const args = argsOrState as WaitingRoomRuleArgs | undefined;
            if ((!args || args.rule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rule'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.waitingRoomId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'waitingRoomId'");
            }
            resourceInputs["rule"] = args ? args.rule : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["waitingRoomId"] = args ? args.waitingRoomId : undefined;
            resourceInputs["waitingRoomRuleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WaitingRoomRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WaitingRoomRule resources.
 */
export interface WaitingRoomRuleState {
    /**
     * The content of the rule, the implemented policy or conditional expression.
     */
    rule?: pulumi.Input<string>;
    /**
     * Rule name, optional, used to query by waiting room bypass rule name.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId?: pulumi.Input<number>;
    /**
     * Rule enabled status, supporting:
     * -'on': means enabled.
     * -'off': means disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
     */
    waitingRoomId?: pulumi.Input<string>;
    /**
     * The rule ID, which can be used to query a specific rule.
     */
    waitingRoomRuleId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a WaitingRoomRule resource.
 */
export interface WaitingRoomRuleArgs {
    /**
     * The content of the rule, the implemented policy or conditional expression.
     */
    rule: pulumi.Input<string>;
    /**
     * Rule name, optional, used to query by waiting room bypass rule name.
     */
    ruleName: pulumi.Input<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId: pulumi.Input<number>;
    /**
     * Rule enabled status, supporting:
     * -'on': means enabled.
     * -'off': means disabled.
     */
    status: pulumi.Input<string>;
    /**
     * Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
     */
    waitingRoomId: pulumi.Input<string>;
}
