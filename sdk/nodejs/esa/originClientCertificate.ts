// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Origin Client Certificate resource.
 *
 * For information about ESA Origin Client Certificate and how to use it, see [What is Origin Client Certificate](https://next.api.alibabacloud.com/document/ESA/2024-09-10/UploadOriginClientCertificate).
 *
 * > **NOTE:** Available since v1.255.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const resourceSiteOriginClientCertificateExample = new alicloud.esa.Site("resource_Site_OriginClientCertificate_example", {
 *     siteName: "chenxin0116.site",
 *     instanceId: _default.then(_default => _default.sites?.[0]?.instanceId),
 *     coverage: "overseas",
 *     accessType: "NS",
 * });
 * const defaultOriginClientCertificate = new alicloud.esa.OriginClientCertificate("default", {
 *     siteId: resourceSiteOriginClientCertificateExample.id,
 *     privateKey: `-----BEGIN RSA PRIVATE KEY-----
 * MIICXAIBAAKBgQC+7dgpkQifIqzOU6KNkFRjZtMZOoN7/ihNf/BrYcPhLQSkcPOf
 * UsTP/qvH0u965GnYFiAoK3uWGQo9aCBuoawRFKNBa9ZpJVyVbamBWTBQ/Fxsforq
 * 9jJNR7OWA3fxvDxgwyEkv0qsnh1zaOkjyUlxFYwDiFxZ1/RHAj/SABCubQIDAQAB
 * AoGADiobBUprN1MdOtldj98LQ6yXMKH0qzg5yTYaofzIyWXLmF+A02sSitO77sEp
 * Xxae+5b4n8JKEuKcrd2RumNoHmN47iLQ0M2eodjUQ96kzm5Esq6nln62/NF5KLuK
 * JDw63nTsg6K0O+gQZv4SYjZAL3cswSmeQmvmcoNgArfcaoECQQDgYy6S91ZIUsLx
 * 6BB3tW+x7APYnvKysYbcKUEP8AutZSo4hdMfPQkOD0LwP5dWsrNippDWjNDiPZmt
 * VKuZDoDdAkEA2dPxy1eQeJsRYTZmTWIuh3UY9xlL3G9skcSOM4LbFidroHWW9UDJ
 * JDSSEMH2+/4quYTdPr28cj7RCjqL0brC0QJABXDCL1QJ5oUDLwRWaeCfTawQR89K
 * ySRexbXGWxGR5uleBbLQ9J/xOUMLd3HDRJnemZS6TElrwyCFOlukMXjVjQJBALr5
 * QC0opmu/vzVQepOl2QaQrrM7VXCLfAfLTbxNcD0d7TY4eTFfQMgBD/euZpB65LWF
 * pFs8hcsSvGApTObjhmECQEydB1zzjU6kH171XlXCtRFnbORu2IB7rMsDP2CBPHyR
 * tYBjBNVHIUGcmrMVFX4LeMuvvmUyzwfgLmLchHxbDP8=
 * -----END RSA PRIVATE KEY-----
 * `,
 *     hostnames: [
 *         "www.example1.com",
 *         "www.example2.com",
 *         "www.example3.com",
 *     ],
 *     originClientCertificateName: "exampleCertificate",
 *     certificate: `-----BEGIN CERTIFICATE-----
 * MIICQTCCAaoCCQCFfdyqahygLzANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJj
 * bjEQMA4GA1UECAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwI
 * YWxpY2xvdWQxEDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwHhcNMjAw
 * ODA2MTAwMDAyWhcNMzAwODA0MTAwMDAyWjBlMQswCQYDVQQGEwJjbjEQMA4GA1UE
 * CAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwIYWxpY2xvdWQx
 * EDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwgZ8wDQYJKoZIhvcNAQEB
 * BQADgY0AMIGJAoGBAL7t2CmRCJ8irM5Too2QVGNm0xk6g3v+KE1/8Gthw+EtBKRw
 * 859SxM/+q8fS73rkadgWICgre5YZCj1oIG6hrBEUo0Fr1mklXJVtqYFZMFD8XGx+
 * iur2Mk1Hs5YDd/G8PGDDISS/SqyeHXNo6SPJSXEVjAOIXFnX9EcCP9IAEK5tAgMB
 * AAEwDQYJKoZIhvcNAQEFBQADgYEAavYdM9s5jLFP9/ZPCrsRuRsjSJpe5y9VZL+1
 * +Ebbw16V0xMYaqODyFH1meLRW/A4xUs15Ny2vLYOW15Mriif7Sixty3HUedBFa4l
 * y6/gQ+mBEeZYzMaTTFgyzEZDMsfZxwV9GKfhOzAmK3jZ2LDpHIhnlJN4WwVf0lME
 * pCPDN7g=
 * -----END CERTIFICATE-----
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * ESA Origin Client Certificate can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/originClientCertificate:OriginClientCertificate example <site_id>:<origin_client_certificate_id>
 * ```
 */
export class OriginClientCertificate extends pulumi.CustomResource {
    /**
     * Get an existing OriginClientCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OriginClientCertificateState, opts?: pulumi.CustomResourceOptions): OriginClientCertificate {
        return new OriginClientCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/originClientCertificate:OriginClientCertificate';

    /**
     * Returns true if the given object is an instance of OriginClientCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OriginClientCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OriginClientCertificate.__pulumiType;
    }

    /**
     * The certificate content.
     */
    declare public readonly certificate: pulumi.Output<string>;
    /**
     * The time when the certificate was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The domain names to associate.
     */
    declare public readonly hostnames: pulumi.Output<string[] | undefined>;
    /**
     * The certificate ID.
     */
    declare public /*out*/ readonly originClientCertificateId: pulumi.Output<string>;
    /**
     * The certificate name.
     */
    declare public readonly originClientCertificateName: pulumi.Output<string | undefined>;
    /**
     * The private key of the certificate.
     */
    declare public readonly privateKey: pulumi.Output<string>;
    /**
     * Site ID.
     */
    declare public readonly siteId: pulumi.Output<number>;
    /**
     * The status of the certificate.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a OriginClientCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OriginClientCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OriginClientCertificateArgs | OriginClientCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OriginClientCertificateState | undefined;
            resourceInputs["certificate"] = state?.certificate;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["hostnames"] = state?.hostnames;
            resourceInputs["originClientCertificateId"] = state?.originClientCertificateId;
            resourceInputs["originClientCertificateName"] = state?.originClientCertificateName;
            resourceInputs["privateKey"] = state?.privateKey;
            resourceInputs["siteId"] = state?.siteId;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as OriginClientCertificateArgs | undefined;
            if (args?.certificate === undefined && !opts.urn) {
                throw new Error("Missing required property 'certificate'");
            }
            if (args?.privateKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            if (args?.siteId === undefined && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["certificate"] = args?.certificate;
            resourceInputs["hostnames"] = args?.hostnames;
            resourceInputs["originClientCertificateName"] = args?.originClientCertificateName;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["siteId"] = args?.siteId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["originClientCertificateId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OriginClientCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OriginClientCertificate resources.
 */
export interface OriginClientCertificateState {
    /**
     * The certificate content.
     */
    certificate?: pulumi.Input<string>;
    /**
     * The time when the certificate was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The domain names to associate.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The certificate ID.
     */
    originClientCertificateId?: pulumi.Input<string>;
    /**
     * The certificate name.
     */
    originClientCertificateName?: pulumi.Input<string>;
    /**
     * The private key of the certificate.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    siteId?: pulumi.Input<number>;
    /**
     * The status of the certificate.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OriginClientCertificate resource.
 */
export interface OriginClientCertificateArgs {
    /**
     * The certificate content.
     */
    certificate: pulumi.Input<string>;
    /**
     * The domain names to associate.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The certificate name.
     */
    originClientCertificateName?: pulumi.Input<string>;
    /**
     * The private key of the certificate.
     */
    privateKey: pulumi.Input<string>;
    /**
     * Site ID.
     */
    siteId: pulumi.Input<number>;
}
