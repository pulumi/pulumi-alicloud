// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Waiting Room Event resource.
 *
 * For information about ESA Waiting Room Event and how to use it, see [What is Waiting Room Event](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateWaitingRoomEvent).
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: "chenxin0116.site",
 *     instanceId: _default.then(_default => _default.sites?.[0]?.instanceId),
 *     coverage: "overseas",
 *     accessType: "NS",
 * });
 * const defaultWaitingRoom = new alicloud.esa.WaitingRoom("default", {
 *     status: "off",
 *     siteId: defaultSite.id,
 *     jsonResponseEnable: "off",
 *     description: "example",
 *     waitingRoomType: "default",
 *     disableSessionRenewalEnable: "off",
 *     cookieName: "__aliwaitingroom_example",
 *     waitingRoomName: "waitingroom_example",
 *     queueAllEnable: "off",
 *     queuingStatusCode: "200",
 *     customPageHtml: "",
 *     newUsersPerMinute: "200",
 *     sessionDuration: "5",
 *     language: "zhcn",
 *     totalActiveUsers: "300",
 *     queuingMethod: "fifo",
 *     hostNameAndPaths: [{
 *         domain: "sub_domain.com",
 *         path: "/example",
 *         subdomain: "example_sub_domain.com.",
 *     }],
 * });
 * const defaultWaitingRoomEvent = new alicloud.esa.WaitingRoomEvent("default", {
 *     waitingRoomId: defaultWaitingRoom.waitingRoomId,
 *     endTime: "1719863200",
 *     waitingRoomEventName: "WaitingRoomEvent_example",
 *     preQueueStartTime: "",
 *     randomPreQueueEnable: "off",
 *     jsonResponseEnable: "off",
 *     siteId: defaultSite.id,
 *     preQueueEnable: "off",
 *     description: "example",
 *     newUsersPerMinute: "200",
 *     queuingStatusCode: "200",
 *     customPageHtml: "",
 *     language: "zhcn",
 *     totalActiveUsers: "300",
 *     waitingRoomType: "default",
 *     startTime: "1719763200",
 *     status: "off",
 *     disableSessionRenewalEnable: "off",
 *     queuingMethod: "fifo",
 *     sessionDuration: "5",
 * });
 * ```
 *
 * ## Import
 *
 * ESA Waiting Room Event can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/waitingRoomEvent:WaitingRoomEvent example <site_id>:<waiting_room_id>:<waiting_room_event_id>
 * ```
 */
export class WaitingRoomEvent extends pulumi.CustomResource {
    /**
     * Get an existing WaitingRoomEvent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WaitingRoomEventState, opts?: pulumi.CustomResourceOptions): WaitingRoomEvent {
        return new WaitingRoomEvent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/waitingRoomEvent:WaitingRoomEvent';

    /**
     * Returns true if the given object is an instance of WaitingRoomEvent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WaitingRoomEvent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WaitingRoomEvent.__pulumiType;
    }

    /**
     * User-defined waiting room page content, when the waiting room type is custom type, you need to enter. The incoming content needs to be base64 encoded.
     */
    declare public readonly customPageHtml: pulumi.Output<string | undefined>;
    /**
     * Waiting room description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Disable session renewal. Value:
     * -'on': open.
     * -'off': closed.
     */
    declare public readonly disableSessionRenewalEnable: pulumi.Output<string | undefined>;
    /**
     * The timestamp of the end time of the event.
     */
    declare public readonly endTime: pulumi.Output<string>;
    /**
     * JSON response switch. Value:
     * -'on': open.
     * -'off': closed.
     */
    declare public readonly jsonResponseEnable: pulumi.Output<string | undefined>;
    /**
     * Default language setting. Values include:
     * -'enus': English.
     * -'zhcn': Simplified Chinese.
     * -'zhhk': Traditional Chinese.
     */
    declare public readonly language: pulumi.Output<string | undefined>;
    /**
     * Number of new users per minute.
     */
    declare public readonly newUsersPerMinute: pulumi.Output<string>;
    /**
     * Pre-queue switch.
     * -'on': open.
     * -'off': closed.
     */
    declare public readonly preQueueEnable: pulumi.Output<string | undefined>;
    /**
     * Pre-queue start time.
     */
    declare public readonly preQueueStartTime: pulumi.Output<string | undefined>;
    /**
     * Way of queuing. Value:
     * -'random': random.
     * -'fifo': first in, first out.
     * -'passthrough ': through.
     * -'reject-all': reject all.
     */
    declare public readonly queuingMethod: pulumi.Output<string>;
    /**
     * Waiting room status code. Value:
     * -'200'
     * -'202'
     * -'429'
     */
    declare public readonly queuingStatusCode: pulumi.Output<string>;
    /**
     * Random queue switch.
     * -'on': open.
     * -'off': closed.
     */
    declare public readonly randomPreQueueEnable: pulumi.Output<string | undefined>;
    /**
     * User session duration in minutes.
     */
    declare public readonly sessionDuration: pulumi.Output<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    declare public readonly siteId: pulumi.Output<number>;
    /**
     * The timestamp of the event start time.
     */
    declare public readonly startTime: pulumi.Output<string>;
    /**
     * Enabled status. Value:
     * -'on': Enable waiting room events
     * -'off': Disable waiting room events
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * Total number of active users.
     */
    declare public readonly totalActiveUsers: pulumi.Output<string>;
    /**
     * The waiting room event ID, which can be obtained by calling the [ListWaitingRoomEvents](https://help.aliyun.com/document_detail/2850279.html) operation.
     */
    declare public /*out*/ readonly waitingRoomEventId: pulumi.Output<number>;
    /**
     * Event name, custom event description.
     */
    declare public readonly waitingRoomEventName: pulumi.Output<string>;
    /**
     * Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
     */
    declare public readonly waitingRoomId: pulumi.Output<string>;
    /**
     * Waiting room type. The following types are supported:
     * -'default': the default type.
     * -'custom': custom type.
     */
    declare public readonly waitingRoomType: pulumi.Output<string>;

    /**
     * Create a WaitingRoomEvent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WaitingRoomEventArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WaitingRoomEventArgs | WaitingRoomEventState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WaitingRoomEventState | undefined;
            resourceInputs["customPageHtml"] = state?.customPageHtml;
            resourceInputs["description"] = state?.description;
            resourceInputs["disableSessionRenewalEnable"] = state?.disableSessionRenewalEnable;
            resourceInputs["endTime"] = state?.endTime;
            resourceInputs["jsonResponseEnable"] = state?.jsonResponseEnable;
            resourceInputs["language"] = state?.language;
            resourceInputs["newUsersPerMinute"] = state?.newUsersPerMinute;
            resourceInputs["preQueueEnable"] = state?.preQueueEnable;
            resourceInputs["preQueueStartTime"] = state?.preQueueStartTime;
            resourceInputs["queuingMethod"] = state?.queuingMethod;
            resourceInputs["queuingStatusCode"] = state?.queuingStatusCode;
            resourceInputs["randomPreQueueEnable"] = state?.randomPreQueueEnable;
            resourceInputs["sessionDuration"] = state?.sessionDuration;
            resourceInputs["siteId"] = state?.siteId;
            resourceInputs["startTime"] = state?.startTime;
            resourceInputs["status"] = state?.status;
            resourceInputs["totalActiveUsers"] = state?.totalActiveUsers;
            resourceInputs["waitingRoomEventId"] = state?.waitingRoomEventId;
            resourceInputs["waitingRoomEventName"] = state?.waitingRoomEventName;
            resourceInputs["waitingRoomId"] = state?.waitingRoomId;
            resourceInputs["waitingRoomType"] = state?.waitingRoomType;
        } else {
            const args = argsOrState as WaitingRoomEventArgs | undefined;
            if (args?.endTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if (args?.newUsersPerMinute === undefined && !opts.urn) {
                throw new Error("Missing required property 'newUsersPerMinute'");
            }
            if (args?.queuingMethod === undefined && !opts.urn) {
                throw new Error("Missing required property 'queuingMethod'");
            }
            if (args?.queuingStatusCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'queuingStatusCode'");
            }
            if (args?.sessionDuration === undefined && !opts.urn) {
                throw new Error("Missing required property 'sessionDuration'");
            }
            if (args?.siteId === undefined && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            if (args?.startTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            if (args?.status === undefined && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if (args?.totalActiveUsers === undefined && !opts.urn) {
                throw new Error("Missing required property 'totalActiveUsers'");
            }
            if (args?.waitingRoomEventName === undefined && !opts.urn) {
                throw new Error("Missing required property 'waitingRoomEventName'");
            }
            if (args?.waitingRoomType === undefined && !opts.urn) {
                throw new Error("Missing required property 'waitingRoomType'");
            }
            resourceInputs["customPageHtml"] = args?.customPageHtml;
            resourceInputs["description"] = args?.description;
            resourceInputs["disableSessionRenewalEnable"] = args?.disableSessionRenewalEnable;
            resourceInputs["endTime"] = args?.endTime;
            resourceInputs["jsonResponseEnable"] = args?.jsonResponseEnable;
            resourceInputs["language"] = args?.language;
            resourceInputs["newUsersPerMinute"] = args?.newUsersPerMinute;
            resourceInputs["preQueueEnable"] = args?.preQueueEnable;
            resourceInputs["preQueueStartTime"] = args?.preQueueStartTime;
            resourceInputs["queuingMethod"] = args?.queuingMethod;
            resourceInputs["queuingStatusCode"] = args?.queuingStatusCode;
            resourceInputs["randomPreQueueEnable"] = args?.randomPreQueueEnable;
            resourceInputs["sessionDuration"] = args?.sessionDuration;
            resourceInputs["siteId"] = args?.siteId;
            resourceInputs["startTime"] = args?.startTime;
            resourceInputs["status"] = args?.status;
            resourceInputs["totalActiveUsers"] = args?.totalActiveUsers;
            resourceInputs["waitingRoomEventName"] = args?.waitingRoomEventName;
            resourceInputs["waitingRoomId"] = args?.waitingRoomId;
            resourceInputs["waitingRoomType"] = args?.waitingRoomType;
            resourceInputs["waitingRoomEventId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WaitingRoomEvent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WaitingRoomEvent resources.
 */
export interface WaitingRoomEventState {
    /**
     * User-defined waiting room page content, when the waiting room type is custom type, you need to enter. The incoming content needs to be base64 encoded.
     */
    customPageHtml?: pulumi.Input<string>;
    /**
     * Waiting room description.
     */
    description?: pulumi.Input<string>;
    /**
     * Disable session renewal. Value:
     * -'on': open.
     * -'off': closed.
     */
    disableSessionRenewalEnable?: pulumi.Input<string>;
    /**
     * The timestamp of the end time of the event.
     */
    endTime?: pulumi.Input<string>;
    /**
     * JSON response switch. Value:
     * -'on': open.
     * -'off': closed.
     */
    jsonResponseEnable?: pulumi.Input<string>;
    /**
     * Default language setting. Values include:
     * -'enus': English.
     * -'zhcn': Simplified Chinese.
     * -'zhhk': Traditional Chinese.
     */
    language?: pulumi.Input<string>;
    /**
     * Number of new users per minute.
     */
    newUsersPerMinute?: pulumi.Input<string>;
    /**
     * Pre-queue switch.
     * -'on': open.
     * -'off': closed.
     */
    preQueueEnable?: pulumi.Input<string>;
    /**
     * Pre-queue start time.
     */
    preQueueStartTime?: pulumi.Input<string>;
    /**
     * Way of queuing. Value:
     * -'random': random.
     * -'fifo': first in, first out.
     * -'passthrough ': through.
     * -'reject-all': reject all.
     */
    queuingMethod?: pulumi.Input<string>;
    /**
     * Waiting room status code. Value:
     * -'200'
     * -'202'
     * -'429'
     */
    queuingStatusCode?: pulumi.Input<string>;
    /**
     * Random queue switch.
     * -'on': open.
     * -'off': closed.
     */
    randomPreQueueEnable?: pulumi.Input<string>;
    /**
     * User session duration in minutes.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId?: pulumi.Input<number>;
    /**
     * The timestamp of the event start time.
     */
    startTime?: pulumi.Input<string>;
    /**
     * Enabled status. Value:
     * -'on': Enable waiting room events
     * -'off': Disable waiting room events
     */
    status?: pulumi.Input<string>;
    /**
     * Total number of active users.
     */
    totalActiveUsers?: pulumi.Input<string>;
    /**
     * The waiting room event ID, which can be obtained by calling the [ListWaitingRoomEvents](https://help.aliyun.com/document_detail/2850279.html) operation.
     */
    waitingRoomEventId?: pulumi.Input<number>;
    /**
     * Event name, custom event description.
     */
    waitingRoomEventName?: pulumi.Input<string>;
    /**
     * Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
     */
    waitingRoomId?: pulumi.Input<string>;
    /**
     * Waiting room type. The following types are supported:
     * -'default': the default type.
     * -'custom': custom type.
     */
    waitingRoomType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WaitingRoomEvent resource.
 */
export interface WaitingRoomEventArgs {
    /**
     * User-defined waiting room page content, when the waiting room type is custom type, you need to enter. The incoming content needs to be base64 encoded.
     */
    customPageHtml?: pulumi.Input<string>;
    /**
     * Waiting room description.
     */
    description?: pulumi.Input<string>;
    /**
     * Disable session renewal. Value:
     * -'on': open.
     * -'off': closed.
     */
    disableSessionRenewalEnable?: pulumi.Input<string>;
    /**
     * The timestamp of the end time of the event.
     */
    endTime: pulumi.Input<string>;
    /**
     * JSON response switch. Value:
     * -'on': open.
     * -'off': closed.
     */
    jsonResponseEnable?: pulumi.Input<string>;
    /**
     * Default language setting. Values include:
     * -'enus': English.
     * -'zhcn': Simplified Chinese.
     * -'zhhk': Traditional Chinese.
     */
    language?: pulumi.Input<string>;
    /**
     * Number of new users per minute.
     */
    newUsersPerMinute: pulumi.Input<string>;
    /**
     * Pre-queue switch.
     * -'on': open.
     * -'off': closed.
     */
    preQueueEnable?: pulumi.Input<string>;
    /**
     * Pre-queue start time.
     */
    preQueueStartTime?: pulumi.Input<string>;
    /**
     * Way of queuing. Value:
     * -'random': random.
     * -'fifo': first in, first out.
     * -'passthrough ': through.
     * -'reject-all': reject all.
     */
    queuingMethod: pulumi.Input<string>;
    /**
     * Waiting room status code. Value:
     * -'200'
     * -'202'
     * -'429'
     */
    queuingStatusCode: pulumi.Input<string>;
    /**
     * Random queue switch.
     * -'on': open.
     * -'off': closed.
     */
    randomPreQueueEnable?: pulumi.Input<string>;
    /**
     * User session duration in minutes.
     */
    sessionDuration: pulumi.Input<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId: pulumi.Input<number>;
    /**
     * The timestamp of the event start time.
     */
    startTime: pulumi.Input<string>;
    /**
     * Enabled status. Value:
     * -'on': Enable waiting room events
     * -'off': Disable waiting room events
     */
    status: pulumi.Input<string>;
    /**
     * Total number of active users.
     */
    totalActiveUsers: pulumi.Input<string>;
    /**
     * Event name, custom event description.
     */
    waitingRoomEventName: pulumi.Input<string>;
    /**
     * Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
     */
    waitingRoomId?: pulumi.Input<string>;
    /**
     * Waiting room type. The following types are supported:
     * -'default': the default type.
     * -'custom': custom type.
     */
    waitingRoomType: pulumi.Input<string>;
}
