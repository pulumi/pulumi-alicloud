// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { HttpRequestHeaderModificationRuleArgs, HttpRequestHeaderModificationRuleState } from "./httpRequestHeaderModificationRule";
export type HttpRequestHeaderModificationRule = import("./httpRequestHeaderModificationRule").HttpRequestHeaderModificationRule;
export const HttpRequestHeaderModificationRule: typeof import("./httpRequestHeaderModificationRule").HttpRequestHeaderModificationRule = null as any;
utilities.lazyLoad(exports, ["HttpRequestHeaderModificationRule"], () => require("./httpRequestHeaderModificationRule"));

export { ListArgs, ListState } from "./list";
export type List = import("./list").List;
export const List: typeof import("./list").List = null as any;
utilities.lazyLoad(exports, ["List"], () => require("./list"));

export { PageArgs, PageState } from "./page";
export type Page = import("./page").Page;
export const Page: typeof import("./page").Page = null as any;
utilities.lazyLoad(exports, ["Page"], () => require("./page"));

export { RatePlanInstanceArgs, RatePlanInstanceState } from "./ratePlanInstance";
export type RatePlanInstance = import("./ratePlanInstance").RatePlanInstance;
export const RatePlanInstance: typeof import("./ratePlanInstance").RatePlanInstance = null as any;
utilities.lazyLoad(exports, ["RatePlanInstance"], () => require("./ratePlanInstance"));

export { RecordArgs, RecordState } from "./record";
export type Record = import("./record").Record;
export const Record: typeof import("./record").Record = null as any;
utilities.lazyLoad(exports, ["Record"], () => require("./record"));

export { SiteArgs, SiteState } from "./site";
export type Site = import("./site").Site;
export const Site: typeof import("./site").Site = null as any;
utilities.lazyLoad(exports, ["Site"], () => require("./site"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:esa/httpRequestHeaderModificationRule:HttpRequestHeaderModificationRule":
                return new HttpRequestHeaderModificationRule(name, <any>undefined, { urn })
            case "alicloud:esa/list:List":
                return new List(name, <any>undefined, { urn })
            case "alicloud:esa/page:Page":
                return new Page(name, <any>undefined, { urn })
            case "alicloud:esa/ratePlanInstance:RatePlanInstance":
                return new RatePlanInstance(name, <any>undefined, { urn })
            case "alicloud:esa/record:Record":
                return new Record(name, <any>undefined, { urn })
            case "alicloud:esa/site:Site":
                return new Site(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "esa/httpRequestHeaderModificationRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "esa/list", _module)
pulumi.runtime.registerResourceModule("alicloud", "esa/page", _module)
pulumi.runtime.registerResourceModule("alicloud", "esa/ratePlanInstance", _module)
pulumi.runtime.registerResourceModule("alicloud", "esa/record", _module)
pulumi.runtime.registerResourceModule("alicloud", "esa/site", _module)
