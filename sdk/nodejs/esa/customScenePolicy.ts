// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Custom Scene Policy resource.
 *
 * For information about ESA Custom Scene Policy and how to use it, see [What is Custom Scene Policy](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateCustomScenePolicy).
 *
 * > **NOTE:** Available since v1.253.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "bcd58610.com";
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: name,
 *     instanceId: _default.then(_default => _default.sites?.[0]?.instanceId),
 *     coverage: "overseas",
 *     accessType: "NS",
 *     versionManagement: true,
 * });
 * const defaultCustomScenePolicy = new alicloud.esa.CustomScenePolicy("default", {
 *     endTime: "2025-08-07T17:00:00Z",
 *     createTime: "2025-07-07T17:00:00Z",
 *     siteIds: defaultSite.id,
 *     template: "promotion",
 *     customScenePolicyName: "example-policy",
 * });
 * ```
 *
 * ## Import
 *
 * ESA Custom Scene Policy can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/customScenePolicy:CustomScenePolicy example <id>
 * ```
 */
export class CustomScenePolicy extends pulumi.CustomResource {
    /**
     * Get an existing CustomScenePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomScenePolicyState, opts?: pulumi.CustomResourceOptions): CustomScenePolicy {
        return new CustomScenePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/customScenePolicy:CustomScenePolicy';

    /**
     * Returns true if the given object is an instance of CustomScenePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomScenePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomScenePolicy.__pulumiType;
    }

    /**
     * The time when the policy takes effect.
     * The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    declare public readonly createTime: pulumi.Output<string>;
    /**
     * The policy name.
     */
    declare public readonly customScenePolicyName: pulumi.Output<string>;
    /**
     * The time when the policy expires.
     * The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    declare public readonly endTime: pulumi.Output<string>;
    /**
     * The IDs of websites associated.
     */
    declare public readonly siteIds: pulumi.Output<string>;
    /**
     * Policy effective status. Valid values: `Disabled`, `Running`.
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * The name of the policy template. Valid value:
     */
    declare public readonly template: pulumi.Output<string>;

    /**
     * Create a CustomScenePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomScenePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomScenePolicyArgs | CustomScenePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomScenePolicyState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["customScenePolicyName"] = state?.customScenePolicyName;
            resourceInputs["endTime"] = state?.endTime;
            resourceInputs["siteIds"] = state?.siteIds;
            resourceInputs["status"] = state?.status;
            resourceInputs["template"] = state?.template;
        } else {
            const args = argsOrState as CustomScenePolicyArgs | undefined;
            if (args?.createTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'createTime'");
            }
            if (args?.customScenePolicyName === undefined && !opts.urn) {
                throw new Error("Missing required property 'customScenePolicyName'");
            }
            if (args?.endTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if (args?.siteIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'siteIds'");
            }
            if (args?.template === undefined && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["createTime"] = args?.createTime;
            resourceInputs["customScenePolicyName"] = args?.customScenePolicyName;
            resourceInputs["endTime"] = args?.endTime;
            resourceInputs["siteIds"] = args?.siteIds;
            resourceInputs["status"] = args?.status;
            resourceInputs["template"] = args?.template;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomScenePolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomScenePolicy resources.
 */
export interface CustomScenePolicyState {
    /**
     * The time when the policy takes effect.
     * The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The policy name.
     */
    customScenePolicyName?: pulumi.Input<string>;
    /**
     * The time when the policy expires.
     * The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The IDs of websites associated.
     */
    siteIds?: pulumi.Input<string>;
    /**
     * Policy effective status. Valid values: `Disabled`, `Running`.
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the policy template. Valid value:
     */
    template?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomScenePolicy resource.
 */
export interface CustomScenePolicyArgs {
    /**
     * The time when the policy takes effect.
     * The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    createTime: pulumi.Input<string>;
    /**
     * The policy name.
     */
    customScenePolicyName: pulumi.Input<string>;
    /**
     * The time when the policy expires.
     * The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     */
    endTime: pulumi.Input<string>;
    /**
     * The IDs of websites associated.
     */
    siteIds: pulumi.Input<string>;
    /**
     * Policy effective status. Valid values: `Disabled`, `Running`.
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the policy template. Valid value:
     */
    template: pulumi.Input<string>;
}
