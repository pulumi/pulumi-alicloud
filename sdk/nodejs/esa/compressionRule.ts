// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Compression Rule resource.
 *
 * For information about ESA Compression Rule and how to use it, see [What is Compression Rule](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateCompressionRule).
 *
 * > **NOTE:** Available since v1.244.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.esa.getSites({
 *     planSubscribeType: "enterpriseplan",
 * });
 * const example = new alicloud.esa.Site("example", {
 *     siteName: "compression.example.com",
 *     instanceId: _default.then(_default => _default.sites?.[0]?.instanceId),
 *     coverage: "domestic",
 *     accessType: "NS",
 * });
 * const defaultCompressionRule = new alicloud.esa.CompressionRule("default", {
 *     gzip: "off",
 *     brotli: "off",
 *     rule: "http.host eq \"video.example.com\"",
 *     siteVersion: 0,
 *     ruleName: "rule_example",
 *     siteId: example.id,
 *     zstd: "off",
 *     ruleEnable: "off",
 * });
 * ```
 *
 * ## Import
 *
 * ESA Compression Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/compressionRule:CompressionRule example <site_id>:<config_id>
 * ```
 */
export class CompressionRule extends pulumi.CustomResource {
    /**
     * Get an existing CompressionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CompressionRuleState, opts?: pulumi.CustomResourceOptions): CompressionRule {
        return new CompressionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/compressionRule:CompressionRule';

    /**
     * Returns true if the given object is an instance of CompressionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CompressionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CompressionRule.__pulumiType;
    }

    /**
     * Brotli compression. Value range:
     */
    public readonly brotli!: pulumi.Output<string | undefined>;
    /**
     * Config Id
     */
    public /*out*/ readonly configId!: pulumi.Output<number>;
    /**
     * Gzip compression. Value range:
     */
    public readonly gzip!: pulumi.Output<string | undefined>;
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
     */
    public readonly rule!: pulumi.Output<string | undefined>;
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     */
    public readonly ruleEnable!: pulumi.Output<string | undefined>;
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     */
    public readonly ruleName!: pulumi.Output<string | undefined>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    public readonly siteId!: pulumi.Output<number>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    public readonly siteVersion!: pulumi.Output<number | undefined>;
    /**
     * Zstd compression. Value range:
     */
    public readonly zstd!: pulumi.Output<string | undefined>;

    /**
     * Create a CompressionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CompressionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CompressionRuleArgs | CompressionRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CompressionRuleState | undefined;
            resourceInputs["brotli"] = state ? state.brotli : undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["gzip"] = state ? state.gzip : undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
            resourceInputs["ruleEnable"] = state ? state.ruleEnable : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["siteVersion"] = state ? state.siteVersion : undefined;
            resourceInputs["zstd"] = state ? state.zstd : undefined;
        } else {
            const args = argsOrState as CompressionRuleArgs | undefined;
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["brotli"] = args ? args.brotli : undefined;
            resourceInputs["gzip"] = args ? args.gzip : undefined;
            resourceInputs["rule"] = args ? args.rule : undefined;
            resourceInputs["ruleEnable"] = args ? args.ruleEnable : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["siteVersion"] = args ? args.siteVersion : undefined;
            resourceInputs["zstd"] = args ? args.zstd : undefined;
            resourceInputs["configId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CompressionRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CompressionRule resources.
 */
export interface CompressionRuleState {
    /**
     * Brotli compression. Value range:
     */
    brotli?: pulumi.Input<string>;
    /**
     * Config Id
     */
    configId?: pulumi.Input<number>;
    /**
     * Gzip compression. Value range:
     */
    gzip?: pulumi.Input<string>;
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
     */
    rule?: pulumi.Input<string>;
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     */
    ruleEnable?: pulumi.Input<string>;
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId?: pulumi.Input<number>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    siteVersion?: pulumi.Input<number>;
    /**
     * Zstd compression. Value range:
     */
    zstd?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CompressionRule resource.
 */
export interface CompressionRuleArgs {
    /**
     * Brotli compression. Value range:
     */
    brotli?: pulumi.Input<string>;
    /**
     * Gzip compression. Value range:
     */
    gzip?: pulumi.Input<string>;
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
     */
    rule?: pulumi.Input<string>;
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     */
    ruleEnable?: pulumi.Input<string>;
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     */
    siteId: pulumi.Input<number>;
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     */
    siteVersion?: pulumi.Input<number>;
    /**
     * Zstd compression. Value range:
     */
    zstd?: pulumi.Input<string>;
}
