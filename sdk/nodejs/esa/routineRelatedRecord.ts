// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class RoutineRelatedRecord extends pulumi.CustomResource {
    /**
     * Get an existing RoutineRelatedRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutineRelatedRecordState, opts?: pulumi.CustomResourceOptions): RoutineRelatedRecord {
        return new RoutineRelatedRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/routineRelatedRecord:RoutineRelatedRecord';

    /**
     * Returns true if the given object is an instance of RoutineRelatedRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutineRelatedRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutineRelatedRecord.__pulumiType;
    }

    declare public readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly recordId: pulumi.Output<number>;
    declare public readonly recordName: pulumi.Output<string>;
    declare public readonly siteId: pulumi.Output<number>;

    /**
     * Create a RoutineRelatedRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutineRelatedRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutineRelatedRecordArgs | RoutineRelatedRecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutineRelatedRecordState | undefined;
            resourceInputs["name"] = state?.name;
            resourceInputs["recordId"] = state?.recordId;
            resourceInputs["recordName"] = state?.recordName;
            resourceInputs["siteId"] = state?.siteId;
        } else {
            const args = argsOrState as RoutineRelatedRecordArgs | undefined;
            if (args?.recordName === undefined && !opts.urn) {
                throw new Error("Missing required property 'recordName'");
            }
            if (args?.siteId === undefined && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["name"] = args?.name;
            resourceInputs["recordName"] = args?.recordName;
            resourceInputs["siteId"] = args?.siteId;
            resourceInputs["recordId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutineRelatedRecord.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoutineRelatedRecord resources.
 */
export interface RoutineRelatedRecordState {
    name?: pulumi.Input<string>;
    recordId?: pulumi.Input<number>;
    recordName?: pulumi.Input<string>;
    siteId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RoutineRelatedRecord resource.
 */
export interface RoutineRelatedRecordArgs {
    name?: pulumi.Input<string>;
    recordName: pulumi.Input<string>;
    siteId: pulumi.Input<number>;
}
