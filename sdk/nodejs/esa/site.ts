// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ESA Site resource.
 *
 * For information about ESA Site and how to use it, see [What is Site](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.234.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultIEoDfU = new alicloud.esa.RatePlanInstance("defaultIEoDfU", {
 *     type: "NS",
 *     autoRenew: true,
 *     period: 1,
 *     paymentType: "Subscription",
 *     coverage: "overseas",
 *     autoPay: true,
 *     planName: "basic",
 * });
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultSite = new alicloud.esa.Site("default", {
 *     siteName: `bcd${defaultInteger.result}.com`,
 *     coverage: "overseas",
 *     accessType: "NS",
 *     instanceId: defaultIEoDfU.id,
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 * });
 * ```
 *
 * ## Import
 *
 * ESA Site can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:esa/site:Site example <id>
 * ```
 */
export class Site extends pulumi.CustomResource {
    /**
     * Get an existing Site resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SiteState, opts?: pulumi.CustomResourceOptions): Site {
        return new Site(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:esa/site:Site';

    /**
     * Returns true if the given object is an instance of Site.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Site {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Site.__pulumiType;
    }

    /**
     * Site Access Type
     */
    public readonly accessType!: pulumi.Output<string | undefined>;
    /**
     * Acceleration area
     */
    public readonly coverage!: pulumi.Output<string | undefined>;
    /**
     * Creation time
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The ID of the associated package instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The ID of the resource group
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Site Name
     */
    public readonly siteName!: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Site resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SiteArgs | SiteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SiteState | undefined;
            resourceInputs["accessType"] = state ? state.accessType : undefined;
            resourceInputs["coverage"] = state ? state.coverage : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["siteName"] = state ? state.siteName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SiteArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.siteName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteName'");
            }
            resourceInputs["accessType"] = args ? args.accessType : undefined;
            resourceInputs["coverage"] = args ? args.coverage : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["siteName"] = args ? args.siteName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Site.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Site resources.
 */
export interface SiteState {
    /**
     * Site Access Type
     */
    accessType?: pulumi.Input<string>;
    /**
     * Acceleration area
     */
    coverage?: pulumi.Input<string>;
    /**
     * Creation time
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the associated package instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Site Name
     */
    siteName?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Site resource.
 */
export interface SiteArgs {
    /**
     * Site Access Type
     */
    accessType?: pulumi.Input<string>;
    /**
     * Acceleration area
     */
    coverage?: pulumi.Input<string>;
    /**
     * The ID of the associated package instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Site Name
     */
    siteName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
