// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ApsaraDB for MyBase Dedicated Host can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cddc/dedicatedHost:DedicatedHost example <dedicated_host_group_id>:<dedicated_host_id>
 * ```
 */
export class DedicatedHost extends pulumi.CustomResource {
    /**
     * Get an existing DedicatedHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DedicatedHostState, opts?: pulumi.CustomResourceOptions): DedicatedHost {
        return new DedicatedHost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cddc/dedicatedHost:DedicatedHost';

    /**
     * Returns true if the given object is an instance of DedicatedHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DedicatedHost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DedicatedHost.__pulumiType;
    }

    /**
     * Specifies whether instances can be created on the host. Valid values: `Allocatable` or `Suspended`. `Allocatable`: Instances can be created on the host. `Suspended`: Instances cannot be created on the host.
     */
    declare public readonly allocationStatus: pulumi.Output<string>;
    /**
     * Specifies whether to enable the auto-renewal feature.
     */
    declare public readonly autoRenew: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the dedicated cluster.
     */
    declare public readonly dedicatedHostGroupId: pulumi.Output<string>;
    /**
     * The ID of the host.
     */
    declare public /*out*/ readonly dedicatedHostId: pulumi.Output<string>;
    /**
     * The instance type of the host. For more information about the supported instance types of hosts, see [Host specification details](https://www.alibabacloud.com/help/doc-detail/206343.htm).
     */
    declare public readonly hostClass: pulumi.Output<string>;
    /**
     * The name of the host. The name must be `1` to `64` characters in length and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
     */
    declare public readonly hostName: pulumi.Output<string>;
    /**
     * Host Image Category. Valid values: `WindowsWithMssqlEntAlwaysonLicense`, `WindowsWithMssqlStdLicense`, `WindowsWithMssqlEntLicense`, `WindowsWithMssqlWebLicense`, `AliLinux`.
     */
    declare public readonly imageCategory: pulumi.Output<string | undefined>;
    /**
     * Host password. **NOTE:** The creation of a host password is supported only when the database type is `Tair-PMem`.
     */
    declare public readonly osPassword: pulumi.Output<string | undefined>;
    /**
     * The payment type of the resource. Valid values: `Subscription`.
     */
    declare public readonly paymentType: pulumi.Output<string>;
    /**
     * The unit of the subscription duration. Valid values: `Year`, `Month`, `Week`.
     */
    declare public readonly period: pulumi.Output<string | undefined>;
    /**
     * The state of the host. Valid values: `0:` The host is being created. `1`: The host is running. `2`: The host is faulty. `3`: The host is ready for deactivation. `4`: The host is being maintained. `5`: The host is deactivated. `6`: The host is restarting. `7`: The host is locked.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The subscription duration of the host. Valid values: 
     * * If the Period parameter is set to `Year`, the value of the UsedTime parameter ranges from `1` to `5`.
     * * If the Period parameter is set to `Month`, the value of the UsedTime parameter ranges from `1` to `9`.
     * * If the Period parameter is set to `Week`, the value of the UsedTime parameter ranges from `1`, `2` and `3`.
     */
    declare public readonly usedTime: pulumi.Output<number | undefined>;
    /**
     * The ID of the vSwitch to which the host is connected.
     */
    declare public readonly vswitchId: pulumi.Output<string>;
    /**
     * The ID of the zone.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a DedicatedHost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DedicatedHostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DedicatedHostArgs | DedicatedHostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DedicatedHostState | undefined;
            resourceInputs["allocationStatus"] = state?.allocationStatus;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["dedicatedHostGroupId"] = state?.dedicatedHostGroupId;
            resourceInputs["dedicatedHostId"] = state?.dedicatedHostId;
            resourceInputs["hostClass"] = state?.hostClass;
            resourceInputs["hostName"] = state?.hostName;
            resourceInputs["imageCategory"] = state?.imageCategory;
            resourceInputs["osPassword"] = state?.osPassword;
            resourceInputs["paymentType"] = state?.paymentType;
            resourceInputs["period"] = state?.period;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["usedTime"] = state?.usedTime;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as DedicatedHostArgs | undefined;
            if (args?.dedicatedHostGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'dedicatedHostGroupId'");
            }
            if (args?.hostClass === undefined && !opts.urn) {
                throw new Error("Missing required property 'hostClass'");
            }
            if (args?.paymentType === undefined && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["allocationStatus"] = args?.allocationStatus;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["dedicatedHostGroupId"] = args?.dedicatedHostGroupId;
            resourceInputs["hostClass"] = args?.hostClass;
            resourceInputs["hostName"] = args?.hostName;
            resourceInputs["imageCategory"] = args?.imageCategory;
            resourceInputs["osPassword"] = args?.osPassword ? pulumi.secret(args.osPassword) : undefined;
            resourceInputs["paymentType"] = args?.paymentType;
            resourceInputs["period"] = args?.period;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["usedTime"] = args?.usedTime;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["dedicatedHostId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["osPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DedicatedHost.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DedicatedHost resources.
 */
export interface DedicatedHostState {
    /**
     * Specifies whether instances can be created on the host. Valid values: `Allocatable` or `Suspended`. `Allocatable`: Instances can be created on the host. `Suspended`: Instances cannot be created on the host.
     */
    allocationStatus?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the auto-renewal feature.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The ID of the dedicated cluster.
     */
    dedicatedHostGroupId?: pulumi.Input<string>;
    /**
     * The ID of the host.
     */
    dedicatedHostId?: pulumi.Input<string>;
    /**
     * The instance type of the host. For more information about the supported instance types of hosts, see [Host specification details](https://www.alibabacloud.com/help/doc-detail/206343.htm).
     */
    hostClass?: pulumi.Input<string>;
    /**
     * The name of the host. The name must be `1` to `64` characters in length and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Host Image Category. Valid values: `WindowsWithMssqlEntAlwaysonLicense`, `WindowsWithMssqlStdLicense`, `WindowsWithMssqlEntLicense`, `WindowsWithMssqlWebLicense`, `AliLinux`.
     */
    imageCategory?: pulumi.Input<string>;
    /**
     * Host password. **NOTE:** The creation of a host password is supported only when the database type is `Tair-PMem`.
     */
    osPassword?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `Subscription`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The unit of the subscription duration. Valid values: `Year`, `Month`, `Week`.
     */
    period?: pulumi.Input<string>;
    /**
     * The state of the host. Valid values: `0:` The host is being created. `1`: The host is running. `2`: The host is faulty. `3`: The host is ready for deactivation. `4`: The host is being maintained. `5`: The host is deactivated. `6`: The host is restarting. `7`: The host is locked.
     */
    status?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The subscription duration of the host. Valid values: 
     * * If the Period parameter is set to `Year`, the value of the UsedTime parameter ranges from `1` to `5`.
     * * If the Period parameter is set to `Month`, the value of the UsedTime parameter ranges from `1` to `9`.
     * * If the Period parameter is set to `Week`, the value of the UsedTime parameter ranges from `1`, `2` and `3`.
     */
    usedTime?: pulumi.Input<number>;
    /**
     * The ID of the vSwitch to which the host is connected.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DedicatedHost resource.
 */
export interface DedicatedHostArgs {
    /**
     * Specifies whether instances can be created on the host. Valid values: `Allocatable` or `Suspended`. `Allocatable`: Instances can be created on the host. `Suspended`: Instances cannot be created on the host.
     */
    allocationStatus?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the auto-renewal feature.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The ID of the dedicated cluster.
     */
    dedicatedHostGroupId: pulumi.Input<string>;
    /**
     * The instance type of the host. For more information about the supported instance types of hosts, see [Host specification details](https://www.alibabacloud.com/help/doc-detail/206343.htm).
     */
    hostClass: pulumi.Input<string>;
    /**
     * The name of the host. The name must be `1` to `64` characters in length and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Host Image Category. Valid values: `WindowsWithMssqlEntAlwaysonLicense`, `WindowsWithMssqlStdLicense`, `WindowsWithMssqlEntLicense`, `WindowsWithMssqlWebLicense`, `AliLinux`.
     */
    imageCategory?: pulumi.Input<string>;
    /**
     * Host password. **NOTE:** The creation of a host password is supported only when the database type is `Tair-PMem`.
     */
    osPassword?: pulumi.Input<string>;
    /**
     * The payment type of the resource. Valid values: `Subscription`.
     */
    paymentType: pulumi.Input<string>;
    /**
     * The unit of the subscription duration. Valid values: `Year`, `Month`, `Week`.
     */
    period?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The subscription duration of the host. Valid values: 
     * * If the Period parameter is set to `Year`, the value of the UsedTime parameter ranges from `1` to `5`.
     * * If the Period parameter is set to `Month`, the value of the UsedTime parameter ranges from `1` to `9`.
     * * If the Period parameter is set to `Week`, the value of the UsedTime parameter ranges from `1`, `2` and `3`.
     */
    usedTime?: pulumi.Input<number>;
    /**
     * The ID of the vSwitch to which the host is connected.
     */
    vswitchId: pulumi.Input<string>;
    /**
     * The ID of the zone.
     */
    zoneId: pulumi.Input<string>;
}
