// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * CDDC Dedicated Propre Host can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost example <dedicated_host_group_id>:<ecs_instance_id>
 * ```
 */
export class DedicatedPropreHost extends pulumi.CustomResource {
    /**
     * Get an existing DedicatedPropreHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DedicatedPropreHostState, opts?: pulumi.CustomResourceOptions): DedicatedPropreHost {
        return new DedicatedPropreHost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost';

    /**
     * Returns true if the given object is an instance of DedicatedPropreHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DedicatedPropreHost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DedicatedPropreHost.__pulumiType;
    }

    /**
     * Whether to enable automatic renewal. Valid values:
     * - **true**: On
     * - **false** (default): Off
     */
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * You have a dedicated cluster ID.
     */
    public readonly dedicatedHostGroupId!: pulumi.Output<string>;
    /**
     * ECS specifications. See `ecsClassList` below.
     */
    public readonly ecsClassLists!: pulumi.Output<outputs.cddc.DedicatedPropreHostEcsClassList[]>;
    /**
     * The ID of the cloud server deployment set.
     */
    public readonly ecsDeploymentSetId!: pulumi.Output<string | undefined>;
    /**
     * Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers.Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
     */
    public readonly ecsHostName!: pulumi.Output<string | undefined>;
    /**
     * ECS instance ID.
     */
    public /*out*/ readonly ecsInstanceId!: pulumi.Output<string>;
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
     */
    public readonly ecsInstanceName!: pulumi.Output<string | undefined>;
    /**
     * Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
     * - **true**: added.
     * - **false** (default): Do not add.
     * When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
     */
    public readonly ecsUniqueSuffix!: pulumi.Output<string | undefined>;
    /**
     * The ID of the zone.
     */
    public readonly ecsZoneId!: pulumi.Output<string>;
    /**
     * Database type, value:
     * - **alisql**
     * - **tair**
     * - **mssql**
     * Must be consistent with the parent resource cluster engine attributes.
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * The ID of the custom image.
     * > **NOTE:**  If you need to use the default image, you do not need to fill it in.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * The key pair name.
     */
    public readonly keyPairName!: pulumi.Output<string | undefined>;
    /**
     * Host login password, which can be set later. The password must meet the following requirements:
     * - Length is 8~30 characters.
     * - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
     * - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
     * > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
     */
    public readonly osPassword!: pulumi.Output<string | undefined>;
    /**
     * Whether to use the default password of the image.
     * - **false**: (default)Do not use
     * - **true**: Use
     * > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
     */
    public readonly passwordInherit!: pulumi.Output<string | undefined>;
    /**
     * The Payment type. Currently, only **Subscription** is supported.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * Duration of purchase.
     */
    public readonly period!: pulumi.Output<string | undefined>;
    /**
     * The subscription type. Currently, only **Monthly** (subscription) is supported.
     */
    public readonly periodType!: pulumi.Output<string | undefined>;
    /**
     * The ID of the security group.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * VPCID of the VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The ID of the virtual switch.
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a DedicatedPropreHost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DedicatedPropreHostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DedicatedPropreHostArgs | DedicatedPropreHostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DedicatedPropreHostState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["dedicatedHostGroupId"] = state ? state.dedicatedHostGroupId : undefined;
            resourceInputs["ecsClassLists"] = state ? state.ecsClassLists : undefined;
            resourceInputs["ecsDeploymentSetId"] = state ? state.ecsDeploymentSetId : undefined;
            resourceInputs["ecsHostName"] = state ? state.ecsHostName : undefined;
            resourceInputs["ecsInstanceId"] = state ? state.ecsInstanceId : undefined;
            resourceInputs["ecsInstanceName"] = state ? state.ecsInstanceName : undefined;
            resourceInputs["ecsUniqueSuffix"] = state ? state.ecsUniqueSuffix : undefined;
            resourceInputs["ecsZoneId"] = state ? state.ecsZoneId : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["osPassword"] = state ? state.osPassword : undefined;
            resourceInputs["passwordInherit"] = state ? state.passwordInherit : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodType"] = state ? state.periodType : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as DedicatedPropreHostArgs | undefined;
            if ((!args || args.ecsClassLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ecsClassLists'");
            }
            if ((!args || args.ecsZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ecsZoneId'");
            }
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["dedicatedHostGroupId"] = args ? args.dedicatedHostGroupId : undefined;
            resourceInputs["ecsClassLists"] = args ? args.ecsClassLists : undefined;
            resourceInputs["ecsDeploymentSetId"] = args ? args.ecsDeploymentSetId : undefined;
            resourceInputs["ecsHostName"] = args ? args.ecsHostName : undefined;
            resourceInputs["ecsInstanceName"] = args ? args.ecsInstanceName : undefined;
            resourceInputs["ecsUniqueSuffix"] = args ? args.ecsUniqueSuffix : undefined;
            resourceInputs["ecsZoneId"] = args ? args.ecsZoneId : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["osPassword"] = args ? args.osPassword : undefined;
            resourceInputs["passwordInherit"] = args ? args.passwordInherit : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodType"] = args ? args.periodType : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["ecsInstanceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DedicatedPropreHost.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DedicatedPropreHost resources.
 */
export interface DedicatedPropreHostState {
    /**
     * Whether to enable automatic renewal. Valid values:
     * - **true**: On
     * - **false** (default): Off
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * You have a dedicated cluster ID.
     */
    dedicatedHostGroupId?: pulumi.Input<string>;
    /**
     * ECS specifications. See `ecsClassList` below.
     */
    ecsClassLists?: pulumi.Input<pulumi.Input<inputs.cddc.DedicatedPropreHostEcsClassList>[]>;
    /**
     * The ID of the cloud server deployment set.
     */
    ecsDeploymentSetId?: pulumi.Input<string>;
    /**
     * Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers.Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
     */
    ecsHostName?: pulumi.Input<string>;
    /**
     * ECS instance ID.
     */
    ecsInstanceId?: pulumi.Input<string>;
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
     */
    ecsInstanceName?: pulumi.Input<string>;
    /**
     * Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
     * - **true**: added.
     * - **false** (default): Do not add.
     * When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
     */
    ecsUniqueSuffix?: pulumi.Input<string>;
    /**
     * The ID of the zone.
     */
    ecsZoneId?: pulumi.Input<string>;
    /**
     * Database type, value:
     * - **alisql**
     * - **tair**
     * - **mssql**
     * Must be consistent with the parent resource cluster engine attributes.
     */
    engine?: pulumi.Input<string>;
    /**
     * The ID of the custom image.
     * > **NOTE:**  If you need to use the default image, you do not need to fill it in.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The key pair name.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * Host login password, which can be set later. The password must meet the following requirements:
     * - Length is 8~30 characters.
     * - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
     * - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
     * > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
     */
    osPassword?: pulumi.Input<string>;
    /**
     * Whether to use the default password of the image.
     * - **false**: (default)Do not use
     * - **true**: Use
     * > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
     */
    passwordInherit?: pulumi.Input<string>;
    /**
     * The Payment type. Currently, only **Subscription** is supported.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Duration of purchase.
     */
    period?: pulumi.Input<string>;
    /**
     * The subscription type. Currently, only **Monthly** (subscription) is supported.
     */
    periodType?: pulumi.Input<string>;
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * VPCID of the VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the virtual switch.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DedicatedPropreHost resource.
 */
export interface DedicatedPropreHostArgs {
    /**
     * Whether to enable automatic renewal. Valid values:
     * - **true**: On
     * - **false** (default): Off
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * You have a dedicated cluster ID.
     */
    dedicatedHostGroupId?: pulumi.Input<string>;
    /**
     * ECS specifications. See `ecsClassList` below.
     */
    ecsClassLists: pulumi.Input<pulumi.Input<inputs.cddc.DedicatedPropreHostEcsClassList>[]>;
    /**
     * The ID of the cloud server deployment set.
     */
    ecsDeploymentSetId?: pulumi.Input<string>;
    /**
     * Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers.Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
     */
    ecsHostName?: pulumi.Input<string>;
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
     */
    ecsInstanceName?: pulumi.Input<string>;
    /**
     * Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
     * - **true**: added.
     * - **false** (default): Do not add.
     * When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
     */
    ecsUniqueSuffix?: pulumi.Input<string>;
    /**
     * The ID of the zone.
     */
    ecsZoneId: pulumi.Input<string>;
    /**
     * Database type, value:
     * - **alisql**
     * - **tair**
     * - **mssql**
     * Must be consistent with the parent resource cluster engine attributes.
     */
    engine: pulumi.Input<string>;
    /**
     * The ID of the custom image.
     * > **NOTE:**  If you need to use the default image, you do not need to fill it in.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The key pair name.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * Host login password, which can be set later. The password must meet the following requirements:
     * - Length is 8~30 characters.
     * - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
     * - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
     * > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
     */
    osPassword?: pulumi.Input<string>;
    /**
     * Whether to use the default password of the image.
     * - **false**: (default)Do not use
     * - **true**: Use
     * > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
     */
    passwordInherit?: pulumi.Input<string>;
    /**
     * The Payment type. Currently, only **Subscription** is supported.
     */
    paymentType: pulumi.Input<string>;
    /**
     * Duration of purchase.
     */
    period?: pulumi.Input<string>;
    /**
     * The subscription type. Currently, only **Monthly** (subscription) is supported.
     */
    periodType?: pulumi.Input<string>;
    /**
     * The ID of the security group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * VPCID of the VPC.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The ID of the virtual switch.
     */
    vswitchId: pulumi.Input<string>;
}
