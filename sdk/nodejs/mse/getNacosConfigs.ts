// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Mse Nacos Configs of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.233.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const exampleNetwork = new alicloud.vpc.Network("example", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("example", {
 *     vswitchName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 *     vpcId: exampleNetwork.id,
 *     zoneId: example.then(example => example.zones?.[0]?.id),
 * });
 * const exampleCluster = new alicloud.mse.Cluster("example", {
 *     connectionType: "slb",
 *     netType: "privatenet",
 *     vswitchId: exampleSwitch.id,
 *     clusterSpecification: "MSE_SC_1_2_60_c",
 *     clusterVersion: "NACOS_2_0_0",
 *     instanceCount: 3,
 *     pubNetworkFlow: "1",
 *     clusterAliasName: "example",
 *     mseVersion: "mse_pro",
 *     clusterType: "Nacos-Ans",
 * });
 * const exampleEngineNamespace = new alicloud.mse.EngineNamespace("example", {
 *     instanceId: exampleCluster.id,
 *     namespaceShowName: "example",
 *     namespaceId: "example",
 * });
 * const exampleNacosConfig = new alicloud.mse.NacosConfig("example", {
 *     instanceId: exampleCluster.id,
 *     dataId: "example",
 *     group: "example",
 *     namespaceId: exampleEngineNamespace.namespaceId,
 *     content: "example",
 *     type: "text",
 *     tags: "example",
 *     appName: "example",
 *     desc: "example",
 * });
 * const exampleGetNacosConfigs = pulumi.all([exampleCluster.id, exampleEngineNamespace.namespaceId]).apply(([id, namespaceId]) => alicloud.mse.getNacosConfigsOutput({
 *     instanceId: id,
 *     enableDetails: true,
 *     namespaceId: namespaceId,
 * }));
 * ```
 */
export function getNacosConfigs(args: GetNacosConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetNacosConfigsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:mse/getNacosConfigs:getNacosConfigs", {
        "acceptLanguage": args.acceptLanguage,
        "appName": args.appName,
        "dataId": args.dataId,
        "enableDetails": args.enableDetails,
        "group": args.group,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "namespaceId": args.namespaceId,
        "outputFile": args.outputFile,
        "requestPars": args.requestPars,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getNacosConfigs.
 */
export interface GetNacosConfigsArgs {
    /**
     * The language type of the returned information. Valid values: `zh`, `en`.
     */
    acceptLanguage?: string;
    /**
     * The name of the application.
     */
    appName?: string;
    /**
     * The ID of the data.
     */
    dataId?: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * The ID of the group.
     */
    group?: string;
    /**
     * A list of MSE Engine Configs ids. It is formatted to `<instance_id>:<namespace_id>:<data_id>:<group>`.
     */
    ids?: string[];
    /**
     * The ID of the instance.
     */
    instanceId: string;
    /**
     * The id of Namespace.
     */
    namespaceId?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     * *
     */
    outputFile?: string;
    /**
     * The extended request parameters. The JSON format is supported.
     */
    requestPars?: string;
    /**
     * The tags of the configuration.
     */
    tags?: string;
}

/**
 * A collection of values returned by getNacosConfigs.
 */
export interface GetNacosConfigsResult {
    readonly acceptLanguage?: string;
    /**
     * The name of the application.
     */
    readonly appName?: string;
    /**
     * A list of Mse Nacos Configs. Each element contains the following attributes:
     */
    readonly configs: outputs.mse.GetNacosConfigsConfig[];
    /**
     * The ID of the data.
     */
    readonly dataId?: string;
    readonly enableDetails?: boolean;
    /**
     * The ID of the group.
     */
    readonly group?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId: string;
    readonly namespaceId?: string;
    readonly outputFile?: string;
    readonly requestPars?: string;
    /**
     * The tags of the configuration.
     */
    readonly tags?: string;
}
/**
 * This data source provides the Mse Nacos Configs of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.233.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const exampleNetwork = new alicloud.vpc.Network("example", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("example", {
 *     vswitchName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 *     vpcId: exampleNetwork.id,
 *     zoneId: example.then(example => example.zones?.[0]?.id),
 * });
 * const exampleCluster = new alicloud.mse.Cluster("example", {
 *     connectionType: "slb",
 *     netType: "privatenet",
 *     vswitchId: exampleSwitch.id,
 *     clusterSpecification: "MSE_SC_1_2_60_c",
 *     clusterVersion: "NACOS_2_0_0",
 *     instanceCount: 3,
 *     pubNetworkFlow: "1",
 *     clusterAliasName: "example",
 *     mseVersion: "mse_pro",
 *     clusterType: "Nacos-Ans",
 * });
 * const exampleEngineNamespace = new alicloud.mse.EngineNamespace("example", {
 *     instanceId: exampleCluster.id,
 *     namespaceShowName: "example",
 *     namespaceId: "example",
 * });
 * const exampleNacosConfig = new alicloud.mse.NacosConfig("example", {
 *     instanceId: exampleCluster.id,
 *     dataId: "example",
 *     group: "example",
 *     namespaceId: exampleEngineNamespace.namespaceId,
 *     content: "example",
 *     type: "text",
 *     tags: "example",
 *     appName: "example",
 *     desc: "example",
 * });
 * const exampleGetNacosConfigs = pulumi.all([exampleCluster.id, exampleEngineNamespace.namespaceId]).apply(([id, namespaceId]) => alicloud.mse.getNacosConfigsOutput({
 *     instanceId: id,
 *     enableDetails: true,
 *     namespaceId: namespaceId,
 * }));
 * ```
 */
export function getNacosConfigsOutput(args: GetNacosConfigsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNacosConfigsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:mse/getNacosConfigs:getNacosConfigs", {
        "acceptLanguage": args.acceptLanguage,
        "appName": args.appName,
        "dataId": args.dataId,
        "enableDetails": args.enableDetails,
        "group": args.group,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "namespaceId": args.namespaceId,
        "outputFile": args.outputFile,
        "requestPars": args.requestPars,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getNacosConfigs.
 */
export interface GetNacosConfigsOutputArgs {
    /**
     * The language type of the returned information. Valid values: `zh`, `en`.
     */
    acceptLanguage?: pulumi.Input<string>;
    /**
     * The name of the application.
     */
    appName?: pulumi.Input<string>;
    /**
     * The ID of the data.
     */
    dataId?: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * The ID of the group.
     */
    group?: pulumi.Input<string>;
    /**
     * A list of MSE Engine Configs ids. It is formatted to `<instance_id>:<namespace_id>:<data_id>:<group>`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The id of Namespace.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     * *
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The extended request parameters. The JSON format is supported.
     */
    requestPars?: pulumi.Input<string>;
    /**
     * The tags of the configuration.
     */
    tags?: pulumi.Input<string>;
}
