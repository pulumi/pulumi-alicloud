// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides a list of MSE Clusters in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available since v1.94.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * // Create resource
 * const example = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const exampleNetwork = new alicloud.vpc.Network("example", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("example", {
 *     vswitchName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 *     vpcId: exampleNetwork.id,
 *     zoneId: example.then(example => example.zones?.[0]?.id),
 * });
 * const exampleCluster = new alicloud.mse.Cluster("example", {
 *     clusterSpecification: "MSE_SC_1_2_60_c",
 *     clusterType: "Nacos-Ans",
 *     clusterVersion: "NACOS_2_0_0",
 *     instanceCount: 3,
 *     netType: "privatenet",
 *     pubNetworkFlow: "1",
 *     connectionType: "slb",
 *     clusterAliasName: "terraform-example",
 *     mseVersion: "mse_pro",
 *     vswitchId: exampleSwitch.id,
 *     vpcId: exampleNetwork.id,
 * });
 * // Declare the data source
 * const exampleGetClusters = pulumi.all([exampleCluster.id, exampleCluster.clusterAliasName]).apply(([id, clusterAliasName]) => alicloud.mse.getClustersOutput({
 *     enableDetails: true,
 *     ids: [id],
 *     status: "INIT_SUCCESS",
 *     nameRegex: clusterAliasName,
 * }));
 * export const instanceId = exampleGetClusters.apply(exampleGetClusters => exampleGetClusters.clusters?.[0]?.id);
 * ```
 */
export function getClusters(args?: GetClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetClustersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:mse/getClusters:getClusters", {
        "clusterAliasName": args.clusterAliasName,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "requestPars": args.requestPars,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusters.
 */
export interface GetClustersArgs {
    /**
     * The alias name of MSE Cluster.
     */
    clusterAliasName?: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of MSE Cluster ids. It is formatted to `<instance_id>`
     */
    ids?: string[];
    /**
     * A regex string to filter the results by the cluster alias name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The extended request parameters. The JSON format is supported.
     */
    requestPars?: string;
    /**
     * The status of MSE Cluster. Valid: `DESTROY_FAILED`, `DESTROY_ING`, `DESTROY_SUCCESS`, `INIT_FAILED`, `INIT_ING`, `INIT_SUCCESS`, `INIT_TIME_OUT`, `RESTART_FAILED`, `RESTART_ING`, `RESTART_SUCCESS`, `SCALE_FAILED`, `SCALE_ING`, `SCALE_SUCCESS`
     */
    status?: string;
}

/**
 * A collection of values returned by getClusters.
 */
export interface GetClustersResult {
    readonly clusterAliasName?: string;
    /**
     * A list of MSE Clusters. Each element contains the following attributes:
     */
    readonly clusters: outputs.mse.GetClustersCluster[];
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of MSE Cluster ids.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of MSE Cluster names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    readonly requestPars?: string;
    /**
     * The status of MSE Cluster.
     */
    readonly status?: string;
}
/**
 * This data source provides a list of MSE Clusters in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available since v1.94.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * // Create resource
 * const example = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const exampleNetwork = new alicloud.vpc.Network("example", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 * });
 * const exampleSwitch = new alicloud.vpc.Switch("example", {
 *     vswitchName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 *     vpcId: exampleNetwork.id,
 *     zoneId: example.then(example => example.zones?.[0]?.id),
 * });
 * const exampleCluster = new alicloud.mse.Cluster("example", {
 *     clusterSpecification: "MSE_SC_1_2_60_c",
 *     clusterType: "Nacos-Ans",
 *     clusterVersion: "NACOS_2_0_0",
 *     instanceCount: 3,
 *     netType: "privatenet",
 *     pubNetworkFlow: "1",
 *     connectionType: "slb",
 *     clusterAliasName: "terraform-example",
 *     mseVersion: "mse_pro",
 *     vswitchId: exampleSwitch.id,
 *     vpcId: exampleNetwork.id,
 * });
 * // Declare the data source
 * const exampleGetClusters = pulumi.all([exampleCluster.id, exampleCluster.clusterAliasName]).apply(([id, clusterAliasName]) => alicloud.mse.getClustersOutput({
 *     enableDetails: true,
 *     ids: [id],
 *     status: "INIT_SUCCESS",
 *     nameRegex: clusterAliasName,
 * }));
 * export const instanceId = exampleGetClusters.apply(exampleGetClusters => exampleGetClusters.clusters?.[0]?.id);
 * ```
 */
export function getClustersOutput(args?: GetClustersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClustersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:mse/getClusters:getClusters", {
        "clusterAliasName": args.clusterAliasName,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "requestPars": args.requestPars,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusters.
 */
export interface GetClustersOutputArgs {
    /**
     * The alias name of MSE Cluster.
     */
    clusterAliasName?: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of MSE Cluster ids. It is formatted to `<instance_id>`
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter the results by the cluster alias name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The extended request parameters. The JSON format is supported.
     */
    requestPars?: pulumi.Input<string>;
    /**
     * The status of MSE Cluster. Valid: `DESTROY_FAILED`, `DESTROY_ING`, `DESTROY_SUCCESS`, `INIT_FAILED`, `INIT_ING`, `INIT_SUCCESS`, `INIT_TIME_OUT`, `RESTART_FAILED`, `RESTART_ING`, `RESTART_SUCCESS`, `SCALE_FAILED`, `SCALE_ING`, `SCALE_SUCCESS`
     */
    status?: pulumi.Input<string>;
}
