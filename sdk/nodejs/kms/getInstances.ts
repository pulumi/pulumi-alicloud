// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
 *
 * > **NOTE:** Available since v1.242.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const current = alicloud.getAccount({});
 * const vpc_amp_instance_example = new alicloud.vpc.Network("vpc-amp-instance-example", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const vswitch = new alicloud.vpc.Switch("vswitch", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const vswitch_j = new alicloud.vpc.Switch("vswitch-j", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-j",
 *     cidrBlock: "172.16.2.0/24",
 * });
 * const shareVPC = new alicloud.vpc.Network("shareVPC", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s3",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const shareVswitch = new alicloud.vpc.Switch("shareVswitch", {
 *     vpcId: shareVPC.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC2 = new alicloud.vpc.Network("share-VPC2", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s5",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vswitch2 = new alicloud.vpc.Switch("share-vswitch2", {
 *     vpcId: share_VPC2.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC3 = new alicloud.vpc.Network("share-VPC3", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s7",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vsw3 = new alicloud.vpc.Switch("share-vsw3", {
 *     vpcId: share_VPC3.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const defaultInstance = new alicloud.kms.Instance("default", {
 *     vpcNum: 7,
 *     keyNum: 1000,
 *     secretNum: 0,
 *     spec: 1000,
 *     renewStatus: "ManualRenewal",
 *     productVersion: "3",
 *     renewPeriod: 3,
 *     vpcId: vswitch.vpcId,
 *     zoneIds: [
 *         "cn-hangzhou-k",
 *         "cn-hangzhou-j",
 *     ],
 *     vswitchIds: [vswitch.id],
 *     bindVpcs: [
 *         {
 *             vpcId: shareVswitch.vpcId,
 *             regionId: "cn-hangzhou",
 *             vswitchId: shareVswitch.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vswitch2.vpcId,
 *             regionId: "cn-hangzhou",
 *             vswitchId: share_vswitch2.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vsw3.vpcId,
 *             regionId: "cn-hangzhou",
 *             vswitchId: share_vsw3.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *     ],
 *     log: "0",
 *     period: 1,
 *     logStorage: 0,
 *     paymentType: "Subscription",
 * });
 * const _default = alicloud.kms.getInstancesOutput({
 *     ids: [defaultInstance.id],
 * });
 * export const alicloudKmsInstanceExampleId = _default.apply(_default => _default.instances?.[0]?.instanceId);
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:kms/getInstances:getInstances", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * A list of Instance IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Instance IDs.
     */
    readonly ids: string[];
    /**
     * A list of Instance Entries. Each element contains the following attributes:
     */
    readonly instances: outputs.kms.GetInstancesInstance[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
}
/**
 * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
 *
 * > **NOTE:** Available since v1.242.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const current = alicloud.getAccount({});
 * const vpc_amp_instance_example = new alicloud.vpc.Network("vpc-amp-instance-example", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const vswitch = new alicloud.vpc.Switch("vswitch", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const vswitch_j = new alicloud.vpc.Switch("vswitch-j", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-j",
 *     cidrBlock: "172.16.2.0/24",
 * });
 * const shareVPC = new alicloud.vpc.Network("shareVPC", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s3",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const shareVswitch = new alicloud.vpc.Switch("shareVswitch", {
 *     vpcId: shareVPC.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC2 = new alicloud.vpc.Network("share-VPC2", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s5",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vswitch2 = new alicloud.vpc.Switch("share-vswitch2", {
 *     vpcId: share_VPC2.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC3 = new alicloud.vpc.Network("share-VPC3", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s7",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vsw3 = new alicloud.vpc.Switch("share-vsw3", {
 *     vpcId: share_VPC3.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const defaultInstance = new alicloud.kms.Instance("default", {
 *     vpcNum: 7,
 *     keyNum: 1000,
 *     secretNum: 0,
 *     spec: 1000,
 *     renewStatus: "ManualRenewal",
 *     productVersion: "3",
 *     renewPeriod: 3,
 *     vpcId: vswitch.vpcId,
 *     zoneIds: [
 *         "cn-hangzhou-k",
 *         "cn-hangzhou-j",
 *     ],
 *     vswitchIds: [vswitch.id],
 *     bindVpcs: [
 *         {
 *             vpcId: shareVswitch.vpcId,
 *             regionId: "cn-hangzhou",
 *             vswitchId: shareVswitch.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vswitch2.vpcId,
 *             regionId: "cn-hangzhou",
 *             vswitchId: share_vswitch2.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vsw3.vpcId,
 *             regionId: "cn-hangzhou",
 *             vswitchId: share_vsw3.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *     ],
 *     log: "0",
 *     period: 1,
 *     logStorage: 0,
 *     paymentType: "Subscription",
 * });
 * const _default = alicloud.kms.getInstancesOutput({
 *     ids: [defaultInstance.id],
 * });
 * export const alicloudKmsInstanceExampleId = _default.apply(_default => _default.instances?.[0]?.instanceId);
 * ```
 */
export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:kms/getInstances:getInstances", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * A list of Instance IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
}
