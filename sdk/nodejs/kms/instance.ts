// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a KMS Instance resource.
 *
 * For information about KMS Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/zh/key-management-service/latest/kms-instance-management).
 *
 * > **NOTE:** Available since v1.210.0.
 *
 * ## Example Usage
 *
 * Create a subscription kms instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const region = config.get("region") || "cn-hangzhou";
 * const name = config.get("name") || "terraform-example";
 * const current = alicloud.getAccount({});
 * const vpc_amp_instance_example = new alicloud.vpc.Network("vpc-amp-instance-example", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const vswitch = new alicloud.vpc.Switch("vswitch", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const vswitch_j = new alicloud.vpc.Switch("vswitch-j", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-j",
 *     cidrBlock: "172.16.2.0/24",
 * });
 * const shareVPC = new alicloud.vpc.Network("shareVPC", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s3",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const shareVswitch = new alicloud.vpc.Switch("shareVswitch", {
 *     vpcId: shareVPC.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC2 = new alicloud.vpc.Network("share-VPC2", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s5",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vswitch2 = new alicloud.vpc.Switch("share-vswitch2", {
 *     vpcId: share_VPC2.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC3 = new alicloud.vpc.Network("share-VPC3", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s7",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vsw3 = new alicloud.vpc.Switch("share-vsw3", {
 *     vpcId: share_VPC3.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const _default = new alicloud.kms.Instance("default", {
 *     vpcNum: 7,
 *     keyNum: 1000,
 *     secretNum: 0,
 *     spec: 1000,
 *     renewStatus: "ManualRenewal",
 *     productVersion: "3",
 *     renewPeriod: 3,
 *     vpcId: vswitch.vpcId,
 *     zoneIds: [
 *         "cn-hangzhou-k",
 *         "cn-hangzhou-j",
 *     ],
 *     vswitchIds: [vswitch_j.id],
 *     bindVpcs: [
 *         {
 *             vpcId: shareVswitch.vpcId,
 *             regionId: region,
 *             vswitchId: shareVswitch.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vswitch2.vpcId,
 *             regionId: region,
 *             vswitchId: share_vswitch2.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vsw3.vpcId,
 *             regionId: region,
 *             vswitchId: share_vsw3.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *     ],
 *     log: "0",
 *     period: 1,
 *     logStorage: 0,
 *     paymentType: "Subscription",
 * });
 * ```
 * Create a pay-as-you-go kms instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const region = config.get("region") || "cn-hangzhou";
 * const name = config.get("name") || "terraform-example";
 * const current = alicloud.getAccount({});
 * const vpc_amp_instance_example = new alicloud.vpc.Network("vpc-amp-instance-example", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const vswitch = new alicloud.vpc.Switch("vswitch", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const vswitch_j = new alicloud.vpc.Switch("vswitch-j", {
 *     vpcId: vpc_amp_instance_example.id,
 *     zoneId: "cn-hangzhou-j",
 *     cidrBlock: "172.16.2.0/24",
 * });
 * const shareVPC = new alicloud.vpc.Network("shareVPC", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s3",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const shareVswitch = new alicloud.vpc.Switch("shareVswitch", {
 *     vpcId: shareVPC.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC2 = new alicloud.vpc.Network("share-VPC2", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s5",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vswitch2 = new alicloud.vpc.Switch("share-vswitch2", {
 *     vpcId: share_VPC2.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const share_VPC3 = new alicloud.vpc.Network("share-VPC3", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: std.format({
 *         input: "%s7",
 *         args: [name],
 *     }).then(invoke => invoke.result),
 * });
 * const share_vsw3 = new alicloud.vpc.Switch("share-vsw3", {
 *     vpcId: share_VPC3.id,
 *     zoneId: "cn-hangzhou-k",
 *     cidrBlock: "172.16.1.0/24",
 * });
 * const _default = new alicloud.kms.Instance("default", {
 *     paymentType: "PayAsYouGo",
 *     productVersion: "3",
 *     vpcId: vswitch.vpcId,
 *     zoneIds: [
 *         vswitch.zoneId,
 *         vswitch_j.zoneId,
 *     ],
 *     vswitchIds: [vswitch.id],
 *     forceDeleteWithoutBackup: "true",
 *     bindVpcs: [
 *         {
 *             vpcId: shareVswitch.vpcId,
 *             regionId: region,
 *             vswitchId: shareVswitch.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vswitch2.vpcId,
 *             regionId: region,
 *             vswitchId: share_vswitch2.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *         {
 *             vpcId: share_vsw3.vpcId,
 *             regionId: region,
 *             vswitchId: share_vsw3.id,
 *             vpcOwnerId: current.then(current => current.id),
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * KMS Instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:kms/instance:Instance example <id>
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:kms/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
     */
    declare public readonly bindVpcs: pulumi.Output<outputs.kms.InstanceBindVpc[] | undefined>;
    /**
     * KMS instance certificate chain in PEM format.
     */
    declare public /*out*/ readonly caCertificateChainPem: pulumi.Output<string>;
    /**
     * The creation time of the resource.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * (Available since v1.233.1) Instance expiration time.
     */
    declare public /*out*/ readonly endDate: pulumi.Output<string>;
    /**
     * Whether to force deletion even without backup.
     */
    declare public readonly forceDeleteWithoutBackup: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    declare public readonly instanceName: pulumi.Output<string>;
    /**
     * Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly keyNum: pulumi.Output<number | undefined>;
    /**
     * Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly log: pulumi.Output<string>;
    /**
     * Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly logStorage: pulumi.Output<number>;
    /**
     * Payment type, valid values:
     * - `Subscription`: Prepaid.
     * - `PayAsYouGo`: Postpaid.
     */
    declare public readonly paymentType: pulumi.Output<string>;
    /**
     * Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * KMS Instance commodity type (software/hardware)
     */
    declare public readonly productVersion: pulumi.Output<string>;
    /**
     * Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly renewPeriod: pulumi.Output<number | undefined>;
    /**
     * Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly renewStatus: pulumi.Output<string>;
    /**
     * Automatic renewal period unit, valid value:
     * - `M`: Month.
     * - `Y`: Year.
     */
    declare public readonly renewalPeriodUnit: pulumi.Output<string | undefined>;
    /**
     * Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly secretNum: pulumi.Output<number | undefined>;
    /**
     * The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly spec: pulumi.Output<number | undefined>;
    /**
     * Instance status.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
     */
    declare public readonly vpcId: pulumi.Output<string>;
    /**
     * The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    declare public readonly vpcNum: pulumi.Output<number | undefined>;
    /**
     * Instance bind vswitches
     */
    declare public readonly vswitchIds: pulumi.Output<string[]>;
    /**
     * zone id
     */
    declare public readonly zoneIds: pulumi.Output<string[]>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["bindVpcs"] = state?.bindVpcs;
            resourceInputs["caCertificateChainPem"] = state?.caCertificateChainPem;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["endDate"] = state?.endDate;
            resourceInputs["forceDeleteWithoutBackup"] = state?.forceDeleteWithoutBackup;
            resourceInputs["instanceName"] = state?.instanceName;
            resourceInputs["keyNum"] = state?.keyNum;
            resourceInputs["log"] = state?.log;
            resourceInputs["logStorage"] = state?.logStorage;
            resourceInputs["paymentType"] = state?.paymentType;
            resourceInputs["period"] = state?.period;
            resourceInputs["productVersion"] = state?.productVersion;
            resourceInputs["renewPeriod"] = state?.renewPeriod;
            resourceInputs["renewStatus"] = state?.renewStatus;
            resourceInputs["renewalPeriodUnit"] = state?.renewalPeriodUnit;
            resourceInputs["secretNum"] = state?.secretNum;
            resourceInputs["spec"] = state?.spec;
            resourceInputs["status"] = state?.status;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vpcNum"] = state?.vpcNum;
            resourceInputs["vswitchIds"] = state?.vswitchIds;
            resourceInputs["zoneIds"] = state?.zoneIds;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if (args?.vswitchIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchIds'");
            }
            if (args?.zoneIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneIds'");
            }
            resourceInputs["bindVpcs"] = args?.bindVpcs;
            resourceInputs["forceDeleteWithoutBackup"] = args?.forceDeleteWithoutBackup;
            resourceInputs["instanceName"] = args?.instanceName;
            resourceInputs["keyNum"] = args?.keyNum;
            resourceInputs["log"] = args?.log;
            resourceInputs["logStorage"] = args?.logStorage;
            resourceInputs["paymentType"] = args?.paymentType;
            resourceInputs["period"] = args?.period;
            resourceInputs["productVersion"] = args?.productVersion;
            resourceInputs["renewPeriod"] = args?.renewPeriod;
            resourceInputs["renewStatus"] = args?.renewStatus;
            resourceInputs["renewalPeriodUnit"] = args?.renewalPeriodUnit;
            resourceInputs["secretNum"] = args?.secretNum;
            resourceInputs["spec"] = args?.spec;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vpcNum"] = args?.vpcNum;
            resourceInputs["vswitchIds"] = args?.vswitchIds;
            resourceInputs["zoneIds"] = args?.zoneIds;
            resourceInputs["caCertificateChainPem"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["endDate"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
     */
    bindVpcs?: pulumi.Input<pulumi.Input<inputs.kms.InstanceBindVpc>[]>;
    /**
     * KMS instance certificate chain in PEM format.
     */
    caCertificateChainPem?: pulumi.Input<string>;
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * (Available since v1.233.1) Instance expiration time.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Whether to force deletion even without backup.
     */
    forceDeleteWithoutBackup?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    keyNum?: pulumi.Input<number>;
    /**
     * Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    log?: pulumi.Input<string>;
    /**
     * Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    logStorage?: pulumi.Input<number>;
    /**
     * Payment type, valid values:
     * - `Subscription`: Prepaid.
     * - `PayAsYouGo`: Postpaid.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    period?: pulumi.Input<number>;
    /**
     * KMS Instance commodity type (software/hardware)
     */
    productVersion?: pulumi.Input<string>;
    /**
     * Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    renewPeriod?: pulumi.Input<number>;
    /**
     * Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    renewStatus?: pulumi.Input<string>;
    /**
     * Automatic renewal period unit, valid value:
     * - `M`: Month.
     * - `Y`: Year.
     */
    renewalPeriodUnit?: pulumi.Input<string>;
    /**
     * Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    secretNum?: pulumi.Input<number>;
    /**
     * The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    spec?: pulumi.Input<number>;
    /**
     * Instance status.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    vpcNum?: pulumi.Input<number>;
    /**
     * Instance bind vswitches
     */
    vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * zone id
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
     */
    bindVpcs?: pulumi.Input<pulumi.Input<inputs.kms.InstanceBindVpc>[]>;
    /**
     * Whether to force deletion even without backup.
     */
    forceDeleteWithoutBackup?: pulumi.Input<string>;
    /**
     * The name of the resource
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    keyNum?: pulumi.Input<number>;
    /**
     * Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    log?: pulumi.Input<string>;
    /**
     * Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    logStorage?: pulumi.Input<number>;
    /**
     * Payment type, valid values:
     * - `Subscription`: Prepaid.
     * - `PayAsYouGo`: Postpaid.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    period?: pulumi.Input<number>;
    /**
     * KMS Instance commodity type (software/hardware)
     */
    productVersion?: pulumi.Input<string>;
    /**
     * Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    renewPeriod?: pulumi.Input<number>;
    /**
     * Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    renewStatus?: pulumi.Input<string>;
    /**
     * Automatic renewal period unit, valid value:
     * - `M`: Month.
     * - `Y`: Year.
     */
    renewalPeriodUnit?: pulumi.Input<string>;
    /**
     * Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    secretNum?: pulumi.Input<number>;
    /**
     * The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    spec?: pulumi.Input<number>;
    /**
     * The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
     */
    vpcNum?: pulumi.Input<number>;
    /**
     * Instance bind vswitches
     */
    vswitchIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * zone id
     */
    zoneIds: pulumi.Input<pulumi.Input<string>[]>;
}
