// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an Alicloud MongoDB replica set role resource to modify the connection string of the replica set.
 *
 * For information about how to modify connection string of MongoDB, see [Modify Connection String](https://alibabacloud.com/help/en/mongodb/user-guide/change-the-endpoint-and-port-of-an-instance).
 *
 * > **NOTE:** Available since v1.248.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.mongodb.getZones({});
 * const index = _default.then(_default => _default.zones).length.apply(length => length - 1);
 * const zoneId = _default.then(_default => _default.zones[index].id);
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     cidrBlock: "10.0.0.0/8",
 *     vpcName: name,
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vpcId: defaultNetwork.id,
 *     zoneId: zoneId,
 *     cidrBlock: "10.0.0.0/24",
 * });
 * const defaultInstance = new alicloud.mongodb.Instance("default", {
 *     engineVersion: "4.4",
 *     storageType: "cloud_essd1",
 *     vswitchId: defaultSwitch.id,
 *     dbInstanceStorage: 20,
 *     vpcId: defaultNetwork.id,
 *     dbInstanceClass: "mdb.shard.4x.large.d",
 *     storageEngine: "WiredTiger",
 *     networkType: "VPC",
 *     zoneId: zoneId,
 * });
 * const defaultPublicNetworkAddress = new alicloud.mongodb.PublicNetworkAddress("default", {dbInstanceId: defaultInstance.id});
 * // modify private network address.
 * const _private = new alicloud.mongodb.ReplicaSetRole("private", {
 *     dbInstanceId: defaultInstance.id,
 *     roleId: defaultInstance.replicaSets.apply(replicaSets => replicaSets[0].roleId),
 *     connectionPrefix: "test-tf-private-change",
 *     connectionPort: 3718,
 *     networkType: "VPC",
 * });
 * // modify public network address.
 * const _public = new alicloud.mongodb.ReplicaSetRole("public", {
 *     dbInstanceId: defaultInstance.id,
 *     roleId: defaultPublicNetworkAddress.replicaSets.apply(replicaSets => replicaSets[0].roleId),
 *     connectionPrefix: "test-tf-public-0",
 *     connectionPort: 3719,
 *     networkType: "Public",
 * });
 * ```
 *
 * ## Import
 *
 * MongoDB replica set role can be imported using the id, e.g. Composed of instance ID, network type and role ID with format `<db_instance_id>:<network_type>:<role_id>`.
 *
 * ```sh
 * $ pulumi import alicloud:mongodb/replicaSetRole:ReplicaSetRole example <id>
 * ```
 */
export class ReplicaSetRole extends pulumi.CustomResource {
    /**
     * Get an existing ReplicaSetRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicaSetRoleState, opts?: pulumi.CustomResourceOptions): ReplicaSetRole {
        return new ReplicaSetRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:mongodb/replicaSetRole:ReplicaSetRole';

    /**
     * Returns true if the given object is an instance of ReplicaSetRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReplicaSetRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicaSetRole.__pulumiType;
    }

    /**
     * The connection address of the role.
     */
    declare public /*out*/ readonly connectionDomain: pulumi.Output<string>;
    /**
     * The port of the connection string, will be computed if not specified.`
     */
    declare public readonly connectionPort: pulumi.Output<number>;
    /**
     * The prefix of the connection string, will be computed if not specified.
     */
    declare public readonly connectionPrefix: pulumi.Output<string>;
    /**
     * The instance ID.
     */
    declare public readonly dbInstanceId: pulumi.Output<string>;
    /**
     * The network type of the connection string. Valid values:
     * - `VPC`: private network address.
     * - `Public`: public network address.
     */
    declare public readonly networkType: pulumi.Output<string>;
    /**
     * The role of the related connection string.
     */
    declare public /*out*/ readonly replicaSetRole: pulumi.Output<string>;
    /**
     * The role ID in the replica set.
     */
    declare public readonly roleId: pulumi.Output<string>;

    /**
     * Create a ReplicaSetRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicaSetRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReplicaSetRoleArgs | ReplicaSetRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReplicaSetRoleState | undefined;
            resourceInputs["connectionDomain"] = state?.connectionDomain;
            resourceInputs["connectionPort"] = state?.connectionPort;
            resourceInputs["connectionPrefix"] = state?.connectionPrefix;
            resourceInputs["dbInstanceId"] = state?.dbInstanceId;
            resourceInputs["networkType"] = state?.networkType;
            resourceInputs["replicaSetRole"] = state?.replicaSetRole;
            resourceInputs["roleId"] = state?.roleId;
        } else {
            const args = argsOrState as ReplicaSetRoleArgs | undefined;
            if (args?.dbInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            if (args?.networkType === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkType'");
            }
            if (args?.roleId === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleId'");
            }
            resourceInputs["connectionPort"] = args?.connectionPort;
            resourceInputs["connectionPrefix"] = args?.connectionPrefix;
            resourceInputs["dbInstanceId"] = args?.dbInstanceId;
            resourceInputs["networkType"] = args?.networkType;
            resourceInputs["roleId"] = args?.roleId;
            resourceInputs["connectionDomain"] = undefined /*out*/;
            resourceInputs["replicaSetRole"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReplicaSetRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReplicaSetRole resources.
 */
export interface ReplicaSetRoleState {
    /**
     * The connection address of the role.
     */
    connectionDomain?: pulumi.Input<string>;
    /**
     * The port of the connection string, will be computed if not specified.`
     */
    connectionPort?: pulumi.Input<number>;
    /**
     * The prefix of the connection string, will be computed if not specified.
     */
    connectionPrefix?: pulumi.Input<string>;
    /**
     * The instance ID.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * The network type of the connection string. Valid values:
     * - `VPC`: private network address.
     * - `Public`: public network address.
     */
    networkType?: pulumi.Input<string>;
    /**
     * The role of the related connection string.
     */
    replicaSetRole?: pulumi.Input<string>;
    /**
     * The role ID in the replica set.
     */
    roleId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReplicaSetRole resource.
 */
export interface ReplicaSetRoleArgs {
    /**
     * The port of the connection string, will be computed if not specified.`
     */
    connectionPort?: pulumi.Input<number>;
    /**
     * The prefix of the connection string, will be computed if not specified.
     */
    connectionPrefix?: pulumi.Input<string>;
    /**
     * The instance ID.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * The network type of the connection string. Valid values:
     * - `VPC`: private network address.
     * - `Public`: public network address.
     */
    networkType: pulumi.Input<string>;
    /**
     * The role ID in the replica set.
     */
    roleId: pulumi.Input<string>;
}
