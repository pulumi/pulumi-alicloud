// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * The `alicloud.mongodb.getInstances` data source provides a collection of MongoDB instances available in Alicloud account.
 * Filters support regular expression for the instance name, engine or instance type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const mongo = pulumi.output(alicloud.mongodb.getInstances({
 *     availabilityZone: "eu-central-1a",
 *     instanceClass: "dds.mongo.mid",
 *     instanceType: "replicate",
 *     nameRegex: "dds-.+\\d+",
 * }));
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:mongodb/getInstances:getInstances", {
        "availabilityZone": args.availabilityZone,
        "ids": args.ids,
        "instanceClass": args.instanceClass,
        "instanceType": args.instanceType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * Instance availability zone.
     */
    availabilityZone?: string;
    /**
     * The ids list of MongoDB instances
     */
    ids?: string[];
    /**
     * Sizing of the instance to be queried.
     */
    instanceClass?: string;
    /**
     * Type of the instance to be queried. If it is set to `sharding`, the sharded cluster instances are listed. If it is set to `replicate`, replica set instances are listed. Default value `replicate`.
     */
    instanceType?: string;
    /**
     * A regex string to apply to the instance name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    /**
     * Instance availability zone.
     */
    readonly availabilityZone?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ids list of MongoDB instances
     */
    readonly ids: string[];
    /**
     * Sizing of the MongoDB instance.
     */
    readonly instanceClass?: string;
    /**
     * Instance type. Optional values `sharding` or `replicate`.
     */
    readonly instanceType?: string;
    /**
     * A list of MongoDB instances. Its every element contains the following attributes:
     */
    readonly instances: outputs.mongodb.GetInstancesInstance[];
    readonly nameRegex?: string;
    /**
     * The names list of MongoDB instances
     */
    readonly names: string[];
    readonly outputFile?: string;
    readonly tags?: {[key: string]: any};
}

export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstancesResult> {
    return pulumi.output(args).apply(a => getInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * Instance availability zone.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The ids list of MongoDB instances
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sizing of the instance to be queried.
     */
    instanceClass?: pulumi.Input<string>;
    /**
     * Type of the instance to be queried. If it is set to `sharding`, the sharded cluster instances are listed. If it is set to `replicate`, replica set instances are listed. Default value `replicate`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * A regex string to apply to the instance name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
