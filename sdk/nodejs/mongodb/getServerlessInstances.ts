// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Mongodb Serverless Instances of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.148.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.mongodb.getServerlessInstances({
 *     ids: ["example_value"],
 *     dbInstanceClass: "example_value",
 *     dbInstanceDescription: "example_value",
 *     networkType: "VPC",
 *     resourceGroupId: "example_value",
 *     status: "Running",
 *     vpcId: "example_value",
 *     vswitchId: "example_value",
 *     zoneId: "example_value",
 *     tags: {
 *         Created: "MongodbServerlessInstance",
 *         For: "TF",
 *     },
 * });
 * export const mongodbServerlessInstanceId1 = example.then(example => example.instances?[0]?.id);
 * ```
 */
export function getServerlessInstances(args?: GetServerlessInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetServerlessInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:mongodb/getServerlessInstances:getServerlessInstances", {
        "dbInstanceClass": args.dbInstanceClass,
        "dbInstanceDescription": args.dbInstanceDescription,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "networkType": args.networkType,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerlessInstances.
 */
export interface GetServerlessInstancesArgs {
    /**
     * The db instance class.
     */
    dbInstanceClass?: string;
    /**
     * The db instance description.
     */
    dbInstanceDescription?: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: boolean;
    /**
     * A list of Serverless Instance IDs.
     */
    ids?: string[];
    /**
     * The network type of the instance.
     */
    networkType?: string;
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * The status of the instance.
     */
    status?: string;
    /**
     * The tag of the resource.
     */
    tags?: {[key: string]: any};
    /**
     * The ID of the VPC network.
     */
    vpcId?: string;
    /**
     * The id of the vswitch.
     */
    vswitchId?: string;
    /**
     * The ID of the zone.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getServerlessInstances.
 */
export interface GetServerlessInstancesResult {
    readonly dbInstanceClass?: string;
    readonly dbInstanceDescription?: string;
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instances: outputs.mongodb.GetServerlessInstancesInstance[];
    readonly networkType?: string;
    readonly outputFile?: string;
    readonly resourceGroupId?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: any};
    readonly vpcId?: string;
    readonly vswitchId?: string;
    readonly zoneId?: string;
}

export function getServerlessInstancesOutput(args?: GetServerlessInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerlessInstancesResult> {
    return pulumi.output(args).apply(a => getServerlessInstances(a, opts))
}

/**
 * A collection of arguments for invoking getServerlessInstances.
 */
export interface GetServerlessInstancesOutputArgs {
    /**
     * The db instance class.
     */
    dbInstanceClass?: pulumi.Input<string>;
    /**
     * The db instance description.
     */
    dbInstanceDescription?: pulumi.Input<string>;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of Serverless Instance IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The network type of the instance.
     */
    networkType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The ID of the VPC network.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The id of the vswitch.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
