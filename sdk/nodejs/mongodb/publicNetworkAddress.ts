// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides an Alicloud MongoDB public network address resource.
 *
 * For information about MongoDB public network address and how to use it, see [Allocate Public Network Address for MongoDB](https://www.alibabacloud.com/help/en/mongodb/getting-started/apply-for-a-public-endpoint-for-an-apsaradb-for-mongodb-instance-optional).
 *
 * > **NOTE:** Available since v1.248.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.mongodb.getZones({});
 * const index = _default.then(_default => _default.zones).length.apply(length => length - 1);
 * const zoneId = _default.then(_default => _default.zones[index].id);
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     cidrBlock: "10.0.0.0/8",
 *     vpcName: name,
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vpcId: defaultNetwork.id,
 *     zoneId: zoneId,
 *     cidrBlock: "10.0.0.0/24",
 * });
 * const defaultInstance = new alicloud.mongodb.Instance("default", {
 *     engineVersion: "4.4",
 *     storageType: "cloud_essd1",
 *     vswitchId: defaultSwitch.id,
 *     dbInstanceStorage: 20,
 *     vpcId: defaultNetwork.id,
 *     dbInstanceClass: "mdb.shard.4x.large.d",
 *     storageEngine: "WiredTiger",
 *     networkType: "VPC",
 *     zoneId: zoneId,
 * });
 * const defaultPublicNetworkAddress = new alicloud.mongodb.PublicNetworkAddress("default", {dbInstanceId: defaultInstance.id});
 * ```
 *
 * ## Import
 *
 * MongoDB public network address can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:mongodb/publicNetworkAddress:PublicNetworkAddress example <id>
 * ```
 */
export class PublicNetworkAddress extends pulumi.CustomResource {
    /**
     * Get an existing PublicNetworkAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicNetworkAddressState, opts?: pulumi.CustomResourceOptions): PublicNetworkAddress {
        return new PublicNetworkAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:mongodb/publicNetworkAddress:PublicNetworkAddress';

    /**
     * Returns true if the given object is an instance of PublicNetworkAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicNetworkAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicNetworkAddress.__pulumiType;
    }

    /**
     * The instance ID.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * Replica set instance information.
     */
    public /*out*/ readonly replicaSets!: pulumi.Output<outputs.mongodb.PublicNetworkAddressReplicaSet[]>;

    /**
     * Create a PublicNetworkAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublicNetworkAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicNetworkAddressArgs | PublicNetworkAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PublicNetworkAddressState | undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["replicaSets"] = state ? state.replicaSets : undefined;
        } else {
            const args = argsOrState as PublicNetworkAddressArgs | undefined;
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["replicaSets"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PublicNetworkAddress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PublicNetworkAddress resources.
 */
export interface PublicNetworkAddressState {
    /**
     * The instance ID.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * Replica set instance information.
     */
    replicaSets?: pulumi.Input<pulumi.Input<inputs.mongodb.PublicNetworkAddressReplicaSet>[]>;
}

/**
 * The set of arguments for constructing a PublicNetworkAddress resource.
 */
export interface PublicNetworkAddressArgs {
    /**
     * The instance ID.
     */
    dbInstanceId: pulumi.Input<string>;
}
