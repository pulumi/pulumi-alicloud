// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Mongo D B Account can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:mongodb/account:Account example <instance_id>:<account_name>
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:mongodb/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * Account comment information.
     *
     * > **NOTE:**  Call the ModifyAccountDescription interface to set the account description information before this parameter is returned.
     */
    declare public readonly accountDescription: pulumi.Output<string | undefined>;
    /**
     * The new password.
     *
     * - The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `! # $ % ^ & * ( ) _ + - =`
     * - The password must be 8 to 32 characters in length.
     */
    declare public readonly accountName: pulumi.Output<string>;
    /**
     * The password of the database account. The password must be 8 to 32 characters in length. It can contain at least three types of the following characters: uppercase letters, lowercase letters, digits, and special characters. Special characters include ! # $ % ^ & \* ( ) \_ + - =
     */
    declare public readonly accountPassword: pulumi.Output<string>;
    /**
     * The role type of the instance. Value description
     *
     * - When the instance type is sharded cluster, charactertype is required. The values are db and cs.
     * - When the instance type is a replica set, charactertype can be null or pass in normal.
     */
    declare public readonly characterType: pulumi.Output<string>;
    /**
     * The account whose password needs to be reset. Set the value to `root`.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * Account Status
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["accountDescription"] = state?.accountDescription;
            resourceInputs["accountName"] = state?.accountName;
            resourceInputs["accountPassword"] = state?.accountPassword;
            resourceInputs["characterType"] = state?.characterType;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if (args?.accountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if (args?.accountPassword === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountPassword'");
            }
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["accountDescription"] = args?.accountDescription;
            resourceInputs["accountName"] = args?.accountName;
            resourceInputs["accountPassword"] = args?.accountPassword ? pulumi.secret(args.accountPassword) : undefined;
            resourceInputs["characterType"] = args?.characterType;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accountPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * Account comment information.
     *
     * > **NOTE:**  Call the ModifyAccountDescription interface to set the account description information before this parameter is returned.
     */
    accountDescription?: pulumi.Input<string>;
    /**
     * The new password.
     *
     * - The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `! # $ % ^ & * ( ) _ + - =`
     * - The password must be 8 to 32 characters in length.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The password of the database account. The password must be 8 to 32 characters in length. It can contain at least three types of the following characters: uppercase letters, lowercase letters, digits, and special characters. Special characters include ! # $ % ^ & \* ( ) \_ + - =
     */
    accountPassword?: pulumi.Input<string>;
    /**
     * The role type of the instance. Value description
     *
     * - When the instance type is sharded cluster, charactertype is required. The values are db and cs.
     * - When the instance type is a replica set, charactertype can be null or pass in normal.
     */
    characterType?: pulumi.Input<string>;
    /**
     * The account whose password needs to be reset. Set the value to `root`.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Account Status
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * Account comment information.
     *
     * > **NOTE:**  Call the ModifyAccountDescription interface to set the account description information before this parameter is returned.
     */
    accountDescription?: pulumi.Input<string>;
    /**
     * The new password.
     *
     * - The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `! # $ % ^ & * ( ) _ + - =`
     * - The password must be 8 to 32 characters in length.
     */
    accountName: pulumi.Input<string>;
    /**
     * The password of the database account. The password must be 8 to 32 characters in length. It can contain at least three types of the following characters: uppercase letters, lowercase letters, digits, and special characters. Special characters include ! # $ % ^ & \* ( ) \_ + - =
     */
    accountPassword: pulumi.Input<string>;
    /**
     * The role type of the instance. Value description
     *
     * - When the instance type is sharded cluster, charactertype is required. The values are db and cs.
     * - When the instance type is a replica set, charactertype can be null or pass in normal.
     */
    characterType?: pulumi.Input<string>;
    /**
     * The account whose password needs to be reset. Set the value to `root`.
     */
    instanceId: pulumi.Input<string>;
}
