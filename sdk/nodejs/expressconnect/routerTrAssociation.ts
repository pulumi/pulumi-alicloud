// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Router Express Connect Router Tr Association resource. Leased line gateway and TR binding relationship object.
 *
 * For information about Express Connect Router Express Connect Router Tr Association and how to use it, see [What is Express Connect Router Tr Association](https://next.api.alibabacloud.com/api/ExpressConnectRouter/2023-09-01/CreateExpressConnectRouterAssociation).
 *
 * > **NOTE:** Available since v1.224.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const alowprefix1 = config.get("alowprefix1") || "10.0.0.0/24";
 * const allowprefix2 = config.get("allowprefix2") || "10.0.1.0/24";
 * const allowprefix3 = config.get("allowprefix3") || "10.0.2.0/24";
 * const allowprefix4 = config.get("allowprefix4") || "10.0.3.0/24";
 * const asn = config.get("asn") || "4200001003";
 * const defaultpX0KlC = new alicloud.expressconnect.RouterExpressConnectRouter("defaultpX0KlC", {alibabaSideAsn: asn});
 * const default418DC9 = new alicloud.cen.Instance("default418DC9", {cenInstanceName: name});
 * const defaultRYcjsc = new alicloud.cen.TransitRouter("defaultRYcjsc", {cenId: default418DC9.id});
 * const current = alicloud.getAccount({});
 * const _default = new alicloud.expressconnect.RouterTrAssociation("default", {
 *     ecrId: defaultpX0KlC.id,
 *     cenId: default418DC9.id,
 *     transitRouterOwnerId: current.then(current => current.id),
 *     allowedPrefixes: [
 *         alowprefix1,
 *         allowprefix3,
 *         allowprefix2,
 *     ],
 *     transitRouterId: defaultRYcjsc.transitRouterId,
 *     associationRegionId: "cn-hangzhou",
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Router Express Connect Router Tr Association can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:expressconnect/routerTrAssociation:RouterTrAssociation example <ecr_id>:<association_id>:<transit_router_id>
 * ```
 */
export class RouterTrAssociation extends pulumi.CustomResource {
    /**
     * Get an existing RouterTrAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterTrAssociationState, opts?: pulumi.CustomResourceOptions): RouterTrAssociation {
        return new RouterTrAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/routerTrAssociation:RouterTrAssociation';

    /**
     * Returns true if the given object is an instance of RouterTrAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterTrAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterTrAssociation.__pulumiType;
    }

    /**
     * List of allowed route prefixes.
     */
    public readonly allowedPrefixes!: pulumi.Output<string[] | undefined>;
    /**
     * The first ID of the resource.
     */
    public /*out*/ readonly associationId!: pulumi.Output<string>;
    /**
     * The region to which the VPC or TR belongs.
     */
    public readonly associationRegionId!: pulumi.Output<string>;
    /**
     * The ID of the CEN instance.
     */
    public readonly cenId!: pulumi.Output<string | undefined>;
    /**
     * The creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The ID of the leased line gateway instance.
     */
    public readonly ecrId!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ID of the forwarding router instance.
     */
    public readonly transitRouterId!: pulumi.Output<string>;
    /**
     * The ID of the Alibaba Cloud account to which the forwarding router belongs.
     */
    public readonly transitRouterOwnerId!: pulumi.Output<number | undefined>;

    /**
     * Create a RouterTrAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterTrAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterTrAssociationArgs | RouterTrAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterTrAssociationState | undefined;
            resourceInputs["allowedPrefixes"] = state ? state.allowedPrefixes : undefined;
            resourceInputs["associationId"] = state ? state.associationId : undefined;
            resourceInputs["associationRegionId"] = state ? state.associationRegionId : undefined;
            resourceInputs["cenId"] = state ? state.cenId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["ecrId"] = state ? state.ecrId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
            resourceInputs["transitRouterOwnerId"] = state ? state.transitRouterOwnerId : undefined;
        } else {
            const args = argsOrState as RouterTrAssociationArgs | undefined;
            if ((!args || args.associationRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'associationRegionId'");
            }
            if ((!args || args.ecrId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ecrId'");
            }
            resourceInputs["allowedPrefixes"] = args ? args.allowedPrefixes : undefined;
            resourceInputs["associationRegionId"] = args ? args.associationRegionId : undefined;
            resourceInputs["cenId"] = args ? args.cenId : undefined;
            resourceInputs["ecrId"] = args ? args.ecrId : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
            resourceInputs["transitRouterOwnerId"] = args ? args.transitRouterOwnerId : undefined;
            resourceInputs["associationId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterTrAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouterTrAssociation resources.
 */
export interface RouterTrAssociationState {
    /**
     * List of allowed route prefixes.
     */
    allowedPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The first ID of the resource.
     */
    associationId?: pulumi.Input<string>;
    /**
     * The region to which the VPC or TR belongs.
     */
    associationRegionId?: pulumi.Input<string>;
    /**
     * The ID of the CEN instance.
     */
    cenId?: pulumi.Input<string>;
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the leased line gateway instance.
     */
    ecrId?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the forwarding router instance.
     */
    transitRouterId?: pulumi.Input<string>;
    /**
     * The ID of the Alibaba Cloud account to which the forwarding router belongs.
     */
    transitRouterOwnerId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterTrAssociation resource.
 */
export interface RouterTrAssociationArgs {
    /**
     * List of allowed route prefixes.
     */
    allowedPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region to which the VPC or TR belongs.
     */
    associationRegionId: pulumi.Input<string>;
    /**
     * The ID of the CEN instance.
     */
    cenId?: pulumi.Input<string>;
    /**
     * The ID of the leased line gateway instance.
     */
    ecrId: pulumi.Input<string>;
    /**
     * The ID of the forwarding router instance.
     */
    transitRouterId?: pulumi.Input<string>;
    /**
     * The ID of the Alibaba Cloud account to which the forwarding router belongs.
     */
    transitRouterOwnerId?: pulumi.Input<number>;
}
