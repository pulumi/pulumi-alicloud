// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Virtual Physical Connection resource.
 *
 * For information about Express Connect Virtual Physical Connection and how to use it, see [What is Virtual Physical Connection](https://www.alibabacloud.com/help/en/express-connect/latest/createvirtualphysicalconnection#doc-api-Vpc-CreateVirtualPhysicalConnection).
 *
 * > **NOTE:** Available since v1.196.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const examplePhysicalConnections = alicloud.expressconnect.getPhysicalConnections({
 *     nameRegex: "^preserved-NODELETING",
 * });
 * const vlanId = new random.RandomInteger("vlanId", {
 *     max: 2999,
 *     min: 1,
 * });
 * const default = alicloud.getAccount({});
 * const exampleVirtualPhysicalConnection = new alicloud.expressconnect.VirtualPhysicalConnection("exampleVirtualPhysicalConnection", {
 *     virtualPhysicalConnectionName: name,
 *     description: name,
 *     orderMode: "PayByPhysicalConnectionOwner",
 *     parentPhysicalConnectionId: examplePhysicalConnections.then(examplePhysicalConnections => examplePhysicalConnections.ids?.[0]),
 *     spec: "50M",
 *     vlanId: vlanId.id,
 *     vpconnAliUid: _default.then(_default => _default.id),
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Virtual Physical Connection can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:expressconnect/virtualPhysicalConnection:VirtualPhysicalConnection example <id>
 * ```
 */
export class VirtualPhysicalConnection extends pulumi.CustomResource {
    /**
     * Get an existing VirtualPhysicalConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualPhysicalConnectionState, opts?: pulumi.CustomResourceOptions): VirtualPhysicalConnection {
        return new VirtualPhysicalConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/virtualPhysicalConnection:VirtualPhysicalConnection';

    /**
     * Returns true if the given object is an instance of VirtualPhysicalConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualPhysicalConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualPhysicalConnection.__pulumiType;
    }

    /**
     * The ID of the access point of the physical connection.
     */
    public /*out*/ readonly accessPointId!: pulumi.Output<string>;
    /**
     * The physical location where the physical connection access device is located.
     */
    public /*out*/ readonly adLocation!: pulumi.Output<string>;
    /**
     * The bandwidth of the physical connection. Unit: Mbps.
     */
    public /*out*/ readonly bandwidth!: pulumi.Output<string>;
    /**
     * The commercial status of the physical line. Value:-**Normal**: activated.-**Financialized**: Arrears locked.-**SecurityLocked**: locked for security reasons.
     */
    public /*out*/ readonly businessStatus!: pulumi.Output<string>;
    /**
     * The circuit code provided by the operator for the physical connection.
     */
    public /*out*/ readonly circuitCode!: pulumi.Output<string>;
    /**
     * The creation time of the resource
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the physical connection.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The opening time of the physical connection.
     */
    public /*out*/ readonly enabledTime!: pulumi.Output<string>;
    /**
     * The expiration time of the shared line.Time is expressed according to ISO8601 standard and UTC time is used. The format is: YYYY-MM-DDThh:mm:ssZ.
     */
    public /*out*/ readonly endTime!: pulumi.Output<string>;
    /**
     * The estimated bandwidth value of the shared line. Valid values: `50M`, `100M`, `200M`, `300M`, `400M`, `500M`, `1G`, `2G`, `5G`, `8G`, and `10G`. **Note**: By default, the values of 2G, 5G, 8G, and 10G are unavailable. If you want to specify these values, contact your customer manager. Unit: **M** indicates Mbps, **G** indicates Gbps.
     */
    public readonly expectSpec!: pulumi.Output<string | undefined>;
    /**
     * Operators that provide access to physical lines. Value:-**CT**: China Telecom.-**CU**: China Unicom.-**CM**: China Mobile.-**CO**: China Other.-**Equinix**:Equinix.-**Other**: Other abroad.
     */
    public /*out*/ readonly lineOperator!: pulumi.Output<string>;
    /**
     * The state of LOA. Value:-**Applying**:LOA application.-**Accept**:LOA application passed.-**Available**:LOA is Available.-**Rejected**:LOA application Rejected.-**Completing**: The dedicated line is under construction.-**Complete**: The construction of the dedicated line is completed.-**Deleted**:LOA has been Deleted.
     */
    public /*out*/ readonly loaStatus!: pulumi.Output<string>;
    /**
     * The payment method of shared dedicated line. Value:
     * - **PayByPhysicalConnectionOwner**: indicates that the owner of the physical line associated with the shared line pays.
     * - **PayByVirtualPhysicalConnectionOwner**: indicates that the owner of the shared line pays.
     */
    public readonly orderMode!: pulumi.Output<string>;
    /**
     * The ID of the Alibaba Cloud account (primary account) to which the physical connection belongs.
     */
    public /*out*/ readonly parentPhysicalConnectionAliUid!: pulumi.Output<string>;
    /**
     * The ID of the instance of the physical connection.
     */
    public readonly parentPhysicalConnectionId!: pulumi.Output<string>;
    /**
     * The geographic location of the local data center.
     */
    public /*out*/ readonly peerLocation!: pulumi.Output<string>;
    /**
     * The port number of the physical connection device.
     */
    public /*out*/ readonly portNumber!: pulumi.Output<string>;
    /**
     * Physical connection port type. Value:-**100Base-T**: 100 megabytes port.-**1000Base-T**: Gigabit port.-**1000Base-LX**: Gigabit single mode optical port (10km).-**10GBase-T**: 10 Gigabit port.-**10GBase-LR**: 10 Gigabit single mode optical port (10km).-**40GBase-LR**: 40 megabytes single-mode optical port.-**100GBase-LR**: 100,000 megabytes single-mode optical port.
     */
    public /*out*/ readonly portType!: pulumi.Output<string>;
    /**
     * The ID of the redundant physical connection.
     */
    public /*out*/ readonly redundantPhysicalConnectionId!: pulumi.Output<string>;
    /**
     * The resource group id.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The bandwidth value of the shared line. Valid values: `50M`, `100M`, `200M`, `300M`, `400M`, `500M`, `1G`, `2G`, `5G`, `8G`, and `10G`. **Note**: By default, the values of 2G, 5G, 8G, and 10G are unavailable. If you want to specify these values, contact your customer manager. Unit: **M** indicates Mbps, **G** indicates Gbps.
     */
    public readonly spec!: pulumi.Output<string>;
    /**
     * The status of the resource
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The name of the physical connection.
     */
    public readonly virtualPhysicalConnectionName!: pulumi.Output<string | undefined>;
    /**
     * The business status of the shared line. Value:-**Confirmed**: The shared line has been Confirmed to receive.-**UnConfirmed**: The shared line has not been confirmed to be received.-**Deleted**: The shared line has been Deleted.
     */
    public /*out*/ readonly virtualPhysicalConnectionStatus!: pulumi.Output<string>;
    /**
     * The VLAN ID of the shared leased line. Valid values: `0` to `2999`.
     */
    public readonly vlanId!: pulumi.Output<number>;
    /**
     * The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
     */
    public readonly vpconnAliUid!: pulumi.Output<string>;

    /**
     * Create a VirtualPhysicalConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualPhysicalConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualPhysicalConnectionArgs | VirtualPhysicalConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualPhysicalConnectionState | undefined;
            resourceInputs["accessPointId"] = state ? state.accessPointId : undefined;
            resourceInputs["adLocation"] = state ? state.adLocation : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["businessStatus"] = state ? state.businessStatus : undefined;
            resourceInputs["circuitCode"] = state ? state.circuitCode : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["enabledTime"] = state ? state.enabledTime : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["expectSpec"] = state ? state.expectSpec : undefined;
            resourceInputs["lineOperator"] = state ? state.lineOperator : undefined;
            resourceInputs["loaStatus"] = state ? state.loaStatus : undefined;
            resourceInputs["orderMode"] = state ? state.orderMode : undefined;
            resourceInputs["parentPhysicalConnectionAliUid"] = state ? state.parentPhysicalConnectionAliUid : undefined;
            resourceInputs["parentPhysicalConnectionId"] = state ? state.parentPhysicalConnectionId : undefined;
            resourceInputs["peerLocation"] = state ? state.peerLocation : undefined;
            resourceInputs["portNumber"] = state ? state.portNumber : undefined;
            resourceInputs["portType"] = state ? state.portType : undefined;
            resourceInputs["redundantPhysicalConnectionId"] = state ? state.redundantPhysicalConnectionId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["virtualPhysicalConnectionName"] = state ? state.virtualPhysicalConnectionName : undefined;
            resourceInputs["virtualPhysicalConnectionStatus"] = state ? state.virtualPhysicalConnectionStatus : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vpconnAliUid"] = state ? state.vpconnAliUid : undefined;
        } else {
            const args = argsOrState as VirtualPhysicalConnectionArgs | undefined;
            if ((!args || args.orderMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orderMode'");
            }
            if ((!args || args.parentPhysicalConnectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentPhysicalConnectionId'");
            }
            if ((!args || args.spec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spec'");
            }
            if ((!args || args.vlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlanId'");
            }
            if ((!args || args.vpconnAliUid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpconnAliUid'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["expectSpec"] = args ? args.expectSpec : undefined;
            resourceInputs["orderMode"] = args ? args.orderMode : undefined;
            resourceInputs["parentPhysicalConnectionId"] = args ? args.parentPhysicalConnectionId : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["virtualPhysicalConnectionName"] = args ? args.virtualPhysicalConnectionName : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["vpconnAliUid"] = args ? args.vpconnAliUid : undefined;
            resourceInputs["accessPointId"] = undefined /*out*/;
            resourceInputs["adLocation"] = undefined /*out*/;
            resourceInputs["bandwidth"] = undefined /*out*/;
            resourceInputs["businessStatus"] = undefined /*out*/;
            resourceInputs["circuitCode"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["enabledTime"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["lineOperator"] = undefined /*out*/;
            resourceInputs["loaStatus"] = undefined /*out*/;
            resourceInputs["parentPhysicalConnectionAliUid"] = undefined /*out*/;
            resourceInputs["peerLocation"] = undefined /*out*/;
            resourceInputs["portNumber"] = undefined /*out*/;
            resourceInputs["portType"] = undefined /*out*/;
            resourceInputs["redundantPhysicalConnectionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["virtualPhysicalConnectionStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualPhysicalConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualPhysicalConnection resources.
 */
export interface VirtualPhysicalConnectionState {
    /**
     * The ID of the access point of the physical connection.
     */
    accessPointId?: pulumi.Input<string>;
    /**
     * The physical location where the physical connection access device is located.
     */
    adLocation?: pulumi.Input<string>;
    /**
     * The bandwidth of the physical connection. Unit: Mbps.
     */
    bandwidth?: pulumi.Input<string>;
    /**
     * The commercial status of the physical line. Value:-**Normal**: activated.-**Financialized**: Arrears locked.-**SecurityLocked**: locked for security reasons.
     */
    businessStatus?: pulumi.Input<string>;
    /**
     * The circuit code provided by the operator for the physical connection.
     */
    circuitCode?: pulumi.Input<string>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the physical connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The opening time of the physical connection.
     */
    enabledTime?: pulumi.Input<string>;
    /**
     * The expiration time of the shared line.Time is expressed according to ISO8601 standard and UTC time is used. The format is: YYYY-MM-DDThh:mm:ssZ.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The estimated bandwidth value of the shared line. Valid values: `50M`, `100M`, `200M`, `300M`, `400M`, `500M`, `1G`, `2G`, `5G`, `8G`, and `10G`. **Note**: By default, the values of 2G, 5G, 8G, and 10G are unavailable. If you want to specify these values, contact your customer manager. Unit: **M** indicates Mbps, **G** indicates Gbps.
     */
    expectSpec?: pulumi.Input<string>;
    /**
     * Operators that provide access to physical lines. Value:-**CT**: China Telecom.-**CU**: China Unicom.-**CM**: China Mobile.-**CO**: China Other.-**Equinix**:Equinix.-**Other**: Other abroad.
     */
    lineOperator?: pulumi.Input<string>;
    /**
     * The state of LOA. Value:-**Applying**:LOA application.-**Accept**:LOA application passed.-**Available**:LOA is Available.-**Rejected**:LOA application Rejected.-**Completing**: The dedicated line is under construction.-**Complete**: The construction of the dedicated line is completed.-**Deleted**:LOA has been Deleted.
     */
    loaStatus?: pulumi.Input<string>;
    /**
     * The payment method of shared dedicated line. Value:
     * - **PayByPhysicalConnectionOwner**: indicates that the owner of the physical line associated with the shared line pays.
     * - **PayByVirtualPhysicalConnectionOwner**: indicates that the owner of the shared line pays.
     */
    orderMode?: pulumi.Input<string>;
    /**
     * The ID of the Alibaba Cloud account (primary account) to which the physical connection belongs.
     */
    parentPhysicalConnectionAliUid?: pulumi.Input<string>;
    /**
     * The ID of the instance of the physical connection.
     */
    parentPhysicalConnectionId?: pulumi.Input<string>;
    /**
     * The geographic location of the local data center.
     */
    peerLocation?: pulumi.Input<string>;
    /**
     * The port number of the physical connection device.
     */
    portNumber?: pulumi.Input<string>;
    /**
     * Physical connection port type. Value:-**100Base-T**: 100 megabytes port.-**1000Base-T**: Gigabit port.-**1000Base-LX**: Gigabit single mode optical port (10km).-**10GBase-T**: 10 Gigabit port.-**10GBase-LR**: 10 Gigabit single mode optical port (10km).-**40GBase-LR**: 40 megabytes single-mode optical port.-**100GBase-LR**: 100,000 megabytes single-mode optical port.
     */
    portType?: pulumi.Input<string>;
    /**
     * The ID of the redundant physical connection.
     */
    redundantPhysicalConnectionId?: pulumi.Input<string>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The bandwidth value of the shared line. Valid values: `50M`, `100M`, `200M`, `300M`, `400M`, `500M`, `1G`, `2G`, `5G`, `8G`, and `10G`. **Note**: By default, the values of 2G, 5G, 8G, and 10G are unavailable. If you want to specify these values, contact your customer manager. Unit: **M** indicates Mbps, **G** indicates Gbps.
     */
    spec?: pulumi.Input<string>;
    /**
     * The status of the resource
     */
    status?: pulumi.Input<string>;
    /**
     * The name of the physical connection.
     */
    virtualPhysicalConnectionName?: pulumi.Input<string>;
    /**
     * The business status of the shared line. Value:-**Confirmed**: The shared line has been Confirmed to receive.-**UnConfirmed**: The shared line has not been confirmed to be received.-**Deleted**: The shared line has been Deleted.
     */
    virtualPhysicalConnectionStatus?: pulumi.Input<string>;
    /**
     * The VLAN ID of the shared leased line. Valid values: `0` to `2999`.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
     */
    vpconnAliUid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualPhysicalConnection resource.
 */
export interface VirtualPhysicalConnectionArgs {
    /**
     * The description of the physical connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * The estimated bandwidth value of the shared line. Valid values: `50M`, `100M`, `200M`, `300M`, `400M`, `500M`, `1G`, `2G`, `5G`, `8G`, and `10G`. **Note**: By default, the values of 2G, 5G, 8G, and 10G are unavailable. If you want to specify these values, contact your customer manager. Unit: **M** indicates Mbps, **G** indicates Gbps.
     */
    expectSpec?: pulumi.Input<string>;
    /**
     * The payment method of shared dedicated line. Value:
     * - **PayByPhysicalConnectionOwner**: indicates that the owner of the physical line associated with the shared line pays.
     * - **PayByVirtualPhysicalConnectionOwner**: indicates that the owner of the shared line pays.
     */
    orderMode: pulumi.Input<string>;
    /**
     * The ID of the instance of the physical connection.
     */
    parentPhysicalConnectionId: pulumi.Input<string>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The bandwidth value of the shared line. Valid values: `50M`, `100M`, `200M`, `300M`, `400M`, `500M`, `1G`, `2G`, `5G`, `8G`, and `10G`. **Note**: By default, the values of 2G, 5G, 8G, and 10G are unavailable. If you want to specify these values, contact your customer manager. Unit: **M** indicates Mbps, **G** indicates Gbps.
     */
    spec: pulumi.Input<string>;
    /**
     * The name of the physical connection.
     */
    virtualPhysicalConnectionName?: pulumi.Input<string>;
    /**
     * The VLAN ID of the shared leased line. Valid values: `0` to `2999`.
     */
    vlanId: pulumi.Input<number>;
    /**
     * The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
     */
    vpconnAliUid: pulumi.Input<string>;
}
