// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Traffic Qos Queue resource. Express Connect Traffic QoS Queue.
 *
 * For information about Express Connect Traffic Qos Queue and how to use it, see [What is Traffic Qos Queue](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQosQueue).
 *
 * > **NOTE:** Available since v1.224.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.expressconnect.getPhysicalConnections({
 *     nameRegex: "preserved-NODELETING",
 * });
 * const createQos = new alicloud.expressconnect.TrafficQos("createQos", {
 *     qosName: name,
 *     qosDescription: "terraform-example",
 * });
 * const associateQos = new alicloud.expressconnect.TrafficQosAssociation("associateQos", {
 *     instanceId: _default.then(_default => _default.ids?.[1]),
 *     qosId: createQos.id,
 *     instanceType: "PHYSICALCONNECTION",
 * });
 * const createQosQueue = new alicloud.expressconnect.TrafficQosQueue("createQosQueue", {
 *     qosId: createQos.id,
 *     bandwidthPercent: "60",
 *     queueDescription: "terraform-example",
 *     queueName: name,
 *     queueType: "Medium",
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Traffic Qos Queue can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:expressconnect/trafficQosQueue:TrafficQosQueue example <qos_id>:<queue_id>
 * ```
 */
export class TrafficQosQueue extends pulumi.CustomResource {
    /**
     * Get an existing TrafficQosQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficQosQueueState, opts?: pulumi.CustomResourceOptions): TrafficQosQueue {
        return new TrafficQosQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/trafficQosQueue:TrafficQosQueue';

    /**
     * Returns true if the given object is an instance of TrafficQosQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficQosQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficQosQueue.__pulumiType;
    }

    /**
     * QoS queue bandwidth percentage.
     *
     * - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
     * - When the QoS queue type is **Default**, this field is "-".
     */
    declare public readonly bandwidthPercent: pulumi.Output<string>;
    /**
     * The QoS policy ID.
     */
    declare public readonly qosId: pulumi.Output<string>;
    /**
     * The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
     */
    declare public readonly queueDescription: pulumi.Output<string | undefined>;
    /**
     * The QoS queue ID.
     */
    declare public /*out*/ readonly queueId: pulumi.Output<string>;
    /**
     * The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
     */
    declare public readonly queueName: pulumi.Output<string | undefined>;
    /**
     * QoS queue type, value:
     * - **High**: High priority queue.
     * - **Medium**: Normal priority queue.
     * - **Default**: the Default priority queue.
     * > **NOTE:**  Default priority queue cannot be created.
     */
    declare public readonly queueType: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a TrafficQosQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrafficQosQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficQosQueueArgs | TrafficQosQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficQosQueueState | undefined;
            resourceInputs["bandwidthPercent"] = state?.bandwidthPercent;
            resourceInputs["qosId"] = state?.qosId;
            resourceInputs["queueDescription"] = state?.queueDescription;
            resourceInputs["queueId"] = state?.queueId;
            resourceInputs["queueName"] = state?.queueName;
            resourceInputs["queueType"] = state?.queueType;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as TrafficQosQueueArgs | undefined;
            if (args?.qosId === undefined && !opts.urn) {
                throw new Error("Missing required property 'qosId'");
            }
            if (args?.queueType === undefined && !opts.urn) {
                throw new Error("Missing required property 'queueType'");
            }
            resourceInputs["bandwidthPercent"] = args?.bandwidthPercent;
            resourceInputs["qosId"] = args?.qosId;
            resourceInputs["queueDescription"] = args?.queueDescription;
            resourceInputs["queueName"] = args?.queueName;
            resourceInputs["queueType"] = args?.queueType;
            resourceInputs["queueId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrafficQosQueue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TrafficQosQueue resources.
 */
export interface TrafficQosQueueState {
    /**
     * QoS queue bandwidth percentage.
     *
     * - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
     * - When the QoS queue type is **Default**, this field is "-".
     */
    bandwidthPercent?: pulumi.Input<string>;
    /**
     * The QoS policy ID.
     */
    qosId?: pulumi.Input<string>;
    /**
     * The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
     */
    queueDescription?: pulumi.Input<string>;
    /**
     * The QoS queue ID.
     */
    queueId?: pulumi.Input<string>;
    /**
     * The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
     */
    queueName?: pulumi.Input<string>;
    /**
     * QoS queue type, value:
     * - **High**: High priority queue.
     * - **Medium**: Normal priority queue.
     * - **Default**: the Default priority queue.
     * > **NOTE:**  Default priority queue cannot be created.
     */
    queueType?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrafficQosQueue resource.
 */
export interface TrafficQosQueueArgs {
    /**
     * QoS queue bandwidth percentage.
     *
     * - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
     * - When the QoS queue type is **Default**, this field is "-".
     */
    bandwidthPercent?: pulumi.Input<string>;
    /**
     * The QoS policy ID.
     */
    qosId: pulumi.Input<string>;
    /**
     * The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
     */
    queueDescription?: pulumi.Input<string>;
    /**
     * The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
     */
    queueName?: pulumi.Input<string>;
    /**
     * QoS queue type, value:
     * - **High**: High priority queue.
     * - **Medium**: Normal priority queue.
     * - **Default**: the Default priority queue.
     * > **NOTE:**  Default priority queue cannot be created.
     */
    queueType: pulumi.Input<string>;
}
