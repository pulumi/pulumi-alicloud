// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Express Connect Router Express Connect Router can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:expressconnect/routerExpressConnectRouter:RouterExpressConnectRouter example <id>
 * ```
 */
export class RouterExpressConnectRouter extends pulumi.CustomResource {
    /**
     * Get an existing RouterExpressConnectRouter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterExpressConnectRouterState, opts?: pulumi.CustomResourceOptions): RouterExpressConnectRouter {
        return new RouterExpressConnectRouter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/routerExpressConnectRouter:RouterExpressConnectRouter';

    /**
     * Returns true if the given object is an instance of RouterExpressConnectRouter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterExpressConnectRouter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterExpressConnectRouter.__pulumiType;
    }

    /**
     * ASN representing resources.
     */
    public readonly alibabaSideAsn!: pulumi.Output<number>;
    /**
     * Represents the creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Represents the description of the leased line gateway.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of the Gateway representing the leased line.
     */
    public readonly ecrName!: pulumi.Output<string | undefined>;
    /**
     * List of regions representing leased line gateways. See `regions` below.
     */
    public readonly regions!: pulumi.Output<outputs.expressconnect.RouterExpressConnectRouterRegion[]>;
    /**
     * The ID of the resource group to which the ECR instance belongs.
     * - A string consisting of letters, numbers, hyphens (-), and underscores (_), and the string length can be 0 to 64 characters.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The tag of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a RouterExpressConnectRouter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterExpressConnectRouterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterExpressConnectRouterArgs | RouterExpressConnectRouterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterExpressConnectRouterState | undefined;
            resourceInputs["alibabaSideAsn"] = state ? state.alibabaSideAsn : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ecrName"] = state ? state.ecrName : undefined;
            resourceInputs["regions"] = state ? state.regions : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as RouterExpressConnectRouterArgs | undefined;
            if ((!args || args.alibabaSideAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alibabaSideAsn'");
            }
            resourceInputs["alibabaSideAsn"] = args ? args.alibabaSideAsn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ecrName"] = args ? args.ecrName : undefined;
            resourceInputs["regions"] = args ? args.regions : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterExpressConnectRouter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouterExpressConnectRouter resources.
 */
export interface RouterExpressConnectRouterState {
    /**
     * ASN representing resources.
     */
    alibabaSideAsn?: pulumi.Input<number>;
    /**
     * Represents the creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Represents the description of the leased line gateway.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Gateway representing the leased line.
     */
    ecrName?: pulumi.Input<string>;
    /**
     * List of regions representing leased line gateways. See `regions` below.
     */
    regions?: pulumi.Input<pulumi.Input<inputs.expressconnect.RouterExpressConnectRouterRegion>[]>;
    /**
     * The ID of the resource group to which the ECR instance belongs.
     * - A string consisting of letters, numbers, hyphens (-), and underscores (_), and the string length can be 0 to 64 characters.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a RouterExpressConnectRouter resource.
 */
export interface RouterExpressConnectRouterArgs {
    /**
     * ASN representing resources.
     */
    alibabaSideAsn: pulumi.Input<number>;
    /**
     * Represents the description of the leased line gateway.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Gateway representing the leased line.
     */
    ecrName?: pulumi.Input<string>;
    /**
     * List of regions representing leased line gateways. See `regions` below.
     */
    regions?: pulumi.Input<pulumi.Input<inputs.expressconnect.RouterExpressConnectRouterRegion>[]>;
    /**
     * The ID of the resource group to which the ECR instance belongs.
     * - A string consisting of letters, numbers, hyphens (-), and underscores (_), and the string length can be 0 to 64 characters.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
