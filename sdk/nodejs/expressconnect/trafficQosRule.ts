// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Traffic Qos Rule resource. Express Connect Traffic QoS Rule.
 *
 * For information about Express Connect Traffic Qos Rule and how to use it, see [What is Traffic Qos Rule](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQosRule).
 *
 * > **NOTE:** Available since v1.224.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.expressconnect.getPhysicalConnections({
 *     nameRegex: "preserved-NODELETING",
 * });
 * const createQos = new alicloud.expressconnect.TrafficQos("createQos", {
 *     qosName: name,
 *     qosDescription: "terraform-example",
 * });
 * const associateQos = new alicloud.expressconnect.TrafficQosAssociation("associateQos", {
 *     instanceId: _default.then(_default => _default.ids?.[1]),
 *     qosId: createQos.id,
 *     instanceType: "PHYSICALCONNECTION",
 * });
 * const createQosQueue = new alicloud.expressconnect.TrafficQosQueue("createQosQueue", {
 *     qosId: createQos.id,
 *     bandwidthPercent: "60",
 *     queueDescription: "terraform-example",
 *     queueName: name,
 *     queueType: "Medium",
 * });
 * const defaultTrafficQosRule = new alicloud.expressconnect.TrafficQosRule("default", {
 *     ruleDescription: "terraform-example",
 *     priority: 1,
 *     protocol: "ALL",
 *     srcPortRange: "-1/-1",
 *     dstIpv6Cidr: "2001:db8:1234:5678::/64",
 *     srcIpv6Cidr: "2001:db8:1234:5678::/64",
 *     dstPortRange: "-1/-1",
 *     remarkingDscp: -1,
 *     queueId: createQosQueue.queueId,
 *     qosId: createQos.id,
 *     matchDscp: -1,
 *     ruleName: name,
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Traffic Qos Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:expressconnect/trafficQosRule:TrafficQosRule example <qos_id>:<queue_id>:<rule_id>
 * ```
 */
export class TrafficQosRule extends pulumi.CustomResource {
    /**
     * Get an existing TrafficQosRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficQosRuleState, opts?: pulumi.CustomResourceOptions): TrafficQosRule {
        return new TrafficQosRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/trafficQosRule:TrafficQosRule';

    /**
     * Returns true if the given object is an instance of TrafficQosRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficQosRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficQosRule.__pulumiType;
    }

    /**
     * The traffic of the QoS rule matches the Destination IPv4 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
     */
    declare public readonly dstCidr: pulumi.Output<string | undefined>;
    /**
     * The QoS rule traffic matches the Destination IPv6 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
     */
    declare public readonly dstIpv6Cidr: pulumi.Output<string | undefined>;
    /**
     * QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
     * - **ALL**:-1/-1, not editable.
     * - **ICMP(IPv4)**:-1/-1, non-editable.
     * - **ICMPv6(IPv6)**:-1/-1, non-editable.
     * - **TCP**:-1/-1, editable.
     * - **UDP**:-1/-1, editable.
     * - **GRE**:-1/-1, not editable.
     * - **SSH**:22/22, not editable.
     * - **Telnet**:23/23, not editable.
     * - **HTTP**:80/80, non-editable.
     * - **HTTPS**:443/443, which cannot be edited.
     * - **MS SQL**:1443/1443, which cannot be edited.
     * - **Oracle**:1521/1521, non-editable.
     * - **MySql**:3306/3306, non-editable.
     * - **RDP**:3389/3389, non-editable.
     * - **PostgreSQL**:5432/5432, non-editable.
     * - **Redis**:6379/6379, non-editable.
     */
    declare public readonly dstPortRange: pulumi.Output<string>;
    /**
     * The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
     */
    declare public readonly matchDscp: pulumi.Output<number>;
    /**
     * QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
     */
    declare public readonly priority: pulumi.Output<number>;
    /**
     * QoS rule protocol type, value:
     * - **ALL**
     * - **ICMP(IPv4)**
     * - **ICMPv6(IPv6)* *
     * - **TCP**
     * - **UDP**
     * - **GRE**
     * - **SSH**
     * - **Telnet**
     * - **HTTP**
     * - **HTTPS**
     * - **MS SQL**
     * - **Oracle**
     * - **MySql**
     * - **RDP**
     * - **PostgreSQL**
     * - **Redis**.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * The QoS policy ID.
     */
    declare public readonly qosId: pulumi.Output<string>;
    /**
     * The QoS queue ID.
     */
    declare public readonly queueId: pulumi.Output<string>;
    /**
     * Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
     */
    declare public readonly remarkingDscp: pulumi.Output<number>;
    /**
     * The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
     */
    declare public readonly ruleDescription: pulumi.Output<string | undefined>;
    /**
     * The ID of the QoS rule.
     */
    declare public /*out*/ readonly ruleId: pulumi.Output<string>;
    /**
     * The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
     */
    declare public readonly ruleName: pulumi.Output<string | undefined>;
    /**
     * The QoS rule traffic matches the source IPv4 CIDR block.
     * > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
     */
    declare public readonly srcCidr: pulumi.Output<string | undefined>;
    /**
     * The QoS rule traffic matches the source IPv6 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
     */
    declare public readonly srcIpv6Cidr: pulumi.Output<string | undefined>;
    /**
     * The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
     */
    declare public readonly srcPortRange: pulumi.Output<string>;
    /**
     * The status of the QoS rule. Value:
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a TrafficQosRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrafficQosRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficQosRuleArgs | TrafficQosRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficQosRuleState | undefined;
            resourceInputs["dstCidr"] = state?.dstCidr;
            resourceInputs["dstIpv6Cidr"] = state?.dstIpv6Cidr;
            resourceInputs["dstPortRange"] = state?.dstPortRange;
            resourceInputs["matchDscp"] = state?.matchDscp;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["qosId"] = state?.qosId;
            resourceInputs["queueId"] = state?.queueId;
            resourceInputs["remarkingDscp"] = state?.remarkingDscp;
            resourceInputs["ruleDescription"] = state?.ruleDescription;
            resourceInputs["ruleId"] = state?.ruleId;
            resourceInputs["ruleName"] = state?.ruleName;
            resourceInputs["srcCidr"] = state?.srcCidr;
            resourceInputs["srcIpv6Cidr"] = state?.srcIpv6Cidr;
            resourceInputs["srcPortRange"] = state?.srcPortRange;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as TrafficQosRuleArgs | undefined;
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if (args?.qosId === undefined && !opts.urn) {
                throw new Error("Missing required property 'qosId'");
            }
            if (args?.queueId === undefined && !opts.urn) {
                throw new Error("Missing required property 'queueId'");
            }
            resourceInputs["dstCidr"] = args?.dstCidr;
            resourceInputs["dstIpv6Cidr"] = args?.dstIpv6Cidr;
            resourceInputs["dstPortRange"] = args?.dstPortRange;
            resourceInputs["matchDscp"] = args?.matchDscp;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["qosId"] = args?.qosId;
            resourceInputs["queueId"] = args?.queueId;
            resourceInputs["remarkingDscp"] = args?.remarkingDscp;
            resourceInputs["ruleDescription"] = args?.ruleDescription;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["srcCidr"] = args?.srcCidr;
            resourceInputs["srcIpv6Cidr"] = args?.srcIpv6Cidr;
            resourceInputs["srcPortRange"] = args?.srcPortRange;
            resourceInputs["ruleId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrafficQosRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TrafficQosRule resources.
 */
export interface TrafficQosRuleState {
    /**
     * The traffic of the QoS rule matches the Destination IPv4 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
     */
    dstCidr?: pulumi.Input<string>;
    /**
     * The QoS rule traffic matches the Destination IPv6 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
     */
    dstIpv6Cidr?: pulumi.Input<string>;
    /**
     * QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
     * - **ALL**:-1/-1, not editable.
     * - **ICMP(IPv4)**:-1/-1, non-editable.
     * - **ICMPv6(IPv6)**:-1/-1, non-editable.
     * - **TCP**:-1/-1, editable.
     * - **UDP**:-1/-1, editable.
     * - **GRE**:-1/-1, not editable.
     * - **SSH**:22/22, not editable.
     * - **Telnet**:23/23, not editable.
     * - **HTTP**:80/80, non-editable.
     * - **HTTPS**:443/443, which cannot be edited.
     * - **MS SQL**:1443/1443, which cannot be edited.
     * - **Oracle**:1521/1521, non-editable.
     * - **MySql**:3306/3306, non-editable.
     * - **RDP**:3389/3389, non-editable.
     * - **PostgreSQL**:5432/5432, non-editable.
     * - **Redis**:6379/6379, non-editable.
     */
    dstPortRange?: pulumi.Input<string>;
    /**
     * The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
     */
    matchDscp?: pulumi.Input<number>;
    /**
     * QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
     */
    priority?: pulumi.Input<number>;
    /**
     * QoS rule protocol type, value:
     * - **ALL**
     * - **ICMP(IPv4)**
     * - **ICMPv6(IPv6)* *
     * - **TCP**
     * - **UDP**
     * - **GRE**
     * - **SSH**
     * - **Telnet**
     * - **HTTP**
     * - **HTTPS**
     * - **MS SQL**
     * - **Oracle**
     * - **MySql**
     * - **RDP**
     * - **PostgreSQL**
     * - **Redis**.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The QoS policy ID.
     */
    qosId?: pulumi.Input<string>;
    /**
     * The QoS queue ID.
     */
    queueId?: pulumi.Input<string>;
    /**
     * Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
     */
    remarkingDscp?: pulumi.Input<number>;
    /**
     * The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
     */
    ruleDescription?: pulumi.Input<string>;
    /**
     * The ID of the QoS rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The QoS rule traffic matches the source IPv4 CIDR block.
     * > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
     */
    srcCidr?: pulumi.Input<string>;
    /**
     * The QoS rule traffic matches the source IPv6 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
     */
    srcIpv6Cidr?: pulumi.Input<string>;
    /**
     * The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
     */
    srcPortRange?: pulumi.Input<string>;
    /**
     * The status of the QoS rule. Value:
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrafficQosRule resource.
 */
export interface TrafficQosRuleArgs {
    /**
     * The traffic of the QoS rule matches the Destination IPv4 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
     */
    dstCidr?: pulumi.Input<string>;
    /**
     * The QoS rule traffic matches the Destination IPv6 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
     */
    dstIpv6Cidr?: pulumi.Input<string>;
    /**
     * QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
     * - **ALL**:-1/-1, not editable.
     * - **ICMP(IPv4)**:-1/-1, non-editable.
     * - **ICMPv6(IPv6)**:-1/-1, non-editable.
     * - **TCP**:-1/-1, editable.
     * - **UDP**:-1/-1, editable.
     * - **GRE**:-1/-1, not editable.
     * - **SSH**:22/22, not editable.
     * - **Telnet**:23/23, not editable.
     * - **HTTP**:80/80, non-editable.
     * - **HTTPS**:443/443, which cannot be edited.
     * - **MS SQL**:1443/1443, which cannot be edited.
     * - **Oracle**:1521/1521, non-editable.
     * - **MySql**:3306/3306, non-editable.
     * - **RDP**:3389/3389, non-editable.
     * - **PostgreSQL**:5432/5432, non-editable.
     * - **Redis**:6379/6379, non-editable.
     */
    dstPortRange?: pulumi.Input<string>;
    /**
     * The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
     */
    matchDscp?: pulumi.Input<number>;
    /**
     * QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
     */
    priority: pulumi.Input<number>;
    /**
     * QoS rule protocol type, value:
     * - **ALL**
     * - **ICMP(IPv4)**
     * - **ICMPv6(IPv6)* *
     * - **TCP**
     * - **UDP**
     * - **GRE**
     * - **SSH**
     * - **Telnet**
     * - **HTTP**
     * - **HTTPS**
     * - **MS SQL**
     * - **Oracle**
     * - **MySql**
     * - **RDP**
     * - **PostgreSQL**
     * - **Redis**.
     */
    protocol: pulumi.Input<string>;
    /**
     * The QoS policy ID.
     */
    qosId: pulumi.Input<string>;
    /**
     * The QoS queue ID.
     */
    queueId: pulumi.Input<string>;
    /**
     * Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
     */
    remarkingDscp?: pulumi.Input<number>;
    /**
     * The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
     */
    ruleDescription?: pulumi.Input<string>;
    /**
     * The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * The QoS rule traffic matches the source IPv4 CIDR block.
     * > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
     */
    srcCidr?: pulumi.Input<string>;
    /**
     * The QoS rule traffic matches the source IPv6 network segment.
     * > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
     */
    srcIpv6Cidr?: pulumi.Input<string>;
    /**
     * The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
     */
    srcPortRange?: pulumi.Input<string>;
}
