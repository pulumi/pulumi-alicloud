// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Express Connect Vbr Pconn Association available to the user.
 *
 * > **NOTE:** Available in 1.196.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.expressconnect.getVbrPconnAssociations({
 *     ids: ["example_id"],
 *     vbrId: alicloud_express_connect_vbr_pconn_association["default"].vbr_id,
 * });
 * export const alicloudExpressConnectVbrPconnAssociationExampleId = _default.then(_default => _default.associations?.[0]?.id);
 * ```
 */
export function getVbrPconnAssociations(args?: GetVbrPconnAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetVbrPconnAssociationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:expressconnect/getVbrPconnAssociations:getVbrPconnAssociations", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "vbrId": args.vbrId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVbrPconnAssociations.
 */
export interface GetVbrPconnAssociationsArgs {
    /**
     * A list of Vbr Pconn Association IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    /**
     * The ID of the VBR instance.
     */
    vbrId?: string;
}

/**
 * A collection of values returned by getVbrPconnAssociations.
 */
export interface GetVbrPconnAssociationsResult {
    /**
     * A list of Vbr Pconn Association Entries. Each element contains the following attributes:
     */
    readonly associations: outputs.expressconnect.GetVbrPconnAssociationsAssociation[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    /**
     * The ID of the VBR instance.
     */
    readonly vbrId?: string;
}
/**
 * This data source provides Express Connect Vbr Pconn Association available to the user.
 *
 * > **NOTE:** Available in 1.196.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.expressconnect.getVbrPconnAssociations({
 *     ids: ["example_id"],
 *     vbrId: alicloud_express_connect_vbr_pconn_association["default"].vbr_id,
 * });
 * export const alicloudExpressConnectVbrPconnAssociationExampleId = _default.then(_default => _default.associations?.[0]?.id);
 * ```
 */
export function getVbrPconnAssociationsOutput(args?: GetVbrPconnAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVbrPconnAssociationsResult> {
    return pulumi.output(args).apply((a: any) => getVbrPconnAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getVbrPconnAssociations.
 */
export interface GetVbrPconnAssociationsOutputArgs {
    /**
     * A list of Vbr Pconn Association IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    /**
     * The ID of the VBR instance.
     */
    vbrId?: pulumi.Input<string>;
}
