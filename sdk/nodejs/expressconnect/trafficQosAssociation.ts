// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Traffic Qos Association resource. Express Connect QoS associated resources.
 *
 * For information about Express Connect Traffic Qos Association and how to use it, see [What is Traffic Qos Association](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/ModifyExpressConnectTrafficQos).
 *
 * > **NOTE:** Available since v1.224.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.expressconnect.getPhysicalConnections({
 *     nameRegex: "preserved-NODELETING",
 * });
 * const createQos = new alicloud.expressconnect.TrafficQos("createQos", {
 *     qosName: name,
 *     qosDescription: "terraform-example",
 * });
 * const associateQos = new alicloud.expressconnect.TrafficQosAssociation("associateQos", {
 *     instanceId: _default.then(_default => _default.ids?.[1]),
 *     qosId: createQos.id,
 *     instanceType: "PHYSICALCONNECTION",
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Traffic Qos Association can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:expressconnect/trafficQosAssociation:TrafficQosAssociation example <qos_id>:<instance_id>:<instance_type>
 * ```
 */
export class TrafficQosAssociation extends pulumi.CustomResource {
    /**
     * Get an existing TrafficQosAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficQosAssociationState, opts?: pulumi.CustomResourceOptions): TrafficQosAssociation {
        return new TrafficQosAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/trafficQosAssociation:TrafficQosAssociation';

    /**
     * Returns true if the given object is an instance of TrafficQosAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficQosAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficQosAssociation.__pulumiType;
    }

    /**
     * The ID of the associated instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The type of the associated instance. Value: **physical connection** physical connection.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * The QoS policy ID.
     */
    public readonly qosId!: pulumi.Output<string>;
    /**
     * The status of the associated instance. Value:
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a TrafficQosAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrafficQosAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficQosAssociationArgs | TrafficQosAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficQosAssociationState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["qosId"] = state ? state.qosId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as TrafficQosAssociationArgs | undefined;
            if ((!args || args.qosId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'qosId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["qosId"] = args ? args.qosId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrafficQosAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TrafficQosAssociation resources.
 */
export interface TrafficQosAssociationState {
    /**
     * The ID of the associated instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of the associated instance. Value: **physical connection** physical connection.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The QoS policy ID.
     */
    qosId?: pulumi.Input<string>;
    /**
     * The status of the associated instance. Value:
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrafficQosAssociation resource.
 */
export interface TrafficQosAssociationArgs {
    /**
     * The ID of the associated instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of the associated instance. Value: **physical connection** physical connection.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The QoS policy ID.
     */
    qosId: pulumi.Input<string>;
}
