// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AppTemplateArgs, AppTemplateState } from "./appTemplate";
export type AppTemplate = import("./appTemplate").AppTemplate;
export const AppTemplate: typeof import("./appTemplate").AppTemplate = null as any;
utilities.lazyLoad(exports, ["AppTemplate"], () => require("./appTemplate"));

export { GetAppTemplatesArgs, GetAppTemplatesResult, GetAppTemplatesOutputArgs } from "./getAppTemplates";
export const getAppTemplates: typeof import("./getAppTemplates").getAppTemplates = null as any;
export const getAppTemplatesOutput: typeof import("./getAppTemplates").getAppTemplatesOutput = null as any;
utilities.lazyLoad(exports, ["getAppTemplates","getAppTemplatesOutput"], () => require("./getAppTemplates"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:imp/appTemplate:AppTemplate":
                return new AppTemplate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "imp/appTemplate", _module)
