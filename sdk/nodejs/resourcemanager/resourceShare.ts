// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Resource Manager Resource Share resource.
 *
 * RS resource sharing.
 *
 * For information about Resource Manager Resource Share and how to use it, see [What is Resource Share](https://www.alibabacloud.com/help/en/doc-detail/94475.htm).
 *
 * > **NOTE:** Available since v1.111.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const example = new alicloud.resourcemanager.ResourceShare("example", {resourceShareName: name});
 * ```
 *
 * ## Import
 *
 * Resource Manager Resource Share can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:resourcemanager/resourceShare:ResourceShare example <id>
 * ```
 */
export class ResourceShare extends pulumi.CustomResource {
    /**
     * Get an existing ResourceShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceShareState, opts?: pulumi.CustomResourceOptions): ResourceShare {
        return new ResourceShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:resourcemanager/resourceShare:ResourceShare';

    /**
     * Returns true if the given object is an instance of ResourceShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceShare.__pulumiType;
    }

    /**
     * Whether to allow sharing to accounts outside the resource directory. Value:
     * - false (default): Only sharing within the resource directory is allowed.
     * - true: Allow sharing to any account.
     */
    declare public readonly allowExternalTargets: pulumi.Output<boolean | undefined>;
    /**
     * The create time of resource share.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Share permission name. When it is empty, the system automatically binds the default permissions associated with the resource type. For more information, see [Permission Library](https://www.alibabacloud.com/help/en/resource-management/resource-sharing/user-guide/permissions-for-resource-sharing).
     */
    declare public readonly permissionNames: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the resource group
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The name of resource share.
     */
    declare public readonly resourceShareName: pulumi.Output<string>;
    /**
     * The owner of resource share,  `Self` and `OtherAccounts`.
     */
    declare public /*out*/ readonly resourceShareOwner: pulumi.Output<string>;
    /**
     * List of shared resources. **Note: The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.** See `resources` below.
     */
    declare public readonly resources: pulumi.Output<outputs.resourcemanager.ResourceShareResource[] | undefined>;
    /**
     * The status of resource share.  `Active`,`Deleted` and `Deleting`.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tag of the resource
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource user.
     */
    declare public readonly targets: pulumi.Output<string[] | undefined>;

    /**
     * Create a ResourceShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceShareArgs | ResourceShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceShareState | undefined;
            resourceInputs["allowExternalTargets"] = state?.allowExternalTargets;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["permissionNames"] = state?.permissionNames;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["resourceShareName"] = state?.resourceShareName;
            resourceInputs["resourceShareOwner"] = state?.resourceShareOwner;
            resourceInputs["resources"] = state?.resources;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["targets"] = state?.targets;
        } else {
            const args = argsOrState as ResourceShareArgs | undefined;
            if (args?.resourceShareName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceShareName'");
            }
            resourceInputs["allowExternalTargets"] = args?.allowExternalTargets;
            resourceInputs["permissionNames"] = args?.permissionNames;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["resourceShareName"] = args?.resourceShareName;
            resourceInputs["resources"] = args?.resources;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["targets"] = args?.targets;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["resourceShareOwner"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceShare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceShare resources.
 */
export interface ResourceShareState {
    /**
     * Whether to allow sharing to accounts outside the resource directory. Value:
     * - false (default): Only sharing within the resource directory is allowed.
     * - true: Allow sharing to any account.
     */
    allowExternalTargets?: pulumi.Input<boolean>;
    /**
     * The create time of resource share.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Share permission name. When it is empty, the system automatically binds the default permissions associated with the resource type. For more information, see [Permission Library](https://www.alibabacloud.com/help/en/resource-management/resource-sharing/user-guide/permissions-for-resource-sharing).
     */
    permissionNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The name of resource share.
     */
    resourceShareName?: pulumi.Input<string>;
    /**
     * The owner of resource share,  `Self` and `OtherAccounts`.
     */
    resourceShareOwner?: pulumi.Input<string>;
    /**
     * List of shared resources. **Note: The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.** See `resources` below.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.resourcemanager.ResourceShareResource>[]>;
    /**
     * The status of resource share.  `Active`,`Deleted` and `Deleting`.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource user.
     */
    targets?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ResourceShare resource.
 */
export interface ResourceShareArgs {
    /**
     * Whether to allow sharing to accounts outside the resource directory. Value:
     * - false (default): Only sharing within the resource directory is allowed.
     * - true: Allow sharing to any account.
     */
    allowExternalTargets?: pulumi.Input<boolean>;
    /**
     * Share permission name. When it is empty, the system automatically binds the default permissions associated with the resource type. For more information, see [Permission Library](https://www.alibabacloud.com/help/en/resource-management/resource-sharing/user-guide/permissions-for-resource-sharing).
     */
    permissionNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the resource group
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The name of resource share.
     */
    resourceShareName: pulumi.Input<string>;
    /**
     * List of shared resources. **Note: The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.** See `resources` below.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.resourcemanager.ResourceShareResource>[]>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource user.
     */
    targets?: pulumi.Input<pulumi.Input<string>[]>;
}
