// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Resource Manager Handshake resource.
 *
 * For information about Resource Manager Handshake and how to use it, see [What is Handshake](https://www.alibabacloud.com/help/en/doc-detail/135287.htm).
 *
 * > **NOTE:** Available since v1.82.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * // Add a Resource Manager handshake.
 * const example = new alicloud.resourcemanager.Handshake("example", {
 *     targetEntity: "1182775234******",
 *     targetType: "Account",
 *     note: "test resource manager handshake",
 * });
 * ```
 *
 * ## Import
 *
 * Resource Manager Handshake can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:resourcemanager/handshake:Handshake example <id>
 * ```
 */
export class Handshake extends pulumi.CustomResource {
    /**
     * Get an existing Handshake resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HandshakeState, opts?: pulumi.CustomResourceOptions): Handshake {
        return new Handshake(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:resourcemanager/handshake:Handshake';

    /**
     * Returns true if the given object is an instance of Handshake.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Handshake {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Handshake.__pulumiType;
    }

    /**
     * The time when the invitation was created. The time is displayed in UTC.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The time when the invitation expires. The time is displayed in UTC.
     */
    declare public /*out*/ readonly expireTime: pulumi.Output<string>;
    /**
     * The ID of the management account of the resource directory.
     */
    declare public /*out*/ readonly masterAccountId: pulumi.Output<string>;
    /**
     * The name of the management account of the resource directory.
     */
    declare public /*out*/ readonly masterAccountName: pulumi.Output<string>;
    /**
     * The time when the invitation was modified. The time is displayed in UTC.
     */
    declare public /*out*/ readonly modifyTime: pulumi.Output<string>;
    /**
     * The description of the invitation.
     * The description can be up to 1,024 characters in length.
     */
    declare public readonly note: pulumi.Output<string | undefined>;
    /**
     * The ID of the resource directory.
     */
    declare public /*out*/ readonly resourceDirectoryId: pulumi.Output<string>;
    /**
     * The status of the invitation.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The ID or logon email address of the account that you want to invite.
     */
    declare public readonly targetEntity: pulumi.Output<string>;
    /**
     * The type of the invited account. Valid values:
     *
     * - Account: indicates the ID of the account.
     * - Email: indicates the logon email address of the account.
     */
    declare public readonly targetType: pulumi.Output<string>;

    /**
     * Create a Handshake resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HandshakeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HandshakeArgs | HandshakeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HandshakeState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["expireTime"] = state?.expireTime;
            resourceInputs["masterAccountId"] = state?.masterAccountId;
            resourceInputs["masterAccountName"] = state?.masterAccountName;
            resourceInputs["modifyTime"] = state?.modifyTime;
            resourceInputs["note"] = state?.note;
            resourceInputs["resourceDirectoryId"] = state?.resourceDirectoryId;
            resourceInputs["status"] = state?.status;
            resourceInputs["targetEntity"] = state?.targetEntity;
            resourceInputs["targetType"] = state?.targetType;
        } else {
            const args = argsOrState as HandshakeArgs | undefined;
            if (args?.targetEntity === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetEntity'");
            }
            if (args?.targetType === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetType'");
            }
            resourceInputs["note"] = args?.note;
            resourceInputs["targetEntity"] = args?.targetEntity;
            resourceInputs["targetType"] = args?.targetType;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["masterAccountId"] = undefined /*out*/;
            resourceInputs["masterAccountName"] = undefined /*out*/;
            resourceInputs["modifyTime"] = undefined /*out*/;
            resourceInputs["resourceDirectoryId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Handshake.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Handshake resources.
 */
export interface HandshakeState {
    /**
     * The time when the invitation was created. The time is displayed in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The time when the invitation expires. The time is displayed in UTC.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * The ID of the management account of the resource directory.
     */
    masterAccountId?: pulumi.Input<string>;
    /**
     * The name of the management account of the resource directory.
     */
    masterAccountName?: pulumi.Input<string>;
    /**
     * The time when the invitation was modified. The time is displayed in UTC.
     */
    modifyTime?: pulumi.Input<string>;
    /**
     * The description of the invitation.
     * The description can be up to 1,024 characters in length.
     */
    note?: pulumi.Input<string>;
    /**
     * The ID of the resource directory.
     */
    resourceDirectoryId?: pulumi.Input<string>;
    /**
     * The status of the invitation.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID or logon email address of the account that you want to invite.
     */
    targetEntity?: pulumi.Input<string>;
    /**
     * The type of the invited account. Valid values:
     *
     * - Account: indicates the ID of the account.
     * - Email: indicates the logon email address of the account.
     */
    targetType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Handshake resource.
 */
export interface HandshakeArgs {
    /**
     * The description of the invitation.
     * The description can be up to 1,024 characters in length.
     */
    note?: pulumi.Input<string>;
    /**
     * The ID or logon email address of the account that you want to invite.
     */
    targetEntity: pulumi.Input<string>;
    /**
     * The type of the invited account. Valid values:
     *
     * - Account: indicates the ID of the account.
     * - Email: indicates the logon email address of the account.
     */
    targetType: pulumi.Input<string>;
}
