// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Resource Manager Folder resource.
 *
 * The management unit of the organization account in the resource directory.
 *
 * For information about Resource Manager Folder and how to use it, see [What is Folder](https://www.alibabacloud.com/help/en/resource-management/resource-directory/developer-reference/api-resourcedirectorymaster-2022-04-19-createfolder).
 *
 * > **NOTE:** Available since v1.82.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const example = new alicloud.resourcemanager.Folder("example", {folderName: `${name}-${_default.result}`});
 * ```
 *
 * ## Import
 *
 * Resource Manager Folder can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:resourcemanager/folder:Folder example <id>
 * ```
 */
export class Folder extends pulumi.CustomResource {
    /**
     * Get an existing Folder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FolderState, opts?: pulumi.CustomResourceOptions): Folder {
        return new Folder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:resourcemanager/folder:Folder';

    /**
     * Returns true if the given object is an instance of Folder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Folder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Folder.__pulumiType;
    }

    /**
     * (Available since v1.259.0) The time when the folder was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The name of the folder.
     */
    declare public readonly folderName: pulumi.Output<string>;
    /**
     * The ID of the parent folder.
     */
    declare public readonly parentFolderId: pulumi.Output<string>;
    /**
     * The tag of the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Folder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FolderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FolderArgs | FolderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FolderState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["folderName"] = state?.folderName;
            resourceInputs["parentFolderId"] = state?.parentFolderId;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as FolderArgs | undefined;
            if (args?.folderName === undefined && !opts.urn) {
                throw new Error("Missing required property 'folderName'");
            }
            resourceInputs["folderName"] = args?.folderName;
            resourceInputs["parentFolderId"] = args?.parentFolderId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Folder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Folder resources.
 */
export interface FolderState {
    /**
     * (Available since v1.259.0) The time when the folder was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The name of the folder.
     */
    folderName?: pulumi.Input<string>;
    /**
     * The ID of the parent folder.
     */
    parentFolderId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Folder resource.
 */
export interface FolderArgs {
    /**
     * The name of the folder.
     */
    folderName: pulumi.Input<string>;
    /**
     * The ID of the parent folder.
     */
    parentFolderId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
