// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Resource Manager Message Contact resource.
 *
 * Message contact for Resource Directory account.
 *
 * For information about Resource Manager Message Contact and how to use it, see [What is Message Contact](https://next.api.alibabacloud.com/document/ResourceDirectoryMaster/2022-04-19/AddMessageContact).
 *
 * > **NOTE:** Available since v1.259.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.resourcemanager.MessageContact("default", {
 *     messageTypes: ["AccountExpenses"],
 *     phoneNumber: "86-18626811111",
 *     title: "TechnicalDirector",
 *     emailAddress: "resourceexample@126.com",
 *     messageContactName: "example",
 * });
 * ```
 *
 * ## Import
 *
 * Resource Manager Message Contact can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:resourcemanager/messageContact:MessageContact example <id>
 * ```
 */
export class MessageContact extends pulumi.CustomResource {
    /**
     * Get an existing MessageContact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MessageContactState, opts?: pulumi.CustomResourceOptions): MessageContact {
        return new MessageContact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:resourcemanager/messageContact:MessageContact';

    /**
     * Returns true if the given object is an instance of MessageContact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MessageContact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MessageContact.__pulumiType;
    }

    /**
     * The time when the contact was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The email address of the contact.
     * After you specify an email address, you need to call SendEmailVerificationForMessageContact to send verification information to the email address. After the verification is passed, the email address takes effect.
     */
    declare public readonly emailAddress: pulumi.Output<string>;
    /**
     * The name of the contact.
     * The name must be unique in your resource directory.
     * The name must be 2 to 12 characters in length and can contain only letters.
     */
    declare public readonly messageContactName: pulumi.Output<string>;
    /**
     * The types of messages received by the contact.
     */
    declare public readonly messageTypes: pulumi.Output<string[]>;
    /**
     * The mobile phone number of the contact.
     *
     * Specify the mobile phone number in the `-` format.
     *
     * > **NOTE:**  Only mobile phone numbers in the `86-` format in the Chinese mainland are supported.
     *
     * After you specify a mobile phone number, you need to call SendPhoneVerificationForMessageContact to send verification information to the mobile phone number. After the verification is passed, the mobile phone number takes effect.
     */
    declare public readonly phoneNumber: pulumi.Output<string | undefined>;
    /**
     * The status of the contact.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The job title of the contact.Valid values:
     * - FinanceDirector
     * - TechnicalDirector
     * - MaintenanceDirector
     * - CEO
     * - ProjectDirector
     * - Other
     */
    declare public readonly title: pulumi.Output<string>;

    /**
     * Create a MessageContact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MessageContactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MessageContactArgs | MessageContactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MessageContactState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["emailAddress"] = state?.emailAddress;
            resourceInputs["messageContactName"] = state?.messageContactName;
            resourceInputs["messageTypes"] = state?.messageTypes;
            resourceInputs["phoneNumber"] = state?.phoneNumber;
            resourceInputs["status"] = state?.status;
            resourceInputs["title"] = state?.title;
        } else {
            const args = argsOrState as MessageContactArgs | undefined;
            if (args?.emailAddress === undefined && !opts.urn) {
                throw new Error("Missing required property 'emailAddress'");
            }
            if (args?.messageContactName === undefined && !opts.urn) {
                throw new Error("Missing required property 'messageContactName'");
            }
            if (args?.messageTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'messageTypes'");
            }
            if (args?.title === undefined && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["emailAddress"] = args?.emailAddress;
            resourceInputs["messageContactName"] = args?.messageContactName;
            resourceInputs["messageTypes"] = args?.messageTypes;
            resourceInputs["phoneNumber"] = args?.phoneNumber;
            resourceInputs["title"] = args?.title;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MessageContact.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MessageContact resources.
 */
export interface MessageContactState {
    /**
     * The time when the contact was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The email address of the contact.
     * After you specify an email address, you need to call SendEmailVerificationForMessageContact to send verification information to the email address. After the verification is passed, the email address takes effect.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * The name of the contact.
     * The name must be unique in your resource directory.
     * The name must be 2 to 12 characters in length and can contain only letters.
     */
    messageContactName?: pulumi.Input<string>;
    /**
     * The types of messages received by the contact.
     */
    messageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The mobile phone number of the contact.
     *
     * Specify the mobile phone number in the `-` format.
     *
     * > **NOTE:**  Only mobile phone numbers in the `86-` format in the Chinese mainland are supported.
     *
     * After you specify a mobile phone number, you need to call SendPhoneVerificationForMessageContact to send verification information to the mobile phone number. After the verification is passed, the mobile phone number takes effect.
     */
    phoneNumber?: pulumi.Input<string>;
    /**
     * The status of the contact.
     */
    status?: pulumi.Input<string>;
    /**
     * The job title of the contact.Valid values:
     * - FinanceDirector
     * - TechnicalDirector
     * - MaintenanceDirector
     * - CEO
     * - ProjectDirector
     * - Other
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MessageContact resource.
 */
export interface MessageContactArgs {
    /**
     * The email address of the contact.
     * After you specify an email address, you need to call SendEmailVerificationForMessageContact to send verification information to the email address. After the verification is passed, the email address takes effect.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * The name of the contact.
     * The name must be unique in your resource directory.
     * The name must be 2 to 12 characters in length and can contain only letters.
     */
    messageContactName: pulumi.Input<string>;
    /**
     * The types of messages received by the contact.
     */
    messageTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The mobile phone number of the contact.
     *
     * Specify the mobile phone number in the `-` format.
     *
     * > **NOTE:**  Only mobile phone numbers in the `86-` format in the Chinese mainland are supported.
     *
     * After you specify a mobile phone number, you need to call SendPhoneVerificationForMessageContact to send verification information to the mobile phone number. After the verification is passed, the mobile phone number takes effect.
     */
    phoneNumber?: pulumi.Input<string>;
    /**
     * The job title of the contact.Valid values:
     * - FinanceDirector
     * - TechnicalDirector
     * - MaintenanceDirector
     * - CEO
     * - ProjectDirector
     * - Other
     */
    title: pulumi.Input<string>;
}
