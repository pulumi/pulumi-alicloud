// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Resource Manager Resource Directory resource.
 *
 * For information about Resource Manager Resource Directory and how to use it, see [What is Resource Directory](https://www.alibabacloud.com/help/en/doc-detail/94475.htm).
 *
 * > **NOTE:** Available since v1.84.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.resourcemanager.getResourceDirectories({});
 * const defaultResourceDirectory: alicloud.resourcemanager.ResourceDirectory[] = [];
 * _default.then(_default => _default.directories).length.apply(length => {
 *     for (const range = {value: 0}; range.value < (length > 0 ? 0 : 1); range.value++) {
 *         defaultResourceDirectory.push(new alicloud.resourcemanager.ResourceDirectory(`default-${range.value}`, {status: "Enabled"}));
 *     }
 * });
 * ```
 *
 * ## Import
 *
 * Resource Manager Resource Directory can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:resourcemanager/resourceDirectory:ResourceDirectory example <id>
 * ```
 */
export class ResourceDirectory extends pulumi.CustomResource {
    /**
     * Get an existing ResourceDirectory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceDirectoryState, opts?: pulumi.CustomResourceOptions): ResourceDirectory {
        return new ResourceDirectory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:resourcemanager/resourceDirectory:ResourceDirectory';

    /**
     * Returns true if the given object is an instance of ResourceDirectory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceDirectory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceDirectory.__pulumiType;
    }

    /**
     * The time when the resource directory was created
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The ID of the master account
     */
    declare public /*out*/ readonly masterAccountId: pulumi.Output<string>;
    /**
     * The name of the master account
     */
    declare public /*out*/ readonly masterAccountName: pulumi.Output<string>;
    /**
     * The status of the Member Display Name Synchronization feature. Valid values:
     * - Enabled
     * - Disabled
     */
    declare public readonly memberAccountDisplayNameSyncStatus: pulumi.Output<string>;
    /**
     * The status of the member deletion feature. Valid values:
     * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
     * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
     */
    declare public readonly memberDeletionStatus: pulumi.Output<string>;
    /**
     * The ID of the root folder
     */
    declare public /*out*/ readonly rootFolderId: pulumi.Output<string>;
    /**
     * ScpStatus
     */
    declare public readonly status: pulumi.Output<string>;

    /**
     * Create a ResourceDirectory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceDirectoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceDirectoryArgs | ResourceDirectoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceDirectoryState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["masterAccountId"] = state?.masterAccountId;
            resourceInputs["masterAccountName"] = state?.masterAccountName;
            resourceInputs["memberAccountDisplayNameSyncStatus"] = state?.memberAccountDisplayNameSyncStatus;
            resourceInputs["memberDeletionStatus"] = state?.memberDeletionStatus;
            resourceInputs["rootFolderId"] = state?.rootFolderId;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as ResourceDirectoryArgs | undefined;
            resourceInputs["memberAccountDisplayNameSyncStatus"] = args?.memberAccountDisplayNameSyncStatus;
            resourceInputs["memberDeletionStatus"] = args?.memberDeletionStatus;
            resourceInputs["status"] = args?.status;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["masterAccountId"] = undefined /*out*/;
            resourceInputs["masterAccountName"] = undefined /*out*/;
            resourceInputs["rootFolderId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceDirectory.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceDirectory resources.
 */
export interface ResourceDirectoryState {
    /**
     * The time when the resource directory was created
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the master account
     */
    masterAccountId?: pulumi.Input<string>;
    /**
     * The name of the master account
     */
    masterAccountName?: pulumi.Input<string>;
    /**
     * The status of the Member Display Name Synchronization feature. Valid values:
     * - Enabled
     * - Disabled
     */
    memberAccountDisplayNameSyncStatus?: pulumi.Input<string>;
    /**
     * The status of the member deletion feature. Valid values:
     * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
     * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
     */
    memberDeletionStatus?: pulumi.Input<string>;
    /**
     * The ID of the root folder
     */
    rootFolderId?: pulumi.Input<string>;
    /**
     * ScpStatus
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceDirectory resource.
 */
export interface ResourceDirectoryArgs {
    /**
     * The status of the Member Display Name Synchronization feature. Valid values:
     * - Enabled
     * - Disabled
     */
    memberAccountDisplayNameSyncStatus?: pulumi.Input<string>;
    /**
     * The status of the member deletion feature. Valid values:
     * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
     * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
     */
    memberDeletionStatus?: pulumi.Input<string>;
    /**
     * ScpStatus
     */
    status?: pulumi.Input<string>;
}
