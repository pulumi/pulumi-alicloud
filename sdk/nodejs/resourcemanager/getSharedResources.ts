// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.111.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const this = alicloud.resourcemanager.getSharedResources({
 *     resourceShareId: "rs-V2NV******",
 *     ids: ["vsw-bp1mzouzpmvie********:VSwitch"],
 * });
 * export const firstResourceManagerSharedResourceId = data.alicloud_resource_manager_shared_resources.example.resources[0].id;
 * ```
 */
export function getSharedResources(args?: GetSharedResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetSharedResourcesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:resourcemanager/getSharedResources:getSharedResources", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "resourceShareId": args.resourceShareId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getSharedResources.
 */
export interface GetSharedResourcesArgs {
    /**
     * A list of shared resource ID.
     */
    ids?: string[];
    outputFile?: string;
    /**
     * The resource share ID of resource manager.
     */
    resourceShareId?: string;
    /**
     * The status of shared resource.
     */
    status?: string;
}

/**
 * A collection of values returned by getSharedResources.
 */
export interface GetSharedResourcesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly resourceShareId?: string;
    readonly resources: outputs.resourcemanager.GetSharedResourcesResource[];
    readonly status?: string;
}

export function getSharedResourcesOutput(args?: GetSharedResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSharedResourcesResult> {
    return pulumi.output(args).apply(a => getSharedResources(a, opts))
}

/**
 * A collection of arguments for invoking getSharedResources.
 */
export interface GetSharedResourcesOutputArgs {
    /**
     * A list of shared resource ID.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    /**
     * The resource share ID of resource manager.
     */
    resourceShareId?: pulumi.Input<string>;
    /**
     * The status of shared resource.
     */
    status?: pulumi.Input<string>;
}
