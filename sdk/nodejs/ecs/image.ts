// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a ECS Image resource.
 *
 * > **NOTE:**  If you want to create a template from an ECS instance, you can specify the instance ID (InstanceId) to create a custom image. You must make sure that the status of the specified instance is Running or Stopped. After a successful invocation, each disk of the specified instance has a new snapshot created.
 *
 * > **NOTE:**  If you want to create a custom image based on the system disk of your ECS instance, you can specify one of the system disk snapshots (SnapshotId) to create a custom image. However, the specified snapshot cannot be created on or before July 15, 2013.
 *
 * > **NOTE:**  If you want to combine snapshots of multiple disks into an image template, you can specify DiskDeviceMapping to create a custom image.
 *
 * For information about ECS Image and how to use it, see [What is Image](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ecs-2014-05-26-createimage).
 *
 * > **NOTE:** Available since v1.64.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "Instance",
 * });
 * const defaultGetInstanceTypes = alicloud.ecs.getInstanceTypes({
 *     instanceTypeFamily: "ecs.sn1ne",
 * });
 * const defaultGetImages = alicloud.ecs.getImages({
 *     nameRegex: "^ubuntu_18.*64",
 *     owners: "system",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: "terraform-example",
 *     cidrBlock: "172.17.3.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: "terraform-example",
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultInstance = new alicloud.ecs.Instance("default", {
 *     availabilityZone: _default.then(_default => _default.zones?.[0]?.id),
 *     instanceName: "terraform-example",
 *     securityGroups: [defaultSecurityGroup.id],
 *     vswitchId: defaultSwitch.id,
 *     instanceType: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.ids?.[0]),
 *     imageId: defaultGetImages.then(defaultGetImages => defaultGetImages.ids?.[0]),
 *     internetMaxBandwidthOut: 10,
 * });
 * const defaultGetResourceGroups = alicloud.resourcemanager.getResourceGroups({});
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultImage = new alicloud.ecs.Image("default", {
 *     instanceId: defaultInstance.id,
 *     imageName: `terraform-example-${defaultInteger.result}`,
 *     description: "terraform-example",
 *     architecture: "x86_64",
 *     resourceGroupId: defaultGetResourceGroups.then(defaultGetResourceGroups => defaultGetResourceGroups.ids?.[0]),
 *     tags: {
 *         FinanceDept: "FinanceDeptJoshua",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ECS Image can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/image:Image example <id>
 * ```
 */
export class Image extends pulumi.CustomResource {
    /**
     * Get an existing Image resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageState, opts?: pulumi.CustomResourceOptions): Image {
        return new Image(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/image:Image';

    /**
     * Returns true if the given object is an instance of Image.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Image {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Image.__pulumiType;
    }

    /**
     * The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
     */
    declare public readonly architecture: pulumi.Output<string | undefined>;
    /**
     * The new boot mode of the image. Valid values:
     *
     * *   BIOS: Basic Input/Output System (BIOS)
     *
     * *   UEFI: Unified Extensible Firmware Interface (UEFI)
     *
     * *   UEFI-Preferred: BIOS and UEFI
     *
     * > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
     *
     * > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
     */
    declare public readonly bootMode: pulumi.Output<string>;
    /**
     * The create time
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
     */
    declare public readonly deleteAutoSnapshot: pulumi.Output<boolean | undefined>;
    /**
     * The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
     *
     * > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
     */
    declare public readonly detectionStrategy: pulumi.Output<string | undefined>;
    /**
     * Snapshot information for the image See `diskDeviceMapping` below.
     */
    declare public readonly diskDeviceMappings: pulumi.Output<outputs.ecs.ImageDiskDeviceMapping[]>;
    /**
     * Features See `features` below.
     */
    declare public readonly features: pulumi.Output<outputs.ecs.ImageFeatures>;
    /**
     * Whether to perform forced deletion. Value range:
     * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
     * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
     *
     * Default value: false
     */
    declare public readonly force: pulumi.Output<boolean | undefined>;
    /**
     * The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
     */
    declare public readonly imageFamily: pulumi.Output<string | undefined>;
    /**
     * The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
     */
    declare public readonly imageName: pulumi.Output<string>;
    /**
     * The image version.
     *
     * > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
     */
    declare public readonly imageVersion: pulumi.Output<string | undefined>;
    /**
     * The instance ID.
     */
    declare public readonly instanceId: pulumi.Output<string | undefined>;
    /**
     * The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
     */
    declare public readonly licenseType: pulumi.Output<string | undefined>;
    /**
     * . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
     */
    declare public readonly platform: pulumi.Output<string>;
    /**
     * The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
     *
     * > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The ID of the snapshot that you want to use to create the custom image.
     */
    declare public readonly snapshotId: pulumi.Output<string | undefined>;
    /**
     * The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tag
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Image resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ImageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImageArgs | ImageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImageState | undefined;
            resourceInputs["architecture"] = state?.architecture;
            resourceInputs["bootMode"] = state?.bootMode;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["deleteAutoSnapshot"] = state?.deleteAutoSnapshot;
            resourceInputs["description"] = state?.description;
            resourceInputs["detectionStrategy"] = state?.detectionStrategy;
            resourceInputs["diskDeviceMappings"] = state?.diskDeviceMappings;
            resourceInputs["features"] = state?.features;
            resourceInputs["force"] = state?.force;
            resourceInputs["imageFamily"] = state?.imageFamily;
            resourceInputs["imageName"] = state?.imageName;
            resourceInputs["imageVersion"] = state?.imageVersion;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["licenseType"] = state?.licenseType;
            resourceInputs["name"] = state?.name;
            resourceInputs["platform"] = state?.platform;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["snapshotId"] = state?.snapshotId;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as ImageArgs | undefined;
            resourceInputs["architecture"] = args?.architecture;
            resourceInputs["bootMode"] = args?.bootMode;
            resourceInputs["deleteAutoSnapshot"] = args?.deleteAutoSnapshot;
            resourceInputs["description"] = args?.description;
            resourceInputs["detectionStrategy"] = args?.detectionStrategy;
            resourceInputs["diskDeviceMappings"] = args?.diskDeviceMappings;
            resourceInputs["features"] = args?.features;
            resourceInputs["force"] = args?.force;
            resourceInputs["imageFamily"] = args?.imageFamily;
            resourceInputs["imageName"] = args?.imageName;
            resourceInputs["imageVersion"] = args?.imageVersion;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["licenseType"] = args?.licenseType;
            resourceInputs["name"] = args?.name;
            resourceInputs["platform"] = args?.platform;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["snapshotId"] = args?.snapshotId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Image.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Image resources.
 */
export interface ImageState {
    /**
     * The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
     */
    architecture?: pulumi.Input<string>;
    /**
     * The new boot mode of the image. Valid values:
     *
     * *   BIOS: Basic Input/Output System (BIOS)
     *
     * *   UEFI: Unified Extensible Firmware Interface (UEFI)
     *
     * *   UEFI-Preferred: BIOS and UEFI
     *
     * > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
     *
     * > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
     */
    bootMode?: pulumi.Input<string>;
    /**
     * The create time
     */
    createTime?: pulumi.Input<string>;
    /**
     * Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
     */
    deleteAutoSnapshot?: pulumi.Input<boolean>;
    /**
     * The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
     */
    description?: pulumi.Input<string>;
    /**
     * The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
     *
     * > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
     */
    detectionStrategy?: pulumi.Input<string>;
    /**
     * Snapshot information for the image See `diskDeviceMapping` below.
     */
    diskDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ecs.ImageDiskDeviceMapping>[]>;
    /**
     * Features See `features` below.
     */
    features?: pulumi.Input<inputs.ecs.ImageFeatures>;
    /**
     * Whether to perform forced deletion. Value range:
     * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
     * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
     *
     * Default value: false
     */
    force?: pulumi.Input<boolean>;
    /**
     * The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
     */
    imageFamily?: pulumi.Input<string>;
    /**
     * The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The image version.
     *
     * > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * The instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
     */
    platform?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
     *
     * > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ID of the snapshot that you want to use to create the custom image.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Image resource.
 */
export interface ImageArgs {
    /**
     * The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
     */
    architecture?: pulumi.Input<string>;
    /**
     * The new boot mode of the image. Valid values:
     *
     * *   BIOS: Basic Input/Output System (BIOS)
     *
     * *   UEFI: Unified Extensible Firmware Interface (UEFI)
     *
     * *   UEFI-Preferred: BIOS and UEFI
     *
     * > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
     *
     * > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
     */
    bootMode?: pulumi.Input<string>;
    /**
     * Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
     */
    deleteAutoSnapshot?: pulumi.Input<boolean>;
    /**
     * The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
     */
    description?: pulumi.Input<string>;
    /**
     * The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
     *
     * > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
     */
    detectionStrategy?: pulumi.Input<string>;
    /**
     * Snapshot information for the image See `diskDeviceMapping` below.
     */
    diskDeviceMappings?: pulumi.Input<pulumi.Input<inputs.ecs.ImageDiskDeviceMapping>[]>;
    /**
     * Features See `features` below.
     */
    features?: pulumi.Input<inputs.ecs.ImageFeatures>;
    /**
     * Whether to perform forced deletion. Value range:
     * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
     * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
     *
     * Default value: false
     */
    force?: pulumi.Input<boolean>;
    /**
     * The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
     */
    imageFamily?: pulumi.Input<string>;
    /**
     * The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The image version.
     *
     * > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * The instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
     */
    platform?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
     *
     * > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ID of the snapshot that you want to use to create the custom image.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The tag
     *
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
