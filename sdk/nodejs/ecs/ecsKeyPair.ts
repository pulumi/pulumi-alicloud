// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Key Pair resource.
 *
 * For information about ECS Key Pair and how to use it, see [What is Key Pair](https://www.alibabacloud.com/help/en/doc-detail/51771.htm).
 *
 * > **NOTE:** Available since v1.121.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.ecs.EcsKeyPair("example", {keyPairName: "key_pair_name"});
 * // Using name prefix to build key pair
 * const prefix = new alicloud.ecs.EcsKeyPair("prefix", {keyNamePrefix: "terraform-test-key-pair-prefix"});
 * // Import an existing public key to build a alicloud key pair
 * const publickey = new alicloud.ecs.EcsKeyPair("publickey", {
 *     keyPairName: "my_public_key",
 *     publicKey: "ssh-rsa AAAAB3Nza12345678qwertyuudsfsg",
 * });
 * ```
 *
 * ## Import
 *
 * ECS Key Pair can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/ecsKeyPair:EcsKeyPair example <id>
 * ```
 */
export class EcsKeyPair extends pulumi.CustomResource {
    /**
     * Get an existing EcsKeyPair resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsKeyPairState, opts?: pulumi.CustomResourceOptions): EcsKeyPair {
        return new EcsKeyPair(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ecsKeyPair:EcsKeyPair';

    /**
     * Returns true if the given object is an instance of EcsKeyPair.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsKeyPair {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsKeyPair.__pulumiType;
    }

    /**
     * (Available since v1.237.0) The time when the key pair was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The fingerprint of the key pair.
     */
    public /*out*/ readonly fingerPrint!: pulumi.Output<string>;
    /**
     * The key file.
     */
    public readonly keyFile!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Field `keyName` has been deprecated from provider version 1.121.0. New field `keyPairName` instead.
     */
    public readonly keyName!: pulumi.Output<string>;
    public readonly keyNamePrefix!: pulumi.Output<string | undefined>;
    /**
     * The name of the key pair. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     */
    public readonly keyPairName!: pulumi.Output<string>;
    /**
     * The public key of the key pair.
     */
    public readonly publicKey!: pulumi.Output<string | undefined>;
    /**
     * The ID of the resource group to which to add the key pair.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a EcsKeyPair resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EcsKeyPairArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsKeyPairArgs | EcsKeyPairState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsKeyPairState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["fingerPrint"] = state ? state.fingerPrint : undefined;
            resourceInputs["keyFile"] = state ? state.keyFile : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["keyNamePrefix"] = state ? state.keyNamePrefix : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as EcsKeyPairArgs | undefined;
            resourceInputs["keyFile"] = args ? args.keyFile : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["keyNamePrefix"] = args ? args.keyNamePrefix : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["publicKey"] = args ? args.publicKey : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["fingerPrint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsKeyPair.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EcsKeyPair resources.
 */
export interface EcsKeyPairState {
    /**
     * (Available since v1.237.0) The time when the key pair was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The fingerprint of the key pair.
     */
    fingerPrint?: pulumi.Input<string>;
    /**
     * The key file.
     */
    keyFile?: pulumi.Input<string>;
    /**
     * @deprecated Field `keyName` has been deprecated from provider version 1.121.0. New field `keyPairName` instead.
     */
    keyName?: pulumi.Input<string>;
    keyNamePrefix?: pulumi.Input<string>;
    /**
     * The name of the key pair. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The public key of the key pair.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which to add the key pair.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a EcsKeyPair resource.
 */
export interface EcsKeyPairArgs {
    /**
     * The key file.
     */
    keyFile?: pulumi.Input<string>;
    /**
     * @deprecated Field `keyName` has been deprecated from provider version 1.121.0. New field `keyPairName` instead.
     */
    keyName?: pulumi.Input<string>;
    keyNamePrefix?: pulumi.Input<string>;
    /**
     * The name of the key pair. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The public key of the key pair.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which to add the key pair.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
