// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Ecs Capacity Reservation resource.
 *
 * For information about Ecs Capacity Reservation and how to use it, see [What is Capacity Reservation](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/createcapacityreservation).
 *
 * > **NOTE:** Available in v1.195.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultInstanceTypes = alicloud.ecs.getInstanceTypes({
 *     instanceTypeFamily: "ecs.g5",
 * });
 * const defaultZones = defaultInstanceTypes.then(defaultInstanceTypes => alicloud.getZones({
 *     availableResourceCreation: "Instance",
 *     availableInstanceType: defaultInstanceTypes.ids?.[0],
 * }));
 * const defaultResourceGroups = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultCapacityReservation = new alicloud.ecs.CapacityReservation("defaultCapacityReservation", {
 *     description: "terraform-example",
 *     platform: "linux",
 *     capacityReservationName: "terraform-example",
 *     endTimeType: "Unlimited",
 *     resourceGroupId: defaultResourceGroups.then(defaultResourceGroups => defaultResourceGroups.ids?.[0]),
 *     instanceAmount: 1,
 *     instanceType: defaultInstanceTypes.then(defaultInstanceTypes => defaultInstanceTypes.ids?.[0]),
 *     matchCriteria: "Open",
 *     tags: {
 *         Created: "terraform-example",
 *     },
 *     zoneIds: [defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id)],
 * });
 * ```
 *
 * ## Import
 *
 * Ecs Capacity Reservation can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/capacityReservation:CapacityReservation example <id>
 * ```
 */
export class CapacityReservation extends pulumi.CustomResource {
    /**
     * Get an existing CapacityReservation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CapacityReservationState, opts?: pulumi.CustomResourceOptions): CapacityReservation {
        return new CapacityReservation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/capacityReservation:CapacityReservation';

    /**
     * Returns true if the given object is an instance of CapacityReservation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CapacityReservation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapacityReservation.__pulumiType;
    }

    /**
     * Capacity reservation service name.
     */
    public readonly capacityReservationName!: pulumi.Output<string>;
    /**
     * description of the capacity reservation instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to pre-check the API request. Valid values: `true` and `false`.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * end time of the capacity reservation. the capacity reservation will be  released at the end time automatically if set. otherwise it will last until manually released
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * Release mode of capacity reservation service. Value range:Limited: release at specified time. The EndTime parameter must be specified at the same time.Unlimited: manual release. No time limit.
     */
    public readonly endTimeType!: pulumi.Output<string>;
    /**
     * The total number of instances that need to be reserved within the capacity reservation.
     */
    public readonly instanceAmount!: pulumi.Output<number>;
    /**
     * Instance type. Currently, you can only set the capacity reservation service for one instance type.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * The type of private resource pool generated after the capacity reservation service takes effect. Value range:Open: Open mode.Target: dedicated mode.Default value: Open
     */
    public readonly matchCriteria!: pulumi.Output<string>;
    /**
     * The payment type of the resource
     */
    public /*out*/ readonly paymentType!: pulumi.Output<string>;
    /**
     * platform of the capacity reservation, value range `windows`, `linux`.
     */
    public readonly platform!: pulumi.Output<string>;
    /**
     * The resource group id.
     */
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * time of the capacity reservation which become active.
     */
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    /**
     * The capacity is scheduled to take effect. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     */
    public /*out*/ readonly startTimeType!: pulumi.Output<string>;
    /**
     * The status of the capacity reservation.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The tag of the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * This parameter is under test and is not yet open for use.
     */
    public /*out*/ readonly timeSlot!: pulumi.Output<string>;
    /**
     * The ID of the zone in the region to which the capacity reservation service belongs. Currently, it is only supported to create a capacity reservation service in one zone.
     */
    public readonly zoneIds!: pulumi.Output<string[]>;

    /**
     * Create a CapacityReservation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapacityReservationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CapacityReservationArgs | CapacityReservationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CapacityReservationState | undefined;
            resourceInputs["capacityReservationName"] = state ? state.capacityReservationName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["endTimeType"] = state ? state.endTimeType : undefined;
            resourceInputs["instanceAmount"] = state ? state.instanceAmount : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["matchCriteria"] = state ? state.matchCriteria : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["startTimeType"] = state ? state.startTimeType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeSlot"] = state ? state.timeSlot : undefined;
            resourceInputs["zoneIds"] = state ? state.zoneIds : undefined;
        } else {
            const args = argsOrState as CapacityReservationArgs | undefined;
            if ((!args || args.instanceAmount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceAmount'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.zoneIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneIds'");
            }
            resourceInputs["capacityReservationName"] = args ? args.capacityReservationName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["endTimeType"] = args ? args.endTimeType : undefined;
            resourceInputs["instanceAmount"] = args ? args.instanceAmount : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["matchCriteria"] = args ? args.matchCriteria : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zoneIds"] = args ? args.zoneIds : undefined;
            resourceInputs["paymentType"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["startTimeType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["timeSlot"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CapacityReservation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CapacityReservation resources.
 */
export interface CapacityReservationState {
    /**
     * Capacity reservation service name.
     */
    capacityReservationName?: pulumi.Input<string>;
    /**
     * description of the capacity reservation instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether to pre-check the API request. Valid values: `true` and `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * end time of the capacity reservation. the capacity reservation will be  released at the end time automatically if set. otherwise it will last until manually released
     */
    endTime?: pulumi.Input<string>;
    /**
     * Release mode of capacity reservation service. Value range:Limited: release at specified time. The EndTime parameter must be specified at the same time.Unlimited: manual release. No time limit.
     */
    endTimeType?: pulumi.Input<string>;
    /**
     * The total number of instances that need to be reserved within the capacity reservation.
     */
    instanceAmount?: pulumi.Input<number>;
    /**
     * Instance type. Currently, you can only set the capacity reservation service for one instance type.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The type of private resource pool generated after the capacity reservation service takes effect. Value range:Open: Open mode.Target: dedicated mode.Default value: Open
     */
    matchCriteria?: pulumi.Input<string>;
    /**
     * The payment type of the resource
     */
    paymentType?: pulumi.Input<string>;
    /**
     * platform of the capacity reservation, value range `windows`, `linux`.
     */
    platform?: pulumi.Input<string>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * time of the capacity reservation which become active.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The capacity is scheduled to take effect. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     */
    startTimeType?: pulumi.Input<string>;
    /**
     * The status of the capacity reservation.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * This parameter is under test and is not yet open for use.
     */
    timeSlot?: pulumi.Input<string>;
    /**
     * The ID of the zone in the region to which the capacity reservation service belongs. Currently, it is only supported to create a capacity reservation service in one zone.
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a CapacityReservation resource.
 */
export interface CapacityReservationArgs {
    /**
     * Capacity reservation service name.
     */
    capacityReservationName?: pulumi.Input<string>;
    /**
     * description of the capacity reservation instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether to pre-check the API request. Valid values: `true` and `false`.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * end time of the capacity reservation. the capacity reservation will be  released at the end time automatically if set. otherwise it will last until manually released
     */
    endTime?: pulumi.Input<string>;
    /**
     * Release mode of capacity reservation service. Value range:Limited: release at specified time. The EndTime parameter must be specified at the same time.Unlimited: manual release. No time limit.
     */
    endTimeType?: pulumi.Input<string>;
    /**
     * The total number of instances that need to be reserved within the capacity reservation.
     */
    instanceAmount: pulumi.Input<number>;
    /**
     * Instance type. Currently, you can only set the capacity reservation service for one instance type.
     */
    instanceType: pulumi.Input<string>;
    /**
     * The type of private resource pool generated after the capacity reservation service takes effect. Value range:Open: Open mode.Target: dedicated mode.Default value: Open
     */
    matchCriteria?: pulumi.Input<string>;
    /**
     * platform of the capacity reservation, value range `windows`, `linux`.
     */
    platform?: pulumi.Input<string>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The tag of the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The ID of the zone in the region to which the capacity reservation service belongs. Currently, it is only supported to create a capacity reservation service in one zone.
     */
    zoneIds: pulumi.Input<pulumi.Input<string>[]>;
}
