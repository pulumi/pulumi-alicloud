// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ECS Disk can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/ecsDisk:EcsDisk example <id>
 * ```
 */
export class EcsDisk extends pulumi.CustomResource {
    /**
     * Get an existing EcsDisk resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsDiskState, opts?: pulumi.CustomResourceOptions): EcsDisk {
        return new EcsDisk(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ecsDisk:EcsDisk';

    /**
     * Returns true if the given object is an instance of EcsDisk.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsDisk {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsDisk.__pulumiType;
    }

    declare public readonly advancedFeatures: pulumi.Output<string | undefined>;
    /**
     * Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
     *
     * @deprecated Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
     */
    declare public readonly availabilityZone: pulumi.Output<string>;
    /**
     * Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
     */
    declare public readonly burstingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
     */
    declare public readonly category: pulumi.Output<string | undefined>;
    /**
     * (Available since v1.237.0) The time when the disk was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
     */
    declare public readonly deleteAutoSnapshot: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to release the disk along with its associated instance. Default value: `false`.
     */
    declare public readonly deleteWithInstance: pulumi.Output<boolean>;
    /**
     * The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
     */
    declare public readonly diskName: pulumi.Output<string>;
    /**
     * Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
     */
    declare public readonly dryRun: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
     */
    declare public readonly enableAutoSnapshot: pulumi.Output<boolean>;
    declare public readonly encryptAlgorithm: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to encrypt the disk. Default value: `false`. Valid values:
     */
    declare public readonly encrypted: pulumi.Output<boolean>;
    /**
     * The ID of the instance to which the created subscription disk is automatically attached.
     * * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
     * * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
     */
    declare public readonly kmsKeyId: pulumi.Output<string>;
    /**
     * Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
     */
    declare public readonly multiAttach: pulumi.Output<string>;
    /**
     * Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     *
     * > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     *
     * @deprecated Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
     */
    declare public readonly paymentType: pulumi.Output<string>;
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Valid values:
     * - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
     * - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     */
    declare public readonly performanceLevel: pulumi.Output<string>;
    /**
     * The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
     */
    declare public readonly provisionedIops: pulumi.Output<number | undefined>;
    /**
     * (Available since v1.237.0) The ID of the region to which the disk belongs.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the resource group to which to add the disk.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The size of the disk. Unit: GiB. This parameter is required. Valid values:
     * - If `category` is set to `cloud`. Valid values: `5` to `2000`.
     * - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
     * - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
     * - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
     * - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
     * - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
     * - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
     * - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
     * - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
     * - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
     */
    declare public readonly size: pulumi.Output<number>;
    /**
     * The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
     */
    declare public readonly snapshotId: pulumi.Output<string>;
    /**
     * The status of the disk.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The ID of the storage set.
     */
    declare public readonly storageSetId: pulumi.Output<string | undefined>;
    /**
     * The number of partitions in the storage set.
     */
    declare public readonly storageSetPartitionNumber: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
     */
    declare public readonly type: pulumi.Output<string | undefined>;
    /**
     * ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a EcsDisk resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EcsDiskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsDiskArgs | EcsDiskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsDiskState | undefined;
            resourceInputs["advancedFeatures"] = state?.advancedFeatures;
            resourceInputs["availabilityZone"] = state?.availabilityZone;
            resourceInputs["burstingEnabled"] = state?.burstingEnabled;
            resourceInputs["category"] = state?.category;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["deleteAutoSnapshot"] = state?.deleteAutoSnapshot;
            resourceInputs["deleteWithInstance"] = state?.deleteWithInstance;
            resourceInputs["description"] = state?.description;
            resourceInputs["diskName"] = state?.diskName;
            resourceInputs["dryRun"] = state?.dryRun;
            resourceInputs["enableAutoSnapshot"] = state?.enableAutoSnapshot;
            resourceInputs["encryptAlgorithm"] = state?.encryptAlgorithm;
            resourceInputs["encrypted"] = state?.encrypted;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["multiAttach"] = state?.multiAttach;
            resourceInputs["name"] = state?.name;
            resourceInputs["paymentType"] = state?.paymentType;
            resourceInputs["performanceLevel"] = state?.performanceLevel;
            resourceInputs["provisionedIops"] = state?.provisionedIops;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["size"] = state?.size;
            resourceInputs["snapshotId"] = state?.snapshotId;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageSetId"] = state?.storageSetId;
            resourceInputs["storageSetPartitionNumber"] = state?.storageSetPartitionNumber;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["type"] = state?.type;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as EcsDiskArgs | undefined;
            resourceInputs["advancedFeatures"] = args?.advancedFeatures;
            resourceInputs["availabilityZone"] = args?.availabilityZone;
            resourceInputs["burstingEnabled"] = args?.burstingEnabled;
            resourceInputs["category"] = args?.category;
            resourceInputs["deleteAutoSnapshot"] = args?.deleteAutoSnapshot;
            resourceInputs["deleteWithInstance"] = args?.deleteWithInstance;
            resourceInputs["description"] = args?.description;
            resourceInputs["diskName"] = args?.diskName;
            resourceInputs["dryRun"] = args?.dryRun;
            resourceInputs["enableAutoSnapshot"] = args?.enableAutoSnapshot;
            resourceInputs["encryptAlgorithm"] = args?.encryptAlgorithm;
            resourceInputs["encrypted"] = args?.encrypted;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId;
            resourceInputs["multiAttach"] = args?.multiAttach;
            resourceInputs["name"] = args?.name;
            resourceInputs["paymentType"] = args?.paymentType;
            resourceInputs["performanceLevel"] = args?.performanceLevel;
            resourceInputs["provisionedIops"] = args?.provisionedIops;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["size"] = args?.size;
            resourceInputs["snapshotId"] = args?.snapshotId;
            resourceInputs["storageSetId"] = args?.storageSetId;
            resourceInputs["storageSetPartitionNumber"] = args?.storageSetPartitionNumber;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsDisk.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EcsDisk resources.
 */
export interface EcsDiskState {
    advancedFeatures?: pulumi.Input<string>;
    /**
     * Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
     *
     * @deprecated Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
     */
    burstingEnabled?: pulumi.Input<boolean>;
    /**
     * The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
     */
    category?: pulumi.Input<string>;
    /**
     * (Available since v1.237.0) The time when the disk was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
     */
    deleteAutoSnapshot?: pulumi.Input<boolean>;
    /**
     * Specifies whether to release the disk along with its associated instance. Default value: `false`.
     */
    deleteWithInstance?: pulumi.Input<boolean>;
    /**
     * The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
     */
    diskName?: pulumi.Input<string>;
    /**
     * Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
     */
    enableAutoSnapshot?: pulumi.Input<boolean>;
    encryptAlgorithm?: pulumi.Input<string>;
    /**
     * Specifies whether to encrypt the disk. Default value: `false`. Valid values:
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * The ID of the instance to which the created subscription disk is automatically attached.
     * * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
     * * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
     */
    multiAttach?: pulumi.Input<string>;
    /**
     * Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     *
     * > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     *
     * @deprecated Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Valid values:
     * - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
     * - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     */
    performanceLevel?: pulumi.Input<string>;
    /**
     * The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
     */
    provisionedIops?: pulumi.Input<number>;
    /**
     * (Available since v1.237.0) The ID of the region to which the disk belongs.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group to which to add the disk.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The size of the disk. Unit: GiB. This parameter is required. Valid values:
     * - If `category` is set to `cloud`. Valid values: `5` to `2000`.
     * - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
     * - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
     * - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
     * - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
     * - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
     * - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
     * - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
     * - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
     * - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
     */
    size?: pulumi.Input<number>;
    /**
     * The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The status of the disk.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the storage set.
     */
    storageSetId?: pulumi.Input<string>;
    /**
     * The number of partitions in the storage set.
     */
    storageSetPartitionNumber?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
     */
    type?: pulumi.Input<string>;
    /**
     * ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcsDisk resource.
 */
export interface EcsDiskArgs {
    advancedFeatures?: pulumi.Input<string>;
    /**
     * Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
     *
     * @deprecated Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
     */
    burstingEnabled?: pulumi.Input<boolean>;
    /**
     * The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
     */
    category?: pulumi.Input<string>;
    /**
     * Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
     */
    deleteAutoSnapshot?: pulumi.Input<boolean>;
    /**
     * Specifies whether to release the disk along with its associated instance. Default value: `false`.
     */
    deleteWithInstance?: pulumi.Input<boolean>;
    /**
     * The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
     */
    diskName?: pulumi.Input<string>;
    /**
     * Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
     */
    enableAutoSnapshot?: pulumi.Input<boolean>;
    encryptAlgorithm?: pulumi.Input<string>;
    /**
     * Specifies whether to encrypt the disk. Default value: `false`. Valid values:
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * The ID of the instance to which the created subscription disk is automatically attached.
     * * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
     * * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
     */
    multiAttach?: pulumi.Input<string>;
    /**
     * Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     *
     * > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     *
     * @deprecated Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Valid values:
     * - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
     * - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     */
    performanceLevel?: pulumi.Input<string>;
    /**
     * The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
     */
    provisionedIops?: pulumi.Input<number>;
    /**
     * The ID of the resource group to which to add the disk.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The size of the disk. Unit: GiB. This parameter is required. Valid values:
     * - If `category` is set to `cloud`. Valid values: `5` to `2000`.
     * - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
     * - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
     * - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
     * - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
     * - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
     * - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
     * - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
     * - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
     * - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
     */
    size?: pulumi.Input<number>;
    /**
     * The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The ID of the storage set.
     */
    storageSetId?: pulumi.Input<string>;
    /**
     * The number of partitions in the storage set.
     */
    storageSetPartitionNumber?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
     */
    type?: pulumi.Input<string>;
    /**
     * ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     */
    zoneId?: pulumi.Input<string>;
}
