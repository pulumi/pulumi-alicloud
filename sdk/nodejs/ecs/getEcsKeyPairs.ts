// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.121.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultEcsKeyPair = new alicloud.ecs.EcsKeyPair("default", {
 *     keyPairName: name,
 *     publicKey: "ssh-rsa AAAAB3Nza12345678qwertyuudsfsg",
 *     resourceGroupId: _default.then(_default => _default.ids?.[1]),
 *     tags: {
 *         Created: "TF",
 *         For: "KeyPair",
 *     },
 * });
 * const ids = alicloud.ecs.getEcsKeyPairsOutput({
 *     ids: [defaultEcsKeyPair.id],
 * });
 * export const ecsKeyPairId0 = ids.apply(ids => ids.pairs?.[0]?.id);
 * ```
 */
export function getEcsKeyPairs(args?: GetEcsKeyPairsArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsKeyPairsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", {
        "fingerPrint": args.fingerPrint,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getEcsKeyPairs.
 */
export interface GetEcsKeyPairsArgs {
    /**
     * The fingerprint of the key pair.
     */
    fingerPrint?: string;
    /**
     * A list of Key Pair IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter results by Key Pair name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: string;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEcsKeyPairs.
 */
export interface GetEcsKeyPairsResult {
    /**
     * The fingerprint of the Key Pair.
     */
    readonly fingerPrint?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    /**
     * (Deprecated since v1.121.0) A list of Ecs Key Pairs. Each element contains the following attributes:
     *
     * @deprecated Field `keyPairs` has been deprecated from provider version 1.121.0. New field `pairs` instead.
     */
    readonly keyPairs: outputs.ecs.GetEcsKeyPairsKeyPair[];
    readonly nameRegex?: string;
    /**
     * A list of Key Pair names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * A list of Ecs Key Pairs. Each element contains the following attributes:
     */
    readonly pairs: outputs.ecs.GetEcsKeyPairsPair[];
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * The tags of the Key Pair.
     */
    readonly tags?: {[key: string]: string};
}
/**
 * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available since v1.121.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultEcsKeyPair = new alicloud.ecs.EcsKeyPair("default", {
 *     keyPairName: name,
 *     publicKey: "ssh-rsa AAAAB3Nza12345678qwertyuudsfsg",
 *     resourceGroupId: _default.then(_default => _default.ids?.[1]),
 *     tags: {
 *         Created: "TF",
 *         For: "KeyPair",
 *     },
 * });
 * const ids = alicloud.ecs.getEcsKeyPairsOutput({
 *     ids: [defaultEcsKeyPair.id],
 * });
 * export const ecsKeyPairId0 = ids.apply(ids => ids.pairs?.[0]?.id);
 * ```
 */
export function getEcsKeyPairsOutput(args?: GetEcsKeyPairsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEcsKeyPairsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", {
        "fingerPrint": args.fingerPrint,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getEcsKeyPairs.
 */
export interface GetEcsKeyPairsOutputArgs {
    /**
     * The fingerprint of the key pair.
     */
    fingerPrint?: pulumi.Input<string>;
    /**
     * A list of Key Pair IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter results by Key Pair name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
