// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Cloud disk can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ecs/disk:Disk example d-abc12345678
 * ```
 */
export class Disk extends pulumi.CustomResource {
    /**
     * Get an existing Disk resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiskState, opts?: pulumi.CustomResourceOptions): Disk {
        return new Disk(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/disk:Disk';

    /**
     * Returns true if the given object is an instance of Disk.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Disk {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Disk.__pulumiType;
    }

    public readonly advancedFeatures!: pulumi.Output<string | undefined>;
    /**
     * The Zone to create the disk in.
     *
     * @deprecated Field 'availability_zone' has been deprecated from provider version 1.122.0. New field 'zone_id' instead
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * Category of the disk. Valid values are `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`. Default is `cloudEfficiency`.
     */
    public readonly category!: pulumi.Output<string | undefined>;
    public readonly dedicatedBlockStorageClusterId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the automatic snapshot is deleted when the disk is released. Default value: false.
     */
    public readonly deleteAutoSnapshot!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether the disk is released together with the instance: Default value: false.
     */
    public readonly deleteWithInstance!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the disk. This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Default value is null.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly diskName!: pulumi.Output<string>;
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether to apply a created automatic snapshot policy to the disk. Default value: false.
     */
    public readonly enableAutoSnapshot!: pulumi.Output<boolean | undefined>;
    public readonly encryptAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * If true, the disk will be encrypted, conflict with `snapshotId`.
     */
    public readonly encrypted!: pulumi.Output<boolean | undefined>;
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The ID of the KMS key corresponding to the data disk, The specified parameter `Encrypted` must be `true` when KmsKeyId is not empty.
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * Name of the ECS disk. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Default value is null.
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.122.0. New field 'disk_name' instead.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Default value: `PL1`. Valid values:                                                       
     * * `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * * `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * * `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     */
    public readonly performanceLevel!: pulumi.Output<string>;
    /**
     * The Id of resource group which the disk belongs.
     * > **NOTE:** Disk category `cloud` has been outdated and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     */
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * The size of the disk in GiBs. When resize the disk, the new size must be greater than the former value, or you would get an error `InvalidDiskSize.TooSmall`.
     */
    public readonly size!: pulumi.Output<number | undefined>;
    /**
     * A snapshot to base the disk off of. If the disk size required by snapshot is greater than `size`, the `size` will be ignored, conflict with `encrypted`.
     */
    public readonly snapshotId!: pulumi.Output<string | undefined>;
    /**
     * The disk status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly storageSetId!: pulumi.Output<string | undefined>;
    public readonly storageSetPartitionNumber!: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly type!: pulumi.Output<string | undefined>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a Disk resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DiskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiskArgs | DiskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiskState | undefined;
            resourceInputs["advancedFeatures"] = state ? state.advancedFeatures : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["dedicatedBlockStorageClusterId"] = state ? state.dedicatedBlockStorageClusterId : undefined;
            resourceInputs["deleteAutoSnapshot"] = state ? state.deleteAutoSnapshot : undefined;
            resourceInputs["deleteWithInstance"] = state ? state.deleteWithInstance : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskName"] = state ? state.diskName : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["enableAutoSnapshot"] = state ? state.enableAutoSnapshot : undefined;
            resourceInputs["encryptAlgorithm"] = state ? state.encryptAlgorithm : undefined;
            resourceInputs["encrypted"] = state ? state.encrypted : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["performanceLevel"] = state ? state.performanceLevel : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageSetId"] = state ? state.storageSetId : undefined;
            resourceInputs["storageSetPartitionNumber"] = state ? state.storageSetPartitionNumber : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as DiskArgs | undefined;
            resourceInputs["advancedFeatures"] = args ? args.advancedFeatures : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["dedicatedBlockStorageClusterId"] = args ? args.dedicatedBlockStorageClusterId : undefined;
            resourceInputs["deleteAutoSnapshot"] = args ? args.deleteAutoSnapshot : undefined;
            resourceInputs["deleteWithInstance"] = args ? args.deleteWithInstance : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diskName"] = args ? args.diskName : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["enableAutoSnapshot"] = args ? args.enableAutoSnapshot : undefined;
            resourceInputs["encryptAlgorithm"] = args ? args.encryptAlgorithm : undefined;
            resourceInputs["encrypted"] = args ? args.encrypted : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["performanceLevel"] = args ? args.performanceLevel : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["storageSetId"] = args ? args.storageSetId : undefined;
            resourceInputs["storageSetPartitionNumber"] = args ? args.storageSetPartitionNumber : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Disk.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Disk resources.
 */
export interface DiskState {
    advancedFeatures?: pulumi.Input<string>;
    /**
     * The Zone to create the disk in.
     *
     * @deprecated Field 'availability_zone' has been deprecated from provider version 1.122.0. New field 'zone_id' instead
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Category of the disk. Valid values are `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`. Default is `cloudEfficiency`.
     */
    category?: pulumi.Input<string>;
    dedicatedBlockStorageClusterId?: pulumi.Input<string>;
    /**
     * Indicates whether the automatic snapshot is deleted when the disk is released. Default value: false.
     */
    deleteAutoSnapshot?: pulumi.Input<boolean>;
    /**
     * Indicates whether the disk is released together with the instance: Default value: false.
     */
    deleteWithInstance?: pulumi.Input<boolean>;
    /**
     * Description of the disk. This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Default value is null.
     */
    description?: pulumi.Input<string>;
    diskName?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    /**
     * Indicates whether to apply a created automatic snapshot policy to the disk. Default value: false.
     */
    enableAutoSnapshot?: pulumi.Input<boolean>;
    encryptAlgorithm?: pulumi.Input<string>;
    /**
     * If true, the disk will be encrypted, conflict with `snapshotId`.
     */
    encrypted?: pulumi.Input<boolean>;
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the KMS key corresponding to the data disk, The specified parameter `Encrypted` must be `true` when KmsKeyId is not empty.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the ECS disk. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Default value is null.
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.122.0. New field 'disk_name' instead.
     */
    name?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Default value: `PL1`. Valid values:                                                       
     * * `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * * `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * * `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     */
    performanceLevel?: pulumi.Input<string>;
    /**
     * The Id of resource group which the disk belongs.
     * > **NOTE:** Disk category `cloud` has been outdated and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The size of the disk in GiBs. When resize the disk, the new size must be greater than the former value, or you would get an error `InvalidDiskSize.TooSmall`.
     */
    size?: pulumi.Input<number>;
    /**
     * A snapshot to base the disk off of. If the disk size required by snapshot is greater than `size`, the `size` will be ignored, conflict with `encrypted`.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The disk status.
     */
    status?: pulumi.Input<string>;
    storageSetId?: pulumi.Input<string>;
    storageSetPartitionNumber?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    type?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Disk resource.
 */
export interface DiskArgs {
    advancedFeatures?: pulumi.Input<string>;
    /**
     * The Zone to create the disk in.
     *
     * @deprecated Field 'availability_zone' has been deprecated from provider version 1.122.0. New field 'zone_id' instead
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Category of the disk. Valid values are `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`. Default is `cloudEfficiency`.
     */
    category?: pulumi.Input<string>;
    dedicatedBlockStorageClusterId?: pulumi.Input<string>;
    /**
     * Indicates whether the automatic snapshot is deleted when the disk is released. Default value: false.
     */
    deleteAutoSnapshot?: pulumi.Input<boolean>;
    /**
     * Indicates whether the disk is released together with the instance: Default value: false.
     */
    deleteWithInstance?: pulumi.Input<boolean>;
    /**
     * Description of the disk. This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Default value is null.
     */
    description?: pulumi.Input<string>;
    diskName?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    /**
     * Indicates whether to apply a created automatic snapshot policy to the disk. Default value: false.
     */
    enableAutoSnapshot?: pulumi.Input<boolean>;
    encryptAlgorithm?: pulumi.Input<string>;
    /**
     * If true, the disk will be encrypted, conflict with `snapshotId`.
     */
    encrypted?: pulumi.Input<boolean>;
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the KMS key corresponding to the data disk, The specified parameter `Encrypted` must be `true` when KmsKeyId is not empty.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the ECS disk. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Default value is null.
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.122.0. New field 'disk_name' instead.
     */
    name?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Default value: `PL1`. Valid values:                                                       
     * * `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * * `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * * `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     */
    performanceLevel?: pulumi.Input<string>;
    /**
     * The Id of resource group which the disk belongs.
     * > **NOTE:** Disk category `cloud` has been outdated and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The size of the disk in GiBs. When resize the disk, the new size must be greater than the former value, or you would get an error `InvalidDiskSize.TooSmall`.
     */
    size?: pulumi.Input<number>;
    /**
     * A snapshot to base the disk off of. If the disk size required by snapshot is greater than `size`, the `size` will be ignored, conflict with `encrypted`.
     */
    snapshotId?: pulumi.Input<string>;
    storageSetId?: pulumi.Input<string>;
    storageSetPartitionNumber?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    type?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
