// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Key Pair Attachment resource.
 *
 * For information about ECS Key Pair Attachment and how to use it, see [What is Key Pair Attachment](https://www.alibabacloud.com/help/en/doc-detail/51775.htm).
 *
 * > **NOTE:** Available in v1.121.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = new alicloud.ecs.EcsKeyPairAttachment("example", {
 *     keyPairName: "key_pair_name",
 *     instanceIds: [i_gw80pxxxxxxxxxx],
 * });
 * ```
 *
 * ## Import
 *
 * ECS Key Pair Attachment can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ecs/ecsKeyPairAttachment:EcsKeyPairAttachment example <key_pair_name>:<instance_ids>
 * ```
 */
export class EcsKeyPairAttachment extends pulumi.CustomResource {
    /**
     * Get an existing EcsKeyPairAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsKeyPairAttachmentState, opts?: pulumi.CustomResourceOptions): EcsKeyPairAttachment {
        return new EcsKeyPairAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ecsKeyPairAttachment:EcsKeyPairAttachment';

    /**
     * Returns true if the given object is an instance of EcsKeyPairAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsKeyPairAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsKeyPairAttachment.__pulumiType;
    }

    /**
     * Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
     */
    public readonly force!: pulumi.Output<boolean | undefined>;
    /**
     * The list of ECS instance's IDs.
     */
    public readonly instanceIds!: pulumi.Output<string[]>;
    /**
     * @deprecated Field 'key_name' has been deprecated from provider version 1.121.0. New field 'key_pair_name' instead.
     */
    public readonly keyName!: pulumi.Output<string>;
    /**
     * The name of key pair used to bind.
     */
    public readonly keyPairName!: pulumi.Output<string>;

    /**
     * Create a EcsKeyPairAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcsKeyPairAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsKeyPairAttachmentArgs | EcsKeyPairAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsKeyPairAttachmentState | undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
        } else {
            const args = argsOrState as EcsKeyPairAttachmentArgs | undefined;
            if ((!args || args.instanceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceIds'");
            }
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsKeyPairAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EcsKeyPairAttachment resources.
 */
export interface EcsKeyPairAttachmentState {
    /**
     * Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
     */
    force?: pulumi.Input<boolean>;
    /**
     * The list of ECS instance's IDs.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Field 'key_name' has been deprecated from provider version 1.121.0. New field 'key_pair_name' instead.
     */
    keyName?: pulumi.Input<string>;
    /**
     * The name of key pair used to bind.
     */
    keyPairName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcsKeyPairAttachment resource.
 */
export interface EcsKeyPairAttachmentArgs {
    /**
     * Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
     */
    force?: pulumi.Input<boolean>;
    /**
     * The list of ECS instance's IDs.
     */
    instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Field 'key_name' has been deprecated from provider version 1.121.0. New field 'key_pair_name' instead.
     */
    keyName?: pulumi.Input<string>;
    /**
     * The name of key pair used to bind.
     */
    keyPairName?: pulumi.Input<string>;
}
