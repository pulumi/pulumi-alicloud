// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * // Filter security groups and print the results into a file
 * const secGroupsDs = pulumi.output(alicloud.ecs.getSecurityGroups({
 *     nameRegex: "^web-",
 *     outputFile: "web_access.json",
 * }, { async: true }));
 * // In conjunction with a VPC
 * const primaryVpcDs = new alicloud.vpc.Network("primary_vpc_ds", {});
 * const primarySecGroupsDs = primaryVpcDs.id.apply(id => alicloud.ecs.getSecurityGroups({
 *     vpcId: id,
 * }, { async: true }));
 *
 * export const firstGroupId = primarySecGroupsDs.groups[0].id;
 * ```
 */
export function getSecurityGroups(args?: GetSecurityGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityGroupsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("alicloud:ecs/getSecurityGroups:getSecurityGroups", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityGroups.
 */
export interface GetSecurityGroupsArgs {
    /**
     * A list of Security Group IDs.
     */
    readonly ids?: string[];
    /**
     * A regex string to filter the resulting security groups by their names.
     */
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The Id of resource group which the securityGroup belongs.
     */
    readonly resourceGroupId?: string;
    /**
     * A map of tags assigned to the ECS instances. It must be in the format:
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * import * as alicloud from "@pulumi/alicloud";
     *
     * const taggedSecurityGroups = pulumi.output(alicloud.ecs.getSecurityGroups({
     *     tags: {
     *         tagKey1: "tagValue1",
     *         tagKey2: "tagValue2",
     *     },
     * }, { async: true }));
     * ```
     */
    readonly tags?: {[key: string]: any};
    /**
     * Used to retrieve security groups that belong to the specified VPC ID.
     */
    readonly vpcId?: string;
}

/**
 * A collection of values returned by getSecurityGroups.
 */
export interface GetSecurityGroupsResult {
    /**
     * A list of Security Groups. Each element contains the following attributes:
     */
    readonly groups: outputs.ecs.GetSecurityGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Security Group IDs.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of Security Group names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * The Id of resource group which the securityGroup belongs.
     */
    readonly resourceGroupId?: string;
    /**
     * A map of tags assigned to the ECS instance.
     */
    readonly tags?: {[key: string]: any};
    /**
     * The ID of the VPC that owns the security group.
     */
    readonly vpcId?: string;
}
