// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Image Component resource.
 *
 * For information about ECS Image Component and how to use it, see [What is Image Component](https://www.alibabacloud.com/help/en/doc-detail/200424.htm).
 *
 * > **NOTE:** Available since v1.159.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const default = alicloud.resourcemanager.getResourceGroups({
 *     nameRegex: "default",
 * });
 * const example = new alicloud.ecs.EcsImageComponent("example", {
 *     componentType: "Build",
 *     content: "RUN yum update -y",
 *     description: "example_value",
 *     imageComponentName: "example_value",
 *     resourceGroupId: _default.then(_default => _default.groups?.[0]?.id),
 *     systemType: "Linux",
 *     tags: {
 *         Created: "TF",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ECS Image Component can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/ecsImageComponent:EcsImageComponent example <id>
 * ```
 */
export class EcsImageComponent extends pulumi.CustomResource {
    /**
     * Get an existing EcsImageComponent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsImageComponentState, opts?: pulumi.CustomResourceOptions): EcsImageComponent {
        return new EcsImageComponent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ecsImageComponent:EcsImageComponent';

    /**
     * Returns true if the given object is an instance of EcsImageComponent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsImageComponent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsImageComponent.__pulumiType;
    }

    /**
     * The component type. Supports mirrored build components and test components.
     *
     * Value range:
     * - Build
     * - Test
     *
     * Default value: Build.
     *
     * > **NOTE:**  Build components can only be used in build templates and test components can only be used in test templates.
     */
    public readonly componentType!: pulumi.Output<string>;
    /**
     * The component version number, which is used in conjunction with the component name, is in the format of major.minor.patch and is a non-negative integer.
     *
     * Default value:(x +1).0.0, where x is the maximum major version of the current component.
     */
    public readonly componentVersion!: pulumi.Output<string>;
    /**
     * Component content. Consists of multiple commands. The maximum number of commands cannot exceed 127. Details of supported commands and command formats,
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * Component creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The component name. It must be 2 to 128 characters in length and start with an uppercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-length colons (:), underscores (_), half-length periods (.), or dashes (-).
     *
     * > **NOTE:**  When 'Name' is not set, the 'ImageComponentId' return value is used by default.
     */
    public readonly imageComponentName!: pulumi.Output<string>;
    /**
     * The ID of the enterprise resource group to which the created image component belongs.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The operating system supported by the component.
     *
     * Value range:
     * - Linux
     * - Windows
     *
     * Default value: Linux.
     */
    public readonly systemType!: pulumi.Output<string>;
    /**
     * List of label key-value pairs.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a EcsImageComponent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcsImageComponentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsImageComponentArgs | EcsImageComponentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsImageComponentState | undefined;
            resourceInputs["componentType"] = state ? state.componentType : undefined;
            resourceInputs["componentVersion"] = state ? state.componentVersion : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["imageComponentName"] = state ? state.imageComponentName : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["systemType"] = state ? state.systemType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as EcsImageComponentArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            resourceInputs["componentType"] = args ? args.componentType : undefined;
            resourceInputs["componentVersion"] = args ? args.componentVersion : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["imageComponentName"] = args ? args.imageComponentName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["systemType"] = args ? args.systemType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsImageComponent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EcsImageComponent resources.
 */
export interface EcsImageComponentState {
    /**
     * The component type. Supports mirrored build components and test components.
     *
     * Value range:
     * - Build
     * - Test
     *
     * Default value: Build.
     *
     * > **NOTE:**  Build components can only be used in build templates and test components can only be used in test templates.
     */
    componentType?: pulumi.Input<string>;
    /**
     * The component version number, which is used in conjunction with the component name, is in the format of major.minor.patch and is a non-negative integer.
     *
     * Default value:(x +1).0.0, where x is the maximum major version of the current component.
     */
    componentVersion?: pulumi.Input<string>;
    /**
     * Component content. Consists of multiple commands. The maximum number of commands cannot exceed 127. Details of supported commands and command formats,
     */
    content?: pulumi.Input<string>;
    /**
     * Component creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * The component name. It must be 2 to 128 characters in length and start with an uppercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-length colons (:), underscores (_), half-length periods (.), or dashes (-).
     *
     * > **NOTE:**  When 'Name' is not set, the 'ImageComponentId' return value is used by default.
     */
    imageComponentName?: pulumi.Input<string>;
    /**
     * The ID of the enterprise resource group to which the created image component belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The operating system supported by the component.
     *
     * Value range:
     * - Linux
     * - Windows
     *
     * Default value: Linux.
     */
    systemType?: pulumi.Input<string>;
    /**
     * List of label key-value pairs.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a EcsImageComponent resource.
 */
export interface EcsImageComponentArgs {
    /**
     * The component type. Supports mirrored build components and test components.
     *
     * Value range:
     * - Build
     * - Test
     *
     * Default value: Build.
     *
     * > **NOTE:**  Build components can only be used in build templates and test components can only be used in test templates.
     */
    componentType?: pulumi.Input<string>;
    /**
     * The component version number, which is used in conjunction with the component name, is in the format of major.minor.patch and is a non-negative integer.
     *
     * Default value:(x +1).0.0, where x is the maximum major version of the current component.
     */
    componentVersion?: pulumi.Input<string>;
    /**
     * Component content. Consists of multiple commands. The maximum number of commands cannot exceed 127. Details of supported commands and command formats,
     */
    content: pulumi.Input<string>;
    /**
     * Description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     */
    description?: pulumi.Input<string>;
    /**
     * The component name. It must be 2 to 128 characters in length and start with an uppercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-length colons (:), underscores (_), half-length periods (.), or dashes (-).
     *
     * > **NOTE:**  When 'Name' is not set, the 'ImageComponentId' return value is used by default.
     */
    imageComponentName?: pulumi.Input<string>;
    /**
     * The ID of the enterprise resource group to which the created image component belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The operating system supported by the component.
     *
     * Value range:
     * - Linux
     * - Windows
     *
     * Default value: Linux.
     */
    systemType?: pulumi.Input<string>;
    /**
     * List of label key-value pairs.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
