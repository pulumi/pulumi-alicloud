// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Network Interface resource.
 *
 * For information about ECS Network Interface and how to use it, see [What is Network Interface](https://www.alibabacloud.com/help/en/doc-detail/58504.htm).
 *
 * > **NOTE:** Available since v1.123.1.
 *
 * > **NOTE** Only one of `privateIpAddresses` or `secondaryPrivateIpAddressCount` can be specified when assign private IPs.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "192.168.0.0/24",
 * });
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: name,
 *     cidrBlock: "192.168.0.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultGetResourceGroups = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultEcsNetworkInterface = new alicloud.ecs.EcsNetworkInterface("default", {
 *     networkInterfaceName: name,
 *     vswitchId: defaultSwitch.id,
 *     securityGroupIds: [defaultSecurityGroup.id],
 *     description: "Basic test",
 *     primaryIpAddress: "192.168.0.2",
 *     tags: {
 *         Created: "TF",
 *         For: "Test",
 *     },
 *     resourceGroupId: defaultGetResourceGroups.then(defaultGetResourceGroups => defaultGetResourceGroups.ids?.[0]),
 * });
 * ```
 *
 * ## Import
 *
 * ECS Network Interface can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/ecsNetworkInterface:EcsNetworkInterface example eni-abcd12345
 * ```
 */
export class EcsNetworkInterface extends pulumi.CustomResource {
    /**
     * Get an existing EcsNetworkInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsNetworkInterfaceState, opts?: pulumi.CustomResourceOptions): EcsNetworkInterface {
        return new EcsNetworkInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ecsNetworkInterface:EcsNetworkInterface';

    /**
     * Returns true if the given object is an instance of EcsNetworkInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsNetworkInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsNetworkInterface.__pulumiType;
    }

    /**
     * The description of the ENI. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The type of the ENI. Default value: `Secondary`. Valid values: `Secondary`, `Trunk`.
     */
    declare public readonly instanceType: pulumi.Output<string>;
    /**
     * The number of IPv4 prefixes that can be automatically created by ECS. Valid values: 1 to 10. **NOTE:** You cannot specify both the `ipv4Prefixes` and `ipv4PrefixCount` parameters.
     */
    declare public readonly ipv4PrefixCount: pulumi.Output<number>;
    /**
     * A list of IPv4 prefixes to be assigned to the ENI. Support up to 10.
     */
    declare public readonly ipv4Prefixes: pulumi.Output<string[]>;
    /**
     * The number of IPv6 addresses to randomly generate for the primary ENI. Valid values: 1 to 10. **NOTE:** You cannot specify both the `ipv6Addresses` and `ipv6AddressCount` parameters.
     */
    declare public readonly ipv6AddressCount: pulumi.Output<number>;
    /**
     * A list of IPv6 address to be assigned to the primary ENI. Support up to 10.
     */
    declare public readonly ipv6Addresses: pulumi.Output<string[]>;
    /**
     * The MAC address of the ENI.
     */
    declare public /*out*/ readonly mac: pulumi.Output<string>;
    /**
     * Field `name` has been deprecated from provider version 1.123.1. New field `networkInterfaceName` instead
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.123.1. New field 'network_interface_name' instead
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the ENI. The name must be 2 to 128 characters in length, and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with http:// or https://.
     */
    declare public readonly networkInterfaceName: pulumi.Output<string>;
    /**
     * The communication mode of the ENI. Default value: `Standard`. Valid values: `Standard`, `HighPerformance`.
     */
    declare public readonly networkInterfaceTrafficMode: pulumi.Output<string>;
    /**
     * The primary private IP address of the ENI. The specified IP address must be available within the CIDR block of the VSwitch. If this parameter is not specified, an available IP address is assigned from the VSwitch CIDR block at random.
     */
    declare public readonly primaryIpAddress: pulumi.Output<string>;
    /**
     * Field `privateIp` has been deprecated from provider version 1.123.1. New field `primaryIpAddress` instead
     *
     * @deprecated Field 'private_ip' has been deprecated from provider version 1.123.1. New field 'primary_ip_address' instead
     */
    declare public readonly privateIp: pulumi.Output<string>;
    /**
     * Specifies secondary private IP address N of the ENI. This IP address must be an available IP address within the CIDR block of the VSwitch to which the ENI belongs.
     */
    declare public readonly privateIpAddresses: pulumi.Output<string[]>;
    /**
     * Field `privateIps` has been deprecated from provider version 1.123.1. New field `privateIpAddresses` instead
     *
     * @deprecated Field 'private_ips' has been deprecated from provider version 1.123.1. New field 'private_ip_addresses' instead
     */
    declare public readonly privateIps: pulumi.Output<string[]>;
    /**
     * Field `privateIpsCount` has been deprecated from provider version 1.123.1. New field `secondaryPrivateIpAddressCount` instead
     *
     * @deprecated Field 'private_ips_count' has been deprecated from provider version 1.123.1. New field 'secondary_private_ip_address_count' instead
     */
    declare public readonly privateIpsCount: pulumi.Output<number>;
    /**
     * The queue number of the ENI.
     */
    declare public readonly queueNumber: pulumi.Output<number>;
    /**
     * The resource group id.
     */
    declare public readonly resourceGroupId: pulumi.Output<string | undefined>;
    /**
     * The number of private IP addresses that can be automatically created by ECS.
     */
    declare public readonly secondaryPrivateIpAddressCount: pulumi.Output<number>;
    /**
     * The ID of security group N. The security groups and the ENI must belong to the same VPC. The valid values of N are based on the maximum number of security groups to which an ENI can be added. **NOTE:** Either `securityGroupIds` or `securityGroups` must be set with valid security group IDs.
     */
    declare public readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * Field `securityGroups` has been deprecated from provider version 1.123.1. New field `securityGroupIds` instead. **NOTE:** Either `securityGroupIds` or `securityGroups` must be set with valid security group IDs.
     *
     * @deprecated Field 'security_groups' has been deprecated from provider version 1.123.1. New field 'security_group_ids' instead
     */
    declare public readonly securityGroups: pulumi.Output<string[]>;
    /**
     * Indicates whether the source and destination IP address check feature is enabled. To improve network security, enable this feature. Default value: `false`. Valid values: `true`, `false`.
     */
    declare public readonly sourceDestCheck: pulumi.Output<boolean | undefined>;
    /**
     * The status of the ENI.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the VSwitch in the specified VPC. The private IP addresses assigned to the ENI must be available IP addresses within the CIDR block of the VSwitch.
     */
    declare public readonly vswitchId: pulumi.Output<string>;

    /**
     * Create a EcsNetworkInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcsNetworkInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsNetworkInterfaceArgs | EcsNetworkInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsNetworkInterfaceState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["instanceType"] = state?.instanceType;
            resourceInputs["ipv4PrefixCount"] = state?.ipv4PrefixCount;
            resourceInputs["ipv4Prefixes"] = state?.ipv4Prefixes;
            resourceInputs["ipv6AddressCount"] = state?.ipv6AddressCount;
            resourceInputs["ipv6Addresses"] = state?.ipv6Addresses;
            resourceInputs["mac"] = state?.mac;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkInterfaceName"] = state?.networkInterfaceName;
            resourceInputs["networkInterfaceTrafficMode"] = state?.networkInterfaceTrafficMode;
            resourceInputs["primaryIpAddress"] = state?.primaryIpAddress;
            resourceInputs["privateIp"] = state?.privateIp;
            resourceInputs["privateIpAddresses"] = state?.privateIpAddresses;
            resourceInputs["privateIps"] = state?.privateIps;
            resourceInputs["privateIpsCount"] = state?.privateIpsCount;
            resourceInputs["queueNumber"] = state?.queueNumber;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["secondaryPrivateIpAddressCount"] = state?.secondaryPrivateIpAddressCount;
            resourceInputs["securityGroupIds"] = state?.securityGroupIds;
            resourceInputs["securityGroups"] = state?.securityGroups;
            resourceInputs["sourceDestCheck"] = state?.sourceDestCheck;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vswitchId"] = state?.vswitchId;
        } else {
            const args = argsOrState as EcsNetworkInterfaceArgs | undefined;
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["instanceType"] = args?.instanceType;
            resourceInputs["ipv4PrefixCount"] = args?.ipv4PrefixCount;
            resourceInputs["ipv4Prefixes"] = args?.ipv4Prefixes;
            resourceInputs["ipv6AddressCount"] = args?.ipv6AddressCount;
            resourceInputs["ipv6Addresses"] = args?.ipv6Addresses;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkInterfaceName"] = args?.networkInterfaceName;
            resourceInputs["networkInterfaceTrafficMode"] = args?.networkInterfaceTrafficMode;
            resourceInputs["primaryIpAddress"] = args?.primaryIpAddress;
            resourceInputs["privateIp"] = args?.privateIp;
            resourceInputs["privateIpAddresses"] = args?.privateIpAddresses;
            resourceInputs["privateIps"] = args?.privateIps;
            resourceInputs["privateIpsCount"] = args?.privateIpsCount;
            resourceInputs["queueNumber"] = args?.queueNumber;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["secondaryPrivateIpAddressCount"] = args?.secondaryPrivateIpAddressCount;
            resourceInputs["securityGroupIds"] = args?.securityGroupIds;
            resourceInputs["securityGroups"] = args?.securityGroups;
            resourceInputs["sourceDestCheck"] = args?.sourceDestCheck;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["mac"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsNetworkInterface.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EcsNetworkInterface resources.
 */
export interface EcsNetworkInterfaceState {
    /**
     * The description of the ENI. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of the ENI. Default value: `Secondary`. Valid values: `Secondary`, `Trunk`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The number of IPv4 prefixes that can be automatically created by ECS. Valid values: 1 to 10. **NOTE:** You cannot specify both the `ipv4Prefixes` and `ipv4PrefixCount` parameters.
     */
    ipv4PrefixCount?: pulumi.Input<number>;
    /**
     * A list of IPv4 prefixes to be assigned to the ENI. Support up to 10.
     */
    ipv4Prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of IPv6 addresses to randomly generate for the primary ENI. Valid values: 1 to 10. **NOTE:** You cannot specify both the `ipv6Addresses` and `ipv6AddressCount` parameters.
     */
    ipv6AddressCount?: pulumi.Input<number>;
    /**
     * A list of IPv6 address to be assigned to the primary ENI. Support up to 10.
     */
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The MAC address of the ENI.
     */
    mac?: pulumi.Input<string>;
    /**
     * Field `name` has been deprecated from provider version 1.123.1. New field `networkInterfaceName` instead
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.123.1. New field 'network_interface_name' instead
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the ENI. The name must be 2 to 128 characters in length, and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with http:// or https://.
     */
    networkInterfaceName?: pulumi.Input<string>;
    /**
     * The communication mode of the ENI. Default value: `Standard`. Valid values: `Standard`, `HighPerformance`.
     */
    networkInterfaceTrafficMode?: pulumi.Input<string>;
    /**
     * The primary private IP address of the ENI. The specified IP address must be available within the CIDR block of the VSwitch. If this parameter is not specified, an available IP address is assigned from the VSwitch CIDR block at random.
     */
    primaryIpAddress?: pulumi.Input<string>;
    /**
     * Field `privateIp` has been deprecated from provider version 1.123.1. New field `primaryIpAddress` instead
     *
     * @deprecated Field 'private_ip' has been deprecated from provider version 1.123.1. New field 'primary_ip_address' instead
     */
    privateIp?: pulumi.Input<string>;
    /**
     * Specifies secondary private IP address N of the ENI. This IP address must be an available IP address within the CIDR block of the VSwitch to which the ENI belongs.
     */
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `privateIps` has been deprecated from provider version 1.123.1. New field `privateIpAddresses` instead
     *
     * @deprecated Field 'private_ips' has been deprecated from provider version 1.123.1. New field 'private_ip_addresses' instead
     */
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `privateIpsCount` has been deprecated from provider version 1.123.1. New field `secondaryPrivateIpAddressCount` instead
     *
     * @deprecated Field 'private_ips_count' has been deprecated from provider version 1.123.1. New field 'secondary_private_ip_address_count' instead
     */
    privateIpsCount?: pulumi.Input<number>;
    /**
     * The queue number of the ENI.
     */
    queueNumber?: pulumi.Input<number>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The number of private IP addresses that can be automatically created by ECS.
     */
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    /**
     * The ID of security group N. The security groups and the ENI must belong to the same VPC. The valid values of N are based on the maximum number of security groups to which an ENI can be added. **NOTE:** Either `securityGroupIds` or `securityGroups` must be set with valid security group IDs.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `securityGroups` has been deprecated from provider version 1.123.1. New field `securityGroupIds` instead. **NOTE:** Either `securityGroupIds` or `securityGroups` must be set with valid security group IDs.
     *
     * @deprecated Field 'security_groups' has been deprecated from provider version 1.123.1. New field 'security_group_ids' instead
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the source and destination IP address check feature is enabled. To improve network security, enable this feature. Default value: `false`. Valid values: `true`, `false`.
     */
    sourceDestCheck?: pulumi.Input<boolean>;
    /**
     * The status of the ENI.
     */
    status?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VSwitch in the specified VPC. The private IP addresses assigned to the ENI must be available IP addresses within the CIDR block of the VSwitch.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcsNetworkInterface resource.
 */
export interface EcsNetworkInterfaceArgs {
    /**
     * The description of the ENI. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of the ENI. Default value: `Secondary`. Valid values: `Secondary`, `Trunk`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The number of IPv4 prefixes that can be automatically created by ECS. Valid values: 1 to 10. **NOTE:** You cannot specify both the `ipv4Prefixes` and `ipv4PrefixCount` parameters.
     */
    ipv4PrefixCount?: pulumi.Input<number>;
    /**
     * A list of IPv4 prefixes to be assigned to the ENI. Support up to 10.
     */
    ipv4Prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of IPv6 addresses to randomly generate for the primary ENI. Valid values: 1 to 10. **NOTE:** You cannot specify both the `ipv6Addresses` and `ipv6AddressCount` parameters.
     */
    ipv6AddressCount?: pulumi.Input<number>;
    /**
     * A list of IPv6 address to be assigned to the primary ENI. Support up to 10.
     */
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `name` has been deprecated from provider version 1.123.1. New field `networkInterfaceName` instead
     *
     * @deprecated Field 'name' has been deprecated from provider version 1.123.1. New field 'network_interface_name' instead
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the ENI. The name must be 2 to 128 characters in length, and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with http:// or https://.
     */
    networkInterfaceName?: pulumi.Input<string>;
    /**
     * The communication mode of the ENI. Default value: `Standard`. Valid values: `Standard`, `HighPerformance`.
     */
    networkInterfaceTrafficMode?: pulumi.Input<string>;
    /**
     * The primary private IP address of the ENI. The specified IP address must be available within the CIDR block of the VSwitch. If this parameter is not specified, an available IP address is assigned from the VSwitch CIDR block at random.
     */
    primaryIpAddress?: pulumi.Input<string>;
    /**
     * Field `privateIp` has been deprecated from provider version 1.123.1. New field `primaryIpAddress` instead
     *
     * @deprecated Field 'private_ip' has been deprecated from provider version 1.123.1. New field 'primary_ip_address' instead
     */
    privateIp?: pulumi.Input<string>;
    /**
     * Specifies secondary private IP address N of the ENI. This IP address must be an available IP address within the CIDR block of the VSwitch to which the ENI belongs.
     */
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `privateIps` has been deprecated from provider version 1.123.1. New field `privateIpAddresses` instead
     *
     * @deprecated Field 'private_ips' has been deprecated from provider version 1.123.1. New field 'private_ip_addresses' instead
     */
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `privateIpsCount` has been deprecated from provider version 1.123.1. New field `secondaryPrivateIpAddressCount` instead
     *
     * @deprecated Field 'private_ips_count' has been deprecated from provider version 1.123.1. New field 'secondary_private_ip_address_count' instead
     */
    privateIpsCount?: pulumi.Input<number>;
    /**
     * The queue number of the ENI.
     */
    queueNumber?: pulumi.Input<number>;
    /**
     * The resource group id.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The number of private IP addresses that can be automatically created by ECS.
     */
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    /**
     * The ID of security group N. The security groups and the ENI must belong to the same VPC. The valid values of N are based on the maximum number of security groups to which an ENI can be added. **NOTE:** Either `securityGroupIds` or `securityGroups` must be set with valid security group IDs.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field `securityGroups` has been deprecated from provider version 1.123.1. New field `securityGroupIds` instead. **NOTE:** Either `securityGroupIds` or `securityGroups` must be set with valid security group IDs.
     *
     * @deprecated Field 'security_groups' has been deprecated from provider version 1.123.1. New field 'security_group_ids' instead
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the source and destination IP address check feature is enabled. To improve network security, enable this feature. Default value: `false`. Valid values: `true`, `false`.
     */
    sourceDestCheck?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VSwitch in the specified VPC. The private IP addresses assigned to the ENI must be available IP addresses within the CIDR block of the VSwitch.
     */
    vswitchId: pulumi.Input<string>;
}
