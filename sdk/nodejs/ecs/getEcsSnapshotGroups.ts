// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.160.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.ecs.getEcsSnapshotGroups({
 *     ids: ["example-id"],
 * });
 * export const ecsSnapshotGroupId1 = ids.then(ids => ids.groups?.[0]?.id);
 * const nameRegex = alicloud.ecs.getEcsSnapshotGroups({
 *     nameRegex: "^my-SnapshotGroup",
 * });
 * export const ecsSnapshotGroupId2 = nameRegex.then(nameRegex => nameRegex.groups?.[0]?.id);
 * const status = alicloud.ecs.getEcsSnapshotGroups({
 *     status: "accomplished",
 * });
 * export const ecsSnapshotGroupId3 = status.then(status => status.groups?.[0]?.id);
 * const instanceId = alicloud.ecs.getEcsSnapshotGroups({
 *     instanceId: "example-instance_id",
 * });
 * export const ecsSnapshotGroupId4 = instanceId.then(instanceId => instanceId.groups?.[0]?.id);
 * ```
 */
export function getEcsSnapshotGroups(args?: GetEcsSnapshotGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsSnapshotGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ecs/getEcsSnapshotGroups:getEcsSnapshotGroups", {
        "ids": args.ids,
        "instanceId": args.instanceId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "snapshotGroupName": args.snapshotGroupName,
        "status": args.status,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getEcsSnapshotGroups.
 */
export interface GetEcsSnapshotGroupsArgs {
    /**
     * A list of Snapshot Group IDs.
     */
    ids?: string[];
    /**
     * The ID of the instance.
     */
    instanceId?: string;
    /**
     * A regex string to filter results by Snapshot Group name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The name of the snapshot-consistent group.
     */
    snapshotGroupName?: string;
    /**
     * The status of the resource.
     */
    status?: string;
    /**
     * List of label key-value pairs.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getEcsSnapshotGroups.
 */
export interface GetEcsSnapshotGroupsResult {
    readonly groups: outputs.ecs.GetEcsSnapshotGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly snapshotGroupName?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: any};
}
/**
 * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.160.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.ecs.getEcsSnapshotGroups({
 *     ids: ["example-id"],
 * });
 * export const ecsSnapshotGroupId1 = ids.then(ids => ids.groups?.[0]?.id);
 * const nameRegex = alicloud.ecs.getEcsSnapshotGroups({
 *     nameRegex: "^my-SnapshotGroup",
 * });
 * export const ecsSnapshotGroupId2 = nameRegex.then(nameRegex => nameRegex.groups?.[0]?.id);
 * const status = alicloud.ecs.getEcsSnapshotGroups({
 *     status: "accomplished",
 * });
 * export const ecsSnapshotGroupId3 = status.then(status => status.groups?.[0]?.id);
 * const instanceId = alicloud.ecs.getEcsSnapshotGroups({
 *     instanceId: "example-instance_id",
 * });
 * export const ecsSnapshotGroupId4 = instanceId.then(instanceId => instanceId.groups?.[0]?.id);
 * ```
 */
export function getEcsSnapshotGroupsOutput(args?: GetEcsSnapshotGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcsSnapshotGroupsResult> {
    return pulumi.output(args).apply((a: any) => getEcsSnapshotGroups(a, opts))
}

/**
 * A collection of arguments for invoking getEcsSnapshotGroups.
 */
export interface GetEcsSnapshotGroupsOutputArgs {
    /**
     * A list of Snapshot Group IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Snapshot Group name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the snapshot-consistent group.
     */
    snapshotGroupName?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * List of label key-value pairs.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
