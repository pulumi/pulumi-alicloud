// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ECS Image Pipeline Execution can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/imagePipelineExecution:ImagePipelineExecution example <id>
 * ```
 */
export class ImagePipelineExecution extends pulumi.CustomResource {
    /**
     * Get an existing ImagePipelineExecution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImagePipelineExecutionState, opts?: pulumi.CustomResourceOptions): ImagePipelineExecution {
        return new ImagePipelineExecution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/imagePipelineExecution:ImagePipelineExecution';

    /**
     * Returns true if the given object is an instance of ImagePipelineExecution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImagePipelineExecution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImagePipelineExecution.__pulumiType;
    }

    /**
     * The time when the image build task was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The ID of the image template.
     */
    declare public readonly imagePipelineId: pulumi.Output<string>;
    /**
     * The status of the image build task. Valid values:
     * - CANCELLED: canceled. The build process has been canceled.
     */
    declare public readonly status: pulumi.Output<string>;

    /**
     * Create a ImagePipelineExecution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImagePipelineExecutionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImagePipelineExecutionArgs | ImagePipelineExecutionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImagePipelineExecutionState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["imagePipelineId"] = state?.imagePipelineId;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as ImagePipelineExecutionArgs | undefined;
            if (args?.imagePipelineId === undefined && !opts.urn) {
                throw new Error("Missing required property 'imagePipelineId'");
            }
            resourceInputs["imagePipelineId"] = args?.imagePipelineId;
            resourceInputs["status"] = args?.status;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImagePipelineExecution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ImagePipelineExecution resources.
 */
export interface ImagePipelineExecutionState {
    /**
     * The time when the image build task was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the image template.
     */
    imagePipelineId?: pulumi.Input<string>;
    /**
     * The status of the image build task. Valid values:
     * - CANCELLED: canceled. The build process has been canceled.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ImagePipelineExecution resource.
 */
export interface ImagePipelineExecutionArgs {
    /**
     * The ID of the image template.
     */
    imagePipelineId: pulumi.Input<string>;
    /**
     * The status of the image build task. Valid values:
     * - CANCELLED: canceled. The build process has been canceled.
     */
    status?: pulumi.Input<string>;
}
