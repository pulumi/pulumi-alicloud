// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Elasticity Assurance resource.
 *
 * For information about ECS Elasticity Assurance and how to use it, see [What is Elasticity Assurance](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/createelasticityassurance).
 *
 * > **NOTE:** Available since v1.196.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({
 *     status: "OK",
 * });
 * const defaultGetInstanceTypes = alicloud.ecs.getInstanceTypes({
 *     instanceTypeFamily: "ecs.c6",
 * });
 * const defaultElasticityAssurance = new alicloud.ecs.ElasticityAssurance("default", {
 *     instanceAmount: 1,
 *     description: "before",
 *     zoneIds: [defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.availabilityZones?.[0])],
 *     privatePoolOptionsName: name,
 *     period: 1,
 *     privatePoolOptionsMatchCriteria: "Open",
 *     instanceType: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.id),
 *     periodUnit: "Month",
 *     assuranceTimes: "Unlimited",
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 * });
 * ```
 *
 * ## Import
 *
 * ECS Elasticity Assurance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/elasticityAssurance:ElasticityAssurance example <id>
 * ```
 */
export class ElasticityAssurance extends pulumi.CustomResource {
    /**
     * Get an existing ElasticityAssurance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticityAssuranceState, opts?: pulumi.CustomResourceOptions): ElasticityAssurance {
        return new ElasticityAssurance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/elasticityAssurance:ElasticityAssurance';

    /**
     * Returns true if the given object is an instance of ElasticityAssurance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticityAssurance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticityAssurance.__pulumiType;
    }

    /**
     * The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
     */
    declare public readonly assuranceTimes: pulumi.Output<string>;
    /**
     * Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
     * - true
     * - false
     *
     * Default value: `false`.
     */
    declare public readonly autoRenew: pulumi.Output<boolean | undefined>;
    /**
     * The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
     * - Default value when `PeriodUnit` is set to Month: 1.
     * - Default value when `PeriodUnit` is set to Year: 12.
     *
     * > **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
     */
    declare public readonly autoRenewPeriod: pulumi.Output<number | undefined>;
    /**
     * Unit of duration. Value range:
     * - Month: Month
     * - Year: Year
     *
     * Default value: Year
     */
    declare public readonly autoRenewPeriodUnit: pulumi.Output<string>;
    /**
     * Description of flexible guarantee service.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The first ID of the resource
     */
    declare public /*out*/ readonly elasticityAssuranceId: pulumi.Output<string>;
    /**
     * Flexible guarantee service failure time.
     */
    declare public /*out*/ readonly endTime: pulumi.Output<string>;
    /**
     * The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
     */
    declare public readonly instanceAmount: pulumi.Output<number>;
    /**
     * The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
     */
    declare public /*out*/ readonly instanceChargeType: pulumi.Output<string>;
    /**
     * Instance type. Currently, only one instance type is supported.
     */
    declare public readonly instanceType: pulumi.Output<string>;
    /**
     * Length of purchase. The unit of duration is determined by the 'period_unit' parameter. Default value: 1.
     * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
     */
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    /**
     * The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     */
    declare public readonly privatePoolOptionsMatchCriteria: pulumi.Output<string>;
    /**
     * The name of the flexible protection service.
     */
    declare public readonly privatePoolOptionsName: pulumi.Output<string>;
    /**
     * (Available since v1.261.0) The region ID of the elasticity assurance.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * Flexible guarantee service effective time.
     */
    declare public readonly startTime: pulumi.Output<string>;
    /**
     * Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     */
    declare public /*out*/ readonly startTimeType: pulumi.Output<string>;
    /**
     * The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tag key-value pair information bound by the elastic guarantee service.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * This parameter is not yet available.
     */
    declare public /*out*/ readonly usedAssuranceTimes: pulumi.Output<number>;
    /**
     * The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
     */
    declare public readonly zoneIds: pulumi.Output<string[]>;

    /**
     * Create a ElasticityAssurance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElasticityAssuranceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticityAssuranceArgs | ElasticityAssuranceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticityAssuranceState | undefined;
            resourceInputs["assuranceTimes"] = state?.assuranceTimes;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["autoRenewPeriod"] = state?.autoRenewPeriod;
            resourceInputs["autoRenewPeriodUnit"] = state?.autoRenewPeriodUnit;
            resourceInputs["description"] = state?.description;
            resourceInputs["elasticityAssuranceId"] = state?.elasticityAssuranceId;
            resourceInputs["endTime"] = state?.endTime;
            resourceInputs["instanceAmount"] = state?.instanceAmount;
            resourceInputs["instanceChargeType"] = state?.instanceChargeType;
            resourceInputs["instanceType"] = state?.instanceType;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["privatePoolOptionsMatchCriteria"] = state?.privatePoolOptionsMatchCriteria;
            resourceInputs["privatePoolOptionsName"] = state?.privatePoolOptionsName;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["startTime"] = state?.startTime;
            resourceInputs["startTimeType"] = state?.startTimeType;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["usedAssuranceTimes"] = state?.usedAssuranceTimes;
            resourceInputs["zoneIds"] = state?.zoneIds;
        } else {
            const args = argsOrState as ElasticityAssuranceArgs | undefined;
            if (args?.instanceAmount === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceAmount'");
            }
            if (args?.instanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (args?.zoneIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneIds'");
            }
            resourceInputs["assuranceTimes"] = args?.assuranceTimes;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["autoRenewPeriod"] = args?.autoRenewPeriod;
            resourceInputs["autoRenewPeriodUnit"] = args?.autoRenewPeriodUnit;
            resourceInputs["description"] = args?.description;
            resourceInputs["instanceAmount"] = args?.instanceAmount;
            resourceInputs["instanceType"] = args?.instanceType;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["privatePoolOptionsMatchCriteria"] = args?.privatePoolOptionsMatchCriteria;
            resourceInputs["privatePoolOptionsName"] = args?.privatePoolOptionsName;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["startTime"] = args?.startTime;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["zoneIds"] = args?.zoneIds;
            resourceInputs["elasticityAssuranceId"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["instanceChargeType"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["startTimeType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["usedAssuranceTimes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticityAssurance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElasticityAssurance resources.
 */
export interface ElasticityAssuranceState {
    /**
     * The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
     */
    assuranceTimes?: pulumi.Input<string>;
    /**
     * Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
     * - true
     * - false
     *
     * Default value: `false`.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
     * - Default value when `PeriodUnit` is set to Month: 1.
     * - Default value when `PeriodUnit` is set to Year: 12.
     *
     * > **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * Unit of duration. Value range:
     * - Month: Month
     * - Year: Year
     *
     * Default value: Year
     */
    autoRenewPeriodUnit?: pulumi.Input<string>;
    /**
     * Description of flexible guarantee service.
     */
    description?: pulumi.Input<string>;
    /**
     * The first ID of the resource
     */
    elasticityAssuranceId?: pulumi.Input<string>;
    /**
     * Flexible guarantee service failure time.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
     */
    instanceAmount?: pulumi.Input<number>;
    /**
     * The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * Instance type. Currently, only one instance type is supported.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Length of purchase. The unit of duration is determined by the 'period_unit' parameter. Default value: 1.
     * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
     */
    period?: pulumi.Input<number>;
    /**
     * Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     */
    privatePoolOptionsMatchCriteria?: pulumi.Input<string>;
    /**
     * The name of the flexible protection service.
     */
    privatePoolOptionsName?: pulumi.Input<string>;
    /**
     * (Available since v1.261.0) The region ID of the elasticity assurance.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Flexible guarantee service effective time.
     */
    startTime?: pulumi.Input<string>;
    /**
     * Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     */
    startTimeType?: pulumi.Input<string>;
    /**
     * The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
     */
    status?: pulumi.Input<string>;
    /**
     * The tag key-value pair information bound by the elastic guarantee service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * This parameter is not yet available.
     */
    usedAssuranceTimes?: pulumi.Input<number>;
    /**
     * The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ElasticityAssurance resource.
 */
export interface ElasticityAssuranceArgs {
    /**
     * The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
     */
    assuranceTimes?: pulumi.Input<string>;
    /**
     * Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
     * - true
     * - false
     *
     * Default value: `false`.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
     * - Default value when `PeriodUnit` is set to Month: 1.
     * - Default value when `PeriodUnit` is set to Year: 12.
     *
     * > **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * Unit of duration. Value range:
     * - Month: Month
     * - Year: Year
     *
     * Default value: Year
     */
    autoRenewPeriodUnit?: pulumi.Input<string>;
    /**
     * Description of flexible guarantee service.
     */
    description?: pulumi.Input<string>;
    /**
     * The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
     */
    instanceAmount: pulumi.Input<number>;
    /**
     * Instance type. Currently, only one instance type is supported.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Length of purchase. The unit of duration is determined by the 'period_unit' parameter. Default value: 1.
     * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
     */
    period?: pulumi.Input<number>;
    /**
     * Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     */
    privatePoolOptionsMatchCriteria?: pulumi.Input<string>;
    /**
     * The name of the flexible protection service.
     */
    privatePoolOptionsName?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Flexible guarantee service effective time.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The tag key-value pair information bound by the elastic guarantee service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
     */
    zoneIds: pulumi.Input<pulumi.Input<string>[]>;
}
