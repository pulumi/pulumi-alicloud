// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Ram Role Attachment resource.
 *
 * Mount RAM role.
 *
 * For information about ECS Ram Role Attachment and how to use it, see [What is Ram Role Attachment](https://next.api.alibabacloud.com/document/Ecs/2014-05-26/AttachInstanceRamRole).
 *
 * > **NOTE:** Available since v1.250.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.getZones({
 *     availableDiskCategory: "cloud_efficiency",
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultGetImages = alicloud.ecs.getImages({
 *     mostRecent: true,
 *     owners: "system",
 * });
 * const defaultGetInstanceTypes = Promise.all([_default, defaultGetImages]).then(([_default, defaultGetImages]) => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: _default.zones?.[0]?.id,
 *     imageId: defaultGetImages.images?.[0]?.id,
 * }));
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultRole = new alicloud.ram.Role("default", {
 *     name: `${name}-${defaultInteger.result}`,
 *     document: `\x09\x09{
 * \x09\x09\x09"Statement": [
 * \x09\x09\x09\x09{
 * \x09\x09\x09\x09\x09"Action": "sts:AssumeRole",
 * \x09\x09\x09\x09\x09"Effect": "Allow",
 * \x09\x09\x09\x09\x09"Principal": {
 * \x09\x09\x09\x09\x09\x09"Service": [
 * \x09\x09\x09\x09\x09\x09\x09"ecs.aliyuncs.com"
 * \x09\x09\x09\x09\x09\x09]
 * \x09\x09\x09\x09\x09}
 * \x09\x09\x09\x09}
 * \x09\x09  \x09],
 * \x09\x09\x09"Version": "1"
 * \x09\x09}
 * `,
 *     force: true,
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: `${name}-${defaultInteger.result}`,
 *     cidrBlock: "192.168.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: `${name}-${defaultInteger.result}`,
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "192.168.192.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {vpcId: defaultNetwork.id});
 * const defaultInstance = new alicloud.ecs.Instance("default", {
 *     imageId: defaultGetImages.then(defaultGetImages => defaultGetImages.images?.[0]?.id),
 *     instanceType: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.id),
 *     securityGroups: [defaultSecurityGroup].map(__item => __item.id),
 *     internetChargeType: "PayByTraffic",
 *     internetMaxBandwidthOut: 10,
 *     availabilityZone: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.availabilityZones?.[0]),
 *     instanceChargeType: "PostPaid",
 *     systemDiskCategory: "cloud_efficiency",
 *     vswitchId: defaultSwitch.id,
 *     instanceName: `${name}-${defaultInteger.result}`,
 * });
 * const defaultRamRoleAttachment = new alicloud.ecs.RamRoleAttachment("default", {
 *     ramRoleName: defaultRole.id,
 *     instanceId: defaultInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * ECS Ram Role Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecs/ramRoleAttachment:RamRoleAttachment example <instance_id>:<ram_role_name>
 * ```
 */
export class RamRoleAttachment extends pulumi.CustomResource {
    /**
     * Get an existing RamRoleAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RamRoleAttachmentState, opts?: pulumi.CustomResourceOptions): RamRoleAttachment {
        return new RamRoleAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ramRoleAttachment:RamRoleAttachment';

    /**
     * Returns true if the given object is an instance of RamRoleAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RamRoleAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RamRoleAttachment.__pulumiType;
    }

    /**
     * The ID of the instance.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * The additional policy. When you attach an instance RAM role to instances, you can specify an additional policy to further limit the permissions of the role.
     */
    declare public readonly policy: pulumi.Output<string | undefined>;
    /**
     * The name of the instance RAM role.
     */
    declare public readonly ramRoleName: pulumi.Output<string>;

    /**
     * Create a RamRoleAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RamRoleAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RamRoleAttachmentArgs | RamRoleAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RamRoleAttachmentState | undefined;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["policy"] = state?.policy;
            resourceInputs["ramRoleName"] = state?.ramRoleName;
        } else {
            const args = argsOrState as RamRoleAttachmentArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.ramRoleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ramRoleName'");
            }
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["policy"] = args?.policy;
            resourceInputs["ramRoleName"] = args?.ramRoleName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RamRoleAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RamRoleAttachment resources.
 */
export interface RamRoleAttachmentState {
    /**
     * The ID of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The additional policy. When you attach an instance RAM role to instances, you can specify an additional policy to further limit the permissions of the role.
     */
    policy?: pulumi.Input<string>;
    /**
     * The name of the instance RAM role.
     */
    ramRoleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RamRoleAttachment resource.
 */
export interface RamRoleAttachmentArgs {
    /**
     * The ID of the instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The additional policy. When you attach an instance RAM role to instances, you can specify an additional policy to further limit the permissions of the role.
     */
    policy?: pulumi.Input<string>;
    /**
     * The name of the instance RAM role.
     */
    ramRoleName: pulumi.Input<string>;
}
