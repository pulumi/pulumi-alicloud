// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ECS Invocation resource.
 *
 * For information about ECS Invocation and how to use it, see [What is Invocation](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/invokecommand#t9958.html).
 *
 * > **NOTE:** Available in v1.168.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultCommand = new alicloud.ecs.Command("defaultCommand", {
 *     commandContent: "bHMK",
 *     description: "terraform-example",
 *     type: "RunShellScript",
 *     workingDir: "/root",
 * });
 * const defaultInstances = alicloud.ecs.getInstances({
 *     status: "Running",
 * });
 * const defaultEcsInvocation = new alicloud.ecs.EcsInvocation("defaultEcsInvocation", {
 *     commandId: defaultCommand.id,
 *     instanceIds: [defaultInstances.then(defaultInstances => defaultInstances.ids?.[0])],
 * });
 * ```
 *
 * ## Import
 *
 * ECS Invocation can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ecs/ecsInvocation:EcsInvocation example <id>
 * ```
 */
export class EcsInvocation extends pulumi.CustomResource {
    /**
     * Get an existing EcsInvocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsInvocationState, opts?: pulumi.CustomResourceOptions): EcsInvocation {
        return new EcsInvocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/ecsInvocation:EcsInvocation';

    /**
     * Returns true if the given object is an instance of EcsInvocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsInvocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsInvocation.__pulumiType;
    }

    /**
     * The ID of the command.
     */
    public readonly commandId!: pulumi.Output<string>;
    /**
     * The schedule on which the recurring execution of the command takes place. Take note of the following items:
     * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
     * * When you set Timed to true, you must specify Frequency.
     * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     */
    public readonly frequency!: pulumi.Output<string | undefined>;
    /**
     * The list of instances to execute the command. You can specify up to 50 instance IDs.
     */
    public readonly instanceIds!: pulumi.Output<string[]>;
    /**
     * The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
     */
    public readonly parameters!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeatMode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeatMode` is specified.
     */
    public readonly repeatMode!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies whether to periodically run the command. Default value: `false`.
     */
    public readonly timed!: pulumi.Output<boolean>;
    /**
     * The username that is used to run the command on the ECS instance. 
     * * For Linux instances, the root username is used.
     * * For Windows instances, the System username is used.
     * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * The name of the password used to run the command on a Windows instance.
     */
    public readonly windowsPasswordName!: pulumi.Output<string | undefined>;

    /**
     * Create a EcsInvocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcsInvocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsInvocationArgs | EcsInvocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsInvocationState | undefined;
            resourceInputs["commandId"] = state ? state.commandId : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["repeatMode"] = state ? state.repeatMode : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timed"] = state ? state.timed : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["windowsPasswordName"] = state ? state.windowsPasswordName : undefined;
        } else {
            const args = argsOrState as EcsInvocationArgs | undefined;
            if ((!args || args.commandId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'commandId'");
            }
            if ((!args || args.instanceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceIds'");
            }
            resourceInputs["commandId"] = args ? args.commandId : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["repeatMode"] = args ? args.repeatMode : undefined;
            resourceInputs["timed"] = args ? args.timed : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["windowsPasswordName"] = args ? args.windowsPasswordName : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsInvocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EcsInvocation resources.
 */
export interface EcsInvocationState {
    /**
     * The ID of the command.
     */
    commandId?: pulumi.Input<string>;
    /**
     * The schedule on which the recurring execution of the command takes place. Take note of the following items:
     * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
     * * When you set Timed to true, you must specify Frequency.
     * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     */
    frequency?: pulumi.Input<string>;
    /**
     * The list of instances to execute the command. You can specify up to 50 instance IDs.
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
     */
    parameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeatMode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeatMode` is specified.
     */
    repeatMode?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies whether to periodically run the command. Default value: `false`.
     */
    timed?: pulumi.Input<boolean>;
    /**
     * The username that is used to run the command on the ECS instance. 
     * * For Linux instances, the root username is used.
     * * For Windows instances, the System username is used.
     * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
     */
    username?: pulumi.Input<string>;
    /**
     * The name of the password used to run the command on a Windows instance.
     */
    windowsPasswordName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcsInvocation resource.
 */
export interface EcsInvocationArgs {
    /**
     * The ID of the command.
     */
    commandId: pulumi.Input<string>;
    /**
     * The schedule on which the recurring execution of the command takes place. Take note of the following items:
     * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
     * * When you set Timed to true, you must specify Frequency.
     * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     */
    frequency?: pulumi.Input<string>;
    /**
     * The list of instances to execute the command. You can specify up to 50 instance IDs.
     */
    instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
     */
    parameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeatMode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeatMode` is specified.
     */
    repeatMode?: pulumi.Input<string>;
    /**
     * Specifies whether to periodically run the command. Default value: `false`.
     */
    timed?: pulumi.Input<boolean>;
    /**
     * The username that is used to run the command on the ECS instance. 
     * * For Linux instances, the root username is used.
     * * For Windows instances, the System username is used.
     * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
     */
    username?: pulumi.Input<string>;
    /**
     * The name of the password used to run the command on a Windows instance.
     */
    windowsPasswordName?: pulumi.Input<string>;
}
