// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ProviderAssumeRole {
    policy?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
    sessionExpiration?: pulumi.Input<number>;
    sessionName?: pulumi.Input<string>;
}

export interface ProviderEndpoint {
    acr?: pulumi.Input<string>;
    actiontrail?: pulumi.Input<string>;
    adb?: pulumi.Input<string>;
    alb?: pulumi.Input<string>;
    alidfs?: pulumi.Input<string>;
    alidns?: pulumi.Input<string>;
    alikafka?: pulumi.Input<string>;
    apigateway?: pulumi.Input<string>;
    arms?: pulumi.Input<string>;
    bastionhost?: pulumi.Input<string>;
    beebot?: pulumi.Input<string>;
    bpstudio?: pulumi.Input<string>;
    brainIndustrial?: pulumi.Input<string>;
    bssopenapi?: pulumi.Input<string>;
    cas?: pulumi.Input<string>;
    cassandra?: pulumi.Input<string>;
    cbn?: pulumi.Input<string>;
    cbs?: pulumi.Input<string>;
    cddc?: pulumi.Input<string>;
    cdn?: pulumi.Input<string>;
    cds?: pulumi.Input<string>;
    clickhouse?: pulumi.Input<string>;
    cloudauth?: pulumi.Input<string>;
    cloudfirewall?: pulumi.Input<string>;
    cloudfw?: pulumi.Input<string>;
    cloudphone?: pulumi.Input<string>;
    cloudsso?: pulumi.Input<string>;
    cms?: pulumi.Input<string>;
    config?: pulumi.Input<string>;
    cr?: pulumi.Input<string>;
    cs?: pulumi.Input<string>;
    das?: pulumi.Input<string>;
    datahub?: pulumi.Input<string>;
    dataworkspublic?: pulumi.Input<string>;
    dbfs?: pulumi.Input<string>;
    dcdn?: pulumi.Input<string>;
    ddosbasic?: pulumi.Input<string>;
    ddosbgp?: pulumi.Input<string>;
    ddoscoo?: pulumi.Input<string>;
    dds?: pulumi.Input<string>;
    devopsrdc?: pulumi.Input<string>;
    dg?: pulumi.Input<string>;
    dm?: pulumi.Input<string>;
    dmsEnterprise?: pulumi.Input<string>;
    dmsenterprise?: pulumi.Input<string>;
    dns?: pulumi.Input<string>;
    drds?: pulumi.Input<string>;
    dts?: pulumi.Input<string>;
    dysms?: pulumi.Input<string>;
    eais?: pulumi.Input<string>;
    ebs?: pulumi.Input<string>;
    eci?: pulumi.Input<string>;
    ecs?: pulumi.Input<string>;
    edas?: pulumi.Input<string>;
    edasschedulerx?: pulumi.Input<string>;
    edsuser?: pulumi.Input<string>;
    eflo?: pulumi.Input<string>;
    ehpc?: pulumi.Input<string>;
    ehs?: pulumi.Input<string>;
    eipanycast?: pulumi.Input<string>;
    elasticsearch?: pulumi.Input<string>;
    emr?: pulumi.Input<string>;
    ens?: pulumi.Input<string>;
    ess?: pulumi.Input<string>;
    eventbridge?: pulumi.Input<string>;
    fc?: pulumi.Input<string>;
    fnf?: pulumi.Input<string>;
    ga?: pulumi.Input<string>;
    gaplus?: pulumi.Input<string>;
    gds?: pulumi.Input<string>;
    gpdb?: pulumi.Input<string>;
    gwsecd?: pulumi.Input<string>;
    hbr?: pulumi.Input<string>;
    hcsSgw?: pulumi.Input<string>;
    hitsdb?: pulumi.Input<string>;
    imm?: pulumi.Input<string>;
    imp?: pulumi.Input<string>;
    ims?: pulumi.Input<string>;
    iot?: pulumi.Input<string>;
    kms?: pulumi.Input<string>;
    kvstore?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    market?: pulumi.Input<string>;
    maxcompute?: pulumi.Input<string>;
    mhub?: pulumi.Input<string>;
    mns?: pulumi.Input<string>;
    mscopensubscription?: pulumi.Input<string>;
    mse?: pulumi.Input<string>;
    nas?: pulumi.Input<string>;
    nlb?: pulumi.Input<string>;
    oceanbase?: pulumi.Input<string>;
    ons?: pulumi.Input<string>;
    onsproxy?: pulumi.Input<string>;
    oos?: pulumi.Input<string>;
    opensearch?: pulumi.Input<string>;
    oss?: pulumi.Input<string>;
    ots?: pulumi.Input<string>;
    polardb?: pulumi.Input<string>;
    privatelink?: pulumi.Input<string>;
    pvtz?: pulumi.Input<string>;
    quickbi?: pulumi.Input<string>;
    quotas?: pulumi.Input<string>;
    rKvstore?: pulumi.Input<string>;
    ram?: pulumi.Input<string>;
    rds?: pulumi.Input<string>;
    redisa?: pulumi.Input<string>;
    resourcemanager?: pulumi.Input<string>;
    resourcesharing?: pulumi.Input<string>;
    ros?: pulumi.Input<string>;
    sas?: pulumi.Input<string>;
    scdn?: pulumi.Input<string>;
    sddp?: pulumi.Input<string>;
    serverless?: pulumi.Input<string>;
    servicemesh?: pulumi.Input<string>;
    sgw?: pulumi.Input<string>;
    slb?: pulumi.Input<string>;
    smartag?: pulumi.Input<string>;
    srvcatalog?: pulumi.Input<string>;
    sts?: pulumi.Input<string>;
    swas?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    vod?: pulumi.Input<string>;
    vpc?: pulumi.Input<string>;
    vpcpeer?: pulumi.Input<string>;
    vs?: pulumi.Input<string>;
    waf?: pulumi.Input<string>;
    wafOpenapi?: pulumi.Input<string>;
}
export namespace actiontrail {
}

export namespace adb {
}

export namespace alb {
    export interface AScriptExtAttribute {
        /**
         * The key of the extended attribute.
         */
        attributeKey?: pulumi.Input<string>;
        /**
         * The value of the extended attribute.
         */
        attributeValue?: pulumi.Input<string>;
    }

    export interface AclAclEntry {
        /**
         * The description of the ACL entry. The description must be `1` to `256` characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.),and underscores (_). It can also contain Chinese characters.
         */
        description?: pulumi.Input<string>;
        /**
         * The IP address for the ACL entry.
         */
        entry?: pulumi.Input<string>;
        /**
         * The state of the ACL. Valid values:`Provisioning`, `Available` and `Configuring`. `Provisioning`: The ACL is being created. `Available`: The ACL is available. `Configuring`: The ACL is being configured.
         */
        status?: pulumi.Input<string>;
    }

    export interface ListenerAccessLogTracingConfig {
        /**
         * Xtrace Function. Value: `True` Or `False` . Default Value: `False`.
         */
        tracingEnabled?: pulumi.Input<boolean>;
        /**
         * Xtrace Sampling Rate. Value: `1` to `10000`.
         */
        tracingSample?: pulumi.Input<number>;
        /**
         * Xtrace Type Value Is `Zipkin`.
         */
        tracingType?: pulumi.Input<string>;
    }

    export interface ListenerAclConfig {
        /**
         * The ACLs that are associated with the listener.
         */
        aclRelations?: pulumi.Input<pulumi.Input<inputs.alb.ListenerAclConfigAclRelation>[]>;
        /**
         * The type of the ACL. Valid values: `White` Or `Black`. `White`: specifies the ACL as a whitelist. Only requests from the IP addresses or CIDR blocks in the ACL are forwarded. Whitelists apply to scenarios where only specific IP addresses are allowed to access an application. Risks may occur if the whitelist is improperly set. After you set a whitelist for an Application Load Balancer (ALB) listener, only requests from IP addresses that are added to the whitelist are distributed by the listener. If the whitelist is enabled without IP addresses specified, the ALB listener does not forward requests. `Black`: All requests from the IP addresses or CIDR blocks in the ACL are denied. The blacklist is used to prevent specified IP addresses from accessing an application. If the blacklist is enabled but the corresponding ACL does not contain IP addresses, the ALB listener forwards all requests.
         */
        aclType?: pulumi.Input<string>;
    }

    export interface ListenerAclConfigAclRelation {
        /**
         * Snooping Binding of the Access Policy Group ID List.
         */
        aclId?: pulumi.Input<string>;
        /**
         * The state of the listener. Valid Values: `Running` Or `Stopped`. Valid values: `Running`: The listener is running. `Stopped`: The listener is stopped.
         */
        status?: pulumi.Input<string>;
    }

    export interface ListenerCertificates {
        /**
         * The ID of the Certificate.
         */
        certificateId?: pulumi.Input<string>;
    }

    export interface ListenerDefaultAction {
        /**
         * The configurations of the actions. This parameter is required if Type is set to FowardGroup.
         */
        forwardGroupConfig: pulumi.Input<inputs.alb.ListenerDefaultActionForwardGroupConfig>;
        /**
         * Action Type.
         */
        type: pulumi.Input<string>;
    }

    export interface ListenerDefaultActionForwardGroupConfig {
        /**
         * The destination server group to which requests are forwarded.
         */
        serverGroupTuples: pulumi.Input<pulumi.Input<inputs.alb.ListenerDefaultActionForwardGroupConfigServerGroupTuple>[]>;
    }

    export interface ListenerDefaultActionForwardGroupConfigServerGroupTuple {
        /**
         * The ID of the destination server group to which requests are forwarded.
         */
        serverGroupId: pulumi.Input<string>;
    }

    export interface ListenerQuicConfig {
        /**
         * There Is a Need to Correlate the QuIC Listener ID. The Https Listener, in Effect at the Time. quicupgradeenabled True When Required.
         */
        quicListenerId?: pulumi.Input<string>;
        /**
         * Indicates Whether to Enable the QuIC Upgrade.
         */
        quicUpgradeEnabled?: pulumi.Input<boolean>;
    }

    export interface ListenerXForwardedForConfig {
        /**
         * The Custom Header Field Names Only When `xForwardedForClientCertClientVerifyEnabled` Has a Value of True, this Value Will Not Take Effect until.The name must be 1 to 40 characters in length, and can contain letters, hyphens (-), underscores (_), and digits.
         */
        xForwardedForClientCertClientVerifyAlias?: pulumi.Input<string>;
        /**
         * Indicates Whether the `X-Forwarded-Clientcert-clientverify` Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate to Verify the Results.
         */
        xForwardedForClientCertClientVerifyEnabled?: pulumi.Input<boolean>;
        /**
         * The Custom Header Field Names Only When `xForwardedForClientCertfingerprintEnabled`, Which Evaluates to True When the Entry into Force of.The name must be 1 to 40 characters in length, and can contain letters, hyphens (-), underscores (_), and digits.
         */
        xForwardedForClientCertFingerPrintAlias?: pulumi.Input<string>;
        /**
         * Indicates Whether the `X-Forwarded-client_cert-fingerprint` Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate Fingerprint Value.
         */
        xForwardedForClientCertFingerPrintEnabled?: pulumi.Input<boolean>;
        /**
         * The Custom Header Field Names Only When `xForwardedForClientCertIssuerDnEnabled`, Which Evaluates to True When the Entry into Force of.
         */
        xForwardedForClientCertIssuerDnAlias?: pulumi.Input<string>;
        /**
         * Indicates Whether the `X-Forwarded-Clientcert-issuerdn` Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate after the Manifests Are Signed, the Publisher Information.
         */
        xForwardedForClientCertIssuerDnEnabled?: pulumi.Input<boolean>;
        /**
         * The name of the custom header. This parameter is valid only if `xForwardedForClientCertsubjectdnEnabled` is set to true. The name must be 1 to 40 characters in length, and can contain letters, hyphens (-), underscores (_), and digits.
         */
        xForwardedForClientCertSubjectDnAlias?: pulumi.Input<string>;
        /**
         * Specifies whether to use the `X-Forwarded-client_cert-subjectdn` header field to obtain information about the owner of the ALB client certificate. Valid values: true and false. Default value: false.
         */
        xForwardedForClientCertSubjectDnEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates Whether the X-Forwarded-Client-Port Header Field Is Used to Obtain Access to Server Load Balancer Instances to the Client, and Those of the Ports.
         */
        xForwardedForClientSrcPortEnabled?: pulumi.Input<boolean>;
        /**
         * Whether to Enable by X-Forwarded-For Header Field Is Used to Obtain the Client IP Addresses.
         */
        xForwardedForEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates Whether the X-Forwarded-Proto Header Field Is Used to Obtain the Server Load Balancer Instance Snooping Protocols.
         */
        xForwardedForProtoEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates Whether the SLB-ID Header Field Is Used to Obtain the Load Balancing Instance Id.
         */
        xForwardedForSlbIdEnabled?: pulumi.Input<boolean>;
        /**
         * Indicates Whether the X-Forwarded-Port Header Field Is Used to Obtain the Server Load Balancer Instance Listening Port.
         */
        xForwardedForSlbPortEnabled?: pulumi.Input<boolean>;
    }

    export interface LoadBalancerAccessLogConfig {
        /**
         * The log service that access logs are shipped to.
         */
        logProject?: pulumi.Input<string>;
        /**
         * The log service that access logs are shipped to.
         */
        logStore?: pulumi.Input<string>;
    }

    export interface LoadBalancerLoadBalancerBillingConfig {
        /**
         * The billing method of the ALB instance. Valid value: `PayAsYouGo`.
         */
        payType: pulumi.Input<string>;
    }

    export interface LoadBalancerModificationProtectionConfig {
        /**
         * The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. **Note:** This parameter takes effect only when `status` is set to `ConsoleProtection`.
         */
        reason?: pulumi.Input<string>;
        /**
         * Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
         */
        status?: pulumi.Input<string>;
    }

    export interface LoadBalancerZoneMapping {
        /**
         * The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
         */
        vswitchId: pulumi.Input<string>;
        /**
         * The ID of the zone to which the ALB instance belongs.
         */
        zoneId: pulumi.Input<string>;
    }

    export interface RuleRuleAction {
        /**
         * The configuration of the fixed response. See the following `Block fixedResponseConfig`.
         */
        fixedResponseConfig?: pulumi.Input<inputs.alb.RuleRuleActionFixedResponseConfig>;
        /**
         * The forward response action within ALB. See the following `Block forwardGroupConfig`.
         */
        forwardGroupConfig?: pulumi.Input<inputs.alb.RuleRuleActionForwardGroupConfig>;
        /**
         * The configuration of the inserted header field. See the following `Block insertHeaderConfig`.
         */
        insertHeaderConfig?: pulumi.Input<inputs.alb.RuleRuleActionInsertHeaderConfig>;
        /**
         * The order of the forwarding rule actions. Valid values: 1 to 50000. The actions are performed in ascending order. You cannot leave this parameter empty. Each value must be unique.
         */
        order: pulumi.Input<number>;
        /**
         * The configuration of the external redirect action. See the following `Block redirectConfig`.
         */
        redirectConfig?: pulumi.Input<inputs.alb.RuleRuleActionRedirectConfig>;
        /**
         * The redirect action within ALB. See the following `Block rewriteConfig`.
         */
        rewriteConfig?: pulumi.Input<inputs.alb.RuleRuleActionRewriteConfig>;
        /**
         * The Flow speed limit. See the following `Block trafficLimitConfig`.
         */
        trafficLimitConfig?: pulumi.Input<inputs.alb.RuleRuleActionTrafficLimitConfig>;
        /**
         * The Traffic mirroring. See the following `Block trafficMirrorConfig`.
         */
        trafficMirrorConfig?: pulumi.Input<inputs.alb.RuleRuleActionTrafficMirrorConfig>;
        /**
         * The type of the forwarding rule. Valid values: `Header`, `Host`, `Path`,  `Cookie`, `QueryString`, `Method` and `SourceIp`.
         */
        type: pulumi.Input<string>;
    }

    export interface RuleRuleActionFixedResponseConfig {
        /**
         * The fixed response. The response cannot exceed 1 KB in size and can contain only ASCII characters.
         */
        content: pulumi.Input<string>;
        /**
         * The format of the fixed response.  Valid values: `text/plain`, `text/css`, `text/html`, `application/javascript`, and `application/json`.
         */
        contentType?: pulumi.Input<string>;
        /**
         * The redirect method. Valid values:301, 302, 303, 307, and 308.
         */
        httpCode?: pulumi.Input<string>;
    }

    export interface RuleRuleActionForwardGroupConfig {
        /**
         * The configuration of session persistence for server groups.
         */
        serverGroupStickySession?: pulumi.Input<inputs.alb.RuleRuleActionForwardGroupConfigServerGroupStickySession>;
        /**
         * The destination server group to which requests are forwarded.
         */
        serverGroupTuples?: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleActionForwardGroupConfigServerGroupTuple>[]>;
    }

    export interface RuleRuleActionForwardGroupConfigServerGroupStickySession {
        /**
         * Whether to enable session persistence.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The timeout period. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
         */
        timeout?: pulumi.Input<number>;
    }

    export interface RuleRuleActionForwardGroupConfigServerGroupTuple {
        /**
         * The ID of the destination server group to which requests are forwarded.
         */
        serverGroupId?: pulumi.Input<string>;
        /**
         * The Weight of server group. Default value: `100`. **NOTE:** This attribute is required when the number of `serverGroupTuples` is greater than 2.
         */
        weight?: pulumi.Input<number>;
    }

    export interface RuleRuleActionInsertHeaderConfig {
        /**
         * The key of the header field. The key must be 1 to 40 characters in length, and can contain letters, digits, hyphens (-) and underscores (_). The key does not support Cookie or Host.
         */
        key?: pulumi.Input<string>;
        /**
         * The value must be 1 to 128 characters in length, and can contain lowercase letters, printable characters, asterisks (*), and question marks (?). The value cannot contain spaces or the following special characters: # [ ] { } \ | < > &.
         */
        value?: pulumi.Input<string>;
        /**
         * Valid values:  UserDefined: a custom value ReferenceHeader: uses a field of the user request header. SystemDefined: a system value.
         */
        valueType?: pulumi.Input<string>;
    }

    export interface RuleRuleActionRedirectConfig {
        /**
         * The host name of the destination to which requests are redirected within ALB.  Valid values:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (*), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks (*) and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
         */
        host?: pulumi.Input<string>;
        /**
         * The redirect method. Valid values:301, 302, 303, 307, and 308.
         */
        httpCode?: pulumi.Input<string>;
        /**
         * The path to which requests are to be redirected within ALB.  Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?)and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive.  Default value: ${path}. This value can be used only once. You can use it with a valid string.
         */
        path?: pulumi.Input<string>;
        /**
         * The port of the destination to which requests are redirected.  Valid values: 1 to 63335.  Default value: ${port}. You cannot use this value together with other characters at the same time.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of the requests to be redirected.  Valid values: HTTP and HTTPS.  Default value: ${protocol}. You cannot use this value together with other characters at the same time.  Note HTTPS listeners can redirect only HTTPS requests.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The query string of the request to be redirected within ALB.  The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &.  Default value: ${query}. This value can be used only once. You can use it with a valid string.
         */
        query?: pulumi.Input<string>;
    }

    export interface RuleRuleActionRewriteConfig {
        /**
         * The host name of the destination to which requests are redirected within ALB.  Valid values:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (*), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks (*) and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
         */
        host?: pulumi.Input<string>;
        /**
         * The path to which requests are to be redirected within ALB.  Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?)and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive.  Default value: ${path}. This value can be used only once. You can use it with a valid string.
         */
        path?: pulumi.Input<string>;
        /**
         * The query string of the request to be redirected within ALB.  The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &.  Default value: ${query}. This value can be used only once. You can use it with a valid string.
         */
        query?: pulumi.Input<string>;
    }

    export interface RuleRuleActionTrafficLimitConfig {
        /**
         * The Number of requests per second. Value range: 1~100000.
         */
        qps?: pulumi.Input<number>;
    }

    export interface RuleRuleActionTrafficMirrorConfig {
        /**
         * The Traffic is mirrored to the server group. See the following `Block mirrorGroupConfig`.
         */
        mirrorGroupConfig?: pulumi.Input<inputs.alb.RuleRuleActionTrafficMirrorConfigMirrorGroupConfig>;
        /**
         * The Mirror target type.
         */
        targetType?: pulumi.Input<string>;
    }

    export interface RuleRuleActionTrafficMirrorConfigMirrorGroupConfig {
        /**
         * The destination server group to which requests are forwarded.
         */
        serverGroupTuples?: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleActionTrafficMirrorConfigMirrorGroupConfigServerGroupTuple>[]>;
    }

    export interface RuleRuleActionTrafficMirrorConfigMirrorGroupConfigServerGroupTuple {
        /**
         * The ID of the destination server group to which requests are forwarded.
         */
        serverGroupId?: pulumi.Input<string>;
    }

    export interface RuleRuleCondition {
        /**
         * The configuration of the cookie. See the following `Block cookieConfig`.
         */
        cookieConfig?: pulumi.Input<inputs.alb.RuleRuleConditionCookieConfig>;
        /**
         * The configuration of the header field. See the following `Block headerConfig`.
         */
        headerConfig?: pulumi.Input<inputs.alb.RuleRuleConditionHeaderConfig>;
        /**
         * The configuration of the host field. See the following `Block hostConfig`.
         */
        hostConfig?: pulumi.Input<inputs.alb.RuleRuleConditionHostConfig>;
        /**
         * The configuration of the request method. See the following `Block methodConfig`.
         */
        methodConfig?: pulumi.Input<inputs.alb.RuleRuleConditionMethodConfig>;
        /**
         * The configuration of the path for the request to be forwarded. See the following `Block pathConfig`.
         */
        pathConfig?: pulumi.Input<inputs.alb.RuleRuleConditionPathConfig>;
        /**
         * The configuration of the query string. See the following `Block queryStringConfig`.
         */
        queryStringConfig?: pulumi.Input<inputs.alb.RuleRuleConditionQueryStringConfig>;
        /**
         * The Based on source IP traffic matching. Required and valid when Type is SourceIP. See the following `Block sourceIpConfig`.
         */
        sourceIpConfig?: pulumi.Input<inputs.alb.RuleRuleConditionSourceIpConfig>;
        /**
         * The type of the forwarding rule. Valid values: `Header`, `Host`, `Path`,  `Cookie`, `QueryString`, `Method` and `SourceIp`.
         */
        type: pulumi.Input<string>;
    }

    export interface RuleRuleConditionCookieConfig {
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleConditionCookieConfigValue>[]>;
    }

    export interface RuleRuleConditionCookieConfigValue {
        /**
         * The key of the header field. The key must be 1 to 40 characters in length, and can contain letters, digits, hyphens (-) and underscores (_). The key does not support Cookie or Host.
         */
        key?: pulumi.Input<string>;
        /**
         * The value must be 1 to 128 characters in length, and can contain lowercase letters, printable characters, asterisks (*), and question marks (?). The value cannot contain spaces or the following special characters: # [ ] { } \ | < > &.
         */
        value?: pulumi.Input<string>;
    }

    export interface RuleRuleConditionHeaderConfig {
        /**
         * The key of the header field. The key must be 1 to 40 characters in length, and can contain letters, digits, hyphens (-) and underscores (_). The key does not support Cookie or Host.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleRuleConditionHostConfig {
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleRuleConditionMethodConfig {
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleRuleConditionPathConfig {
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleRuleConditionQueryStringConfig {
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<inputs.alb.RuleRuleConditionQueryStringConfigValue>[]>;
    }

    export interface RuleRuleConditionQueryStringConfigValue {
        /**
         * The key of the header field. The key must be 1 to 40 characters in length, and can contain letters, digits, hyphens (-) and underscores (_). The key does not support Cookie or Host.
         */
        key?: pulumi.Input<string>;
        /**
         * The value must be 1 to 128 characters in length, and can contain lowercase letters, printable characters, asterisks (*), and question marks (?). The value cannot contain spaces or the following special characters: # [ ] { } \ | < > &.
         */
        value?: pulumi.Input<string>;
    }

    export interface RuleRuleConditionSourceIpConfig {
        /**
         * The value of the header field. The value must be 1 to 128 characters in length, and can contain lowercase letters, printable ASCII characters whose values are ch >= 32 && ch < 127, asterisks (*), and question marks (?). The value cannot start or end with a space.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ServerGroupHealthCheckConfig {
        /**
         * The status code for a successful health check. Multiple status codes can be specified as a
         * list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This
         * parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
         */
        healthCheckCodes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The port of the backend server that is used for health checks. Valid values: `0`
         * to `65535`. Default value: `0`. A value of 0 indicates that a backend server port is used for health checks.
         */
        healthCheckConnectPort?: pulumi.Input<number>;
        /**
         * Indicates whether health checks are enabled. Valid values: `true`, `false`. Default
         * value: `true`.
         */
        healthCheckEnabled?: pulumi.Input<boolean>;
        /**
         * The domain name that is used for health checks.
         */
        healthCheckHost?: pulumi.Input<string>;
        /**
         * HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`
         * . **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
         */
        healthCheckHttpVersion?: pulumi.Input<string>;
        /**
         * The time interval between two consecutive health checks. Unit: seconds. Valid values: `1`
         * to `50`. Default value: `2`.
         */
        healthCheckInterval?: pulumi.Input<number>;
        /**
         * Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter
         * exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
         */
        healthCheckMethod?: pulumi.Input<string>;
        /**
         * The forwarding rule path of health checks. **NOTE:** This parameter exists if
         * the `HealthCheckProtocol` parameter is set to `HTTP`.
         */
        healthCheckPath?: pulumi.Input<string>;
        /**
         * Health check protocol. Valid values: `HTTP` and `TCP`.
         */
        healthCheckProtocol?: pulumi.Input<string>;
        /**
         * The timeout period of a health check response. If a backend Elastic Compute Service (ECS)
         * instance does not send an expected response within the specified period of time, the ECS instance is considered
         * unhealthy. Unit: seconds. Valid values: 1 to 300. Default value: 5. **NOTE:** If the value of the `HealthCHeckTimeout`
         * parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter
         * is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
         */
        healthCheckTimeout?: pulumi.Input<number>;
        /**
         * The number of health checks that an unhealthy backend server must pass consecutively before it
         * is declared healthy. In this case, the health check state is changed from fail to success. Valid values: 2 to 10.
         * Default value: 3.
         */
        healthyThreshold?: pulumi.Input<number>;
        /**
         * The number of consecutive health checks that a healthy backend server must consecutively fail
         * before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid
         * values: `2` to `10`. Default value: `3`.
         */
        unhealthyThreshold?: pulumi.Input<number>;
    }

    export interface ServerGroupServer {
        /**
         * The description of the server.
         */
        description?: pulumi.Input<string>;
        /**
         * The port that is used by the server. Valid values: `1` to `65535`. **Note:** This parameter is required if the `serverType` parameter is set to `Ecs`, `Eni`, `Eci`, or `Ip`. You do not need to configure this parameter if you set `serverType` to `Fc`.
         */
        port?: pulumi.Input<number>;
        /**
         * Specifies whether to enable the remote IP address feature. You can specify up to 40 servers in each call. **Note:** If `serverType` is set to `Ip`, this parameter is available.
         */
        remoteIpEnabled?: pulumi.Input<boolean>;
        /**
         * The ID of the backend server.
         * - If `serverGroupType` is set to `Instance`, set the parameter to the ID of an Elastic Compute Service (ECS) instance, an elastic network interface (ENI), or an elastic container instance. These backend servers are specified by Ecs, Eni, or Eci.
         * - If `serverGroupType` is set to `Ip`, set the parameter to an IP address specified in the server group.
         * - If `serverGroupType` is set to `Fc`, set the parameter to the Alibaba Cloud Resource Name (ARN) of a function specified in the server group.
         */
        serverId: pulumi.Input<string>;
        /**
         * The IP address of an Elastic Compute Service (ECS) instance, an elastic network interface (ENI), or an elastic container instance. **Note:** If `serverGroupType` is set to `Fc`, you do not need to configure parameters, otherwise this attribute is required. If `serverGroupType` is set to `Ip`, the value of this property is the same as the `serverId` value.
         */
        serverIp?: pulumi.Input<string>;
        /**
         * The type of the server. The type of the server. Valid values: 
         * - Ecs: an ECS instance.
         * - Eni: an ENI.
         * - Eci: an elastic container instance.
         * - Ip(Available in v1.194.0+): an IP address.
         * - fc(Available in v1.194.0+): a function.
         */
        serverType: pulumi.Input<string>;
        /**
         * The status of the resource.
         */
        status?: pulumi.Input<string>;
        /**
         * The weight of the server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no
         * requests are forwarded to the server. **Note:** You do not need to set this parameter if you set `serverType` to `Fc`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface ServerGroupStickySessionConfig {
        /**
         * the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession`
         * parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
         */
        cookie?: pulumi.Input<string>;
        /**
         * The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1`
         * to `86400`. Default value: `1000`.
         */
        cookieTimeout?: pulumi.Input<number>;
        /**
         * Indicates whether sticky session is enabled. Values: `true` and `false`. Default
         * value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
         */
        stickySessionEnabled?: pulumi.Input<boolean>;
        /**
         * The method that is used to handle a cookie. Values: `Server` and `Insert`.
         */
        stickySessionType?: pulumi.Input<string>;
    }
}

export namespace amqp {
}

export namespace apigateway {
    export interface ApiConstantParameter {
        /**
         * The description of the api. Defaults to null.
         */
        description?: pulumi.Input<string>;
        /**
         * Request's parameter location; values: BODY, HEAD, QUERY, and PATH.
         */
        in: pulumi.Input<string>;
        /**
         * The name of the api gateway api. Defaults to null.
         */
        name: pulumi.Input<string>;
        /**
         * Constant parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiFcServiceConfig {
        /**
         * RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
         */
        arnRole?: pulumi.Input<string>;
        /**
         * The function name of function compute service.
         */
        functionName: pulumi.Input<string>;
        /**
         * The region that the function compute service belongs to.
         */
        region: pulumi.Input<string>;
        /**
         * The service name of function compute service.
         */
        serviceName: pulumi.Input<string>;
        /**
         * Backend service time-out time; unit: millisecond.
         */
        timeout: pulumi.Input<number>;
    }

    export interface ApiHttpServiceConfig {
        /**
         * The address of backend service.
         */
        address: pulumi.Input<string>;
        aoneName?: pulumi.Input<string>;
        /**
         * The method of the api, including 'GET','POST','PUT' etc.
         */
        method: pulumi.Input<string>;
        /**
         * The request path of the api.
         */
        path: pulumi.Input<string>;
        /**
         * Backend service time-out time; unit: millisecond.
         */
        timeout: pulumi.Input<number>;
    }

    export interface ApiHttpVpcServiceConfig {
        aoneName?: pulumi.Input<string>;
        /**
         * The method of the api, including 'GET','POST','PUT' etc.
         */
        method: pulumi.Input<string>;
        /**
         * The name of the api gateway api. Defaults to null.
         */
        name: pulumi.Input<string>;
        /**
         * The request path of the api.
         */
        path: pulumi.Input<string>;
        /**
         * Backend service time-out time; unit: millisecond.
         */
        timeout: pulumi.Input<number>;
    }

    export interface ApiMockServiceConfig {
        aoneName?: pulumi.Input<string>;
        /**
         * The result of the mock service.
         */
        result: pulumi.Input<string>;
    }

    export interface ApiRequestConfig {
        /**
         * The body format of the api, which support the values of 'STREAM' and 'FORM'.
         */
        bodyFormat?: pulumi.Input<string>;
        /**
         * The method of the api, including 'GET','POST','PUT' etc.
         */
        method: pulumi.Input<string>;
        /**
         * The mode of the parameters between request parameters and service parameters, which support the values of 'MAPPING' and 'PASSTHROUGH'.
         */
        mode: pulumi.Input<string>;
        /**
         * The request path of the api.
         */
        path: pulumi.Input<string>;
        /**
         * The protocol of api which supports values of 'HTTP','HTTPS' or 'HTTP,HTTPS'.
         */
        protocol: pulumi.Input<string>;
    }

    export interface ApiRequestParameter {
        /**
         * The default value of the parameter.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * The description of the api. Defaults to null.
         */
        description?: pulumi.Input<string>;
        /**
         * Request's parameter location; values: BODY, HEAD, QUERY, and PATH.
         */
        in: pulumi.Input<string>;
        /**
         * Backend service's parameter location; values: BODY, HEAD, QUERY, and PATH.
         */
        inService: pulumi.Input<string>;
        /**
         * The name of the api gateway api. Defaults to null.
         */
        name: pulumi.Input<string>;
        /**
         * Backend service's parameter name.
         */
        nameService: pulumi.Input<string>;
        /**
         * Parameter required or not; values: REQUIRED and OPTIONAL.
         */
        required: pulumi.Input<string>;
        /**
         * Parameter type which supports values of 'STRING','INT','BOOLEAN','LONG',"FLOAT" and "DOUBLE".
         */
        type: pulumi.Input<string>;
    }

    export interface ApiSystemParameter {
        /**
         * Request's parameter location; values: BODY, HEAD, QUERY, and PATH.
         */
        in: pulumi.Input<string>;
        /**
         * The name of the api gateway api. Defaults to null.
         */
        name: pulumi.Input<string>;
        /**
         * Backend service's parameter name.
         */
        nameService: pulumi.Input<string>;
    }

}

export namespace arms {
    export interface DispatchRuleGroupRule {
        groupId?: pulumi.Input<number>;
        /**
         * The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler.
         */
        groupInterval: pulumi.Input<number>;
        /**
         * The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler.
         */
        groupWaitTime: pulumi.Input<number>;
        /**
         * The fields that are used to group events. Events with the same field content are assigned to a group. Alerts with the same specified grouping field are sent to the handler in separate notifications.
         */
        groupingFields: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The silence period of repeated alerts. All alerts are repeatedly sent at specified intervals until the alerts are cleared. The minimum value is 61. Default to 600.
         */
        repeatInterval?: pulumi.Input<number>;
    }

    export interface DispatchRuleLabelMatchExpressionGrid {
        /**
         * Sets the dispatch rule. See the following `Block labelMatchExpressionGroups`.
         */
        labelMatchExpressionGroups: pulumi.Input<pulumi.Input<inputs.arms.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroup>[]>;
    }

    export interface DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroup {
        /**
         * Sets the dispatch rule. See the following `Block labelMatchExpressions`.
         */
        labelMatchExpressions: pulumi.Input<pulumi.Input<inputs.arms.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpression>[]>;
    }

    export interface DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpression {
        /**
         * The key of the tag of the dispatch rule. Valud values:
         * * _aliyun_arms_userid: user ID
         * * _aliyun_arms_involvedObject_kind: type of the associated object
         * * _aliyun_arms_involvedObject_id: ID of the associated object
         * * _aliyun_arms_involvedObject_name: name of the associated object
         * * _aliyun_arms_alert_name: alert name
         * * _aliyun_arms_alert_rule_id: alert rule ID
         * * _aliyun_arms_alert_type: alert type
         * * _aliyun_arms_alert_level: alert severity
         */
        key: pulumi.Input<string>;
        /**
         * The operator used in the dispatch rule. Valid values: 
         * * eq: equals to.
         * * re: matches a regular expression.
         */
        operator: pulumi.Input<string>;
        /**
         * The value of the tag.
         */
        value: pulumi.Input<string>;
    }

    export interface DispatchRuleNotifyRule {
        /**
         * The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.
         */
        notifyChannels: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Sets the notification object. See the following `Block notifyObjects`.
         */
        notifyObjects: pulumi.Input<pulumi.Input<inputs.arms.DispatchRuleNotifyRuleNotifyObject>[]>;
    }

    export interface DispatchRuleNotifyRuleNotifyObject {
        /**
         * The name of the contact or contact group.
         */
        name: pulumi.Input<string>;
        /**
         * The ID of the contact or contact group.
         */
        notifyObjectId: pulumi.Input<string>;
        /**
         * The type of the alert contact. Valid values: ARMS_CONTACT: contact. ARMS_CONTACT_GROUP: contact group.
         */
        notifyType: pulumi.Input<string>;
    }

    export interface PrometheusAlertRuleAnnotation {
        /**
         * The name of the label.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the label.
         */
        value?: pulumi.Input<string>;
    }

    export interface PrometheusAlertRuleLabel {
        /**
         * The name of the label.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the label.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace bastionhost {
    export interface InstanceAdAuthServer {
        /**
         * The username of the account that is used for the AD server.
         */
        account: pulumi.Input<string>;
        /**
         * The Base distinguished name (DN).
         */
        baseDn: pulumi.Input<string>;
        /**
         * The domain on the AD server.
         */
        domain: pulumi.Input<string>;
        /**
         * The field that is used to indicate the email address of a user on the AD server.
         */
        emailMapping?: pulumi.Input<string>;
        /**
         * The condition that is used to filter users.
         */
        filter?: pulumi.Input<string>;
        /**
         * Specifies whether to support SSL.
         */
        isSsl: pulumi.Input<boolean>;
        /**
         * The field that is used to indicate the mobile phone number of a user on the AD server.
         */
        mobileMapping?: pulumi.Input<string>;
        /**
         * The field that is used to indicate the name of a user on the AD server.
         */
        nameMapping?: pulumi.Input<string>;
        /**
         * The password of the account that is used for the AD server.
         */
        password: pulumi.Input<string>;
        /**
         * The port that is used to access the AD server.
         */
        port: pulumi.Input<number>;
        /**
         * The address of the AD server.
         */
        server: pulumi.Input<string>;
        /**
         * The address of the secondary AD server.
         */
        standbyServer?: pulumi.Input<string>;
    }

    export interface InstanceLdapAuthServer {
        /**
         * The username of the account that is used for the AD server.
         */
        account: pulumi.Input<string>;
        /**
         * The Base distinguished name (DN).
         */
        baseDn: pulumi.Input<string>;
        /**
         * The field that is used to indicate the email address of a user on the AD server.
         */
        emailMapping?: pulumi.Input<string>;
        /**
         * The condition that is used to filter users.
         */
        filter?: pulumi.Input<string>;
        /**
         * Specifies whether to support SSL.
         */
        isSsl?: pulumi.Input<boolean>;
        /**
         * The field that is used to indicate the logon name of a user on the LDAP server.
         */
        loginNameMapping?: pulumi.Input<string>;
        /**
         * The field that is used to indicate the mobile phone number of a user on the AD server.
         */
        mobileMapping?: pulumi.Input<string>;
        /**
         * The field that is used to indicate the name of a user on the AD server.
         */
        nameMapping?: pulumi.Input<string>;
        /**
         * The password of the account that is used for the AD server.
         */
        password: pulumi.Input<string>;
        /**
         * The port that is used to access the AD server.
         */
        port: pulumi.Input<number>;
        /**
         * The address of the AD server.
         */
        server: pulumi.Input<string>;
        /**
         * The address of the secondary AD server.
         */
        standbyServer?: pulumi.Input<string>;
    }
}

export namespace bp {
    export interface StudioApplicationInstance {
        /**
         * The id of the instance.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the instance.
         */
        nodeName?: pulumi.Input<string>;
        /**
         * The type of the instance.
         */
        nodeType?: pulumi.Input<string>;
    }
}

export namespace brain {
}

export namespace bss {
}

export namespace cas {
}

export namespace cassandra {
}

export namespace cddc {
}

export namespace cdn {
    export interface DomainAuthConfig {
        authType?: pulumi.Input<string>;
        masterKey?: pulumi.Input<string>;
        slaveKey?: pulumi.Input<string>;
        timeout?: pulumi.Input<number>;
    }

    export interface DomainCacheConfig {
        cacheContent: pulumi.Input<string>;
        cacheId?: pulumi.Input<string>;
        cacheType: pulumi.Input<string>;
        ttl: pulumi.Input<number>;
        weight?: pulumi.Input<number>;
    }

    export interface DomainCertificateConfig {
        privateKey?: pulumi.Input<string>;
        serverCertificate?: pulumi.Input<string>;
        serverCertificateStatus?: pulumi.Input<string>;
    }

    export interface DomainConfigFunctionArg {
        /**
         * The name of arg.
         */
        argName: pulumi.Input<string>;
        /**
         * The value of arg.
         */
        argValue: pulumi.Input<string>;
    }

    export interface DomainHttpHeaderConfig {
        headerId?: pulumi.Input<string>;
        headerKey: pulumi.Input<string>;
        headerValue: pulumi.Input<string>;
    }

    export interface DomainNewCertificateConfig {
        /**
         * The SSL certificate name.
         */
        certName?: pulumi.Input<string>;
        /**
         * The SSL certificate type, can be "upload", "cas" and "free".
         */
        certType?: pulumi.Input<string>;
        /**
         * Set `1` to ignore the repeated verification for certificate name, and cover the information of the origin certificate (with the same name). Set `0` to work the verification.
         */
        forceSet?: pulumi.Input<string>;
        /**
         * The SSL private key. This is required if `serverCertificateStatus` is `on`
         */
        privateKey?: pulumi.Input<string>;
        /**
         * The SSL server certificate string. This is required if `serverCertificateStatus` is `on`
         */
        serverCertificate?: pulumi.Input<string>;
        /**
         * This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
         */
        serverCertificateStatus?: pulumi.Input<string>;
    }

    export interface DomainNewSource {
        /**
         * The address of source. Valid values can be ip or doaminName. Each item's `content` can not be repeated.
         */
        content: pulumi.Input<string>;
        /**
         * The port of source. Valid values are `443` and `80`. Default value is `80`.
         */
        port?: pulumi.Input<number>;
        /**
         * Priority of the source. Valid values are `0` and `100`. Default value is `20`.
         */
        priority?: pulumi.Input<number>;
        /**
         * The type of the source. Valid values are `ipaddr`, `domain` and `oss`.
         */
        type: pulumi.Input<string>;
        /**
         * Weight of the source. Valid values are from `0` to `100`. Default value is `10`, but if type is `ipaddr`, the value can only be `10`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface DomainPage404Config {
        customPageUrl?: pulumi.Input<string>;
        errorCode?: pulumi.Input<string>;
        pageType?: pulumi.Input<string>;
    }

    export interface DomainParameterFilterConfig {
        enable?: pulumi.Input<string>;
        hashKeyArgs?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DomainReferConfig {
        allowEmpty?: pulumi.Input<string>;
        referLists: pulumi.Input<pulumi.Input<string>[]>;
        referType?: pulumi.Input<string>;
    }

}

export namespace cen {
    export interface TransitRouterVpcAttachmentZoneMapping {
        /**
         * The VSwitch id of attachment.
         */
        vswitchId?: pulumi.Input<string>;
        /**
         * The zone Id of VSwitch.
         */
        zoneId?: pulumi.Input<string>;
    }

    export interface TransitRouterVpnAttachmentZone {
        /**
         * The id of the zone.
         */
        zoneId: pulumi.Input<string>;
    }
}

export namespace cfg {
    export interface AggregateCompliancePackConfigRule {
        /**
         * A list of parameter rules.
         */
        configRuleParameters?: pulumi.Input<pulumi.Input<inputs.cfg.AggregateCompliancePackConfigRuleConfigRuleParameter>[]>;
        /**
         * The Managed Rule Identifier.
         */
        managedRuleIdentifier: pulumi.Input<string>;
    }

    export interface AggregateCompliancePackConfigRuleConfigRuleParameter {
        /**
         * The Parameter Name.
         */
        parameterName?: pulumi.Input<string>;
        /**
         * The Parameter Value.
         */
        parameterValue?: pulumi.Input<string>;
    }

    export interface AggregateCompliancePackConfigRuleId {
        /**
         * The rule ID of Aggregate Config Rule.
         */
        configRuleId?: pulumi.Input<string>;
    }

    export interface AggregatorAggregatorAccount {
        /**
         * Aggregator account Uid.
         */
        accountId: pulumi.Input<string>;
        /**
         * Aggregator account name.
         */
        accountName: pulumi.Input<string>;
        /**
         * Aggregator account source type. Valid values: `ResourceDirectory`.
         */
        accountType: pulumi.Input<string>;
    }

    export interface CompliancePackConfigRule {
        /**
         * A list of Config Rule Parameters.
         */
        configRuleParameters?: pulumi.Input<pulumi.Input<inputs.cfg.CompliancePackConfigRuleConfigRuleParameter>[]>;
        /**
         * The Managed Rule Identifier.
         */
        managedRuleIdentifier: pulumi.Input<string>;
    }

    export interface CompliancePackConfigRuleConfigRuleParameter {
        /**
         * The parameter name.
         */
        parameterName?: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue?: pulumi.Input<string>;
    }

    export interface CompliancePackConfigRuleId {
        /**
         * The rule ID of Config Rule.
         */
        configRuleId?: pulumi.Input<string>;
    }

}

export namespace chatbot {
}

export namespace clickhouse {
    export interface DbClusterDbClusterAccessWhiteList {
        /**
         * Field `dbClusterIpArrayAttribute` has been removed from provider.
         */
        dbClusterIpArrayAttribute?: pulumi.Input<string>;
        /**
         * Whitelist group name.
         */
        dbClusterIpArrayName?: pulumi.Input<string>;
        /**
         * The IP address list under the whitelist group.
         */
        securityIpList?: pulumi.Input<string>;
    }

}

export namespace cloudauth {
}

export namespace cloudconnect {
}

export namespace cloudfirewall {
    export interface AddressBookEcsTag {
        /**
         * The key of ECS tag that to be matched.
         */
        tagKey?: pulumi.Input<string>;
        /**
         * The value of ECS tag that to be matched.
         */
        tagValue?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallCenLocalVpc {
        /**
         * The connection ID of the network instance.
         */
        attachmentId?: pulumi.Input<string>;
        /**
         * The connection name of the network instance.
         */
        attachmentName?: pulumi.Input<string>;
        /**
         * The list of network segments protected by the VPC firewall.
         */
        defendCidrLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * List of elastic network cards.
         */
        eniLists?: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallCenLocalVpcEniList>[]>;
        manualVswitchId?: pulumi.Input<string>;
        /**
         * The ID of the VPC instance that created the VPC firewall.
         */
        networkInstanceId: pulumi.Input<string>;
        /**
         * The name of the network instance.
         */
        networkInstanceName?: pulumi.Input<string>;
        /**
         * The type of the network instance. Value: **VPC * *.
         */
        networkInstanceType?: pulumi.Input<string>;
        /**
         * The UID of the Alibaba Cloud account to which the VPC belongs.
         */
        ownerId?: pulumi.Input<string>;
        /**
         * The region ID of the VPC.
         */
        regionNo?: pulumi.Input<string>;
        /**
         * Routing mode,. Value:-auto: indicates automatic mode.-manual: indicates manual mode.
         */
        routeMode?: pulumi.Input<string>;
        /**
         * Whether routing mode supports manual mode. Value:-**1**: Supported.-**0**: Not supported.
         */
        supportManualMode?: pulumi.Input<string>;
        /**
         * The ID of the CEN-TR instance.
         */
        transitRouterId?: pulumi.Input<string>;
        /**
         * The version of the cloud enterprise network forwarding router (CEN-TR). Value:-**Basic**: Basic Edition.-**Enterprise**: Enterprise Edition.
         */
        transitRouterType?: pulumi.Input<string>;
        /**
         * The VPC network segment list.
         */
        vpcCidrTableLists?: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallCenLocalVpcVpcCidrTableList>[]>;
        /**
         * The ID of the VPC instance.
         */
        vpcId?: pulumi.Input<string>;
        /**
         * The instance name of the VPC.
         */
        vpcName?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallCenLocalVpcEniList {
        /**
         * The ID of the instance of the ENI in the VPC.
         */
        eniId?: pulumi.Input<string>;
        /**
         * The private IP address of the ENI in the VPC.
         */
        eniPrivateIpAddress?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallCenLocalVpcVpcCidrTableList {
        /**
         * The list of route entries in the VPC.
         */
        routeEntryLists?: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallCenLocalVpcVpcCidrTableListRouteEntryList>[]>;
        /**
         * The ID of the route table of the VPC.
         */
        routeTableId?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallCenLocalVpcVpcCidrTableListRouteEntryList {
        /**
         * The target network segment of the VPC.
         */
        destinationCidr?: pulumi.Input<string>;
        /**
         * The ID of the next hop instance in the VPC.
         */
        nextHopInstanceId?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallLocalVpc {
        /**
         * The ID of the instance of the Eni in the local VPC.
         */
        eniId?: pulumi.Input<string>;
        /**
         * The private IP address of the elastic network card in the local VPC.
         */
        eniPrivateIpAddress?: pulumi.Input<string>;
        /**
         * The network segment list of the local VPC.See the following `Block LocalVpcCidrTableList`.
         */
        localVpcCidrTableLists: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallLocalVpcLocalVpcCidrTableList>[]>;
        /**
         * The region ID of the local VPC.
         */
        regionNo: pulumi.Input<string>;
        /**
         * The ID of the router interface in the local VPC.
         */
        routerInterfaceId?: pulumi.Input<string>;
        /**
         * The ID of the local VPC instance.
         */
        vpcId: pulumi.Input<string>;
        /**
         * The instance name of the local VPC.
         */
        vpcName?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallLocalVpcLocalVpcCidrTableList {
        /**
         * The list of route entries of the local VPC.See the following `Block LocalRouteEntryList`.
         */
        localRouteEntryLists: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallLocalVpcLocalVpcCidrTableListLocalRouteEntryList>[]>;
        /**
         * The ID of the route table of the local VPC.
         */
        localRouteTableId: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallLocalVpcLocalVpcCidrTableListLocalRouteEntryList {
        /**
         * The target network segment of the local VPC.
         */
        localDestinationCidr: pulumi.Input<string>;
        /**
         * The ID of the next-hop instance in the local VPC.
         */
        localNextHopInstanceId: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallPeerVpc {
        /**
         * The ID of the instance of the Eni in the local VPC.
         */
        eniId?: pulumi.Input<string>;
        /**
         * The private IP address of the elastic network card in the local VPC.
         */
        eniPrivateIpAddress?: pulumi.Input<string>;
        /**
         * The network segment list of the peer VPC.See the following `Block PeerVpcCidrTableList`.
         */
        peerVpcCidrTableLists: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallPeerVpcPeerVpcCidrTableList>[]>;
        /**
         * The region ID of the local VPC.
         */
        regionNo: pulumi.Input<string>;
        /**
         * The ID of the router interface in the local VPC.
         */
        routerInterfaceId?: pulumi.Input<string>;
        /**
         * The ID of the local VPC instance.
         */
        vpcId: pulumi.Input<string>;
        /**
         * The instance name of the local VPC.
         */
        vpcName?: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallPeerVpcPeerVpcCidrTableList {
        /**
         * Peer VPC route entry list information.See the following `Block PeerRouteEntryList`.
         */
        peerRouteEntryLists: pulumi.Input<pulumi.Input<inputs.cloudfirewall.FirewallVpcFirewallPeerVpcPeerVpcCidrTableListPeerRouteEntryList>[]>;
        /**
         * The ID of the route table of the peer VPC.
         */
        peerRouteTableId: pulumi.Input<string>;
    }

    export interface FirewallVpcFirewallPeerVpcPeerVpcCidrTableListPeerRouteEntryList {
        /**
         * The target network segment of the peer VPC.
         */
        peerDestinationCidr: pulumi.Input<string>;
        /**
         * The ID of the next-hop instance in the peer VPC.
         */
        peerNextHopInstanceId: pulumi.Input<string>;
    }

}

export namespace cloudsso {
    export interface AccessConfigurationPermissionPolicy {
        /**
         * The Content of Policy.
         */
        permissionPolicyDocument?: pulumi.Input<string>;
        /**
         * The Policy Name of policy. The name of the resource.
         */
        permissionPolicyName: pulumi.Input<string>;
        /**
         * The Policy Type of policy. Valid values: `System`, `Inline`.
         */
        permissionPolicyType: pulumi.Input<string>;
    }

    export interface DirectorySamlIdentityProviderConfiguration {
        /**
         * Base64 encoded IdP metadata document. **NOTE:** If the IdP Metadata has been uploaded, no update will be made if this parameter is not specified, otherwise the update will be made according to the parameter content. If IdP Metadata has not been uploaded, and the parameter `ssoStatus` is `Enabled`, this parameter must be provided. If the IdP Metadata has not been uploaded, and the parameter `ssoStatus` is `Disabled`, this parameter can be omitted, and the IdP Metadata will remain empty.
         */
        encodedMetadataDocument?: pulumi.Input<string>;
        /**
         * SAML SSO login enabled status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
         */
        ssoStatus?: pulumi.Input<string>;
    }

}

export namespace cloudstoragegateway {
}

export namespace cms {
    export interface AlarmEscalationsCritical {
        /**
         * Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * It has been deprecated from provider version 1.94.0 and 'escalations_critical.statistics' instead.
         */
        statistics?: pulumi.Input<string>;
        /**
         * It has been deprecated from provider version 1.94.0 and 'escalations_critical.threshold' instead.
         */
        threshold?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface AlarmEscalationsInfo {
        /**
         * Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * It has been deprecated from provider version 1.94.0 and 'escalations_critical.statistics' instead.
         */
        statistics?: pulumi.Input<string>;
        /**
         * It has been deprecated from provider version 1.94.0 and 'escalations_critical.threshold' instead.
         */
        threshold?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface AlarmEscalationsWarn {
        /**
         * Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * It has been deprecated from provider version 1.94.0 and 'escalations_critical.statistics' instead.
         */
        statistics?: pulumi.Input<string>;
        /**
         * It has been deprecated from provider version 1.94.0 and 'escalations_critical.threshold' instead.
         */
        threshold?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface AlarmPrometheus {
        /**
         * The annotations of the Prometheus alert rule. When a Prometheus alert is triggered, the system renders the annotated keys and values to help you understand the metrics and alert rule.
         */
        annotations?: pulumi.Input<{[key: string]: any}>;
        /**
         * The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
         */
        level?: pulumi.Input<string>;
        /**
         * The PromQL query statement. **Note:** The data obtained by using the PromQL query statement is the monitoring data. You must include the alert threshold in this statement.
         */
        promQl?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface DynamicTagGroupMatchExpress {
        /**
         * The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
         */
        tagValue: pulumi.Input<string>;
        /**
         * Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
         */
        tagValueMatchFunction: pulumi.Input<string>;
    }

    export interface EventRuleEventPattern {
        /**
         * The type of the event-triggered alert rule. Valid values:
         */
        eventTypeLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The level of the event-triggered alert rule. Valid values:
         */
        levelLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the event-triggered alert rule.
         */
        nameLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The type of the cloud service.
         */
        product: pulumi.Input<string>;
        /**
         * The SQL condition that is used to filter events. If the content of an event meets the specified SQL condition, an alert is automatically triggered.
         */
        sqlFilter?: pulumi.Input<string>;
    }

    export interface GroupMetricRuleEscalations {
        /**
         * The critical level.
         */
        critical?: pulumi.Input<inputs.cms.GroupMetricRuleEscalationsCritical>;
        /**
         * The info level.
         */
        info?: pulumi.Input<inputs.cms.GroupMetricRuleEscalationsInfo>;
        /**
         * The warn level.
         */
        warn?: pulumi.Input<inputs.cms.GroupMetricRuleEscalationsWarn>;
    }

    export interface GroupMetricRuleEscalationsCritical {
        /**
         * The comparison operator of the threshold for critical-level alerts.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for critical-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for critical-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
         */
        times?: pulumi.Input<number>;
    }

    export interface GroupMetricRuleEscalationsInfo {
        /**
         * The comparison operator of the threshold for critical-level alerts.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for critical-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for critical-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
         */
        times?: pulumi.Input<number>;
    }

    export interface GroupMetricRuleEscalationsWarn {
        /**
         * The comparison operator of the threshold for critical-level alerts.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for critical-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for critical-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
         */
        times?: pulumi.Input<number>;
    }

    export interface GroupMetricRuleTarget {
        /**
         * The Alibaba Cloud Resource Name (ARN) of the resource.
         */
        arn?: pulumi.Input<string>;
        /**
         * The ID of the resource for which alerts are triggered.
         */
        id?: pulumi.Input<string>;
        /**
         * The parameters of the alert callback. The parameters are in the JSON format.
         */
        jsonParams?: pulumi.Input<string>;
        /**
         * The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
         */
        level?: pulumi.Input<string>;
    }

    export interface HybridMonitorSlsTaskAttachLabel {
        /**
         * The tag key of the metric.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the key that is used to filter logs imported from Log Service.
         */
        value?: pulumi.Input<string>;
    }

    export interface HybridMonitorSlsTaskSlsProcessConfig {
        /**
         * The extended fields that specify the results of basic operations that are performed on aggregation results. See the following `Block express`.
         */
        expresses?: pulumi.Input<pulumi.Input<inputs.cms.HybridMonitorSlsTaskSlsProcessConfigExpress>[]>;
        /**
         * The conditions that are used to filter logs imported from Log Service. See the following `Block filter`.
         */
        filter?: pulumi.Input<inputs.cms.HybridMonitorSlsTaskSlsProcessConfigFilter>;
        /**
         * The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL. See the following `Block groupBy`.
         */
        groupBies?: pulumi.Input<pulumi.Input<inputs.cms.HybridMonitorSlsTaskSlsProcessConfigGroupBy>[]>;
        /**
         * The method that is used to aggregate logs imported from Log Service. See the following `Block statistics`.
         */
        statistics?: pulumi.Input<pulumi.Input<inputs.cms.HybridMonitorSlsTaskSlsProcessConfigStatistic>[]>;
    }

    export interface HybridMonitorSlsTaskSlsProcessConfigExpress {
        /**
         * The alias of the aggregation result.
         */
        alias?: pulumi.Input<string>;
        /**
         * The extended fields that specify the results of basic operations that are performed on aggregation results. See the following `Block express`.
         */
        express?: pulumi.Input<string>;
    }

    export interface HybridMonitorSlsTaskSlsProcessConfigFilter {
        /**
         * The conditions that are used to filter logs imported from Log Service. See the following `Block filters`.
         */
        filters?: pulumi.Input<pulumi.Input<inputs.cms.HybridMonitorSlsTaskSlsProcessConfigFilterFilter>[]>;
        /**
         * The relationship between multiple filter conditions. Valid values: `and`(default value), `or`.
         */
        relation?: pulumi.Input<string>;
    }

    export interface HybridMonitorSlsTaskSlsProcessConfigFilterFilter {
        /**
         * The method that is used to filter logs imported from Log Service. Valid values: `>`, `>=`, `=`, `<=`, `<`, `!=`, `contain`, `notContain`.
         */
        operator?: pulumi.Input<string>;
        /**
         * The name of the key that is used to aggregate logs imported from Log Service.
         */
        slsKeyName?: pulumi.Input<string>;
        /**
         * The value of the key that is used to filter logs imported from Log Service.
         */
        value?: pulumi.Input<string>;
    }

    export interface HybridMonitorSlsTaskSlsProcessConfigGroupBy {
        /**
         * The alias of the aggregation result.
         */
        alias?: pulumi.Input<string>;
        /**
         * The name of the key that is used to aggregate logs imported from Log Service.
         */
        slsKeyName?: pulumi.Input<string>;
    }

    export interface HybridMonitorSlsTaskSlsProcessConfigStatistic {
        /**
         * The alias of the aggregation result.
         */
        alias?: pulumi.Input<string>;
        /**
         * The function that is used to aggregate log data within a statistical period. Valid values: `count`, `sum`, `avg`, `max`, `min`, `value`, `countps`, `sumps`, `distinct`, `distribution`, `percentile`.
         */
        function?: pulumi.Input<string>;
        /**
         * The value of the function that is used to aggregate logs imported from Log Service.
         * - If you set the `function` parameter to `distribution`, this parameter specifies the lower limit of the statistical interval. For example, if you want to calculate the number of HTTP requests whose status code is 2XX, set this parameter to 200.
         * - If you set the `function` parameter to `percentile`, this parameter specifies the percentile at which the expected value is. For example, 0.5 specifies P50.
         */
        parameterOne?: pulumi.Input<string>;
        /**
         * The value of the function that is used to aggregate logs imported from Log Service. **Note:** This parameter is required only if the `function` parameter is set to `distribution`. This parameter specifies the upper limit of the statistical interval.
         */
        parameterTwo?: pulumi.Input<string>;
        /**
         * The name of the key that is used to aggregate logs imported from Log Service.
         */
        slsKeyName?: pulumi.Input<string>;
    }

    export interface MetricRuleBlackListMetric {
        /**
         * The name of the monitoring indicator.
         */
        metricName: pulumi.Input<string>;
        /**
         * The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
         */
        resource?: pulumi.Input<string>;
    }

    export interface MetricRuleTemplateAlertTemplate {
        /**
         * The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
         */
        category: pulumi.Input<string>;
        /**
         * The information about the trigger condition based on the alert level. See the following `Block escalations`.
         */
        escalations?: pulumi.Input<inputs.cms.MetricRuleTemplateAlertTemplateEscalations>;
        /**
         * The name of the metric.
         */
        metricName: pulumi.Input<string>;
        /**
         * The namespace of the service.
         */
        namespace: pulumi.Input<string>;
        /**
         * The name of the alert rule.
         */
        ruleName: pulumi.Input<string>;
        /**
         * The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
         */
        webhook?: pulumi.Input<string>;
    }

    export interface MetricRuleTemplateAlertTemplateEscalations {
        /**
         * The condition for triggering critical-level alerts. See the following `Block critical`.
         */
        critical?: pulumi.Input<inputs.cms.MetricRuleTemplateAlertTemplateEscalationsCritical>;
        /**
         * The condition for triggering info-level alerts. See the following `Block info`.
         */
        info?: pulumi.Input<inputs.cms.MetricRuleTemplateAlertTemplateEscalationsInfo>;
        /**
         * The condition for triggering warn-level alerts. See the following `Block warn`.
         */
        warn?: pulumi.Input<inputs.cms.MetricRuleTemplateAlertTemplateEscalationsWarn>;
    }

    export interface MetricRuleTemplateAlertTemplateEscalationsCritical {
        /**
         * The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for warn-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for warn-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
         */
        times?: pulumi.Input<string>;
    }

    export interface MetricRuleTemplateAlertTemplateEscalationsInfo {
        /**
         * The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for warn-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for warn-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
         */
        times?: pulumi.Input<string>;
    }

    export interface MetricRuleTemplateAlertTemplateEscalationsWarn {
        /**
         * The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for warn-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for warn-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
         */
        times?: pulumi.Input<string>;
    }

    export interface MonitorGroupInstancesInstance {
        /**
         * The category of instance.
         */
        category: pulumi.Input<string>;
        /**
         * The id of instance.
         */
        instanceId: pulumi.Input<string>;
        /**
         * The name of instance.
         */
        instanceName: pulumi.Input<string>;
        /**
         * The region id of instance.
         */
        regionId: pulumi.Input<string>;
    }

    export interface SiteMonitorIspCity {
        city: pulumi.Input<string>;
        isp: pulumi.Input<string>;
    }

    export interface SlsGroupSlsGroupConfig {
        /**
         * The name of the Log Store.
         */
        slsLogstore: pulumi.Input<string>;
        /**
         * The name of the Project.
         */
        slsProject: pulumi.Input<string>;
        /**
         * The Sls Region.
         */
        slsRegion: pulumi.Input<string>;
        /**
         * The ID of the Sls User.
         */
        slsUserId?: pulumi.Input<string>;
    }
}

export namespace config {
}

export namespace cr {
    export interface ChainChainConfig {
        /**
         * Each node in the delivery chain.
         */
        nodes?: pulumi.Input<pulumi.Input<inputs.cr.ChainChainConfigNode>[]>;
        /**
         * Execution sequence relationship between delivery chain nodes.
         */
        routers?: pulumi.Input<pulumi.Input<inputs.cr.ChainChainConfigRouter>[]>;
    }

    export interface ChainChainConfigNode {
        /**
         * Whether to enable the delivery chain node. Valid values: `true`, `false`.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * The configuration of delivery chain node.
         */
        nodeConfigs?: pulumi.Input<pulumi.Input<inputs.cr.ChainChainConfigNodeNodeConfig>[]>;
        /**
         * The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
         */
        nodeName?: pulumi.Input<string>;
    }

    export interface ChainChainConfigNodeNodeConfig {
        /**
         * Blocking rules for scanning nodes in delivery chain nodes. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
         */
        denyPolicies?: pulumi.Input<pulumi.Input<inputs.cr.ChainChainConfigNodeNodeConfigDenyPolicy>[]>;
    }

    export interface ChainChainConfigNodeNodeConfigDenyPolicy {
        /**
         * The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
         */
        action?: pulumi.Input<string>;
        /**
         * The count of scanning vulnerabilities that triggers blocking.
         */
        issueCount?: pulumi.Input<string>;
        /**
         * The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
         */
        issueLevel?: pulumi.Input<string>;
        /**
         * The logic of trigger blocking. Valid values: `AND`, `OR`.
         */
        logic?: pulumi.Input<string>;
    }

    export interface ChainChainConfigRouter {
        /**
         * Source node.
         */
        froms?: pulumi.Input<pulumi.Input<inputs.cr.ChainChainConfigRouterFrom>[]>;
        /**
         * Destination node.
         */
        tos?: pulumi.Input<pulumi.Input<inputs.cr.ChainChainConfigRouterTo>[]>;
    }

    export interface ChainChainConfigRouterFrom {
        /**
         * The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
         */
        nodeName?: pulumi.Input<string>;
    }

    export interface ChainChainConfigRouterTo {
        /**
         * The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
         */
        nodeName?: pulumi.Input<string>;
    }

    export interface RepoDomainList {
        /**
         * Domain of internal endpoint, only in some regions.
         */
        internal?: pulumi.Input<string>;
        /**
         * Domain of public endpoint.
         */
        public?: pulumi.Input<string>;
        /**
         * Domain of vpc endpoint.
         */
        vpc?: pulumi.Input<string>;
    }
}

export namespace cs {
    export interface ApplicationService {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface ClusterNode {
        eip?: pulumi.Input<string>;
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        privateIp?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesCertificateAuthority {
        /**
         * The path of client certificate, like `~/.kube/client-cert.pem`.
         */
        clientCert?: pulumi.Input<string>;
        /**
         * The path of client key, like `~/.kube/client-key.pem`.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         */
        clusterCert?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesConnections {
        /**
         * API Server Internet endpoint.
         */
        apiServerInternet?: pulumi.Input<string>;
        /**
         * API Server Intranet endpoint.
         */
        apiServerIntranet?: pulumi.Input<string>;
        /**
         * Master node SSH IP address.
         */
        masterPublicIp?: pulumi.Input<string>;
        /**
         * Service Access Domain.
         */
        serviceDomain?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesLogConfig {
        /**
         * Log Service project name, cluster logs will output to this project.
         */
        project?: pulumi.Input<string>;
        /**
         * Type of collecting logs, only `SLS` are supported currently.
         */
        type: pulumi.Input<string>;
    }

    export interface EdgeKubernetesRuntime {
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         */
        version?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesWorkerDataDisk {
        /**
         * Worker node data disk auto snapshot policy.
         */
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The type of the data disks. Valid values: `cloud`, `cloudEfficiency`, `cloudSsd` and `cloudEssd`. Default to `cloudEfficiency`.
         */
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        /**
         * Specifies whether to encrypt data disks. Valid values: true and false. Default is `false`.
         */
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * Worker node data disk performance level, when `category` values `cloudEssd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity. For more information, see [Enhanced SSDs](https://www.alibabacloud.com/help/doc-detail/122389.htm). Default is `PL1`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of a data disk, at least 40. Unit: GiB.
         */
        size?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesWorkerNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface GetKubernetesAddonsAddon {
        /**
         * The current custom configuration of the addon. **Note:** Available in v1.166.0+
         */
        currentConfig?: string;
        /**
         * The current version of addon, if this field is an empty string, it means that the addon is not installed.
         */
        currentVersion?: string;
        /**
         * The name of addon.
         */
        name?: string;
        /**
         * The next version of this addon can be upgraded to.
         */
        nextVersion?: string;
        /**
         * Whether the addon is a system addon.
         */
        required?: boolean;
    }

    export interface GetKubernetesAddonsAddonArgs {
        /**
         * The current custom configuration of the addon. **Note:** Available in v1.166.0+
         */
        currentConfig?: pulumi.Input<string>;
        /**
         * The current version of addon, if this field is an empty string, it means that the addon is not installed.
         */
        currentVersion?: pulumi.Input<string>;
        /**
         * The name of addon.
         */
        name?: pulumi.Input<string>;
        /**
         * The next version of this addon can be upgraded to.
         */
        nextVersion?: pulumi.Input<string>;
        /**
         * Whether the addon is a system addon.
         */
        required?: pulumi.Input<boolean>;
    }

    export interface GetKubernetesPermissionPermission {
        /**
         * ndicates whether the permissions are granted to the cluster owner. Valid values `0`, `1`.
         */
        isOwner?: boolean;
        /**
         * Indicates whether the permissions are granted to the RAM role. Valid values `0`,`1`.
         */
        isRamRole?: boolean;
        /**
         * The permission settings to manage ACK clusters.
         */
        resourceId: string;
        /**
         * The authorization type. Valid values `cluster`, `namespace` and `console`.
         */
        resourceType: string;
        /**
         * The name of the predefined role. If a custom role is assigned, the value is the name of the assigined custom role.
         */
        roleName: string;
        /**
         * The predefined role. Valid values `admin`,`ops`,`dev`,`restricted` and `custom`.
         */
        roleType?: string;
    }

    export interface GetKubernetesPermissionPermissionArgs {
        /**
         * ndicates whether the permissions are granted to the cluster owner. Valid values `0`, `1`.
         */
        isOwner?: pulumi.Input<boolean>;
        /**
         * Indicates whether the permissions are granted to the RAM role. Valid values `0`,`1`.
         */
        isRamRole?: pulumi.Input<boolean>;
        /**
         * The permission settings to manage ACK clusters.
         */
        resourceId: pulumi.Input<string>;
        /**
         * The authorization type. Valid values `cluster`, `namespace` and `console`.
         */
        resourceType: pulumi.Input<string>;
        /**
         * The name of the predefined role. If a custom role is assigned, the value is the name of the assigined custom role.
         */
        roleName: pulumi.Input<string>;
        /**
         * The predefined role. Valid values `admin`,`ops`,`dev`,`restricted` and `custom`.
         */
        roleType?: pulumi.Input<string>;
    }

    export interface KubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface KubernetesAutoscalerNodepool {
        id?: pulumi.Input<string>;
        labels?: pulumi.Input<string>;
        taints?: pulumi.Input<string>;
    }

    export interface KubernetesCertificateAuthority {
        /**
         * The path of client certificate, like `~/.kube/client-cert.pem`.
         */
        clientCert?: pulumi.Input<string>;
        /**
         * The path of client key, like `~/.kube/client-key.pem`.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         */
        clusterCert?: pulumi.Input<string>;
    }

    export interface KubernetesConnections {
        /**
         * API Server Internet endpoint.
         */
        apiServerInternet?: pulumi.Input<string>;
        /**
         * API Server Intranet endpoint.
         */
        apiServerIntranet?: pulumi.Input<string>;
        /**
         * Master node SSH IP address.
         */
        masterPublicIp?: pulumi.Input<string>;
        /**
         * Service Access Domain.
         */
        serviceDomain?: pulumi.Input<string>;
    }

    export interface KubernetesMasterNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface KubernetesPermissionPermission {
        /**
         * The ID of the cluster that you want to manage.
         */
        cluster: pulumi.Input<string>;
        /**
         * Specifies whether to perform a custom authorization. To perform a custom authorization, set `roleName` to a custom cluster role.
         */
        isCustom?: pulumi.Input<boolean>;
        /**
         * Specifies whether the permissions are granted to a RAM role. When `uid` is ram role id, the value of `isRamRole` must be `true`.
         */
        isRamRole?: pulumi.Input<boolean>;
        /**
         * The namespace to which the permissions are scoped. This parameter is required only if you set roleType to namespace.
         */
        namespace?: pulumi.Input<string>;
        /**
         * Specifies the predefined role that you want to assign. Valid values `admin`, `ops`, `dev`, `restricted` and the custom cluster roles.
         */
        roleName: pulumi.Input<string>;
        /**
         * The authorization type. Valid values `cluster`, `namespace`.
         */
        roleType: pulumi.Input<string>;
    }

    export interface KubernetesRuntime {
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         */
        version?: pulumi.Input<string>;
    }

    export interface KubernetesTaint {
        effect?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface KubernetesWorkerDataDisk {
        /**
         * (Optional, Available in 1.120.0+) Worker node data disk auto snapshot policy.
         */
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The type of the data disks. Valid values: `cloud`, `cloudEfficiency`, `cloudSsd` and `cloudEssd`. Default to `cloudEfficiency`.
         */
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        /**
         * Specifies whether to encrypt data disks. Valid values: true and false.
         */
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * (Optional, Available in 1.120.0+) Worker node data disk performance level, when `category` values `cloudEssd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity. For more information, see [Enhanced SSDs](https://www.alibabacloud.com/help/doc-detail/122389.htm). Default is `PL1`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of a data disk, Its valid value range [40~32768] in GB. Unit: GiB.
         */
        size?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface KubernetesWorkerNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesCertificateAuthority {
        /**
         * The path of client certificate, like `~/.kube/client-cert.pem`.
         */
        clientCert?: pulumi.Input<string>;
        /**
         * The path of client key, like `~/.kube/client-key.pem`.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         */
        clusterCert?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesConnections {
        /**
         * API Server Internet endpoint.
         */
        apiServerInternet?: pulumi.Input<string>;
        /**
         * API Server Intranet endpoint.
         */
        apiServerIntranet?: pulumi.Input<string>;
        /**
         * Master node SSH IP address.
         */
        masterPublicIp?: pulumi.Input<string>;
        /**
         * Service Access Domain.
         */
        serviceDomain?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesMaintenanceWindow {
        /**
         * The maintenance time, values range from 1 to 24,unit is hour. For example: "3h".
         */
        duration: pulumi.Input<string>;
        /**
         * Whether to open the maintenance window. The following parameters take effect only `enable = true`.
         */
        enable: pulumi.Input<boolean>;
        /**
         * Initial maintenance time, For example:"03:00:00Z".
         */
        maintenanceTime: pulumi.Input<string>;
        /**
         * Maintenance cycle, you can set the values from Monday to Sunday, separated by commas when the values are multiple. The default is Thursday.
         */
        weeklyPeriod: pulumi.Input<string>;
    }

    export interface ManagedKubernetesRrsaMetadata {
        /**
         * Whether the RRSA feature has been enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The arn of OIDC provider that was registered in RAM.
         */
        ramOidcProviderArn?: pulumi.Input<string>;
        /**
         * The name of OIDC Provider that was registered in RAM.
         */
        ramOidcProviderName?: pulumi.Input<string>;
        /**
         * The issuer URL of RRSA OIDC Token.
         */
        rrsaOidcIssuerUrl?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesRuntime {
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         */
        version?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesTaint {
        effect?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesWorkerDataDisk {
        /**
         * (Optional, Available in 1.120.0+) Worker node data disk auto snapshot policy.
         */
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The type of the data disks. Valid values: `cloud`, `cloudEfficiency`, `cloudSsd` and `cloudEssd`. Default to `cloudEfficiency`.
         */
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        /**
         * Specifies whether to encrypt data disks. Valid values: true and false. Default to `false`.
         */
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * (Optional, Available in 1.120.0+) Worker node data disk performance level, when `category` values `cloudEssd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity. For more information, see [Enhanced SSDs](https://www.alibabacloud.com/help/doc-detail/122389.htm). Default is `PL1`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of a data disk, at least 40. Unit: GiB.
         */
        size?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesWorkerNode {
        /**
         * (Deprecated from version 1.177.0) ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * (Deprecated from version 1.177.0) The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface NodePoolDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The type of the data disks. Valid values:`cloud`, `cloudEfficiency`, `cloudSsd` and `cloudEssd`.
         */
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        /**
         * Specifies whether to encrypt data disks. Valid values: true and false. Default to `false`.
         */
        encrypted?: pulumi.Input<string>;
        /**
         * The kms key id used to encrypt the data disk. It takes effect when `encrypted` is true.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The name of node pool.
         */
        name?: pulumi.Input<string>;
        /**
         * Worker node data disk performance level, when `category` values `cloudEssd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity. For more information, see [Enhanced SSDs](https://www.alibabacloud.com/help/doc-detail/122389.htm). Default is `PL1`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of a data disk, Its valid value range [40~32768] in GB. Default to `40`.
         */
        size?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface NodePoolKubeletConfiguration {
        /**
         * Same as cpuManagerPolicy. The name of the policy to use. Requires the CPUManager feature gate to be enabled. Valid value is `none` or `static`.
         */
        cpuManagerPolicy?: pulumi.Input<string>;
        /**
         * Same as eventBurst. The maximum size of a burst of event creations, temporarily allows event creations to burst to this number, while still not exceeding `eventRecordQps`. It is only used when `eventRecordQps` is greater than 0. Valid value is `[0-100]`.
         */
        eventBurst?: pulumi.Input<string>;
        /**
         * Same as eventRecordQPS. The maximum event creations per second. If 0, there is no limit enforced. Valid value is `[0-50]`.
         */
        eventRecordQps?: pulumi.Input<string>;
        /**
         * Same as evictionHard. The map of signal names to quantities that defines hard eviction thresholds. For example: `{"memory.available" = "300Mi"}`.
         */
        evictionHard?: pulumi.Input<{[key: string]: any}>;
        /**
         * Same as evictionSoft. The map of signal names to quantities that defines soft eviction thresholds. For example: `{"memory.available" = "300Mi"}`.
         */
        evictionSoft?: pulumi.Input<{[key: string]: any}>;
        /**
         * Same as evictionSoftGracePeriod. The map of signal names to quantities that defines grace periods for each soft eviction signal. For example: `{"memory.available" = "30s"}`.
         */
        evictionSoftGracePeriod?: pulumi.Input<{[key: string]: any}>;
        /**
         * Same as kubeAPIBurst. The burst to allow while talking with kubernetes api-server. Valid value is `[0-100]`.
         */
        kubeApiBurst?: pulumi.Input<string>;
        /**
         * Same as kubeAPIQPS. The QPS to use while talking with kubernetes api-server. Valid value is `[0-50]`.
         */
        kubeApiQps?: pulumi.Input<string>;
        /**
         * Same as kubeReserved. The set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. Currently, cpu, memory and local storage for root file system are supported. See [compute resources](http://kubernetes.io/docs/user-guide/compute-resources) for more details.
         */
        kubeReserved?: pulumi.Input<{[key: string]: any}>;
        /**
         * Same as registryBurst. The maximum size of burst pulls, temporarily allows pulls to burst to this number, while still not exceeding `registryPullQps`. Only used if `registryPullQps` is greater than 0. Valid value is `[0-100]`.
         */
        registryBurst?: pulumi.Input<string>;
        /**
         * Same as registryPullQPS. The limit of registry pulls per second. Setting it to `0` means no limit. Valid value is `[0-50]`.
         */
        registryPullQps?: pulumi.Input<string>;
        /**
         * Same as serializeImagePulls. When enabled, it tells the Kubelet to pull images one at a time. We recommend not changing the default value on nodes that run docker daemon with version < 1.9 or an Aufs storage backend. Valid value is `true` or `false`.
         */
        serializeImagePulls?: pulumi.Input<string>;
        /**
         * Same as systemReserved. The set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. Currently, only cpu and memory are supported. See [compute resources](http://kubernetes.io/docs/user-guide/compute-resources) for more details.
         */
        systemReserved?: pulumi.Input<{[key: string]: any}>;
    }

    export interface NodePoolLabel {
        /**
         * The label key.
         */
        key: pulumi.Input<string>;
        /**
         * The label value.
         */
        value?: pulumi.Input<string>;
    }

    export interface NodePoolManagement {
        /**
         * Whether automatic repair, Default to `false`.
         */
        autoRepair?: pulumi.Input<boolean>;
        /**
         * Whether auto upgrade, Default to `false`.
         */
        autoUpgrade?: pulumi.Input<boolean>;
        /**
         * Max number of unavailable nodes. Default to `1`.
         */
        maxUnavailable: pulumi.Input<number>;
        /**
         * Number of additional nodes. You have to specify one of surge, surge_percentage.
         */
        surge?: pulumi.Input<number>;
        /**
         * Proportion of additional nodes. You have to specify one of surge, surge_percentage.
         */
        surgePercentage?: pulumi.Input<number>;
    }

    export interface NodePoolRollingPolicy {
        /**
         * Maximum parallel number nodes during rolling upgrade. The value of this field should be greater than `0`, and if it's set to a number less than or equal to `0`, the default setting will be used.
         */
        maxParallelism?: pulumi.Input<number>;
    }

    export interface NodePoolRolloutPolicy {
        /**
         * Maximum number of unavailable nodes during rolling upgrade. The value of this field should be greater than `0`, and if it's set to a number less than or equal to `0`, the default setting will be used. Please use `maxParallelism` to instead it from provider version 1.185.0.
         */
        maxUnavailable?: pulumi.Input<number>;
    }

    export interface NodePoolScalingConfig {
        /**
         * Peak EIP bandwidth. Its valid value range [1~500] in Mbps. Default to `5`.
         */
        eipBandwidth?: pulumi.Input<number>;
        /**
         * EIP billing type. `PayByBandwidth`: Charged at fixed bandwidth. `PayByTraffic`: Billed as used traffic. Default: `PayByBandwidth`. Conflict with `internetChargeType`, EIP and public network IP can only choose one.
         */
        eipInternetChargeType?: pulumi.Input<string>;
        /**
         * Whether to bind EIP for an instance. Default: `false`.
         */
        isBondEip?: pulumi.Input<boolean>;
        /**
         * Max number of instances in a auto scaling group, its valid value range [0~1000]. `maxSize` has to be greater than `minSize`.
         */
        maxSize: pulumi.Input<number>;
        /**
         * Min number of instances in a auto scaling group, its valid value range [0~1000].
         */
        minSize: pulumi.Input<number>;
        /**
         * Instance classification, not required. Vaild value: `cpu`, `gpu`, `gpushare` and `spot`. Default: `cpu`. The actual instance type is determined by `instanceTypes`.
         */
        type?: pulumi.Input<string>;
    }

    export interface NodePoolSpotPriceLimit {
        /**
         * Spot instance type.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * The maximum hourly price of the spot instance. A maximum of three decimal places are allowed.
         */
        priceLimit?: pulumi.Input<string>;
    }

    export interface NodePoolTaint {
        effect?: pulumi.Input<string>;
        /**
         * The label key.
         */
        key: pulumi.Input<string>;
        /**
         * The label value.
         */
        value?: pulumi.Input<string>;
    }

    export interface ServerlessKubernetesAddon {
        /**
         * The ACK add-on configurations.
         */
        config?: pulumi.Input<string>;
        /**
         * Disables the automatic installation of a component. Default is `false`.
         */
        disabled?: pulumi.Input<boolean>;
        /**
         * Name of the ACK add-on. The name must match one of the names returned by [DescribeAddons](https://help.aliyun.com/document_detail/171524.html).
         */
        name?: pulumi.Input<string>;
    }

    export interface ServerlessKubernetesRrsaMetadata {
        /**
         * Whether the RRSA feature has been enabled.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The arn of OIDC provider that was registered in RAM.
         */
        ramOidcProviderArn?: pulumi.Input<string>;
        /**
         * The name of OIDC Provider that was registered in RAM.
         */
        ramOidcProviderName?: pulumi.Input<string>;
        /**
         * The issuer URL of RRSA OIDC Token.
         */
        rrsaOidcIssuerUrl?: pulumi.Input<string>;
    }

    export interface SwarmNode {
        eip?: pulumi.Input<string>;
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        privateIp?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
    }
}

export namespace databasefilesystem {
    export interface InstanceEcsList {
        /**
         * The ID of the ECS instance.
         */
        ecsId?: pulumi.Input<string>;
    }
}

export namespace databasegateway {
}

export namespace dataworks {
}

export namespace dbs {
}

export namespace dcdn {
    export interface DomainConfigFunctionArg {
        /**
         * The name of arg.
         */
        argName: pulumi.Input<string>;
        /**
         * The value of arg.
         */
        argValue: pulumi.Input<string>;
    }

    export interface DomainSource {
        /**
         * The origin address.
         */
        content: pulumi.Input<string>;
        /**
         * The port number. Valid values: `443` and `80`. Default to `80`.
         */
        port?: pulumi.Input<number>;
        /**
         * The priority of the origin if multiple origins are specified. Default to `20`.
         */
        priority?: pulumi.Input<string>;
        /**
         * The type of the origin. Valid values:
         * `ipaddr`: The origin is configured using an IP address.
         * `domain`: The origin is configured using a domain name.
         * `oss`: The origin is configured using the Internet domain name of an Alibaba Cloud Object Storage Service (OSS) bucket.
         */
        type: pulumi.Input<string>;
        /**
         * The weight of the origin if multiple origins are specified. Default to `10`.
         */
        weight?: pulumi.Input<string>;
    }

    export interface ErEnvConf {
        /**
         * The configuration of a presetCanaryAnhui environment. The `Block presetCanaryAnhui` is same as `Block staging`.
         */
        presetCanaryAnhui?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryAnhui>;
        /**
         * The configuration of a presetCanaryBeijing environment. The `Block presetCanaryBeijing` is same as `Block staging`.
         */
        presetCanaryBeijing?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryBeijing>;
        /**
         * The configuration of a presetCanaryChongqing environment. The `Block presetCanaryChongqing` is same as `Block staging`.
         */
        presetCanaryChongqing?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryChongqing>;
        /**
         * The configuration of a presetCanaryFujian environment. The `Block presetCanaryFujian` is same as `Block staging`.
         */
        presetCanaryFujian?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryFujian>;
        /**
         * The configuration of a presetCanaryGansu environment. The `Block presetCanaryGansu` is same as `Block staging`.
         */
        presetCanaryGansu?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryGansu>;
        /**
         * The configuration of a presetCanaryGuangdong environment. The `Block presetCanaryGuangdong` is same as `Block staging`.
         */
        presetCanaryGuangdong?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryGuangdong>;
        /**
         * The configuration of a presetCanaryGuangxi environment. The `Block presetCanaryGuangxi` is same as `Block staging`.
         */
        presetCanaryGuangxi?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryGuangxi>;
        /**
         * The configuration of a presetCanaryGuizhou environment. The `Block presetCanaryGuizhou` is same as `Block staging`.
         */
        presetCanaryGuizhou?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryGuizhou>;
        /**
         * The configuration of a presetCanaryHainan environment. The `Block presetCanaryHainan` is same as `Block staging`.
         */
        presetCanaryHainan?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHainan>;
        /**
         * The configuration of a presetCanaryHebei environment. The `Block presetCanaryHebei` is same as `Block staging`.
         */
        presetCanaryHebei?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHebei>;
        /**
         * The configuration of a presetCanaryHeilongjiang environment. The `Block presetCanaryHeilongjiang` is same as `Block staging`.
         */
        presetCanaryHeilongjiang?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHeilongjiang>;
        /**
         * The configuration of a presetCanaryHenan environment. The `Block presetCanaryHenan` is same as `Block staging`.
         */
        presetCanaryHenan?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHenan>;
        /**
         * The configuration of a presetCanaryHongKong environment. The `Block presetCanaryHongKong` is same as `Block staging`.
         */
        presetCanaryHongKong?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHongKong>;
        /**
         * The configuration of a presetCanaryHubei environment. The `Block presetCanaryHubei` is same as `Block staging`.
         */
        presetCanaryHubei?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHubei>;
        /**
         * The configuration of a presetCanaryHunan environment. The `Block presetCanaryHunan` is same as `Block staging`.
         */
        presetCanaryHunan?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryHunan>;
        /**
         * The configuration of a presetCanaryJiangsu environment. The `Block presetCanaryJiangsu` is same as `Block staging`.
         */
        presetCanaryJiangsu?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryJiangsu>;
        /**
         * The configuration of a presetCanaryJiangxi environment. The `Block presetCanaryJiangxi` is same as `Block staging`.
         */
        presetCanaryJiangxi?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryJiangxi>;
        /**
         * The configuration of a presetCanaryJilin environment. The `Block presetCanaryJilin` is same as `Block staging`.
         */
        presetCanaryJilin?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryJilin>;
        /**
         * The configuration of a presetCanaryLiaoning environment. The `Block presetCanaryLiaoning` is same as `Block staging`.
         */
        presetCanaryLiaoning?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryLiaoning>;
        /**
         * The configuration of a presetCanaryMacau environment. The `Block presetCanaryMacau` is same as `Block staging`.
         */
        presetCanaryMacau?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryMacau>;
        /**
         * The configuration of a presetCanaryNeimenggu environment. The `Block presetCanaryNeimenggu` is same as `Block staging`.
         */
        presetCanaryNeimenggu?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryNeimenggu>;
        /**
         * The configuration of a presetCanaryNingxia environment. The `Block presetCanaryNingxia` is same as `Block staging`.
         */
        presetCanaryNingxia?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryNingxia>;
        /**
         * The configuration of a presetCanaryOverseas environment. The `Block presetCanaryOverseas` is same as `Block staging`.
         */
        presetCanaryOverseas?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryOverseas>;
        /**
         * The configuration of a presetCanaryQinghai environment. The `Block presetCanaryQinghai` is same as `Block staging`.
         */
        presetCanaryQinghai?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryQinghai>;
        /**
         * The configuration of a presetCanaryShaanxi environment. The `Block presetCanaryShaanxi` is same as `Block staging`.
         */
        presetCanaryShaanxi?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryShaanxi>;
        /**
         * The configuration of a presetCanaryShandong environment. The `Block presetCanaryShandong` is same as `Block staging`.
         */
        presetCanaryShandong?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryShandong>;
        /**
         * The configuration of a presetCanaryShanghai environment. The `Block presetCanaryShanghai` is same as `Block staging`.
         */
        presetCanaryShanghai?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryShanghai>;
        /**
         * The configuration of a presetCanaryShanxi environment. The `Block presetCanaryShanxi` is same as `Block staging`.
         */
        presetCanaryShanxi?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryShanxi>;
        /**
         * The configuration of a presetCanarySichuan environment. The `Block presetCanarySichuan` is same as `Block staging`.
         */
        presetCanarySichuan?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanarySichuan>;
        /**
         * The configuration of a presetCanaryTaiwan environment. The `Block presetCanaryTaiwan` is same as `Block staging`.
         */
        presetCanaryTaiwan?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryTaiwan>;
        /**
         * The configuration of a presetCanaryTianjin environment. The `Block presetCanaryTianjin` is same as `Block staging`.
         */
        presetCanaryTianjin?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryTianjin>;
        /**
         * The configuration of a presetCanaryXinjiang environment. The `Block presetCanaryXinjiang` is same as `Block staging`.
         */
        presetCanaryXinjiang?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryXinjiang>;
        /**
         * The configuration of a presetCanaryXizang environment. The `Block presetCanaryXizang` is same as `Block staging`.
         */
        presetCanaryXizang?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryXizang>;
        /**
         * The configuration of a presetCanaryYunnan environment. The `Block presetCanaryYunnan` is same as `Block staging`.
         */
        presetCanaryYunnan?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryYunnan>;
        /**
         * The configuration of a presetCanaryZhejiang environment. The `Block presetCanaryZhejiang` is same as `Block staging`.
         */
        presetCanaryZhejiang?: pulumi.Input<inputs.dcdn.ErEnvConfPresetCanaryZhejiang>;
        /**
         * The configuration of a production environment. The `Block production` is same as `Block staging`.
         */
        production?: pulumi.Input<inputs.dcdn.ErEnvConfProduction>;
        /**
         * The configuration of a staging environment. See the following `Block staging`.
         */
        staging?: pulumi.Input<inputs.dcdn.ErEnvConfStaging>;
    }

    export interface ErEnvConfPresetCanaryAnhui {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryBeijing {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryChongqing {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryFujian {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryGansu {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryGuangdong {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryGuangxi {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryGuizhou {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHainan {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHebei {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHeilongjiang {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHenan {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHongKong {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHubei {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryHunan {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryJiangsu {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryJiangxi {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryJilin {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryLiaoning {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryMacau {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryNeimenggu {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryNingxia {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryOverseas {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryQinghai {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryShaanxi {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryShandong {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryShanghai {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryShanxi {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanarySichuan {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryTaiwan {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryTianjin {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryXinjiang {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryXizang {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryYunnan {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfPresetCanaryZhejiang {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfProduction {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface ErEnvConfStaging {
        /**
         * Allowed DCDN domain names.
         */
        allowedHosts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version number of the code.
         */
        codeRev?: pulumi.Input<string>;
        /**
         * The specification of the CPU time slice. Valid values: `5ms`, `50ms`, `100ms`.
         */
        specName?: pulumi.Input<string>;
    }

    export interface IpaDomainSource {
        /**
         * The address of the origin server. You can specify an IP address or a domain name.
         */
        content: pulumi.Input<string>;
        /**
         * The custom port number. Valid values: `0` to `65535`.
         */
        port: pulumi.Input<number>;
        /**
         * The priority of the origin server. Valid values: `20` and `30`. Default value: `20`. A value of 20 specifies that the origin is a primary origin. A value of 30 specifies that the origin is a secondary origin.
         */
        priority: pulumi.Input<string>;
        /**
         * The type of the origin server. Valid values: `ipaddr`, `domain`, `oss`.
         */
        type: pulumi.Input<string>;
        /**
         * The weight of the origin server. You must specify a value that is less than `100`. Default value: `10`.
         */
        weight: pulumi.Input<number>;
    }

    export interface WafRuleCondition {
        /**
         * The match field.
         */
        key: pulumi.Input<string>;
        /**
         * The logical symbol.
         */
        opValue: pulumi.Input<string>;
        /**
         * The match subfield.
         */
        subKey?: pulumi.Input<string>;
        /**
         * The match content. Separate multiple values with commas (,).
         */
        values?: pulumi.Input<string>;
    }

    export interface WafRuleRateLimit {
        /**
         * Statistical duration, 5-1800.
         */
        interval?: pulumi.Input<number>;
        /**
         * The status of the waf rule. Valid values: `on` and `off`. Default value: on.
         */
        status?: pulumi.Input<inputs.dcdn.WafRuleRateLimitStatus>;
        /**
         * The match subfield.
         */
        subKey?: pulumi.Input<string>;
        /**
         * The statistical field for frequency control. Currently, `IP`, `Header`, `Query String Parameter`, `Cookie Name`, `Session` is supported.
         */
        target?: pulumi.Input<string>;
        /**
         * The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
         */
        threshold?: pulumi.Input<number>;
        /**
         * The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
         */
        ttl?: pulumi.Input<number>;
    }

    export interface WafRuleRateLimitStatus {
        /**
         * The HTTP status code returned.
         */
        code?: pulumi.Input<string>;
        /**
         * The number of times that the HTTP status code that was returned. Valid values: 2 to 50000. You can configure only one of the `ratio` and `count` fields.
         */
        count?: pulumi.Input<number>;
        /**
         * The percentage of HTTP status codes. Valid values: 1 to 100. You can configure only one of the `ratio` and `count` fields.
         */
        ratio?: pulumi.Input<number>;
    }
}

export namespace ddos {
    export interface DomainResourceProxyType {
        /**
         * the port number. This field is required and must be an integer.
         */
        proxyPorts?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * the protocol type. This field is required and must be a string. Valid values: `http`, `https`, `websocket`, and `websockets`.
         */
        proxyType?: pulumi.Input<string>;
    }

    export interface SchedulerRuleRule {
        /**
         * The priority of the rule.
         */
        priority?: pulumi.Input<number>;
        /**
         * The region where the interaction resource that is used in the scheduling rule is deployed. **NOTE:** This parameter is returned only if the RuleType parameter is set to 2.
         */
        regionId?: pulumi.Input<string>;
        /**
         * The status of the scheduling rule.
         */
        status?: pulumi.Input<number>;
        /**
         * The address type of the interaction resource. Valid values:
         * `A`: IPv4 address.
         * `CNAME`: CNAME record.
         */
        type?: pulumi.Input<string>;
        /**
         * The address of the interaction resource.
         */
        value?: pulumi.Input<string>;
        /**
         * Required. The type of the linked resource. It is an Integer. Valid values:
         * `1`: The IP address of Anti-DDoS Pro or Anti-DDoS Premium
         * `2`: the IP address of the interaction resource (in the tiered protection scenario)
         * `3`: the IP address used to accelerate access (in the network acceleration scenario)
         * `6` the IP address of the interaction resource (in the cloud service interaction scenario)
         */
        valueType?: pulumi.Input<number>;
    }
}

export namespace dds {
}

export namespace dfs {
}

export namespace directmail {
}

export namespace dms {
}

export namespace dns {
    export interface AccessStrategyDefaultAddrPool {
        /**
         * The ID of the address pool in the secondary address pool group.
         */
        addrPoolId: pulumi.Input<string>;
        /**
         * The weight of the address pool in the secondary address pool group.
         */
        lbaWeight?: pulumi.Input<number>;
    }

    export interface AccessStrategyFailoverAddrPool {
        /**
         * The ID of the address pool in the secondary address pool group.
         */
        addrPoolId?: pulumi.Input<string>;
        /**
         * The weight of the address pool in the secondary address pool group.
         */
        lbaWeight?: pulumi.Input<number>;
    }

    export interface AccessStrategyLine {
        /**
         * The line code of the source region.
         */
        lineCode?: pulumi.Input<string>;
    }

    export interface AddressPoolAddress {
        /**
         * The address lists of the Address Pool. See the following `Block address`.
         */
        address: pulumi.Input<string>;
        /**
         * The source region of the address. expressed as a JSON string. The structure is as follows:
         */
        attributeInfo: pulumi.Input<string>;
        /**
         * The weight of the address. **NOTE:** The attribute is valid when the attribute `lbaStrategy` is `RATIO`.
         */
        lbaWeight?: pulumi.Input<number>;
        /**
         * The type of the address. Valid values:`SMART`, `ONLINE` and `OFFLINE`.
         */
        mode: pulumi.Input<string>;
        /**
         * The description of the address.
         */
        remark?: pulumi.Input<string>;
    }

    export interface CustomLineIpSegmentList {
        /**
         * The end IP address of the CIDR block.
         */
        endIp: pulumi.Input<string>;
        /**
         * The start IP address of the CIDR block.
         */
        startIp: pulumi.Input<string>;
    }

    export interface GtmInstanceAlertConfig {
        /**
         * Whether to configure DingTalk notifications. Valid values: `true`, `false`.
         */
        dingtalkNotice?: pulumi.Input<boolean>;
        /**
         * Whether to configure mail notification. Valid values: `true`, `false`.
         */
        emailNotice?: pulumi.Input<boolean>;
        /**
         * The Alarm Event Type.
         */
        noticeType?: pulumi.Input<string>;
        /**
         * Whether to configure SMS notification. Valid values: `true`, `false`.
         */
        smsNotice?: pulumi.Input<boolean>;
    }

    export interface MonitorConfigIspCityNode {
        /**
         * The code of the city node to monitor.
         */
        cityCode: pulumi.Input<string>;
        /**
         * The code of the Internet provider service (ISP) node to monitor.
         */
        ispCode: pulumi.Input<string>;
    }
}

export namespace drds {
}

export namespace dts {
}

export namespace eais {
}

export namespace ebs {
}

export namespace eci {
    export interface ContainerGroupAcrRegistryInfo {
        /**
         * The domain name of the ACR Enterprise Edition instance. Defaults to all domain names of the corresponding instance. Support specifying individual domain names, multiple separated by half comma.
         */
        domains?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ACR enterprise edition example ID.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * The name of the ACR enterprise edition instance.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * The ACR enterprise edition instance belongs to the region.
         */
        regionId?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainer {
        /**
         * The arguments passed to the commands.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The amount of CPU resources allocated to the container group.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The structure of environmentVars.
         */
        environmentVars?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerEnvironmentVar>[]>;
        /**
         * The number GPUs.
         */
        gpu?: pulumi.Input<number>;
        /**
         * The image of the container.
         */
        image: pulumi.Input<string>;
        /**
         * The restart policy of the image.
         */
        imagePullPolicy?: pulumi.Input<string>;
        /**
         * The health check of the container.
         */
        livenessProbes?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerLivenessProbe>[]>;
        /**
         * The amount of memory resources allocated to the container group.
         */
        memory?: pulumi.Input<number>;
        /**
         * The name of the volume.
         */
        name: pulumi.Input<string>;
        /**
         * The structure of port.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerPort>[]>;
        /**
         * The health check of the container.
         */
        readinessProbes?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerReadinessProbe>[]>;
        ready?: pulumi.Input<boolean>;
        restartCount?: pulumi.Input<number>;
        /**
         * The structure of volumeMounts.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerVolumeMount>[]>;
        /**
         * The working directory of the container.
         */
        workingDir?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerEnvironmentVar {
        /**
         * The name of the variable. The name can be 1 to 128 characters in length and can contain letters, digits, and underscores (_). It cannot start with a digit.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerLivenessProbe {
        /**
         * Health check using command line method.
         */
        execs?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerLivenessProbeExec>[]>;
        /**
         * Threshold for the number of checks that are determined to have failed since the last successful check (must be consecutive failures), default is 3.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * Health check using HTTP request method.
         */
        httpGets?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerLivenessProbeHttpGet>[]>;
        /**
         * Check the time to start execution, calculated from the completion of container startup.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * Buffer time for the program to handle operations before closing.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The check count threshold for re-identifying successful checks since the last failed check (must be consecutive successes), default is 1. Current must be 1.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * Health check using TCP socket method.
         */
        tcpSockets?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerLivenessProbeTcpSocket>[]>;
        /**
         * Check the timeout, the default is 1 second, the minimum is 1 second.
         */
        timeoutSeconds?: pulumi.Input<number>;
    }

    export interface ContainerGroupContainerLivenessProbeExec {
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ContainerGroupContainerLivenessProbeHttpGet {
        /**
         * The relative file path.
         */
        path?: pulumi.Input<string>;
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol type corresponding to the HTTP Get request when using the HTTP request method for health checks. Valid values: `HTTP`, `HTTPS`.
         */
        scheme?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerLivenessProbeTcpSocket {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
    }

    export interface ContainerGroupContainerPort {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values: TCP and UDP.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerReadinessProbe {
        /**
         * Health check using command line method.
         */
        execs?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerReadinessProbeExec>[]>;
        /**
         * Threshold for the number of checks that are determined to have failed since the last successful check (must be consecutive failures), default is 3.
         */
        failureThreshold?: pulumi.Input<number>;
        /**
         * Health check using HTTP request method.
         */
        httpGets?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerReadinessProbeHttpGet>[]>;
        /**
         * Check the time to start execution, calculated from the completion of container startup.
         */
        initialDelaySeconds?: pulumi.Input<number>;
        /**
         * Buffer time for the program to handle operations before closing.
         */
        periodSeconds?: pulumi.Input<number>;
        /**
         * The check count threshold for re-identifying successful checks since the last failed check (must be consecutive successes), default is 1. Current must be 1.
         */
        successThreshold?: pulumi.Input<number>;
        /**
         * Health check using TCP socket method.
         */
        tcpSockets?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerReadinessProbeTcpSocket>[]>;
        /**
         * Check the timeout, the default is 1 second, the minimum is 1 second.
         */
        timeoutSeconds?: pulumi.Input<number>;
    }

    export interface ContainerGroupContainerReadinessProbeExec {
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ContainerGroupContainerReadinessProbeHttpGet {
        /**
         * The relative file path.
         */
        path?: pulumi.Input<string>;
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * The protocol type corresponding to the HTTP Get request when using the HTTP request method for health checks. Valid values: `HTTP`, `HTTPS`.
         */
        scheme?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerReadinessProbeTcpSocket {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
    }

    export interface ContainerGroupContainerVolumeMount {
        /**
         * The directory of the mounted volume. Data under this directory will be overwritten by the data in the volume.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * Default to `false`.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    export interface ContainerGroupDnsConfig {
        /**
         * The list of DNS server IP addresses.
         */
        nameServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The structure of options.
         */
        options?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupDnsConfigOption>[]>;
        /**
         * The list of DNS lookup domains.
         */
        searches?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ContainerGroupDnsConfigOption {
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupEciSecurityContext {
        /**
         * system.
         */
        sysctls?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupEciSecurityContextSysctl>[]>;
    }

    export interface ContainerGroupEciSecurityContextSysctl {
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupHostAlias {
        /**
         * Adds a host name.
         */
        hostnames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Adds an IP address.
         */
        ip?: pulumi.Input<string>;
    }

    export interface ContainerGroupImageRegistryCredential {
        /**
         * The password used to log on to the image repository. It is required when `imageRegistryCredential` is configured.
         */
        password: pulumi.Input<string>;
        /**
         * The address of the image repository. It is required when `imageRegistryCredential` is configured.
         */
        server: pulumi.Input<string>;
        /**
         * The username used to log on to the image repository. It is required when `imageRegistryCredential` is configured.
         */
        userName: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainer {
        /**
         * The arguments passed to the commands.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The amount of CPU resources allocated to the container group.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The structure of environmentVars.
         */
        environmentVars?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupInitContainerEnvironmentVar>[]>;
        /**
         * The number GPUs.
         */
        gpu?: pulumi.Input<number>;
        /**
         * The image of the container.
         */
        image?: pulumi.Input<string>;
        /**
         * The restart policy of the image.
         */
        imagePullPolicy?: pulumi.Input<string>;
        /**
         * The amount of memory resources allocated to the container group.
         */
        memory?: pulumi.Input<number>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The structure of port.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupInitContainerPort>[]>;
        ready?: pulumi.Input<boolean>;
        restartCount?: pulumi.Input<number>;
        /**
         * The structure of volumeMounts.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupInitContainerVolumeMount>[]>;
        /**
         * The working directory of the container.
         */
        workingDir?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainerEnvironmentVar {
        /**
         * The name of the variable. The name can be 1 to 128 characters in length and can contain letters, digits, and underscores (_). It cannot start with a digit.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainerPort {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values: TCP and UDP.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainerVolumeMount {
        /**
         * The directory of the mounted volume. Data under this directory will be overwritten by the data in the volume.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * Default to `false`.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    export interface ContainerGroupVolume {
        /**
         * ConfigFileVolumeConfigFileToPaths.
         */
        configFileVolumeConfigFileToPaths?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupVolumeConfigFileVolumeConfigFileToPath>[]>;
        /**
         * The ID of DiskVolume.
         */
        diskVolumeDiskId?: pulumi.Input<string>;
        /**
         * The system type of DiskVolume.
         */
        diskVolumeFsType?: pulumi.Input<string>;
        /**
         * The name of the FlexVolume driver.
         */
        flexVolumeDriver?: pulumi.Input<string>;
        /**
         * The type of the mounted file system. The default value is determined by the script of FlexVolume.
         */
        flexVolumeFsType?: pulumi.Input<string>;
        /**
         * The list of FlexVolume objects. Each object is a key-value pair contained in a JSON string.
         */
        flexVolumeOptions?: pulumi.Input<string>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The path to the NFS volume.
         */
        nfsVolumePath?: pulumi.Input<string>;
        /**
         * The nfs volume read only. Default to `false`.
         */
        nfsVolumeReadOnly?: pulumi.Input<boolean>;
        /**
         * The address of the NFS server.
         */
        nfsVolumeServer?: pulumi.Input<string>;
        /**
         * The type of the volume.
         */
        type?: pulumi.Input<string>;
    }

    export interface ContainerGroupVolumeConfigFileVolumeConfigFileToPath {
        /**
         * The content of the configuration file. Maximum size: 32 KB.
         */
        content?: pulumi.Input<string>;
        /**
         * The relative file path.
         */
        path?: pulumi.Input<string>;
    }

    export interface ImageCacheImageRegistryCredential {
        /**
         * The password of the Image Registry.
         */
        password?: pulumi.Input<string>;
        /**
         * The address of Image Registry without `http://` or `https://`.
         */
        server?: pulumi.Input<string>;
        /**
         * The user name of Image Registry.
         */
        userName?: pulumi.Input<string>;
    }

    export interface OpenApiImageCacheImageRegistryCredential {
        password?: pulumi.Input<string>;
        server?: pulumi.Input<string>;
        userName?: pulumi.Input<string>;
    }

    export interface VirtualNodeTaint {
        /**
         * The effect of the taint. Valid values: `NoSchedule`, `NoExecute` and `PreferNoSchedule`.
         */
        effect?: pulumi.Input<string>;
        /**
         * The key of the taint.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the taint.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace ecp {
}

export namespace ecs {
    export interface AutoProvisioningGroupLaunchTemplateConfig {
        instanceType?: pulumi.Input<string>;
        maxPrice: pulumi.Input<string>;
        priority?: pulumi.Input<string>;
        vswitchId: pulumi.Input<string>;
        weightedCapacity: pulumi.Input<string>;
    }

    export interface DedicatedHostNetworkAttribute {
        /**
         * The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
         */
        slbUdpTimeout?: pulumi.Input<number>;
        /**
         * The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
         */
        udpTimeout?: pulumi.Input<number>;
    }

    export interface EcsInstanceSetDataDisk {
        /**
         * The ID of the automatic snapshot policy applied to the system disk.
         */
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The category of the disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
         */
        diskCategory?: pulumi.Input<string>;
        /**
         * The description of the data disk.
         */
        diskDescription?: pulumi.Input<string>;
        /**
         * The name of the data disk.
         */
        diskName?: pulumi.Input<string>;
        /**
         * The size of the data disk. Unit: GiB.
         * - When `diskCategory` is `cloudEfficiency`, Valid values: `20` to `32768`.
         * - When `diskCategory` is `cloudSsd`, Valid values: `20` to `32768`.
         * - When `diskCategory` is `cloudEssd`, Valid values: `20` to `32768`.
         * - When `diskCategory` is `cloud`, Valid values: `5` to `200`.
         */
        diskSize: pulumi.Input<number>;
        encrypted?: pulumi.Input<boolean>;
        /**
         * The KMS key ID corresponding to the data disk.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The performance level of the ESSD used as data disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface EcsInstanceSetExcludeInstanceFilter {
        /**
         * The type of the excluded. Valid values: `InstanceId`, `InstanceName`.
         */
        key: pulumi.Input<string>;
        /**
         * The value of the excluded. The identification of the excluded instances. It is a list of instance Ids or names.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface EcsInstanceSetNetworkInterface {
        /**
         * The description of ENI.
         */
        description?: pulumi.Input<string>;
        /**
         * The name of ENI.
         */
        networkInterfaceName?: pulumi.Input<string>;
        /**
         * The primary private IP address of ENI.
         */
        primaryIpAddress?: pulumi.Input<string>;
        /**
         * The ID of the security group to which to assign secondary ENI.
         */
        securityGroupId: pulumi.Input<string>;
        /**
         * The ID of the vSwitch to which to connect ENI.
         */
        vswitchId?: pulumi.Input<string>;
    }

    export interface EcsLaunchTemplateDataDisk {
        /**
         * The category of the system disk. System disk type. Valid values: `all`, `cloud`, `ephemeralSsd`, `cloudEssd`, `cloudEfficiency`, `cloudSsd`, `localDisk`.
         */
        category?: pulumi.Input<string>;
        /**
         * Specifies whether to release the system disk when the instance is released. Default to `true`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with "http://" or "https://". The default value is null.
         */
        description?: pulumi.Input<string>;
        /**
         * Encrypted the data in this disk.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * It has been deprecated from version 1.120.0, and use field `launchTemplateName` instead.
         */
        name?: pulumi.Input<string>;
        /**
         * The performance level of the ESSD used as the system disk. Valid Values: `PL0`, `PL1`, `PL2`, and `PL3`. Default to: `PL0`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * Size of the system disk, measured in GB. Value range: [20, 500].
         */
        size?: pulumi.Input<number>;
        /**
         * The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface EcsLaunchTemplateNetworkInterfaces {
        /**
         * Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with "http://" or "https://". The default value is null.
         */
        description?: pulumi.Input<string>;
        /**
         * It has been deprecated from version 1.120.0, and use field `launchTemplateName` instead.
         */
        name?: pulumi.Input<string>;
        /**
         * The primary private IP address of the ENI.
         */
        primaryIp?: pulumi.Input<string>;
        /**
         * The security group ID.
         */
        securityGroupId?: pulumi.Input<string>;
        /**
         * When creating a VPC-Connected instance, you must specify its VSwitch ID.
         */
        vswitchId?: pulumi.Input<string>;
    }

    export interface EcsLaunchTemplateSystemDisk {
        /**
         * The category of the system disk. System disk type. Valid values: `all`, `cloud`, `ephemeralSsd`, `cloudEssd`, `cloudEfficiency`, `cloudSsd`, `localDisk`.
         */
        category?: pulumi.Input<string>;
        /**
         * Specifies whether to release the system disk when the instance is released. Default to `true`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with "http://" or "https://". The default value is null.
         */
        description?: pulumi.Input<string>;
        /**
         * The Iops.
         */
        iops?: pulumi.Input<string>;
        /**
         * It has been deprecated from version 1.120.0, and use field `launchTemplateName` instead.
         */
        name?: pulumi.Input<string>;
        /**
         * The performance level of the ESSD used as the system disk. Valid Values: `PL0`, `PL1`, `PL2`, and `PL3`. Default to: `PL0`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * Size of the system disk, measured in GB. Value range: [20, 500].
         */
        size?: pulumi.Input<number>;
    }

    export interface EcsPrefixListEntry {
        /**
         * The CIDR block in entry. This parameter is empty by default.  Take note of the following items:
         * * The total number of entries must not exceed the `maxEntries` value.
         * * CIDR block types are determined by the IP address family. You cannot combine `IPv4` and `IPv6` CIDR blocks in a single entry.
         * * CIDR blocks must be unique across all entries in a prefix list. For example, you cannot specify 192.168.1.0/24 twice in the entries of the prefix list.
         * * IP addresses are supported. The system converts IP addresses into CIDR blocks. For example, if you specify 192.168.1.100, the system converts it into the 192.168.1.100/32 CIDR block.
         * * If an IPv6 CIDR block is used, the system converts it to the zero compression format and changes uppercase letters into lowercase ones. For example, if you specify 2001:0DB8:0000:0000:0000:0000:0000:0000/32, the system converts it into 2001:db8::/32.
         * * For more information about CIDR blocks, see the "What is CIDR block?" section of the [Network FAQ](https://www.alibabacloud.com/help/doc-detail/40637.htm) topic.  * The total number of entries must not exceed the `maxEntries` value.
         */
        cidr?: pulumi.Input<string>;
        /**
         * The description in entry. The description must be 2 to 32 characters in length and cannot start with `http://` or `https://`.
         */
        description?: pulumi.Input<string>;
    }

    export interface GetDedicatedHostsOperationLock {
        /**
         * The reason why the dedicated host resource is locked.
         */
        lockReason?: string;
    }

    export interface GetDedicatedHostsOperationLockArgs {
        /**
         * The reason why the dedicated host resource is locked.
         */
        lockReason?: pulumi.Input<string>;
    }

    export interface GetDisksOperationLock {
        lockReason?: string;
    }

    export interface GetDisksOperationLockArgs {
        lockReason?: pulumi.Input<string>;
    }

    export interface GetEcsDisksOperationLock {
        lockReason?: string;
    }

    export interface GetEcsDisksOperationLockArgs {
        lockReason?: pulumi.Input<string>;
    }

    export interface ImageDiskDeviceMapping {
        /**
         * Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
         */
        device?: pulumi.Input<string>;
        /**
         * Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
         */
        size?: pulumi.Input<number>;
        /**
         * Specifies a snapshot that is used to create a combined custom image.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ImageImportDiskDeviceMapping {
        /**
         * The name of disk N in the custom image.
         */
        device?: pulumi.Input<string>;
        /**
         * Resolution size. You must ensure that the system disk space ≥ file system space. Ranges: When n = 1, the system disk: 5 ~ 500GiB, When n = 2 ~ 17, that is, data disk: 5 ~ 1000GiB, When temporary is introduced, the system automatically detects the size, which is subject to the detection result.
         */
        diskImageSize?: pulumi.Input<number>;
        /**
         * Image format. Value range: When the `RAW`, `VHD`, `qcow2` is imported into the image, the system automatically detects the image format, whichever comes first.
         */
        format?: pulumi.Input<string>;
        /**
         * Save the exported OSS bucket.
         */
        ossBucket?: pulumi.Input<string>;
        /**
         * The file name of your OSS Object.
         */
        ossObject?: pulumi.Input<string>;
    }

    export interface InstanceDataDisk {
        /**
         * The ID of the automatic snapshot policy applied to the system disk.
         */
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The category of the disk:
         */
        category?: pulumi.Input<string>;
        /**
         * Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloud_essd, cloudSsd disk. If the category of this data disk was ephemeral_ssd, please don't set this param. Default value: `true`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        /**
         * The mount point of the data disk.
         */
        device?: pulumi.Input<string>;
        /**
         * Encrypted the data in this disk. Default value: `false`.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * The KMS key ID corresponding to the Nth data disk.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        /**
         * The performance level of the ESSD used as data disk:
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         * - cloud：[5, 2000]
         * - cloud_efficiency：[20, 32768]
         * - cloud_ssd：[20, 32768]
         * - cloud_essd：[20, 32768]
         * - ephemeral_ssd: [5, 800]
         */
        size: pulumi.Input<number>;
        /**
         * The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface InstanceMaintenanceTime {
        /**
         * The end time of maintenance. The time must be on the hour at exactly 0 minute and 0 second. The `startTime` and `endTime` parameters must be specified at the same time. The `endTime` value must be 1 to 23 hours later than the `startTime` value. Specify the time in the HH:mm:ss format. The time must be in UTC+8.
         */
        endTime?: pulumi.Input<string>;
        /**
         * The start time of maintenance. The time must be on the hour at exactly 0 minute and 0 second. The `startTime` and `endTime` parameters must be specified at the same time. The `endTime` value must be 1 to 23 hours later than the `startTime` value. Specify the time in the HH:mm:ss format. The time must be in UTC+8.
         */
        startTime?: pulumi.Input<string>;
    }

    export interface LaunchTemplateDataDisk {
        /**
         * The category of the disk:
         * - cloud: Basic cloud disk.
         * - cloud_efficiency: Ultra cloud disk.
         * - cloud_ssd: SSD cloud Disks.
         * - ephemeral_ssd: local SSD Disks
         * - cloud_essd: ESSD cloud Disks.
         */
        category?: pulumi.Input<string>;
        /**
         * Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        /**
         * Encrypted the data in this disk.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         * - cloud：[5, 2000]
         * - cloud_efficiency：[20, 32768]
         * - cloud_ssd：[20, 32768]
         * - cloud_essd：[20, 32768]
         * - ephemeral_ssd: [5, 800]
         */
        size?: pulumi.Input<number>;
        /**
         * The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface LaunchTemplateNetworkInterfaces {
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        /**
         * The primary private IP address of the ENI.
         */
        primaryIp?: pulumi.Input<string>;
        /**
         * The security group ID must be one in the same VPC.
         */
        securityGroupId?: pulumi.Input<string>;
        /**
         * The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
         */
        vswitchId?: pulumi.Input<string>;
    }

    export interface LaunchTemplateSystemDisk {
        /**
         * The category of the disk:
         * - cloud: Basic cloud disk.
         * - cloud_efficiency: Ultra cloud disk.
         * - cloud_ssd: SSD cloud Disks.
         * - ephemeral_ssd: local SSD Disks
         * - cloud_essd: ESSD cloud Disks.
         */
        category?: pulumi.Input<string>;
        /**
         * Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        iops?: pulumi.Input<string>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         * - cloud：[5, 2000]
         * - cloud_efficiency：[20, 32768]
         * - cloud_ssd：[20, 32768]
         * - cloud_essd：[20, 32768]
         * - ephemeral_ssd: [5, 800]
         */
        size?: pulumi.Input<number>;
    }

    export interface ReservedInstanceOperationLock {
        /**
         * The reason why the reserved instance was locked.
         */
        lockReason?: pulumi.Input<string>;
    }
}

export namespace edas {
    export interface K8sSlbAttachmentSlbConfig {
        /**
         * The name of this SLB configuration, empty for auto-generated by EDAS server.
         */
        name?: pulumi.Input<string>;
        /**
         * The port configuration for SLB instance, which is supported for multiple configurations.
         */
        portMappings: pulumi.Input<pulumi.Input<inputs.edas.K8sSlbAttachmentSlbConfigPortMapping>[]>;
        /**
         * The scheduler policy of SLB configuration, values can be 'rr'(round-robin) or 'wrr'(weighted round-robin).
         */
        scheduler: pulumi.Input<string>;
        /**
         * The ID of your SLB instance, if value is empty which means EDAS will purchase an SLB instance with 'specification' field.
         */
        slbId?: pulumi.Input<string>;
        /**
         * The instance specification of SLB, values can be found [here](https://www.alibabacloud.com/help/en/server-load-balancer/latest/createloadbalancer-2#t4182.html), empty for 'slb.s1.small'.
         */
        specification?: pulumi.Input<string>;
        /**
         * The type of SLB instance, values can be 'internet' or 'intranet'.
         */
        type: pulumi.Input<string>;
    }

    export interface K8sSlbAttachmentSlbConfigPortMapping {
        /**
         * The ID of your tls certification, this is used for 'HTTPS' protocol only.
         */
        certId?: pulumi.Input<string>;
        /**
         * The protocol of SLB instance configuration, values can be 'TCP', 'HTTP' or 'HTTPS'.
         */
        loadbalancerProtocol: pulumi.Input<string>;
        /**
         * The backend k8s service configuration for SLB instance, which is supported for multiple configurations.
         */
        servicePort: pulumi.Input<inputs.edas.K8sSlbAttachmentSlbConfigPortMappingServicePort>;
    }

    export interface K8sSlbAttachmentSlbConfigPortMappingServicePort {
        /**
         * The port of k8s service, values should be within range [1, 65535].
         */
        port: pulumi.Input<number>;
        /**
         * The protocol of k8s service, values can be 'TCP' or 'UDP'.
         */
        protocol: pulumi.Input<string>;
        /**
         * The port of k8s pod, values should be within range [1, 65535].
         */
        targetPort: pulumi.Input<number>;
    }
}

export namespace eds {
    export interface CustomPropertyPropertyValue {
        /**
         * The value of an attribute.
         */
        propertyValue?: pulumi.Input<string>;
        /**
         * The value of an attribute id.
         */
        propertyValueId?: pulumi.Input<string>;
    }

    export interface EcdPolicyGroupAuthorizeAccessPolicyRule {
        /**
         * The cidrip of security rules.
         */
        cidrIp?: pulumi.Input<string>;
        /**
         * The description of security rules.
         */
        description?: pulumi.Input<string>;
    }

    export interface EcdPolicyGroupAuthorizeSecurityPolicyRule {
        /**
         * The cidrip of security rules.
         */
        cidrIp?: pulumi.Input<string>;
        /**
         * The description of security rules.
         */
        description?: pulumi.Input<string>;
        /**
         * The ip protocol of security rules.
         */
        ipProtocol?: pulumi.Input<string>;
        /**
         * The policy of security rules.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port range of security rules.
         */
        portRange?: pulumi.Input<string>;
        /**
         * The priority of security rules.
         */
        priority?: pulumi.Input<string>;
        /**
         * The type of security rules.
         */
        type?: pulumi.Input<string>;
    }

}

export namespace eflo {
}

export namespace ehpc {
    export interface ClusterAdditionalVolume {
        /**
         * The queue to which the compute nodes are added.
         */
        jobQueue?: pulumi.Input<string>;
        /**
         * The local directory on which the additional file system is mounted.
         */
        localDirectory?: pulumi.Input<string>;
        /**
         * The type of the cluster. Valid value: `PublicCloud`.
         */
        location?: pulumi.Input<string>;
        /**
         * The remote directory to which the file system is mounted.
         */
        remoteDirectory?: pulumi.Input<string>;
        /**
         * The roles. See the following `Block roles`.
         */
        roles?: pulumi.Input<pulumi.Input<inputs.ehpc.ClusterAdditionalVolumeRole>[]>;
        /**
         * The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
         */
        volumeId?: pulumi.Input<string>;
        /**
         * The mount options of the file system.
         */
        volumeMountOption?: pulumi.Input<string>;
        /**
         * The mount target of the file system. Take note of the following information:
         * - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
         * - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
         */
        volumeMountpoint?: pulumi.Input<string>;
        /**
         * The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
         */
        volumeProtocol?: pulumi.Input<string>;
        /**
         * The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
         */
        volumeType?: pulumi.Input<string>;
    }

    export interface ClusterAdditionalVolumeRole {
        /**
         * The type of the nodes to which the additional file system is attached.
         */
        name?: pulumi.Input<string>;
    }

    export interface ClusterApplication {
        /**
         * The tag of the software.
         */
        tag?: pulumi.Input<string>;
    }

    export interface ClusterPostInstallScript {
        /**
         * The parameter that is used to run the script after the cluster is created.
         */
        args?: pulumi.Input<string>;
        /**
         * The URL that is used to download the script after the cluster is created.
         */
        url?: pulumi.Input<string>;
    }

}

export namespace eipanycast {
}

export namespace elasticsearch {
}

export namespace emr {
    export interface ClusterBootstrapAction {
        /**
         * bootstrap action args, e.g. "--a=b".
         */
        arg?: pulumi.Input<string>;
        /**
         * bootstrap action execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ . Default value: "FAILED_BLOCKED
         */
        executionFailStrategy?: pulumi.Input<string>;
        /**
         * bootstrap action execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ . Default value: "BEFORE_INSTALL".
         */
        executionMoment?: pulumi.Input<string>;
        /**
         * bootstrap action execution target, you can specify the host group name, e.g. "coreGroup". If this is not specified, the bootstrap action execution target is whole cluster.
         */
        executionTarget?: pulumi.Input<string>;
        /**
         * The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, "-", "_".
         */
        name?: pulumi.Input<string>;
        /**
         * bootstrap action path, e.g. "oss://bucket/path".
         */
        path?: pulumi.Input<string>;
    }

    export interface ClusterConfig {
        /**
         * Custom configuration service config key, e.g. ’dfs.replication’.
         */
        configKey: pulumi.Input<string>;
        /**
         * Custom configuration service config value, e.g. ’3’.
         */
        configValue: pulumi.Input<string>;
        /**
         * Custom configuration service file name, e.g. ’hdfs-site’.
         */
        fileName: pulumi.Input<string>;
        /**
         * Custom configuration service name, e.g. ’HDFS’.
         */
        serviceName: pulumi.Input<string>;
    }

    export interface ClusterHostGroup {
        /**
         * Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
         */
        chargeType?: pulumi.Input<string>;
        /**
         * Graceful decommission timeout, unit: seconds.
         */
        decommissionTimeout?: pulumi.Input<number>;
        /**
         * Data disk capacity.
         */
        diskCapacity?: pulumi.Input<string>;
        /**
         * Data disk count.
         */
        diskCount?: pulumi.Input<string>;
        /**
         * Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
         */
        diskType?: pulumi.Input<string>;
        /**
         * Enable hadoop cluster of task node graceful decommission, ’true’ or ‘false’ . Default value: false.
         */
        enableGracefulDecommission?: pulumi.Input<boolean>;
        gpuDriver?: pulumi.Input<string>;
        /**
         * host group name.
         */
        hostGroupName?: pulumi.Input<string>;
        /**
         * host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
         */
        hostGroupType?: pulumi.Input<string>;
        /**
         * Instance list for cluster scale down. This value follows the json format, e.g. ["instanceId1","instanceId2"]. escape character for " is \".
         */
        instanceList?: pulumi.Input<string>;
        /**
         * Host Ecs instance type.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * Host number in this group.
         */
        nodeCount?: pulumi.Input<string>;
        /**
         * If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
         */
        period?: pulumi.Input<number>;
        /**
         * System disk capacity.
         */
        sysDiskCapacity?: pulumi.Input<string>;
        /**
         * System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
         */
        sysDiskType?: pulumi.Input<string>;
    }

    export interface ClusterMetaStoreConf {
        /**
         * Custom rds database password.
         */
        dbPassword: pulumi.Input<string>;
        /**
         * Custom rds database connection url.
         */
        dbUrl: pulumi.Input<string>;
        /**
         * Custom rds database user name.
         */
        dbUserName: pulumi.Input<string>;
    }

    export interface ClusterModifyClusterServiceConfig {
        /**
         * Cluster service configuration modification comment, e.g. "Modify tez configuration".
         */
        comment?: pulumi.Input<string>;
        /**
         * Cluster service configuration modification params, e.g. ’{"hdfs-site":{"dfs.replication":"3"}}’.
         */
        configParams: pulumi.Input<string>;
        /**
         * Cluster service configuration modification type.
         */
        configType?: pulumi.Input<string>;
        /**
         * Cluster service configuration modification custom params, e.g. ’{"tez-site":{"key":{"Value":"value"}}}’.
         */
        customConfigParams?: pulumi.Input<string>;
        /**
         * Cluster service configuration modification related gateway cluster id list.
         */
        gatewayClusterIdLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Cluster service configuration modification node group id, e.g. ’G-XXX’.
         */
        groupId?: pulumi.Input<string>;
        /**
         * Cluster service configuration modification host instance id, e.g. ’i-bp146tnrkq4tcxxxxx’.
         */
        hostInstanceId?: pulumi.Input<string>;
        /**
         * Cluster service configuration modification refresh host config, ’true’ or ’false’.
         */
        refreshHostConfig?: pulumi.Input<boolean>;
        /**
         * Custom configuration service name, e.g. ’HDFS’.
         */
        serviceName: pulumi.Input<string>;
    }

}

export namespace emrv2 {
    export interface ClusterApplicationConfig {
        /**
         * The application name of EMR cluster which has installed.
         */
        applicationName: pulumi.Input<string>;
        /**
         * The configuration description of application installed.
         */
        configDescription?: pulumi.Input<string>;
        /**
         * The configuration file name of application installed.
         */
        configFileName: pulumi.Input<string>;
        /**
         * The configuration item key of application installed.
         */
        configItemKey: pulumi.Input<string>;
        /**
         * The configuration item value of application installed.
         */
        configItemValue: pulumi.Input<string>;
        /**
         * The configuration scope of emr cluster. Supported value: CLUSTER or NODEGROUP.
         */
        configScope?: pulumi.Input<string>;
        /**
         * The configuration effected which node group id of emr cluster.
         */
        nodeGroupId?: pulumi.Input<string>;
        /**
         * The configuration effected which node group name of emr cluster.
         */
        nodeGroupName?: pulumi.Input<string>;
    }

    export interface ClusterBootstrapScript {
        /**
         * The bootstrap scripts execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ .
         */
        executionFailStrategy: pulumi.Input<string>;
        /**
         * The bootstrap scripts execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ .
         */
        executionMoment: pulumi.Input<string>;
        /**
         * The bootstrap scripts execution target.
         */
        nodeSelector: pulumi.Input<inputs.emrv2.ClusterBootstrapScriptNodeSelector>;
        /**
         * The bootstrap scripts priority.
         */
        priority?: pulumi.Input<number>;
        /**
         * The bootstrap script args, e.g. "--a=b".
         */
        scriptArgs: pulumi.Input<string>;
        /**
         * The bootstrap script name.
         */
        scriptName: pulumi.Input<string>;
        /**
         * The bootstrap script path, e.g. "oss://bucket/path".
         */
        scriptPath: pulumi.Input<string>;
    }

    export interface ClusterBootstrapScriptNodeSelector {
        /**
         * The configuration effected which node group id of emr cluster.
         */
        nodeGroupId?: pulumi.Input<string>;
        /**
         * The configuration effected which node group name of emr cluster.
         */
        nodeGroupName?: pulumi.Input<string>;
        /**
         * The bootstrap scripts execution target node group types.
         */
        nodeGroupTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The bootstrap scripts execution target node names.
         */
        nodeNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The bootstrap scripts execution target node select type. Supported value: NODE, NODEGROUP or CLUSTER.
         */
        nodeSelectType: pulumi.Input<string>;
    }

    export interface ClusterNodeAttribute {
        /**
         * The name of the key pair.
         */
        keyPairName: pulumi.Input<string>;
        /**
         * Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
         */
        ramRole: pulumi.Input<string>;
        /**
         * Security Group ID for Cluster.
         */
        securityGroupId: pulumi.Input<string>;
        /**
         * Used to retrieve instances belong to specified VPC.
         */
        vpcId: pulumi.Input<string>;
        /**
         * Zone ID, e.g. cn-hangzhou-i
         */
        zoneId: pulumi.Input<string>;
    }

    export interface ClusterNodeGroup {
        /**
         * Additional security Group IDS for Cluster, you can also specify this key for each node group.
         */
        additionalSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The detail cost optimized configuration of emr cluster.
         */
        costOptimizedConfig?: pulumi.Input<inputs.emrv2.ClusterNodeGroupCostOptimizedConfig>;
        /**
         * Host Ecs data disks information in this node group.
         */
        dataDisks: pulumi.Input<pulumi.Input<inputs.emrv2.ClusterNodeGroupDataDisk>[]>;
        /**
         * Enable emr cluster of task node graceful decommission, ’true’ or ‘false’ .
         */
        gracefulShutdown?: pulumi.Input<boolean>;
        /**
         * Host Ecs instance types.
         */
        instanceTypes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Host Ecs number in this node group.
         */
        nodeCount: pulumi.Input<number>;
        /**
         * The configuration effected which node group name of emr cluster.
         */
        nodeGroupName: pulumi.Input<string>;
        /**
         * The node group type of emr cluster, supported value: MASTER, CORE or TASK.
         */
        nodeGroupType: pulumi.Input<string>;
        /**
         * Payment Type for this cluster. Supported value: PayAsYouGo or Subscription.
         */
        paymentType?: pulumi.Input<string>;
        /**
         * The spot bid prices of a PayAsYouGo instance.
         */
        spotBidPrices?: pulumi.Input<pulumi.Input<inputs.emrv2.ClusterNodeGroupSpotBidPrice>[]>;
        /**
         * Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
         */
        spotInstanceRemedy?: pulumi.Input<boolean>;
        /**
         * The detail configuration of subscription payment type.
         */
        subscriptionConfig?: pulumi.Input<inputs.emrv2.ClusterNodeGroupSubscriptionConfig>;
        /**
         * Host Ecs system disk information in this node group.
         */
        systemDisk: pulumi.Input<inputs.emrv2.ClusterNodeGroupSystemDisk>;
        /**
         * Global vSwitch ids, you can also specify it in node group.
         */
        vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether the node has a public IP address enabled.
         */
        withPublicIp?: pulumi.Input<boolean>;
    }

    export interface ClusterNodeGroupCostOptimizedConfig {
        /**
         * The cost optimized configuration which on demand based capacity.
         */
        onDemandBaseCapacity: pulumi.Input<number>;
        /**
         * The cost optimized configuration which on demand percentage above based capacity.
         */
        onDemandPercentageAboveBaseCapacity: pulumi.Input<number>;
        /**
         * The cost optimized configuration with spot instance pools.
         */
        spotInstancePools: pulumi.Input<number>;
    }

    export interface ClusterNodeGroupDataDisk {
        /**
         * The type of the data disk. Valid values: `cloudEfficiency` and `cloudEssd`.
         */
        category: pulumi.Input<string>;
        /**
         * The count of a data disk.
         */
        count?: pulumi.Input<number>;
        /**
         * Worker node data disk performance level, when `category` values `cloudEssd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of a data disk, at least 40. Unit: GiB.
         */
        size: pulumi.Input<number>;
    }

    export interface ClusterNodeGroupSpotBidPrice {
        /**
         * The spot bid price of a PayAsYouGo instance.
         */
        bidPrice: pulumi.Input<number>;
        /**
         * Host Ecs instance type.
         */
        instanceType: pulumi.Input<string>;
    }

    export interface ClusterNodeGroupSubscriptionConfig {
        /**
         * Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         */
        autoRenewDuration?: pulumi.Input<number>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         */
        autoRenewDurationUnit?: pulumi.Input<string>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         */
        paymentDuration: pulumi.Input<number>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         */
        paymentDurationUnit: pulumi.Input<string>;
    }

    export interface ClusterNodeGroupSystemDisk {
        /**
         * The type of the data disk. Valid values: `cloudEfficiency` and `cloudEssd`.
         */
        category: pulumi.Input<string>;
        /**
         * The count of a data disk.
         */
        count?: pulumi.Input<number>;
        /**
         * Worker node data disk performance level, when `category` values `cloudEssd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of a data disk, at least 40. Unit: GiB.
         */
        size: pulumi.Input<number>;
    }

    export interface ClusterSubscriptionConfig {
        /**
         * Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         */
        autoRenewDuration?: pulumi.Input<number>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         */
        autoRenewDurationUnit?: pulumi.Input<string>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         */
        paymentDuration: pulumi.Input<number>;
        /**
         * If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         */
        paymentDurationUnit: pulumi.Input<string>;
    }

}

export namespace ens {
}

export namespace ess {
    export interface EciScalingConfigurationAcrRegistryInfo {
        /**
         * Endpoint of Container Registry Enterprise Edition instance. By default, all endpoints of the Container Registry Enterprise Edition instance are displayed. It is required
         * when `acrRegistryInfo` is configured.
         */
        domains?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of Container Registry Enterprise Edition instance. It is required
         * when `acrRegistryInfo` is configured.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * The name of Container Registry Enterprise Edition instance. It is required when `acrRegistryInfo` is
         * configured.
         */
        instanceName?: pulumi.Input<string>;
        /**
         * The region ID of Container Registry Enterprise Edition instance. It is required
         * when `acrRegistryInfo` is configured.
         */
        regionId?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationContainer {
        /**
         * The arguments passed to the commands.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The amount of CPU resources allocated to the container group.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The structure of environmentVars.
         * See Block_environment_var_in_init_container below for details.
         * See Block_environment_var_in_container below for details.
         */
        environmentVars?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationContainerEnvironmentVar>[]>;
        /**
         * The number GPUs.
         */
        gpu?: pulumi.Input<number>;
        /**
         * The image of the container.
         */
        image?: pulumi.Input<string>;
        /**
         * The restart policy of the image.
         */
        imagePullPolicy?: pulumi.Input<string>;
        /**
         * Commands that you want to run in containers when you use the CLI to perform liveness probes.
         */
        livenessProbeExecCommands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The minimum number of consecutive failures for the liveness probe to be considered failed after having been successful. Default value: 3.
         */
        livenessProbeFailureThreshold?: pulumi.Input<number>;
        /**
         * The path to which HTTP GET requests are sent when you use HTTP requests to perform liveness probes.
         */
        livenessProbeHttpGetPath?: pulumi.Input<string>;
        /**
         * The port to which HTTP GET requests are sent when you use HTTP requests to perform liveness probes.
         */
        livenessProbeHttpGetPort?: pulumi.Input<number>;
        /**
         * The protocol type of HTTP GET requests when you use HTTP requests for liveness probes.Valid values:HTTP and HTTPS.
         */
        livenessProbeHttpGetScheme?: pulumi.Input<string>;
        /**
         * The number of seconds after container has started before liveness probes are initiated.
         */
        livenessProbeInitialDelaySeconds?: pulumi.Input<number>;
        /**
         * The interval at which the liveness probe is performed. Unit: seconds. Default value: 10. Minimum value: 1.
         */
        livenessProbePeriodSeconds?: pulumi.Input<number>;
        /**
         * The minimum number of consecutive successes for the liveness probe to be considered successful after having failed. Default value: 1. Set the value to 1.
         */
        livenessProbeSuccessThreshold?: pulumi.Input<number>;
        /**
         * The port detected by TCP sockets when you use TCP sockets to perform liveness probes.
         */
        livenessProbeTcpSocketPort?: pulumi.Input<number>;
        /**
         * The timeout period for the liveness probe. Unit: seconds. Default value: 1. Minimum value: 1.
         */
        livenessProbeTimeoutSeconds?: pulumi.Input<number>;
        /**
         * The amount of memory resources allocated to the container group.
         */
        memory?: pulumi.Input<number>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The structure of port. See Block_port_in_init_container below
         * for details.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationContainerPort>[]>;
        /**
         * Commands that you want to run in containers when you use the CLI to perform readiness probes.
         */
        readinessProbeExecCommands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The minimum number of consecutive failures for the readiness probe to be considered failed after having been successful. Default value: 3.
         */
        readinessProbeFailureThreshold?: pulumi.Input<number>;
        /**
         * The path to which HTTP GET requests are sent when you use HTTP requests to perform readiness probes.
         */
        readinessProbeHttpGetPath?: pulumi.Input<string>;
        /**
         * The port to which HTTP GET requests are sent when you use HTTP requests to perform readiness probes.
         */
        readinessProbeHttpGetPort?: pulumi.Input<number>;
        /**
         * The protocol type of HTTP GET requests when you use HTTP requests for readiness probes. Valid values: HTTP and HTTPS.
         */
        readinessProbeHttpGetScheme?: pulumi.Input<string>;
        /**
         * The number of seconds after container N has started before readiness probes are initiated.
         */
        readinessProbeInitialDelaySeconds?: pulumi.Input<number>;
        /**
         * The interval at which the readiness probe is performed. Unit: seconds. Default value: 10. Minimum value: 1.
         */
        readinessProbePeriodSeconds?: pulumi.Input<number>;
        /**
         * The minimum number of consecutive successes for the readiness probe to be considered successful after having failed. Default value: 1. Set the value to 1.
         */
        readinessProbeSuccessThreshold?: pulumi.Input<number>;
        /**
         * The port detected by Transmission Control Protocol (TCP) sockets when you use TCP sockets to perform readiness probes.
         */
        readinessProbeTcpSocketPort?: pulumi.Input<number>;
        /**
         * The timeout period for the readiness probe. Unit: seconds. Default value: 1. Minimum value: 1.
         */
        readinessProbeTimeoutSeconds?: pulumi.Input<number>;
        /**
         * The structure of volumeMounts.
         * See Block_volume_mount_in_init_container below for details.
         * See Block_volume_mount_in_container below for details.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationContainerVolumeMount>[]>;
        /**
         * The working directory of the container.
         */
        workingDir?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationContainerEnvironmentVar {
        /**
         * The name of the variable. The name can be 1 to 128 characters in length and can contain letters,
         * digits, and underscores (_). It cannot start with a digit.
         * digits, and underscores (_). It cannot start with a digit.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationContainerPort {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values: TCP and UDP.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationContainerVolumeMount {
        /**
         * The directory of the mounted volume. Data under this directory will be overwritten by the
         * data in the volume.
         * data in the volume.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * Default to `false`.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    export interface EciScalingConfigurationHostAlias {
        /**
         * Adds a host name.
         */
        hostnames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Adds an IP address.
         */
        ip?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationImageRegistryCredential {
        /**
         * The password used to log on to the image repository. It is required
         * when `imageRegistryCredential` is configured.
         */
        password?: pulumi.Input<string>;
        /**
         * The address of the image repository. It is required when `imageRegistryCredential` is
         * configured.
         */
        server?: pulumi.Input<string>;
        username?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationInitContainer {
        /**
         * The arguments passed to the commands.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The amount of CPU resources allocated to the container group.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The structure of environmentVars.
         * See Block_environment_var_in_init_container below for details.
         * See Block_environment_var_in_container below for details.
         */
        environmentVars?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationInitContainerEnvironmentVar>[]>;
        /**
         * The number GPUs.
         */
        gpu?: pulumi.Input<number>;
        /**
         * The image of the container.
         */
        image?: pulumi.Input<string>;
        /**
         * The restart policy of the image.
         */
        imagePullPolicy?: pulumi.Input<string>;
        /**
         * The amount of memory resources allocated to the container group.
         */
        memory?: pulumi.Input<number>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The structure of port. See Block_port_in_init_container below
         * for details.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationInitContainerPort>[]>;
        /**
         * The structure of volumeMounts.
         * See Block_volume_mount_in_init_container below for details.
         * See Block_volume_mount_in_container below for details.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationInitContainerVolumeMount>[]>;
        /**
         * The working directory of the container.
         */
        workingDir?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationInitContainerEnvironmentVar {
        /**
         * The name of the variable. The name can be 1 to 128 characters in length and can contain letters,
         * digits, and underscores (_). It cannot start with a digit.
         * digits, and underscores (_). It cannot start with a digit.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationInitContainerPort {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values: TCP and UDP.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationInitContainerVolumeMount {
        /**
         * The directory of the mounted volume. Data under this directory will be overwritten by the
         * data in the volume.
         * data in the volume.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * Default to `false`.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    export interface EciScalingConfigurationVolume {
        /**
         * ConfigFileVolumeConfigFileToPaths.
         * See Block_config_file_volume_config_file_to_path below for details.
         */
        configFileVolumeConfigFileToPaths?: pulumi.Input<pulumi.Input<inputs.ess.EciScalingConfigurationVolumeConfigFileVolumeConfigFileToPath>[]>;
        /**
         * The ID of DiskVolume.
         */
        diskVolumeDiskId?: pulumi.Input<string>;
        diskVolumeDiskSize?: pulumi.Input<number>;
        /**
         * The system type of DiskVolume.
         */
        diskVolumeFsType?: pulumi.Input<string>;
        /**
         * The name of the FlexVolume driver.
         */
        flexVolumeDriver?: pulumi.Input<string>;
        /**
         * The type of the mounted file system. The default value is determined by the script
         * of FlexVolume.
         */
        flexVolumeFsType?: pulumi.Input<string>;
        /**
         * The list of FlexVolume objects. Each object is a key-value pair contained in a JSON
         * string.
         */
        flexVolumeOptions?: pulumi.Input<string>;
        /**
         * The name of the volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The path to the NFS volume.
         */
        nfsVolumePath?: pulumi.Input<string>;
        /**
         * The nfs volume read only. Default to `false`.
         */
        nfsVolumeReadOnly?: pulumi.Input<boolean>;
        /**
         * The address of the NFS server.
         */
        nfsVolumeServer?: pulumi.Input<string>;
        /**
         * The type of the volume.
         */
        type?: pulumi.Input<string>;
    }

    export interface EciScalingConfigurationVolumeConfigFileVolumeConfigFileToPath {
        /**
         * The content of the configuration file. Maximum size: 32 KB.
         */
        content?: pulumi.Input<string>;
        /**
         * The relative file path.
         */
        path?: pulumi.Input<string>;
    }

    export interface ScalingConfigurationDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        category?: pulumi.Input<string>;
        deleteWithInstance?: pulumi.Input<boolean>;
        description?: pulumi.Input<string>;
        /**
         * @deprecated Attribute device has been deprecated on disk attachment resource. Suggest to remove it from your template.
         */
        device?: pulumi.Input<string>;
        encrypted?: pulumi.Input<boolean>;
        kmsKeyId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        performanceLevel?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface ScalingConfigurationInstancePatternInfo {
        cores?: pulumi.Input<number>;
        instanceFamilyLevel?: pulumi.Input<string>;
        maxPrice?: pulumi.Input<number>;
        memory?: pulumi.Input<number>;
    }

    export interface ScalingConfigurationSpotPriceLimit {
        /**
         * Resource type of an ECS instance.
         */
        instanceType?: pulumi.Input<string>;
        priceLimit?: pulumi.Input<number>;
    }

    export interface ScalingGroupVServerGroupsVserverGroup {
        loadbalancerId: pulumi.Input<string>;
        vserverAttributes: pulumi.Input<pulumi.Input<inputs.ess.ScalingGroupVServerGroupsVserverGroupVserverAttribute>[]>;
    }

    export interface ScalingGroupVServerGroupsVserverGroupVserverAttribute {
        port: pulumi.Input<number>;
        vserverGroupId: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface ScalingRuleStepAdjustment {
        metricIntervalLowerBound?: pulumi.Input<string>;
        metricIntervalUpperBound?: pulumi.Input<string>;
        scalingAdjustment?: pulumi.Input<number>;
    }
}

export namespace eventbridge {
    export interface RuleTarget {
        /**
         * Dead letter queue. Events that are not processed or exceed the number of retries will be written to the dead letter. Support message service MNS and message queue RocketMQ. See the following `Block deadLetterQueue`.
         */
        deadLetterQueue?: pulumi.Input<inputs.eventbridge.RuleTargetDeadLetterQueue>;
        /**
         * The endpoint of target.
         */
        endpoint: pulumi.Input<string>;
        /**
         * A list of param. See the following `Block paramList`.
         */
        paramLists: pulumi.Input<pulumi.Input<inputs.eventbridge.RuleTargetParamList>[]>;
        /**
         * The retry policy that is used to push the event. Valid values:
         */
        pushRetryStrategy?: pulumi.Input<string>;
        /**
         * The ID of target.
         */
        targetId: pulumi.Input<string>;
        /**
         * The type of target. Valid values: `acs.fc.function`, `acs.mns.topic`, `acs.mns.queue`,`http`,`acs.sms`,`acs.mail`,`acs.dingtalk`,`https`, `acs.eventbridge`,`acs.rabbitmq` and `acs.rocketmq`.
         */
        type: pulumi.Input<string>;
    }

    export interface RuleTargetDeadLetterQueue {
        /**
         * The srn of the dead letter queue.
         */
        arn?: pulumi.Input<string>;
    }

    export interface RuleTargetParamList {
        /**
         * The format of param.  Valid values: `ORIGINAL`, `TEMPLATE`, `JSONPATH`, `CONSTANT`.
         */
        form: pulumi.Input<string>;
        /**
         * The resource key of param.  For more information, see [Event target parameters](https://help.aliyun.com/document_detail/185887.htm)
         */
        resourceKey: pulumi.Input<string>;
        /**
         * The template of param.
         */
        template?: pulumi.Input<string>;
        /**
         * The value of param.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace expressconnect {
    export interface GetRouterInterfacesFilter {
        key?: string;
        values?: string[];
    }

    export interface GetRouterInterfacesFilterArgs {
        key?: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetVirtualBorderRoutersFilter {
        /**
         * The key of the field to filter by, as defined by
         * [Alibaba Cloud API](https://www.alibabacloud.com/help/en/doc-detail/124791.htm).
         */
        key?: string;
        /**
         * Set of values that are accepted for the given field.
         */
        values?: string[];
    }

    export interface GetVirtualBorderRoutersFilterArgs {
        /**
         * The key of the field to filter by, as defined by
         * [Alibaba Cloud API](https://www.alibabacloud.com/help/en/doc-detail/124791.htm).
         */
        key?: pulumi.Input<string>;
        /**
         * Set of values that are accepted for the given field.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace fc {
    export interface AliasRoutingConfig {
        /**
         * A map that defines the proportion of events that should be sent to different versions of a Function Compute service.
         */
        additionalVersionWeights?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    }

    export interface CustomDomainCertConfig {
        /**
         * The name of the certificate, used to distinguish different certificates.
         */
        certName: pulumi.Input<string>;
        /**
         * Certificate data of the HTTPS certificates, follow the 'pem' format.
         */
        certificate: pulumi.Input<string>;
        /**
         * Private key of the HTTPS certificates, follow the 'pem' format.
         */
        privateKey: pulumi.Input<string>;
    }

    export interface CustomDomainRouteConfig {
        /**
         * The name of the Function Compute function that requests are routed to.
         */
        functionName: pulumi.Input<string>;
        /**
         * The requests of the specified HTTP methos are routed from. Valid method: GET, POST, DELETE, HEAD, PUT and PATCH. For example, "GET, HEAD" methods indicate that only requests from GET and HEAD methods are routed.
         */
        methods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The path that requests are routed from.
         */
        path: pulumi.Input<string>;
        /**
         * The version or alias of the Function Compute service that requests are routed to. For example, qualifier v1 indicates that the requests are routed to the version 1 Function Compute service. For detail information about version and alias, please refer to the [developer guide](https://www.alibabacloud.com/help/doc-detail/96464.htm).
         */
        qualifier?: pulumi.Input<string>;
        serviceName: pulumi.Input<string>;
    }

    export interface FunctionAsyncInvokeConfigDestinationConfig {
        /**
         * Configuration block with destination configuration for failed asynchronous invocations. See below for details.
         */
        onFailure?: pulumi.Input<inputs.fc.FunctionAsyncInvokeConfigDestinationConfigOnFailure>;
        /**
         * Configuration block with destination configuration for successful asynchronous invocations. See below for details.
         */
        onSuccess?: pulumi.Input<inputs.fc.FunctionAsyncInvokeConfigDestinationConfigOnSuccess>;
    }

    export interface FunctionAsyncInvokeConfigDestinationConfigOnFailure {
        /**
         * Alicloud Resource Name (ARN) of the destination resource. See the [Developer Guide](https://www.alibabacloud.com/help/doc-detail/181866.htm) for acceptable resource types and associated RAM permissions.
         */
        destination: pulumi.Input<string>;
    }

    export interface FunctionAsyncInvokeConfigDestinationConfigOnSuccess {
        /**
         * Alicloud Resource Name (ARN) of the destination resource. See the [Developer Guide](https://www.alibabacloud.com/help/doc-detail/181866.htm) for acceptable resource types and associated RAM permissions.
         */
        destination: pulumi.Input<string>;
    }

    export interface FunctionCustomContainerConfig {
        /**
         * The args field specifies the arguments passed to the command.
         */
        args?: pulumi.Input<string>;
        /**
         * The entry point of the container, which specifies the actual command run by the container.
         */
        command?: pulumi.Input<string>;
        /**
         * The container image address.
         */
        image: pulumi.Input<string>;
    }

    export interface ServiceLogConfig {
        /**
         * Enable instance level metrics.
         */
        enableInstanceMetrics?: pulumi.Input<boolean>;
        /**
         * Enable request level metrics.
         */
        enableRequestMetrics?: pulumi.Input<boolean>;
        /**
         * The log store name of Alicloud Simple Log Service.
         */
        logstore: pulumi.Input<string>;
        /**
         * The project name of the Alicloud Simple Log Service.
         */
        project: pulumi.Input<string>;
    }

    export interface ServiceNasConfig {
        /**
         * The group id of your NAS file system.
         */
        groupId: pulumi.Input<number>;
        /**
         * Config the NAS mount points, including following attributes:
         */
        mountPoints: pulumi.Input<pulumi.Input<inputs.fc.ServiceNasConfigMountPoint>[]>;
        /**
         * The user id of your NAS file system.
         */
        userId: pulumi.Input<number>;
    }

    export interface ServiceNasConfigMountPoint {
        /**
         * The local address where to mount your remote NAS directory.
         */
        mountDir: pulumi.Input<string>;
        /**
         * The address of the remote NAS directory.
         */
        serverAddr: pulumi.Input<string>;
    }

    export interface ServiceTracingConfig {
        /**
         * Tracing parameters, which type is map[string]string. When the protocol type is Jaeger, the key is "endpoint" and the value is your tracing intranet endpoint. For example endpoint: http://tracing-analysis-dc-hz.aliyuncs.com/adapt_xxx/api/traces.
         */
        params: pulumi.Input<{[key: string]: any}>;
        /**
         * Tracing protocol type. Currently, only Jaeger is supported.
         */
        type: pulumi.Input<string>;
    }

    export interface ServiceVpcConfig {
        /**
         * A security group ID associated with the Function Compute Service.
         */
        securityGroupId: pulumi.Input<string>;
        vpcId?: pulumi.Input<string>;
        /**
         * A list of vswitch IDs associated with the Function Compute Service.
         */
        vswitchIds: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace fnf {
}

export namespace ga {
    export interface AclAclEntry {
        /**
         * The IP entry that you want to add to the ACL.
         */
        entry?: pulumi.Input<string>;
        /**
         * The description of the IP entry. The description must be `1` to `256` characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.),and underscores (_).
         */
        entryDescription?: pulumi.Input<string>;
    }

    export interface CustomRoutingEndpointTrafficPolicyPortRange {
        /**
         * The start port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
         */
        fromPort?: pulumi.Input<number>;
        /**
         * The end port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
         */
        toPort?: pulumi.Input<number>;
    }

    export interface EndpointGroupEndpointConfiguration {
        /**
         * Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
         */
        enableClientipPreservation?: pulumi.Input<boolean>;
        /**
         * The IP address or domain name of Endpoint N in the endpoint group.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
         */
        type: pulumi.Input<string>;
        /**
         * The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
         */
        weight: pulumi.Input<number>;
    }

    export interface EndpointGroupPortOverrides {
        /**
         * Forwarding port.
         */
        endpointPort?: pulumi.Input<number>;
        /**
         * Listener port.
         */
        listenerPort?: pulumi.Input<number>;
    }

    export interface ForwardingRuleRuleAction {
        /**
         * Forwarding configuration.
         */
        forwardGroupConfig: pulumi.Input<inputs.ga.ForwardingRuleRuleActionForwardGroupConfig>;
        /**
         * Forwarding priority.
         */
        order: pulumi.Input<number>;
        /**
         * Forward action type. Default: forwardgroup.
         */
        ruleActionType: pulumi.Input<string>;
    }

    export interface ForwardingRuleRuleActionForwardGroupConfig {
        /**
         * Terminal node group configuration.
         */
        serverGroupTuples: pulumi.Input<pulumi.Input<inputs.ga.ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple>[]>;
    }

    export interface ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
        /**
         * Terminal node group ID.
         */
        endpointGroupId: pulumi.Input<string>;
    }

    export interface ForwardingRuleRuleCondition {
        /**
         * Domain name configuration information.
         */
        hostConfigs?: pulumi.Input<pulumi.Input<inputs.ga.ForwardingRuleRuleConditionHostConfig>[]>;
        /**
         * Path configuration information.
         */
        pathConfig?: pulumi.Input<inputs.ga.ForwardingRuleRuleConditionPathConfig>;
        /**
         * Forwarding condition type. Valid value: `Host`, `Path`.
         */
        ruleConditionType: pulumi.Input<string>;
    }

    export interface ForwardingRuleRuleConditionHostConfig {
        /**
         * The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ForwardingRuleRuleConditionPathConfig {
        /**
         * The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ListenerCertificate {
        /**
         * The id of the certificate.
         */
        id?: pulumi.Input<string>;
    }

    export interface ListenerPortRange {
        /**
         * The initial listening port used to receive requests and forward them to terminal nodes.
         */
        fromPort: pulumi.Input<number>;
        /**
         * The end listening port used to receive requests and forward them to terminal nodes.
         */
        toPort: pulumi.Input<number>;
    }
}

export namespace gpdb {
    export interface DbInstancePlanPlanConfig {
        /**
         * Pause instance plan config. See the following `Block pause`.
         */
        pause?: pulumi.Input<inputs.gpdb.DbInstancePlanPlanConfigPause>;
        /**
         * Resume instance plan config. See the following `Block resume`.
         */
        resume?: pulumi.Input<inputs.gpdb.DbInstancePlanPlanConfigResume>;
        /**
         * Scale In instance plan config. See the following `Block scaleIn`.
         */
        scaleIn?: pulumi.Input<inputs.gpdb.DbInstancePlanPlanConfigScaleIn>;
        /**
         * Scale out instance plan config. See the following `Block scaleOut`.
         */
        scaleOut?: pulumi.Input<inputs.gpdb.DbInstancePlanPlanConfigScaleOut>;
    }

    export interface DbInstancePlanPlanConfigPause {
        /**
         * The executed time of the Plan.
         */
        executeTime?: pulumi.Input<string>;
        /**
         * The Cron Time of the plan.
         */
        planCronTime?: pulumi.Input<string>;
    }

    export interface DbInstancePlanPlanConfigResume {
        /**
         * The executed time of the Plan.
         */
        executeTime?: pulumi.Input<string>;
        /**
         * The Cron Time of the plan.
         */
        planCronTime?: pulumi.Input<string>;
    }

    export interface DbInstancePlanPlanConfigScaleIn {
        /**
         * The executed time of the Plan.
         */
        executeTime?: pulumi.Input<string>;
        /**
         * The Cron Time of the plan.
         */
        planCronTime?: pulumi.Input<string>;
        /**
         * The segment Node Num of the Plan.
         */
        segmentNodeNum?: pulumi.Input<string>;
    }

    export interface DbInstancePlanPlanConfigScaleOut {
        /**
         * The executed time of the Plan.
         */
        executeTime?: pulumi.Input<string>;
        /**
         * The Cron Time of the plan.
         */
        planCronTime?: pulumi.Input<string>;
        /**
         * The segment Node Num of the Plan.
         */
        segmentNodeNum?: pulumi.Input<string>;
    }

    export interface InstanceIpWhitelist {
        /**
         * The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
         */
        ipGroupAttribute?: pulumi.Input<string>;
        /**
         * IP whitelist group name
         */
        ipGroupName?: pulumi.Input<string>;
        /**
         * Field `securityIpList` has been deprecated from provider version 1.187.0. New field `ipWhitelist` instead.
         */
        securityIpList: pulumi.Input<string>;
    }
}

export namespace graphdatabase {
    export interface DbInstanceDbInstanceIpArray {
        /**
         * The default is empty. To distinguish between the different property console does not display a `hidden` label grouping.
         */
        dbInstanceIpArrayAttribute?: pulumi.Input<string>;
        /**
         * IP ADDRESS whitelist group name.
         */
        dbInstanceIpArrayName?: pulumi.Input<string>;
        /**
         * IP ADDRESS whitelist addresses in the IP ADDRESS list, and a maximum of 1000 comma-separated format is as follows: `0.0.0.0/0` and `10.23.12.24`(IP) or `10.23.12.24/24`(CIDR mode, CIDR (Classless Inter-Domain Routing)/24 represents the address prefixes in the length of the range [1,32]).
         */
        securityIps?: pulumi.Input<string>;
    }

}

export namespace hbase {
    export interface InstanceSlbConnAddr {
        connAddr?: pulumi.Input<string>;
        connAddrPort?: pulumi.Input<string>;
        netType?: pulumi.Input<string>;
    }

    export interface InstanceUiProxyConnAddr {
        connAddr?: pulumi.Input<string>;
        connAddrPort?: pulumi.Input<string>;
        netType?: pulumi.Input<string>;
    }

    export interface InstanceZkConnAddr {
        connAddr?: pulumi.Input<string>;
        connAddrPort?: pulumi.Input<string>;
        netType?: pulumi.Input<string>;
    }
}

export namespace hbr {
    export interface GetBackupJobsFilter {
        /**
         * The key of the field to filter. Valid values: `PlanId`, `VaultId`, `InstanceId`, `Bucket`, `FileSystemId`, `CompleteTime`.
         */
        key?: string;
        /**
         * The operator of the field to filter. Valid values: `EQUAL`, `NOT_EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `BETWEEN`, `IN`.
         */
        operator?: string;
        /**
         * Set of values that are accepted for the given field.
         */
        values?: string[];
    }

    export interface GetBackupJobsFilterArgs {
        /**
         * The key of the field to filter. Valid values: `PlanId`, `VaultId`, `InstanceId`, `Bucket`, `FileSystemId`, `CompleteTime`.
         */
        key?: pulumi.Input<string>;
        /**
         * The operator of the field to filter. Valid values: `EQUAL`, `NOT_EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `BETWEEN`, `IN`.
         */
        operator?: pulumi.Input<string>;
        /**
         * Set of values that are accepted for the given field.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetServerBackupPlansFilter {
        /**
         * The key of the field to filter. Valid values: `planId`, `instanceId`, `planName`.
         */
        key?: string;
        /**
         * Set of values that are accepted for the given field.
         */
        values?: string[];
    }

    export interface GetServerBackupPlansFilterArgs {
        /**
         * The key of the field to filter. Valid values: `planId`, `instanceId`, `planName`.
         */
        key?: pulumi.Input<string>;
        /**
         * Set of values that are accepted for the given field.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface OtsBackupPlanOtsDetail {
        /**
         * The names of the destination tables in the Tablestore instance. **Note:** Required while sourceType equals `OTS_TABLE`.
         */
        tableNames?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface OtsBackupPlanRule {
        /**
         * Backup type. Valid values: `COMPLETE`.
         */
        backupType?: pulumi.Input<string>;
        /**
         * Whether to disable the backup task. Valid values: `true`, `false`. Default values: `false`.
         */
        disabled?: pulumi.Input<boolean>;
        /**
         * Backup retention days, the minimum is 1.
         */
        retention?: pulumi.Input<string>;
        /**
         * The name of the backup rule.**Note:** Required while sourceType equals `OTS_TABLE`. `ruleName` should be unique for the specific user.
         */
        ruleName?: pulumi.Input<string>;
        /**
         * Backup strategy. Optional format: `I|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
         */
        schedule?: pulumi.Input<string>;
    }

    export interface RestoreJobOtsDetail {
        /**
         * Whether to overwrite the existing table storage recovery task. Valid values: `true`, `false`.
         */
        overwriteExisting?: pulumi.Input<boolean>;
    }

    export interface ServerBackupPlanDetail {
        /**
         * Whether to turn on application consistency. The application consistency snapshot backs up memory data and ongoing database transactions at the time of snapshot creation to ensure the consistency of application system data and database transactions. By applying consistent snapshots, there is no data damage or loss, so as to avoid log rollback during database startup and ensure that the application is in a consistent startup state. Valid values: `true`, `false`.
         */
        appConsistent: pulumi.Input<boolean>;
        /**
         * Only vaild when DoCopy is true. The destination region ID when replicating to another region. **Note:** Once you set a value of this property, you cannot set it to an empty string anymore.
         */
        destinationRegionId?: pulumi.Input<string>;
        /**
         * Only vaild when DoCopy is true. The retention days of the destination backup. When not specified, the destination backup will be saved permanently. **Note:** Once you set a value of this property, you cannot set it to an empty string anymore.
         */
        destinationRetention?: pulumi.Input<number>;
        /**
         * The list of cloud disks to be backed up in the ECS instance. When not specified, a snapshot is executed for all the disks on the ECS instance.
         */
        diskIdLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether replicate to another region. Valid values: `true`, `false`.
         */
        doCopy?: pulumi.Input<boolean>;
        /**
         * Only the Linux system is valid. Whether to use the Linux FsFreeze mechanism to ensure that the file system is read-only consistent before creating a storage snapshot. The default is True. Valid values: `true`, `false`.
         */
        enableFsFreeze?: pulumi.Input<boolean>;
        /**
         * Only vaild for the linux system when AppConsistent is true. The application thaw script path (e.g. /tmp/postscript.sh). The postscript.sh script must meet the following conditions: in terms of permissions, only the root user as the owner has read, write, and execute permissions, that is, 700 permissions. In terms of content, the script content needs to be customized according to the application itself. This indicates that this parameter must be set when creating an application consistency snapshot for a Linux instance. If the script is set incorrectly (for example, permissions, save path, or file name are set incorrectly), the resulting snapshot is a file system consistency snapshot.
         */
        postScriptPath?: pulumi.Input<string>;
        /**
         * Only vaild for the linux system when AppConsistent is true. Apply the freeze script path (e.g. /tmp/prescript.sh). prescript.sh scripts must meet the following conditions: in terms of permissions, only root, as the owner, has read, write, and execute permissions, that is, 700 permissions. In terms of content, the script content needs to be customized according to the application itself. This indicates that this parameter must be set when creating an application consistency snapshot for a Linux instance. If the script is set incorrectly (for example, permissions, save path, or file name are set incorrectly), the resulting snapshot is a file system consistency snapshot.
         */
        preScriptPath?: pulumi.Input<string>;
        /**
         * Whether to turn on file system consistency. If SnapshotGroup is true, when AppConsistent is true but the relevant conditions are not met or AppConsistent is false, the resulting snapshot will be a file system consistency snapshot. The file system consistency ensures that the file system memory and disk information are synchronized at the time of snapshot creation, and the file system write operation is frozen to make the file system in a consistent state. The file system consistency snapshot can prevent the operating system from performing disk inspection and repair operations such as CHKDSK or fsck after restart. Valid values: `true`, `false`.
         */
        snapshotGroup: pulumi.Input<boolean>;
        /**
         * Only the Linux system is valid, and the IO freeze timeout period. The default is 30 seconds.
         */
        timeoutInSeconds?: pulumi.Input<number>;
    }
}

export namespace imm {
}

export namespace imp {
    export interface AppTemplateConfigList {
        /**
         * Configuration item key. Valid values: ["config.appCallbackAuthKey","config.appCallbackUrl","config.callbackClass.live","config.callbackClass.user","config.livePullDomain","config.livePushDomain","config.multipleClientsLogin","config.regionId","config.streamChangeCallbackUrl"].
         */
        key?: pulumi.Input<string>;
        /**
         * Configuration item content.
         */
        value?: pulumi.Input<string>;
    }

}

export namespace iot {
}

export namespace kms {
}

export namespace kvstore {
    export interface InstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace lindorm {
}

export namespace log {
    export interface AlertAnnotation {
        /**
         * Annotations's key for new alert.
         */
        key: pulumi.Input<string>;
        /**
         * Annotations's value for new alert.
         */
        value: pulumi.Input<string>;
    }

    export interface AlertGroupConfiguration {
        fields?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * including FixedRate,Hourly,Daily,Weekly,Cron.
         */
        type: pulumi.Input<string>;
    }

    export interface AlertJoinConfiguration {
        /**
         * Join condition.
         */
        condition: pulumi.Input<string>;
        /**
         * including FixedRate,Hourly,Daily,Weekly,Cron.
         */
        type: pulumi.Input<string>;
    }

    export interface AlertLabel {
        /**
         * Annotations's key for new alert.
         */
        key: pulumi.Input<string>;
        /**
         * Annotations's value for new alert.
         */
        value: pulumi.Input<string>;
    }

    export interface AlertNotificationList {
        /**
         * Notice content of alarm.
         */
        content: pulumi.Input<string>;
        /**
         * Email address list.
         */
        emailLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SMS sending mobile number.
         */
        mobileLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Request address.
         */
        serviceUri?: pulumi.Input<string>;
        /**
         * including FixedRate,Hourly,Daily,Weekly,Cron.
         */
        type: pulumi.Input<string>;
    }

    export interface AlertPolicyConfiguration {
        /**
         * Action Policy Id.
         */
        actionPolicyId?: pulumi.Input<string>;
        /**
         * Alert Policy Id.
         */
        alertPolicyId: pulumi.Input<string>;
        /**
         * Repeat interval used by alert policy, 1h, 1m.e.g.
         */
        repeatInterval: pulumi.Input<string>;
    }

    export interface AlertQueryList {
        /**
         * Chart title, optional from 1.161.0+.
         */
        chartTitle?: pulumi.Input<string>;
        /**
         * Query dashboard id.
         */
        dashboardId?: pulumi.Input<string>;
        /**
         * End time. example: 20s.
         */
        end: pulumi.Input<string>;
        /**
         * Query logstore, use store for new alert, Deprecated from 1.161.0+.
         *
         * @deprecated Deprecated from 1.161.0+, use store
         */
        logstore?: pulumi.Input<string>;
        /**
         * default disable, whether to use power sql. support auto, enable, disable.
         */
        powerSqlMode?: pulumi.Input<string>;
        /**
         * Query project.
         */
        project?: pulumi.Input<string>;
        /**
         * Query corresponding to chart. example: * AND aliyun.
         */
        query: pulumi.Input<string>;
        /**
         * Query project region.
         */
        region?: pulumi.Input<string>;
        /**
         * Query project store's ARN.
         */
        roleArn?: pulumi.Input<string>;
        /**
         * Begin time. example: -60s.
         */
        start: pulumi.Input<string>;
        /**
         * Query store for new alert.
         */
        store?: pulumi.Input<string>;
        /**
         * Query store type for new alert, including log,metric,meta.
         */
        storeType?: pulumi.Input<string>;
        /**
         * default Custom. No need to configure this parameter.
         */
        timeSpanType?: pulumi.Input<string>;
    }

    export interface AlertSchedule {
        /**
         * Cron expression when type is Cron.
         */
        cronExpression?: pulumi.Input<string>;
        /**
         * Day of week when type is Weekly, including 0,1,2,3,4,5,6, 0 for Sunday, 1 for Monday
         */
        dayOfWeek?: pulumi.Input<number>;
        delay?: pulumi.Input<number>;
        /**
         * Hour of day when type is Weekly/Daily.
         */
        hour?: pulumi.Input<number>;
        /**
         * Execution interval. 60 seconds minimum, such as 60s, 1h. used when type is FixedRate.
         */
        interval?: pulumi.Input<string>;
        runImmediately?: pulumi.Input<boolean>;
        /**
         * Time zone for schedule.
         */
        timeZone?: pulumi.Input<string>;
        /**
         * including FixedRate,Hourly,Daily,Weekly,Cron.
         */
        type: pulumi.Input<string>;
    }

    export interface AlertSeverityConfiguration {
        /**
         * Severity when this condition is met.
         */
        evalCondition: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Severity for new alert, including 2,4,6,8,10 for Report,Low,Medium,High,Critical.
         */
        severity: pulumi.Input<number>;
    }

    export interface AlertTemplateConfiguration {
        /**
         * Alert template annotations.
         */
        annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Alert template id.
         */
        id: pulumi.Input<string>;
        /**
         * Alert template language including `cn`, `en`.
         */
        lang?: pulumi.Input<string>;
        /**
         * Alert template tokens.
         */
        tokens?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * including FixedRate,Hourly,Daily,Weekly,Cron.
         */
        type: pulumi.Input<string>;
    }

    export interface EtlEtlSink {
        /**
         * Delivery target logstore access key id.
         */
        accessKeyId?: pulumi.Input<string>;
        /**
         * Delivery target logstore access key secret.
         */
        accessKeySecret?: pulumi.Input<string>;
        /**
         * Delivery target logstore region.
         */
        endpoint: pulumi.Input<string>;
        /**
         * An KMS encrypts access key id used to a log etl job. If the `accessKeyId` is filled in, this field will be ignored.
         */
        kmsEncryptedAccessKeyId?: pulumi.Input<string>;
        /**
         * An KMS encrypts access key secret used to a log etl job. If the `accessKeySecret` is filled in, this field will be ignored.
         */
        kmsEncryptedAccessKeySecret?: pulumi.Input<string>;
        /**
         * Delivery target logstore.
         */
        logstore: pulumi.Input<string>;
        /**
         * Delivery target name.
         */
        name: pulumi.Input<string>;
        /**
         * The project where the target logstore is delivered.
         */
        project: pulumi.Input<string>;
        /**
         * Sts role info under delivery target logstore. `roleArn` and `(access_key_id, access_key_secret)` fill in at most one. If you do not fill in both, then you must fill in `(kms_encrypted_access_key_id, kms_encrypted_access_key_secret, kms_encryption_access_key_id_context, kms_encryption_access_key_secret_context)` to use KMS to get the key pair.
         */
        roleArn?: pulumi.Input<string>;
        /**
         * ETL sinks type, the default value is AliyunLOG.
         */
        type?: pulumi.Input<string>;
    }

    export interface OssExportConfigColumn {
        /**
         * The name of the key.
         */
        name: pulumi.Input<string>;
        /**
         * Type of configuration name.
         */
        type: pulumi.Input<string>;
    }

    export interface OssShipperParquetConfig {
        name: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface StoreEncryptConf {
        /**
         * enable encryption. Default `false`
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Supported encryption type, only supports `default(AES)`,` m4`
         */
        encryptType?: pulumi.Input<string>;
        /**
         * User bring your own key (BYOK) encryption [Refer to details](https://www.alibabacloud.com/help/zh/doc-detail/187853.htm), the format is as follows:
         */
        userCmkInfo?: pulumi.Input<inputs.log.StoreEncryptConfUserCmkInfo>;
    }

    export interface StoreEncryptConfUserCmkInfo {
        /**
         * role arn.
         */
        arn: pulumi.Input<string>;
        /**
         * User master key id.
         */
        cmkKeyId: pulumi.Input<string>;
        /**
         * Region id where the  user master key id is located.
         */
        regionId: pulumi.Input<string>;
    }

    export interface StoreIndexFieldSearch {
        /**
         * The alias of one field.
         */
        alias?: pulumi.Input<string>;
        /**
         * Whether the case sensitive for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        caseSensitive?: pulumi.Input<boolean>;
        /**
         * Whether to enable field analytics. Default to true.
         */
        enableAnalytics?: pulumi.Input<boolean>;
        /**
         * Whether includes the chinese for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        includeChinese?: pulumi.Input<boolean>;
        /**
         * Use nested index when type is json
         */
        jsonKeys?: pulumi.Input<pulumi.Input<inputs.log.StoreIndexFieldSearchJsonKey>[]>;
        /**
         * When using the jsonKeys field, this field is required.
         */
        name: pulumi.Input<string>;
        /**
         * The string of several split words, like "\r", "#". It is valid when "type" is "text" or "json".
         */
        token?: pulumi.Input<string>;
        /**
         * The type of one field. Valid values: ["long", "text", "double"]. Default to "long"
         */
        type?: pulumi.Input<string>;
    }

    export interface StoreIndexFieldSearchJsonKey {
        /**
         * The alias of one field.
         */
        alias?: pulumi.Input<string>;
        /**
         * Whether to enable statistics. default to true.
         */
        docValue?: pulumi.Input<boolean>;
        /**
         * When using the jsonKeys field, this field is required.
         */
        name: pulumi.Input<string>;
        /**
         * The type of one field. Valid values: ["long", "text", "double"]. Default to "long"
         */
        type?: pulumi.Input<string>;
    }

    export interface StoreIndexFullText {
        /**
         * Whether the case sensitive for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        caseSensitive?: pulumi.Input<boolean>;
        /**
         * Whether includes the chinese for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        includeChinese?: pulumi.Input<boolean>;
        /**
         * The string of several split words, like "\r", "#". It is valid when "type" is "text" or "json".
         */
        token?: pulumi.Input<string>;
    }

    export interface StoreShard {
        /**
         * The begin value of the shard range(MD5), included in the shard range.
         */
        beginKey?: pulumi.Input<string>;
        /**
         * The end value of the shard range(MD5), not included in shard range.
         */
        endKey?: pulumi.Input<string>;
        /**
         * The ID of the shard.
         */
        id?: pulumi.Input<number>;
        /**
         * Shard status, only two status of `readwrite` and `readonly`.
         */
        status?: pulumi.Input<string>;
    }
}

export namespace marketplace {
}

export namespace maxcompute {
    export interface ProjectIpWhiteList {
        /**
         * Classic network IP white list.
         */
        ipList?: pulumi.Input<string>;
        /**
         * VPC network whitelist.
         */
        vpcIpList?: pulumi.Input<string>;
    }

    export interface ProjectProperties {
        /**
         * Whether to allow full table scan.
         */
        allowFullScan?: pulumi.Input<boolean>;
        /**
         * Whether to turn on Decimal2.0.
         */
        enableDecimal2?: pulumi.Input<boolean>;
        /**
         * Whether encryption is turned on.See the following `Block Encryption`.
         */
        encryption?: pulumi.Input<inputs.maxcompute.ProjectPropertiesEncryption>;
        /**
         * Job default retention time.
         */
        retentionDays?: pulumi.Input<number>;
        /**
         * SQL charge limit.
         */
        sqlMeteringMax?: pulumi.Input<string>;
        /**
         * Life cycle of tables.See the following `Block TableLifecycle`.
         */
        tableLifecycle?: pulumi.Input<inputs.maxcompute.ProjectPropertiesTableLifecycle>;
        /**
         * Project time zone.
         */
        timezone?: pulumi.Input<string>;
        /**
         * Type system.
         */
        typeSystem?: pulumi.Input<string>;
    }

    export interface ProjectPropertiesEncryption {
        /**
         * Algorithm.
         */
        algorithm?: pulumi.Input<string>;
        /**
         * Whether to open.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * Encryption algorithm key.
         */
        key?: pulumi.Input<string>;
    }

    export interface ProjectPropertiesTableLifecycle {
        /**
         * Life cycle type.
         */
        type?: pulumi.Input<string>;
        /**
         * The value of the life cycle.
         */
        value?: pulumi.Input<string>;
    }

    export interface ProjectSecurityProperties {
        /**
         * Whether to enable download permission check.
         */
        enableDownloadPrivilege?: pulumi.Input<boolean>;
        /**
         * Label authorization.
         */
        labelSecurity?: pulumi.Input<boolean>;
        /**
         * Project creator permissions.
         */
        objectCreatorHasAccessPermission?: pulumi.Input<boolean>;
        /**
         * Does the project creator have authorization rights.
         */
        objectCreatorHasGrantPermission?: pulumi.Input<boolean>;
        /**
         * Project protection.See the following `Block ProjectProtection`.
         */
        projectProtection?: pulumi.Input<inputs.maxcompute.ProjectSecurityPropertiesProjectProtection>;
        /**
         * Whether to turn on ACL.
         */
        usingAcl?: pulumi.Input<boolean>;
        /**
         * Whether to enable Policy.
         */
        usingPolicy?: pulumi.Input<boolean>;
    }

    export interface ProjectSecurityPropertiesProjectProtection {
        /**
         * Exclusion policy.
         */
        exceptionPolicy?: pulumi.Input<string>;
        /**
         * Is it turned on.
         */
        protected?: pulumi.Input<boolean>;
    }
}

export namespace message {
}

export namespace mhub {
}

export namespace mns {
}

export namespace mongodb {
    export interface InstanceParameter {
        /**
         * The name of DB instance. It a string of 2 to 256 characters.
         */
        name: pulumi.Input<string>;
        /**
         * The value of the parameter.
         */
        value: pulumi.Input<string>;
    }

    export interface InstanceReplicaSet {
        /**
         * The connection address of the node.
         */
        connectionDomain?: pulumi.Input<string>;
        /**
         * The connection port of the node.
         */
        connectionPort?: pulumi.Input<string>;
        /**
         * The network type of the instance. Valid values:`Classic` or `VPC`. Default value: `Classic`.
         */
        networkType?: pulumi.Input<string>;
        /**
         * The role of the node. Valid values: `Primary`,`Secondary`.
         */
        replicaSetRole?: pulumi.Input<string>;
        /**
         * VPC instance ID.
         */
        vpcCloudInstanceId?: pulumi.Input<string>;
        /**
         * The ID of the VPC. > **NOTE:** This parameter is valid only when NetworkType is set to VPC.
         */
        vpcId?: pulumi.Input<string>;
        /**
         * The virtual switch ID to launch DB instances in one VPC.
         */
        vswitchId?: pulumi.Input<string>;
    }

    export interface ServerlessInstanceSecurityIpGroup {
        /**
         * The attribute of the IP whitelist. This parameter is empty by default.
         */
        securityIpGroupAttribute?: pulumi.Input<string>;
        /**
         * The name of the IP whitelist.
         */
        securityIpGroupName?: pulumi.Input<string>;
        /**
         * The IP addresses in the whitelist.
         */
        securityIpList?: pulumi.Input<string>;
    }

    export interface ShardingInstanceConfigServerList {
        /**
         * The connection address of the Config Server node.
         */
        connectString?: pulumi.Input<string>;
        /**
         * The max connections of the Config Server node.
         */
        maxConnections?: pulumi.Input<number>;
        /**
         * The maximum IOPS of the Config Server node.
         */
        maxIops?: pulumi.Input<number>;
        /**
         * Node specification. see [Instance specifications](https://www.alibabacloud.com/help/doc-detail/57141.htm).
         */
        nodeClass?: pulumi.Input<string>;
        /**
         * The description of the Config Server node.
         */
        nodeDescription?: pulumi.Input<string>;
        /**
         * The ID of the Config Server node.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * - Custom storage space; value range: [10, 1,000]
         * - 10-GB increments. Unit: GB.
         */
        nodeStorage?: pulumi.Input<number>;
        /**
         * The connection port of the Config Server node.
         */
        port?: pulumi.Input<number>;
    }

    export interface ShardingInstanceMongoList {
        /**
         * The connection address of the Config Server node.
         */
        connectString?: pulumi.Input<string>;
        /**
         * Node specification. see [Instance specifications](https://www.alibabacloud.com/help/doc-detail/57141.htm).
         */
        nodeClass: pulumi.Input<string>;
        /**
         * The ID of the Config Server node.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * The connection port of the Config Server node.
         */
        port?: pulumi.Input<number>;
    }

    export interface ShardingInstanceShardList {
        /**
         * Node specification. see [Instance specifications](https://www.alibabacloud.com/help/doc-detail/57141.htm).
         */
        nodeClass: pulumi.Input<string>;
        /**
         * The ID of the Config Server node.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * - Custom storage space; value range: [10, 1,000]
         * - 10-GB increments. Unit: GB.
         */
        nodeStorage: pulumi.Input<number>;
        /**
         * The number of read-only nodes in shard node. Valid values: 0 to 5. Default value: 0.
         */
        readonlyReplicas?: pulumi.Input<number>;
    }

    export interface ShardingNetworkPrivateAddressNetworkAddress {
        /**
         * The remaining duration of the classic network address. Unit: `seconds`.
         */
        expiredTime?: pulumi.Input<string>;
        /**
         * The IP address of the instance.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The endpoint of the instance.
         */
        networkAddress?: pulumi.Input<string>;
        /**
         * The network type.
         */
        networkType?: pulumi.Input<string>;
        /**
         * The ID of the Shard node or the ConfigServer node.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * The type of the node.
         */
        nodeType?: pulumi.Input<string>;
        /**
         * The port number.
         */
        port?: pulumi.Input<string>;
        /**
         * The role of the node.
         */
        role?: pulumi.Input<string>;
        /**
         * The ID of the VPC.
         */
        vpcId?: pulumi.Input<string>;
        /**
         * The vSwitch ID of the VPC.
         */
        vswitchId?: pulumi.Input<string>;
    }

    export interface ShardingNetworkPublicAddressNetworkAddress {
        /**
         * The remaining duration of the classic network address. Unit: `seconds`.
         */
        expiredTime?: pulumi.Input<string>;
        /**
         * The IP address of the instance.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The endpoint of the instance.
         */
        networkAddress?: pulumi.Input<string>;
        /**
         * The network type.
         */
        networkType?: pulumi.Input<string>;
        /**
         * The ID of the `mongos`, `shard`, or `Configserver` node in the sharded cluster instance.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * The type of the node.
         */
        nodeType?: pulumi.Input<string>;
        /**
         * The port number.
         */
        port?: pulumi.Input<string>;
        /**
         * The role of the node.
         */
        role?: pulumi.Input<string>;
        /**
         * The ID of the VPC.
         */
        vpcId?: pulumi.Input<string>;
        /**
         * The vSwitch ID of the VPC.
         */
        vswitchId?: pulumi.Input<string>;
    }
}

export namespace mse {
    export interface GatewaySlbList {
        /**
         * The associate id.
         */
        associateId?: pulumi.Input<string>;
        /**
         * The Mode of the gateway slb.
         */
        gatewaySlbMode?: pulumi.Input<string>;
        /**
         * The Status of the gateway slb.
         */
        gatewaySlbStatus?: pulumi.Input<string>;
        /**
         * The creation time of the gateway slb.
         */
        gmtCreate?: pulumi.Input<string>;
        /**
         * The ID of the gateway slb.
         */
        slbId?: pulumi.Input<string>;
        /**
         * The ip of the gateway slb.
         */
        slbIp?: pulumi.Input<string>;
        /**
         * The port of the gateway slb.
         */
        slbPort?: pulumi.Input<string>;
        /**
         * The type of the gateway slb.
         */
        type?: pulumi.Input<string>;
    }

}

export namespace nas {
}

export namespace nlb {
    export interface LoadBalancerZoneMapping {
        /**
         * The ID of the EIP associated with the Internet-facing NLB instance.
         */
        allocationId?: pulumi.Input<string>;
        /**
         * The ID of the elastic network interface (ENI).
         */
        eniId?: pulumi.Input<string>;
        /**
         * The IPv6 address of the NLB instance.
         */
        ipv6Address?: pulumi.Input<string>;
        /**
         * The private IPv4 address of the NLB instance.
         */
        privateIpv4Address?: pulumi.Input<string>;
        /**
         * The public IPv4 address of the NLB instance.
         */
        publicIpv4Address?: pulumi.Input<string>;
        /**
         * The vSwitch in the zone. You can specify only one vSwitch (subnet) in each zone of an NLB instance.
         */
        vswitchId: pulumi.Input<string>;
        /**
         * The ID of the zone of the NLB instance.
         */
        zoneId: pulumi.Input<string>;
    }

    export interface ServerGroupHealthCheck {
        /**
         * The backend port that is used for health checks. Valid values: 0 to 65535. Default value: 0. If you set the value to 0, the port of a backend server is used for health checks.
         */
        healthCheckConnectPort?: pulumi.Input<number>;
        /**
         * The maximum timeout period of a health check response. Unit: seconds. Valid values: 1 to 300. Default value: 5.
         */
        healthCheckConnectTimeout?: pulumi.Input<number>;
        /**
         * The domain name that is used for health checks. Valid values:
         * - `$SERVER_IP`: the private IP address of a backend server.
         */
        healthCheckDomain?: pulumi.Input<string>;
        /**
         * Specifies whether to enable health checks.
         */
        healthCheckEnabled?: pulumi.Input<boolean>;
        /**
         * The HTTP status codes to return to health checks. Separate multiple HTTP status codes with commas (,). Valid values: http2xx (default), http_3xx, http_4xx, and http_5xx. **Note:** This parameter takes effect only if `healthCheckType` is set to `http`.
         */
        healthCheckHttpCodes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The interval between two consecutive health checks. Unit: seconds. Valid values: 5 to 5000. Default value: 10.
         */
        healthCheckInterval?: pulumi.Input<number>;
        /**
         * The protocol that is used for health checks. Valid values: `TCP` (default) and `HTTP`.
         */
        healthCheckType?: pulumi.Input<string>;
        /**
         * The path to which health check requests are sent. The path must be 1 to 80 characters in length, and can contain only letters, digits, and the following special characters: `- / . % ? # & =`. It can also contain the following extended characters: `_ ; ~ ! ( ) * [ ] @ $ ^ : ' , +`. The path must start with a forward slash (/). **Note:** This parameter takes effect only if `healthCheckType` is set to `http`.
         */
        healthCheckUrl?: pulumi.Input<string>;
        /**
         * The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy. In this case, the health status is changed from fail to success. Valid values: 2 to 10. Default value: 2.
         */
        healthyThreshold?: pulumi.Input<number>;
        /**
         * The HTTP method that is used for health checks. Valid values: `GET` and `HEAD`. **Note:** This parameter takes effect only if `healthCheckType` is set to `http`.
         */
        httpCheckMethod?: pulumi.Input<string>;
        /**
         * The number of times that a healthy backend server must consecutively fail health checks before it is declared unhealthy. In this case, the health status is changed from success to fail. Valid values: 2 to 10. Default value: 2.
         */
        unhealthyThreshold?: pulumi.Input<number>;
    }
}

export namespace ocean {
}

export namespace oos {
}

export namespace opensearch {
    export interface AppGroupOrder {
        /**
         * Whether to renew automatically. It only takes effect when the parameter paymentType takes the value `Subscription`.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * Order cycle. The minimum value is not less than 0.
         */
        duration?: pulumi.Input<number>;
        /**
         * Order cycle unit. Valid values: `Year` and `Month`.
         */
        pricingCycle?: pulumi.Input<string>;
    }

    export interface AppGroupQuota {
        /**
         * Computing resources. Unit: LCU.
         */
        computeResource: pulumi.Input<number>;
        /**
         * Storage Size. Unit: GB.
         */
        docSize: pulumi.Input<number>;
        /**
         * Search request. Unit: times/second.
         */
        qps?: pulumi.Input<number>;
        /**
         * Specification. Valid values: 
         * * `opensearch.share.junior`: Entry-level.
         * * `opensearch.share.common`: Shared universal.
         * * `opensearch.share.compute`: Shared computing.
         * * `opensearch.share.storage`: Shared storage type.
         * * `opensearch.private.common`: Exclusive universal type.
         * * `opensearch.private.compute`: Exclusive computing type.
         * * `opensearch.private.storage`: Exclusive storage type
         */
        spec: pulumi.Input<string>;
    }

}

export namespace oss {
    export interface BucketCorsRule {
        /**
         * Specifies which headers are allowed.
         */
        allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which methods are allowed. Can be GET, PUT, POST, DELETE or HEAD.
         */
        allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which origins are allowed.
         */
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies expose header in the response.
         */
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies time in seconds that browser can cache the response for a preflight request.
         */
        maxAgeSeconds?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRule {
        /**
         * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed (documented below).
         */
        abortMultipartUploads?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleAbortMultipartUpload>[]>;
        /**
         * Specifies lifecycle rule status.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specifies a period in the object's expire (documented below).
         */
        expirations?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleExpiration>[]>;
        /**
         * Unique identifier for the rule. If omitted, OSS bucket will assign a unique name.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies when noncurrent object versions expire (documented below).
         */
        noncurrentVersionExpirations?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleNoncurrentVersionExpiration>[]>;
        /**
         * Specifies when noncurrent object versions transitions (documented below).
         */
        noncurrentVersionTransitions?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleNoncurrentVersionTransition>[]>;
        /**
         * Object key prefix identifying one or more objects to which the rule applies. Default value is null, the rule applies to all objects in a bucket.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies the time when an object is converted to the IA or archive storage class during a valid life cycle. (documented below).
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleTransition>[]>;
    }

    export interface BucketLifecycleRuleAbortMultipartUpload {
        /**
         * Specifies the time before which the rules take effect. The date must conform to the ISO8601 format and always be UTC 00:00. For example: 2002-10-11T00:00:00.000Z indicates that objects updated before 2002-10-11T00:00:00.000Z are deleted or converted to another storage class, and objects updated after this time (including this time) are not deleted or converted.
         */
        createdBeforeDate?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleExpiration {
        /**
         * Specifies the time before which the rules take effect. The date must conform to the ISO8601 format and always be UTC 00:00. For example: 2002-10-11T00:00:00.000Z indicates that objects updated before 2002-10-11T00:00:00.000Z are deleted or converted to another storage class, and objects updated after this time (including this time) are not deleted or converted.
         */
        createdBeforeDate?: pulumi.Input<string>;
        /**
         * Specifies the date after which you want the corresponding action to take effect. The value obeys ISO8601 format like `2017-03-09`.
         */
        date?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct OSS to delete expired object delete markers. This cannot be specified with Days, Date or CreatedBeforeDate in a Lifecycle Expiration Policy.
         */
        expiredObjectDeleteMarker?: pulumi.Input<boolean>;
    }

    export interface BucketLifecycleRuleNoncurrentVersionExpiration {
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleNoncurrentVersionTransition {
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days: pulumi.Input<number>;
        /**
         * The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be "Standard", "IA", "Archive" and "ColdArchive". Defaults to "Standard". "ColdArchive" is available in 1.203.0+.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketLifecycleRuleTransition {
        /**
         * Specifies the time before which the rules take effect. The date must conform to the ISO8601 format and always be UTC 00:00. For example: 2002-10-11T00:00:00.000Z indicates that objects updated before 2002-10-11T00:00:00.000Z are deleted or converted to another storage class, and objects updated after this time (including this time) are not deleted or converted.
         */
        createdBeforeDate?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be "Standard", "IA", "Archive" and "ColdArchive". Defaults to "Standard". "ColdArchive" is available in 1.203.0+.
         */
        storageClass?: pulumi.Input<string>;
    }

    export interface BucketLogging {
        /**
         * The name of the bucket that will receive the log objects.
         */
        targetBucket: pulumi.Input<string>;
        /**
         * To specify a key prefix for log objects.
         */
        targetPrefix?: pulumi.Input<string>;
    }

    export interface BucketRefererConfig {
        /**
         * Allows referer to be empty. Defaults false.
         */
        allowEmpty?: pulumi.Input<boolean>;
        /**
         * The list of referer.
         */
        referers: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BucketReplicationDestination {
        /**
         * The destination bucket to which the data is replicated.
         */
        bucket: pulumi.Input<string>;
        location: pulumi.Input<string>;
        /**
         * The link used to transfer data in data replication.. Can be `internal` or `ossAcc`. Defaults to `internal`.
         */
        transferType?: pulumi.Input<string>;
    }

    export interface BucketReplicationEncryptionConfiguration {
        /**
         * The CMK ID used in SSE-KMS.
         */
        replicaKmsKeyId: pulumi.Input<string>;
    }

    export interface BucketReplicationPrefixSet {
        /**
         * The list of object key name prefix identifying one or more objects to which the rule applies.
         */
        prefixes: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BucketReplicationProgress {
        /**
         * The percentage of the replicated historical data. This element is valid only when historicalObjectReplication is set to enabled.
         */
        historicalObject?: pulumi.Input<string>;
        /**
         * The time used to distinguish new data from historical data. Data that is written to the source bucket before the time is replicated to the destination bucket as new data. The value of this element is in GMT.
         */
        newObject?: pulumi.Input<string>;
    }

    export interface BucketReplicationSourceSelectionCriteria {
        /**
         * Filter source objects encrypted by using SSE-KMS(See the following block `sseKmsEncryptedObjects`).
         */
        sseKmsEncryptedObjects?: pulumi.Input<inputs.oss.BucketReplicationSourceSelectionCriteriaSseKmsEncryptedObjects>;
    }

    export interface BucketReplicationSourceSelectionCriteriaSseKmsEncryptedObjects {
        /**
         * Specifies whether to replicate objects encrypted by using SSE-KMS. Can be `Enabled` or `Disabled`.
         */
        status?: pulumi.Input<string>;
    }

    export interface BucketServerSideEncryptionRule {
        /**
         * The alibaba cloud KMS master key ID used for the SSE-KMS encryption.
         */
        kmsMasterKeyId?: pulumi.Input<string>;
        /**
         * The server-side encryption algorithm to use. Possible values: `AES256` and `KMS`.
         */
        sseAlgorithm: pulumi.Input<string>;
    }

    export interface BucketTransferAcceleration {
        /**
         * Specifies lifecycle rule status.
         */
        enabled: pulumi.Input<boolean>;
    }

    export interface BucketVersioning {
        /**
         * Specifies the versioning state of a bucket. Valid values: `Enabled` and `Suspended`.
         */
        status: pulumi.Input<string>;
    }

    export interface BucketWebsite {
        /**
         * An absolute path to the document to return in case of a 4XX error.
         */
        errorDocument?: pulumi.Input<string>;
        /**
         * Alicloud OSS returns this index document when requests are made to the root domain or any of the subfolders.
         */
        indexDocument: pulumi.Input<string>;
    }

}

export namespace ots {
    export interface SearchIndexSchema {
        /**
         * A list of field schemas. Each field schema contains the following parameters:
         */
        fieldSchemas: pulumi.Input<pulumi.Input<inputs.ots.SearchIndexSchemaFieldSchema>[]>;
        /**
         * The settings of the search index, including routingFields.
         */
        indexSettings?: pulumi.Input<pulumi.Input<inputs.ots.SearchIndexSchemaIndexSetting>[]>;
        /**
         * The presorting settings of the search index, including sorters. If no value is specified for the indexSort parameter, field values are sorted by primary key by default.
         */
        indexSorts?: pulumi.Input<pulumi.Input<inputs.ots.SearchIndexSchemaIndexSort>[]>;
    }

    export interface SearchIndexSchemaFieldSchema {
        /**
         * Specifies the type of the analyzer that you want to use. If fieldType is set to Text, you can configure this parameter. Otherwise, the default analyzer type single-word tokenization is used.
         */
        analyzer?: pulumi.Input<string>;
        /**
         * Specifies whether to enable sorting and aggregation. Type: Boolean. Sorting can be enabled only for fields for which enableSortAndAgg is set to true.
         */
        enableSortAndAgg?: pulumi.Input<boolean>;
        /**
         * The name of the field that is used to sort data. only required if sorterType is FieldSort.
         */
        fieldName: pulumi.Input<string>;
        /**
         * Specifies the type of the field. Use FieldType.XXX to set the type.
         */
        fieldType: pulumi.Input<string>;
        /**
         * Specifies whether to enable indexing for the column. Type: Boolean.
         */
        index?: pulumi.Input<boolean>;
        /**
         * Specifies whether the value is an array. Type: Boolean.
         */
        isArray?: pulumi.Input<boolean>;
        /**
         * Specifies whether to store the value of the field in the search index. Type: Boolean. If you set store to true, you can read the value of the field from the search index without querying the data table. This improves query performance.
         */
        store?: pulumi.Input<boolean>;
    }

    export interface SearchIndexSchemaIndexSetting {
        /**
         * Specifies custom routing fields. You can specify some primary key columns as routing fields. Tablestore distributes data that is written to a search index across different partitions based on the specified routing fields. The data whose routing field values are the same is distributed to the same partition.
         */
        routingFields?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SearchIndexSchemaIndexSort {
        /**
         * Specifies the presorting method for the search index. PrimaryKeySort and FieldSort are supported.
         */
        sorters: pulumi.Input<pulumi.Input<inputs.ots.SearchIndexSchemaIndexSortSorter>[]>;
    }

    export interface SearchIndexSchemaIndexSortSorter {
        /**
         * The name of the field that is used to sort data. only required if sorterType is FieldSort.
         */
        fieldName?: pulumi.Input<string>;
        /**
         * The sorting method that is used when the field contains multiple values. valid values: `Min`, `Max`, `Avg`. only required if sorterType is FieldSort.
         */
        mode?: pulumi.Input<string>;
        /**
         * The sort order. Data can be sorted in ascending(`Asc`) or descending(`Desc`) order. Default value: `Asc`.
         */
        order?: pulumi.Input<string>;
        /**
         * Data is sorted by Which fields or keys. valid values: `PrimaryKeySort`, `FieldSort`.
         */
        sorterType?: pulumi.Input<string>;
    }

    export interface TableDefinedColumn {
        /**
         * Name for defined column.
         */
        name: pulumi.Input<string>;
        /**
         * Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
         */
        type: pulumi.Input<string>;
    }

    export interface TablePrimaryKey {
        /**
         * Name for defined column.
         */
        name: pulumi.Input<string>;
        /**
         * Type for defined column. `Integer`, `String`, `Binary`, `Double`, `Boolean` is allowed.
         */
        type: pulumi.Input<string>;
    }

    export interface TunnelChannel {
        /**
         * The id of the channel.
         */
        channelId?: pulumi.Input<string>;
        /**
         * The latest consumption time of the channel, unix time in nanosecond.
         */
        channelRpo?: pulumi.Input<number>;
        /**
         * The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
         */
        channelStatus?: pulumi.Input<string>;
        /**
         * The type of the channel, valid values: `BaseData`, `Stream`.
         */
        channelType?: pulumi.Input<string>;
        /**
         * The client id of the channel.
         */
        clientId?: pulumi.Input<string>;
    }
}

export namespace polardb {
    export interface ClusterDbClusterIpArray {
        /**
         * The name of the IP whitelist group. The group name must be 2 to 120 characters in length and consists of lowercase letters and digits. It must start with a letter, and end with a letter or a digit.
         * **NOTE:** If the specified whitelist group name does not exist, the whitelist group is created. If the specified whitelist group name exists, the whitelist group is modified. If you do not specify this parameter, the default group is modified. You can create a maximum of 50 IP whitelist groups for a cluster.
         */
        dbClusterIpArrayName?: pulumi.Input<string>;
        /**
         * The method for modifying the IP whitelist. Valid values are `Cover`, `Append`, `Delete`.
         * **NOTE:** There does not recommend setting modifyMode to `Append` or `Delete` and it will bring a potential diff error.
         */
        modifyMode?: pulumi.Input<string>;
        /**
         * This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
         * Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
         */
        securityIps?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ClusterParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ParameterGroupParameter {
        /**
         * The name of a parameter in the parameter template.
         */
        paramName: pulumi.Input<string>;
        /**
         * The value of a parameter in the parameter template.
         */
        paramValue: pulumi.Input<string>;
    }
}

export namespace privatelink {
}

export namespace pvtz {
    export interface EndpointIpConfig {
        /**
         * The Subnet mask.
         */
        cidrBlock: pulumi.Input<string>;
        /**
         * The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
         */
        ip?: pulumi.Input<string>;
        /**
         * The Vswitch id.
         */
        vswitchId: pulumi.Input<string>;
        /**
         * The Zone ID.
         */
        zoneId: pulumi.Input<string>;
    }

    export interface RuleAttachmentVpc {
        /**
         * The region of the vpc. If not set, the current region will instead of.
         */
        regionId: pulumi.Input<string>;
        /**
         * The ID of the VPC.  **NOTE:** The VPC that can be associated with the forwarding rule must belong to the same region as the Endpoint.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface RuleForwardIp {
        /**
         * The ip of the forwarding destination.
         */
        ip: pulumi.Input<string>;
        /**
         * The port of the forwarding destination.
         */
        port: pulumi.Input<number>;
    }

    export interface ZoneAttachmentVpc {
        /**
         * The region of the vpc. If not set, the current region will instead of.
         */
        regionId?: pulumi.Input<string>;
        /**
         * The Id of the vpc.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ZoneUserInfo {
        /**
         * The list of the region IDs.
         */
        regionIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The user ID belonging to the region is used for cross-account synchronization scenarios.
         */
        userId?: pulumi.Input<string>;
    }
}

export namespace quickbi {
}

export namespace quotas {
    export interface ApplicationInfoDimension {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetApplicationInfosDimension {
        key?: string;
        value?: string;
    }

    export interface GetApplicationInfosDimensionArgs {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetQuotaAlarmsQuotaDimension {
        /**
         * The key of quota_dimensions.
         */
        key?: string;
        /**
         * The value of quota_dimensions.
         */
        value?: string;
    }

    export interface GetQuotaAlarmsQuotaDimensionArgs {
        /**
         * The key of quota_dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of quota_dimensions.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetQuotaApplicationsDimension {
        /**
         * The key of dimensions.
         */
        key?: string;
        /**
         * The value of dimensions.
         */
        value?: string;
    }

    export interface GetQuotaApplicationsDimensionArgs {
        /**
         * The key of dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of dimensions.
         */
        value?: pulumi.Input<string>;
    }

    export interface GetQuotasDimension {
        /**
         * The key of dimensions.
         */
        key?: string;
        /**
         * The value of dimensions.
         */
        value?: string;
    }

    export interface GetQuotasDimensionArgs {
        /**
         * The key of dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of dimensions.
         */
        value?: pulumi.Input<string>;
    }

    export interface QuotaAlarmQuotaDimension {
        /**
         * The Key of quota_dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The Value of quota_dimensions.
         */
        value?: pulumi.Input<string>;
    }

    export interface QuotaApplicationDimension {
        /**
         * The key of dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of dimensions.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace ram {
    export interface GetPolicyDocumentStatement {
        /**
         * Action of the RAM policy document. If you want to create a RAM role policy document, it must be `["sts:AssumeRole"]`.
         */
        actions: string[];
        /**
         * Specifies the condition that are required for a policy to take effect. See the following `Block condition`.
         */
        conditions?: inputs.ram.GetPolicyDocumentStatementCondition[];
        /**
         * This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
         */
        effect?: string;
        /**
         * Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See the following `Block principal`.
         */
        principals?: inputs.ram.GetPolicyDocumentStatementPrincipal[];
        /**
         * List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
         */
        resources?: string[];
    }

    export interface GetPolicyDocumentStatementArgs {
        /**
         * Action of the RAM policy document. If you want to create a RAM role policy document, it must be `["sts:AssumeRole"]`.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the condition that are required for a policy to take effect. See the following `Block condition`.
         */
        conditions?: pulumi.Input<pulumi.Input<inputs.ram.GetPolicyDocumentStatementConditionArgs>[]>;
        /**
         * This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
         */
        effect?: pulumi.Input<string>;
        /**
         * Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See the following `Block principal`.
         */
        principals?: pulumi.Input<pulumi.Input<inputs.ram.GetPolicyDocumentStatementPrincipalArgs>[]>;
        /**
         * List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
         */
        resources?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetPolicyDocumentStatementCondition {
        /**
         * The operator of the condition.
         */
        operator: string;
        /**
         * The values of the condition.
         */
        values: string[];
        /**
         * The variable of the condition.
         */
        variable: string;
    }

    export interface GetPolicyDocumentStatementConditionArgs {
        /**
         * The operator of the condition.
         */
        operator: pulumi.Input<string>;
        /**
         * The values of the condition.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The variable of the condition.
         */
        variable: pulumi.Input<string>;
    }

    export interface GetPolicyDocumentStatementPrincipal {
        /**
         * The trusted entity. Valid values: `RAM`, `Service` and `Federated`.
         */
        entity: string;
        /**
         * The identifiers of the principal.
         */
        identifiers: string[];
    }

    export interface GetPolicyDocumentStatementPrincipalArgs {
        /**
         * The trusted entity. Valid values: `RAM`, `Service` and `Federated`.
         */
        entity: pulumi.Input<string>;
        /**
         * The identifiers of the principal.
         */
        identifiers: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PolicyStatement {
        /**
         * (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * (It has been deprecated from version 1.49.0, and use field 'document' to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
         */
        effect: pulumi.Input<string>;
        /**
         * (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone's Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
         */
        resources: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace rdc {
}

export namespace rds {
    export interface DbInstanceEndpointNodeItem {
        nodeId: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface DdrInstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface DdrInstancePgHbaConf {
        /**
         * The IP addresses from which the specified users can access the specified databases. If you set this parameter to 0.0.0.0/0, the specified users are allowed to access the specified databases from all IP addresses.
         */
        address: pulumi.Input<string>;
        /**
         * The name of the database that the specified users are allowed to access. If you set this parameter to all, the specified users are allowed to access all databases in the instance. If you specify multiple databases, separate the database names with commas (,).
         */
        database: pulumi.Input<string>;
        /**
         * The mask of the instance. If the value of the `Address` parameter is an IP address, you can use this parameter to specify the mask of the IP address.
         */
        mask?: pulumi.Input<string>;
        /**
         * The authentication method of Lightweight Directory Access Protocol (LDAP). Valid values: `trust`, `reject`, `scram-sha-256`, `md5`, `password`, `gss`, `sspi`, `ldap`, `radius`, `cert`, `pam`.
         */
        method: pulumi.Input<string>;
        /**
         * Optional. The value of this parameter is based on the value of the HbaItem.N.Method parameter. In this topic, LDAP is used as an example. You must configure this parameter. For more information, see [Authentication Methods](https://www.postgresql.org/docs/11/auth-methods.html).
         */
        option?: pulumi.Input<string>;
        /**
         * The priority of an AD domain. If you set this parameter to 0, the AD domain has the highest priority. Valid values: 0 to 10000. This parameter is used to identify each AD domain. When you add an AD domain, the value of the PriorityId parameter of the new AD domain cannot be the same as the value of the PriorityId parameter for any existing AD domain. When you modify or delete an AD domain, you must also modify or delete the value of the PriorityId parameter for this AD domain.
         */
        priorityId: pulumi.Input<number>;
        /**
         * The type of connection to the instance. Valid values:
         * * **host**: specifies to verify TCP/IP connections, including SSL connections and non-SSL connections.
         * * **hostssl**: specifies to verify only TCP/IP connections that are established over SSL connections.
         * * **hostnossl**: specifies to verify only TCP/IP connections that are established over non-SSL connections.
         */
        type: pulumi.Input<string>;
        /**
         * The user that is allowed to access the instance. If you specify multiple users, separate the usernames with commas (,).
         */
        user: pulumi.Input<string>;
    }

    export interface GetCollationTimeZonesCollationTimeZone {
        /**
         * The code of the instance type.
         */
        description?: string;
        /**
         * The offset of the UTC time. The offset is in the following format: (UTC+<i>HH:mm</i>).
         */
        standardTimeOffset?: string;
        /**
         * The time zone that is available for use in ApsaraDB RDS.
         */
        timeZone?: string;
    }

    export interface GetCollationTimeZonesCollationTimeZoneArgs {
        /**
         * The code of the instance type.
         */
        description?: pulumi.Input<string>;
        /**
         * The offset of the UTC time. The offset is in the following format: (UTC+<i>HH:mm</i>).
         */
        standardTimeOffset?: pulumi.Input<string>;
        /**
         * The time zone that is available for use in ApsaraDB RDS.
         */
        timeZone?: pulumi.Input<string>;
    }

    export interface GetInstanceClassInfosInfo {
        /**
         * The code of the instance type.
         */
        classCode?: string;
        /**
         * The instance family of the instance.
         */
        classGroup?: string;
        /**
         * The number of cores that are supported by the instance type. Unit: cores.
         */
        cpu?: string;
        /**
         * The architecture of the instance type.
         */
        instructionSetArch?: string;
        /**
         * The maximum number of connections that are supported by the instance type. Unit: connections.
         */
        maxConnections?: string;
        /**
         * The maximum I/O bandwidth that is supported by the instance type. Unit: Mbit/s.
         */
        maxIombps?: string;
        /**
         * The maximum input/output operations per second (IOPS) that is supported by the instance type. Unit: operations per second.
         */
        maxIops?: string;
        /**
         * The memory capacity that is supported by the instance type. Unit: GB.
         */
        memoryClass?: string;
        /**
         * The fee that you must pay for the instance type. Unit: cent (USD).
         */
        referencePrice?: string;
    }

    export interface GetInstanceClassInfosInfoArgs {
        /**
         * The code of the instance type.
         */
        classCode?: pulumi.Input<string>;
        /**
         * The instance family of the instance.
         */
        classGroup?: pulumi.Input<string>;
        /**
         * The number of cores that are supported by the instance type. Unit: cores.
         */
        cpu?: pulumi.Input<string>;
        /**
         * The architecture of the instance type.
         */
        instructionSetArch?: pulumi.Input<string>;
        /**
         * The maximum number of connections that are supported by the instance type. Unit: connections.
         */
        maxConnections?: pulumi.Input<string>;
        /**
         * The maximum I/O bandwidth that is supported by the instance type. Unit: Mbit/s.
         */
        maxIombps?: pulumi.Input<string>;
        /**
         * The maximum input/output operations per second (IOPS) that is supported by the instance type. Unit: operations per second.
         */
        maxIops?: pulumi.Input<string>;
        /**
         * The memory capacity that is supported by the instance type. Unit: GB.
         */
        memoryClass?: pulumi.Input<string>;
        /**
         * The fee that you must pay for the instance type. Unit: cent (USD).
         */
        referencePrice?: pulumi.Input<string>;
    }

    export interface InstanceBabelfishConfig {
        /**
         * specifies whether to enable the Babelfish for the instance. If you set this parameter to **true**, you enable Babelfish for the instance. If you leave this parameter empty, you disable Babelfish for the instance.
         */
        babelfishEnabled: pulumi.Input<string>;
        /**
         * The password of the administrator account. The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. It must be 8 to 32 characters in length. The password can contain any of the following characters:! @ # $ % ^ & * () _ + - =
         */
        masterUserPassword: pulumi.Input<string>;
        /**
         * The name of the administrator account. The name can contain lowercase letters, digits, and underscores (_). It must start with a letter and end with a letter or digit. It can be up to 63 characters in length and cannot start with pg.
         */
        masterUsername: pulumi.Input<string>;
        /**
         * The migration mode of the instance. Valid values: **single-db** and **multi-db**.
         */
        migrationMode: pulumi.Input<string>;
    }

    export interface InstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface InstancePgHbaConf {
        /**
         * The IP addresses from which the specified users can access the specified databases. If you set this parameter to 0.0.0.0/0, the specified users are allowed to access the specified databases from all IP addresses.
         */
        address: pulumi.Input<string>;
        /**
         * The name of the database that the specified users are allowed to access. If you set this parameter to all, the specified users are allowed to access all databases in the instance. If you specify multiple databases, separate the database names with commas (,).
         */
        database: pulumi.Input<string>;
        /**
         * The mask of the instance. If the value of the `Address` parameter is an IP address, you can use this parameter to specify the mask of the IP address.
         */
        mask?: pulumi.Input<string>;
        /**
         * The authentication method of Lightweight Directory Access Protocol (LDAP). Valid values: `trust`, `reject`, `scram-sha-256`, `md5`, `password`, `gss`, `sspi`, `ldap`, `radius`, `cert`, `pam`.
         */
        method: pulumi.Input<string>;
        /**
         * Optional. The value of this parameter is based on the value of the HbaItem.N.Method parameter. In this topic, LDAP is used as an example. You must configure this parameter. For more information, see [Authentication Methods](https://www.postgresql.org/docs/11/auth-methods.html).
         */
        option?: pulumi.Input<string>;
        /**
         * The priority of an AD domain. If you set this parameter to 0, the AD domain has the highest priority. Valid values: 0 to 10000. This parameter is used to identify each AD domain. When you add an AD domain, the value of the PriorityId parameter of the new AD domain cannot be the same as the value of the PriorityId parameter for any existing AD domain. When you modify or delete an AD domain, you must also modify or delete the value of the PriorityId parameter for this AD domain.
         */
        priorityId: pulumi.Input<number>;
        /**
         * The type of connection to the instance. Valid values:
         * * **host**: specifies to verify TCP/IP connections, including SSL connections and non-SSL connections.
         * * **hostssl**: specifies to verify only TCP/IP connections that are established over SSL connections.
         * * **hostnossl**: specifies to verify only TCP/IP connections that are established over non-SSL connections.
         */
        type: pulumi.Input<string>;
        /**
         * The user that is allowed to access the instance. If you specify multiple users, separate the usernames with commas (,).
         */
        user: pulumi.Input<string>;
    }

    export interface InstanceServerlessConfig {
        /**
         * Specifies whether to enable the smart startup and stop feature for the serverless instance. After the smart startup and stop feature is enabled, if no connections to the instance are established within 10 minutes, the instance is stopped. After a connection is established to the instance, the instance is automatically woken up. Valid values:
         * - true: enables the feature.
         * - false: disables the feature. This is the default value.
         */
        autoPause: pulumi.Input<boolean>;
        /**
         * The maximum number of RDS Capacity Units (RCUs). Valid values: 0.5 to 8. The value of this parameter must be greater than or equal to the value of the `minCapacity` parameter.
         */
        maxCapacity: pulumi.Input<number>;
        /**
         * The minimum number of RCUs. Valid values: 0.5 to 8. The value of this parameter must be less than or equal to the value of the `maxCapacity` parameter.
         */
        minCapacity: pulumi.Input<number>;
        /**
         * Specifies whether to enable the forced scaling feature for the serverless instance. If you set this parameter to true, a transient connection that lasts approximately 1 minute occurs during the forced scaling process. Process with caution. The RCU scaling for a serverless instance immediately takes effect. In some cases, such as the execution of large transactions, the scaling does not immediately take effect. In this case, you can enable this feature to forcefully scale the RCUs of the instance. Valid values:
         * - true: enables the feature.
         * - false: disables the feature. This is the default value.
         */
        switchForce: pulumi.Input<boolean>;
    }

    export interface RdsCloneDbInstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RdsCloneDbInstancePgHbaConf {
        /**
         * The IP addresses from which the specified users can access the specified databases. If you set this parameter to 0.0.0.0/0, the specified users are allowed to access the specified databases from all IP addresses.
         */
        address: pulumi.Input<string>;
        /**
         * The name of the database that the specified users are allowed to access. If you set this parameter to all, the specified users are allowed to access all databases in the instance. If you specify multiple databases, separate the database names with commas (,).
         */
        database: pulumi.Input<string>;
        /**
         * The mask of the instance. If the value of the `Address` parameter is an IP address, you can use this parameter to specify the mask of the IP address.
         */
        mask?: pulumi.Input<string>;
        /**
         * The authentication method of Lightweight Directory Access Protocol (LDAP). Valid values: `trust`, `reject`, `scram-sha-256`, `md5`, `password`, `gss`, `sspi`, `ldap`, `radius`, `cert`, `pam`.
         */
        method: pulumi.Input<string>;
        /**
         * Optional. The value of this parameter is based on the value of the HbaItem.N.Method parameter. In this topic, LDAP is used as an example. You must configure this parameter. For more information, see [Authentication Methods](https://www.postgresql.org/docs/11/auth-methods.html).
         */
        option?: pulumi.Input<string>;
        /**
         * The priority of an AD domain. If you set this parameter to 0, the AD domain has the highest priority. Valid values: 0 to 10000. This parameter is used to identify each AD domain. When you add an AD domain, the value of the PriorityId parameter of the new AD domain cannot be the same as the value of the PriorityId parameter for any existing AD domain. When you modify or delete an AD domain, you must also modify or delete the value of the PriorityId parameter for this AD domain.
         */
        priorityId: pulumi.Input<number>;
        /**
         * The type of connection to the instance. Valid values:
         * * **host**: specifies to verify TCP/IP connections, including SSL connections and non-SSL connections.
         * * **hostssl**: specifies to verify only TCP/IP connections that are established over SSL connections.
         * * **hostnossl**: specifies to verify only TCP/IP connections that are established over non-SSL connections.
         */
        type: pulumi.Input<string>;
        /**
         * The user that is allowed to access the instance. If you specify multiple users, separate the usernames with commas (,).
         */
        user: pulumi.Input<string>;
    }

    export interface RdsCloneDbInstanceServerlessConfig {
        /**
         * Specifies whether to enable the smart startup and stop feature for the serverless instance. After the smart startup and stop feature is enabled, if no connections to the instance are established within 10 minutes, the instance is stopped. After a connection is established to the instance, the instance is automatically woken up. Valid values:
         * - true: enables the feature.
         * - false: disables the feature. This is the default value.
         */
        autoPause: pulumi.Input<boolean>;
        /**
         * The maximum number of RDS Capacity Units (RCUs). Valid values: 0.5 to 8. The value of this parameter must be greater than or equal to the value of the `minCapacity` parameter.
         */
        maxCapacity: pulumi.Input<number>;
        /**
         * The minimum number of RCUs. Valid values: 0.5 to 8. The value of this parameter must be less than or equal to the value of the `maxCapacity` parameter.
         */
        minCapacity: pulumi.Input<number>;
        /**
         * Specifies whether to enable the forced scaling feature for the serverless instance. If you set this parameter to true, a transient connection that lasts approximately 1 minute occurs during the forced scaling process. Process with caution. The RCU scaling for a serverless instance immediately takes effect. In some cases, such as the execution of large transactions, the scaling does not immediately take effect. In this case, you can enable this feature to forcefully scale the RCUs of the instance. Valid values:
         * - true: enables the feature.
         * - false: disables the feature. This is the default value.
         */
        switchForce: pulumi.Input<boolean>;
    }

    export interface RdsDbProxyReadOnlyInstanceWeight {
        /**
         * The Id of instance that can run database.
         */
        instanceId: pulumi.Input<string>;
        weight: pulumi.Input<string>;
    }

    export interface RdsParameterGroupParamDetail {
        /**
         * The name of a parameter.
         */
        paramName: pulumi.Input<string>;
        /**
         * The value of a parameter.
         */
        paramValue: pulumi.Input<string>;
    }

    export interface RdsUpgradeDbInstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RdsUpgradeDbInstancePgHbaConf {
        /**
         * The IP addresses from which the specified users can access the specified databases. If you set this parameter to 0.0.0.0/0, the specified users are allowed to access the specified databases from all IP addresses.
         */
        address: pulumi.Input<string>;
        /**
         * The name of the database that the specified users are allowed to access. If you set this parameter to all, the specified users are allowed to access all databases in the instance. If you specify multiple databases, separate the database names with commas (,).
         */
        database: pulumi.Input<string>;
        /**
         * The mask of the instance. If the value of the `Address` parameter is an IP address, you can use this parameter to specify the mask of the IP address.
         */
        mask?: pulumi.Input<string>;
        /**
         * The authentication method of Lightweight Directory Access Protocol (LDAP). Valid values: `trust`, `reject`, `scram-sha-256`, `md5`, `password`, `gss`, `sspi`, `ldap`, `radius`, `cert`, `pam`.
         */
        method: pulumi.Input<string>;
        /**
         * Optional. The value of this parameter is based on the value of the HbaItem.N.Method parameter. In this topic, LDAP is used as an example. You must configure this parameter. For more information, see [Authentication Methods](https://www.postgresql.org/docs/11/auth-methods.html).
         */
        option?: pulumi.Input<string>;
        /**
         * The priority of an AD domain. If you set this parameter to 0, the AD domain has the highest priority. Valid values: 0 to 10000. This parameter is used to identify each AD domain. When you add an AD domain, the value of the PriorityId parameter of the new AD domain cannot be the same as the value of the PriorityId parameter for any existing AD domain. When you modify or delete an AD domain, you must also modify or delete the value of the PriorityId parameter for this AD domain.
         */
        priorityId: pulumi.Input<number>;
        /**
         * The type of connection to the instance. Valid values:
         * * **host**: specifies to verify TCP/IP connections, including SSL connections and non-SSL connections.
         * * **hostssl**: specifies to verify only TCP/IP connections that are established over SSL connections.
         * * **hostnossl**: specifies to verify only TCP/IP connections that are established over non-SSL connections.
         */
        type: pulumi.Input<string>;
        /**
         * The user that is allowed to access the instance. If you specify multiple users, separate the usernames with commas (,).
         */
        user: pulumi.Input<string>;
    }

    export interface ReadOnlyInstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace resourcemanager {
    export interface ResourceGroupRegionStatus {
        /**
         * The region ID.
         */
        regionId?: pulumi.Input<string>;
        /**
         * The status of the regional resource group.
         */
        status?: pulumi.Input<string>;
    }
}

export namespace rocketmq {
}

export namespace ros {
    export interface ChangeSetParameter {
        /**
         * The parameter key.
         */
        parameterKey: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue: pulumi.Input<string>;
    }

    export interface StackGroupParameter {
        /**
         * The parameter key.
         */
        parameterKey?: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue?: pulumi.Input<string>;
    }

    export interface StackInstanceParameterOverride {
        /**
         * The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
         */
        parameterKey?: pulumi.Input<string>;
        /**
         * The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
         */
        parameterValue?: pulumi.Input<string>;
    }

    export interface StackParameter {
        /**
         * The parameter key.
         */
        parameterKey?: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue: pulumi.Input<string>;
    }

    export interface TemplateScratchPreferenceParameter {
        /**
         * Priority parameter key. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
         */
        parameterKey: pulumi.Input<string>;
        /**
         * Priority parameter value. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
         */
        parameterValue: pulumi.Input<string>;
    }

    export interface TemplateScratchSourceResource {
        /**
         * The ID of the Source Resource.
         */
        resourceId: pulumi.Input<string>;
        /**
         * The type of the Source resource.
         */
        resourceType: pulumi.Input<string>;
    }

    export interface TemplateScratchSourceResourceGroup {
        /**
         * The ID of the Source Resource Group.
         */
        resourceGroupId: pulumi.Input<string>;
        /**
         * Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
         */
        resourceTypeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface TemplateScratchSourceTag {
        /**
         * Source label. **NOTE:** A maximum of 10 source labels can be configured.
         */
        resourceTags: pulumi.Input<{[key: string]: any}>;
        /**
         * Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
         */
        resourceTypeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace sae {
    export interface ApplicationScalingRuleScalingRuleMetric {
        /**
         * Maximum number of instances applied. > **NOTE:** The attribute is valid when the attribute `scalingRuleType` is `mix`.
         */
        maxReplicas?: pulumi.Input<number>;
        /**
         * Indicator rule configuration. See the following `Block metrics`.
         */
        metrics?: pulumi.Input<pulumi.Input<inputs.sae.ApplicationScalingRuleScalingRuleMetricMetric>[]>;
        /**
         * Minimum number of instances applied. > **NOTE:** The attribute is valid when the attribute `scalingRuleType` is `mix`.
         */
        minReplicas?: pulumi.Input<number>;
        /**
         * Apply shrink rules. See the following `Block scaleDownRules`.
         */
        scaleDownRules?: pulumi.Input<inputs.sae.ApplicationScalingRuleScalingRuleMetricScaleDownRules>;
        /**
         * Apply expansion rules. See the following `Block scaleUpRules`.
         */
        scaleUpRules?: pulumi.Input<inputs.sae.ApplicationScalingRuleScalingRuleMetricScaleUpRules>;
    }

    export interface ApplicationScalingRuleScalingRuleMetricMetric {
        /**
         * According to different `metricType`, set the target value of the corresponding monitoring index.
         */
        metricTargetAverageUtilization?: pulumi.Input<number>;
        /**
         * Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
         * - CPU: CPU usage.
         * - MEMORY: MEMORY usage.
         * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
         * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
         * - SLB_RT: the average response time of public network SLB within 15 seconds.
         */
        metricType?: pulumi.Input<string>;
    }

    export interface ApplicationScalingRuleScalingRuleMetricScaleDownRules {
        /**
         * Whether shrinkage is prohibited.
         */
        disabled?: pulumi.Input<boolean>;
        /**
         * Cooling time for expansion or contraction. Valid values: `0` to `3600`. Unit: seconds. The default is `0` seconds.
         */
        stabilizationWindowSeconds?: pulumi.Input<number>;
        /**
         * Elastic expansion or contraction step size. the maximum number of instances to be scaled in per unit time.
         */
        step?: pulumi.Input<number>;
    }

    export interface ApplicationScalingRuleScalingRuleMetricScaleUpRules {
        /**
         * Whether shrinkage is prohibited.
         */
        disabled?: pulumi.Input<boolean>;
        /**
         * Cooling time for expansion or contraction. Valid values: `0` to `3600`. Unit: seconds. The default is `0` seconds.
         */
        stabilizationWindowSeconds?: pulumi.Input<number>;
        /**
         * Elastic expansion or contraction step size. the maximum number of instances to be scaled in per unit time.
         */
        step?: pulumi.Input<number>;
    }

    export interface ApplicationScalingRuleScalingRuleTimer {
        /**
         * The Start date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
         */
        beginDate?: pulumi.Input<string>;
        /**
         * The End Date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
         */
        endDate?: pulumi.Input<string>;
        /**
         * The period in which a timed elastic scaling strategy is executed.
         */
        period?: pulumi.Input<string>;
        /**
         * Resilient Scaling Strategy Trigger Timing. See the following `Block schedules`.
         */
        schedules?: pulumi.Input<pulumi.Input<inputs.sae.ApplicationScalingRuleScalingRuleTimerSchedule>[]>;
    }

    export interface ApplicationScalingRuleScalingRuleTimerSchedule {
        /**
         * Trigger point in time. When supporting format: minutes, for example: `08:00`.
         */
        atTime?: pulumi.Input<string>;
        /**
         * Maximum number of instances applied. > **NOTE:** The attribute is valid when the attribute `scalingRuleType` is `mix`.
         */
        maxReplicas?: pulumi.Input<number>;
        /**
         * Minimum number of instances applied. > **NOTE:** The attribute is valid when the attribute `scalingRuleType` is `mix`.
         */
        minReplicas?: pulumi.Input<number>;
        /**
         * This parameter can specify the number of instances to be applied or the minimum number of surviving instances per deployment. value range [1,50]. > **NOTE:** The attribute is valid when the attribute `scalingRuleType` is `timing`.
         */
        targetReplicas?: pulumi.Input<number>;
    }

    export interface GreyTagRouteDubboRule {
        /**
         * The Conditional Patterns for Grayscale Rules. Valid values: `AND`, `OR`.
         */
        condition?: pulumi.Input<string>;
        /**
         * The service group.
         */
        group?: pulumi.Input<string>;
        /**
         * A list of conditions items. The details see Block `dubboRulesItems`.
         */
        items?: pulumi.Input<pulumi.Input<inputs.sae.GreyTagRouteDubboRuleItem>[]>;
        /**
         * The method name
         */
        methodName?: pulumi.Input<string>;
        /**
         * The service name.
         */
        serviceName?: pulumi.Input<string>;
        /**
         * The service version.
         */
        version?: pulumi.Input<string>;
    }

    export interface GreyTagRouteDubboRuleItem {
        /**
         * The comparison operator. Valid values: `>`, `<`, `>=`, `<=`, `==`, `!=`.
         */
        cond?: pulumi.Input<string>;
        /**
         * The parameter value gets the expression.
         */
        expr?: pulumi.Input<string>;
        /**
         * The parameter number.
         */
        index?: pulumi.Input<number>;
        /**
         * The operator. Valid values: `rawvalue`, `list`, `mod`, `deterministicProportionalSteamingDivision`
         */
        operator?: pulumi.Input<string>;
        /**
         * The value of the parameter.
         */
        value?: pulumi.Input<string>;
    }

    export interface GreyTagRouteScRule {
        /**
         * The conditional Patterns for Grayscale Rules. Valid values: `AND`, `OR`.
         */
        condition?: pulumi.Input<string>;
        /**
         * A list of conditions items. The details see Block `scRulesItems`.
         */
        items?: pulumi.Input<pulumi.Input<inputs.sae.GreyTagRouteScRuleItem>[]>;
        /**
         * The path corresponding to the grayscale rule.
         */
        path?: pulumi.Input<string>;
    }

    export interface GreyTagRouteScRuleItem {
        /**
         * The comparison operator. Valid values: `>`, `<`, `>=`, `<=`, `==`, `!=`.
         */
        cond?: pulumi.Input<string>;
        /**
         * The name of the parameter.
         */
        name?: pulumi.Input<string>;
        /**
         * The operator. Valid values: `rawvalue`, `list`, `mod`, `deterministicProportionalSteamingDivision`
         */
        operator?: pulumi.Input<string>;
        /**
         * The compare types. Valid values: `param`, `cookie`, `header`.
         */
        type?: pulumi.Input<string>;
        /**
         * The value of the parameter.
         */
        value?: pulumi.Input<string>;
    }

    export interface IngressDefaultRule {
        /**
         * Target application ID.
         */
        appId?: pulumi.Input<string>;
        /**
         * Target application name.
         */
        appName?: pulumi.Input<string>;
        /**
         * Application backend port.
         */
        containerPort?: pulumi.Input<number>;
    }

    export interface IngressRule {
        /**
         * Target application ID.
         */
        appId: pulumi.Input<string>;
        /**
         * Target application name.
         */
        appName: pulumi.Input<string>;
        /**
         * Application backend port.
         */
        containerPort: pulumi.Input<number>;
        /**
         * Application domain name.
         */
        domain: pulumi.Input<string>;
        /**
         * URL path.
         */
        path: pulumi.Input<string>;
    }

    export interface LoadBalancerInternetInternet {
        /**
         * The SSL certificate. `httpsCertId` is required when HTTPS is selected
         */
        httpsCertId?: pulumi.Input<string>;
        /**
         * The SLB Port.
         */
        port?: pulumi.Input<number>;
        /**
         * The Network protocol. Valid values: `TCP` ,`HTTP`,`HTTPS`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The Container port.
         */
        targetPort?: pulumi.Input<number>;
    }

    export interface LoadBalancerIntranetIntranet {
        /**
         * The SSL certificate. `httpsCertId` is required when HTTPS is selected
         */
        httpsCertId?: pulumi.Input<string>;
        /**
         * The SLB Port.
         */
        port?: pulumi.Input<number>;
        /**
         * The Network protocol. Valid values: `TCP` ,`HTTP`,`HTTPS`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The Container port.
         */
        targetPort?: pulumi.Input<number>;
    }
}

export namespace sag {
}

export namespace scdn {
    export interface DomainCertInfo {
        /**
         * If You Enable HTTPS Here Certificate Name.
         */
        certName?: pulumi.Input<string>;
        /**
         * Certificate Type. Value Range: 
         * * upload: Certificate
         * * cas: Certificate Authority Certificate.
         * * free: Free Certificate.
         */
        certType?: pulumi.Input<string>;
        /**
         * Private Key. Do Not Enable Certificate without Entering a User Name and Configure Certificates Enter Private Key.
         */
        sslPri?: pulumi.Input<string>;
        /**
         * Whether to Enable SSL Certificate. Valid Values: on, off. Valid values: `on`, `off`.
         */
        sslProtocol?: pulumi.Input<string>;
        /**
         * If You Enable HTTPS Here Key.
         */
        sslPub?: pulumi.Input<string>;
    }

    export interface DomainConfigFunctionArg {
        /**
         * The name of arg.
         */
        argName: pulumi.Input<string>;
        /**
         * The value of arg.
         */
        argValue: pulumi.Input<string>;
    }

    export interface DomainSource {
        /**
         * The Back-to-Source Address.
         */
        content: pulumi.Input<string>;
        /**
         * The source status. Valid values: online, offline.
         */
        enabled?: pulumi.Input<string>;
        /**
         * Port.
         */
        port: pulumi.Input<number>;
        /**
         * Priority.
         */
        priority: pulumi.Input<string>;
        /**
         * The Origin Server Type. Valid Values: 
         * * ipaddr: IP Source Station
         * * domain: the Domain Name
         * * oss: OSS Bucket as a Source Station.
         */
        type: pulumi.Input<string>;
    }

}

export namespace schedulerx {
}

export namespace sddp {
}

export namespace securitycenter {
}

export namespace servicecatalog {
    export interface ProvisionedProductOutput {
        /**
         * Description of the output value defined in the template.
         */
        description?: pulumi.Input<string>;
        /**
         * The name of the output value defined in the template.
         */
        outputKey?: pulumi.Input<string>;
        /**
         * The content of the output value defined in the template.
         */
        outputValue?: pulumi.Input<string>;
    }

    export interface ProvisionedProductParameter {
        /**
         * The name of the parameter defined in the template.
         */
        parameterKey?: pulumi.Input<string>;
        /**
         * The Template parameter value entered by the user.
         */
        parameterValue?: pulumi.Input<string>;
    }
}

export namespace servicemesh {
    export interface ServiceMeshExtraConfiguration {
        /**
         * Indicates whether the Kubernetes API of clusters on the data plane is used to access Istio resources. A value of `true` indicates that the Kubernetes API is used.
         */
        crAggregationEnabled?: pulumi.Input<boolean>;
    }

    export interface ServiceMeshLoadBalancer {
        apiServerLoadbalancerId?: pulumi.Input<string>;
        /**
         * Whether to use the IP address of a public network exposed the API Server.
         */
        apiServerPublicEip?: pulumi.Input<boolean>;
        /**
         * Whether to use the IP address of a public network exposure the Istio Pilot.
         */
        pilotPublicEip?: pulumi.Input<boolean>;
        pilotPublicLoadbalancerId?: pulumi.Input<string>;
    }

    export interface ServiceMeshMeshConfig {
        /**
         * The configuration of the access logging.
         */
        accessLog?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigAccessLog>;
        /**
         * The configuration of the audit. See the following `Block audit`.
         */
        audit?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigAudit>;
        /**
         * The configuration of the control plane logging.
         */
        controlPlaneLog?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigControlPlaneLog>;
        /**
         * Whether to enable the use of a custom zipkin.
         */
        customizedZipkin?: pulumi.Input<boolean>;
        /**
         * The enable locality lb.
         */
        enableLocalityLb?: pulumi.Input<boolean>;
        /**
         * The configuration of the Kiali. See the following `Block kiali`.
         */
        kiali?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigKiali>;
        /**
         * The open-door policy of agent (OPA) plug-in information. See the following `Block opa`.
         */
        opa?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigOpa>;
        /**
         * The policy of the Out to the traffic. Valid values: `ALLOW_ANY` and `REGISTRY_ONLY`.
         */
        outboundTrafficPolicy?: pulumi.Input<string>;
        /**
         * The configuration of the Link trace sampling. See the following `Block pilot`.
         */
        pilot?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigPilot>;
        /**
         * The configuration of the Proxy. See the following `Block proxy`.
         */
        proxy?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigProxy>;
        /**
         * The configuration of the Sidecar injector. See the following `Block sidecarInjector`.
         */
        sidecarInjector?: pulumi.Input<inputs.servicemesh.ServiceMeshMeshConfigSidecarInjector>;
        /**
         * Whether to enable acquisition Prometheus metrics (it is recommended that you use [Alibaba Cloud Prometheus monitoring](https://arms.console.aliyun.com/).
         */
        telemetry?: pulumi.Input<boolean>;
        /**
         * Whether to enable link trace (you need to have [Alibaba Cloud link tracking service](https://tracing-analysis.console.aliyun.com/).
         */
        tracing?: pulumi.Input<boolean>;
    }

    export interface ServiceMeshMeshConfigAccessLog {
        /**
         * Whether to enable of the access logging. Valid values: `true` and `false`.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The SLS Project of the access logging.
         */
        project?: pulumi.Input<string>;
    }

    export interface ServiceMeshMeshConfigAudit {
        /**
         * Whether to enable of the access logging. Valid values: `true` and `false`.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The SLS Project of the access logging.
         */
        project?: pulumi.Input<string>;
    }

    export interface ServiceMeshMeshConfigControlPlaneLog {
        /**
         * Whether to enable of the access logging. Valid values: `true` and `false`.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The SLS Project of the access logging.
         */
        project?: pulumi.Input<string>;
    }

    export interface ServiceMeshMeshConfigKiali {
        /**
         * Whether to enable of the access logging. Valid values: `true` and `false`.
         */
        enabled?: pulumi.Input<boolean>;
    }

    export interface ServiceMeshMeshConfigOpa {
        /**
         * Whether to enable of the access logging. Valid values: `true` and `false`.
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * The limit cpu of the Sidecar injector Pods.
         */
        limitCpu?: pulumi.Input<string>;
        /**
         * Sidecar injector Pods on the throttle.
         */
        limitMemory?: pulumi.Input<string>;
        /**
         * The log level of the OPA proxy container .
         */
        logLevel?: pulumi.Input<string>;
        /**
         * The requested cpu the Sidecar injector Pods.
         */
        requestCpu?: pulumi.Input<string>;
        /**
         * The requested memory the Sidecar injector Pods.
         */
        requestMemory?: pulumi.Input<string>;
    }

    export interface ServiceMeshMeshConfigPilot {
        /**
         * Whether to support the HTTP1.0.
         */
        http10Enabled?: pulumi.Input<boolean>;
        /**
         * The  percentage of the Link trace sampling.
         */
        traceSampling?: pulumi.Input<number>;
    }

    export interface ServiceMeshMeshConfigProxy {
        /**
         * The limit cpu of the Sidecar injector Pods.
         */
        limitCpu?: pulumi.Input<string>;
        /**
         * Sidecar injector Pods on the throttle.
         */
        limitMemory?: pulumi.Input<string>;
        /**
         * The requested cpu the Sidecar injector Pods.
         */
        requestCpu?: pulumi.Input<string>;
        /**
         * The requested memory the Sidecar injector Pods.
         */
        requestMemory?: pulumi.Input<string>;
    }

    export interface ServiceMeshMeshConfigSidecarInjector {
        /**
         * Whether to enable by Pod Annotations automatic injection Sidecar.
         */
        autoInjectionPolicyEnabled?: pulumi.Input<boolean>;
        /**
         * Whether it is the all namespaces you turn on the auto injection capabilities.
         */
        enableNamespacesByDefault?: pulumi.Input<boolean>;
        /**
         * The limit cpu of the Sidecar injector Pods.
         */
        limitCpu?: pulumi.Input<string>;
        /**
         * Sidecar injector Pods on the throttle.
         */
        limitMemory?: pulumi.Input<string>;
        /**
         * The requested cpu the Sidecar injector Pods.
         */
        requestCpu?: pulumi.Input<string>;
        /**
         * The requested memory the Sidecar injector Pods.
         */
        requestMemory?: pulumi.Input<string>;
    }

    export interface ServiceMeshNetwork {
        /**
         * The ID of the VPC.
         */
        vpcId: pulumi.Input<string>;
        /**
         * The list of Virtual Switch.
         */
        vswitcheList: pulumi.Input<string>;
    }

    export interface UserPermissionPermission {
        /**
         * Whether the grant object is a RAM role.
         */
        isCustom?: pulumi.Input<boolean>;
        /**
         * Whether the grant object is an entity.
         */
        isRamRole?: pulumi.Input<boolean>;
        /**
         * The permission name. Valid values: `istio-admin`, `istio-ops`, `istio-readonly`.
         * - `istio-admin`:  The administrator.
         * - `istio-ops`: The administrator of the service mesh resource.
         * - `istio-readonly`: The read only permission.
         */
        roleName?: pulumi.Input<string>;
        /**
         * The role type. Valid Value: `custom`.
         */
        roleType?: pulumi.Input<string>;
        /**
         * The service mesh id.
         */
        serviceMeshId?: pulumi.Input<string>;
    }
}

export namespace simpleapplicationserver {
}

export namespace slb {
    export interface AclEntryList {
        comment?: pulumi.Input<string>;
        entry?: pulumi.Input<string>;
    }

    export interface BackendServerBackendServer {
        serverId: pulumi.Input<string>;
        serverIp?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface ListenerXForwardedFor {
        retriveClientIp?: pulumi.Input<boolean>;
        /**
         * Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
         */
        retriveSlbId?: pulumi.Input<boolean>;
        /**
         * Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
         */
        retriveSlbIp?: pulumi.Input<boolean>;
        /**
         * Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.
         */
        retriveSlbProto?: pulumi.Input<boolean>;
    }

    export interface MasterSlaveServerGroupServer {
        isBackup?: pulumi.Input<number>;
        port: pulumi.Input<number>;
        serverId: pulumi.Input<string>;
        serverType?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    export interface ServerGroupServer {
        port: pulumi.Input<number>;
        serverIds: pulumi.Input<pulumi.Input<string>[]>;
        type?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }
}

export namespace tag {
}

export namespace threatdetection {
    export interface HoneypotPresetMeta {
        /**
         * Burp counter.
         */
        burp: pulumi.Input<string>;
        /**
         * Social traceability.
         */
        portraitOption?: pulumi.Input<boolean>;
        /**
         * Git countered.
         */
        trojanGit?: pulumi.Input<string>;
    }

    export interface HoneypotProbeHoneypotBindList {
        /**
         * List of listening ports.See the following `Block BindPortList`.
         */
        bindPortLists?: pulumi.Input<pulumi.Input<inputs.threatdetection.HoneypotProbeHoneypotBindListBindPortList>[]>;
        /**
         * Honeypot ID.
         */
        honeypotId?: pulumi.Input<string>;
    }

    export interface HoneypotProbeHoneypotBindListBindPortList {
        /**
         * Whether to bind the port.
         */
        bindPort?: pulumi.Input<boolean>;
        /**
         * End port.
         */
        endPort?: pulumi.Input<number>;
        /**
         * Whether the port is fixed.
         */
        fixed?: pulumi.Input<boolean>;
        /**
         * Start port.
         */
        startPort?: pulumi.Input<number>;
        /**
         * Destination port.
         */
        targetPort?: pulumi.Input<number>;
    }
}

export namespace tsdb {
}

export namespace videosurveillance {
}

export namespace vod {
    export interface DomainSource {
        /**
         * The address of the origin server. You can specify an IP address or a domain name.
         */
        sourceContent: pulumi.Input<string>;
        /**
         * The port number. You can specify port 443 or 80. **Default value: 80**. If you specify port 443, Alibaba Cloud CDN communicates with the origin server over HTTPS. You can also customize a port.
         */
        sourcePort: pulumi.Input<string>;
        /**
         * The priority of the origin server if multiple origin servers are specified. Valid values: `20` and `30`. **Default value: 20**. A value of 20 indicates that the origin server is the primary origin server. A value of 30 indicates that the origin server is a secondary origin server.
         */
        sourcePriority?: pulumi.Input<string>;
        /**
         * The type of the origin server. Valid values:
         */
        sourceType: pulumi.Input<string>;
    }

}

export namespace vpc {
    export interface DhcpOptionsSetAssociateVpc {
        /**
         * The status of the VPC network that is associated with the DHCP options set. Valid values:`InUse` or `Pending`. `InUse`: The VPC network is in use. `Pending`: The VPC network is being configured.
         */
        associateStatus?: pulumi.Input<string>;
        /**
         * The ID of the VPC network that is associated with the DHCP options set.
         */
        vpcId?: pulumi.Input<string>;
    }

    export interface NetworkAclAttachmentResource {
        /**
         * The resource id that the network acl will associate with.
         */
        resourceId: pulumi.Input<string>;
        /**
         * The resource id that the network acl will associate with. Only support `VSwitch` now.
         */
        resourceType: pulumi.Input<string>;
    }

    export interface NetworkAclEgressAclEntry {
        /**
         * The description of the network acl instance.
         */
        description?: pulumi.Input<string>;
        /**
         * The destination cidr ip of egress entries.
         */
        destinationCidrIp?: pulumi.Input<string>;
        /**
         * The entry name of ingress entries.
         */
        networkAclEntryName?: pulumi.Input<string>;
        /**
         * The policy of ingress entries. Valid values `accept` and `drop`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port of ingress entries.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface NetworkAclEntriesEgress {
        /**
         * The description of the ingress entry.
         */
        description?: pulumi.Input<string>;
        /**
         * The destination ip of the egress entry.
         */
        destinationCidrIp?: pulumi.Input<string>;
        /**
         * The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
         */
        entryType?: pulumi.Input<string>;
        /**
         * The name of the ingress entry.
         */
        name?: pulumi.Input<string>;
        /**
         * The policy of the ingress entry. It must be `accept` or `drop`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port of the ingress entry.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of the ingress entry.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface NetworkAclEntriesIngress {
        /**
         * The description of the ingress entry.
         */
        description?: pulumi.Input<string>;
        /**
         * The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
         */
        entryType?: pulumi.Input<string>;
        /**
         * The name of the ingress entry.
         */
        name?: pulumi.Input<string>;
        /**
         * The policy of the ingress entry. It must be `accept` or `drop`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port of the ingress entry.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of the ingress entry.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The source ip of the ingress entry.
         */
        sourceCidrIp?: pulumi.Input<string>;
    }

    export interface NetworkAclIngressAclEntry {
        /**
         * The description of the network acl instance.
         */
        description?: pulumi.Input<string>;
        /**
         * The entry name of ingress entries.
         */
        networkAclEntryName?: pulumi.Input<string>;
        /**
         * The policy of ingress entries. Valid values `accept` and `drop`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port of ingress entries.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The source cidr ip of ingress entries.
         */
        sourceCidrIp?: pulumi.Input<string>;
    }

    export interface NetworkAclResource {
        /**
         * The ID of the associated resource.
         */
        resourceId?: pulumi.Input<string>;
        /**
         * The type of the associated resource. Valid values `VSwitch`.
         */
        resourceType?: pulumi.Input<string>;
    }

    export interface PrefixListEntry {
        /**
         * The CIDR address block of the prefix list.
         */
        cidr?: pulumi.Input<string>;
        /**
         * The description of the cidr entry. It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
         */
        description?: pulumi.Input<string>;
    }
}

export namespace vpn {
    export interface ConnectionBgpConfig {
        /**
         * Whether to enable Health Check.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * The ASN on the Alibaba Cloud side.
         */
        localAsn?: pulumi.Input<string>;
        /**
         * The BGP IP address on the Alibaba Cloud side.
         */
        localBgpIp?: pulumi.Input<string>;
        /**
         * The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
         */
        tunnelCidr?: pulumi.Input<string>;
    }

    export interface ConnectionHealthCheckConfig {
        /**
         * The destination IP address.
         */
        dip?: pulumi.Input<string>;
        /**
         * Whether to enable Health Check.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * The interval between two consecutive health checks. Unit: seconds.
         */
        interval?: pulumi.Input<number>;
        /**
         * The maximum number of health check retries.
         */
        retry?: pulumi.Input<number>;
        /**
         * The source IP address.
         */
        sip?: pulumi.Input<string>;
    }

    export interface ConnectionIkeConfig {
        /**
         * The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
         */
        ikeAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
         */
        ikeEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
         */
        ikeLifetime?: pulumi.Input<number>;
        /**
         * The identification of the VPN gateway.
         */
        ikeLocalId?: pulumi.Input<string>;
        /**
         * The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
         */
        ikeMode?: pulumi.Input<string>;
        /**
         * The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
         */
        ikePfs?: pulumi.Input<string>;
        /**
         * The identification of the customer gateway.
         */
        ikeRemoteId?: pulumi.Input<string>;
        /**
         * The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
         */
        ikeVersion?: pulumi.Input<string>;
        /**
         * Used for authentication between the IPsec VPN gateway and the customer gateway.
         */
        psk?: pulumi.Input<string>;
    }

    export interface ConnectionIpsecConfig {
        /**
         * The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
         */
        ipsecAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
         */
        ipsecEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
         */
        ipsecLifetime?: pulumi.Input<number>;
        /**
         * The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
         */
        ipsecPfs?: pulumi.Input<string>;
    }

    export interface GatewayVpnAttachmentBgpConfig {
        /**
         * Specifies whether to enable health checks.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * The ASN on the Alibaba Cloud side.
         */
        localAsn?: pulumi.Input<number>;
        /**
         * The BGP IP address on the Alibaba Cloud side.
         */
        localBgpIp?: pulumi.Input<string>;
        /**
         * The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
         */
        tunnelCidr?: pulumi.Input<string>;
    }

    export interface GatewayVpnAttachmentHealthCheckConfig {
        /**
         * The destination IP address that is used for health checks.
         */
        dip?: pulumi.Input<string>;
        /**
         * Specifies whether to enable health checks.
         */
        enable?: pulumi.Input<boolean>;
        /**
         * The interval between two consecutive health checks. Unit: seconds.
         */
        interval?: pulumi.Input<number>;
        /**
         * Whether to revoke the published route when the health check fails. Valid values: `revokeRoute` or `reserveRoute`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The maximum number of health check retries.
         */
        retry?: pulumi.Input<number>;
        /**
         * The source IP address that is used for health checks.
         */
        sip?: pulumi.Input<string>;
    }

    export interface GatewayVpnAttachmentIkeConfig {
        /**
         * IKE authentication algorithm supports sha1 and MD5.
         */
        ikeAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes.
         */
        ikeEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
         */
        ikeLifetime?: pulumi.Input<number>;
        /**
         * The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: `main`.
         */
        ikeMode?: pulumi.Input<string>;
        /**
         * The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
         */
        ikePfs?: pulumi.Input<string>;
        /**
         * The version of the IKE protocol. Valid value: `ikev1`, `ikev2`. Default value: `ikev1`.
         */
        ikeVersion?: pulumi.Input<string>;
        /**
         * The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
         */
        localId?: pulumi.Input<string>;
        /**
         * Used for authentication between the IPsec VPN gateway and the customer gateway.
         */
        psk?: pulumi.Input<string>;
        /**
         * The peer ID, which supports FQDN and IP formats. By default, the IP address of the currently selected user gateway.
         */
        remoteId?: pulumi.Input<string>;
    }

    export interface GatewayVpnAttachmentIpsecConfig {
        /**
         * The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
         */
        ipsecAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
         */
        ipsecEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
         */
        ipsecLifetime?: pulumi.Input<number>;
        /**
         * The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
         */
        ipsecPfs?: pulumi.Input<string>;
    }

    export interface IpsecServerIkeConfig {
        /**
         * The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
         */
        ikeAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
         */
        ikeEncAlg?: pulumi.Input<string>;
        /**
         * IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
         */
        ikeLifetime?: pulumi.Input<number>;
        /**
         * The IKE negotiation mode. Default value: `main`.
         */
        ikeMode?: pulumi.Input<string>;
        /**
         * The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
         */
        ikePfs?: pulumi.Input<string>;
        /**
         * The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
         */
        ikeVersion?: pulumi.Input<string>;
        /**
         * The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
         */
        localId?: pulumi.Input<string>;
        /**
         * The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
         */
        remoteId?: pulumi.Input<string>;
    }

    export interface IpsecServerIpsecConfig {
        /**
         * The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
         */
        ipsecAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
         */
        ipsecEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
         */
        ipsecLifetime?: pulumi.Input<number>;
        /**
         * Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
         */
        ipsecPfs?: pulumi.Input<string>;
    }
}

export namespace waf {
    export interface DomainLogHeader {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

}

export namespace wafv3 {
    export interface DomainListen {
        /**
         * The ID of the certificate to be added. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol).
         */
        certId?: pulumi.Input<string>;
        /**
         * The type of encryption suite to add. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol). Value:
         * - **1**: indicates that all encryption suites are added.
         * - **2**: indicates that a strong encryption package is added. You can select this value only if the value of **tls_version** is `tlsv1.2`.
         * - **99**: indicates that a custom encryption suite is added.
         */
        cipherSuite?: pulumi.Input<number>;
        /**
         * The specific custom encryption suite to add.
         */
        customCiphers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Whether TSL1.3 version is supported. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol). Value:
         * - **true**: indicates that TSL1.3 is supported.
         * - **false**: indicates that TSL1.3 is not supported.
         */
        enableTlsv3?: pulumi.Input<boolean>;
        /**
         * Whether to enable exclusive IP address. This parameter is used only when the value of **ipv6_enabled** is **false** (indicating that IPv6 is not enabled) and the value of **protection_resource** is **share** (indicating that a shared cluster is used). Value:
         * - **true**: indicates that the exclusive IP address is enabled.
         * - **false** (default): indicates that exclusive IP address is not enabled.
         */
        exclusiveIp?: pulumi.Input<boolean>;
        /**
         * Whether to enable the forced jump of HTTPS. This parameter is used only when the value of `httpsPorts` is not empty (indicating that the domain name uses HTTPS protocol) and the value of httports is empty (indicating that the domain name does not use HTTP protocol). Value:
         * - **true**: indicates that HTTPS forced redirection is enabled.
         * - **false**: indicates that HTTPS forced redirection is not enabled.
         */
        focusHttps?: pulumi.Input<boolean>;
        /**
         * Whether to turn on http2. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol). Value:
         * - **true:** indicates that HTTP2 is enabled.
         * - **false** (default): indicates that HTTP2 is not enabled.
         */
        http2Enabled?: pulumi.Input<boolean>;
        /**
         * The listening port of the HTTP protocol.
         */
        httpPorts?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * The listening port of the HTTPS protocol.
         */
        httpsPorts?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Whether IPv6 is turned on. Value:
         * - **true**: indicates that IPv6 is enabled.
         * - **false** (default): indicates that IPv6 is not enabled.
         */
        ipv6Enabled?: pulumi.Input<boolean>;
        /**
         * The type of protection resource to use. Value:
         * - **share** (default): indicates that a shared cluster is used.
         * - **gslb**: indicates that the shared cluster intelligent load balancing is used.
         */
        protectionResource?: pulumi.Input<string>;
        /**
         * The version of TLS to add. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol). Value: **tlsv1**, **tlsv1.1**, **tlsv1.2**.
         */
        tlsVersion?: pulumi.Input<string>;
        /**
         * WAF obtains the real IP address of the client. Value:
         * - **0** (default): indicates that the client has not forwarded the traffic to WAF through other layer -7 agents.
         * - **1**: indicates that the first value of the X-Forwarded-For(XFF) field in the WAF read request header is used as the client IP address.
         * - **2**: indicates that the custom field value set by you in the WAF read request header is used as the client IP address.
         */
        xffHeaderMode?: pulumi.Input<number>;
        /**
         * Set the list of custom fields used to obtain the client IP address.
         */
        xffHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DomainRedirect {
        /**
         * The IP address of the origin server corresponding to the domain name or the back-to-origin domain name of the server.
         */
        backends?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Connection timeout. Unit: seconds, value range: 5~120.
         */
        connectTimeout?: pulumi.Input<number>;
        /**
         * Whether to enable forced HTTP back-to-origin. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol). Value:
         * - **true**: indicates that forced HTTP back-to-origin is enabled.
         * - **false**: indicates that forced HTTP back-to-origin is not enabled.
         */
        focusHttpBackend?: pulumi.Input<boolean>;
        /**
         * Open long connection, default true.
         */
        keepalive?: pulumi.Input<boolean>;
        /**
         * Number of long connections,  default: `60`. range :60-1000.
         */
        keepaliveRequests?: pulumi.Input<number>;
        /**
         * Long connection over time, default: `15`. Range: 1-60.
         */
        keepaliveTimeout?: pulumi.Input<number>;
        /**
         * The load balancing algorithm used when returning to the source. Value:
         * - **iphash**: indicates the IPHash algorithm.
         * - **roundRobin**: indicates the polling algorithm.
         * - **leastTime**: indicates the Least Time algorithm.
         * - This value can be selected only if the value of **protection_resource** is **gslb** (indicating that the protected resource type uses shared cluster intelligent load balancing).
         */
        loadbalance: pulumi.Input<string>;
        /**
         * Read timeout duration. **Unit**: seconds, **Value range**: 5~1800.
         */
        readTimeout?: pulumi.Input<number>;
        /**
         * The traffic tag field and value of the domain name, which is used to mark the traffic processed by WAF. the format of this parameter value is `[{" k ":"_key_"," v ":"_value_"}]`. whereKeyRepresents the specified custom request header field, andValueRepresents the value set for this field.By specifying the custom request header field and the corresponding value, when the access traffic of the domain name passes through WAF, WAF automatically adds the specified custom field value to the request header as the traffic mark, which is convenient for backend service statistics.Explain that if the custom header field already exists in the request, the system will overwrite the value of the custom field in the request with the set traffic tag value.See the following `Block RequestHeaders`.
         */
        requestHeaders?: pulumi.Input<pulumi.Input<inputs.wafv3.DomainRedirectRequestHeader>[]>;
        /**
         * Back to Source Retry. default: true, retry 3 times by default.
         */
        retry?: pulumi.Input<boolean>;
        /**
         * Whether to enable back-to-source SNI. This parameter is used only if the value of **https_ports** is not empty (indicating that the domain name uses the HTTPS protocol). Value:
         * - **true**: indicates that the back-to-source SNI is enabled.
         * - **false** (default) indicates that the back-to-source SNI is not enabled.
         */
        sniEnabled?: pulumi.Input<boolean>;
        /**
         * Sets the value of the custom SNI extension field. If this parameter is not set, the value of the **Host** field in the request header is used as the value of the SNI extension field by default.In general, you do not need to customize SNI unless your business has special configuration requirements. You want WAF to use SNI that is inconsistent with the actual request Host in the back-to-origin request (that is, the custom SNI set here).> This parameter is required only when **sni_enalbed** is set to **true** (indicating that back-to-source SNI is enabled).
         */
        sniHost?: pulumi.Input<string>;
        /**
         * Write timeout duration> **Unit**: seconds, **Value range**: 5~1800.
         */
        writeTimeout?: pulumi.Input<number>;
    }

    export interface DomainRedirectRequestHeader {
        /**
         * The traffic tag field and value of the domain name, which is used to mark the traffic processed by WAF. the format of this parameter value is **[{" k ":"_key_"," v ":"_value_"}]**. whereKeyRepresents the specified custom request header field, andValueRepresents the value set for this field.By specifying the custom request header field and the corresponding value, when the access traffic of the domain name passes through WAF, WAF automatically adds the specified custom field value to the request header as the traffic mark, which is convenient for backend service statistics.Explain that if the custom header field already exists in the request, the system will overwrite the value of the custom field in the request with the set traffic tag value.
         */
        key?: pulumi.Input<string>;
        /**
         * The traffic tag field and value of the domain name, which is used to mark the traffic processed by WAF. the format of this parameter value is **[{" k ":"_key_"," v ":"_value_"}]**. whereKeyRepresents the specified custom request header field, andValueRepresents the value set for this field.By specifying the custom request header field and the corresponding value, when the access traffic of the domain name passes through WAF, WAF automatically adds the specified custom field value to the request header as the traffic mark, which is convenient for backend service statistics.Explain that if the custom header field already exists in the request, the system will overwrite the value of the custom field in the request with the set traffic tag value.
         */
        value?: pulumi.Input<string>;
    }

}

export namespace yundun {
    export interface BastionHostInstanceAdAuthServer {
        account: pulumi.Input<string>;
        baseDn: pulumi.Input<string>;
        domain: pulumi.Input<string>;
        emailMapping?: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
        isSsl: pulumi.Input<boolean>;
        mobileMapping?: pulumi.Input<string>;
        nameMapping?: pulumi.Input<string>;
        password: pulumi.Input<string>;
        port: pulumi.Input<number>;
        server: pulumi.Input<string>;
        standbyServer?: pulumi.Input<string>;
    }

    export interface BastionHostInstanceLdapAuthServer {
        account: pulumi.Input<string>;
        baseDn: pulumi.Input<string>;
        emailMapping?: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
        isSsl?: pulumi.Input<boolean>;
        loginNameMapping?: pulumi.Input<string>;
        mobileMapping?: pulumi.Input<string>;
        nameMapping?: pulumi.Input<string>;
        password: pulumi.Input<string>;
        port: pulumi.Input<number>;
        server: pulumi.Input<string>;
        standbyServer?: pulumi.Input<string>;
    }

}
