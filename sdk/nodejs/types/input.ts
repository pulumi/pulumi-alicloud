// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface ProviderAssumeRole {
    policy?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
    sessionExpiration?: pulumi.Input<number>;
    sessionName?: pulumi.Input<string>;
}

export interface ProviderEndpoint {
    actiontrail?: pulumi.Input<string>;
    adb?: pulumi.Input<string>;
    alidns?: pulumi.Input<string>;
    alikafka?: pulumi.Input<string>;
    apigateway?: pulumi.Input<string>;
    brainIndustrial?: pulumi.Input<string>;
    bssopenapi?: pulumi.Input<string>;
    cas?: pulumi.Input<string>;
    cassandra?: pulumi.Input<string>;
    cbn?: pulumi.Input<string>;
    cdn?: pulumi.Input<string>;
    cen?: pulumi.Input<string>;
    cms?: pulumi.Input<string>;
    config?: pulumi.Input<string>;
    cr?: pulumi.Input<string>;
    cs?: pulumi.Input<string>;
    datahub?: pulumi.Input<string>;
    dcdn?: pulumi.Input<string>;
    ddosbgp?: pulumi.Input<string>;
    ddoscoo?: pulumi.Input<string>;
    dds?: pulumi.Input<string>;
    dmsEnterprise?: pulumi.Input<string>;
    dns?: pulumi.Input<string>;
    drds?: pulumi.Input<string>;
    eci?: pulumi.Input<string>;
    ecs?: pulumi.Input<string>;
    eipanycast?: pulumi.Input<string>;
    elasticsearch?: pulumi.Input<string>;
    emr?: pulumi.Input<string>;
    ess?: pulumi.Input<string>;
    fc?: pulumi.Input<string>;
    fnf?: pulumi.Input<string>;
    ga?: pulumi.Input<string>;
    gpdb?: pulumi.Input<string>;
    hitsdb?: pulumi.Input<string>;
    ims?: pulumi.Input<string>;
    kms?: pulumi.Input<string>;
    kvstore?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    market?: pulumi.Input<string>;
    maxcompute?: pulumi.Input<string>;
    mns?: pulumi.Input<string>;
    mse?: pulumi.Input<string>;
    nas?: pulumi.Input<string>;
    ons?: pulumi.Input<string>;
    oos?: pulumi.Input<string>;
    oss?: pulumi.Input<string>;
    ots?: pulumi.Input<string>;
    polardb?: pulumi.Input<string>;
    privatelink?: pulumi.Input<string>;
    pvtz?: pulumi.Input<string>;
    quotas?: pulumi.Input<string>;
    rKvstore?: pulumi.Input<string>;
    ram?: pulumi.Input<string>;
    rds?: pulumi.Input<string>;
    resourcemanager?: pulumi.Input<string>;
    resourcesharing?: pulumi.Input<string>;
    ros?: pulumi.Input<string>;
    sgw?: pulumi.Input<string>;
    slb?: pulumi.Input<string>;
    sts?: pulumi.Input<string>;
    vpc?: pulumi.Input<string>;
    wafOpenapi?: pulumi.Input<string>;
}
export namespace actiontrail {
}

export namespace adb {
}

export namespace apigateway {
    export interface ApiConstantParameter {
        /**
         * The description of Constant parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * System parameter location; values: 'HEAD' and 'QUERY'.
         */
        in: pulumi.Input<string>;
        /**
         * System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html)
         */
        name: pulumi.Input<string>;
        /**
         * Constant parameter value.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiFcServiceConfig {
        /**
         * RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
         */
        arnRole?: pulumi.Input<string>;
        /**
         * The function name of function compute service.
         */
        functionName: pulumi.Input<string>;
        /**
         * The region that the function compute service belongs to.
         */
        region: pulumi.Input<string>;
        /**
         * The service name of function compute service.
         */
        serviceName: pulumi.Input<string>;
        /**
         * Backend service time-out time; unit: millisecond.
         */
        timeout: pulumi.Input<number>;
    }

    export interface ApiHttpServiceConfig {
        /**
         * The address of backend service.
         */
        address: pulumi.Input<string>;
        aoneName?: pulumi.Input<string>;
        /**
         * The http method of backend service.
         */
        method: pulumi.Input<string>;
        /**
         * The path of backend service.
         */
        path: pulumi.Input<string>;
        /**
         * Backend service time-out time; unit: millisecond.
         */
        timeout: pulumi.Input<number>;
    }

    export interface ApiHttpVpcServiceConfig {
        aoneName?: pulumi.Input<string>;
        /**
         * The http method of backend service.
         */
        method: pulumi.Input<string>;
        /**
         * System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html)
         */
        name: pulumi.Input<string>;
        /**
         * The path of backend service.
         */
        path: pulumi.Input<string>;
        /**
         * Backend service time-out time; unit: millisecond.
         */
        timeout: pulumi.Input<number>;
    }

    export interface ApiMockServiceConfig {
        aoneName?: pulumi.Input<string>;
        /**
         * The result of the mock service.
         */
        result: pulumi.Input<string>;
    }

    export interface ApiRequestConfig {
        /**
         * The body format of the api, which support the values of 'STREAM' and 'FORM'
         */
        bodyFormat?: pulumi.Input<string>;
        /**
         * The http method of backend service.
         */
        method: pulumi.Input<string>;
        /**
         * The mode of the parameters between request parameters and service parameters, which support the values of 'MAPPING' and 'PASSTHROUGH'
         */
        mode: pulumi.Input<string>;
        /**
         * The path of backend service.
         */
        path: pulumi.Input<string>;
        /**
         * The protocol of api which supports values of 'HTTP','HTTPS' or 'HTTP,HTTPS'
         */
        protocol: pulumi.Input<string>;
    }

    export interface ApiRequestParameter {
        /**
         * The default value of the parameter.
         */
        defaultValue?: pulumi.Input<string>;
        /**
         * The description of Constant parameter.
         */
        description?: pulumi.Input<string>;
        /**
         * System parameter location; values: 'HEAD' and 'QUERY'.
         */
        in: pulumi.Input<string>;
        /**
         * Backend service's parameter location; values: BODY, HEAD, QUERY, and PATH.
         */
        inService: pulumi.Input<string>;
        /**
         * System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html)
         */
        name: pulumi.Input<string>;
        /**
         * Backend service's parameter name.
         */
        nameService: pulumi.Input<string>;
        /**
         * Parameter required or not; values: REQUIRED and OPTIONAL.
         */
        required: pulumi.Input<string>;
        /**
         * Parameter type which supports values of 'STRING','INT','BOOLEAN','LONG',"FLOAT" and "DOUBLE"
         */
        type: pulumi.Input<string>;
    }

    export interface ApiSystemParameter {
        /**
         * System parameter location; values: 'HEAD' and 'QUERY'.
         */
        in: pulumi.Input<string>;
        /**
         * System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html)
         */
        name: pulumi.Input<string>;
        /**
         * Backend service's parameter name.
         */
        nameService: pulumi.Input<string>;
    }

}

export namespace brain {
}

export namespace cas {
}

export namespace cassandra {
}

export namespace cdn {
    export interface DomainAuthConfig {
        /**
         * Auth type of the auth config. Valid values are  `noAuth`, `typeA`, `typeB` and `typeC`. Default value is `noAuth`.
         */
        authType?: pulumi.Input<string>;
        /**
         * Master authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
         */
        masterKey?: pulumi.Input<string>;
        /**
         * Slave authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
         */
        slaveKey?: pulumi.Input<string>;
        /**
         * Authentication cache time of the auth config. Default value is `1800`. It's value is valid only when the `authType` is `typeB` or `typeC`.
         */
        timeout?: pulumi.Input<number>;
    }

    export interface DomainCacheConfig {
        /**
         * Cache content of the cache config. It's value is a path string when the `cacheType` is `path`. When the `cacheType` is `suffix`, it's value is a string which contains multiple file suffixes separated by commas.
         */
        cacheContent: pulumi.Input<string>;
        cacheId?: pulumi.Input<string>;
        /**
         * Cache type of the cache config. Valid values are `suffix` and `path`.
         */
        cacheType: pulumi.Input<string>;
        /**
         * Cache time of the cache config.
         */
        ttl: pulumi.Input<number>;
        /**
         * Weight of the cache config. This parameter's value is between 1 and 99. Default value is `1`. The higher the value, the higher the priority.
         */
        weight?: pulumi.Input<number>;
    }

    export interface DomainCertificateConfig {
        /**
         * The SSL private key. This is required if `serverCertificateStatus` is `on`
         */
        privateKey?: pulumi.Input<string>;
        /**
         * The SSL server certificate string. This is required if `serverCertificateStatus` is `on`
         */
        serverCertificate?: pulumi.Input<string>;
        /**
         * This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
         */
        serverCertificateStatus?: pulumi.Input<string>;
    }

    export interface DomainConfigFunctionArg {
        /**
         * The name of arg.
         */
        argName: pulumi.Input<string>;
        /**
         * The value of arg.
         */
        argValue: pulumi.Input<string>;
    }

    export interface DomainHttpHeaderConfig {
        headerId?: pulumi.Input<string>;
        /**
         * Header key of the http header. Valid values are `Content-Type`, `Cache-Control`, `Content-Disposition`, `Content-Language`，`Expires`, `Access-Control-Allow-Origin`, `Access-Control-Allow-Methods` and `Access-Control-Max-Age`.
         */
        headerKey: pulumi.Input<string>;
        /**
         * Header value of the http header.
         */
        headerValue: pulumi.Input<string>;
    }

    export interface DomainNewCertificateConfig {
        /**
         * The SSL certificate name.
         */
        certName?: pulumi.Input<string>;
        /**
         * The SSL certificate type, can be "upload", "cas" and "free".
         */
        certType?: pulumi.Input<string>;
        /**
         * Set `1` to ignore the repeated verification for certificate name, and cover the information of the origin certificate (with the same name). Set `0` to work the verification.
         */
        forceSet?: pulumi.Input<string>;
        /**
         * The SSL private key. This is required if `serverCertificateStatus` is `on`
         */
        privateKey?: pulumi.Input<string>;
        /**
         * The SSL server certificate string. This is required if `serverCertificateStatus` is `on`
         */
        serverCertificate?: pulumi.Input<string>;
        /**
         * This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
         */
        serverCertificateStatus?: pulumi.Input<string>;
    }

    export interface DomainNewSource {
        /**
         * The adress of source. Valid values can be ip or doaminName. Each item's `content` can not be repeated.
         */
        content: pulumi.Input<string>;
        /**
         * The port of source. Valid values are `443` and `80`. Default value is `80`.
         */
        port?: pulumi.Input<number>;
        /**
         * Priority of the source. Valid values are `0` and `100`. Default value is `20`.
         */
        priority?: pulumi.Input<number>;
        /**
         * The type of the source. Valid values are `ipaddr`, `domain` and `oss`.
         */
        type: pulumi.Input<string>;
        /**
         * Weight of the source. Valid values are from `0` to `100`. Default value is `10`, but if type is `ipaddr`, the value can only be `10`.
         */
        weight?: pulumi.Input<number>;
    }

    export interface DomainPage404Config {
        /**
         * Custom page url of the error page. It must be the full path under the accelerated domain name. It's value must be `http://promotion.alicdn.com/help/oss/error.html` when `pageType` value is `charity` and It can not be set when `pageType` value is `default`.
         */
        customPageUrl?: pulumi.Input<string>;
        errorCode?: pulumi.Input<string>;
        /**
         * Page type of the error page. Valid values are `default`, `charity`, `other`. Default value is `default`.
         */
        pageType?: pulumi.Input<string>;
    }

    export interface DomainParameterFilterConfig {
        /**
         * This parameter indicates whether or not the `parameterFilterConfig` is enable. Valid values are `on` and `off`. Default value is `off`.
         */
        enable?: pulumi.Input<string>;
        /**
         * Reserved parameters of `parameterFilterConfig`. It's a list of string and consists of at most 10 items.
         */
        hashKeyArgs?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface DomainReferConfig {
        /**
         * This parameter indicates whether or not to allow empty refer access. Valid values are `on` and `off`. Default value is `on`.
         */
        allowEmpty?: pulumi.Input<string>;
        /**
         * A list of domain names of the refer config.
         */
        referLists: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Refer type of the refer config. Valid values are `block` and `allow`. Default value is `block`.
         */
        referType?: pulumi.Input<string>;
    }
}

export namespace cen {
}

export namespace cfg {
}

export namespace cloudconnect {
}

export namespace cloudstoragegateway {
}

export namespace cms {
    export interface AlarmEscalationsCritical {
        /**
         * Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
         */
        statistics?: pulumi.Input<string>;
        /**
         * Critical level alarm threshold value, which must be a numeric value currently.
         */
        threshold?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface AlarmEscalationsInfo {
        /**
         * Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
         */
        statistics?: pulumi.Input<string>;
        /**
         * Critical level alarm threshold value, which must be a numeric value currently.
         */
        threshold?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface AlarmEscalationsWarn {
        /**
         * Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
         */
        statistics?: pulumi.Input<string>;
        /**
         * Critical level alarm threshold value, which must be a numeric value currently.
         */
        threshold?: pulumi.Input<string>;
        /**
         * Critical level alarm retry times. Default to 3.
         */
        times?: pulumi.Input<number>;
    }

    export interface GroupMetricRuleEscalations {
        /**
         * The critical level.
         */
        critical?: pulumi.Input<inputs.cms.GroupMetricRuleEscalationsCritical>;
        /**
         * The info level.
         */
        info?: pulumi.Input<inputs.cms.GroupMetricRuleEscalationsInfo>;
        /**
         * The warn level.
         */
        warn?: pulumi.Input<inputs.cms.GroupMetricRuleEscalationsWarn>;
    }

    export interface GroupMetricRuleEscalationsCritical {
        /**
         * The comparison operator of the threshold for warn-level alerts.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for warn-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for warn-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
         */
        times?: pulumi.Input<number>;
    }

    export interface GroupMetricRuleEscalationsInfo {
        /**
         * The comparison operator of the threshold for warn-level alerts.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for warn-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for warn-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
         */
        times?: pulumi.Input<number>;
    }

    export interface GroupMetricRuleEscalationsWarn {
        /**
         * The comparison operator of the threshold for warn-level alerts.
         */
        comparisonOperator?: pulumi.Input<string>;
        /**
         * The statistical aggregation method for warn-level alerts.
         */
        statistics?: pulumi.Input<string>;
        /**
         * The threshold for warn-level alerts.
         */
        threshold?: pulumi.Input<string>;
        /**
         * The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
         */
        times?: pulumi.Input<number>;
    }

    export interface MonitorGroupInstancesInstance {
        /**
         * The category of instance.
         */
        category: pulumi.Input<string>;
        /**
         * The id of instance.
         */
        instanceId: pulumi.Input<string>;
        /**
         * The name of instance.
         */
        instanceName: pulumi.Input<string>;
        /**
         * The region id of instance.
         */
        regionId: pulumi.Input<string>;
    }

    export interface SiteMonitorIspCity {
        city: pulumi.Input<string>;
        isp: pulumi.Input<string>;
    }
}

export namespace config {
}

export namespace cr {
    export interface RepoDomainList {
        /**
         * Domain of internal endpoint, only in some regions.
         */
        internal?: pulumi.Input<string>;
        /**
         * Domain of public endpoint.
         */
        public?: pulumi.Input<string>;
        /**
         * Domain of vpc endpoint.
         */
        vpc?: pulumi.Input<string>;
    }
}

export namespace cs {
    export interface ApplicationService {
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface ClusterNode {
        eip?: pulumi.Input<string>;
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        privateIp?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesCertificateAuthority {
        /**
         * The path of client certificate, like `~/.kube/client-cert.pem`.
         */
        clientCert?: pulumi.Input<string>;
        /**
         * The path of client key, like `~/.kube/client-key.pem`.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         */
        clusterCert?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesConnections {
        apiServerInternet?: pulumi.Input<string>;
        apiServerIntranet?: pulumi.Input<string>;
        masterPublicIp?: pulumi.Input<string>;
        serviceDomain?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesLogConfig {
        project?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface EdgeKubernetesWorkerDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        size?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface EdgeKubernetesWorkerNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface KubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface KubernetesAutoscalerNodepool {
        id?: pulumi.Input<string>;
        labels?: pulumi.Input<string>;
        taints?: pulumi.Input<string>;
    }

    export interface KubernetesCertificateAuthority {
        /**
         * The path of client certificate, like `~/.kube/client-cert.pem`.
         */
        clientCert?: pulumi.Input<string>;
        /**
         * The path of client key, like `~/.kube/client-key.pem`.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         */
        clusterCert?: pulumi.Input<string>;
    }

    export interface KubernetesConnections {
        /**
         * API Server Internet endpoint.
         */
        apiServerInternet?: pulumi.Input<string>;
        /**
         * API Server Intranet endpoint.
         */
        apiServerIntranet?: pulumi.Input<string>;
        /**
         * Master node SSH IP address.
         */
        masterPublicIp?: pulumi.Input<string>;
        /**
         * Service Access Domain.
         */
        serviceDomain?: pulumi.Input<string>;
    }

    export interface KubernetesMasterNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface KubernetesRuntime {
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         */
        version?: pulumi.Input<string>;
    }

    export interface KubernetesTaint {
        effect?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface KubernetesWorkerDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        size?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface KubernetesWorkerNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesCertificateAuthority {
        /**
         * The path of client certificate, like `~/.kube/client-cert.pem`.
         */
        clientCert?: pulumi.Input<string>;
        /**
         * The path of client key, like `~/.kube/client-key.pem`.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         */
        clusterCert?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesConnections {
        /**
         * API Server Internet endpoint.
         */
        apiServerInternet?: pulumi.Input<string>;
        /**
         * API Server Intranet endpoint.
         */
        apiServerIntranet?: pulumi.Input<string>;
        /**
         * Master node SSH IP address.
         */
        masterPublicIp?: pulumi.Input<string>;
        /**
         * Service Access Domain.
         */
        serviceDomain?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesMaintenanceWindow {
        /**
         * The maintenance time, values range from 1 to 24,unit is hour. For example: "3h".
         */
        duration: pulumi.Input<string>;
        /**
         * Whether to open the maintenance window. The following parameters take effect only `enable = true`.
         */
        enable: pulumi.Input<boolean>;
        /**
         * Initial maintenance time, For example:"03:00:00Z".
         */
        maintenanceTime: pulumi.Input<string>;
        /**
         * Maintenance cycle, you can set the values from Monday to Sunday, separated by commas when the values are multiple. The default is Thursday.
         */
        weeklyPeriod: pulumi.Input<string>;
    }

    export interface ManagedKubernetesRuntime {
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
         */
        version?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesTaint {
        effect?: pulumi.Input<string>;
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesWorkerDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        size?: pulumi.Input<string>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface ManagedKubernetesWorkerNode {
        /**
         * ID of the node.
         */
        id?: pulumi.Input<string>;
        /**
         * The kubernetes cluster's name. It is unique in one Alicloud account.
         */
        name?: pulumi.Input<string>;
        /**
         * The private IP address of node.
         */
        privateIp?: pulumi.Input<string>;
    }

    export interface NodePoolDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        category?: pulumi.Input<string>;
        device?: pulumi.Input<string>;
        encrypted?: pulumi.Input<string>;
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The name of node pool.
         */
        name?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface NodePoolLabel {
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface NodePoolManagement {
        /**
         * Whether automatic repair, Default to `false`.
         */
        autoRepair?: pulumi.Input<boolean>;
        /**
         * Whether auto upgrade, Default to `false`.
         */
        autoUpgrade?: pulumi.Input<boolean>;
        /**
         * Max number of unavailable nodes. Default to `1`.
         */
        maxUnavailable: pulumi.Input<number>;
        /**
         * Number of additional nodes. You have to specify one of surge, surge_percentage.
         */
        surge?: pulumi.Input<number>;
        /**
         * Proportion of additional nodes. You have to specify one of surge, surge_percentage.
         */
        surgePercentage?: pulumi.Input<number>;
    }

    export interface NodePoolScalingConfig {
        /**
         * Peak EIP bandwidth. Its valid value range [1~500] in Mbps. Default to `5`.
         */
        eipBandwidth?: pulumi.Input<number>;
        /**
         * EIP billing type. `PayByBandwidth`: Charged at fixed bandwidth. `PayByTraffic`: Billed as used traffic. Default: `PayByBandwidth`.
         */
        eipInternetChargeType?: pulumi.Input<string>;
        /**
         * Whether to bind EIP for an instance. Default: `false`.
         */
        isBondEip?: pulumi.Input<boolean>;
        /**
         * Max number of instances in a auto scaling group, its valid value range [0~1000]. `maxSize` has to be greater than `minSize`.
         */
        maxSize: pulumi.Input<number>;
        /**
         * Min number of instances in a auto scaling group, its valid value range [0~1000].
         */
        minSize: pulumi.Input<number>;
        /**
         * Instance classification, not required. Vaild value: `cpu`, `gpu`, `gpushare` and `spot`. Default: `cpu`. The actual instance type is determined by `instanceTypes`.
         */
        type?: pulumi.Input<string>;
    }

    export interface NodePoolTaint {
        effect?: pulumi.Input<string>;
        key: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface ServerlessKubernetesAddon {
        config?: pulumi.Input<string>;
        disabled?: pulumi.Input<boolean>;
        /**
         * The kubernetes cluster's name. It is the only in one Alicloud account.
         */
        name?: pulumi.Input<string>;
    }

    export interface SwarmNode {
        eip?: pulumi.Input<string>;
        id?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        privateIp?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
    }
}

export namespace dcdn {
    export interface DomainSource {
        /**
         * The origin address.
         */
        content: pulumi.Input<string>;
        /**
         * The port number. Valid values: `443` and `80`. Default to `80`.
         */
        port?: pulumi.Input<number>;
        /**
         * The priority of the origin if multiple origins are specified. Default to `20`.
         */
        priority?: pulumi.Input<string>;
        /**
         * The type of the origin. Valid values:
         * `ipaddr`: The origin is configured using an IP address.
         * `domain`: The origin is configured using a domain name.
         * `oss`: The origin is configured using the Internet domain name of an Alibaba Cloud Object Storage Service (OSS) bucket.
         */
        type: pulumi.Input<string>;
        /**
         * The weight of the origin if multiple origins are specified. Default to `10`.
         */
        weight?: pulumi.Input<string>;
    }

}

export namespace ddos {
    export interface SchedulerRuleRule {
        priority?: pulumi.Input<number>;
        regionId?: pulumi.Input<string>;
        status?: pulumi.Input<number>;
        type?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
        valueType?: pulumi.Input<number>;
    }
}

export namespace dds {
}

export namespace dms {
}

export namespace dns {
}

export namespace drds {
}

export namespace eci {
    export interface ContainerGroupContainer {
        /**
         * The arguments passed to the commands.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The amount of CPU resources allocated to the container.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The structure of environmentVars.
         */
        environmentVars?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerEnvironmentVar>[]>;
        /**
         * The number GPUs.
         */
        gpu?: pulumi.Input<number>;
        /**
         * The image of the container.
         */
        image: pulumi.Input<string>;
        /**
         * The restart policy of the image.
         */
        imagePullPolicy?: pulumi.Input<string>;
        /**
         * The amount of memory resources allocated to the container.
         */
        memory?: pulumi.Input<number>;
        /**
         * The name of the mounted volume.
         */
        name: pulumi.Input<string>;
        /**
         * The structure of port.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerPort>[]>;
        ready?: pulumi.Input<boolean>;
        restartCount?: pulumi.Input<number>;
        /**
         * The structure of volumeMounts.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupContainerVolumeMount>[]>;
        /**
         * The working directory of the container.
         */
        workingDir?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerEnvironmentVar {
        /**
         * The name of the variable. The name can be 1 to 128 characters in length and can contain letters, digits, and underscores (_). It cannot start with a digit.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerPort {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values: TCP and UDP.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface ContainerGroupContainerVolumeMount {
        /**
         * The directory of the mounted volume. Data under this directory will be overwritten by the data in the volume.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The name of the mounted volume.
         */
        name?: pulumi.Input<string>;
        /**
         * Default to `false`.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    export interface ContainerGroupDnsConfig {
        /**
         * The list of DNS server IP addresses.
         */
        nameServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The structure of options.
         */
        options?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupDnsConfigOption>[]>;
        /**
         * The list of DNS lookup domains.
         */
        searches?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ContainerGroupDnsConfigOption {
        /**
         * The name of the mounted volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupEciSecurityContext {
        sysctls?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupEciSecurityContextSysctl>[]>;
    }

    export interface ContainerGroupEciSecurityContextSysctl {
        /**
         * The name of the mounted volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupHostAlias {
        /**
         * Adds a host name.
         */
        hostnames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Adds an IP address.
         */
        ip?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainer {
        /**
         * The arguments passed to the commands.
         */
        args?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The commands run by the init container.
         */
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The amount of CPU resources allocated to the container.
         */
        cpu?: pulumi.Input<number>;
        /**
         * The structure of environmentVars.
         */
        environmentVars?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupInitContainerEnvironmentVar>[]>;
        /**
         * The number GPUs.
         */
        gpu?: pulumi.Input<number>;
        /**
         * The image of the container.
         */
        image?: pulumi.Input<string>;
        /**
         * The restart policy of the image.
         */
        imagePullPolicy?: pulumi.Input<string>;
        /**
         * The amount of memory resources allocated to the container.
         */
        memory?: pulumi.Input<number>;
        /**
         * The name of the mounted volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The structure of port.
         */
        ports?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupInitContainerPort>[]>;
        ready?: pulumi.Input<boolean>;
        restartCount?: pulumi.Input<number>;
        /**
         * The structure of volumeMounts.
         */
        volumeMounts?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupInitContainerVolumeMount>[]>;
        /**
         * The working directory of the container.
         */
        workingDir?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainerEnvironmentVar {
        /**
         * The name of the variable. The name can be 1 to 128 characters in length and can contain letters, digits, and underscores (_). It cannot start with a digit.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of the variable. The value can be 0 to 256 characters in length.
         */
        value?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainerPort {
        /**
         * The port number. Valid values: 1 to 65535.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values: TCP and UDP.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface ContainerGroupInitContainerVolumeMount {
        /**
         * The directory of the mounted volume. Data under this directory will be overwritten by the data in the volume.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The name of the mounted volume.
         */
        name?: pulumi.Input<string>;
        /**
         * Default to `false`.
         */
        readOnly?: pulumi.Input<boolean>;
    }

    export interface ContainerGroupVolume {
        /**
         * ConfigFileVolumeConfigFileToPaths.
         */
        configFileVolumeConfigFileToPaths?: pulumi.Input<pulumi.Input<inputs.eci.ContainerGroupVolumeConfigFileVolumeConfigFileToPath>[]>;
        /**
         * The ID of DiskVolume.
         */
        diskVolumeDiskId?: pulumi.Input<string>;
        /**
         * The system type of DiskVolume.
         */
        diskVolumeFsType?: pulumi.Input<string>;
        /**
         * The name of the FlexVolume driver.
         */
        flexVolumeDriver?: pulumi.Input<string>;
        /**
         * The type of the mounted file system. The default value is determined by the script of FlexVolume.
         */
        flexVolumeFsType?: pulumi.Input<string>;
        /**
         * The list of FlexVolume objects. Each object is a key-value pair contained in a JSON string.
         */
        flexVolumeOptions?: pulumi.Input<string>;
        /**
         * The name of the mounted volume.
         */
        name?: pulumi.Input<string>;
        /**
         * The path to the NFS volume.
         */
        nfsVolumePath?: pulumi.Input<string>;
        /**
         * The nfs volume read only. Default to `false`.
         */
        nfsVolumeReadOnly?: pulumi.Input<boolean>;
        /**
         * The address of the NFS server.
         */
        nfsVolumeServer?: pulumi.Input<string>;
        /**
         * The type of the volume.
         */
        type?: pulumi.Input<string>;
    }

    export interface ContainerGroupVolumeConfigFileVolumeConfigFileToPath {
        /**
         * The content of the configuration file. Maximum size: 32 KB.
         */
        content?: pulumi.Input<string>;
        /**
         * The relative file path.
         */
        path?: pulumi.Input<string>;
    }

    export interface ImageCacheImageRegistryCredential {
        /**
         * The password of the Image Registry.
         */
        password?: pulumi.Input<string>;
        /**
         * The address of Image Registry without `http://` or `https://`.
         */
        server?: pulumi.Input<string>;
        /**
         * The user name of Image Registry.
         */
        userName?: pulumi.Input<string>;
    }

    export interface OpenApiImageCacheImageRegistryCredential {
        password?: pulumi.Input<string>;
        server?: pulumi.Input<string>;
        userName?: pulumi.Input<string>;
    }
}

export namespace ecs {
    export interface AutoProvisioningGroupLaunchTemplateConfig {
        instanceType?: pulumi.Input<string>;
        maxPrice: pulumi.Input<string>;
        priority?: pulumi.Input<string>;
        vswitchId: pulumi.Input<string>;
        weightedCapacity: pulumi.Input<string>;
    }

    export interface DedicatedHostNetworkAttribute {
        /**
         * The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
         */
        slbUdpTimeout?: pulumi.Input<number>;
        /**
         * The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
         */
        udpTimeout?: pulumi.Input<number>;
    }

    export interface ImageDiskDeviceMapping {
        /**
         * Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
         */
        device?: pulumi.Input<string>;
        /**
         * Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
         */
        diskType?: pulumi.Input<string>;
        /**
         * Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
         */
        size?: pulumi.Input<number>;
        /**
         * Specifies a snapshot that is used to create a combined custom image.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface ImageImportDiskDeviceMapping {
        /**
         * The name of disk N in the custom image.
         */
        device?: pulumi.Input<string>;
        /**
         * Resolution size. You must ensure that the system disk space ≥ file system space. Ranges: When n = 1, the system disk: 5 ~ 500GiB, When n = 2 ~ 17, that is, data disk: 5 ~ 1000GiB, When temporary is introduced, the system automatically detects the size, which is subject to the detection result.
         */
        diskImageSize?: pulumi.Input<number>;
        /**
         * Image format. Value range: When the `RAW`, `VHD`, `qcow2` is imported into the image, the system automatically detects the image format, whichever comes first.
         */
        format?: pulumi.Input<string>;
        /**
         * Save the exported OSS bucket.
         */
        ossBucket?: pulumi.Input<string>;
        /**
         * The file name of your OSS Object.
         */
        ossObject?: pulumi.Input<string>;
    }

    export interface InstanceDataDisk {
        /**
         * The ID of the automatic snapshot policy applied to the system disk.
         */
        autoSnapshotPolicyId?: pulumi.Input<string>;
        /**
         * The category of the disk:
         * - `cloud`: The general cloud disk.
         * - `cloudEfficiency`: The efficiency cloud disk.
         * - `cloudSsd`: The SSD cloud disk.
         * - `cloudEssd`: The ESSD cloud disk.
         * - `ephemeralSsd`: The local SSD disk.
         * Default to `cloudEfficiency`.
         */
        category?: pulumi.Input<string>;
        /**
         * Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloud_essd, cloudSsd disk. If the category of this data disk was ephemeral_ssd, please don't set this param. Default value: `true`.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        /**
         * -(Optional, Bool, ForceNew) Encrypted the data in this disk. Default value: `false`.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * The KMS key ID corresponding to the Nth data disk.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        /**
         * The performance level of the ESSD used as data disk:
         * - `PL0`: A single ESSD can deliver up to 10,000 random read/write IOPS.
         * - `PL1`: A single ESSD can deliver up to 50,000 random read/write IOPS.
         * - `PL2`: A single ESSD can deliver up to 100,000 random read/write IOPS.
         * - `PL3`: A single ESSD can deliver up to 1,000,000 random read/write IOPS.
         * Default to `PL1`.
         */
        performanceLevel?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         * - cloud：[5, 2000]
         * - cloud_efficiency：[20, 32768]
         * - cloud_ssd：[20, 32768]
         * - cloud_essd：[20, 32768]
         * - ephemeral_ssd: [5, 800]
         */
        size: pulumi.Input<number>;
        /**
         * The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface LaunchTemplateDataDisk {
        /**
         * The category of the disk:
         * - cloud: Basic cloud disk.
         * - cloud_efficiency: Ultra cloud disk.
         * - cloud_ssd: SSD cloud Disks.
         * - ephemeral_ssd: local SSD Disks
         * - cloud_essd: ESSD cloud Disks.
         */
        category?: pulumi.Input<string>;
        /**
         * Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
         */
        deleteWithInstance?: pulumi.Input<boolean>;
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        /**
         * -(Optional, Bool) Encrypted the data in this disk.
         */
        encrypted?: pulumi.Input<boolean>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        /**
         * The size of the data disk.
         * - cloud：[5, 2000]
         * - cloud_efficiency：[20, 32768]
         * - cloud_ssd：[20, 32768]
         * - cloud_essd：[20, 32768]
         * - ephemeral_ssd: [5, 800]
         */
        size?: pulumi.Input<number>;
        /**
         * The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
         */
        snapshotId?: pulumi.Input<string>;
    }

    export interface LaunchTemplateNetworkInterfaces {
        /**
         * The description of the data disk.
         */
        description?: pulumi.Input<string>;
        /**
         * The name of the data disk.
         */
        name?: pulumi.Input<string>;
        /**
         * The primary private IP address of the ENI.
         */
        primaryIp?: pulumi.Input<string>;
        /**
         * The security group ID must be one in the same VPC.
         */
        securityGroupId?: pulumi.Input<string>;
        /**
         * The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
         */
        vswitchId?: pulumi.Input<string>;
    }
}

export namespace edas {
}

export namespace eipanycast {
}

export namespace elasticsearch {
}

export namespace emr {
    export interface ClusterBootstrapAction {
        /**
         * bootstrap action args, e.g. "--a=b".
         */
        arg?: pulumi.Input<string>;
        /**
         * bootstrap action name.
         */
        name?: pulumi.Input<string>;
        /**
         * bootstrap action path, e.g. "oss://bucket/path".
         */
        path?: pulumi.Input<string>;
    }

    export interface ClusterHostGroup {
        /**
         * Auto renew for prepaid, true of false. Default is false.
         */
        autoRenew?: pulumi.Input<boolean>;
        /**
         * Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global chargeType value.
         */
        chargeType?: pulumi.Input<string>;
        /**
         * Data disk capacity.
         */
        diskCapacity?: pulumi.Input<string>;
        /**
         * Data disk count.
         */
        diskCount?: pulumi.Input<string>;
        /**
         * Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
         */
        diskType?: pulumi.Input<string>;
        gpuDriver?: pulumi.Input<string>;
        /**
         * host group name.
         */
        hostGroupName?: pulumi.Input<string>;
        /**
         * host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
         */
        hostGroupType?: pulumi.Input<string>;
        /**
         * Instance list for cluster scale down. This value follows the json format, e.g. ["instanceId1","instanceId2"]. escape character for " is \".
         */
        instanceList?: pulumi.Input<string>;
        /**
         * Host Ecs instance type.
         */
        instanceType?: pulumi.Input<string>;
        /**
         * Host number in this group.
         */
        nodeCount?: pulumi.Input<string>;
        /**
         * If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
         */
        period?: pulumi.Input<number>;
        /**
         * System disk capacity.
         */
        sysDiskCapacity?: pulumi.Input<string>;
        /**
         * System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
         */
        sysDiskType?: pulumi.Input<string>;
    }

}

export namespace ess {
    export interface ScalingConfigurationDataDisk {
        autoSnapshotPolicyId?: pulumi.Input<string>;
        category?: pulumi.Input<string>;
        deleteWithInstance?: pulumi.Input<boolean>;
        description?: pulumi.Input<string>;
        /**
         * @deprecated Attribute device has been deprecated on disk attachment resource. Suggest to remove it from your template.
         */
        device?: pulumi.Input<string>;
        encrypted?: pulumi.Input<boolean>;
        kmsKeyId?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
    }

    export interface ScalingGroupVServerGroupsVserverGroup {
        loadbalancerId: pulumi.Input<string>;
        vserverAttributes: pulumi.Input<pulumi.Input<inputs.ess.ScalingGroupVServerGroupsVserverGroupVserverAttribute>[]>;
    }

    export interface ScalingGroupVServerGroupsVserverGroupVserverAttribute {
        port: pulumi.Input<number>;
        vserverGroupId: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface ScalingRuleStepAdjustment {
        metricIntervalLowerBound?: pulumi.Input<string>;
        metricIntervalUpperBound?: pulumi.Input<string>;
        scalingAdjustment?: pulumi.Input<number>;
    }
}

export namespace fc {
    export interface AliasRoutingConfig {
        /**
         * A map that defines the proportion of events that should be sent to different versions of a Function Compute service.
         */
        additionalVersionWeights?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    }

    export interface CustomDomainCertConfig {
        /**
         * The name of the certificate, used to distinguish different certificates.
         */
        certName: pulumi.Input<string>;
        /**
         * Certificate data of the HTTPS certificates, follow the 'pem' format.
         */
        certificate: pulumi.Input<string>;
        /**
         * Private key of the HTTPS certificates, follow the 'pem' format.
         */
        privateKey: pulumi.Input<string>;
    }

    export interface CustomDomainRouteConfig {
        /**
         * The name of the Function Compute function that requests are routed to.
         */
        functionName: pulumi.Input<string>;
        /**
         * The requests of the specified HTTP methos are routed from. Valid method: GET, POST, DELETE, HEAD, PUT and PATCH. For example, "GET, HEAD" methods indicate that only requests from GET and HEAD methods are routed.
         */
        methods?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The path that requests are routed from.
         */
        path: pulumi.Input<string>;
        /**
         * The version or alias of the Function Compute service that requests are routed to. For example, qualifier v1 indicates that the requests are routed to the version 1 Function Compute service. For detail information about verison and alias, please refer to the [developer guide](https://www.alibabacloud.com/help/doc-detail/96464.htm).
         */
        qualifier?: pulumi.Input<string>;
        serviceName: pulumi.Input<string>;
    }

    export interface FunctionAsyncInvokeConfigDestinationConfig {
        /**
         * Configuration block with destination configuration for failed asynchronous invocations. See below for details.
         */
        onFailure?: pulumi.Input<inputs.fc.FunctionAsyncInvokeConfigDestinationConfigOnFailure>;
        /**
         * Configuration block with destination configuration for successful asynchronous invocations. See below for details.
         */
        onSuccess?: pulumi.Input<inputs.fc.FunctionAsyncInvokeConfigDestinationConfigOnSuccess>;
    }

    export interface FunctionAsyncInvokeConfigDestinationConfigOnFailure {
        /**
         * Alicloud Resource Name (ARN) of the destination resource. See the [Developer Guide](https://www.alibabacloud.com/help/doc-detail/181866.htm) for acceptable resource types and associated RAM permissions.
         */
        destination: pulumi.Input<string>;
    }

    export interface FunctionAsyncInvokeConfigDestinationConfigOnSuccess {
        /**
         * Alicloud Resource Name (ARN) of the destination resource. See the [Developer Guide](https://www.alibabacloud.com/help/doc-detail/181866.htm) for acceptable resource types and associated RAM permissions.
         */
        destination: pulumi.Input<string>;
    }

    export interface FunctionCustomContainerConfig {
        /**
         * The args field specifies the arguments passed to the command.
         */
        args?: pulumi.Input<string>;
        /**
         * The entry point of the container, which specifies the actual command run by the container.
         */
        command?: pulumi.Input<string>;
        /**
         * The container image address.
         */
        image: pulumi.Input<string>;
    }

    export interface ServiceLogConfig {
        /**
         * The log store name of Alicloud Simple Log Service.
         */
        logstore: pulumi.Input<string>;
        /**
         * The project name of the Alicloud Simple Log Service.
         */
        project: pulumi.Input<string>;
    }

    export interface ServiceNasConfig {
        /**
         * The group id of your NAS file system.
         */
        groupId: pulumi.Input<number>;
        /**
         * Config the NAS mount points, including following attributes:
         */
        mountPoints: pulumi.Input<pulumi.Input<inputs.fc.ServiceNasConfigMountPoint>[]>;
        /**
         * The user id of your NAS file system.
         */
        userId: pulumi.Input<number>;
    }

    export interface ServiceNasConfigMountPoint {
        /**
         * The local address where to mount your remote NAS directory.
         */
        mountDir: pulumi.Input<string>;
        /**
         * The address of the remote NAS directory.
         */
        serverAddr: pulumi.Input<string>;
    }

    export interface ServiceVpcConfig {
        /**
         * A security group ID associated with the Function Compute Service.
         */
        securityGroupId: pulumi.Input<string>;
        vpcId?: pulumi.Input<string>;
        /**
         * A list of vswitch IDs associated with the Function Compute Service.
         */
        vswitchIds: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace fnf {
}

export namespace ga {
    export interface EndpointGroupEndpointConfiguration {
        /**
         * Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
         */
        enableClientipPreservation?: pulumi.Input<boolean>;
        /**
         * The IP address or domain name of Endpoint N in the endpoint group.
         */
        endpoint: pulumi.Input<string>;
        /**
         * The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
         */
        type: pulumi.Input<string>;
        /**
         * The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
         */
        weight: pulumi.Input<number>;
    }

    export interface EndpointGroupPortOverrides {
        /**
         * Forwarding port.
         */
        endpointPort?: pulumi.Input<number>;
        /**
         * Listener port.
         */
        listenerPort?: pulumi.Input<number>;
    }

    export interface ListenerCertificate {
        /**
         * The id of the certificate.
         */
        id?: pulumi.Input<string>;
    }

    export interface ListenerPortRange {
        /**
         * The initial listening port used to receive requests and forward them to terminal nodes.
         */
        fromPort: pulumi.Input<number>;
        /**
         * The end listening port used to receive requests and forward them to terminal nodes.
         */
        toPort: pulumi.Input<number>;
    }
}

export namespace gpdb {
}

export namespace hbase {
    export interface InstanceSlbConnAddr {
        connAddr?: pulumi.Input<string>;
        connAddrPort?: pulumi.Input<string>;
        netType?: pulumi.Input<string>;
    }

    export interface InstanceUiProxyConnAddr {
        connAddr?: pulumi.Input<string>;
        connAddrPort?: pulumi.Input<string>;
        netType?: pulumi.Input<string>;
    }

    export interface InstanceZkConnAddr {
        connAddr?: pulumi.Input<string>;
        connAddrPort?: pulumi.Input<string>;
        netType?: pulumi.Input<string>;
    }
}

export namespace kms {
}

export namespace kvstore {
    export interface InstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace log {
    export interface AlertNotificationList {
        /**
         * Notice content of alarm.
         */
        content: pulumi.Input<string>;
        /**
         * Email address list.
         */
        emailLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * SMS sending mobile number.
         */
        mobileLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Request address.
         */
        serviceUri?: pulumi.Input<string>;
        /**
         * Notification type. support Email, SMS, DingTalk, MessageCenter.
         */
        type: pulumi.Input<string>;
    }

    export interface AlertQueryList {
        /**
         * chart title
         */
        chartTitle: pulumi.Input<string>;
        /**
         * end time. example: 20s.
         */
        end: pulumi.Input<string>;
        /**
         * Query logstore
         */
        logstore: pulumi.Input<string>;
        /**
         * query corresponding to chart. example: * AND aliyun.
         */
        query: pulumi.Input<string>;
        /**
         * begin time. example: -60s.
         */
        start: pulumi.Input<string>;
        /**
         * default Custom. No need to configure this parameter.
         */
        timeSpanType?: pulumi.Input<string>;
    }

    export interface StoreIndexFieldSearch {
        /**
         * The alias of one field.
         */
        alias?: pulumi.Input<string>;
        /**
         * Whether the case sensitive for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        caseSensitive?: pulumi.Input<boolean>;
        /**
         * Whether to enable field analytics. Default to true.
         */
        enableAnalytics?: pulumi.Input<boolean>;
        /**
         * Whether includes the chinese for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        includeChinese?: pulumi.Input<boolean>;
        /**
         * Use nested index when type is json
         */
        jsonKeys?: pulumi.Input<pulumi.Input<inputs.log.StoreIndexFieldSearchJsonKey>[]>;
        /**
         * When using the jsonKeys field, this field is required.
         */
        name: pulumi.Input<string>;
        /**
         * The string of several split words, like "\r", "#". It is valid when "type" is "text" or "json".
         */
        token?: pulumi.Input<string>;
        /**
         * The type of one field. Valid values: ["long", "text", "double"]. Default to "long"
         */
        type?: pulumi.Input<string>;
    }

    export interface StoreIndexFieldSearchJsonKey {
        /**
         * The alias of one field.
         */
        alias?: pulumi.Input<string>;
        /**
         * Whether to enable statistics. default to true.
         */
        docValue?: pulumi.Input<boolean>;
        /**
         * When using the jsonKeys field, this field is required.
         */
        name: pulumi.Input<string>;
        /**
         * The type of one field. Valid values: ["long", "text", "double"]. Default to "long"
         */
        type?: pulumi.Input<string>;
    }

    export interface StoreIndexFullText {
        /**
         * Whether the case sensitive for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        caseSensitive?: pulumi.Input<boolean>;
        /**
         * Whether includes the chinese for the field. Default to false. It is valid when "type" is "text" or "json".
         */
        includeChinese?: pulumi.Input<boolean>;
        /**
         * The string of several split words, like "\r", "#". It is valid when "type" is "text" or "json".
         */
        token?: pulumi.Input<string>;
    }

    export interface StoreShard {
        beginKey?: pulumi.Input<string>;
        endKey?: pulumi.Input<string>;
        /**
         * The ID of the log project. It formats of `<project>:<name>`.
         */
        id?: pulumi.Input<number>;
        status?: pulumi.Input<string>;
    }
}

export namespace marketplace {
}

export namespace mns {
}

export namespace mongodb {
    export interface ShardingInstanceMongoList {
        /**
         * Mongo node connection string
         */
        connectString?: pulumi.Input<string>;
        /**
         * -(Required) Node specification. see [Instance specifications](https://www.alibabacloud.com/help/doc-detail/57141.htm).
         */
        nodeClass: pulumi.Input<string>;
        /**
         * The ID of the shard-node.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * Mongo node port
         * * `shardList`
         */
        port?: pulumi.Input<number>;
    }

    export interface ShardingInstanceShardList {
        /**
         * -(Required) Node specification. see [Instance specifications](https://www.alibabacloud.com/help/doc-detail/57141.htm).
         */
        nodeClass: pulumi.Input<string>;
        /**
         * The ID of the shard-node.
         */
        nodeId?: pulumi.Input<string>;
        /**
         * - Custom storage space; value range: [10, 1,000]
         * - 10-GB increments. Unit: GB.
         */
        nodeStorage: pulumi.Input<number>;
    }
}

export namespace mse {
}

export namespace nas {
}

export namespace oos {
}

export namespace oss {
    export interface BucketCorsRule {
        /**
         * Specifies which headers are allowed.
         */
        allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which methods are allowed. Can be GET, PUT, POST, DELETE or HEAD.
         */
        allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies which origins are allowed.
         */
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies expose header in the response.
         */
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies time in seconds that browser can cache the response for a preflight request.
         */
        maxAgeSeconds?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRule {
        /**
         * Specifies lifecycle rule status.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specifies a period in the object's expire (documented below).
         */
        expirations?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleExpiration>[]>;
        /**
         * Unique identifier for the rule. If omitted, OSS bucket will assign a unique name.
         */
        id?: pulumi.Input<string>;
        /**
         * Object key prefix identifying one or more objects to which the rule applies. Default value is null, the rule applies to all objects in a bucket.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies the time when an object is converted to the IA or archive storage class during a valid life cycle. (documented below).
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.oss.BucketLifecycleRuleTransition>[]>;
    }

    export interface BucketLifecycleRuleExpiration {
        /**
         * Specifies the date after which you want the corresponding action to take effect. The value obeys ISO8601 format like `2017-03-09`.
         */
        date?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleTransition {
        /**
         * Specifies the time before which the rules take effect. The date must conform to the ISO8601 format and always be UTC 00:00. For example: 2002-10-11T00:00:00.000Z indicates that objects updated before 2002-10-11T00:00:00.000Z are deleted or converted to another storage class, and objects updated after this time (including this time) are not deleted or converted.
         */
        createdBeforeDate?: pulumi.Input<string>;
        /**
         * Specifies the number of days after object creation when the specific rule action takes effect.
         */
        days?: pulumi.Input<number>;
        /**
         * Specifies the storage class that objects that conform to the rule are converted into. The storage class of the objects in a bucket of the IA storage class can be converted into Archive but cannot be converted into Standard. Values: `IA`, `Archive`.
         */
        storageClass?: pulumi.Input<string>;
    }

    export interface BucketLogging {
        /**
         * The name of the bucket that will receive the log objects.
         */
        targetBucket: pulumi.Input<string>;
        /**
         * To specify a key prefix for log objects.
         */
        targetPrefix?: pulumi.Input<string>;
    }

    export interface BucketRefererConfig {
        /**
         * Allows referer to be empty. Defaults false.
         */
        allowEmpty?: pulumi.Input<boolean>;
        /**
         * The list of referer.
         */
        referers: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface BucketServerSideEncryptionRule {
        /**
         * The alibaba cloud KMS master key ID used for the SSE-KMS encryption.
         */
        kmsMasterKeyId?: pulumi.Input<string>;
        /**
         * The server-side encryption algorithm to use. Possible values: `AES256` and `KMS`.
         */
        sseAlgorithm: pulumi.Input<string>;
    }

    export interface BucketVersioning {
        /**
         * Specifies the versioning state of a bucket. Valid values: `Enabled` and `Suspended`.
         */
        status: pulumi.Input<string>;
    }

    export interface BucketWebsite {
        /**
         * An absolute path to the document to return in case of a 4XX error.
         */
        errorDocument?: pulumi.Input<string>;
        /**
         * Alicloud OSS returns this index document when requests are made to the root domain or any of the subfolders.
         */
        indexDocument: pulumi.Input<string>;
    }

}

export namespace ots {
    export interface TablePrimaryKey {
        /**
         * Name for primary key.
         */
        name: pulumi.Input<string>;
        /**
         * Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
         */
        type: pulumi.Input<string>;
    }
}

export namespace polardb {
    export interface ClusterParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

}

export namespace privatelink {
}

export namespace pvtz {
    export interface ZoneAttachmentVpc {
        /**
         * The region of the vpc. If not set, the current region will instead of.
         */
        regionId?: pulumi.Input<string>;
        /**
         * The Id of the vpc.
         */
        vpcId: pulumi.Input<string>;
    }
}

export namespace quotas {
    export interface ApplicationInfoDimension {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GetApplicationInfosDimension {
        key?: string;
        value?: string;
    }

    export interface GetQuotaAlarmsQuotaDimension {
        /**
         * The key of quota_dimensions.
         */
        key?: string;
        /**
         * The value of quota_dimensions.
         */
        value?: string;
    }

    export interface GetQuotaApplicationsDimension {
        /**
         * The key of dimensions.
         */
        key?: string;
        /**
         * The value of dimensions.
         */
        value?: string;
    }

    export interface GetQuotasDimension {
        /**
         * The key of dimensions.
         */
        key?: string;
        /**
         * The value of dimensions.
         */
        value?: string;
    }

    export interface QuotaAlarmQuotaDimension {
        /**
         * The Key of quota_dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The Value of quota_dimensions.
         */
        value?: pulumi.Input<string>;
    }

    export interface QuotaApplicationDimension {
        /**
         * The key of dimensions.
         */
        key?: pulumi.Input<string>;
        /**
         * The value of dimensions.
         */
        value?: pulumi.Input<string>;
    }
}

export namespace ram {
    export interface PolicyStatement {
        /**
         * (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
         */
        actions: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * (It has been deprecated from version 1.49.0, and use field 'document' to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
         */
        effect: pulumi.Input<string>;
        /**
         * (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone's Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
         */
        resources: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace rds {
    export interface InstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RdsParameterGroupParamDetail {
        /**
         * The name of a parameter.
         */
        paramName: pulumi.Input<string>;
        /**
         * The value of a parameter.
         */
        paramValue: pulumi.Input<string>;
    }

    export interface ReadOnlyInstanceParameter {
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }
}

export namespace resourcemanager {
    export interface ResourceGroupRegionStatus {
        /**
         * The region ID.
         */
        regionId?: pulumi.Input<string>;
        /**
         * The status of the regional resource group.
         */
        status?: pulumi.Input<string>;
    }
}

export namespace rocketmq {
}

export namespace ros {
    export interface ChangeSetParameter {
        /**
         * The parameter key.
         */
        parameterKey: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue: pulumi.Input<string>;
    }

    export interface StackGroupParameter {
        /**
         * The parameter key.
         */
        parameterKey?: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue?: pulumi.Input<string>;
    }

    export interface StackParameter {
        /**
         * The parameter key.
         */
        parameterKey?: pulumi.Input<string>;
        /**
         * The parameter value.
         */
        parameterValue: pulumi.Input<string>;
    }
}

export namespace sag {
}

export namespace slb {
    export interface AclEntryList {
        comment?: pulumi.Input<string>;
        entry: pulumi.Input<string>;
    }

    export interface BackendServerBackendServer {
        serverId: pulumi.Input<string>;
        serverIp?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface ListenerXForwardedFor {
        retriveClientIp?: pulumi.Input<boolean>;
        /**
         * Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
         */
        retriveSlbId?: pulumi.Input<boolean>;
        /**
         * Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
         */
        retriveSlbIp?: pulumi.Input<boolean>;
        /**
         * Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.
         */
        retriveSlbProto?: pulumi.Input<boolean>;
    }

    export interface MasterSlaveServerGroupServer {
        isBackup?: pulumi.Input<number>;
        port: pulumi.Input<number>;
        serverId: pulumi.Input<string>;
        serverType?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }

    export interface ServerGroupServer {
        port: pulumi.Input<number>;
        serverIds: pulumi.Input<pulumi.Input<string>[]>;
        type?: pulumi.Input<string>;
        weight?: pulumi.Input<number>;
    }
}

export namespace tsdb {
}

export namespace vpc {
    export interface NatGatewayBandwidthPackage {
        bandwidth: pulumi.Input<number>;
        ipCount: pulumi.Input<number>;
        publicIpAddresses?: pulumi.Input<string>;
        zone?: pulumi.Input<string>;
    }

    export interface NetworkAclAttachmentResource {
        /**
         * The resource id that the network acl will associate with.
         */
        resourceId: pulumi.Input<string>;
        /**
         * The resource id that the network acl will associate with. Only support `VSwitch` now.
         */
        resourceType: pulumi.Input<string>;
    }

    export interface NetworkAclEntriesEgress {
        /**
         * The description of the egress entry.
         */
        description?: pulumi.Input<string>;
        /**
         * The destination ip of the egress entry.
         */
        destinationCidrIp?: pulumi.Input<string>;
        /**
         * The entry type of the egress entry. It must be `custom` or `system`. Default value is `custom`.
         */
        entryType?: pulumi.Input<string>;
        /**
         * The name of the egress entry.
         */
        name?: pulumi.Input<string>;
        /**
         * The policy of the egress entry. It must be `accept` or `drop`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port of the egress entry.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of the egress entry.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface NetworkAclEntriesIngress {
        /**
         * The description of the egress entry.
         */
        description?: pulumi.Input<string>;
        /**
         * The entry type of the egress entry. It must be `custom` or `system`. Default value is `custom`.
         */
        entryType?: pulumi.Input<string>;
        /**
         * The name of the egress entry.
         */
        name?: pulumi.Input<string>;
        /**
         * The policy of the egress entry. It must be `accept` or `drop`.
         */
        policy?: pulumi.Input<string>;
        /**
         * The port of the egress entry.
         */
        port?: pulumi.Input<string>;
        /**
         * The protocol of the egress entry.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The source ip of the ingress entry.
         */
        sourceCidrIp?: pulumi.Input<string>;
    }
}

export namespace vpn {
    export interface ConnectionIkeConfig {
        /**
         * The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
         */
        ikeAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
         */
        ikeEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
         */
        ikeLifetime?: pulumi.Input<number>;
        /**
         * The identification of the VPN gateway.
         */
        ikeLocalId?: pulumi.Input<string>;
        /**
         * The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
         */
        ikeMode?: pulumi.Input<string>;
        /**
         * The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
         */
        ikePfs?: pulumi.Input<string>;
        /**
         * The identification of the customer gateway.
         */
        ikeRemoteId?: pulumi.Input<string>;
        /**
         * The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
         */
        ikeVersion?: pulumi.Input<string>;
        /**
         * Used for authentication between the IPsec VPN gateway and the customer gateway.
         */
        psk?: pulumi.Input<string>;
    }

    export interface ConnectionIpsecConfig {
        /**
         * The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
         */
        ipsecAuthAlg?: pulumi.Input<string>;
        /**
         * The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
         */
        ipsecEncAlg?: pulumi.Input<string>;
        /**
         * The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
         */
        ipsecLifetime?: pulumi.Input<number>;
        /**
         * The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
         */
        ipsecPfs?: pulumi.Input<string>;
    }

}

export namespace waf {
    export interface DomainLogHeader {
        key?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

}

export namespace yundun {
}
