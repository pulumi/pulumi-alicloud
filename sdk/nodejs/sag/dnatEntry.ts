// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Sag DnatEntry resource. This topic describes how to add a DNAT entry to a Smart Access Gateway (SAG) instance to enable the DNAT function. By using the DNAT function, you can forward requests received by public IP addresses to Alibaba Cloud instances according to custom mapping rules.
 *
 * For information about Sag DnatEntry and how to use it, see [What is Sag DnatEntry](https://www.alibabacloud.com/help/en/smart-access-gateway/latest/adddnatentry).
 *
 * > **NOTE:** Available since v1.63.0.
 *
 * > **NOTE:** Only the following regions suppor. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const sagId = config.get("sagId") || "sag-9bifkfaz***";
 * const _default = new alicloud.sag.DnatEntry("default", {
 *     sagId: sagId,
 *     type: "Intranet",
 *     ipProtocol: "any",
 *     externalIp: "172.32.0.2",
 *     externalPort: "any",
 *     internalIp: "172.16.0.4",
 *     internalPort: "any",
 * });
 * ```
 *
 * ## Import
 *
 * The Sag DnatEntry can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:sag/dnatEntry:DnatEntry example sag-abc123456:dnat-abc123456
 * ```
 */
export class DnatEntry extends pulumi.CustomResource {
    /**
     * Get an existing DnatEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnatEntryState, opts?: pulumi.CustomResourceOptions): DnatEntry {
        return new DnatEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:sag/dnatEntry:DnatEntry';

    /**
     * Returns true if the given object is an instance of DnatEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnatEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnatEntry.__pulumiType;
    }

    /**
     * The external public IP address.when "type" is "Internet",automatically identify the external ip.
     */
    declare public readonly externalIp: pulumi.Output<string | undefined>;
    /**
     * The public port.Value range: 1 to 65535 or "any".
     */
    declare public readonly externalPort: pulumi.Output<string>;
    /**
     * The destination private IP address.
     */
    declare public readonly internalIp: pulumi.Output<string>;
    /**
     * The destination private port.Value range: 1 to 65535 or "any".
     */
    declare public readonly internalPort: pulumi.Output<string>;
    /**
     * The protocol type. Valid values: TCP: Forwards packets of the TCP protocol. UDP: Forwards packets of the UDP protocol. Any: Forwards packets of all protocols.
     */
    declare public readonly ipProtocol: pulumi.Output<string>;
    /**
     * The ID of the SAG instance.
     */
    declare public readonly sagId: pulumi.Output<string>;
    /**
     * The DNAT type. Valid values: Intranet: DNAT of private IP addresses. Internet: DNAT of public IP addresses
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a DnatEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnatEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnatEntryArgs | DnatEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnatEntryState | undefined;
            resourceInputs["externalIp"] = state?.externalIp;
            resourceInputs["externalPort"] = state?.externalPort;
            resourceInputs["internalIp"] = state?.internalIp;
            resourceInputs["internalPort"] = state?.internalPort;
            resourceInputs["ipProtocol"] = state?.ipProtocol;
            resourceInputs["sagId"] = state?.sagId;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as DnatEntryArgs | undefined;
            if (args?.externalPort === undefined && !opts.urn) {
                throw new Error("Missing required property 'externalPort'");
            }
            if (args?.internalIp === undefined && !opts.urn) {
                throw new Error("Missing required property 'internalIp'");
            }
            if (args?.internalPort === undefined && !opts.urn) {
                throw new Error("Missing required property 'internalPort'");
            }
            if (args?.ipProtocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'ipProtocol'");
            }
            if (args?.sagId === undefined && !opts.urn) {
                throw new Error("Missing required property 'sagId'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["externalIp"] = args?.externalIp;
            resourceInputs["externalPort"] = args?.externalPort;
            resourceInputs["internalIp"] = args?.internalIp;
            resourceInputs["internalPort"] = args?.internalPort;
            resourceInputs["ipProtocol"] = args?.ipProtocol;
            resourceInputs["sagId"] = args?.sagId;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "alicloud:rocketmq/dnatEntry:DnatEntry" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DnatEntry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DnatEntry resources.
 */
export interface DnatEntryState {
    /**
     * The external public IP address.when "type" is "Internet",automatically identify the external ip.
     */
    externalIp?: pulumi.Input<string>;
    /**
     * The public port.Value range: 1 to 65535 or "any".
     */
    externalPort?: pulumi.Input<string>;
    /**
     * The destination private IP address.
     */
    internalIp?: pulumi.Input<string>;
    /**
     * The destination private port.Value range: 1 to 65535 or "any".
     */
    internalPort?: pulumi.Input<string>;
    /**
     * The protocol type. Valid values: TCP: Forwards packets of the TCP protocol. UDP: Forwards packets of the UDP protocol. Any: Forwards packets of all protocols.
     */
    ipProtocol?: pulumi.Input<string>;
    /**
     * The ID of the SAG instance.
     */
    sagId?: pulumi.Input<string>;
    /**
     * The DNAT type. Valid values: Intranet: DNAT of private IP addresses. Internet: DNAT of public IP addresses
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DnatEntry resource.
 */
export interface DnatEntryArgs {
    /**
     * The external public IP address.when "type" is "Internet",automatically identify the external ip.
     */
    externalIp?: pulumi.Input<string>;
    /**
     * The public port.Value range: 1 to 65535 or "any".
     */
    externalPort: pulumi.Input<string>;
    /**
     * The destination private IP address.
     */
    internalIp: pulumi.Input<string>;
    /**
     * The destination private port.Value range: 1 to 65535 or "any".
     */
    internalPort: pulumi.Input<string>;
    /**
     * The protocol type. Valid values: TCP: Forwards packets of the TCP protocol. UDP: Forwards packets of the UDP protocol. Any: Forwards packets of all protocols.
     */
    ipProtocol: pulumi.Input<string>;
    /**
     * The ID of the SAG instance.
     */
    sagId: pulumi.Input<string>;
    /**
     * The DNAT type. Valid values: Intranet: DNAT of private IP addresses. Internet: DNAT of public IP addresses
     */
    type: pulumi.Input<string>;
}
