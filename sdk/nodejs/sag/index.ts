// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AclArgs, AclState } from "./acl";
export type Acl = import("./acl").Acl;
export const Acl: typeof import("./acl").Acl = null as any;
utilities.lazyLoad(exports, ["Acl"], () => require("./acl"));

export { AclRuleArgs, AclRuleState } from "./aclRule";
export type AclRule = import("./aclRule").AclRule;
export const AclRule: typeof import("./aclRule").AclRule = null as any;
utilities.lazyLoad(exports, ["AclRule"], () => require("./aclRule"));

export { ClientUserArgs, ClientUserState } from "./clientUser";
export type ClientUser = import("./clientUser").ClientUser;
export const ClientUser: typeof import("./clientUser").ClientUser = null as any;
utilities.lazyLoad(exports, ["ClientUser"], () => require("./clientUser"));

export { DnatEntryArgs, DnatEntryState } from "./dnatEntry";
export type DnatEntry = import("./dnatEntry").DnatEntry;
export const DnatEntry: typeof import("./dnatEntry").DnatEntry = null as any;
utilities.lazyLoad(exports, ["DnatEntry"], () => require("./dnatEntry"));

export { GetAclsArgs, GetAclsResult, GetAclsOutputArgs } from "./getAcls";
export const getAcls: typeof import("./getAcls").getAcls = null as any;
export const getAclsOutput: typeof import("./getAcls").getAclsOutput = null as any;
utilities.lazyLoad(exports, ["getAcls","getAclsOutput"], () => require("./getAcls"));

export { GetSmartagFlowLogsArgs, GetSmartagFlowLogsResult, GetSmartagFlowLogsOutputArgs } from "./getSmartagFlowLogs";
export const getSmartagFlowLogs: typeof import("./getSmartagFlowLogs").getSmartagFlowLogs = null as any;
export const getSmartagFlowLogsOutput: typeof import("./getSmartagFlowLogs").getSmartagFlowLogsOutput = null as any;
utilities.lazyLoad(exports, ["getSmartagFlowLogs","getSmartagFlowLogsOutput"], () => require("./getSmartagFlowLogs"));

export { QosArgs, QosState } from "./qos";
export type Qos = import("./qos").Qos;
export const Qos: typeof import("./qos").Qos = null as any;
utilities.lazyLoad(exports, ["Qos"], () => require("./qos"));

export { QosCarArgs, QosCarState } from "./qosCar";
export type QosCar = import("./qosCar").QosCar;
export const QosCar: typeof import("./qosCar").QosCar = null as any;
utilities.lazyLoad(exports, ["QosCar"], () => require("./qosCar"));

export { QosPolicyArgs, QosPolicyState } from "./qosPolicy";
export type QosPolicy = import("./qosPolicy").QosPolicy;
export const QosPolicy: typeof import("./qosPolicy").QosPolicy = null as any;
utilities.lazyLoad(exports, ["QosPolicy"], () => require("./qosPolicy"));

export { SmartagFlowLogArgs, SmartagFlowLogState } from "./smartagFlowLog";
export type SmartagFlowLog = import("./smartagFlowLog").SmartagFlowLog;
export const SmartagFlowLog: typeof import("./smartagFlowLog").SmartagFlowLog = null as any;
utilities.lazyLoad(exports, ["SmartagFlowLog"], () => require("./smartagFlowLog"));

export { SnatEntryArgs, SnatEntryState } from "./snatEntry";
export type SnatEntry = import("./snatEntry").SnatEntry;
export const SnatEntry: typeof import("./snatEntry").SnatEntry = null as any;
utilities.lazyLoad(exports, ["SnatEntry"], () => require("./snatEntry"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:sag/acl:Acl":
                return new Acl(name, <any>undefined, { urn })
            case "alicloud:sag/aclRule:AclRule":
                return new AclRule(name, <any>undefined, { urn })
            case "alicloud:sag/clientUser:ClientUser":
                return new ClientUser(name, <any>undefined, { urn })
            case "alicloud:sag/dnatEntry:DnatEntry":
                return new DnatEntry(name, <any>undefined, { urn })
            case "alicloud:sag/qos:Qos":
                return new Qos(name, <any>undefined, { urn })
            case "alicloud:sag/qosCar:QosCar":
                return new QosCar(name, <any>undefined, { urn })
            case "alicloud:sag/qosPolicy:QosPolicy":
                return new QosPolicy(name, <any>undefined, { urn })
            case "alicloud:sag/smartagFlowLog:SmartagFlowLog":
                return new SmartagFlowLog(name, <any>undefined, { urn })
            case "alicloud:sag/snatEntry:SnatEntry":
                return new SnatEntry(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "sag/acl", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/aclRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/clientUser", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/dnatEntry", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/qos", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/qosCar", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/qosPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/smartagFlowLog", _module)
pulumi.runtime.registerResourceModule("alicloud", "sag/snatEntry", _module)
