// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a MHUB App resource.
 *
 * For information about MHUB App and how to use it, see [What is App](https://help.aliyun.com/product/65109.html).
 *
 * > **NOTE:** Available in v1.138.0+.
 *
 * > **NOTE:** At present, the resource only supports cn-shanghai region.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "example_value";
 * const defaultProduct = new alicloud.mhub.Product("defaultProduct", {productName: name});
 * const defaultApp = new alicloud.mhub.App("defaultApp", {
 *     appName: name,
 *     productId: defaultProduct.id,
 *     packageName: "com.test.android",
 *     type: "Android",
 * });
 * ```
 *
 * ## Import
 *
 * MHUB App can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:mhub/app:App example <product_id>:<app_key>
 * ```
 */
export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppState, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:mhub/app:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    /**
     * AppName.
     */
    public readonly appName!: pulumi.Output<string>;
    /**
     * The app id of iOS. **NOTE:** Either `bundleId` or `packageName` must be set.
     */
    public readonly bundleId!: pulumi.Output<string | undefined>;
    /**
     * Base64 string of picture.
     */
    public readonly encodedIcon!: pulumi.Output<string | undefined>;
    /**
     * The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
     */
    public readonly industryId!: pulumi.Output<string>;
    /**
     * Android App package name. **NOTE:** Either `bundleId` or `packageName` must be set.
     */
    public readonly packageName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Product.
     */
    public readonly productId!: pulumi.Output<string>;
    /**
     * The type of the Product. Valid values: `Android` and `iOS`.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppArgs | AppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppState | undefined;
            resourceInputs["appName"] = state ? state.appName : undefined;
            resourceInputs["bundleId"] = state ? state.bundleId : undefined;
            resourceInputs["encodedIcon"] = state ? state.encodedIcon : undefined;
            resourceInputs["industryId"] = state ? state.industryId : undefined;
            resourceInputs["packageName"] = state ? state.packageName : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AppArgs | undefined;
            if ((!args || args.appName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appName'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["appName"] = args ? args.appName : undefined;
            resourceInputs["bundleId"] = args ? args.bundleId : undefined;
            resourceInputs["encodedIcon"] = args ? args.encodedIcon : undefined;
            resourceInputs["industryId"] = args ? args.industryId : undefined;
            resourceInputs["packageName"] = args ? args.packageName : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(App.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering App resources.
 */
export interface AppState {
    /**
     * AppName.
     */
    appName?: pulumi.Input<string>;
    /**
     * The app id of iOS. **NOTE:** Either `bundleId` or `packageName` must be set.
     */
    bundleId?: pulumi.Input<string>;
    /**
     * Base64 string of picture.
     */
    encodedIcon?: pulumi.Input<string>;
    /**
     * The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
     */
    industryId?: pulumi.Input<string>;
    /**
     * Android App package name. **NOTE:** Either `bundleId` or `packageName` must be set.
     */
    packageName?: pulumi.Input<string>;
    /**
     * The ID of the Product.
     */
    productId?: pulumi.Input<string>;
    /**
     * The type of the Product. Valid values: `Android` and `iOS`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    /**
     * AppName.
     */
    appName: pulumi.Input<string>;
    /**
     * The app id of iOS. **NOTE:** Either `bundleId` or `packageName` must be set.
     */
    bundleId?: pulumi.Input<string>;
    /**
     * Base64 string of picture.
     */
    encodedIcon?: pulumi.Input<string>;
    /**
     * The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
     */
    industryId?: pulumi.Input<string>;
    /**
     * Android App package name. **NOTE:** Either `bundleId` or `packageName` must be set.
     */
    packageName?: pulumi.Input<string>;
    /**
     * The ID of the Product.
     */
    productId: pulumi.Input<string>;
    /**
     * The type of the Product. Valid values: `Android` and `iOS`.
     */
    type: pulumi.Input<string>;
}
