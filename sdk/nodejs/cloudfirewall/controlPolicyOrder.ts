// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Firewall Control Policy resource.
 *
 * For information about Cloud Firewall Control Policy Order and how to use it, see [What is Control Policy Order](https://www.alibabacloud.com/help/doc-detail/138867.htm).
 *
 * > **NOTE:** Available in v1.130.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example1 = new alicloud.cloudfirewall.ControlPolicy("example1", {
 *     applicationName: "ANY",
 *     aclAction: "accept",
 *     description: "example",
 *     destinationType: "net",
 *     destination: "100.1.1.0/24",
 *     direction: "out",
 *     proto: "ANY",
 *     source: "1.2.3.0/24",
 *     sourceType: "net",
 * });
 * const example2 = new alicloud.cloudfirewall.ControlPolicyOrder("example2", {
 *     aclUuid: example1.aclUuid,
 *     direction: example1.direction,
 *     order: 1,
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Firewall Control Policy Order can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cloudfirewall/controlPolicyOrder:ControlPolicyOrder example <acl_uuid>:<direction>
 * ```
 */
export class ControlPolicyOrder extends pulumi.CustomResource {
    /**
     * Get an existing ControlPolicyOrder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ControlPolicyOrderState, opts?: pulumi.CustomResourceOptions): ControlPolicyOrder {
        return new ControlPolicyOrder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cloudfirewall/controlPolicyOrder:ControlPolicyOrder';

    /**
     * Returns true if the given object is an instance of ControlPolicyOrder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ControlPolicyOrder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ControlPolicyOrder.__pulumiType;
    }

    /**
     * The unique ID of the access control policy.
     */
    public readonly aclUuid!: pulumi.Output<string>;
    /**
     * Direction. Valid values: `in`, `out`.
     */
    public readonly direction!: pulumi.Output<string>;
    /**
     * The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of -1 indicates the lowest priority.
     */
    public readonly order!: pulumi.Output<number | undefined>;

    /**
     * Create a ControlPolicyOrder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ControlPolicyOrderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ControlPolicyOrderArgs | ControlPolicyOrderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ControlPolicyOrderState | undefined;
            resourceInputs["aclUuid"] = state ? state.aclUuid : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
        } else {
            const args = argsOrState as ControlPolicyOrderArgs | undefined;
            if ((!args || args.aclUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aclUuid'");
            }
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            resourceInputs["aclUuid"] = args ? args.aclUuid : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ControlPolicyOrder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ControlPolicyOrder resources.
 */
export interface ControlPolicyOrderState {
    /**
     * The unique ID of the access control policy.
     */
    aclUuid?: pulumi.Input<string>;
    /**
     * Direction. Valid values: `in`, `out`.
     */
    direction?: pulumi.Input<string>;
    /**
     * The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of -1 indicates the lowest priority.
     */
    order?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ControlPolicyOrder resource.
 */
export interface ControlPolicyOrderArgs {
    /**
     * The unique ID of the access control policy.
     */
    aclUuid: pulumi.Input<string>;
    /**
     * Direction. Valid values: `in`, `out`.
     */
    direction: pulumi.Input<string>;
    /**
     * The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of -1 indicates the lowest priority.
     */
    order?: pulumi.Input<number>;
}
