// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Firewall Nat Firewall Control Policy resource. Nat firewall access control policy.
 *
 * For information about Cloud Firewall Nat Firewall Control Policy and how to use it, see [What is Nat Firewall Control Policy](https://www.alibabacloud.com/help/en/cloud-firewall/developer-reference/api-cloudfw-2017-12-07-createnatfirewallcontrolpolicy).
 *
 * > **NOTE:** Available since v1.224.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const direction = config.get("direction") || "out";
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const defaultDEiWfM = new alicloud.vpc.Network("defaultDEiWfM", {
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const defaultFHDM3F = new alicloud.vpc.Switch("defaultFHDM3F", {
 *     vpcId: defaultDEiWfM.id,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     cidrBlock: "172.16.2.0/24",
 * });
 * const defaultMbS2Ts = new alicloud.vpc.NatGateway("defaultMbS2Ts", {
 *     vpcId: defaultDEiWfM.id,
 *     natGatewayName: name,
 *     paymentType: "PayAsYouGo",
 *     vswitchId: defaultFHDM3F.id,
 *     natType: "Enhanced",
 * });
 * const port = new alicloud.cloudfirewall.AddressBook("port", {
 *     description: std.format({
 *         input: "%s%s",
 *         args: [
 *             name,
 *             "port",
 *         ],
 *     }).then(invoke => invoke.result),
 *     groupName: std.format({
 *         input: "%s%s",
 *         args: [
 *             name,
 *             "port",
 *         ],
 *     }).then(invoke => invoke.result),
 *     groupType: "port",
 *     addressLists: [
 *         "22/22",
 *         "23/23",
 *         "24/24",
 *     ],
 * });
 * const port_update = new alicloud.cloudfirewall.AddressBook("port-update", {
 *     description: std.format({
 *         input: "%s%s",
 *         args: [
 *             name,
 *             "port-update",
 *         ],
 *     }).then(invoke => invoke.result),
 *     groupName: std.format({
 *         input: "%s%s",
 *         args: [
 *             name,
 *             "port-update",
 *         ],
 *     }).then(invoke => invoke.result),
 *     groupType: "port",
 *     addressLists: [
 *         "22/22",
 *         "23/23",
 *         "24/24",
 *     ],
 * });
 * const domain = new alicloud.cloudfirewall.AddressBook("domain", {
 *     description: std.format({
 *         input: "%s%s",
 *         args: [
 *             name,
 *             "domain",
 *         ],
 *     }).then(invoke => invoke.result),
 *     groupName: std.format({
 *         input: "%s%s",
 *         args: [
 *             name,
 *             "domain",
 *         ],
 *     }).then(invoke => invoke.result),
 *     groupType: "domain",
 *     addressLists: [
 *         "alibaba.com",
 *         "aliyun.com",
 *         "alicloud.com",
 *     ],
 * });
 * const ip = new alicloud.cloudfirewall.AddressBook("ip", {
 *     description: name,
 *     groupName: name,
 *     groupType: "ip",
 *     addressLists: [
 *         "1.1.1.1/32",
 *         "2.2.2.2/32",
 *     ],
 * });
 * const defaultNatFirewallControlPolicy = new alicloud.cloudfirewall.NatFirewallControlPolicy("default", {
 *     applicationNameLists: ["ANY"],
 *     description: name,
 *     release: "false",
 *     ipVersion: "4",
 *     repeatDays: [
 *         1,
 *         2,
 *         3,
 *     ],
 *     repeatStartTime: "21:00",
 *     aclAction: "log",
 *     destPortGroup: port.groupName,
 *     repeatType: "Weekly",
 *     natGatewayId: defaultMbS2Ts.id,
 *     source: "1.1.1.1/32",
 *     direction: "out",
 *     repeatEndTime: "21:30",
 *     startTime: 1699156800,
 *     destination: "1.1.1.1/32",
 *     endTime: 1888545600,
 *     sourceType: "net",
 *     proto: "TCP",
 *     newOrder: "1",
 *     destinationType: "net",
 *     destPortType: "group",
 *     domainResolveType: 0,
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Firewall Nat Firewall Control Policy can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy example <acl_uuid>:<nat_gateway_id>:<direction>
 * ```
 */
export class NatFirewallControlPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NatFirewallControlPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatFirewallControlPolicyState, opts?: pulumi.CustomResourceOptions): NatFirewallControlPolicy {
        return new NatFirewallControlPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy';

    /**
     * Returns true if the given object is an instance of NatFirewallControlPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatFirewallControlPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatFirewallControlPolicy.__pulumiType;
    }

    /**
     * The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
     * - **accept**: Release
     * - **drop**: Refused
     * - **log**: Observation.
     */
    declare public readonly aclAction: pulumi.Output<string>;
    /**
     * The unique ID of the security access control policy.
     * > **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
     */
    declare public /*out*/ readonly aclUuid: pulumi.Output<string>;
    /**
     * The list of application types supported by the access control policy.
     */
    declare public readonly applicationNameLists: pulumi.Output<string[]>;
    /**
     * The time when the policy was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<number>;
    /**
     * The description of the access control policy.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The destination port of traffic access in the access control policy. Value:
     * - When the protocol type is set to ICMP, the value of DestPort is null.
     * > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
     * - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
     * > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
     * - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
     */
    declare public readonly destPort: pulumi.Output<string>;
    /**
     * The address book name of the destination port of the access traffic in the access control policy.
     * > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
     */
    declare public readonly destPortGroup: pulumi.Output<string | undefined>;
    /**
     * The destination port type of the access traffic in the security access control policy.
     * - **port**: port
     * - **group**: Port Address Book.
     */
    declare public readonly destPortType: pulumi.Output<string>;
    /**
     * The destination address segment in the access control policy. Valid values:
     * - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
     * - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
     * - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
     * - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
     */
    declare public readonly destination: pulumi.Output<string>;
    /**
     * The destination address type in the access control policy. Valid values:
     * - **net**: Destination Network segment (CIDR address)
     * - **group**: Destination Address Book
     * - **domain**: the destination domain name.
     */
    declare public readonly destinationType: pulumi.Output<string>;
    /**
     * The traffic direction of the access control policy. Valid values:
     * - **out**: Internal and external traffic access control.
     */
    declare public readonly direction: pulumi.Output<string>;
    /**
     * The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
     * - **0**: Based on FQDN
     * - **1**: DNS-based dynamic resolution
     * - **2**: dynamic resolution based on FQDN and DNS.
     */
    declare public readonly domainResolveType: pulumi.Output<number | undefined>;
    /**
     * The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
     * > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
     */
    declare public readonly endTime: pulumi.Output<number | undefined>;
    /**
     * Supported IP address version. Value:
     * - **4** (default): indicates the IPv4 address.
     */
    declare public readonly ipVersion: pulumi.Output<string | undefined>;
    /**
     * The ID of the NAT gateway instance.
     */
    declare public readonly natGatewayId: pulumi.Output<string>;
    /**
     * The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
     */
    declare public readonly newOrder: pulumi.Output<string>;
    /**
     * The security protocol type for traffic access in the access control policy. Valid values:
     * - ANY (indicates that all protocol types are queried)
     * - TCP
     * - UDP
     * - ICMP.
     */
    declare public readonly proto: pulumi.Output<string>;
    /**
     * The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
     * - **true**: Enable access control policy
     * - **false**: Do not enable access control policies.
     */
    declare public readonly release: pulumi.Output<string>;
    /**
     * Collection of recurring dates for the policy validity period of the access control policy.
     * - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
     * - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
     * - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
     */
    declare public readonly repeatDays: pulumi.Output<number[] | undefined>;
    /**
     * The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
     * > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
     */
    declare public readonly repeatEndTime: pulumi.Output<string | undefined>;
    /**
     * The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
     * > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
     */
    declare public readonly repeatStartTime: pulumi.Output<string | undefined>;
    /**
     * The type of repetition for the policy validity period of the access control policy. Value:
     * - **Permit** (default): Always
     * - **None**: Specify a single time
     * - **Daily**: Daily
     * - **Weekly**: Weekly
     * - **Monthly**: Monthly.
     */
    declare public readonly repeatType: pulumi.Output<string>;
    /**
     * The source address in the access control policy. Valid values:
     * - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
     * - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
     */
    declare public readonly source: pulumi.Output<string>;
    /**
     * The source address type in the access control policy. Valid values:
     * - **net**: the source network segment (CIDR address)
     * - **group**: source address book
     */
    declare public readonly sourceType: pulumi.Output<string>;
    /**
     * The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
     * > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
     */
    declare public readonly startTime: pulumi.Output<number | undefined>;

    /**
     * Create a NatFirewallControlPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatFirewallControlPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatFirewallControlPolicyArgs | NatFirewallControlPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatFirewallControlPolicyState | undefined;
            resourceInputs["aclAction"] = state?.aclAction;
            resourceInputs["aclUuid"] = state?.aclUuid;
            resourceInputs["applicationNameLists"] = state?.applicationNameLists;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["destPort"] = state?.destPort;
            resourceInputs["destPortGroup"] = state?.destPortGroup;
            resourceInputs["destPortType"] = state?.destPortType;
            resourceInputs["destination"] = state?.destination;
            resourceInputs["destinationType"] = state?.destinationType;
            resourceInputs["direction"] = state?.direction;
            resourceInputs["domainResolveType"] = state?.domainResolveType;
            resourceInputs["endTime"] = state?.endTime;
            resourceInputs["ipVersion"] = state?.ipVersion;
            resourceInputs["natGatewayId"] = state?.natGatewayId;
            resourceInputs["newOrder"] = state?.newOrder;
            resourceInputs["proto"] = state?.proto;
            resourceInputs["release"] = state?.release;
            resourceInputs["repeatDays"] = state?.repeatDays;
            resourceInputs["repeatEndTime"] = state?.repeatEndTime;
            resourceInputs["repeatStartTime"] = state?.repeatStartTime;
            resourceInputs["repeatType"] = state?.repeatType;
            resourceInputs["source"] = state?.source;
            resourceInputs["sourceType"] = state?.sourceType;
            resourceInputs["startTime"] = state?.startTime;
        } else {
            const args = argsOrState as NatFirewallControlPolicyArgs | undefined;
            if (args?.aclAction === undefined && !opts.urn) {
                throw new Error("Missing required property 'aclAction'");
            }
            if (args?.applicationNameLists === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationNameLists'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.destination === undefined && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if (args?.destinationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationType'");
            }
            if (args?.direction === undefined && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if (args?.natGatewayId === undefined && !opts.urn) {
                throw new Error("Missing required property 'natGatewayId'");
            }
            if (args?.newOrder === undefined && !opts.urn) {
                throw new Error("Missing required property 'newOrder'");
            }
            if (args?.proto === undefined && !opts.urn) {
                throw new Error("Missing required property 'proto'");
            }
            if (args?.source === undefined && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if (args?.sourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceType'");
            }
            resourceInputs["aclAction"] = args?.aclAction;
            resourceInputs["applicationNameLists"] = args?.applicationNameLists;
            resourceInputs["description"] = args?.description;
            resourceInputs["destPort"] = args?.destPort;
            resourceInputs["destPortGroup"] = args?.destPortGroup;
            resourceInputs["destPortType"] = args?.destPortType;
            resourceInputs["destination"] = args?.destination;
            resourceInputs["destinationType"] = args?.destinationType;
            resourceInputs["direction"] = args?.direction;
            resourceInputs["domainResolveType"] = args?.domainResolveType;
            resourceInputs["endTime"] = args?.endTime;
            resourceInputs["ipVersion"] = args?.ipVersion;
            resourceInputs["natGatewayId"] = args?.natGatewayId;
            resourceInputs["newOrder"] = args?.newOrder;
            resourceInputs["proto"] = args?.proto;
            resourceInputs["release"] = args?.release;
            resourceInputs["repeatDays"] = args?.repeatDays;
            resourceInputs["repeatEndTime"] = args?.repeatEndTime;
            resourceInputs["repeatStartTime"] = args?.repeatStartTime;
            resourceInputs["repeatType"] = args?.repeatType;
            resourceInputs["source"] = args?.source;
            resourceInputs["sourceType"] = args?.sourceType;
            resourceInputs["startTime"] = args?.startTime;
            resourceInputs["aclUuid"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatFirewallControlPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatFirewallControlPolicy resources.
 */
export interface NatFirewallControlPolicyState {
    /**
     * The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
     * - **accept**: Release
     * - **drop**: Refused
     * - **log**: Observation.
     */
    aclAction?: pulumi.Input<string>;
    /**
     * The unique ID of the security access control policy.
     * > **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
     */
    aclUuid?: pulumi.Input<string>;
    /**
     * The list of application types supported by the access control policy.
     */
    applicationNameLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time when the policy was created.
     */
    createTime?: pulumi.Input<number>;
    /**
     * The description of the access control policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination port of traffic access in the access control policy. Value:
     * - When the protocol type is set to ICMP, the value of DestPort is null.
     * > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
     * - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
     * > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
     * - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
     */
    destPort?: pulumi.Input<string>;
    /**
     * The address book name of the destination port of the access traffic in the access control policy.
     * > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
     */
    destPortGroup?: pulumi.Input<string>;
    /**
     * The destination port type of the access traffic in the security access control policy.
     * - **port**: port
     * - **group**: Port Address Book.
     */
    destPortType?: pulumi.Input<string>;
    /**
     * The destination address segment in the access control policy. Valid values:
     * - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
     * - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
     * - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
     * - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
     */
    destination?: pulumi.Input<string>;
    /**
     * The destination address type in the access control policy. Valid values:
     * - **net**: Destination Network segment (CIDR address)
     * - **group**: Destination Address Book
     * - **domain**: the destination domain name.
     */
    destinationType?: pulumi.Input<string>;
    /**
     * The traffic direction of the access control policy. Valid values:
     * - **out**: Internal and external traffic access control.
     */
    direction?: pulumi.Input<string>;
    /**
     * The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
     * - **0**: Based on FQDN
     * - **1**: DNS-based dynamic resolution
     * - **2**: dynamic resolution based on FQDN and DNS.
     */
    domainResolveType?: pulumi.Input<number>;
    /**
     * The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
     * > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
     */
    endTime?: pulumi.Input<number>;
    /**
     * Supported IP address version. Value:
     * - **4** (default): indicates the IPv4 address.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The ID of the NAT gateway instance.
     */
    natGatewayId?: pulumi.Input<string>;
    /**
     * The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
     */
    newOrder?: pulumi.Input<string>;
    /**
     * The security protocol type for traffic access in the access control policy. Valid values:
     * - ANY (indicates that all protocol types are queried)
     * - TCP
     * - UDP
     * - ICMP.
     */
    proto?: pulumi.Input<string>;
    /**
     * The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
     * - **true**: Enable access control policy
     * - **false**: Do not enable access control policies.
     */
    release?: pulumi.Input<string>;
    /**
     * Collection of recurring dates for the policy validity period of the access control policy.
     * - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
     * - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
     * - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
     */
    repeatDays?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
     * > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
     */
    repeatEndTime?: pulumi.Input<string>;
    /**
     * The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
     * > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
     */
    repeatStartTime?: pulumi.Input<string>;
    /**
     * The type of repetition for the policy validity period of the access control policy. Value:
     * - **Permit** (default): Always
     * - **None**: Specify a single time
     * - **Daily**: Daily
     * - **Weekly**: Weekly
     * - **Monthly**: Monthly.
     */
    repeatType?: pulumi.Input<string>;
    /**
     * The source address in the access control policy. Valid values:
     * - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
     * - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
     */
    source?: pulumi.Input<string>;
    /**
     * The source address type in the access control policy. Valid values:
     * - **net**: the source network segment (CIDR address)
     * - **group**: source address book
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
     * > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
     */
    startTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NatFirewallControlPolicy resource.
 */
export interface NatFirewallControlPolicyArgs {
    /**
     * The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
     * - **accept**: Release
     * - **drop**: Refused
     * - **log**: Observation.
     */
    aclAction: pulumi.Input<string>;
    /**
     * The list of application types supported by the access control policy.
     */
    applicationNameLists: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the access control policy.
     */
    description: pulumi.Input<string>;
    /**
     * The destination port of traffic access in the access control policy. Value:
     * - When the protocol type is set to ICMP, the value of DestPort is null.
     * > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
     * - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
     * > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
     * - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
     */
    destPort?: pulumi.Input<string>;
    /**
     * The address book name of the destination port of the access traffic in the access control policy.
     * > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
     */
    destPortGroup?: pulumi.Input<string>;
    /**
     * The destination port type of the access traffic in the security access control policy.
     * - **port**: port
     * - **group**: Port Address Book.
     */
    destPortType?: pulumi.Input<string>;
    /**
     * The destination address segment in the access control policy. Valid values:
     * - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
     * - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
     * - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
     * - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
     */
    destination: pulumi.Input<string>;
    /**
     * The destination address type in the access control policy. Valid values:
     * - **net**: Destination Network segment (CIDR address)
     * - **group**: Destination Address Book
     * - **domain**: the destination domain name.
     */
    destinationType: pulumi.Input<string>;
    /**
     * The traffic direction of the access control policy. Valid values:
     * - **out**: Internal and external traffic access control.
     */
    direction: pulumi.Input<string>;
    /**
     * The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
     * - **0**: Based on FQDN
     * - **1**: DNS-based dynamic resolution
     * - **2**: dynamic resolution based on FQDN and DNS.
     */
    domainResolveType?: pulumi.Input<number>;
    /**
     * The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
     * > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
     */
    endTime?: pulumi.Input<number>;
    /**
     * Supported IP address version. Value:
     * - **4** (default): indicates the IPv4 address.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The ID of the NAT gateway instance.
     */
    natGatewayId: pulumi.Input<string>;
    /**
     * The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
     */
    newOrder: pulumi.Input<string>;
    /**
     * The security protocol type for traffic access in the access control policy. Valid values:
     * - ANY (indicates that all protocol types are queried)
     * - TCP
     * - UDP
     * - ICMP.
     */
    proto: pulumi.Input<string>;
    /**
     * The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
     * - **true**: Enable access control policy
     * - **false**: Do not enable access control policies.
     */
    release?: pulumi.Input<string>;
    /**
     * Collection of recurring dates for the policy validity period of the access control policy.
     * - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
     * - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
     * - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
     */
    repeatDays?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
     * > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
     */
    repeatEndTime?: pulumi.Input<string>;
    /**
     * The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
     * > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
     */
    repeatStartTime?: pulumi.Input<string>;
    /**
     * The type of repetition for the policy validity period of the access control policy. Value:
     * - **Permit** (default): Always
     * - **None**: Specify a single time
     * - **Daily**: Daily
     * - **Weekly**: Weekly
     * - **Monthly**: Monthly.
     */
    repeatType?: pulumi.Input<string>;
    /**
     * The source address in the access control policy. Valid values:
     * - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
     * - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
     */
    source: pulumi.Input<string>;
    /**
     * The source address type in the access control policy. Valid values:
     * - **net**: the source network segment (CIDR address)
     * - **group**: source address book
     */
    sourceType: pulumi.Input<string>;
    /**
     * The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
     * > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
     */
    startTime?: pulumi.Input<number>;
}
