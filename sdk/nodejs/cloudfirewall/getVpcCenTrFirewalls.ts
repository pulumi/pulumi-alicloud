// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Cloud Firewall Vpc Cen Tr Firewall available to the user.[What is Vpc Cen Tr Firewall](https://next.api.alibabacloud.com/document/Cloudfw/2017-12-07/CreateTrFirewallV2)
 *
 * > **NOTE:** Available since v1.243.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const description = config.get("description") || "Created by Terraform";
 * const firewallName = config.get("firewallName") || "tf-example";
 * const trAttachmentMasterCidr = config.get("trAttachmentMasterCidr") || "192.168.3.192/26";
 * const firewallSubnetCidr = config.get("firewallSubnetCidr") || "192.168.3.0/25";
 * const region = config.get("region") || "cn-hangzhou";
 * const trAttachmentSlaveCidr = config.get("trAttachmentSlaveCidr") || "192.168.3.128/26";
 * const firewallVpcCidr = config.get("firewallVpcCidr") || "192.168.3.0/24";
 * const zone1 = config.get("zone1") || "cn-hangzhou-h";
 * const firewallNameUpdate = config.get("firewallNameUpdate") || "tf-example-1";
 * const zone2 = config.get("zone2") || "cn-hangzhou-i";
 * const cen = new alicloud.cen.Instance("cen", {
 *     description: "terraform example",
 *     cenInstanceName: "Cen_Terraform_example01",
 * });
 * const tr = new alicloud.cen.TransitRouter("tr", {
 *     supportMulticast: false,
 *     transitRouterName: "CEN_TR_Terraform",
 *     transitRouterDescription: "tr-created-by-terraform",
 *     cenId: cen.id,
 * });
 * const vpc1 = new alicloud.vpc.Network("vpc1", {
 *     description: "created by terraform",
 *     cidrBlock: "192.168.1.0/24",
 *     vpcName: "vpc1-Terraform",
 * });
 * const vpc1vsw1 = new alicloud.vpc.Switch("vpc1vsw1", {
 *     cidrBlock: "192.168.1.0/25",
 *     vswitchName: "vpc1-vsw1",
 *     vpcId: vpc1.id,
 *     zoneId: zone1,
 * });
 * const vpc1vsw2 = new alicloud.vpc.Switch("vpc1vsw2", {
 *     vpcId: vpc1.id,
 *     cidrBlock: "192.168.1.128/26",
 *     vswitchName: "vpc1-vsw2",
 *     zoneId: zone2,
 * });
 * const vpc2 = new alicloud.vpc.Network("vpc2", {
 *     description: "created by terraform",
 *     cidrBlock: "192.168.2.0/24",
 *     vpcName: "vpc2-Terraform",
 * });
 * const vpc2vsw1 = new alicloud.vpc.Switch("vpc2vsw1", {
 *     cidrBlock: "192.168.2.0/25",
 *     vswitchName: "vpc2-vsw1",
 *     vpcId: vpc2.id,
 *     zoneId: zone1,
 * });
 * const vpc2vsw2 = new alicloud.vpc.Switch("vpc2vsw2", {
 *     cidrBlock: "192.168.2.128/26",
 *     vswitchName: "vpc2-vsw2",
 *     vpcId: vpc2.id,
 *     zoneId: zone2,
 * });
 * const tr_vpc1 = new alicloud.cen.TransitRouterVpcAttachment("tr-vpc1", {
 *     autoPublishRouteEnabled: false,
 *     zoneMappings: [
 *         {
 *             vswitchId: vpc1vsw1.id,
 *             zoneId: vpc1vsw1.zoneId,
 *         },
 *         {
 *             zoneId: vpc1vsw2.zoneId,
 *             vswitchId: vpc1vsw2.id,
 *         },
 *     ],
 *     vpcId: vpc1.id,
 *     cenId: cen.id,
 * });
 * const tr_vpc2 = new alicloud.cen.TransitRouterVpcAttachment("tr-vpc2", {
 *     autoPublishRouteEnabled: false,
 *     vpcId: vpc2.id,
 *     zoneMappings: [
 *         {
 *             vswitchId: vpc2vsw1.id,
 *             zoneId: vpc2vsw1.zoneId,
 *         },
 *         {
 *             vswitchId: vpc2vsw2.id,
 *             zoneId: vpc2vsw2.zoneId,
 *         },
 *     ],
 *     cenId: cen.id,
 * });
 * const defaultVpcCenTrFirewall = new alicloud.cloudfirewall.VpcCenTrFirewall("default", {
 *     firewallDescription: "VpcCenTrFirewall created by terraform",
 *     regionNo: region,
 *     routeMode: "managed",
 *     cenId: cen.id,
 *     firewallVpcCidr: firewallVpcCidr,
 *     transitRouterId: tr.transitRouterId,
 *     trAttachmentMasterCidr: trAttachmentMasterCidr,
 *     firewallName: firewallName,
 *     firewallSubnetCidr: firewallSubnetCidr,
 *     trAttachmentSlaveCidr: trAttachmentSlaveCidr,
 * });
 * const _default = alicloud.cloudfirewall.getVpcCenTrFirewallsOutput({
 *     ids: [defaultVpcCenTrFirewall.id],
 *     cenId: cen.id,
 *     firewallName: firewallName,
 *     regionNo: region,
 *     routeMode: "managed",
 *     transitRouterId: tr.transitRouterId,
 * });
 * export const alicloudCloudFirewallVpcCenTrFirewallExampleId = _default.apply(_default => _default.firewalls?.[0]?.id);
 * ```
 */
export function getVpcCenTrFirewalls(args?: GetVpcCenTrFirewallsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcCenTrFirewallsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:cloudfirewall/getVpcCenTrFirewalls:getVpcCenTrFirewalls", {
        "cenId": args.cenId,
        "currentPage": args.currentPage,
        "firewallId": args.firewallId,
        "firewallName": args.firewallName,
        "firewallSwitchStatus": args.firewallSwitchStatus,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "regionNo": args.regionNo,
        "routeMode": args.routeMode,
        "transitRouterId": args.transitRouterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcCenTrFirewalls.
 */
export interface GetVpcCenTrFirewallsArgs {
    /**
     * The ID of the CEN instance.
     */
    cenId?: string;
    /**
     * The page number of the pagination query. The default value is 1.
     */
    currentPage?: number;
    /**
     * Firewall ID
     */
    firewallId?: string;
    /**
     * The name of Cloud Firewall.
     */
    firewallName?: string;
    /**
     * The status of the VPC boundary firewall. Value:-**opened**: opened-**closed**: closed-**notconfigured**: indicates that the VPC boundary firewall has not been configured yet.-**configured**: indicates that the VPC boundary firewall has been configured.-**creating**: indicates that a VPC boundary firewall is being created.-**opening**: indicates that the VPC border firewall is being enabled.-**deleting**: indicates that the VPC boundary firewall is being deleted.> If this parameter is not set, the VPC boundary firewall in all states is queried.
     */
    firewallSwitchStatus?: string;
    /**
     * A list of Vpc Cen Tr Firewall IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Current page number.
     */
    pageNumber?: number;
    /**
     * The maximum number of pieces of data per page that are displayed during a paged query. The default value is 10.
     */
    pageSize?: number;
    /**
     * The region ID of the transit router instance.
     */
    regionNo?: string;
    /**
     * The routing pattern. Value: managed: indicates automatic mode
     */
    routeMode?: string;
    /**
     * The ID of the transit router instance.
     */
    transitRouterId?: string;
}

/**
 * A collection of values returned by getVpcCenTrFirewalls.
 */
export interface GetVpcCenTrFirewallsResult {
    /**
     * The ID of the CEN instance.
     */
    readonly cenId?: string;
    readonly currentPage?: number;
    /**
     * Firewall ID
     */
    readonly firewallId?: string;
    /**
     * The name of Cloud Firewall.
     */
    readonly firewallName?: string;
    /**
     * The status of the VPC boundary firewall. Value:-**opened**: opened-**closed**: closed-**notconfigured**: indicates that the VPC boundary firewall has not been configured yet.-**configured**: indicates that the VPC boundary firewall has been configured.-**creating**: indicates that a VPC boundary firewall is being created.-**opening**: indicates that the VPC border firewall is being enabled.-**deleting**: indicates that the VPC boundary firewall is being deleted.> If this parameter is not set, the VPC boundary firewall in all states is queried.
     */
    readonly firewallSwitchStatus?: string;
    /**
     * A list of Vpc Cen Tr Firewall Entries. Each element contains the following attributes:
     */
    readonly firewalls: outputs.cloudfirewall.GetVpcCenTrFirewallsFirewall[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Vpc Cen Tr Firewall IDs.
     */
    readonly ids: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    /**
     * The region ID of the transit router instance.
     */
    readonly regionNo?: string;
    /**
     * The routing pattern. Value: managed: indicates automatic mode
     */
    readonly routeMode?: string;
    /**
     * The ID of the transit router instance.
     */
    readonly transitRouterId?: string;
}
/**
 * This data source provides Cloud Firewall Vpc Cen Tr Firewall available to the user.[What is Vpc Cen Tr Firewall](https://next.api.alibabacloud.com/document/Cloudfw/2017-12-07/CreateTrFirewallV2)
 *
 * > **NOTE:** Available since v1.243.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const description = config.get("description") || "Created by Terraform";
 * const firewallName = config.get("firewallName") || "tf-example";
 * const trAttachmentMasterCidr = config.get("trAttachmentMasterCidr") || "192.168.3.192/26";
 * const firewallSubnetCidr = config.get("firewallSubnetCidr") || "192.168.3.0/25";
 * const region = config.get("region") || "cn-hangzhou";
 * const trAttachmentSlaveCidr = config.get("trAttachmentSlaveCidr") || "192.168.3.128/26";
 * const firewallVpcCidr = config.get("firewallVpcCidr") || "192.168.3.0/24";
 * const zone1 = config.get("zone1") || "cn-hangzhou-h";
 * const firewallNameUpdate = config.get("firewallNameUpdate") || "tf-example-1";
 * const zone2 = config.get("zone2") || "cn-hangzhou-i";
 * const cen = new alicloud.cen.Instance("cen", {
 *     description: "terraform example",
 *     cenInstanceName: "Cen_Terraform_example01",
 * });
 * const tr = new alicloud.cen.TransitRouter("tr", {
 *     supportMulticast: false,
 *     transitRouterName: "CEN_TR_Terraform",
 *     transitRouterDescription: "tr-created-by-terraform",
 *     cenId: cen.id,
 * });
 * const vpc1 = new alicloud.vpc.Network("vpc1", {
 *     description: "created by terraform",
 *     cidrBlock: "192.168.1.0/24",
 *     vpcName: "vpc1-Terraform",
 * });
 * const vpc1vsw1 = new alicloud.vpc.Switch("vpc1vsw1", {
 *     cidrBlock: "192.168.1.0/25",
 *     vswitchName: "vpc1-vsw1",
 *     vpcId: vpc1.id,
 *     zoneId: zone1,
 * });
 * const vpc1vsw2 = new alicloud.vpc.Switch("vpc1vsw2", {
 *     vpcId: vpc1.id,
 *     cidrBlock: "192.168.1.128/26",
 *     vswitchName: "vpc1-vsw2",
 *     zoneId: zone2,
 * });
 * const vpc2 = new alicloud.vpc.Network("vpc2", {
 *     description: "created by terraform",
 *     cidrBlock: "192.168.2.0/24",
 *     vpcName: "vpc2-Terraform",
 * });
 * const vpc2vsw1 = new alicloud.vpc.Switch("vpc2vsw1", {
 *     cidrBlock: "192.168.2.0/25",
 *     vswitchName: "vpc2-vsw1",
 *     vpcId: vpc2.id,
 *     zoneId: zone1,
 * });
 * const vpc2vsw2 = new alicloud.vpc.Switch("vpc2vsw2", {
 *     cidrBlock: "192.168.2.128/26",
 *     vswitchName: "vpc2-vsw2",
 *     vpcId: vpc2.id,
 *     zoneId: zone2,
 * });
 * const tr_vpc1 = new alicloud.cen.TransitRouterVpcAttachment("tr-vpc1", {
 *     autoPublishRouteEnabled: false,
 *     zoneMappings: [
 *         {
 *             vswitchId: vpc1vsw1.id,
 *             zoneId: vpc1vsw1.zoneId,
 *         },
 *         {
 *             zoneId: vpc1vsw2.zoneId,
 *             vswitchId: vpc1vsw2.id,
 *         },
 *     ],
 *     vpcId: vpc1.id,
 *     cenId: cen.id,
 * });
 * const tr_vpc2 = new alicloud.cen.TransitRouterVpcAttachment("tr-vpc2", {
 *     autoPublishRouteEnabled: false,
 *     vpcId: vpc2.id,
 *     zoneMappings: [
 *         {
 *             vswitchId: vpc2vsw1.id,
 *             zoneId: vpc2vsw1.zoneId,
 *         },
 *         {
 *             vswitchId: vpc2vsw2.id,
 *             zoneId: vpc2vsw2.zoneId,
 *         },
 *     ],
 *     cenId: cen.id,
 * });
 * const defaultVpcCenTrFirewall = new alicloud.cloudfirewall.VpcCenTrFirewall("default", {
 *     firewallDescription: "VpcCenTrFirewall created by terraform",
 *     regionNo: region,
 *     routeMode: "managed",
 *     cenId: cen.id,
 *     firewallVpcCidr: firewallVpcCidr,
 *     transitRouterId: tr.transitRouterId,
 *     trAttachmentMasterCidr: trAttachmentMasterCidr,
 *     firewallName: firewallName,
 *     firewallSubnetCidr: firewallSubnetCidr,
 *     trAttachmentSlaveCidr: trAttachmentSlaveCidr,
 * });
 * const _default = alicloud.cloudfirewall.getVpcCenTrFirewallsOutput({
 *     ids: [defaultVpcCenTrFirewall.id],
 *     cenId: cen.id,
 *     firewallName: firewallName,
 *     regionNo: region,
 *     routeMode: "managed",
 *     transitRouterId: tr.transitRouterId,
 * });
 * export const alicloudCloudFirewallVpcCenTrFirewallExampleId = _default.apply(_default => _default.firewalls?.[0]?.id);
 * ```
 */
export function getVpcCenTrFirewallsOutput(args?: GetVpcCenTrFirewallsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcCenTrFirewallsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:cloudfirewall/getVpcCenTrFirewalls:getVpcCenTrFirewalls", {
        "cenId": args.cenId,
        "currentPage": args.currentPage,
        "firewallId": args.firewallId,
        "firewallName": args.firewallName,
        "firewallSwitchStatus": args.firewallSwitchStatus,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "regionNo": args.regionNo,
        "routeMode": args.routeMode,
        "transitRouterId": args.transitRouterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcCenTrFirewalls.
 */
export interface GetVpcCenTrFirewallsOutputArgs {
    /**
     * The ID of the CEN instance.
     */
    cenId?: pulumi.Input<string>;
    /**
     * The page number of the pagination query. The default value is 1.
     */
    currentPage?: pulumi.Input<number>;
    /**
     * Firewall ID
     */
    firewallId?: pulumi.Input<string>;
    /**
     * The name of Cloud Firewall.
     */
    firewallName?: pulumi.Input<string>;
    /**
     * The status of the VPC boundary firewall. Value:-**opened**: opened-**closed**: closed-**notconfigured**: indicates that the VPC boundary firewall has not been configured yet.-**configured**: indicates that the VPC boundary firewall has been configured.-**creating**: indicates that a VPC boundary firewall is being created.-**opening**: indicates that the VPC border firewall is being enabled.-**deleting**: indicates that the VPC boundary firewall is being deleted.> If this parameter is not set, the VPC boundary firewall in all states is queried.
     */
    firewallSwitchStatus?: pulumi.Input<string>;
    /**
     * A list of Vpc Cen Tr Firewall IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Current page number.
     */
    pageNumber?: pulumi.Input<number>;
    /**
     * The maximum number of pieces of data per page that are displayed during a paged query. The default value is 10.
     */
    pageSize?: pulumi.Input<number>;
    /**
     * The region ID of the transit router instance.
     */
    regionNo?: pulumi.Input<string>;
    /**
     * The routing pattern. Value: managed: indicates automatic mode
     */
    routeMode?: pulumi.Input<string>;
    /**
     * The ID of the transit router instance.
     */
    transitRouterId?: pulumi.Input<string>;
}
