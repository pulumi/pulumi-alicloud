// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AddressBookArgs, AddressBookState } from "./addressBook";
export type AddressBook = import("./addressBook").AddressBook;
export const AddressBook: typeof import("./addressBook").AddressBook = null as any;
utilities.lazyLoad(exports, ["AddressBook"], () => require("./addressBook"));

export { ControlPolicyArgs, ControlPolicyState } from "./controlPolicy";
export type ControlPolicy = import("./controlPolicy").ControlPolicy;
export const ControlPolicy: typeof import("./controlPolicy").ControlPolicy = null as any;
utilities.lazyLoad(exports, ["ControlPolicy"], () => require("./controlPolicy"));

export { ControlPolicyOrderArgs, ControlPolicyOrderState } from "./controlPolicyOrder";
export type ControlPolicyOrder = import("./controlPolicyOrder").ControlPolicyOrder;
export const ControlPolicyOrder: typeof import("./controlPolicyOrder").ControlPolicyOrder = null as any;
utilities.lazyLoad(exports, ["ControlPolicyOrder"], () => require("./controlPolicyOrder"));

export { FirewallVpcFirewallArgs, FirewallVpcFirewallState } from "./firewallVpcFirewall";
export type FirewallVpcFirewall = import("./firewallVpcFirewall").FirewallVpcFirewall;
export const FirewallVpcFirewall: typeof import("./firewallVpcFirewall").FirewallVpcFirewall = null as any;
utilities.lazyLoad(exports, ["FirewallVpcFirewall"], () => require("./firewallVpcFirewall"));

export { FirewallVpcFirewallCenArgs, FirewallVpcFirewallCenState } from "./firewallVpcFirewallCen";
export type FirewallVpcFirewallCen = import("./firewallVpcFirewallCen").FirewallVpcFirewallCen;
export const FirewallVpcFirewallCen: typeof import("./firewallVpcFirewallCen").FirewallVpcFirewallCen = null as any;
utilities.lazyLoad(exports, ["FirewallVpcFirewallCen"], () => require("./firewallVpcFirewallCen"));

export { FirewallVpcFirewallControlPolicyArgs, FirewallVpcFirewallControlPolicyState } from "./firewallVpcFirewallControlPolicy";
export type FirewallVpcFirewallControlPolicy = import("./firewallVpcFirewallControlPolicy").FirewallVpcFirewallControlPolicy;
export const FirewallVpcFirewallControlPolicy: typeof import("./firewallVpcFirewallControlPolicy").FirewallVpcFirewallControlPolicy = null as any;
utilities.lazyLoad(exports, ["FirewallVpcFirewallControlPolicy"], () => require("./firewallVpcFirewallControlPolicy"));

export { GetAddressBooksArgs, GetAddressBooksResult, GetAddressBooksOutputArgs } from "./getAddressBooks";
export const getAddressBooks: typeof import("./getAddressBooks").getAddressBooks = null as any;
export const getAddressBooksOutput: typeof import("./getAddressBooks").getAddressBooksOutput = null as any;
utilities.lazyLoad(exports, ["getAddressBooks","getAddressBooksOutput"], () => require("./getAddressBooks"));

export { GetControlPoliciesArgs, GetControlPoliciesResult, GetControlPoliciesOutputArgs } from "./getControlPolicies";
export const getControlPolicies: typeof import("./getControlPolicies").getControlPolicies = null as any;
export const getControlPoliciesOutput: typeof import("./getControlPolicies").getControlPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getControlPolicies","getControlPoliciesOutput"], () => require("./getControlPolicies"));

export { GetInstanceMembersArgs, GetInstanceMembersResult, GetInstanceMembersOutputArgs } from "./getInstanceMembers";
export const getInstanceMembers: typeof import("./getInstanceMembers").getInstanceMembers = null as any;
export const getInstanceMembersOutput: typeof import("./getInstanceMembers").getInstanceMembersOutput = null as any;
utilities.lazyLoad(exports, ["getInstanceMembers","getInstanceMembersOutput"], () => require("./getInstanceMembers"));

export { GetInstancesArgs, GetInstancesResult, GetInstancesOutputArgs } from "./getInstances";
export const getInstances: typeof import("./getInstances").getInstances = null as any;
export const getInstancesOutput: typeof import("./getInstances").getInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getInstances","getInstancesOutput"], () => require("./getInstances"));

export { GetNatFirewallsArgs, GetNatFirewallsResult, GetNatFirewallsOutputArgs } from "./getNatFirewalls";
export const getNatFirewalls: typeof import("./getNatFirewalls").getNatFirewalls = null as any;
export const getNatFirewallsOutput: typeof import("./getNatFirewalls").getNatFirewallsOutput = null as any;
utilities.lazyLoad(exports, ["getNatFirewalls","getNatFirewallsOutput"], () => require("./getNatFirewalls"));

export { GetVpcCenTrFirewallsArgs, GetVpcCenTrFirewallsResult, GetVpcCenTrFirewallsOutputArgs } from "./getVpcCenTrFirewalls";
export const getVpcCenTrFirewalls: typeof import("./getVpcCenTrFirewalls").getVpcCenTrFirewalls = null as any;
export const getVpcCenTrFirewallsOutput: typeof import("./getVpcCenTrFirewalls").getVpcCenTrFirewallsOutput = null as any;
utilities.lazyLoad(exports, ["getVpcCenTrFirewalls","getVpcCenTrFirewallsOutput"], () => require("./getVpcCenTrFirewalls"));

export { GetVpcFirewallCensArgs, GetVpcFirewallCensResult, GetVpcFirewallCensOutputArgs } from "./getVpcFirewallCens";
export const getVpcFirewallCens: typeof import("./getVpcFirewallCens").getVpcFirewallCens = null as any;
export const getVpcFirewallCensOutput: typeof import("./getVpcFirewallCens").getVpcFirewallCensOutput = null as any;
utilities.lazyLoad(exports, ["getVpcFirewallCens","getVpcFirewallCensOutput"], () => require("./getVpcFirewallCens"));

export { GetVpcFirewallControlPoliciesArgs, GetVpcFirewallControlPoliciesResult, GetVpcFirewallControlPoliciesOutputArgs } from "./getVpcFirewallControlPolicies";
export const getVpcFirewallControlPolicies: typeof import("./getVpcFirewallControlPolicies").getVpcFirewallControlPolicies = null as any;
export const getVpcFirewallControlPoliciesOutput: typeof import("./getVpcFirewallControlPolicies").getVpcFirewallControlPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getVpcFirewallControlPolicies","getVpcFirewallControlPoliciesOutput"], () => require("./getVpcFirewallControlPolicies"));

export { GetVpcFirewallsArgs, GetVpcFirewallsResult, GetVpcFirewallsOutputArgs } from "./getVpcFirewalls";
export const getVpcFirewalls: typeof import("./getVpcFirewalls").getVpcFirewalls = null as any;
export const getVpcFirewallsOutput: typeof import("./getVpcFirewalls").getVpcFirewallsOutput = null as any;
utilities.lazyLoad(exports, ["getVpcFirewalls","getVpcFirewallsOutput"], () => require("./getVpcFirewalls"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { InstanceMemberArgs, InstanceMemberState } from "./instanceMember";
export type InstanceMember = import("./instanceMember").InstanceMember;
export const InstanceMember: typeof import("./instanceMember").InstanceMember = null as any;
utilities.lazyLoad(exports, ["InstanceMember"], () => require("./instanceMember"));

export { NatFirewallArgs, NatFirewallState } from "./natFirewall";
export type NatFirewall = import("./natFirewall").NatFirewall;
export const NatFirewall: typeof import("./natFirewall").NatFirewall = null as any;
utilities.lazyLoad(exports, ["NatFirewall"], () => require("./natFirewall"));

export { NatFirewallControlPolicyArgs, NatFirewallControlPolicyState } from "./natFirewallControlPolicy";
export type NatFirewallControlPolicy = import("./natFirewallControlPolicy").NatFirewallControlPolicy;
export const NatFirewallControlPolicy: typeof import("./natFirewallControlPolicy").NatFirewallControlPolicy = null as any;
utilities.lazyLoad(exports, ["NatFirewallControlPolicy"], () => require("./natFirewallControlPolicy"));

export { VpcCenTrFirewallArgs, VpcCenTrFirewallState } from "./vpcCenTrFirewall";
export type VpcCenTrFirewall = import("./vpcCenTrFirewall").VpcCenTrFirewall;
export const VpcCenTrFirewall: typeof import("./vpcCenTrFirewall").VpcCenTrFirewall = null as any;
utilities.lazyLoad(exports, ["VpcCenTrFirewall"], () => require("./vpcCenTrFirewall"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:cloudfirewall/addressBook:AddressBook":
                return new AddressBook(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/controlPolicy:ControlPolicy":
                return new ControlPolicy(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/controlPolicyOrder:ControlPolicyOrder":
                return new ControlPolicyOrder(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/firewallVpcFirewall:FirewallVpcFirewall":
                return new FirewallVpcFirewall(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/firewallVpcFirewallCen:FirewallVpcFirewallCen":
                return new FirewallVpcFirewallCen(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/firewallVpcFirewallControlPolicy:FirewallVpcFirewallControlPolicy":
                return new FirewallVpcFirewallControlPolicy(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/instanceMember:InstanceMember":
                return new InstanceMember(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/natFirewall:NatFirewall":
                return new NatFirewall(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy":
                return new NatFirewallControlPolicy(name, <any>undefined, { urn })
            case "alicloud:cloudfirewall/vpcCenTrFirewall:VpcCenTrFirewall":
                return new VpcCenTrFirewall(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/addressBook", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/controlPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/controlPolicyOrder", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/firewallVpcFirewall", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/firewallVpcFirewallCen", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/firewallVpcFirewallControlPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/instance", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/instanceMember", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/natFirewall", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/natFirewallControlPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "cloudfirewall/vpcCenTrFirewall", _module)
