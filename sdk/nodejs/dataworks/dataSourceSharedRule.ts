// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Data Works Data Source Shared Rule resource.
 *
 * Data source sharing rule, which expresses A data source, from space A to space B (A user).
 *
 * For information about Data Works Data Source Shared Rule and how to use it, see [What is Data Source Shared Rule](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.237.0.
 *
 * ## Import
 *
 * Data Works Data Source Shared Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule example <data_source_id>:<data_source_shared_rule_id>
 * ```
 */
export class DataSourceSharedRule extends pulumi.CustomResource {
    /**
     * Get an existing DataSourceSharedRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSourceSharedRuleState, opts?: pulumi.CustomResourceOptions): DataSourceSharedRule {
        return new DataSourceSharedRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule';

    /**
     * Returns true if the given object is an instance of DataSourceSharedRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSourceSharedRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSourceSharedRule.__pulumiType;
    }

    /**
     * The creation time of the data source sharing rule.
     */
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    /**
     * The ID of the data source, that is, the unique identifier of the data source.
     */
    public readonly dataSourceId!: pulumi.Output<number>;
    /**
     * The data source sharing rule ID, that is, the unique identifier of the data source sharing rule.
     */
    public /*out*/ readonly dataSourceSharedRuleId!: pulumi.Output<string>;
    /**
     * The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
     */
    public readonly envType!: pulumi.Output<string>;
    /**
     * The target user of the data source permission policy, which is null to share to the project.
     */
    public readonly sharedUser!: pulumi.Output<string | undefined>;
    /**
     * The ID of the project to which the data source is shared.
     */
    public readonly targetProjectId!: pulumi.Output<number>;

    /**
     * Create a DataSourceSharedRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSourceSharedRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSourceSharedRuleArgs | DataSourceSharedRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSourceSharedRuleState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["dataSourceSharedRuleId"] = state ? state.dataSourceSharedRuleId : undefined;
            resourceInputs["envType"] = state ? state.envType : undefined;
            resourceInputs["sharedUser"] = state ? state.sharedUser : undefined;
            resourceInputs["targetProjectId"] = state ? state.targetProjectId : undefined;
        } else {
            const args = argsOrState as DataSourceSharedRuleArgs | undefined;
            if ((!args || args.dataSourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataSourceId'");
            }
            if ((!args || args.envType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'envType'");
            }
            if ((!args || args.targetProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetProjectId'");
            }
            resourceInputs["dataSourceId"] = args ? args.dataSourceId : undefined;
            resourceInputs["envType"] = args ? args.envType : undefined;
            resourceInputs["sharedUser"] = args ? args.sharedUser : undefined;
            resourceInputs["targetProjectId"] = args ? args.targetProjectId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dataSourceSharedRuleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSourceSharedRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataSourceSharedRule resources.
 */
export interface DataSourceSharedRuleState {
    /**
     * The creation time of the data source sharing rule.
     */
    createTime?: pulumi.Input<number>;
    /**
     * The ID of the data source, that is, the unique identifier of the data source.
     */
    dataSourceId?: pulumi.Input<number>;
    /**
     * The data source sharing rule ID, that is, the unique identifier of the data source sharing rule.
     */
    dataSourceSharedRuleId?: pulumi.Input<string>;
    /**
     * The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
     */
    envType?: pulumi.Input<string>;
    /**
     * The target user of the data source permission policy, which is null to share to the project.
     */
    sharedUser?: pulumi.Input<string>;
    /**
     * The ID of the project to which the data source is shared.
     */
    targetProjectId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DataSourceSharedRule resource.
 */
export interface DataSourceSharedRuleArgs {
    /**
     * The ID of the data source, that is, the unique identifier of the data source.
     */
    dataSourceId: pulumi.Input<number>;
    /**
     * The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
     */
    envType: pulumi.Input<string>;
    /**
     * The target user of the data source permission policy, which is null to share to the project.
     */
    sharedUser?: pulumi.Input<string>;
    /**
     * The ID of the project to which the data source is shared.
     */
    targetProjectId: pulumi.Input<number>;
}
