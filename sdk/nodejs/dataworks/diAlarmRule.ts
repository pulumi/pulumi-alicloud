// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Data Works Di Alarm Rule resource.
 *
 * Data Integration alarm rules.
 *
 * For information about Data Works Di Alarm Rule and how to use it, see [What is Di Alarm Rule](https://www.alibabacloud.com/help/en/dataworks/developer-reference/api-dataworks-public-2024-05-18-createdialarmrule).
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaulteNv8bu = new alicloud.dataworks.Project("defaulteNv8bu", {
 *     projectName: name,
 *     displayName: name,
 *     description: name,
 *     paiTaskEnabled: true,
 * });
 * const defaultUW8inp = new alicloud.dataworks.DiJob("defaultUW8inp", {
 *     description: "xxxx",
 *     projectId: defaulteNv8bu.id,
 *     jobName: "xxx",
 *     migrationType: "api_xxx",
 *     sourceDataSourceType: "xxx",
 *     resourceSettings: {
 *         offlineResourceSettings: {
 *             requestedCu: 2,
 *             resourceGroupIdentifier: "xx",
 *         },
 *         realtimeResourceSettings: {
 *             requestedCu: 2,
 *             resourceGroupIdentifier: "xx",
 *         },
 *         scheduleResourceSettings: {
 *             requestedCu: 2,
 *             resourceGroupIdentifier: "xx",
 *         },
 *     },
 *     jobSettings: {
 *         channelSettings: "xxxx",
 *         columnDataTypeSettings: [{
 *             destinationDataType: "xxxx",
 *             sourceDataType: "xxxx",
 *         }],
 *         cycleScheduleSettings: {
 *             cycleMigrationType: "xxxx",
 *             scheduleParameters: "xxxx",
 *         },
 *     },
 *     sourceDataSourceSettings: [{
 *         dataSourceName: "xxxx",
 *         dataSourceProperties: {
 *             encoding: "xxxx",
 *             timezone: "xxxx",
 *         },
 *     }],
 *     destinationDataSourceType: "xxxx",
 *     tableMappings: [{
 *         sourceObjectSelectionRules: [
 *             {
 *                 action: "Include",
 *                 expression: "xxxx",
 *                 expressionType: "Exact",
 *                 objectType: "xxxx",
 *             },
 *             {
 *                 action: "Include",
 *                 expression: "xxxx",
 *                 expressionType: "Exact",
 *                 objectType: "xxxx",
 *             },
 *         ],
 *         transformationRules: [{
 *             ruleName: "xxxx",
 *             ruleActionType: "xxxx",
 *             ruleTargetType: "xxxx",
 *         }],
 *     }],
 *     transformationRules: [{
 *         ruleActionType: "xxxx",
 *         ruleExpression: "xxxx",
 *         ruleName: "xxxx",
 *         ruleTargetType: "xxxx",
 *     }],
 *     destinationDataSourceSettings: [{
 *         dataSourceName: "xxx",
 *     }],
 * });
 * const _default = new alicloud.dataworks.DiAlarmRule("default", {
 *     description: "Description",
 *     triggerConditions: [{
 *         ddlReportTags: ["ALTERADDCOLUMN"],
 *         threshold: 20,
 *         duration: 10,
 *         severity: "Warning",
 *     }],
 *     metricType: "DdlReport",
 *     notificationSettings: {
 *         notificationChannels: [{
 *             severity: "Warning",
 *             channels: ["Ding"],
 *         }],
 *         notificationReceivers: [{
 *             receiverType: "DingToken",
 *             receiverValues: ["1107550004253538"],
 *         }],
 *         inhibitionInterval: 10,
 *     },
 *     diJobId: defaultUW8inp.diJobId,
 *     diAlarmRuleName: name,
 * });
 * ```
 *
 * ## Import
 *
 * Data Works Di Alarm Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dataworks/diAlarmRule:DiAlarmRule example <di_job_id>:<di_alarm_rule_id>
 * ```
 */
export class DiAlarmRule extends pulumi.CustomResource {
    /**
     * Get an existing DiAlarmRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiAlarmRuleState, opts?: pulumi.CustomResourceOptions): DiAlarmRule {
        return new DiAlarmRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dataworks/diAlarmRule:DiAlarmRule';

    /**
     * Returns true if the given object is an instance of DiAlarmRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiAlarmRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiAlarmRule.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Resource attribute field representing resource level ID
     */
    public /*out*/ readonly diAlarmRuleId!: pulumi.Output<number>;
    /**
     * Data Integration alarm rule name
     */
    public readonly diAlarmRuleName!: pulumi.Output<string>;
    /**
     * Task ID: the ID of the task associated with the alert rule.
     */
    public readonly diJobId!: pulumi.Output<number>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Alarm indicator type. Optional enumerated values:
     * - Heartbeat (task status alarm)
     * - FailoverCount(failover times alarm)
     * - Delay (task Delay alarm)
     */
    public readonly metricType!: pulumi.Output<string>;
    /**
     * Alarm notification settings See `notificationSettings` below.
     */
    public readonly notificationSettings!: pulumi.Output<outputs.dataworks.DiAlarmRuleNotificationSettings>;
    /**
     * Alarm trigger condition list, supporting multiple conditions See `triggerConditions` below.
     */
    public readonly triggerConditions!: pulumi.Output<outputs.dataworks.DiAlarmRuleTriggerCondition[]>;

    /**
     * Create a DiAlarmRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiAlarmRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiAlarmRuleArgs | DiAlarmRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiAlarmRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diAlarmRuleId"] = state ? state.diAlarmRuleId : undefined;
            resourceInputs["diAlarmRuleName"] = state ? state.diAlarmRuleName : undefined;
            resourceInputs["diJobId"] = state ? state.diJobId : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["metricType"] = state ? state.metricType : undefined;
            resourceInputs["notificationSettings"] = state ? state.notificationSettings : undefined;
            resourceInputs["triggerConditions"] = state ? state.triggerConditions : undefined;
        } else {
            const args = argsOrState as DiAlarmRuleArgs | undefined;
            if ((!args || args.diAlarmRuleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diAlarmRuleName'");
            }
            if ((!args || args.diJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diJobId'");
            }
            if ((!args || args.metricType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricType'");
            }
            if ((!args || args.notificationSettings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationSettings'");
            }
            if ((!args || args.triggerConditions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'triggerConditions'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diAlarmRuleName"] = args ? args.diAlarmRuleName : undefined;
            resourceInputs["diJobId"] = args ? args.diJobId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["metricType"] = args ? args.metricType : undefined;
            resourceInputs["notificationSettings"] = args ? args.notificationSettings : undefined;
            resourceInputs["triggerConditions"] = args ? args.triggerConditions : undefined;
            resourceInputs["diAlarmRuleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DiAlarmRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DiAlarmRule resources.
 */
export interface DiAlarmRuleState {
    description?: pulumi.Input<string>;
    /**
     * Resource attribute field representing resource level ID
     */
    diAlarmRuleId?: pulumi.Input<number>;
    /**
     * Data Integration alarm rule name
     */
    diAlarmRuleName?: pulumi.Input<string>;
    /**
     * Task ID: the ID of the task associated with the alert rule.
     */
    diJobId?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    /**
     * Alarm indicator type. Optional enumerated values:
     * - Heartbeat (task status alarm)
     * - FailoverCount(failover times alarm)
     * - Delay (task Delay alarm)
     */
    metricType?: pulumi.Input<string>;
    /**
     * Alarm notification settings See `notificationSettings` below.
     */
    notificationSettings?: pulumi.Input<inputs.dataworks.DiAlarmRuleNotificationSettings>;
    /**
     * Alarm trigger condition list, supporting multiple conditions See `triggerConditions` below.
     */
    triggerConditions?: pulumi.Input<pulumi.Input<inputs.dataworks.DiAlarmRuleTriggerCondition>[]>;
}

/**
 * The set of arguments for constructing a DiAlarmRule resource.
 */
export interface DiAlarmRuleArgs {
    description?: pulumi.Input<string>;
    /**
     * Data Integration alarm rule name
     */
    diAlarmRuleName: pulumi.Input<string>;
    /**
     * Task ID: the ID of the task associated with the alert rule.
     */
    diJobId: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    /**
     * Alarm indicator type. Optional enumerated values:
     * - Heartbeat (task status alarm)
     * - FailoverCount(failover times alarm)
     * - Delay (task Delay alarm)
     */
    metricType: pulumi.Input<string>;
    /**
     * Alarm notification settings See `notificationSettings` below.
     */
    notificationSettings: pulumi.Input<inputs.dataworks.DiAlarmRuleNotificationSettings>;
    /**
     * Alarm trigger condition list, supporting multiple conditions See `triggerConditions` below.
     */
    triggerConditions: pulumi.Input<pulumi.Input<inputs.dataworks.DiAlarmRuleTriggerCondition>[]>;
}
