// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FolderArgs, FolderState } from "./folder";
export type Folder = import("./folder").Folder;
export const Folder: typeof import("./folder").Folder = null as any;
utilities.lazyLoad(exports, ["Folder"], () => require("./folder"));

export { GetFoldersArgs, GetFoldersResult, GetFoldersOutputArgs } from "./getFolders";
export const getFolders: typeof import("./getFolders").getFolders = null as any;
export const getFoldersOutput: typeof import("./getFolders").getFoldersOutput = null as any;
utilities.lazyLoad(exports, ["getFolders","getFoldersOutput"], () => require("./getFolders"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));

export { ProjectArgs, ProjectState } from "./project";
export type Project = import("./project").Project;
export const Project: typeof import("./project").Project = null as any;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:dataworks/folder:Folder":
                return new Folder(name, <any>undefined, { urn })
            case "alicloud:dataworks/project:Project":
                return new Project(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "dataworks/folder", _module)
pulumi.runtime.registerResourceModule("alicloud", "dataworks/project", _module)
