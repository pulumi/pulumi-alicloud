// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Data Works Project resource.
 *
 * For information about Data Works Project and how to use it, see [What is Project](https://www.alibabacloud.com/help/en/).
 *
 * > **NOTE:** Available since v1.229.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf_example";
 * const randint = new random.index.Integer("randint", {
 *     max: 999,
 *     min: 1,
 * });
 * const default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultProject = new alicloud.dataworks.Project("default", {
 *     status: "Available",
 *     description: "tf_desc",
 *     projectName: `${name}${randint.id}`,
 *     paiTaskEnabled: false,
 *     displayName: "tf_new_api_display",
 *     devRoleDisabled: true,
 *     devEnvironmentEnabled: false,
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 * });
 * ```
 *
 * ## Import
 *
 * Data Works Project can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dataworks/project:Project example <id>
 * ```
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dataworks/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * Workspace Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Is Development Environment Enabled
     */
    public readonly devEnvironmentEnabled!: pulumi.Output<boolean>;
    /**
     * Is Development Role Disabled
     */
    public readonly devRoleDisabled!: pulumi.Output<boolean>;
    /**
     * Workspace Display Name
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Create PAI Workspace Together
     */
    public readonly paiTaskEnabled!: pulumi.Output<boolean>;
    /**
     * Workspace Name
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * Aliyun Resource Group Id
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Workspace Status
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Aliyun Resource Tag
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["devEnvironmentEnabled"] = state ? state.devEnvironmentEnabled : undefined;
            resourceInputs["devRoleDisabled"] = state ? state.devRoleDisabled : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["paiTaskEnabled"] = state ? state.paiTaskEnabled : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.paiTaskEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paiTaskEnabled'");
            }
            if ((!args || args.projectName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["devEnvironmentEnabled"] = args ? args.devEnvironmentEnabled : undefined;
            resourceInputs["devRoleDisabled"] = args ? args.devRoleDisabled : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["paiTaskEnabled"] = args ? args.paiTaskEnabled : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * Workspace Description
     */
    description?: pulumi.Input<string>;
    /**
     * Is Development Environment Enabled
     */
    devEnvironmentEnabled?: pulumi.Input<boolean>;
    /**
     * Is Development Role Disabled
     */
    devRoleDisabled?: pulumi.Input<boolean>;
    /**
     * Workspace Display Name
     */
    displayName?: pulumi.Input<string>;
    /**
     * Create PAI Workspace Together
     */
    paiTaskEnabled?: pulumi.Input<boolean>;
    /**
     * Workspace Name
     */
    projectName?: pulumi.Input<string>;
    /**
     * Aliyun Resource Group Id
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Workspace Status
     */
    status?: pulumi.Input<string>;
    /**
     * Aliyun Resource Tag
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * Workspace Description
     */
    description?: pulumi.Input<string>;
    /**
     * Is Development Environment Enabled
     */
    devEnvironmentEnabled?: pulumi.Input<boolean>;
    /**
     * Is Development Role Disabled
     */
    devRoleDisabled?: pulumi.Input<boolean>;
    /**
     * Workspace Display Name
     */
    displayName: pulumi.Input<string>;
    /**
     * Create PAI Workspace Together
     */
    paiTaskEnabled: pulumi.Input<boolean>;
    /**
     * Workspace Name
     */
    projectName: pulumi.Input<string>;
    /**
     * Aliyun Resource Group Id
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Workspace Status
     */
    status?: pulumi.Input<string>;
    /**
     * Aliyun Resource Tag
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
