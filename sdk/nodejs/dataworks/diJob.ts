// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Data Works Di Job resource.
 *
 * Data Integration Tasks.
 *
 * For information about Data Works Di Job and how to use it, see [What is Di Job](https://www.alibabacloud.com/help/en/dataworks/developer-reference/api-dataworks-public-2024-05-18-createdijob).
 *
 * > **NOTE:** Available since v1.241.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const defaultMMHL8U = new alicloud.dataworks.Project("defaultMMHL8U", {
 *     projectName: name,
 *     displayName: name,
 *     description: name,
 *     paiTaskEnabled: true,
 * });
 * const _default = new alicloud.dataworks.DiJob("default", {
 *     description: name,
 *     projectId: defaultMMHL8U.id,
 *     jobName: "zhenyuan_example_case",
 *     migrationType: "api_FullAndRealtimeIncremental",
 *     sourceDataSourceSettings: [{
 *         dataSourceName: "dw_mysql",
 *         dataSourceProperties: {
 *             encoding: "utf-8",
 *             timezone: "Asia/Shanghai",
 *         },
 *     }],
 *     destinationDataSourceType: "Hologres",
 *     tableMappings: [{
 *         sourceObjectSelectionRules: [
 *             {
 *                 action: "Include",
 *                 expression: "dw_mysql",
 *                 expressionType: "Exact",
 *                 objectType: "Datasource",
 *             },
 *             {
 *                 action: "Include",
 *                 expression: "example_db1",
 *                 expressionType: "Exact",
 *                 objectType: "Database",
 *             },
 *             {
 *                 action: "Include",
 *                 expression: "lsc_example01",
 *                 expressionType: "Exact",
 *                 objectType: "Table",
 *             },
 *         ],
 *         transformationRules: [{
 *             ruleName: "my_table_rename_rule",
 *             ruleActionType: "Rename",
 *             ruleTargetType: "Table",
 *         }],
 *     }],
 *     sourceDataSourceType: "MySQL",
 *     resourceSettings: {
 *         offlineResourceSettings: {
 *             requestedCu: 2,
 *             resourceGroupIdentifier: "S_res_group_524257424564736_1716799673667",
 *         },
 *         realtimeResourceSettings: {
 *             requestedCu: 2,
 *             resourceGroupIdentifier: "S_res_group_524257424564736_1716799673667",
 *         },
 *         scheduleResourceSettings: {
 *             requestedCu: 2,
 *             resourceGroupIdentifier: "S_res_group_524257424564736_1716799673667",
 *         },
 *     },
 *     transformationRules: [{
 *         ruleActionType: "Rename",
 *         ruleExpression: "{\"expression\":\"table2\"}",
 *         ruleName: "my_table_rename_rule",
 *         ruleTargetType: "Table",
 *     }],
 *     destinationDataSourceSettings: [{
 *         dataSourceName: "dw_example_holo",
 *     }],
 *     jobSettings: {
 *         columnDataTypeSettings: [{
 *             destinationDataType: "bigint",
 *             sourceDataType: "longtext",
 *         }],
 *         ddlHandlingSettings: [{
 *             action: "Ignore",
 *             type: "CreateTable",
 *         }],
 *         runtimeSettings: [{
 *             name: "runtime.realtime.concurrent",
 *             value: "1",
 *         }],
 *         channelSettings: "1",
 *         cycleScheduleSettings: {
 *             cycleMigrationType: "2",
 *             scheduleParameters: "3",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Data Works Di Job can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dataworks/diJob:DiJob example <project_id>:<di_job_id>
 * ```
 */
export class DiJob extends pulumi.CustomResource {
    /**
     * Get an existing DiJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiJobState, opts?: pulumi.CustomResourceOptions): DiJob {
        return new DiJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dataworks/diJob:DiJob';

    /**
     * Returns true if the given object is an instance of DiJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiJob.__pulumiType;
    }

    /**
     * Description of the integration task
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Destination data source See `destinationDataSourceSettings` below.
     */
    declare public readonly destinationDataSourceSettings: pulumi.Output<outputs.dataworks.DiJobDestinationDataSourceSetting[]>;
    /**
     * The type of the target data source. Enumerated values: Hologres and Hive.
     */
    declare public readonly destinationDataSourceType: pulumi.Output<string>;
    /**
     * Integration Task Id
     */
    declare public /*out*/ readonly diJobId: pulumi.Output<number>;
    /**
     * Task Name.
     */
    declare public readonly jobName: pulumi.Output<string>;
    /**
     * The dimension settings of the synchronization task, including the DDL processing policy, the source and destination column data type mapping policy, and the task runtime parameters. See `jobSettings` below.
     */
    declare public readonly jobSettings: pulumi.Output<outputs.dataworks.DiJobJobSettings | undefined>;
    /**
     * Synchronization type, optional enumeration values are:
     *
     * Fulllandrealtimeincremental (full and real-time incremental)
     *
     * RealtimeIncremental
     *
     * Full
     *
     * Offflineincremental
     *
     * FullAndOfflineIncremental (full amount + offline increment)
     */
    declare public readonly migrationType: pulumi.Output<string>;
    /**
     * Project Id
     */
    declare public readonly projectId: pulumi.Output<number>;
    /**
     * Resource Group Properties See `resourceSettings` below.
     */
    declare public readonly resourceSettings: pulumi.Output<outputs.dataworks.DiJobResourceSettings>;
    /**
     * Source data source setting List See `sourceDataSourceSettings` below.
     */
    declare public readonly sourceDataSourceSettings: pulumi.Output<outputs.dataworks.DiJobSourceDataSourceSetting[]>;
    /**
     * The type of the source data source. The enumerated value is MySQL.
     */
    declare public readonly sourceDataSourceType: pulumi.Output<string>;
    /**
     * Synchronize object transformation mapping list See `tableMappings` below.
     */
    declare public readonly tableMappings: pulumi.Output<outputs.dataworks.DiJobTableMapping[]>;
    /**
     * Definition list of synchronization object conversion rules See `transformationRules` below.
     */
    declare public readonly transformationRules: pulumi.Output<outputs.dataworks.DiJobTransformationRule[] | undefined>;

    /**
     * Create a DiJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiJobArgs | DiJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiJobState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["destinationDataSourceSettings"] = state?.destinationDataSourceSettings;
            resourceInputs["destinationDataSourceType"] = state?.destinationDataSourceType;
            resourceInputs["diJobId"] = state?.diJobId;
            resourceInputs["jobName"] = state?.jobName;
            resourceInputs["jobSettings"] = state?.jobSettings;
            resourceInputs["migrationType"] = state?.migrationType;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["resourceSettings"] = state?.resourceSettings;
            resourceInputs["sourceDataSourceSettings"] = state?.sourceDataSourceSettings;
            resourceInputs["sourceDataSourceType"] = state?.sourceDataSourceType;
            resourceInputs["tableMappings"] = state?.tableMappings;
            resourceInputs["transformationRules"] = state?.transformationRules;
        } else {
            const args = argsOrState as DiJobArgs | undefined;
            if (args?.destinationDataSourceSettings === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationDataSourceSettings'");
            }
            if (args?.destinationDataSourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationDataSourceType'");
            }
            if (args?.jobName === undefined && !opts.urn) {
                throw new Error("Missing required property 'jobName'");
            }
            if (args?.migrationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'migrationType'");
            }
            if (args?.resourceSettings === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceSettings'");
            }
            if (args?.sourceDataSourceSettings === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceDataSourceSettings'");
            }
            if (args?.sourceDataSourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceDataSourceType'");
            }
            if (args?.tableMappings === undefined && !opts.urn) {
                throw new Error("Missing required property 'tableMappings'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["destinationDataSourceSettings"] = args?.destinationDataSourceSettings;
            resourceInputs["destinationDataSourceType"] = args?.destinationDataSourceType;
            resourceInputs["jobName"] = args?.jobName;
            resourceInputs["jobSettings"] = args?.jobSettings;
            resourceInputs["migrationType"] = args?.migrationType;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["resourceSettings"] = args?.resourceSettings;
            resourceInputs["sourceDataSourceSettings"] = args?.sourceDataSourceSettings;
            resourceInputs["sourceDataSourceType"] = args?.sourceDataSourceType;
            resourceInputs["tableMappings"] = args?.tableMappings;
            resourceInputs["transformationRules"] = args?.transformationRules;
            resourceInputs["diJobId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DiJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DiJob resources.
 */
export interface DiJobState {
    /**
     * Description of the integration task
     */
    description?: pulumi.Input<string>;
    /**
     * Destination data source See `destinationDataSourceSettings` below.
     */
    destinationDataSourceSettings?: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobDestinationDataSourceSetting>[]>;
    /**
     * The type of the target data source. Enumerated values: Hologres and Hive.
     */
    destinationDataSourceType?: pulumi.Input<string>;
    /**
     * Integration Task Id
     */
    diJobId?: pulumi.Input<number>;
    /**
     * Task Name.
     */
    jobName?: pulumi.Input<string>;
    /**
     * The dimension settings of the synchronization task, including the DDL processing policy, the source and destination column data type mapping policy, and the task runtime parameters. See `jobSettings` below.
     */
    jobSettings?: pulumi.Input<inputs.dataworks.DiJobJobSettings>;
    /**
     * Synchronization type, optional enumeration values are:
     *
     * Fulllandrealtimeincremental (full and real-time incremental)
     *
     * RealtimeIncremental
     *
     * Full
     *
     * Offflineincremental
     *
     * FullAndOfflineIncremental (full amount + offline increment)
     */
    migrationType?: pulumi.Input<string>;
    /**
     * Project Id
     */
    projectId?: pulumi.Input<number>;
    /**
     * Resource Group Properties See `resourceSettings` below.
     */
    resourceSettings?: pulumi.Input<inputs.dataworks.DiJobResourceSettings>;
    /**
     * Source data source setting List See `sourceDataSourceSettings` below.
     */
    sourceDataSourceSettings?: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobSourceDataSourceSetting>[]>;
    /**
     * The type of the source data source. The enumerated value is MySQL.
     */
    sourceDataSourceType?: pulumi.Input<string>;
    /**
     * Synchronize object transformation mapping list See `tableMappings` below.
     */
    tableMappings?: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobTableMapping>[]>;
    /**
     * Definition list of synchronization object conversion rules See `transformationRules` below.
     */
    transformationRules?: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobTransformationRule>[]>;
}

/**
 * The set of arguments for constructing a DiJob resource.
 */
export interface DiJobArgs {
    /**
     * Description of the integration task
     */
    description?: pulumi.Input<string>;
    /**
     * Destination data source See `destinationDataSourceSettings` below.
     */
    destinationDataSourceSettings: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobDestinationDataSourceSetting>[]>;
    /**
     * The type of the target data source. Enumerated values: Hologres and Hive.
     */
    destinationDataSourceType: pulumi.Input<string>;
    /**
     * Task Name.
     */
    jobName: pulumi.Input<string>;
    /**
     * The dimension settings of the synchronization task, including the DDL processing policy, the source and destination column data type mapping policy, and the task runtime parameters. See `jobSettings` below.
     */
    jobSettings?: pulumi.Input<inputs.dataworks.DiJobJobSettings>;
    /**
     * Synchronization type, optional enumeration values are:
     *
     * Fulllandrealtimeincremental (full and real-time incremental)
     *
     * RealtimeIncremental
     *
     * Full
     *
     * Offflineincremental
     *
     * FullAndOfflineIncremental (full amount + offline increment)
     */
    migrationType: pulumi.Input<string>;
    /**
     * Project Id
     */
    projectId?: pulumi.Input<number>;
    /**
     * Resource Group Properties See `resourceSettings` below.
     */
    resourceSettings: pulumi.Input<inputs.dataworks.DiJobResourceSettings>;
    /**
     * Source data source setting List See `sourceDataSourceSettings` below.
     */
    sourceDataSourceSettings: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobSourceDataSourceSetting>[]>;
    /**
     * The type of the source data source. The enumerated value is MySQL.
     */
    sourceDataSourceType: pulumi.Input<string>;
    /**
     * Synchronize object transformation mapping list See `tableMappings` below.
     */
    tableMappings: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobTableMapping>[]>;
    /**
     * Definition list of synchronization object conversion rules See `transformationRules` below.
     */
    transformationRules?: pulumi.Input<pulumi.Input<inputs.dataworks.DiJobTransformationRule>[]>;
}
