// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Data Works Project Member resource.
 *
 * For information about Data Works Project Member and how to use it, see [What is Project Member](https://www.alibabacloud.com/help/en/dataworks/developer-reference/api-dataworks-public-2024-05-18-createprojectmember).
 *
 * > **NOTE:** Available since v1.237.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const adminCode = config.get("adminCode") || "role_project_admin";
 * const name = config.get("name") || "tf_example";
 * const randint = new random.index.Integer("randint", {
 *     max: 999,
 *     min: 1,
 * });
 * const defaultKCTrB2 = new alicloud.ram.User("defaultKCTrB2", {
 *     displayName: `${name}${randint.id}`,
 *     name: `${name}${randint.id}`,
 * });
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultQeRfvU = new alicloud.dataworks.Project("defaultQeRfvU", {
 *     status: "Available",
 *     description: "tf_desc",
 *     projectName: `${name}${randint.id}`,
 *     paiTaskEnabled: false,
 *     displayName: "tf_new_api_display",
 *     devRoleDisabled: true,
 *     devEnvironmentEnabled: false,
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 * });
 * const defaultProjectMember = new alicloud.dataworks.ProjectMember("default", {
 *     userId: defaultKCTrB2.id,
 *     projectId: defaultQeRfvU.id,
 *     roles: [{
 *         code: adminCode,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Data Works Project Member can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dataworks/projectMember:ProjectMember example <project_id>:<user_id>
 * ```
 */
export class ProjectMember extends pulumi.CustomResource {
    /**
     * Get an existing ProjectMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectMemberState, opts?: pulumi.CustomResourceOptions): ProjectMember {
        return new ProjectMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dataworks/projectMember:ProjectMember';

    /**
     * Returns true if the given object is an instance of ProjectMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectMember.__pulumiType;
    }

    /**
     * Project ID
     */
    declare public readonly projectId: pulumi.Output<number>;
    /**
     * List of roles owned by members. See `roles` below.
     */
    declare public readonly roles: pulumi.Output<outputs.dataworks.ProjectMemberRole[] | undefined>;
    /**
     * The status of the user in project
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The user ID of the member.
     */
    declare public readonly userId: pulumi.Output<string>;

    /**
     * Create a ProjectMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectMemberArgs | ProjectMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectMemberState | undefined;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["roles"] = state?.roles;
            resourceInputs["status"] = state?.status;
            resourceInputs["userId"] = state?.userId;
        } else {
            const args = argsOrState as ProjectMemberArgs | undefined;
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.userId === undefined && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["roles"] = args?.roles;
            resourceInputs["userId"] = args?.userId;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProjectMember resources.
 */
export interface ProjectMemberState {
    /**
     * Project ID
     */
    projectId?: pulumi.Input<number>;
    /**
     * List of roles owned by members. See `roles` below.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.dataworks.ProjectMemberRole>[]>;
    /**
     * The status of the user in project
     */
    status?: pulumi.Input<string>;
    /**
     * The user ID of the member.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProjectMember resource.
 */
export interface ProjectMemberArgs {
    /**
     * Project ID
     */
    projectId: pulumi.Input<number>;
    /**
     * List of roles owned by members. See `roles` below.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.dataworks.ProjectMemberRole>[]>;
    /**
     * The user ID of the member.
     */
    userId: pulumi.Input<string>;
}
