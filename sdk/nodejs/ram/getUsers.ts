// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const usersDs = pulumi.output(alicloud.ram.getUsers({
 *     groupName: "group1",
 *     nameRegex: "^user",
 *     outputFile: "users.txt",
 *     policyName: "AliyunACSDefaultAccess",
 *     policyType: "Custom",
 * }));
 *
 * export const firstUserId = usersDs.users[0].id;
 * ```
 */
export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:ram/getUsers:getUsers", {
        "groupName": args.groupName,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "policyName": args.policyName,
        "policyType": args.policyType,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * Filter results by a specific group name. Returned users are in the specified group.
     */
    groupName?: string;
    /**
     * - A list of ram user IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter resulting users by their names.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * Filter results by a specific policy name. If you set this parameter without setting `policyType`, the later will be automatically set to `System`. Returned users are attached to the specified policy.
     */
    policyName?: string;
    /**
     * Filter results by a specific policy type. Valid values are `Custom` and `System`. If you set this parameter, you must set `policyName` as well.
     */
    policyType?: string;
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    readonly groupName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of ram user IDs.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of ram user names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    readonly policyName?: string;
    readonly policyType?: string;
    /**
     * A list of users. Each element contains the following attributes:
     */
    readonly users: outputs.ram.GetUsersUser[];
}

export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(args).apply(a => getUsers(a, opts))
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    /**
     * Filter results by a specific group name. Returned users are in the specified group.
     */
    groupName?: pulumi.Input<string>;
    /**
     * - A list of ram user IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter resulting users by their names.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * Filter results by a specific policy name. If you set this parameter without setting `policyType`, the later will be automatically set to `System`. Returned users are attached to the specified policy.
     */
    policyName?: pulumi.Input<string>;
    /**
     * Filter results by a specific policy type. Valid values are `Custom` and `System`. If you set this parameter, you must set `policyName` as well.
     */
    policyType?: pulumi.Input<string>;
}
