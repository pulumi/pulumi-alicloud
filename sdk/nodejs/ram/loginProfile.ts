// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RAM Login Profile resource.
 *
 * For information about RAM Login Profile and how to use it, see [What is Login Profile](https://www.alibabacloud.com/help/en/ram/developer-reference/api-ram-2015-05-01-createloginprofile).
 *
 * > **NOTE:** Available since v1.0.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const user = new alicloud.ram.User("user", {
 *     name: "terraform_example",
 *     displayName: "terraform_example",
 *     mobile: "86-18688888888",
 *     email: "hello.uuu@aaa.com",
 *     comments: "terraform_example",
 *     force: true,
 * });
 * const profile = new alicloud.ram.LoginProfile("profile", {
 *     userName: user.name,
 *     password: "Example_1234",
 * });
 * ```
 *
 * ## Import
 *
 * RAM Login Profile can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ram/loginProfile:LoginProfile example <id>
 * ```
 */
export class LoginProfile extends pulumi.CustomResource {
    /**
     * Get an existing LoginProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoginProfileState, opts?: pulumi.CustomResourceOptions): LoginProfile {
        return new LoginProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ram/loginProfile:LoginProfile';

    /**
     * Returns true if the given object is an instance of LoginProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoginProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoginProfile.__pulumiType;
    }

    /**
     * Creation time.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Specifies whether to forcefully enable multi-factor authentication (MFA) for the RAM user. Valid values:
     * - true: forcefully enables MFA for the RAM user. The RAM user must bind an MFA device upon the next logon.
     * - false (default): does not forcefully enable MFA for the RAM user.
     */
    declare public readonly mfaBindRequired: pulumi.Output<boolean>;
    /**
     * The password must meet the Password strength requirements. For more information about password strength setting requirements, see [GetPasswordPolicy](https://help.aliyun.com/document_detail/2337691.html).
     */
    declare public readonly password: pulumi.Output<string>;
    /**
     * Whether the user must reset the password at the next logon. Value:
     * - true
     * - false (default)
     */
    declare public readonly passwordResetRequired: pulumi.Output<boolean | undefined>;
    /**
     * The user name.
     */
    declare public readonly userName: pulumi.Output<string>;

    /**
     * Create a LoginProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoginProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoginProfileArgs | LoginProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoginProfileState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["mfaBindRequired"] = state?.mfaBindRequired;
            resourceInputs["password"] = state?.password;
            resourceInputs["passwordResetRequired"] = state?.passwordResetRequired;
            resourceInputs["userName"] = state?.userName;
        } else {
            const args = argsOrState as LoginProfileArgs | undefined;
            if (args?.password === undefined && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if (args?.userName === undefined && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["mfaBindRequired"] = args?.mfaBindRequired;
            resourceInputs["password"] = args?.password;
            resourceInputs["passwordResetRequired"] = args?.passwordResetRequired;
            resourceInputs["userName"] = args?.userName;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoginProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoginProfile resources.
 */
export interface LoginProfileState {
    /**
     * Creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specifies whether to forcefully enable multi-factor authentication (MFA) for the RAM user. Valid values:
     * - true: forcefully enables MFA for the RAM user. The RAM user must bind an MFA device upon the next logon.
     * - false (default): does not forcefully enable MFA for the RAM user.
     */
    mfaBindRequired?: pulumi.Input<boolean>;
    /**
     * The password must meet the Password strength requirements. For more information about password strength setting requirements, see [GetPasswordPolicy](https://help.aliyun.com/document_detail/2337691.html).
     */
    password?: pulumi.Input<string>;
    /**
     * Whether the user must reset the password at the next logon. Value:
     * - true
     * - false (default)
     */
    passwordResetRequired?: pulumi.Input<boolean>;
    /**
     * The user name.
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoginProfile resource.
 */
export interface LoginProfileArgs {
    /**
     * Specifies whether to forcefully enable multi-factor authentication (MFA) for the RAM user. Valid values:
     * - true: forcefully enables MFA for the RAM user. The RAM user must bind an MFA device upon the next logon.
     * - false (default): does not forcefully enable MFA for the RAM user.
     */
    mfaBindRequired?: pulumi.Input<boolean>;
    /**
     * The password must meet the Password strength requirements. For more information about password strength setting requirements, see [GetPasswordPolicy](https://help.aliyun.com/document_detail/2337691.html).
     */
    password: pulumi.Input<string>;
    /**
     * Whether the user must reset the password at the next logon. Value:
     * - true
     * - false (default)
     */
    passwordResetRequired?: pulumi.Input<boolean>;
    /**
     * The user name.
     */
    userName: pulumi.Input<string>;
}
