// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RAM User Login Profile resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * // Create a RAM login profile.
 * const user = new alicloud.ram.User("user", {
 *     displayName: "user_display_name",
 *     mobile: "86-18688888888",
 *     email: "hello.uuu@aaa.com",
 *     comments: "yoyoyo",
 *     force: true,
 * });
 * const profile = new alicloud.ram.LoginProfile("profile", {
 *     userName: user.name,
 *     password: "Yourpassword1234",
 * });
 * ```
 *
 * ## Import
 *
 * RAM login profile can be imported using the id or user name, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ram/loginProfile:LoginProfile example my-login
 * ```
 */
export class LoginProfile extends pulumi.CustomResource {
    /**
     * Get an existing LoginProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoginProfileState, opts?: pulumi.CustomResourceOptions): LoginProfile {
        return new LoginProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ram/loginProfile:LoginProfile';

    /**
     * Returns true if the given object is an instance of LoginProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoginProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoginProfile.__pulumiType;
    }

    /**
     * This parameter indicates whether the MFA needs to be bind when the user first logs in. Default value is `false`.
     */
    public readonly mfaBindRequired!: pulumi.Output<boolean | undefined>;
    /**
     * Password of the RAM user.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * This parameter indicates whether the password needs to be reset when the user first logs in. Default value is `false`.
     */
    public readonly passwordResetRequired!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a LoginProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoginProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoginProfileArgs | LoginProfileState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as LoginProfileState | undefined;
            inputs["mfaBindRequired"] = state ? state.mfaBindRequired : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["passwordResetRequired"] = state ? state.passwordResetRequired : undefined;
            inputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as LoginProfileArgs | undefined;
            if (!args || args.password === undefined) {
                throw new Error("Missing required property 'password'");
            }
            if (!args || args.userName === undefined) {
                throw new Error("Missing required property 'userName'");
            }
            inputs["mfaBindRequired"] = args ? args.mfaBindRequired : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["passwordResetRequired"] = args ? args.passwordResetRequired : undefined;
            inputs["userName"] = args ? args.userName : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(LoginProfile.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoginProfile resources.
 */
export interface LoginProfileState {
    /**
     * This parameter indicates whether the MFA needs to be bind when the user first logs in. Default value is `false`.
     */
    readonly mfaBindRequired?: pulumi.Input<boolean>;
    /**
     * Password of the RAM user.
     */
    readonly password?: pulumi.Input<string>;
    /**
     * This parameter indicates whether the password needs to be reset when the user first logs in. Default value is `false`.
     */
    readonly passwordResetRequired?: pulumi.Input<boolean>;
    /**
     * Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
     */
    readonly userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoginProfile resource.
 */
export interface LoginProfileArgs {
    /**
     * This parameter indicates whether the MFA needs to be bind when the user first logs in. Default value is `false`.
     */
    readonly mfaBindRequired?: pulumi.Input<boolean>;
    /**
     * Password of the RAM user.
     */
    readonly password: pulumi.Input<string>;
    /**
     * This parameter indicates whether the password needs to be reset when the user first logs in. Default value is `false`.
     */
    readonly passwordResetRequired?: pulumi.Input<boolean>;
    /**
     * Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
     */
    readonly userName: pulumi.Input<string>;
}
