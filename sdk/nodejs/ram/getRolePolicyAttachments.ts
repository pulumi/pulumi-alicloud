// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Ram Role Policy Attachment available to the user.[What is Role Policy Attachment](https://next.api.alibabacloud.com/document/Ram/2015-05-01/AttachPolicyToRole)
 *
 * > **NOTE:** Available since v1.248.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const role = new alicloud.ram.Role("role", {
 *     name: "roleName",
 *     document: `    {
 *       "Statement": [
 *         {
 *           "Action": "sts:AssumeRole",
 *           "Effect": "Allow",
 *           "Principal": {
 *             "Service": [
 *               "apigateway.aliyuncs.com", 
 *               "ecs.aliyuncs.com"
 *             ]
 *           }
 *         }
 *       ],
 *       "Version": "1"
 *     }
 * `,
 *     description: "this is a role test.",
 * });
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const policy = new alicloud.ram.Policy("policy", {
 *     policyName: `tf-example-${defaultInteger.result}`,
 *     policyDocument: `  {
 *     "Statement": [
 *       {
 *         "Action": [
 *           "oss:ListObjects",
 *           "oss:GetObject"
 *         ],
 *         "Effect": "Allow",
 *         "Resource": [
 *           "acs:oss:*:*:mybucket",
 *           "acs:oss:*:*:mybucket/*"
 *         ]
 *       }
 *     ],
 *       "Version": "1"
 *   }
 * `,
 *     description: "this is a policy test",
 * });
 * const defaultRolePolicyAttachment = new alicloud.ram.RolePolicyAttachment("default", {
 *     policyName: policy.policyName,
 *     policyType: policy.type,
 *     roleName: role.name,
 * });
 * const _default = alicloud.ram.getRolePolicyAttachmentsOutput({
 *     ids: [defaultRolePolicyAttachment.id],
 *     roleName: role.id,
 * });
 * export const alicloudRamRolePolicyAttachmentExampleId = _default.apply(_default => _default.attachments?.[0]?.id);
 * ```
 */
export function getRolePolicyAttachments(args: GetRolePolicyAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetRolePolicyAttachmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ram/getRolePolicyAttachments:getRolePolicyAttachments", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "roleName": args.roleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getRolePolicyAttachments.
 */
export interface GetRolePolicyAttachmentsArgs {
    /**
     * A list of Role Policy Attachment IDs. The value is formulated as `role:<policy_name>:<policy_type>:<role_name>`.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The RAM role name.
     */
    roleName: string;
}

/**
 * A collection of values returned by getRolePolicyAttachments.
 */
export interface GetRolePolicyAttachmentsResult {
    /**
     * A list of Role Policy Attachment Entries. Each element contains the following attributes:
     */
    readonly attachments: outputs.ram.GetRolePolicyAttachmentsAttachment[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of Role Policy Attachment IDs.
     */
    readonly ids: string[];
    readonly outputFile?: string;
    readonly roleName: string;
}
/**
 * This data source provides Ram Role Policy Attachment available to the user.[What is Role Policy Attachment](https://next.api.alibabacloud.com/document/Ram/2015-05-01/AttachPolicyToRole)
 *
 * > **NOTE:** Available since v1.248.0.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const role = new alicloud.ram.Role("role", {
 *     name: "roleName",
 *     document: `    {
 *       "Statement": [
 *         {
 *           "Action": "sts:AssumeRole",
 *           "Effect": "Allow",
 *           "Principal": {
 *             "Service": [
 *               "apigateway.aliyuncs.com", 
 *               "ecs.aliyuncs.com"
 *             ]
 *           }
 *         }
 *       ],
 *       "Version": "1"
 *     }
 * `,
 *     description: "this is a role test.",
 * });
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const policy = new alicloud.ram.Policy("policy", {
 *     policyName: `tf-example-${defaultInteger.result}`,
 *     policyDocument: `  {
 *     "Statement": [
 *       {
 *         "Action": [
 *           "oss:ListObjects",
 *           "oss:GetObject"
 *         ],
 *         "Effect": "Allow",
 *         "Resource": [
 *           "acs:oss:*:*:mybucket",
 *           "acs:oss:*:*:mybucket/*"
 *         ]
 *       }
 *     ],
 *       "Version": "1"
 *   }
 * `,
 *     description: "this is a policy test",
 * });
 * const defaultRolePolicyAttachment = new alicloud.ram.RolePolicyAttachment("default", {
 *     policyName: policy.policyName,
 *     policyType: policy.type,
 *     roleName: role.name,
 * });
 * const _default = alicloud.ram.getRolePolicyAttachmentsOutput({
 *     ids: [defaultRolePolicyAttachment.id],
 *     roleName: role.id,
 * });
 * export const alicloudRamRolePolicyAttachmentExampleId = _default.apply(_default => _default.attachments?.[0]?.id);
 * ```
 */
export function getRolePolicyAttachmentsOutput(args: GetRolePolicyAttachmentsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRolePolicyAttachmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:ram/getRolePolicyAttachments:getRolePolicyAttachments", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "roleName": args.roleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getRolePolicyAttachments.
 */
export interface GetRolePolicyAttachmentsOutputArgs {
    /**
     * A list of Role Policy Attachment IDs. The value is formulated as `role:<policy_name>:<policy_type>:<role_name>`.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The RAM role name.
     */
    roleName: pulumi.Input<string>;
}
