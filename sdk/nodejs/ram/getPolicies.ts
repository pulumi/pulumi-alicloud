// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available since v1.0.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const policiesDs = alicloud.ram.getPolicies({
 *     groupName: "group1",
 *     outputFile: "policies.txt",
 *     type: "System",
 *     userName: "user1",
 * });
 * export const firstPolicyName = policiesDs.then(policiesDs => policiesDs.policies?.[0]?.name);
 * ```
 */
export function getPolicies(args?: GetPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetPoliciesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:ram/getPolicies:getPolicies", {
        "enableDetails": args.enableDetails,
        "groupName": args.groupName,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "roleName": args.roleName,
        "type": args.type,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicies.
 */
export interface GetPoliciesArgs {
    /**
     * Default to `true`. Set it to true can output more details.
     */
    enableDetails?: boolean;
    /**
     * Filter results by a specific group name. Returned policies are attached to the specified group.
     */
    groupName?: string;
    /**
     * A list of ram group IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter resulting policies by name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * Filter results by a specific role name. Returned policies are attached to the specified role.
     */
    roleName?: string;
    /**
     * Filter results by a specific policy type. Valid values are `Custom` and `System`.
     */
    type?: string;
    /**
     * Filter results by a specific user name. Returned policies are attached to the specified user.
     */
    userName?: string;
}

/**
 * A collection of values returned by getPolicies.
 */
export interface GetPoliciesResult {
    readonly enableDetails?: boolean;
    readonly groupName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of ram group names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * A list of policies. Each element contains the following attributes:
     */
    readonly policies: outputs.ram.GetPoliciesPolicy[];
    readonly roleName?: string;
    /**
     * Type of the policy.
     */
    readonly type?: string;
    /**
     * The user name of  policy.
     */
    readonly userName?: string;
}
/**
 * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available since v1.0.0+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const policiesDs = alicloud.ram.getPolicies({
 *     groupName: "group1",
 *     outputFile: "policies.txt",
 *     type: "System",
 *     userName: "user1",
 * });
 * export const firstPolicyName = policiesDs.then(policiesDs => policiesDs.policies?.[0]?.name);
 * ```
 */
export function getPoliciesOutput(args?: GetPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getPolicies.
 */
export interface GetPoliciesOutputArgs {
    /**
     * Default to `true`. Set it to true can output more details.
     */
    enableDetails?: pulumi.Input<boolean>;
    /**
     * Filter results by a specific group name. Returned policies are attached to the specified group.
     */
    groupName?: pulumi.Input<string>;
    /**
     * A list of ram group IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter resulting policies by name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Filter results by a specific role name. Returned policies are attached to the specified role.
     */
    roleName?: pulumi.Input<string>;
    /**
     * Filter results by a specific policy type. Valid values are `Custom` and `System`.
     */
    type?: pulumi.Input<string>;
    /**
     * Filter results by a specific user name. Returned policies are attached to the specified user.
     */
    userName?: pulumi.Input<string>;
}
