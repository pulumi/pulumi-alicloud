// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a FCV3 Layer Version resource.
 *
 * Layer provides you with the ability to publish and deploy common dependency libraries, runtime environments, and function extensions.
 *
 * For information about FCV3 Layer Version and how to use it, see [What is Layer Version](https://www.alibabacloud.com/help/en/functioncompute/api-fc-2023-03-30-createlayerversion).
 *
 * > **NOTE:** Available since v1.230.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.fc.V3LayerVersion("default", {
 *     description: name,
 *     layerName: "FC3LayerResouceTest_ZIP_2024SepWed",
 *     license: "Apache2.0",
 *     acl: "0",
 *     code: {
 *         zipFile: "UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * FCV3 Layer Version can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:fc/v3LayerVersion:V3LayerVersion example <layer_name>:<version>
 * ```
 */
export class V3LayerVersion extends pulumi.CustomResource {
    /**
     * Get an existing V3LayerVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: V3LayerVersionState, opts?: pulumi.CustomResourceOptions): V3LayerVersion {
        return new V3LayerVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:fc/v3LayerVersion:V3LayerVersion';

    /**
     * Returns true if the given object is an instance of V3LayerVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is V3LayerVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V3LayerVersion.__pulumiType;
    }

    /**
     * The access permission of the layer, 1: public, 0: private, default is private
     */
    declare public readonly acl: pulumi.Output<string | undefined>;
    /**
     * Layer code configuration See `code` below.
     */
    declare public readonly code: pulumi.Output<outputs.fc.V3LayerVersionCode | undefined>;
    /**
     * (Available since v1.234.0) The code package size of the layer, in bytes.
     */
    declare public /*out*/ readonly codeSize: pulumi.Output<string>;
    /**
     * List of runtime environments supported by the layer
     */
    declare public readonly compatibleRuntimes: pulumi.Output<string[]>;
    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Description of the version
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the layer
     */
    declare public readonly layerName: pulumi.Output<string>;
    /**
     * (Available since v1.234.0) Layer version ARN. The format is acs:fc:{region }:{ accountID}:layers/{layerName}/versions/{layerVersion}.
     */
    declare public /*out*/ readonly layerVersionArn: pulumi.Output<string>;
    /**
     * Layer License Agreement
     */
    declare public readonly license: pulumi.Output<string | undefined>;
    /**
     * Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
     */
    declare public readonly public: pulumi.Output<string | undefined>;
    /**
     * The version of the layer
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a V3LayerVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: V3LayerVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: V3LayerVersionArgs | V3LayerVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as V3LayerVersionState | undefined;
            resourceInputs["acl"] = state?.acl;
            resourceInputs["code"] = state?.code;
            resourceInputs["codeSize"] = state?.codeSize;
            resourceInputs["compatibleRuntimes"] = state?.compatibleRuntimes;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["layerName"] = state?.layerName;
            resourceInputs["layerVersionArn"] = state?.layerVersionArn;
            resourceInputs["license"] = state?.license;
            resourceInputs["public"] = state?.public;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as V3LayerVersionArgs | undefined;
            if (args?.layerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'layerName'");
            }
            resourceInputs["acl"] = args?.acl;
            resourceInputs["code"] = args?.code;
            resourceInputs["compatibleRuntimes"] = args?.compatibleRuntimes;
            resourceInputs["description"] = args?.description;
            resourceInputs["layerName"] = args?.layerName;
            resourceInputs["license"] = args?.license;
            resourceInputs["public"] = args?.public;
            resourceInputs["codeSize"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["layerVersionArn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V3LayerVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering V3LayerVersion resources.
 */
export interface V3LayerVersionState {
    /**
     * The access permission of the layer, 1: public, 0: private, default is private
     */
    acl?: pulumi.Input<string>;
    /**
     * Layer code configuration See `code` below.
     */
    code?: pulumi.Input<inputs.fc.V3LayerVersionCode>;
    /**
     * (Available since v1.234.0) The code package size of the layer, in bytes.
     */
    codeSize?: pulumi.Input<string>;
    /**
     * List of runtime environments supported by the layer
     */
    compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the version
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the layer
     */
    layerName?: pulumi.Input<string>;
    /**
     * (Available since v1.234.0) Layer version ARN. The format is acs:fc:{region }:{ accountID}:layers/{layerName}/versions/{layerVersion}.
     */
    layerVersionArn?: pulumi.Input<string>;
    /**
     * Layer License Agreement
     */
    license?: pulumi.Input<string>;
    /**
     * Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
     */
    public?: pulumi.Input<string>;
    /**
     * The version of the layer
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a V3LayerVersion resource.
 */
export interface V3LayerVersionArgs {
    /**
     * The access permission of the layer, 1: public, 0: private, default is private
     */
    acl?: pulumi.Input<string>;
    /**
     * Layer code configuration See `code` below.
     */
    code?: pulumi.Input<inputs.fc.V3LayerVersionCode>;
    /**
     * List of runtime environments supported by the layer
     */
    compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the version
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the layer
     */
    layerName: pulumi.Input<string>;
    /**
     * Layer License Agreement
     */
    license?: pulumi.Input<string>;
    /**
     * Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
     */
    public?: pulumi.Input<string>;
}
