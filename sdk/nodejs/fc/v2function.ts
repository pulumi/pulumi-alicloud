// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a FCV2 Function resource. Function is the unit of system scheduling and operation. Functions must be subordinate to services. All functions under the same service share some identical settings, such as service authorization and log configuration.
 *
 * For information about FCV2 Function and how to use it, see [What is Function](https://www.alibabacloud.com/help/en/resource-orchestration-service/latest/aliyun-fc-function).
 *
 * > **NOTE:** Available since v1.208.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultProject = new alicloud.log.Project("defaultProject", {description: name});
 * const defaultStore = new alicloud.log.Store("defaultStore", {
 *     project: defaultProject.name,
 *     retentionPeriod: 3000,
 *     shardCount: 1,
 * });
 * const defaultRole = new alicloud.ram.Role("defaultRole", {
 *     document: `  {
 *       "Statement": [
 *         {
 *           "Action": "sts:AssumeRole",
 *           "Effect": "Allow",
 *           "Principal": {
 *             "Service": [
 *               "fc.aliyuncs.com"
 *             ]
 *           }
 *         }
 *       ],
 *       "Version": "1"
 *   }
 * `,
 *     description: name,
 *     force: true,
 * });
 * const defaultRolePolicyAttachment = new alicloud.ram.RolePolicyAttachment("defaultRolePolicyAttachment", {
 *     roleName: defaultRole.name,
 *     policyName: "AliyunLogFullAccess",
 *     policyType: "System",
 * });
 * const defaultService = new alicloud.fc.Service("defaultService", {
 *     description: name,
 *     logConfig: {
 *         project: defaultProject.name,
 *         logstore: defaultStore.name,
 *     },
 *     role: defaultRole.arn,
 * });
 * const defaultV2Function = new alicloud.fc.V2Function("defaultV2Function", {
 *     functionName: name,
 *     memorySize: 1024,
 *     runtime: "custom.debian10",
 *     description: name,
 *     serviceName: defaultService.name,
 *     initializer: "index.initializer",
 *     initializationTimeout: 10,
 *     timeout: 60,
 *     handler: "index.handler",
 *     instanceType: "e1",
 *     instanceLifecycleConfig: {
 *         preFreeze: {
 *             handler: "index.prefreeze",
 *             timeout: 30,
 *         },
 *         preStop: {
 *             handler: "index.prestop",
 *             timeout: 30,
 *         },
 *     },
 *     code: {
 *         ossBucketName: "code-sample-cn-hangzhou",
 *         ossObjectName: "quick-start-sample-codes/quick-start-sample-codes-nodejs/RocketMQ-producer-nodejs14-event/code.zip",
 *     },
 *     customDns: {
 *         nameServers: ["223.5.5.5"],
 *         searches: ["mydomain.com"],
 *         dnsOptions: [{
 *             name: name,
 *             value: "1",
 *         }],
 *     },
 *     diskSize: 512,
 *     instanceConcurrency: 10,
 *     layers: [
 *         "d3fc5de8d120687be2bfab761518d5de#Nodejs-Aliyun-SDK#2",
 *         "d3fc5de8d120687be2bfab761518d5de#Python39#2",
 *     ],
 *     cpu: 1,
 *     customHealthCheckConfig: {
 *         httpGetUrl: "/healthcheck",
 *         initialDelaySeconds: 3,
 *         periodSeconds: 3,
 *         timeoutSeconds: 3,
 *         failureThreshold: 1,
 *         successThreshold: 1,
 *     },
 *     caPort: 9000,
 *     customRuntimeConfig: {
 *         commands: ["npm"],
 *         args: [
 *             "run",
 *             "start",
 *         ],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * FCV2 Function can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:fc/v2Function:V2Function example <service_name>:<function_name>
 * ```
 */
export class V2Function extends pulumi.CustomResource {
    /**
     * Get an existing V2Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: V2FunctionState, opts?: pulumi.CustomResourceOptions): V2Function {
        return new V2Function(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:fc/v2Function:V2Function';

    /**
     * Returns true if the given object is an instance of V2Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is V2Function {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V2Function.__pulumiType;
    }

    /**
     * The listening port of the HTTP Server when the Custom Runtime or Custom Container is running.
     */
    public readonly caPort!: pulumi.Output<number>;
    /**
     * Function Code ZIP package. code and customContainerConfig choose one. See `code` below.
     */
    public readonly code!: pulumi.Output<outputs.fc.V2FunctionCode | undefined>;
    /**
     * crc64 of function code.
     */
    public readonly codeChecksum!: pulumi.Output<string>;
    /**
     * The CPU specification of the function. The unit is vCPU, which is a multiple of the 0.05 vCPU.
     */
    public readonly cpu!: pulumi.Output<number | undefined>;
    /**
     * create time of function.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Custom-container runtime related function configuration. See `customContainerConfig` below.
     */
    public readonly customContainerConfig!: pulumi.Output<outputs.fc.V2FunctionCustomContainerConfig | undefined>;
    /**
     * Function custom DNS configuration. See `customDns` below.
     */
    public readonly customDns!: pulumi.Output<outputs.fc.V2FunctionCustomDns | undefined>;
    /**
     * Custom runtime/container Custom health check configuration. See `customHealthCheckConfig` below.
     */
    public readonly customHealthCheckConfig!: pulumi.Output<outputs.fc.V2FunctionCustomHealthCheckConfig | undefined>;
    /**
     * Detailed configuration of Custom Runtime function. See `customRuntimeConfig` below.
     */
    public readonly customRuntimeConfig!: pulumi.Output<outputs.fc.V2FunctionCustomRuntimeConfig | undefined>;
    /**
     * description of function.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The disk specification of the function. The unit is MB. The optional value is 512 MB or 10240MB.
     */
    public readonly diskSize!: pulumi.Output<number | undefined>;
    /**
     * The environment variable set for the function can get the value of the environment variable in the function. For more information, see Environment Variables.
     */
    public readonly environmentVariables!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * function name.
     */
    public readonly functionName!: pulumi.Output<string>;
    /**
     * The GPU memory specification of the function, in MB, is a multiple of 1024MB.
     */
    public readonly gpuMemorySize!: pulumi.Output<number | undefined>;
    /**
     * entry point of function.
     */
    public readonly handler!: pulumi.Output<string>;
    /**
     * max running time of initializer.
     */
    public readonly initializationTimeout!: pulumi.Output<number>;
    /**
     * initializer entry point of function.
     */
    public readonly initializer!: pulumi.Output<string | undefined>;
    /**
     * The maximum concurrency allowed for a single function instance.
     */
    public readonly instanceConcurrency!: pulumi.Output<number>;
    /**
     * Instance lifecycle configuration. See `instanceLifecycleConfig` below.
     */
    public readonly instanceLifecycleConfig!: pulumi.Output<outputs.fc.V2FunctionInstanceLifecycleConfig | undefined>;
    /**
     * The instance type of the function. Valid values:
     * - **e1**: Elastic instance.
     * - **c1**: performance instance.
     * - **fc.gpu.tesla.1**: the T4 card type of the Tesla series of GPU instances.
     * - **fc.gpu.ampere.1**: The Ampere series A10 card type of the GPU instance.
     * - **g1**: Same as **fc.gpu.tesla.1**.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * List of layers.
     * > **NOTE:**  Multiple layers will be merged in the order of array subscripts from large to small, and the contents of layers with small subscripts will overwrite the files with the same name of layers with large subscripts.
     */
    public readonly layers!: pulumi.Output<string[] | undefined>;
    /**
     * memory size needed by function.
     */
    public readonly memorySize!: pulumi.Output<number>;
    /**
     * runtime of function code.
     */
    public readonly runtime!: pulumi.Output<string>;
    /**
     * The name of the function Service.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * max running time of function.
     */
    public readonly timeout!: pulumi.Output<number>;

    /**
     * Create a V2Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: V2FunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: V2FunctionArgs | V2FunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as V2FunctionState | undefined;
            resourceInputs["caPort"] = state ? state.caPort : undefined;
            resourceInputs["code"] = state ? state.code : undefined;
            resourceInputs["codeChecksum"] = state ? state.codeChecksum : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customContainerConfig"] = state ? state.customContainerConfig : undefined;
            resourceInputs["customDns"] = state ? state.customDns : undefined;
            resourceInputs["customHealthCheckConfig"] = state ? state.customHealthCheckConfig : undefined;
            resourceInputs["customRuntimeConfig"] = state ? state.customRuntimeConfig : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["functionName"] = state ? state.functionName : undefined;
            resourceInputs["gpuMemorySize"] = state ? state.gpuMemorySize : undefined;
            resourceInputs["handler"] = state ? state.handler : undefined;
            resourceInputs["initializationTimeout"] = state ? state.initializationTimeout : undefined;
            resourceInputs["initializer"] = state ? state.initializer : undefined;
            resourceInputs["instanceConcurrency"] = state ? state.instanceConcurrency : undefined;
            resourceInputs["instanceLifecycleConfig"] = state ? state.instanceLifecycleConfig : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["layers"] = state ? state.layers : undefined;
            resourceInputs["memorySize"] = state ? state.memorySize : undefined;
            resourceInputs["runtime"] = state ? state.runtime : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
        } else {
            const args = argsOrState as V2FunctionArgs | undefined;
            if ((!args || args.functionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionName'");
            }
            if ((!args || args.handler === undefined) && !opts.urn) {
                throw new Error("Missing required property 'handler'");
            }
            if ((!args || args.runtime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["caPort"] = args ? args.caPort : undefined;
            resourceInputs["code"] = args ? args.code : undefined;
            resourceInputs["codeChecksum"] = args ? args.codeChecksum : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["customContainerConfig"] = args ? args.customContainerConfig : undefined;
            resourceInputs["customDns"] = args ? args.customDns : undefined;
            resourceInputs["customHealthCheckConfig"] = args ? args.customHealthCheckConfig : undefined;
            resourceInputs["customRuntimeConfig"] = args ? args.customRuntimeConfig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["functionName"] = args ? args.functionName : undefined;
            resourceInputs["gpuMemorySize"] = args ? args.gpuMemorySize : undefined;
            resourceInputs["handler"] = args ? args.handler : undefined;
            resourceInputs["initializationTimeout"] = args ? args.initializationTimeout : undefined;
            resourceInputs["initializer"] = args ? args.initializer : undefined;
            resourceInputs["instanceConcurrency"] = args ? args.instanceConcurrency : undefined;
            resourceInputs["instanceLifecycleConfig"] = args ? args.instanceLifecycleConfig : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["layers"] = args ? args.layers : undefined;
            resourceInputs["memorySize"] = args ? args.memorySize : undefined;
            resourceInputs["runtime"] = args ? args.runtime : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V2Function.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering V2Function resources.
 */
export interface V2FunctionState {
    /**
     * The listening port of the HTTP Server when the Custom Runtime or Custom Container is running.
     */
    caPort?: pulumi.Input<number>;
    /**
     * Function Code ZIP package. code and customContainerConfig choose one. See `code` below.
     */
    code?: pulumi.Input<inputs.fc.V2FunctionCode>;
    /**
     * crc64 of function code.
     */
    codeChecksum?: pulumi.Input<string>;
    /**
     * The CPU specification of the function. The unit is vCPU, which is a multiple of the 0.05 vCPU.
     */
    cpu?: pulumi.Input<number>;
    /**
     * create time of function.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Custom-container runtime related function configuration. See `customContainerConfig` below.
     */
    customContainerConfig?: pulumi.Input<inputs.fc.V2FunctionCustomContainerConfig>;
    /**
     * Function custom DNS configuration. See `customDns` below.
     */
    customDns?: pulumi.Input<inputs.fc.V2FunctionCustomDns>;
    /**
     * Custom runtime/container Custom health check configuration. See `customHealthCheckConfig` below.
     */
    customHealthCheckConfig?: pulumi.Input<inputs.fc.V2FunctionCustomHealthCheckConfig>;
    /**
     * Detailed configuration of Custom Runtime function. See `customRuntimeConfig` below.
     */
    customRuntimeConfig?: pulumi.Input<inputs.fc.V2FunctionCustomRuntimeConfig>;
    /**
     * description of function.
     */
    description?: pulumi.Input<string>;
    /**
     * The disk specification of the function. The unit is MB. The optional value is 512 MB or 10240MB.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The environment variable set for the function can get the value of the environment variable in the function. For more information, see Environment Variables.
     */
    environmentVariables?: pulumi.Input<{[key: string]: any}>;
    /**
     * function name.
     */
    functionName?: pulumi.Input<string>;
    /**
     * The GPU memory specification of the function, in MB, is a multiple of 1024MB.
     */
    gpuMemorySize?: pulumi.Input<number>;
    /**
     * entry point of function.
     */
    handler?: pulumi.Input<string>;
    /**
     * max running time of initializer.
     */
    initializationTimeout?: pulumi.Input<number>;
    /**
     * initializer entry point of function.
     */
    initializer?: pulumi.Input<string>;
    /**
     * The maximum concurrency allowed for a single function instance.
     */
    instanceConcurrency?: pulumi.Input<number>;
    /**
     * Instance lifecycle configuration. See `instanceLifecycleConfig` below.
     */
    instanceLifecycleConfig?: pulumi.Input<inputs.fc.V2FunctionInstanceLifecycleConfig>;
    /**
     * The instance type of the function. Valid values:
     * - **e1**: Elastic instance.
     * - **c1**: performance instance.
     * - **fc.gpu.tesla.1**: the T4 card type of the Tesla series of GPU instances.
     * - **fc.gpu.ampere.1**: The Ampere series A10 card type of the GPU instance.
     * - **g1**: Same as **fc.gpu.tesla.1**.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * List of layers.
     * > **NOTE:**  Multiple layers will be merged in the order of array subscripts from large to small, and the contents of layers with small subscripts will overwrite the files with the same name of layers with large subscripts.
     */
    layers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * memory size needed by function.
     */
    memorySize?: pulumi.Input<number>;
    /**
     * runtime of function code.
     */
    runtime?: pulumi.Input<string>;
    /**
     * The name of the function Service.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * max running time of function.
     */
    timeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a V2Function resource.
 */
export interface V2FunctionArgs {
    /**
     * The listening port of the HTTP Server when the Custom Runtime or Custom Container is running.
     */
    caPort?: pulumi.Input<number>;
    /**
     * Function Code ZIP package. code and customContainerConfig choose one. See `code` below.
     */
    code?: pulumi.Input<inputs.fc.V2FunctionCode>;
    /**
     * crc64 of function code.
     */
    codeChecksum?: pulumi.Input<string>;
    /**
     * The CPU specification of the function. The unit is vCPU, which is a multiple of the 0.05 vCPU.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Custom-container runtime related function configuration. See `customContainerConfig` below.
     */
    customContainerConfig?: pulumi.Input<inputs.fc.V2FunctionCustomContainerConfig>;
    /**
     * Function custom DNS configuration. See `customDns` below.
     */
    customDns?: pulumi.Input<inputs.fc.V2FunctionCustomDns>;
    /**
     * Custom runtime/container Custom health check configuration. See `customHealthCheckConfig` below.
     */
    customHealthCheckConfig?: pulumi.Input<inputs.fc.V2FunctionCustomHealthCheckConfig>;
    /**
     * Detailed configuration of Custom Runtime function. See `customRuntimeConfig` below.
     */
    customRuntimeConfig?: pulumi.Input<inputs.fc.V2FunctionCustomRuntimeConfig>;
    /**
     * description of function.
     */
    description?: pulumi.Input<string>;
    /**
     * The disk specification of the function. The unit is MB. The optional value is 512 MB or 10240MB.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The environment variable set for the function can get the value of the environment variable in the function. For more information, see Environment Variables.
     */
    environmentVariables?: pulumi.Input<{[key: string]: any}>;
    /**
     * function name.
     */
    functionName: pulumi.Input<string>;
    /**
     * The GPU memory specification of the function, in MB, is a multiple of 1024MB.
     */
    gpuMemorySize?: pulumi.Input<number>;
    /**
     * entry point of function.
     */
    handler: pulumi.Input<string>;
    /**
     * max running time of initializer.
     */
    initializationTimeout?: pulumi.Input<number>;
    /**
     * initializer entry point of function.
     */
    initializer?: pulumi.Input<string>;
    /**
     * The maximum concurrency allowed for a single function instance.
     */
    instanceConcurrency?: pulumi.Input<number>;
    /**
     * Instance lifecycle configuration. See `instanceLifecycleConfig` below.
     */
    instanceLifecycleConfig?: pulumi.Input<inputs.fc.V2FunctionInstanceLifecycleConfig>;
    /**
     * The instance type of the function. Valid values:
     * - **e1**: Elastic instance.
     * - **c1**: performance instance.
     * - **fc.gpu.tesla.1**: the T4 card type of the Tesla series of GPU instances.
     * - **fc.gpu.ampere.1**: The Ampere series A10 card type of the GPU instance.
     * - **g1**: Same as **fc.gpu.tesla.1**.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * List of layers.
     * > **NOTE:**  Multiple layers will be merged in the order of array subscripts from large to small, and the contents of layers with small subscripts will overwrite the files with the same name of layers with large subscripts.
     */
    layers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * memory size needed by function.
     */
    memorySize?: pulumi.Input<number>;
    /**
     * runtime of function code.
     */
    runtime: pulumi.Input<string>;
    /**
     * The name of the function Service.
     */
    serviceName: pulumi.Input<string>;
    /**
     * max running time of function.
     */
    timeout?: pulumi.Input<number>;
}
