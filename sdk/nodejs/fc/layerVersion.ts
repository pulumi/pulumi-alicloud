// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const _default = new random.index.Integer("default", {
 *     max: 99999,
 *     min: 10000,
 * });
 * const defaultBucket = new alicloud.oss.Bucket("default", {bucket: `terraform-example-${_default.result}`});
 * // If you upload the function by OSS Bucket, you need to specify path can't upload by content.
 * const defaultBucketObject = new alicloud.oss.BucketObject("default", {
 *     bucket: defaultBucket.id,
 *     key: "index.py",
 *     content: `import logging 
 * def handler(event, context): 
 * logger = logging.getLogger() 
 * logger.info('hello world') 
 * return 'hello world'`,
 * });
 * const example = new alicloud.fc.LayerVersion("example", {
 *     layerName: `terraform-example-${_default.result}`,
 *     compatibleRuntimes: ["python2.7"],
 *     ossBucketName: defaultBucket.bucket,
 *     ossObjectName: defaultBucketObject.key,
 * });
 * ```
 *
 * ## Import
 *
 * Function Compute Layer Version can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:fc/layerVersion:LayerVersion example my_function
 * ```
 */
export class LayerVersion extends pulumi.CustomResource {
    /**
     * Get an existing LayerVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LayerVersionState, opts?: pulumi.CustomResourceOptions): LayerVersion {
        return new LayerVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:fc/layerVersion:LayerVersion';

    /**
     * Returns true if the given object is an instance of LayerVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LayerVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LayerVersion.__pulumiType;
    }

    /**
     * The access mode of Layer Version.
     */
    declare public /*out*/ readonly acl: pulumi.Output<string>;
    /**
     * The arn of Layer Version.
     */
    declare public /*out*/ readonly arn: pulumi.Output<string>;
    /**
     * The checksum of the layer code package.
     */
    declare public /*out*/ readonly codeCheckSum: pulumi.Output<string>;
    /**
     * The list of runtime environments that are supported by the layer. Valid values: `nodejs14`, `nodejs12`, `nodejs10`, `nodejs8`, `nodejs6`, `python3.9`, `python3`, `python2.7`, `java11`, `java8`, `php7.2`, `go1`,`dotnetcore2.1`, `custom`.
     */
    declare public readonly compatibleRuntimes: pulumi.Output<string[]>;
    /**
     * The description of the layer version.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the layer.
     */
    declare public readonly layerName: pulumi.Output<string>;
    /**
     * The name of the OSS bucket that stores the ZIP package of the function code.
     */
    declare public readonly ossBucketName: pulumi.Output<string | undefined>;
    /**
     * The name of the OSS object (ZIP package) that contains the function code.
     */
    declare public readonly ossObjectName: pulumi.Output<string | undefined>;
    /**
     * Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatibleRuntimes`, `description`, `layerName`, `ossBucketName`,  `ossObjectName`, or `zipFile` forces deletion of the existing layer version and creation of a new layer version.
     */
    declare public readonly skipDestroy: pulumi.Output<boolean | undefined>;
    /**
     * The version of Layer Version.
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;
    /**
     * The ZIP package of the function code that is encoded in the Base64 format.
     *
     * > **NOTE:** `zipFile` and `ossBucketName`, `ossObjectName` cannot be used together.
     */
    declare public readonly zipFile: pulumi.Output<string | undefined>;

    /**
     * Create a LayerVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LayerVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LayerVersionArgs | LayerVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LayerVersionState | undefined;
            resourceInputs["acl"] = state?.acl;
            resourceInputs["arn"] = state?.arn;
            resourceInputs["codeCheckSum"] = state?.codeCheckSum;
            resourceInputs["compatibleRuntimes"] = state?.compatibleRuntimes;
            resourceInputs["description"] = state?.description;
            resourceInputs["layerName"] = state?.layerName;
            resourceInputs["ossBucketName"] = state?.ossBucketName;
            resourceInputs["ossObjectName"] = state?.ossObjectName;
            resourceInputs["skipDestroy"] = state?.skipDestroy;
            resourceInputs["version"] = state?.version;
            resourceInputs["zipFile"] = state?.zipFile;
        } else {
            const args = argsOrState as LayerVersionArgs | undefined;
            if (args?.compatibleRuntimes === undefined && !opts.urn) {
                throw new Error("Missing required property 'compatibleRuntimes'");
            }
            if (args?.layerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'layerName'");
            }
            resourceInputs["compatibleRuntimes"] = args?.compatibleRuntimes;
            resourceInputs["description"] = args?.description;
            resourceInputs["layerName"] = args?.layerName;
            resourceInputs["ossBucketName"] = args?.ossBucketName;
            resourceInputs["ossObjectName"] = args?.ossObjectName;
            resourceInputs["skipDestroy"] = args?.skipDestroy;
            resourceInputs["zipFile"] = args?.zipFile;
            resourceInputs["acl"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["codeCheckSum"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LayerVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LayerVersion resources.
 */
export interface LayerVersionState {
    /**
     * The access mode of Layer Version.
     */
    acl?: pulumi.Input<string>;
    /**
     * The arn of Layer Version.
     */
    arn?: pulumi.Input<string>;
    /**
     * The checksum of the layer code package.
     */
    codeCheckSum?: pulumi.Input<string>;
    /**
     * The list of runtime environments that are supported by the layer. Valid values: `nodejs14`, `nodejs12`, `nodejs10`, `nodejs8`, `nodejs6`, `python3.9`, `python3`, `python2.7`, `java11`, `java8`, `php7.2`, `go1`,`dotnetcore2.1`, `custom`.
     */
    compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the layer version.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the layer.
     */
    layerName?: pulumi.Input<string>;
    /**
     * The name of the OSS bucket that stores the ZIP package of the function code.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * The name of the OSS object (ZIP package) that contains the function code.
     */
    ossObjectName?: pulumi.Input<string>;
    /**
     * Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatibleRuntimes`, `description`, `layerName`, `ossBucketName`,  `ossObjectName`, or `zipFile` forces deletion of the existing layer version and creation of a new layer version.
     */
    skipDestroy?: pulumi.Input<boolean>;
    /**
     * The version of Layer Version.
     */
    version?: pulumi.Input<string>;
    /**
     * The ZIP package of the function code that is encoded in the Base64 format.
     *
     * > **NOTE:** `zipFile` and `ossBucketName`, `ossObjectName` cannot be used together.
     */
    zipFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LayerVersion resource.
 */
export interface LayerVersionArgs {
    /**
     * The list of runtime environments that are supported by the layer. Valid values: `nodejs14`, `nodejs12`, `nodejs10`, `nodejs8`, `nodejs6`, `python3.9`, `python3`, `python2.7`, `java11`, `java8`, `php7.2`, `go1`,`dotnetcore2.1`, `custom`.
     */
    compatibleRuntimes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the layer version.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the layer.
     */
    layerName: pulumi.Input<string>;
    /**
     * The name of the OSS bucket that stores the ZIP package of the function code.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * The name of the OSS object (ZIP package) that contains the function code.
     */
    ossObjectName?: pulumi.Input<string>;
    /**
     * Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatibleRuntimes`, `description`, `layerName`, `ossBucketName`,  `ossObjectName`, or `zipFile` forces deletion of the existing layer version and creation of a new layer version.
     */
    skipDestroy?: pulumi.Input<boolean>;
    /**
     * The ZIP package of the function code that is encoded in the Base64 format.
     *
     * > **NOTE:** `zipFile` and `ossBucketName`, `ossObjectName` cannot be used together.
     */
    zipFile?: pulumi.Input<string>;
}
