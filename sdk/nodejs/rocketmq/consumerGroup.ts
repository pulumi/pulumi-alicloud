// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a RocketMQ Consumer Group resource.
 *
 * For information about RocketMQ Consumer Group and how to use it, see [What is Consumer Group](https://www.alibabacloud.com/help/en/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/api-rocketmq-2022-08-01-createconsumergroup).
 *
 * > **NOTE:** Available since v1.212.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const defaultZones = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const createVpc = new alicloud.vpc.Network("createVpc", {
 *     description: "example",
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const createVswitch = new alicloud.vpc.Switch("createVswitch", {
 *     description: "example",
 *     vpcId: createVpc.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 *     cidrBlock: "172.16.0.0/24",
 *     vswitchName: name,
 * });
 * const createInstance = new alicloud.rocketmq.RocketMQInstance("createInstance", {
 *     autoRenewPeriod: 1,
 *     productInfo: {
 *         msgProcessSpec: "rmq.p2.4xlarge",
 *         sendReceiveRatio: 0.3,
 *         messageRetentionTime: 70,
 *     },
 *     networkInfo: {
 *         vpcInfo: {
 *             vpcId: createVpc.id,
 *             vswitchId: createVswitch.id,
 *         },
 *         internetInfo: {
 *             internetSpec: "enable",
 *             flowOutType: "payByBandwidth",
 *             flowOutBandwidth: 30,
 *         },
 *     },
 *     period: 1,
 *     subSeriesCode: "cluster_ha",
 *     remark: "example",
 *     instanceName: name,
 *     serviceCode: "rmq",
 *     seriesCode: "professional",
 *     paymentType: "PayAsYouGo",
 *     periodUnit: "Month",
 * });
 * const defaultConsumerGroup = new alicloud.rocketmq.ConsumerGroup("defaultConsumerGroup", {
 *     consumerGroupId: name,
 *     instanceId: createInstance.id,
 *     consumeRetryPolicy: {
 *         retryPolicy: "DefaultRetryPolicy",
 *         maxRetryTimes: 10,
 *     },
 *     deliveryOrderType: "Concurrently",
 *     remark: "example",
 * });
 * ```
 *
 * ## Import
 *
 * RocketMQ Consumer Group can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rocketmq/consumerGroup:ConsumerGroup example <instance_id>:<consumer_group_id>
 * ```
 */
export class ConsumerGroup extends pulumi.CustomResource {
    /**
     * Get an existing ConsumerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConsumerGroupState, opts?: pulumi.CustomResourceOptions): ConsumerGroup {
        return new ConsumerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rocketmq/consumerGroup:ConsumerGroup';

    /**
     * Returns true if the given object is an instance of ConsumerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConsumerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConsumerGroup.__pulumiType;
    }

    /**
     * Consumption retry strategy. See `consumeRetryPolicy` below.
     */
    public readonly consumeRetryPolicy!: pulumi.Output<outputs.rocketmq.ConsumerGroupConsumeRetryPolicy>;
    /**
     * The first ID of the resource.
     */
    public readonly consumerGroupId!: pulumi.Output<string>;
    /**
     * The creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Delivery order.
     */
    public readonly deliveryOrderType!: pulumi.Output<string | undefined>;
    /**
     * Instance ID.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Custom remarks.
     */
    public readonly remark!: pulumi.Output<string | undefined>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ConsumerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConsumerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConsumerGroupArgs | ConsumerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConsumerGroupState | undefined;
            resourceInputs["consumeRetryPolicy"] = state ? state.consumeRetryPolicy : undefined;
            resourceInputs["consumerGroupId"] = state ? state.consumerGroupId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deliveryOrderType"] = state ? state.deliveryOrderType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ConsumerGroupArgs | undefined;
            if ((!args || args.consumeRetryPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumeRetryPolicy'");
            }
            if ((!args || args.consumerGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumerGroupId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["consumeRetryPolicy"] = args ? args.consumeRetryPolicy : undefined;
            resourceInputs["consumerGroupId"] = args ? args.consumerGroupId : undefined;
            resourceInputs["deliveryOrderType"] = args ? args.deliveryOrderType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConsumerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConsumerGroup resources.
 */
export interface ConsumerGroupState {
    /**
     * Consumption retry strategy. See `consumeRetryPolicy` below.
     */
    consumeRetryPolicy?: pulumi.Input<inputs.rocketmq.ConsumerGroupConsumeRetryPolicy>;
    /**
     * The first ID of the resource.
     */
    consumerGroupId?: pulumi.Input<string>;
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Delivery order.
     */
    deliveryOrderType?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Custom remarks.
     */
    remark?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConsumerGroup resource.
 */
export interface ConsumerGroupArgs {
    /**
     * Consumption retry strategy. See `consumeRetryPolicy` below.
     */
    consumeRetryPolicy: pulumi.Input<inputs.rocketmq.ConsumerGroupConsumeRetryPolicy>;
    /**
     * The first ID of the resource.
     */
    consumerGroupId: pulumi.Input<string>;
    /**
     * Delivery order.
     */
    deliveryOrderType?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Custom remarks.
     */
    remark?: pulumi.Input<string>;
}
