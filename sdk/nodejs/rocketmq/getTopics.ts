// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available in 1.53.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "onsInstanceName";
 * const topic = config.get("topic") || "onsTopicDatasourceName";
 * const defaultInstance = new alicloud.rocketmq.Instance("defaultInstance", {
 *     instanceName: name,
 *     remark: "default_ons_instance_remark",
 * });
 * const defaultTopic = new alicloud.rocketmq.Topic("defaultTopic", {
 *     topicName: topic,
 *     instanceId: defaultInstance.id,
 *     messageType: 0,
 *     remark: "dafault_ons_topic_remark",
 * });
 * const topicsDs = alicloud.rocketmq.getTopicsOutput({
 *     instanceId: defaultTopic.instanceId,
 *     nameRegex: topic,
 *     outputFile: "topics.txt",
 * });
 * export const firstTopicName = topicsDs.apply(topicsDs => topicsDs.topics?.[0]?.topicName);
 * ```
 */
export function getTopics(args: GetTopicsArgs, opts?: pulumi.InvokeOptions): Promise<GetTopicsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:rocketmq/getTopics:getTopics", {
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "instanceId": args.instanceId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getTopics.
 */
export interface GetTopicsArgs {
    enableDetails?: boolean;
    /**
     * A list of topic IDs to filter results.
     */
    ids?: string[];
    /**
     * ID of the ONS Instance that owns the topics.
     */
    instanceId: string;
    /**
     * A regex string to filter results by the topic name.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * A map of tags assigned to the Ons instance.
     */
    tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getTopics.
 */
export interface GetTopicsResult {
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly instanceId: string;
    readonly nameRegex?: string;
    /**
     * A list of topic names.
     */
    readonly names: string[];
    readonly outputFile?: string;
    /**
     * A map of tags assigned to the Ons instance.
     */
    readonly tags?: {[key: string]: any};
    /**
     * A list of topics. Each element contains the following attributes:
     */
    readonly topics: outputs.rocketmq.GetTopicsTopic[];
}
/**
 * This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
 *
 * > **NOTE:** Available in 1.53.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "onsInstanceName";
 * const topic = config.get("topic") || "onsTopicDatasourceName";
 * const defaultInstance = new alicloud.rocketmq.Instance("defaultInstance", {
 *     instanceName: name,
 *     remark: "default_ons_instance_remark",
 * });
 * const defaultTopic = new alicloud.rocketmq.Topic("defaultTopic", {
 *     topicName: topic,
 *     instanceId: defaultInstance.id,
 *     messageType: 0,
 *     remark: "dafault_ons_topic_remark",
 * });
 * const topicsDs = alicloud.rocketmq.getTopicsOutput({
 *     instanceId: defaultTopic.instanceId,
 *     nameRegex: topic,
 *     outputFile: "topics.txt",
 * });
 * export const firstTopicName = topicsDs.apply(topicsDs => topicsDs.topics?.[0]?.topicName);
 * ```
 */
export function getTopicsOutput(args: GetTopicsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTopicsResult> {
    return pulumi.output(args).apply((a: any) => getTopics(a, opts))
}

/**
 * A collection of arguments for invoking getTopics.
 */
export interface GetTopicsOutputArgs {
    enableDetails?: pulumi.Input<boolean>;
    /**
     * A list of topic IDs to filter results.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of the ONS Instance that owns the topics.
     */
    instanceId: pulumi.Input<string>;
    /**
     * A regex string to filter results by the topic name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A map of tags assigned to the Ons instance.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
