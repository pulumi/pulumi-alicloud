// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Sag qos car resource.
 * You need to create a QoS car to set priorities, rate limits, and quintuple rules for different messages.
 *
 * For information about Sag Qos Car and how to use it, see [What is Qos Car](https://www.alibabacloud.com/help/doc-detail/140065.htm).
 *
 * > **NOTE:** Available in 1.60.0+
 *
 * > **NOTE:** Only the following regions support. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-2`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultQos = new alicloud.rocketmq.Qos("defaultQos", {});
 * const defaultQosCar = new alicloud.rocketmq.QosCar("defaultQosCar", {
 *     qosId: defaultQos.id,
 *     description: "tf-testSagQosCarDescription",
 *     priority: 1,
 *     limitType: "Absolute",
 *     minBandwidthAbs: 10,
 *     maxBandwidthAbs: 20,
 *     minBandwidthPercent: 10,
 *     maxBandwidthPercent: 20,
 *     percentSourceType: "InternetUpBandwidth",
 * });
 * ```
 *
 * ## Import
 *
 * The Sag Qos Car can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:rocketmq/qosCar:QosCar example qos-abc123456:qoscar-abc123456
 * ```
 */
export class QosCar extends pulumi.CustomResource {
    /**
     * Get an existing QosCar resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QosCarState, opts?: pulumi.CustomResourceOptions): QosCar {
        return new QosCar(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rocketmq/qosCar:QosCar';

    /**
     * Returns true if the given object is an instance of QosCar.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QosCar {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QosCar.__pulumiType;
    }

    /**
     * The description of the QoS speed limiting rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The speed limiting method. Valid values: Absolute, Percent.
     */
    public readonly limitType!: pulumi.Output<string>;
    /**
     * The maximum bandwidth allowed for the stream specified in the quintuple rule. This parameter is required when the value of the LimitType is Absolute.
     */
    public readonly maxBandwidthAbs!: pulumi.Output<number | undefined>;
    /**
     * The maximum bandwidth percentage allowed for the stream specified in the quintuple rule. It is based on the maximum upstream bandwidth you set for the associated Smart Access Gateway (SAG) instance.This parameter is required when the value of the LimitType parameter is Percent.
     */
    public readonly maxBandwidthPercent!: pulumi.Output<number | undefined>;
    /**
     * The minimum bandwidth allowed for the stream specified in the quintuple rule. This parameter is required when the value of the LimitType parameter is Absolute.
     */
    public readonly minBandwidthAbs!: pulumi.Output<number | undefined>;
    /**
     * The minimum bandwidth percentage allowed for the stream specified in the quintuple rule. It is based on the maximum upstream bandwidth you set for the associated SAG instance.This parameter is required when the value of the LimitType parameter is Percent.
     */
    public readonly minBandwidthPercent!: pulumi.Output<number | undefined>;
    /**
     * The name of the QoS speed limiting rule..
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The bandwidth type when the speed is limited based on percentage. Valid values: CcnBandwidth, InternetUpBandwidth.The default value is InternetUpBandwidth.
     */
    public readonly percentSourceType!: pulumi.Output<string | undefined>;
    /**
     * The priority of the specified stream.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * The instance ID of the QoS.
     */
    public readonly qosId!: pulumi.Output<string>;

    /**
     * Create a QosCar resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QosCarArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QosCarArgs | QosCarState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QosCarState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["limitType"] = state ? state.limitType : undefined;
            resourceInputs["maxBandwidthAbs"] = state ? state.maxBandwidthAbs : undefined;
            resourceInputs["maxBandwidthPercent"] = state ? state.maxBandwidthPercent : undefined;
            resourceInputs["minBandwidthAbs"] = state ? state.minBandwidthAbs : undefined;
            resourceInputs["minBandwidthPercent"] = state ? state.minBandwidthPercent : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["percentSourceType"] = state ? state.percentSourceType : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["qosId"] = state ? state.qosId : undefined;
        } else {
            const args = argsOrState as QosCarArgs | undefined;
            if ((!args || args.limitType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'limitType'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.qosId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'qosId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["limitType"] = args ? args.limitType : undefined;
            resourceInputs["maxBandwidthAbs"] = args ? args.maxBandwidthAbs : undefined;
            resourceInputs["maxBandwidthPercent"] = args ? args.maxBandwidthPercent : undefined;
            resourceInputs["minBandwidthAbs"] = args ? args.minBandwidthAbs : undefined;
            resourceInputs["minBandwidthPercent"] = args ? args.minBandwidthPercent : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["percentSourceType"] = args ? args.percentSourceType : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["qosId"] = args ? args.qosId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QosCar.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering QosCar resources.
 */
export interface QosCarState {
    /**
     * The description of the QoS speed limiting rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The speed limiting method. Valid values: Absolute, Percent.
     */
    limitType?: pulumi.Input<string>;
    /**
     * The maximum bandwidth allowed for the stream specified in the quintuple rule. This parameter is required when the value of the LimitType is Absolute.
     */
    maxBandwidthAbs?: pulumi.Input<number>;
    /**
     * The maximum bandwidth percentage allowed for the stream specified in the quintuple rule. It is based on the maximum upstream bandwidth you set for the associated Smart Access Gateway (SAG) instance.This parameter is required when the value of the LimitType parameter is Percent.
     */
    maxBandwidthPercent?: pulumi.Input<number>;
    /**
     * The minimum bandwidth allowed for the stream specified in the quintuple rule. This parameter is required when the value of the LimitType parameter is Absolute.
     */
    minBandwidthAbs?: pulumi.Input<number>;
    /**
     * The minimum bandwidth percentage allowed for the stream specified in the quintuple rule. It is based on the maximum upstream bandwidth you set for the associated SAG instance.This parameter is required when the value of the LimitType parameter is Percent.
     */
    minBandwidthPercent?: pulumi.Input<number>;
    /**
     * The name of the QoS speed limiting rule..
     */
    name?: pulumi.Input<string>;
    /**
     * The bandwidth type when the speed is limited based on percentage. Valid values: CcnBandwidth, InternetUpBandwidth.The default value is InternetUpBandwidth.
     */
    percentSourceType?: pulumi.Input<string>;
    /**
     * The priority of the specified stream.
     */
    priority?: pulumi.Input<number>;
    /**
     * The instance ID of the QoS.
     */
    qosId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QosCar resource.
 */
export interface QosCarArgs {
    /**
     * The description of the QoS speed limiting rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The speed limiting method. Valid values: Absolute, Percent.
     */
    limitType: pulumi.Input<string>;
    /**
     * The maximum bandwidth allowed for the stream specified in the quintuple rule. This parameter is required when the value of the LimitType is Absolute.
     */
    maxBandwidthAbs?: pulumi.Input<number>;
    /**
     * The maximum bandwidth percentage allowed for the stream specified in the quintuple rule. It is based on the maximum upstream bandwidth you set for the associated Smart Access Gateway (SAG) instance.This parameter is required when the value of the LimitType parameter is Percent.
     */
    maxBandwidthPercent?: pulumi.Input<number>;
    /**
     * The minimum bandwidth allowed for the stream specified in the quintuple rule. This parameter is required when the value of the LimitType parameter is Absolute.
     */
    minBandwidthAbs?: pulumi.Input<number>;
    /**
     * The minimum bandwidth percentage allowed for the stream specified in the quintuple rule. It is based on the maximum upstream bandwidth you set for the associated SAG instance.This parameter is required when the value of the LimitType parameter is Percent.
     */
    minBandwidthPercent?: pulumi.Input<number>;
    /**
     * The name of the QoS speed limiting rule..
     */
    name?: pulumi.Input<string>;
    /**
     * The bandwidth type when the speed is limited based on percentage. Valid values: CcnBandwidth, InternetUpBandwidth.The default value is InternetUpBandwidth.
     */
    percentSourceType?: pulumi.Input<string>;
    /**
     * The priority of the specified stream.
     */
    priority: pulumi.Input<number>;
    /**
     * The instance ID of the QoS.
     */
    qosId: pulumi.Input<string>;
}
