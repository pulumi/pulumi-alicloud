// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RocketMQ Topic resource.
 *
 * For information about RocketMQ Topic and how to use it, see [What is Topic](https://www.alibabacloud.com/help/en/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/developer-reference/api-rocketmq-2022-08-01-createtopic).
 *
 * > **NOTE:** Available since v1.211.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.getZones({
 *     availableResourceCreation: "VSwitch",
 * });
 * const createVpc = new alicloud.vpc.Network("createVpc", {
 *     description: "example",
 *     cidrBlock: "172.16.0.0/12",
 *     vpcName: name,
 * });
 * const createVswitch = new alicloud.vpc.Switch("createVswitch", {
 *     description: "example",
 *     vpcId: createVpc.id,
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 *     cidrBlock: "172.16.0.0/24",
 *     vswitchName: name,
 * });
 * const createInstance = new alicloud.rocketmq.RocketMQInstance("createInstance", {
 *     productInfo: {
 *         msgProcessSpec: "rmq.u2.10xlarge",
 *         sendReceiveRatio: 0.3,
 *         messageRetentionTime: 70,
 *     },
 *     serviceCode: "rmq",
 *     paymentType: "PayAsYouGo",
 *     instanceName: name,
 *     subSeriesCode: "cluster_ha",
 *     remark: "example",
 *     ipWhitelists: [
 *         "192.168.0.0/16",
 *         "10.10.0.0/16",
 *         "172.168.0.0/16",
 *     ],
 *     software: {
 *         maintainTime: "02:00-06:00",
 *     },
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 *     seriesCode: "ultimate",
 *     networkInfo: {
 *         vpcInfo: {
 *             vpcId: createVpc.id,
 *             vswitches: [{
 *                 vswitchId: createVswitch.id,
 *             }],
 *         },
 *         internetInfo: {
 *             internetSpec: "enable",
 *             flowOutType: "payByBandwidth",
 *             flowOutBandwidth: 30,
 *         },
 *     },
 * });
 * const defaultRocketMQTopic = new alicloud.rocketmq.RocketMQTopic("default", {
 *     remark: "example",
 *     instanceId: createInstance.id,
 *     messageType: "NORMAL",
 *     topicName: name,
 * });
 * ```
 *
 * ## Import
 *
 * RocketMQ Topic can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:rocketmq/rocketMQTopic:RocketMQTopic example <instance_id>:<topic_name>
 * ```
 */
export class RocketMQTopic extends pulumi.CustomResource {
    /**
     * Get an existing RocketMQTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RocketMQTopicState, opts?: pulumi.CustomResourceOptions): RocketMQTopic {
        return new RocketMQTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:rocketmq/rocketMQTopic:RocketMQTopic';

    /**
     * Returns true if the given object is an instance of RocketMQTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RocketMQTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RocketMQTopic.__pulumiType;
    }

    /**
     * The creation time of the resource.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Instance ID.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * The maximum TPS for message sending.
     */
    declare public readonly maxSendTps: pulumi.Output<number | undefined>;
    /**
     * Message type.
     */
    declare public readonly messageType: pulumi.Output<string | undefined>;
    /**
     * (Available since v1.247.0) The region ID to which the instance belongs.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * Custom remarks.
     */
    declare public readonly remark: pulumi.Output<string | undefined>;
    /**
     * The status of the resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Topic name and identification.
     */
    declare public readonly topicName: pulumi.Output<string>;

    /**
     * Create a RocketMQTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RocketMQTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RocketMQTopicArgs | RocketMQTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RocketMQTopicState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["maxSendTps"] = state?.maxSendTps;
            resourceInputs["messageType"] = state?.messageType;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["remark"] = state?.remark;
            resourceInputs["status"] = state?.status;
            resourceInputs["topicName"] = state?.topicName;
        } else {
            const args = argsOrState as RocketMQTopicArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.topicName === undefined && !opts.urn) {
                throw new Error("Missing required property 'topicName'");
            }
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["maxSendTps"] = args?.maxSendTps;
            resourceInputs["messageType"] = args?.messageType;
            resourceInputs["remark"] = args?.remark;
            resourceInputs["topicName"] = args?.topicName;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RocketMQTopic.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RocketMQTopic resources.
 */
export interface RocketMQTopicState {
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The maximum TPS for message sending.
     */
    maxSendTps?: pulumi.Input<number>;
    /**
     * Message type.
     */
    messageType?: pulumi.Input<string>;
    /**
     * (Available since v1.247.0) The region ID to which the instance belongs.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Custom remarks.
     */
    remark?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * Topic name and identification.
     */
    topicName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RocketMQTopic resource.
 */
export interface RocketMQTopicArgs {
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The maximum TPS for message sending.
     */
    maxSendTps?: pulumi.Input<number>;
    /**
     * Message type.
     */
    messageType?: pulumi.Input<string>;
    /**
     * Custom remarks.
     */
    remark?: pulumi.Input<string>;
    /**
     * Topic name and identification.
     */
    topicName: pulumi.Input<string>;
}
