// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a DMS Enterprise Workspace resource.
 *
 * For information about DMS Enterprise Workspace and how to use it, see [What is Workspace](https://next.api.alibabacloud.com/document/dms-enterprise/2018-11-01/CreateWorkspace).
 *
 * > **NOTE:** Available since v1.259.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform_example";
 * const _default = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const vpcCreate = new alicloud.vpc.Network("vpc_create", {
 *     isDefault: false,
 *     description: "example vpc",
 *     cidrBlock: "192.168.0.0/16",
 *     vpcName: `${name}-${_default.result}`,
 * });
 * const defaultEnterpriseWorkspace = new alicloud.dms.EnterpriseWorkspace("default", {
 *     description: name,
 *     workspaceName: `${name}-${_default.result}`,
 *     vpcId: vpcCreate.id,
 * });
 * ```
 *
 * ## Import
 *
 * DMS Enterprise Workspace can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dms/enterpriseWorkspace:EnterpriseWorkspace example <id>
 * ```
 */
export class EnterpriseWorkspace extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseWorkspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnterpriseWorkspaceState, opts?: pulumi.CustomResourceOptions): EnterpriseWorkspace {
        return new EnterpriseWorkspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dms/enterpriseWorkspace:EnterpriseWorkspace';

    /**
     * Returns true if the given object is an instance of EnterpriseWorkspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnterpriseWorkspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnterpriseWorkspace.__pulumiType;
    }

    /**
     * The description of the Workspace.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The region ID of the resource.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the VPC.
     */
    declare public readonly vpcId: pulumi.Output<string>;
    /**
     * The name of the Workspace.
     */
    declare public readonly workspaceName: pulumi.Output<string>;

    /**
     * Create a EnterpriseWorkspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnterpriseWorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnterpriseWorkspaceArgs | EnterpriseWorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnterpriseWorkspaceState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["workspaceName"] = state?.workspaceName;
        } else {
            const args = argsOrState as EnterpriseWorkspaceArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if (args?.workspaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["workspaceName"] = args?.workspaceName;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnterpriseWorkspace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnterpriseWorkspace resources.
 */
export interface EnterpriseWorkspaceState {
    /**
     * The description of the Workspace.
     */
    description?: pulumi.Input<string>;
    /**
     * The region ID of the resource.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The name of the Workspace.
     */
    workspaceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnterpriseWorkspace resource.
 */
export interface EnterpriseWorkspaceArgs {
    /**
     * The description of the Workspace.
     */
    description: pulumi.Input<string>;
    /**
     * The ID of the VPC.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The name of the Workspace.
     */
    workspaceName: pulumi.Input<string>;
}
