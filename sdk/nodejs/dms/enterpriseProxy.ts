// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a DMS Enterprise Proxy resource.
 *
 * For information about DMS Enterprise Proxy and how to use it, see [What is Proxy](https://next.api.alibabacloud.com/document/dms-enterprise/2018-11-01/CreateProxy).
 *
 * > **NOTE:** Available since v1.188.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const current = alicloud.getAccount({});
 * const defaultRegions = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultUserTenants = alicloud.dms.getUserTenants({
 *     status: "ACTIVE",
 * });
 * const defaultZones = alicloud.rds.getZones({
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     instanceChargeType: "PostPaid",
 *     category: "HighAvailability",
 *     dbInstanceStorageType: "cloud_essd",
 * });
 * const defaultInstanceClasses = defaultZones.then(defaultZones => alicloud.rds.getInstanceClasses({
 *     zoneId: defaultZones.zones?.[0]?.id,
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     category: "HighAvailability",
 *     dbInstanceStorageType: "cloud_essd",
 *     instanceChargeType: "PostPaid",
 * }));
 * const defaultNetwork = new alicloud.vpc.Network("defaultNetwork", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("defaultSwitch", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("defaultSecurityGroup", {vpcId: defaultNetwork.id});
 * const defaultInstance = new alicloud.rds.Instance("defaultInstance", {
 *     engine: "MySQL",
 *     engineVersion: "8.0",
 *     dbInstanceStorageType: "cloud_essd",
 *     instanceType: defaultInstanceClasses.then(defaultInstanceClasses => defaultInstanceClasses.instanceClasses?.[0]?.instanceClass),
 *     instanceStorage: defaultInstanceClasses.then(defaultInstanceClasses => defaultInstanceClasses.instanceClasses?.[0]?.storageRange?.min),
 *     vswitchId: defaultSwitch.id,
 *     instanceName: name,
 *     securityIps: [
 *         "100.104.5.0/24",
 *         "192.168.0.6",
 *     ],
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 * });
 * const defaultAccount = new alicloud.rds.Account("defaultAccount", {
 *     dbInstanceId: defaultInstance.id,
 *     accountName: "tfexamplename",
 *     accountPassword: "Example12345",
 *     accountType: "Normal",
 * });
 * const defaultEnterpriseInstance = new alicloud.dms.EnterpriseInstance("defaultEnterpriseInstance", {
 *     tid: defaultUserTenants.then(defaultUserTenants => defaultUserTenants.ids?.[0]),
 *     instanceType: "MySQL",
 *     instanceSource: "RDS",
 *     networkType: "VPC",
 *     envType: "dev",
 *     host: defaultInstance.connectionString,
 *     port: 3306,
 *     databaseUser: defaultAccount.accountName,
 *     databasePassword: defaultAccount.accountPassword,
 *     instanceName: name,
 *     dbaUid: current.then(current => current.id),
 *     safeRule: "自由操作",
 *     queryTimeout: 60,
 *     exportTimeout: 600,
 *     ecsRegion: defaultRegions.then(defaultRegions => defaultRegions.regions?.[0]?.id),
 * });
 * const defaultEnterpriseProxy = new alicloud.dms.EnterpriseProxy("defaultEnterpriseProxy", {
 *     instanceId: defaultEnterpriseInstance.instanceId,
 *     password: "Example12345",
 *     username: "tfexamplename",
 *     tid: defaultUserTenants.then(defaultUserTenants => defaultUserTenants.ids?.[0]),
 * });
 * ```
 *
 * ## Import
 *
 * DMS Enterprise Proxy can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:dms/enterpriseProxy:EnterpriseProxy example <id>
 * ```
 */
export class EnterpriseProxy extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseProxy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnterpriseProxyState, opts?: pulumi.CustomResourceOptions): EnterpriseProxy {
        return new EnterpriseProxy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:dms/enterpriseProxy:EnterpriseProxy';

    /**
     * Returns true if the given object is an instance of EnterpriseProxy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnterpriseProxy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnterpriseProxy.__pulumiType;
    }

    /**
     * The ID of the database instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The password of the database account.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The ID of the tenant.
     */
    public readonly tid!: pulumi.Output<string | undefined>;
    /**
     * The username of the database account.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a EnterpriseProxy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnterpriseProxyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnterpriseProxyArgs | EnterpriseProxyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnterpriseProxyState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["tid"] = state ? state.tid : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as EnterpriseProxyArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["tid"] = args ? args.tid : undefined;
            resourceInputs["username"] = args?.username ? pulumi.secret(args.username) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password", "username"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(EnterpriseProxy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnterpriseProxy resources.
 */
export interface EnterpriseProxyState {
    /**
     * The ID of the database instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The password of the database account.
     */
    password?: pulumi.Input<string>;
    /**
     * The ID of the tenant.
     */
    tid?: pulumi.Input<string>;
    /**
     * The username of the database account.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnterpriseProxy resource.
 */
export interface EnterpriseProxyArgs {
    /**
     * The ID of the database instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The password of the database account.
     */
    password: pulumi.Input<string>;
    /**
     * The ID of the tenant.
     */
    tid?: pulumi.Input<string>;
    /**
     * The username of the database account.
     */
    username: pulumi.Input<string>;
}
