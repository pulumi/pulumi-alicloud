// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a HBase instance resource supports replica set instances only. The HBase provides stable, reliable, and automatic scalable database services.
 * It offers a full range of database solutions, such as disaster recovery, backup, recovery, monitoring, and alarms.
 * You can see detail product introduction [here](https://www.alibabacloud.com/help/en/apsaradb-for-hbase/latest/createcluster)
 *
 * > **NOTE:** Available since v1.67.0.
 *
 * > **NOTE:**  The following regions don't support create Classic network HBase instance.
 * [`cn-hangzhou`,`cn-shanghai`,`cn-qingdao`,`cn-beijing`,`cn-shenzhen`,`ap-southeast-1a`,.....]
 * The official website mark  more regions. or you can call [DescribeRegions](https://www.alibabacloud.com/help/en/apsaradb-for-hbase/latest/describeregions)
 *
 * > **NOTE:**  Create HBase instance or change instance type and storage would cost 15 minutes. Please make full preparation
 *
 * ## Example Usage
 *
 * ### Create a hbase instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.hbase.getZones({});
 * const defaultGetNetworks = alicloud.vpc.getNetworks({
 *     nameRegex: "^default-NODELETING$",
 * });
 * const defaultGetSwitches = Promise.all([defaultGetNetworks, _default]).then(([defaultGetNetworks, _default]) => alicloud.vpc.getSwitches({
 *     vpcId: defaultGetNetworks.ids?.[0],
 *     zoneId: _default.zones?.[1]?.id,
 * }));
 * const defaultInstance = new alicloud.hbase.Instance("default", {
 *     name: name,
 *     zoneId: _default.then(_default => _default.zones?.[1]?.id),
 *     vswitchId: defaultGetSwitches.then(defaultGetSwitches => defaultGetSwitches.ids?.[0]),
 *     vpcId: defaultGetNetworks.then(defaultGetNetworks => defaultGetNetworks.ids?.[0]),
 *     engine: "hbaseue",
 *     engineVersion: "2.0",
 *     masterInstanceType: "hbase.sn2.2xlarge",
 *     coreInstanceType: "hbase.sn2.2xlarge",
 *     coreInstanceQuantity: 2,
 *     coreDiskType: "cloud_efficiency",
 *     coreDiskSize: 400,
 *     payType: "PostPaid",
 *     coldStorageSize: 0,
 *     deletionProtection: false,
 * });
 * ```
 *
 * this is a example for class netType instance. you can find more detail with the examples/hbase dir.
 *
 * ## Import
 *
 * HBase can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:hbase/instance:Instance example hb-wz96815u13k659fvd
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:hbase/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * The account of the cluster web ui. Size [0-128].
     */
    declare public readonly account: pulumi.Output<string | undefined>;
    /**
     * Valid values are `true`, `false`, system default to `false`, valid when payType = PrePaid.
     */
    declare public readonly autoRenew: pulumi.Output<boolean>;
    /**
     * 0 or [800, 100000000], step:10-GB increments. 0 means isColdStorage = false. [800, 100000000] means isColdStorage = true.
     */
    declare public readonly coldStorageSize: pulumi.Output<number | undefined>;
    /**
     * User-defined HBase instance one core node's storage. Valid when engine=hbase/hbaseue. Bds engine no need core_disk_size, space.Unit: GB. Value range:
     * - Custom storage space, value range: [20, 64000].
     * - Cluster [400, 64000], step:40-GB increments.
     * - Single [20-500GB], step:1-GB increments.
     */
    declare public readonly coreDiskSize: pulumi.Output<number | undefined>;
    /**
     * Valid values are `cloudSsd`, `cloudEssdPl1`, `cloudEfficiency`, `localHddPro`, `localSsdPro`ï¼Œ``, localDisk size is fixed. When engine=bds, no need to set disk type(or empty string).
     */
    declare public readonly coreDiskType: pulumi.Output<string | undefined>;
    /**
     * Default=2, [1-200]. If coreInstanceQuantity > 1, this is cluster's instance. If coreInstanceQuantity = 1, this is a single instance.
     */
    declare public readonly coreInstanceQuantity: pulumi.Output<number | undefined>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/53532.html), or you can call describeInstanceType api.
     */
    declare public readonly coreInstanceType: pulumi.Output<string>;
    /**
     * The switch of delete protection. True: delete protect, False: no delete protect. You must set false when you want to delete cluster.
     */
    declare public readonly deletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, valid when payType = PrePaid,  unit: month. 12, 24, 36 mean 1, 2, 3 years.
     */
    declare public readonly duration: pulumi.Output<number>;
    /**
     * Valid values are "hbase/hbaseue/bds". The following types are supported after v1.73.0: `hbaseue` and `bds`. Single hbase instance need to set engine=hbase, core_instance_quantity=1.
     */
    declare public readonly engine: pulumi.Output<string | undefined>;
    /**
     * HBase major version. hbase:1.1/2.0, hbaseue:2.0, bds:1.0, unsupport other engine temporarily. Value options can refer to the latest docs [CreateInstance](https://www.alibabacloud.com/help/en/data-lake-analytics/latest/createinstance).
     */
    declare public readonly engineVersion: pulumi.Output<string>;
    /**
     * The switch of delete immediate. True: delete immediate, False: delete delay. You will not found the cluster no matter set true or false.
     */
    declare public readonly immediateDeleteFlag: pulumi.Output<boolean | undefined>;
    /**
     * The white ip list of the cluster.
     */
    declare public readonly ipWhite: pulumi.Output<string>;
    /**
     * The end time of the operation and maintenance time period of the instance, in the format of HH:mmZ (UTC time), for example 04:00Z.
     */
    declare public readonly maintainEndTime: pulumi.Output<string>;
    /**
     * The start time of the operation and maintenance time period of the instance, in the format of HH:mmZ (UTC time), for example 02:00Z.
     */
    declare public readonly maintainStartTime: pulumi.Output<string>;
    /**
     * Count nodes of the master node.
     */
    declare public /*out*/ readonly masterInstanceQuantity: pulumi.Output<number>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/53532.html), or you can call describeInstanceType api.
     */
    declare public readonly masterInstanceType: pulumi.Output<string>;
    /**
     * HBase instance name. Length must be 2-128 characters long. Only Chinese characters, English letters, numbers, period (.), underline (_), or dash (-) are permitted.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The password of the cluster web ui account. Size [0-128].
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Valid values are `PrePaid`, `PostPaid`, System default to `PostPaid`. You can also convert PostPaid to PrePaid. And support convert PrePaid to PostPaid from 1.115.0+.
     */
    declare public readonly payType: pulumi.Output<string | undefined>;
    /**
     * The security group resource of the cluster.
     */
    declare public readonly securityGroups: pulumi.Output<string[]>;
    /**
     * The slb service addresses of the cluster. See `slbConnAddrs` below.
     *
     * > **NOTE:** Now only instance name can be change. The others(instance_type, disk_size, coreInstanceQuantity and so on) will be supported in the furture.
     */
    declare public /*out*/ readonly slbConnAddrs: pulumi.Output<outputs.hbase.InstanceSlbConnAddr[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Web UI proxy addresses of the cluster. See `uiProxyConnAddrs` below.
     */
    declare public /*out*/ readonly uiProxyConnAddrs: pulumi.Output<outputs.hbase.InstanceUiProxyConnAddr[]>;
    /**
     * The id of the VPC.
     */
    declare public readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * If vswitchId is not empty, that mean netType = vpc and has a same region. If vswitchId is empty, net_type=classic. Intl site not support classic network.
     */
    declare public readonly vswitchId: pulumi.Output<string | undefined>;
    /**
     * The zookeeper addresses of the cluster. See `zkConnAddrs` below.
     */
    declare public /*out*/ readonly zkConnAddrs: pulumi.Output<outputs.hbase.InstanceZkConnAddr[]>;
    /**
     * The Zone to launch the HBase instance. If vswitchId is not empty, this zoneId can be "" or consistent.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["account"] = state?.account;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["coldStorageSize"] = state?.coldStorageSize;
            resourceInputs["coreDiskSize"] = state?.coreDiskSize;
            resourceInputs["coreDiskType"] = state?.coreDiskType;
            resourceInputs["coreInstanceQuantity"] = state?.coreInstanceQuantity;
            resourceInputs["coreInstanceType"] = state?.coreInstanceType;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["duration"] = state?.duration;
            resourceInputs["engine"] = state?.engine;
            resourceInputs["engineVersion"] = state?.engineVersion;
            resourceInputs["immediateDeleteFlag"] = state?.immediateDeleteFlag;
            resourceInputs["ipWhite"] = state?.ipWhite;
            resourceInputs["maintainEndTime"] = state?.maintainEndTime;
            resourceInputs["maintainStartTime"] = state?.maintainStartTime;
            resourceInputs["masterInstanceQuantity"] = state?.masterInstanceQuantity;
            resourceInputs["masterInstanceType"] = state?.masterInstanceType;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["payType"] = state?.payType;
            resourceInputs["securityGroups"] = state?.securityGroups;
            resourceInputs["slbConnAddrs"] = state?.slbConnAddrs;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["uiProxyConnAddrs"] = state?.uiProxyConnAddrs;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zkConnAddrs"] = state?.zkConnAddrs;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.coreInstanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'coreInstanceType'");
            }
            if (args?.engineVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if (args?.masterInstanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'masterInstanceType'");
            }
            resourceInputs["account"] = args?.account;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["coldStorageSize"] = args?.coldStorageSize;
            resourceInputs["coreDiskSize"] = args?.coreDiskSize;
            resourceInputs["coreDiskType"] = args?.coreDiskType;
            resourceInputs["coreInstanceQuantity"] = args?.coreInstanceQuantity;
            resourceInputs["coreInstanceType"] = args?.coreInstanceType;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["duration"] = args?.duration;
            resourceInputs["engine"] = args?.engine;
            resourceInputs["engineVersion"] = args?.engineVersion;
            resourceInputs["immediateDeleteFlag"] = args?.immediateDeleteFlag;
            resourceInputs["ipWhite"] = args?.ipWhite;
            resourceInputs["maintainEndTime"] = args?.maintainEndTime;
            resourceInputs["maintainStartTime"] = args?.maintainStartTime;
            resourceInputs["masterInstanceType"] = args?.masterInstanceType;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["payType"] = args?.payType;
            resourceInputs["securityGroups"] = args?.securityGroups;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["masterInstanceQuantity"] = undefined /*out*/;
            resourceInputs["slbConnAddrs"] = undefined /*out*/;
            resourceInputs["uiProxyConnAddrs"] = undefined /*out*/;
            resourceInputs["zkConnAddrs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * The account of the cluster web ui. Size [0-128].
     */
    account?: pulumi.Input<string>;
    /**
     * Valid values are `true`, `false`, system default to `false`, valid when payType = PrePaid.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * 0 or [800, 100000000], step:10-GB increments. 0 means isColdStorage = false. [800, 100000000] means isColdStorage = true.
     */
    coldStorageSize?: pulumi.Input<number>;
    /**
     * User-defined HBase instance one core node's storage. Valid when engine=hbase/hbaseue. Bds engine no need core_disk_size, space.Unit: GB. Value range:
     * - Custom storage space, value range: [20, 64000].
     * - Cluster [400, 64000], step:40-GB increments.
     * - Single [20-500GB], step:1-GB increments.
     */
    coreDiskSize?: pulumi.Input<number>;
    /**
     * Valid values are `cloudSsd`, `cloudEssdPl1`, `cloudEfficiency`, `localHddPro`, `localSsdPro`ï¼Œ``, localDisk size is fixed. When engine=bds, no need to set disk type(or empty string).
     */
    coreDiskType?: pulumi.Input<string>;
    /**
     * Default=2, [1-200]. If coreInstanceQuantity > 1, this is cluster's instance. If coreInstanceQuantity = 1, this is a single instance.
     */
    coreInstanceQuantity?: pulumi.Input<number>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/53532.html), or you can call describeInstanceType api.
     */
    coreInstanceType?: pulumi.Input<string>;
    /**
     * The switch of delete protection. True: delete protect, False: no delete protect. You must set false when you want to delete cluster.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, valid when payType = PrePaid,  unit: month. 12, 24, 36 mean 1, 2, 3 years.
     */
    duration?: pulumi.Input<number>;
    /**
     * Valid values are "hbase/hbaseue/bds". The following types are supported after v1.73.0: `hbaseue` and `bds`. Single hbase instance need to set engine=hbase, core_instance_quantity=1.
     */
    engine?: pulumi.Input<string>;
    /**
     * HBase major version. hbase:1.1/2.0, hbaseue:2.0, bds:1.0, unsupport other engine temporarily. Value options can refer to the latest docs [CreateInstance](https://www.alibabacloud.com/help/en/data-lake-analytics/latest/createinstance).
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The switch of delete immediate. True: delete immediate, False: delete delay. You will not found the cluster no matter set true or false.
     */
    immediateDeleteFlag?: pulumi.Input<boolean>;
    /**
     * The white ip list of the cluster.
     */
    ipWhite?: pulumi.Input<string>;
    /**
     * The end time of the operation and maintenance time period of the instance, in the format of HH:mmZ (UTC time), for example 04:00Z.
     */
    maintainEndTime?: pulumi.Input<string>;
    /**
     * The start time of the operation and maintenance time period of the instance, in the format of HH:mmZ (UTC time), for example 02:00Z.
     */
    maintainStartTime?: pulumi.Input<string>;
    /**
     * Count nodes of the master node.
     */
    masterInstanceQuantity?: pulumi.Input<number>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/53532.html), or you can call describeInstanceType api.
     */
    masterInstanceType?: pulumi.Input<string>;
    /**
     * HBase instance name. Length must be 2-128 characters long. Only Chinese characters, English letters, numbers, period (.), underline (_), or dash (-) are permitted.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of the cluster web ui account. Size [0-128].
     */
    password?: pulumi.Input<string>;
    /**
     * Valid values are `PrePaid`, `PostPaid`, System default to `PostPaid`. You can also convert PostPaid to PrePaid. And support convert PrePaid to PostPaid from 1.115.0+.
     */
    payType?: pulumi.Input<string>;
    /**
     * The security group resource of the cluster.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The slb service addresses of the cluster. See `slbConnAddrs` below.
     *
     * > **NOTE:** Now only instance name can be change. The others(instance_type, disk_size, coreInstanceQuantity and so on) will be supported in the furture.
     */
    slbConnAddrs?: pulumi.Input<pulumi.Input<inputs.hbase.InstanceSlbConnAddr>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Web UI proxy addresses of the cluster. See `uiProxyConnAddrs` below.
     */
    uiProxyConnAddrs?: pulumi.Input<pulumi.Input<inputs.hbase.InstanceUiProxyConnAddr>[]>;
    /**
     * The id of the VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * If vswitchId is not empty, that mean netType = vpc and has a same region. If vswitchId is empty, net_type=classic. Intl site not support classic network.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zookeeper addresses of the cluster. See `zkConnAddrs` below.
     */
    zkConnAddrs?: pulumi.Input<pulumi.Input<inputs.hbase.InstanceZkConnAddr>[]>;
    /**
     * The Zone to launch the HBase instance. If vswitchId is not empty, this zoneId can be "" or consistent.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The account of the cluster web ui. Size [0-128].
     */
    account?: pulumi.Input<string>;
    /**
     * Valid values are `true`, `false`, system default to `false`, valid when payType = PrePaid.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * 0 or [800, 100000000], step:10-GB increments. 0 means isColdStorage = false. [800, 100000000] means isColdStorage = true.
     */
    coldStorageSize?: pulumi.Input<number>;
    /**
     * User-defined HBase instance one core node's storage. Valid when engine=hbase/hbaseue. Bds engine no need core_disk_size, space.Unit: GB. Value range:
     * - Custom storage space, value range: [20, 64000].
     * - Cluster [400, 64000], step:40-GB increments.
     * - Single [20-500GB], step:1-GB increments.
     */
    coreDiskSize?: pulumi.Input<number>;
    /**
     * Valid values are `cloudSsd`, `cloudEssdPl1`, `cloudEfficiency`, `localHddPro`, `localSsdPro`ï¼Œ``, localDisk size is fixed. When engine=bds, no need to set disk type(or empty string).
     */
    coreDiskType?: pulumi.Input<string>;
    /**
     * Default=2, [1-200]. If coreInstanceQuantity > 1, this is cluster's instance. If coreInstanceQuantity = 1, this is a single instance.
     */
    coreInstanceQuantity?: pulumi.Input<number>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/53532.html), or you can call describeInstanceType api.
     */
    coreInstanceType: pulumi.Input<string>;
    /**
     * The switch of delete protection. True: delete protect, False: no delete protect. You must set false when you want to delete cluster.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, valid when payType = PrePaid,  unit: month. 12, 24, 36 mean 1, 2, 3 years.
     */
    duration?: pulumi.Input<number>;
    /**
     * Valid values are "hbase/hbaseue/bds". The following types are supported after v1.73.0: `hbaseue` and `bds`. Single hbase instance need to set engine=hbase, core_instance_quantity=1.
     */
    engine?: pulumi.Input<string>;
    /**
     * HBase major version. hbase:1.1/2.0, hbaseue:2.0, bds:1.0, unsupport other engine temporarily. Value options can refer to the latest docs [CreateInstance](https://www.alibabacloud.com/help/en/data-lake-analytics/latest/createinstance).
     */
    engineVersion: pulumi.Input<string>;
    /**
     * The switch of delete immediate. True: delete immediate, False: delete delay. You will not found the cluster no matter set true or false.
     */
    immediateDeleteFlag?: pulumi.Input<boolean>;
    /**
     * The white ip list of the cluster.
     */
    ipWhite?: pulumi.Input<string>;
    /**
     * The end time of the operation and maintenance time period of the instance, in the format of HH:mmZ (UTC time), for example 04:00Z.
     */
    maintainEndTime?: pulumi.Input<string>;
    /**
     * The start time of the operation and maintenance time period of the instance, in the format of HH:mmZ (UTC time), for example 02:00Z.
     */
    maintainStartTime?: pulumi.Input<string>;
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/53532.html), or you can call describeInstanceType api.
     */
    masterInstanceType: pulumi.Input<string>;
    /**
     * HBase instance name. Length must be 2-128 characters long. Only Chinese characters, English letters, numbers, period (.), underline (_), or dash (-) are permitted.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of the cluster web ui account. Size [0-128].
     */
    password?: pulumi.Input<string>;
    /**
     * Valid values are `PrePaid`, `PostPaid`, System default to `PostPaid`. You can also convert PostPaid to PrePaid. And support convert PrePaid to PostPaid from 1.115.0+.
     */
    payType?: pulumi.Input<string>;
    /**
     * The security group resource of the cluster.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The id of the VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * If vswitchId is not empty, that mean netType = vpc and has a same region. If vswitchId is empty, net_type=classic. Intl site not support classic network.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The Zone to launch the HBase instance. If vswitchId is not empty, this zoneId can be "" or consistent.
     */
    zoneId?: pulumi.Input<string>;
}
