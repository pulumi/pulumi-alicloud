// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Ocean Base Instance resource.
 *
 * For information about Ocean Base Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/en/apsaradb-for-oceanbase/latest/what-is-oceanbase-database).
 *
 * > **NOTE:** Available in v1.203.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.ocean.BaseInstance("default", {
 *     instanceName: _var.name,
 *     series: "normal",
 *     diskSize: 200,
 *     instanceClass: "14C70GB",
 *     zones: [
 *         "ap-southeast-1a",
 *         "ap-southeast-1b",
 *         "ap-southeast-1c",
 *     ],
 *     paymentType: "PayAsYouGo",
 * });
 * ```
 *
 * ## Import
 *
 * Ocean Base Instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ocean/baseInstance:BaseInstance example <id>
 * ```
 */
export class BaseInstance extends pulumi.CustomResource {
    /**
     * Get an existing BaseInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BaseInstanceState, opts?: pulumi.CustomResourceOptions): BaseInstance {
        return new BaseInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ocean/baseInstance:BaseInstance';

    /**
     * Returns true if the given object is an instance of BaseInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BaseInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BaseInstance.__pulumiType;
    }

    /**
     * Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     */
    public readonly autoRenew!: pulumi.Output<boolean>;
    /**
     * The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
     */
    public readonly autoRenewPeriod!: pulumi.Output<number | undefined>;
    /**
     * The backup retain mode.
     */
    public readonly backupRetainMode!: pulumi.Output<string | undefined>;
    /**
     * The product code of the OceanBase cluster.
     * - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
     * - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
     * - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
     */
    public /*out*/ readonly commodityCode!: pulumi.Output<string>;
    /**
     * The number of CPU cores of the cluster.
     */
    public /*out*/ readonly cpu!: pulumi.Output<number>;
    /**
     * The creation time of the resource
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB-10000GB.
     * - The default value of each package is its minimum value.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
     */
    public readonly instanceClass!: pulumi.Output<string>;
    /**
     * OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * The number of nodes in the cluster.
     */
    public readonly nodeNum!: pulumi.Output<string>;
    /**
     * The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The period unit. Valid values: `Month`,`Year`.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * The ID of the enterprise resource group to which the instance resides.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
     */
    public readonly series!: pulumi.Output<string>;
    /**
     * The status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Information about the zone where the cluster is deployed.
     */
    public readonly zones!: pulumi.Output<string[]>;

    /**
     * Create a BaseInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BaseInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BaseInstanceArgs | BaseInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BaseInstanceState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["autoRenewPeriod"] = state ? state.autoRenewPeriod : undefined;
            resourceInputs["backupRetainMode"] = state ? state.backupRetainMode : undefined;
            resourceInputs["commodityCode"] = state ? state.commodityCode : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["instanceClass"] = state ? state.instanceClass : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["nodeNum"] = state ? state.nodeNum : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["series"] = state ? state.series : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as BaseInstanceArgs | undefined;
            if ((!args || args.diskSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskSize'");
            }
            if ((!args || args.instanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceClass'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.series === undefined) && !opts.urn) {
                throw new Error("Missing required property 'series'");
            }
            if ((!args || args.zones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zones'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["autoRenewPeriod"] = args ? args.autoRenewPeriod : undefined;
            resourceInputs["backupRetainMode"] = args ? args.backupRetainMode : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["instanceClass"] = args ? args.instanceClass : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["nodeNum"] = args ? args.nodeNum : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["series"] = args ? args.series : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["commodityCode"] = undefined /*out*/;
            resourceInputs["cpu"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BaseInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BaseInstance resources.
 */
export interface BaseInstanceState {
    /**
     * Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * The backup retain mode.
     */
    backupRetainMode?: pulumi.Input<string>;
    /**
     * The product code of the OceanBase cluster.
     * - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
     * - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
     * - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
     */
    commodityCode?: pulumi.Input<string>;
    /**
     * The number of CPU cores of the cluster.
     */
    cpu?: pulumi.Input<number>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB-10000GB.
     * - The default value of each package is its minimum value.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
     */
    instanceClass?: pulumi.Input<string>;
    /**
     * OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The number of nodes in the cluster.
     */
    nodeNum?: pulumi.Input<string>;
    /**
     * The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
     */
    period?: pulumi.Input<number>;
    /**
     * The period unit. Valid values: `Month`,`Year`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ID of the enterprise resource group to which the instance resides.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
     */
    series?: pulumi.Input<string>;
    /**
     * The status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * Information about the zone where the cluster is deployed.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a BaseInstance resource.
 */
export interface BaseInstanceArgs {
    /**
     * Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
     */
    autoRenewPeriod?: pulumi.Input<number>;
    /**
     * The backup retain mode.
     */
    backupRetainMode?: pulumi.Input<string>;
    /**
     * The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB-10000GB.
     * - The default value of each package is its minimum value.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
     */
    instanceClass: pulumi.Input<string>;
    /**
     * OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The number of nodes in the cluster.
     */
    nodeNum?: pulumi.Input<string>;
    /**
     * The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
     */
    paymentType: pulumi.Input<string>;
    /**
     * The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
     */
    period?: pulumi.Input<number>;
    /**
     * The period unit. Valid values: `Month`,`Year`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ID of the enterprise resource group to which the instance resides.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
     */
    series: pulumi.Input<string>;
    /**
     * Information about the zone where the cluster is deployed.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}
