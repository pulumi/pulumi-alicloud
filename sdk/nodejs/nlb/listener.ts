// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Network Load Balancer (NLB) Listener resource.
 *
 * For information about Network Load Balancer (NLB) Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/server-load-balancer/latest/api-nlb-2022-04-30-createlistener).
 *
 * > **NOTE:** Available since v1.191.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "tf-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultGetZones = alicloud.nlb.getZones({});
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "10.4.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.0.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultGetZones.then(defaultGetZones => defaultGetZones.zones?.[0]?.id),
 * });
 * const default1 = new alicloud.vpc.Switch("default1", {
 *     vswitchName: name,
 *     cidrBlock: "10.4.1.0/24",
 *     vpcId: defaultNetwork.id,
 *     zoneId: defaultGetZones.then(defaultGetZones => defaultGetZones.zones?.[1]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultLoadBalancer = new alicloud.nlb.LoadBalancer("default", {
 *     loadBalancerName: name,
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 *     loadBalancerType: "Network",
 *     addressType: "Internet",
 *     addressIpVersion: "Ipv4",
 *     vpcId: defaultNetwork.id,
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 *     zoneMappings: [
 *         {
 *             vswitchId: defaultSwitch.id,
 *             zoneId: defaultGetZones.then(defaultGetZones => defaultGetZones.zones?.[0]?.id),
 *         },
 *         {
 *             vswitchId: default1.id,
 *             zoneId: defaultGetZones.then(defaultGetZones => defaultGetZones.zones?.[1]?.id),
 *         },
 *     ],
 * });
 * const defaultServerGroup = new alicloud.nlb.ServerGroup("default", {
 *     resourceGroupId: _default.then(_default => _default.ids?.[0]),
 *     serverGroupName: name,
 *     serverGroupType: "Instance",
 *     vpcId: defaultNetwork.id,
 *     scheduler: "Wrr",
 *     protocol: "TCP",
 *     connectionDrainEnabled: true,
 *     connectionDrainTimeout: 60,
 *     addressIpVersion: "Ipv4",
 *     healthCheck: {
 *         healthCheckEnabled: true,
 *         healthCheckType: "TCP",
 *         healthCheckConnectPort: 0,
 *         healthyThreshold: 2,
 *         unhealthyThreshold: 2,
 *         healthCheckConnectTimeout: 5,
 *         healthCheckInterval: 10,
 *         httpCheckMethod: "GET",
 *         healthCheckHttpCodes: [
 *             "http_2xx",
 *             "http_3xx",
 *             "http_4xx",
 *         ],
 *     },
 *     tags: {
 *         Created: "TF",
 *         For: "example",
 *     },
 * });
 * const defaultListener = new alicloud.nlb.Listener("default", {
 *     listenerProtocol: "TCP",
 *     listenerPort: 80,
 *     listenerDescription: name,
 *     loadBalancerId: defaultLoadBalancer.id,
 *     serverGroupId: defaultServerGroup.id,
 *     idleTimeout: 900,
 *     proxyProtocolEnabled: true,
 *     cps: 10000,
 *     mss: 0,
 * });
 * ```
 *
 * ## Import
 *
 * Network Load Balancer (NLB) Listener can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:nlb/listener:Listener example <id>
 * ```
 */
export class Listener extends pulumi.CustomResource {
    /**
     * Get an existing Listener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListenerState, opts?: pulumi.CustomResourceOptions): Listener {
        return new Listener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:nlb/listener:Listener';

    /**
     * Returns true if the given object is an instance of Listener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Listener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Listener.__pulumiType;
    }

    /**
     * Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
     */
    declare public readonly alpnEnabled: pulumi.Output<boolean>;
    /**
     * The ALPN policy. Valid values:
     * - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * - `HTTP2Only`: uses only HTTP 2.0.
     * - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
     * - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     *
     * > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
     *
     * > **NOTE:**  Effective only for TCPSSL listener.
     */
    declare public readonly alpnPolicy: pulumi.Output<string | undefined>;
    /**
     * The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP. 
     *
     * > **NOTE:**  Only one CA certificate is supported.
     */
    declare public readonly caCertificateIds: pulumi.Output<string[] | undefined>;
    /**
     * Specifies whether to enable mutual authentication. Valid values:
     */
    declare public readonly caEnabled: pulumi.Output<boolean>;
    /**
     * The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP. 
     *
     * > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
     */
    declare public readonly certificateIds: pulumi.Output<string[] | undefined>;
    /**
     * The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
     */
    declare public readonly cps: pulumi.Output<number | undefined>;
    /**
     * The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
     *
     * > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     */
    declare public readonly endPort: pulumi.Output<number | undefined>;
    /**
     * The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
     */
    declare public readonly idleTimeout: pulumi.Output<number>;
    /**
     * Enter a name for the listener.
     * The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
     */
    declare public readonly listenerDescription: pulumi.Output<string | undefined>;
    /**
     * The listener port. Valid values: `0` to `65535`.
     * If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
     */
    declare public readonly listenerPort: pulumi.Output<number>;
    /**
     * The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
     */
    declare public readonly listenerProtocol: pulumi.Output<string>;
    /**
     * The ID of the Network Load Balancer (NLB) instance.
     */
    declare public readonly loadBalancerId: pulumi.Output<string>;
    /**
     * The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
     *
     * > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
     */
    declare public readonly mss: pulumi.Output<number | undefined>;
    /**
     * The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
     */
    declare public readonly proxyProtocolConfig: pulumi.Output<outputs.nlb.ListenerProxyProtocolConfig>;
    /**
     * Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
     */
    declare public readonly proxyProtocolEnabled: pulumi.Output<boolean>;
    /**
     * The ID of the region where the Network Load Balancer (NLB) instance is deployed.
     * You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * Specifies whether to enable fine-grained monitoring. Valid values:
     */
    declare public readonly secSensorEnabled: pulumi.Output<boolean>;
    /**
     * The security policy ID. System security policies and custom security policies are supported.
     *
     * Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
     *
     * > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
     */
    declare public readonly securityPolicyId: pulumi.Output<string>;
    /**
     * The ID of the server group.
     */
    declare public readonly serverGroupId: pulumi.Output<string>;
    /**
     * The first port in the listener port range. Valid values: `0` to `65535`.
     *
     * > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     */
    declare public readonly startPort: pulumi.Output<number | undefined>;
    /**
     * The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * The tag of the resource
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Listener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ListenerArgs | ListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ListenerState | undefined;
            resourceInputs["alpnEnabled"] = state?.alpnEnabled;
            resourceInputs["alpnPolicy"] = state?.alpnPolicy;
            resourceInputs["caCertificateIds"] = state?.caCertificateIds;
            resourceInputs["caEnabled"] = state?.caEnabled;
            resourceInputs["certificateIds"] = state?.certificateIds;
            resourceInputs["cps"] = state?.cps;
            resourceInputs["endPort"] = state?.endPort;
            resourceInputs["idleTimeout"] = state?.idleTimeout;
            resourceInputs["listenerDescription"] = state?.listenerDescription;
            resourceInputs["listenerPort"] = state?.listenerPort;
            resourceInputs["listenerProtocol"] = state?.listenerProtocol;
            resourceInputs["loadBalancerId"] = state?.loadBalancerId;
            resourceInputs["mss"] = state?.mss;
            resourceInputs["proxyProtocolConfig"] = state?.proxyProtocolConfig;
            resourceInputs["proxyProtocolEnabled"] = state?.proxyProtocolEnabled;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["secSensorEnabled"] = state?.secSensorEnabled;
            resourceInputs["securityPolicyId"] = state?.securityPolicyId;
            resourceInputs["serverGroupId"] = state?.serverGroupId;
            resourceInputs["startPort"] = state?.startPort;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as ListenerArgs | undefined;
            if (args?.listenerPort === undefined && !opts.urn) {
                throw new Error("Missing required property 'listenerPort'");
            }
            if (args?.listenerProtocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'listenerProtocol'");
            }
            if (args?.loadBalancerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerId'");
            }
            if (args?.serverGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serverGroupId'");
            }
            resourceInputs["alpnEnabled"] = args?.alpnEnabled;
            resourceInputs["alpnPolicy"] = args?.alpnPolicy;
            resourceInputs["caCertificateIds"] = args?.caCertificateIds;
            resourceInputs["caEnabled"] = args?.caEnabled;
            resourceInputs["certificateIds"] = args?.certificateIds;
            resourceInputs["cps"] = args?.cps;
            resourceInputs["endPort"] = args?.endPort;
            resourceInputs["idleTimeout"] = args?.idleTimeout;
            resourceInputs["listenerDescription"] = args?.listenerDescription;
            resourceInputs["listenerPort"] = args?.listenerPort;
            resourceInputs["listenerProtocol"] = args?.listenerProtocol;
            resourceInputs["loadBalancerId"] = args?.loadBalancerId;
            resourceInputs["mss"] = args?.mss;
            resourceInputs["proxyProtocolConfig"] = args?.proxyProtocolConfig;
            resourceInputs["proxyProtocolEnabled"] = args?.proxyProtocolEnabled;
            resourceInputs["secSensorEnabled"] = args?.secSensorEnabled;
            resourceInputs["securityPolicyId"] = args?.securityPolicyId;
            resourceInputs["serverGroupId"] = args?.serverGroupId;
            resourceInputs["startPort"] = args?.startPort;
            resourceInputs["status"] = args?.status;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Listener.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Listener resources.
 */
export interface ListenerState {
    /**
     * Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
     */
    alpnEnabled?: pulumi.Input<boolean>;
    /**
     * The ALPN policy. Valid values:
     * - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * - `HTTP2Only`: uses only HTTP 2.0.
     * - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
     * - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     *
     * > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
     *
     * > **NOTE:**  Effective only for TCPSSL listener.
     */
    alpnPolicy?: pulumi.Input<string>;
    /**
     * The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP. 
     *
     * > **NOTE:**  Only one CA certificate is supported.
     */
    caCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to enable mutual authentication. Valid values:
     */
    caEnabled?: pulumi.Input<boolean>;
    /**
     * The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP. 
     *
     * > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
     */
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
     */
    cps?: pulumi.Input<number>;
    /**
     * The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
     *
     * > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     */
    endPort?: pulumi.Input<number>;
    /**
     * The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Enter a name for the listener.
     * The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
     */
    listenerDescription?: pulumi.Input<string>;
    /**
     * The listener port. Valid values: `0` to `65535`.
     * If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
     */
    listenerPort?: pulumi.Input<number>;
    /**
     * The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
     */
    listenerProtocol?: pulumi.Input<string>;
    /**
     * The ID of the Network Load Balancer (NLB) instance.
     */
    loadBalancerId?: pulumi.Input<string>;
    /**
     * The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
     *
     * > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
     */
    mss?: pulumi.Input<number>;
    /**
     * The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
     */
    proxyProtocolConfig?: pulumi.Input<inputs.nlb.ListenerProxyProtocolConfig>;
    /**
     * Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
     */
    proxyProtocolEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the region where the Network Load Balancer (NLB) instance is deployed.
     * You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable fine-grained monitoring. Valid values:
     */
    secSensorEnabled?: pulumi.Input<boolean>;
    /**
     * The security policy ID. System security policies and custom security policies are supported.
     *
     * Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
     *
     * > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * The ID of the server group.
     */
    serverGroupId?: pulumi.Input<string>;
    /**
     * The first port in the listener port range. Valid values: `0` to `65535`.
     *
     * > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     */
    startPort?: pulumi.Input<number>;
    /**
     * The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Listener resource.
 */
export interface ListenerArgs {
    /**
     * Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
     */
    alpnEnabled?: pulumi.Input<boolean>;
    /**
     * The ALPN policy. Valid values:
     * - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * - `HTTP2Only`: uses only HTTP 2.0.
     * - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
     * - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     *
     * > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
     *
     * > **NOTE:**  Effective only for TCPSSL listener.
     */
    alpnPolicy?: pulumi.Input<string>;
    /**
     * The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP. 
     *
     * > **NOTE:**  Only one CA certificate is supported.
     */
    caCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to enable mutual authentication. Valid values:
     */
    caEnabled?: pulumi.Input<boolean>;
    /**
     * The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP. 
     *
     * > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
     */
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
     */
    cps?: pulumi.Input<number>;
    /**
     * The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
     *
     * > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     */
    endPort?: pulumi.Input<number>;
    /**
     * The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Enter a name for the listener.
     * The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
     */
    listenerDescription?: pulumi.Input<string>;
    /**
     * The listener port. Valid values: `0` to `65535`.
     * If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
     */
    listenerPort: pulumi.Input<number>;
    /**
     * The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
     */
    listenerProtocol: pulumi.Input<string>;
    /**
     * The ID of the Network Load Balancer (NLB) instance.
     */
    loadBalancerId: pulumi.Input<string>;
    /**
     * The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
     *
     * > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
     */
    mss?: pulumi.Input<number>;
    /**
     * The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
     */
    proxyProtocolConfig?: pulumi.Input<inputs.nlb.ListenerProxyProtocolConfig>;
    /**
     * Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
     */
    proxyProtocolEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable fine-grained monitoring. Valid values:
     */
    secSensorEnabled?: pulumi.Input<boolean>;
    /**
     * The security policy ID. System security policies and custom security policies are supported.
     *
     * Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
     *
     * > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * The ID of the server group.
     */
    serverGroupId: pulumi.Input<string>;
    /**
     * The first port in the listener port range. Valid values: `0` to `65535`.
     *
     * > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     */
    startPort?: pulumi.Input<number>;
    /**
     * The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
     */
    status?: pulumi.Input<string>;
    /**
     * The tag of the resource
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
