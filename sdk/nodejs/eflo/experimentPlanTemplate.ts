// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Eflo Experiment Plan Template resource.
 *
 * For information about Eflo Experiment Plan Template and how to use it, see [What is Experiment Plan Template](https://www.alibabacloud.com/help/en/pai/developer-reference/api-eflo-cnp-2023-08-28-createexperimentplantemplate).
 *
 * > **NOTE:** Available since v1.248.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.eflo.ExperimentPlanTemplate("default", {
 *     templatePipelines: [{
 *         workloadId: 2,
 *         workloadName: "MatMul",
 *         envParams: {
 *             cpuPerWorker: 90,
 *             gpuPerWorker: 8,
 *             memoryPerWorker: 500,
 *             shareMemory: 500,
 *             workerNum: 1,
 *             pyTorchVersion: "1",
 *             gpuDriverVersion: "1",
 *             cudaVersion: "1",
 *             ncclVersion: "1",
 *         },
 *         pipelineOrder: 1,
 *         scene: "baseline",
 *     }],
 *     privacyLevel: "private",
 *     templateName: name,
 *     templateDescription: name,
 * });
 * ```
 *
 * ## Import
 *
 * Eflo Experiment Plan Template can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate example <id>
 * ```
 */
export class ExperimentPlanTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ExperimentPlanTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExperimentPlanTemplateState, opts?: pulumi.CustomResourceOptions): ExperimentPlanTemplate {
        return new ExperimentPlanTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate';

    /**
     * Returns true if the given object is an instance of ExperimentPlanTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExperimentPlanTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExperimentPlanTemplate.__pulumiType;
    }

    /**
     * The creation time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Used to indicate the privacy level of the content or information. It can have the following optional parameters:
     * - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
     * - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
     */
    public readonly privacyLevel!: pulumi.Output<string>;
    /**
     * Describe the purpose of this template.
     */
    public readonly templateDescription!: pulumi.Output<string | undefined>;
    /**
     * The ID of the template.
     */
    public /*out*/ readonly templateId!: pulumi.Output<string>;
    /**
     * Help users identify and select specific templates.
     */
    public readonly templateName!: pulumi.Output<string>;
    /**
     * Representative Template Pipeline. See `templatePipeline` below.
     */
    public readonly templatePipelines!: pulumi.Output<outputs.eflo.ExperimentPlanTemplateTemplatePipeline[]>;

    /**
     * Create a ExperimentPlanTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExperimentPlanTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExperimentPlanTemplateArgs | ExperimentPlanTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExperimentPlanTemplateState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["privacyLevel"] = state ? state.privacyLevel : undefined;
            resourceInputs["templateDescription"] = state ? state.templateDescription : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
            resourceInputs["templatePipelines"] = state ? state.templatePipelines : undefined;
        } else {
            const args = argsOrState as ExperimentPlanTemplateArgs | undefined;
            if ((!args || args.privacyLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privacyLevel'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            if ((!args || args.templatePipelines === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templatePipelines'");
            }
            resourceInputs["privacyLevel"] = args ? args.privacyLevel : undefined;
            resourceInputs["templateDescription"] = args ? args.templateDescription : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["templatePipelines"] = args ? args.templatePipelines : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["templateId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExperimentPlanTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExperimentPlanTemplate resources.
 */
export interface ExperimentPlanTemplateState {
    /**
     * The creation time of the resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Used to indicate the privacy level of the content or information. It can have the following optional parameters:
     * - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
     * - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
     */
    privacyLevel?: pulumi.Input<string>;
    /**
     * Describe the purpose of this template.
     */
    templateDescription?: pulumi.Input<string>;
    /**
     * The ID of the template.
     */
    templateId?: pulumi.Input<string>;
    /**
     * Help users identify and select specific templates.
     */
    templateName?: pulumi.Input<string>;
    /**
     * Representative Template Pipeline. See `templatePipeline` below.
     */
    templatePipelines?: pulumi.Input<pulumi.Input<inputs.eflo.ExperimentPlanTemplateTemplatePipeline>[]>;
}

/**
 * The set of arguments for constructing a ExperimentPlanTemplate resource.
 */
export interface ExperimentPlanTemplateArgs {
    /**
     * Used to indicate the privacy level of the content or information. It can have the following optional parameters:
     * - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
     * - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
     */
    privacyLevel: pulumi.Input<string>;
    /**
     * Describe the purpose of this template.
     */
    templateDescription?: pulumi.Input<string>;
    /**
     * Help users identify and select specific templates.
     */
    templateName: pulumi.Input<string>;
    /**
     * Representative Template Pipeline. See `templatePipeline` below.
     */
    templatePipelines: pulumi.Input<pulumi.Input<inputs.eflo.ExperimentPlanTemplateTemplatePipeline>[]>;
}
