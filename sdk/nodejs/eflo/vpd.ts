// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Eflo Vpd resource.
 *
 * For information about Eflo Vpd and how to use it, see [What is Vpd](https://help.aliyun.com/document_detail/604976.html).
 *
 * > **NOTE:** Available in v1.201.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.eflo.Vpd("default", {
 *     cidr: "10.0.0.0/8",
 *     vpdName: "RMC-Terraform-Test",
 * });
 * ```
 *
 * ## Import
 *
 * Eflo Vpd can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:eflo/vpd:Vpd example <id>
 * ```
 */
export class Vpd extends pulumi.CustomResource {
    /**
     * Get an existing Vpd resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpdState, opts?: pulumi.CustomResourceOptions): Vpd {
        return new Vpd(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:eflo/vpd:Vpd';

    /**
     * Returns true if the given object is an instance of Vpd.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpd {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpd.__pulumiType;
    }

    /**
     * CIDR network segment
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * The creation time of the resource
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Modification time
     */
    public /*out*/ readonly gmtModified!: pulumi.Output<string>;
    /**
     * The Resource group id
     */
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    /**
     * The Vpd status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The Name of the VPD.
     */
    public readonly vpdName!: pulumi.Output<string>;

    /**
     * Create a Vpd resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpdArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpdArgs | VpdState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpdState | undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["gmtModified"] = state ? state.gmtModified : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vpdName"] = state ? state.vpdName : undefined;
        } else {
            const args = argsOrState as VpdArgs | undefined;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.vpdName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpdName'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["vpdName"] = args ? args.vpdName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["gmtModified"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpd.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Vpd resources.
 */
export interface VpdState {
    /**
     * CIDR network segment
     */
    cidr?: pulumi.Input<string>;
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * Modification time
     */
    gmtModified?: pulumi.Input<string>;
    /**
     * The Resource group id
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The Vpd status.
     */
    status?: pulumi.Input<string>;
    /**
     * The Name of the VPD.
     */
    vpdName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpd resource.
 */
export interface VpdArgs {
    /**
     * CIDR network segment
     */
    cidr: pulumi.Input<string>;
    /**
     * The Resource group id
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The Name of the VPD.
     */
    vpdName: pulumi.Input<string>;
}
