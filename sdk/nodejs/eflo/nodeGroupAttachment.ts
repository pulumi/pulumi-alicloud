// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Eflo Node Group Attachment resource.
 *
 * Node Association Node Group Resources.
 *
 * For information about Eflo Node Group Attachment and how to use it, see [What is Node Group Attachment](https://next.api.alibabacloud.com/document/eflo-controller/2022-12-15/ExtendCluster).
 *
 * > **NOTE:** Available since v1.255.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.eflo.NodeGroupAttachment("default", {
 *     vswitchId: "vsw-uf63gbmvwgreao66opmie",
 *     hostname: "attachment-example-e01-cn-smw4d1bzd0a",
 *     loginPassword: "G7f$2kL9@vQx3Zp5*",
 *     clusterId: "i118976621753269898628",
 *     nodeGroupId: "i127582271753269898630",
 *     nodeId: "e01-cn-smw4d1bzd0a",
 *     vpcId: "vpc-uf6t73bb01dfprb2qvpqa",
 * });
 * ```
 *
 * ## Import
 *
 * Eflo Node Group Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:eflo/nodeGroupAttachment:NodeGroupAttachment example <cluster_id>:<node_group_id>:<node_id>
 * ```
 */
export class NodeGroupAttachment extends pulumi.CustomResource {
    /**
     * Get an existing NodeGroupAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NodeGroupAttachmentState, opts?: pulumi.CustomResourceOptions): NodeGroupAttachment {
        return new NodeGroupAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:eflo/nodeGroupAttachment:NodeGroupAttachment';

    /**
     * Returns true if the given object is an instance of NodeGroupAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NodeGroupAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NodeGroupAttachment.__pulumiType;
    }

    /**
     * Cluster ID
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The data disk of the cloud disk to be attached to the node. See `dataDisk` below.
     */
    public readonly dataDisks!: pulumi.Output<outputs.eflo.NodeGroupAttachmentDataDisk[] | undefined>;
    /**
     * Node hostname
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * Node login password
     */
    public readonly loginPassword!: pulumi.Output<string | undefined>;
    /**
     * Node group ID
     */
    public readonly nodeGroupId!: pulumi.Output<string>;
    /**
     * Node ID
     */
    public readonly nodeId!: pulumi.Output<string>;
    /**
     * User-defined data
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * Vpc id
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * vswitch id
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a NodeGroupAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NodeGroupAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NodeGroupAttachmentArgs | NodeGroupAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NodeGroupAttachmentState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["loginPassword"] = state ? state.loginPassword : undefined;
            resourceInputs["nodeGroupId"] = state ? state.nodeGroupId : undefined;
            resourceInputs["nodeId"] = state ? state.nodeId : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as NodeGroupAttachmentArgs | undefined;
            if ((!args || args.hostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["loginPassword"] = args ? args.loginPassword : undefined;
            resourceInputs["nodeGroupId"] = args ? args.nodeGroupId : undefined;
            resourceInputs["nodeId"] = args ? args.nodeId : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NodeGroupAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NodeGroupAttachment resources.
 */
export interface NodeGroupAttachmentState {
    /**
     * Cluster ID
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The data disk of the cloud disk to be attached to the node. See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.eflo.NodeGroupAttachmentDataDisk>[]>;
    /**
     * Node hostname
     */
    hostname?: pulumi.Input<string>;
    /**
     * Node login password
     */
    loginPassword?: pulumi.Input<string>;
    /**
     * Node group ID
     */
    nodeGroupId?: pulumi.Input<string>;
    /**
     * Node ID
     */
    nodeId?: pulumi.Input<string>;
    /**
     * User-defined data
     */
    userData?: pulumi.Input<string>;
    /**
     * Vpc id
     */
    vpcId?: pulumi.Input<string>;
    /**
     * vswitch id
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NodeGroupAttachment resource.
 */
export interface NodeGroupAttachmentArgs {
    /**
     * Cluster ID
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The data disk of the cloud disk to be attached to the node. See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.eflo.NodeGroupAttachmentDataDisk>[]>;
    /**
     * Node hostname
     */
    hostname: pulumi.Input<string>;
    /**
     * Node login password
     */
    loginPassword?: pulumi.Input<string>;
    /**
     * Node group ID
     */
    nodeGroupId?: pulumi.Input<string>;
    /**
     * Node ID
     */
    nodeId?: pulumi.Input<string>;
    /**
     * User-defined data
     */
    userData?: pulumi.Input<string>;
    /**
     * Vpc id
     */
    vpcId: pulumi.Input<string>;
    /**
     * vswitch id
     */
    vswitchId: pulumi.Input<string>;
}
