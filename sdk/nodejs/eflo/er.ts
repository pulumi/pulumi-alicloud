// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Eflo Er resource.
 *
 * For information about Eflo Er and how to use it, see [What is Er](https://next.api.alibabacloud.com/document/eflo/2022-05-30/CreateEr).
 *
 * > **NOTE:** Available since v1.258.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.resourcemanager.getResourceGroups({});
 * const defaultEr = new alicloud.eflo.Er("default", {
 *     erName: "er-example-tf",
 *     masterZoneId: "cn-hangzhou-a",
 *     description: "example",
 * });
 * ```
 *
 * ## Import
 *
 * Eflo Er can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:eflo/er:Er example <id>
 * ```
 */
export class Er extends pulumi.CustomResource {
    /**
     * Get an existing Er resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ErState, opts?: pulumi.CustomResourceOptions): Er {
        return new Er(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:eflo/er:Er';

    /**
     * Returns true if the given object is an instance of Er.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Er {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Er.__pulumiType;
    }

    /**
     * The creation time of the resource
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Lingjun HUB name
     */
    declare public readonly erName: pulumi.Output<string>;
    /**
     * Primary zone
     */
    declare public readonly masterZoneId: pulumi.Output<string>;
    /**
     * region information
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the resource group instance.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * Status
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Label List
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Er resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ErArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ErArgs | ErState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ErState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["erName"] = state?.erName;
            resourceInputs["masterZoneId"] = state?.masterZoneId;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as ErArgs | undefined;
            if (args?.erName === undefined && !opts.urn) {
                throw new Error("Missing required property 'erName'");
            }
            if (args?.masterZoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'masterZoneId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["erName"] = args?.erName;
            resourceInputs["masterZoneId"] = args?.masterZoneId;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Er.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Er resources.
 */
export interface ErState {
    /**
     * The creation time of the resource
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Lingjun HUB name
     */
    erName?: pulumi.Input<string>;
    /**
     * Primary zone
     */
    masterZoneId?: pulumi.Input<string>;
    /**
     * region information
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group instance.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Status
     */
    status?: pulumi.Input<string>;
    /**
     * Label List
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Er resource.
 */
export interface ErArgs {
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Lingjun HUB name
     */
    erName: pulumi.Input<string>;
    /**
     * Primary zone
     */
    masterZoneId: pulumi.Input<string>;
    /**
     * The ID of the resource group instance.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Label List
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
