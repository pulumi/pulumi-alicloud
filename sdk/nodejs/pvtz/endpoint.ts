// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Private Zone Endpoint resource.
 *
 * For information about Private Zone Endpoint and how to use it, see [What is Endpoint](https://www.alibabacloud.com/help/en/privatezone/latest/add-endpoint).
 *
 * > **NOTE:** Available since v1.143.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as std from "@pulumi/std";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "example_name";
 * const _default = alicloud.pvtz.getResolverZones({
 *     status: "NORMAL",
 * });
 * const defaultGetRegions = alicloud.getRegions({
 *     current: true,
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "172.16.0.0/12",
 * });
 * const defaultSwitch: alicloud.vpc.Switch[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     defaultSwitch.push(new alicloud.vpc.Switch(`default-${range.value}`, {
 *         vpcId: defaultNetwork.id,
 *         cidrBlock: defaultNetwork.cidrBlock.apply(cidrBlock => std.cidrsubnetOutput({
 *             input: cidrBlock,
 *             newbits: 8,
 *             netnum: range.value,
 *         })).apply(invoke => invoke.result),
 *         zoneId: _default.then(_default => _default.zones[range.value].zoneId),
 *     }));
 * }
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     vpcId: defaultNetwork.id,
 *     name: name,
 * });
 * const defaultEndpoint = new alicloud.pvtz.Endpoint("default", {
 *     endpointName: name,
 *     securityGroupId: defaultSecurityGroup.id,
 *     vpcId: defaultNetwork.id,
 *     vpcRegionId: defaultGetRegions.then(defaultGetRegions => defaultGetRegions.regions?.[0]?.id),
 *     ipConfigs: [
 *         {
 *             zoneId: defaultSwitch[0].zoneId,
 *             cidrBlock: defaultSwitch[0].cidrBlock,
 *             vswitchId: defaultSwitch[0].id,
 *         },
 *         {
 *             zoneId: defaultSwitch[1].zoneId,
 *             cidrBlock: defaultSwitch[1].cidrBlock,
 *             vswitchId: defaultSwitch[1].id,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Private Zone Endpoint can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:pvtz/endpoint:Endpoint example <id>
 * ```
 */
export class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointState, opts?: pulumi.CustomResourceOptions): Endpoint {
        return new Endpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:pvtz/endpoint:Endpoint';

    /**
     * Returns true if the given object is an instance of Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Endpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Endpoint.__pulumiType;
    }

    /**
     * The name of the resource.
     */
    public readonly endpointName!: pulumi.Output<string>;
    /**
     * The Ip Configs. See `ipConfigs` below. **NOTE:** In order to ensure high availability, add at least 2 and up to 6.
     */
    public readonly ipConfigs!: pulumi.Output<outputs.pvtz.EndpointIpConfig[]>;
    /**
     * The ID of the Security Group.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The VPC ID.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The Region of the VPC.
     */
    public readonly vpcRegionId!: pulumi.Output<string>;

    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointArgs | EndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndpointState | undefined;
            resourceInputs["endpointName"] = state ? state.endpointName : undefined;
            resourceInputs["ipConfigs"] = state ? state.ipConfigs : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcRegionId"] = state ? state.vpcRegionId : undefined;
        } else {
            const args = argsOrState as EndpointArgs | undefined;
            if ((!args || args.endpointName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointName'");
            }
            if ((!args || args.ipConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipConfigs'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vpcRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcRegionId'");
            }
            resourceInputs["endpointName"] = args ? args.endpointName : undefined;
            resourceInputs["ipConfigs"] = args ? args.ipConfigs : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcRegionId"] = args ? args.vpcRegionId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Endpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Endpoint resources.
 */
export interface EndpointState {
    /**
     * The name of the resource.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * The Ip Configs. See `ipConfigs` below. **NOTE:** In order to ensure high availability, add at least 2 and up to 6.
     */
    ipConfigs?: pulumi.Input<pulumi.Input<inputs.pvtz.EndpointIpConfig>[]>;
    /**
     * The ID of the Security Group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
     */
    status?: pulumi.Input<string>;
    /**
     * The VPC ID.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The Region of the VPC.
     */
    vpcRegionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    /**
     * The name of the resource.
     */
    endpointName: pulumi.Input<string>;
    /**
     * The Ip Configs. See `ipConfigs` below. **NOTE:** In order to ensure high availability, add at least 2 and up to 6.
     */
    ipConfigs: pulumi.Input<pulumi.Input<inputs.pvtz.EndpointIpConfig>[]>;
    /**
     * The ID of the Security Group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The VPC ID.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The Region of the VPC.
     */
    vpcRegionId: pulumi.Input<string>;
}
