// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const foo = new alicloud.pvtz.Zone("foo", {zoneName: "foo.example.com"});
 * ```
 *
 * ## Import
 *
 * Private Zone can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:pvtz/zone:Zone example abc123456
 * ```
 */
export class Zone extends pulumi.CustomResource {
    /**
     * Get an existing Zone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneState, opts?: pulumi.CustomResourceOptions): Zone {
        return new Zone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:pvtz/zone:Zone';

    /**
     * Returns true if the given object is an instance of Zone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Zone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Zone.__pulumiType;
    }

    /**
     * Whether the Private Zone is ptr.
     */
    declare public /*out*/ readonly isPtr: pulumi.Output<boolean>;
    /**
     * The language. Valid values: "zh", "en", "jp".
     */
    declare public readonly lang: pulumi.Output<string | undefined>;
    /**
     * The name of the Private Zone. The `name` has been deprecated from provider version 1.107.0. Please use 'zone_name' instead.
     *
     * @deprecated Field 'name' has been deprecated from version 1.107.0. Use 'zone_name' instead.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The recursive DNS proxy. Valid values:
     * - ZONE: indicates that the recursive DNS proxy is disabled.
     * - RECORD: indicates that the recursive DNS proxy is enabled.
     * Default to "ZONE".
     */
    declare public readonly proxyPattern: pulumi.Output<string | undefined>;
    /**
     * The count of the Private Zone Record.
     */
    declare public /*out*/ readonly recordCount: pulumi.Output<number>;
    /**
     * The remark of the Private Zone.
     */
    declare public readonly remark: pulumi.Output<string | undefined>;
    /**
     * The Id of resource group which the Private Zone belongs.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * The status of the host synchronization task. Valid values:  `ON`,`OFF`. **NOTE:** You can update the `syncStatus` to enable/disable the host synchronization task.
     */
    declare public readonly syncStatus: pulumi.Output<string | undefined>;
    /**
     * The tags of the Private Zone.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The IP address of the client.
     */
    declare public readonly userClientIp: pulumi.Output<string | undefined>;
    /**
     * The user information of the host synchronization task. See `userInfo` below.
     */
    declare public readonly userInfos: pulumi.Output<outputs.pvtz.ZoneUserInfo[]>;
    /**
     * The zoneName of the Private Zone. The `zoneName` is required when the value of the `name`  is Empty.
     */
    declare public readonly zoneName: pulumi.Output<string>;

    /**
     * Create a Zone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneArgs | ZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneState | undefined;
            resourceInputs["isPtr"] = state?.isPtr;
            resourceInputs["lang"] = state?.lang;
            resourceInputs["name"] = state?.name;
            resourceInputs["proxyPattern"] = state?.proxyPattern;
            resourceInputs["recordCount"] = state?.recordCount;
            resourceInputs["remark"] = state?.remark;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["syncStatus"] = state?.syncStatus;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["userClientIp"] = state?.userClientIp;
            resourceInputs["userInfos"] = state?.userInfos;
            resourceInputs["zoneName"] = state?.zoneName;
        } else {
            const args = argsOrState as ZoneArgs | undefined;
            resourceInputs["lang"] = args?.lang;
            resourceInputs["name"] = args?.name;
            resourceInputs["proxyPattern"] = args?.proxyPattern;
            resourceInputs["remark"] = args?.remark;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["syncStatus"] = args?.syncStatus;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["userClientIp"] = args?.userClientIp;
            resourceInputs["userInfos"] = args?.userInfos;
            resourceInputs["zoneName"] = args?.zoneName;
            resourceInputs["isPtr"] = undefined /*out*/;
            resourceInputs["recordCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Zone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Zone resources.
 */
export interface ZoneState {
    /**
     * Whether the Private Zone is ptr.
     */
    isPtr?: pulumi.Input<boolean>;
    /**
     * The language. Valid values: "zh", "en", "jp".
     */
    lang?: pulumi.Input<string>;
    /**
     * The name of the Private Zone. The `name` has been deprecated from provider version 1.107.0. Please use 'zone_name' instead.
     *
     * @deprecated Field 'name' has been deprecated from version 1.107.0. Use 'zone_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The recursive DNS proxy. Valid values:
     * - ZONE: indicates that the recursive DNS proxy is disabled.
     * - RECORD: indicates that the recursive DNS proxy is enabled.
     * Default to "ZONE".
     */
    proxyPattern?: pulumi.Input<string>;
    /**
     * The count of the Private Zone Record.
     */
    recordCount?: pulumi.Input<number>;
    /**
     * The remark of the Private Zone.
     */
    remark?: pulumi.Input<string>;
    /**
     * The Id of resource group which the Private Zone belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the host synchronization task. Valid values:  `ON`,`OFF`. **NOTE:** You can update the `syncStatus` to enable/disable the host synchronization task.
     */
    syncStatus?: pulumi.Input<string>;
    /**
     * The tags of the Private Zone.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The IP address of the client.
     */
    userClientIp?: pulumi.Input<string>;
    /**
     * The user information of the host synchronization task. See `userInfo` below.
     */
    userInfos?: pulumi.Input<pulumi.Input<inputs.pvtz.ZoneUserInfo>[]>;
    /**
     * The zoneName of the Private Zone. The `zoneName` is required when the value of the `name`  is Empty.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Zone resource.
 */
export interface ZoneArgs {
    /**
     * The language. Valid values: "zh", "en", "jp".
     */
    lang?: pulumi.Input<string>;
    /**
     * The name of the Private Zone. The `name` has been deprecated from provider version 1.107.0. Please use 'zone_name' instead.
     *
     * @deprecated Field 'name' has been deprecated from version 1.107.0. Use 'zone_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * The recursive DNS proxy. Valid values:
     * - ZONE: indicates that the recursive DNS proxy is disabled.
     * - RECORD: indicates that the recursive DNS proxy is enabled.
     * Default to "ZONE".
     */
    proxyPattern?: pulumi.Input<string>;
    /**
     * The remark of the Private Zone.
     */
    remark?: pulumi.Input<string>;
    /**
     * The Id of resource group which the Private Zone belongs.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The status of the host synchronization task. Valid values:  `ON`,`OFF`. **NOTE:** You can update the `syncStatus` to enable/disable the host synchronization task.
     */
    syncStatus?: pulumi.Input<string>;
    /**
     * The tags of the Private Zone.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The IP address of the client.
     */
    userClientIp?: pulumi.Input<string>;
    /**
     * The user information of the host synchronization task. See `userInfo` below.
     */
    userInfos?: pulumi.Input<pulumi.Input<inputs.pvtz.ZoneUserInfo>[]>;
    /**
     * The zoneName of the Private Zone. The `zoneName` is required when the value of the `name`  is Empty.
     */
    zoneName?: pulumi.Input<string>;
}
