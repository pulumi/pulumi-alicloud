// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Network Attached Storage (NAS) Snapshot resource.
 *
 * For information about Network Attached Storage (NAS) Snapshot and how to use it, see [What is Snapshot](https://www.alibabacloud.com/help/en/doc-detail/126549.html).
 *
 * > **NOTE:** Available in v1.152.0+.
 *
 * > **NOTE:** Only Extreme NAS file systems support the snapshot feature.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "testacc";
 * const defaultZones = alicloud.nas.getZones({
 *     fileSystemType: "extreme",
 * });
 * const defaultFileSystem = new alicloud.nas.FileSystem("defaultFileSystem", {
 *     fileSystemType: "extreme",
 *     protocolType: "NFS",
 *     zoneId: defaultZones.then(defaultZones => defaultZones.zones?.[0]?.zoneId),
 *     storageType: "standard",
 *     description: name,
 *     capacity: 100,
 * });
 * const defaultSnapshot = new alicloud.nas.Snapshot("defaultSnapshot", {
 *     fileSystemId: defaultFileSystem.id,
 *     description: name,
 *     retentionDays: 20,
 *     snapshotName: name,
 * });
 * ```
 *
 * ## Import
 *
 * Network Attached Storage (NAS) Snapshot can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:nas/snapshot:Snapshot example <id>
 * ```
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotState, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:nas/snapshot:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * The description of the snapshot. It must be `2` to `256` characters in length and cannot start with `https://` or `https://`.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the file system.
     */
    public readonly fileSystemId!: pulumi.Output<string>;
    /**
     * The retention period of the snapshot. Unit: days. Valid values:
     * * `-1`: The default value. Auto snapshots are permanently retained. After the number of auto snapshots exceeds the upper limit, the earliest auto snapshot is automatically deleted.
     */
    public readonly retentionDays!: pulumi.Output<number | undefined>;
    /**
     * SnapshotName. It must be `2` to `128` characters in length and must start with a letter, but cannot start with `https://` or `https://`.
     */
    public readonly snapshotName!: pulumi.Output<string | undefined>;
    /**
     * The status of the snapshot.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotArgs | SnapshotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["retentionDays"] = state ? state.retentionDays : undefined;
            resourceInputs["snapshotName"] = state ? state.snapshotName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as SnapshotArgs | undefined;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["retentionDays"] = args ? args.retentionDays : undefined;
            resourceInputs["snapshotName"] = args ? args.snapshotName : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snapshot resources.
 */
export interface SnapshotState {
    /**
     * The description of the snapshot. It must be `2` to `256` characters in length and cannot start with `https://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the file system.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * The retention period of the snapshot. Unit: days. Valid values:
     * * `-1`: The default value. Auto snapshots are permanently retained. After the number of auto snapshots exceeds the upper limit, the earliest auto snapshot is automatically deleted.
     */
    retentionDays?: pulumi.Input<number>;
    /**
     * SnapshotName. It must be `2` to `128` characters in length and must start with a letter, but cannot start with `https://` or `https://`.
     */
    snapshotName?: pulumi.Input<string>;
    /**
     * The status of the snapshot.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * The description of the snapshot. It must be `2` to `256` characters in length and cannot start with `https://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the file system.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * The retention period of the snapshot. Unit: days. Valid values:
     * * `-1`: The default value. Auto snapshots are permanently retained. After the number of auto snapshots exceeds the upper limit, the earliest auto snapshot is automatically deleted.
     */
    retentionDays?: pulumi.Input<number>;
    /**
     * SnapshotName. It must be `2` to `128` characters in length and must start with a letter, but cannot start with `https://` or `https://`.
     */
    snapshotName?: pulumi.Input<string>;
}
