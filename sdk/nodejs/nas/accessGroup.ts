// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a NAS Access Group resource. File system Access Group.
 *
 * In NAS, the permission group acts as a whitelist that allows you to restrict file system access. You can allow specified IP addresses or CIDR blocks to access the file system, and assign different levels of access permission to different IP addresses or CIDR blocks by adding rules to the permission group.
 * For information about NAS Access Group and how to use it, see [What is NAS Access Group](https://www.alibabacloud.com/help/en/nas/developer-reference/api-nas-2017-06-26-createaccessgroup)
 *
 * > **NOTE:** Available since v1.33.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const _default = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const foo = new alicloud.nas.AccessGroup("foo", {
 *     accessGroupName: `terraform-example-${_default.result}`,
 *     accessGroupType: "Vpc",
 *     description: "terraform-example",
 *     fileSystemType: "extreme",
 * });
 * ```
 *
 * ## Import
 *
 * NAS Access Group can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:nas/accessGroup:AccessGroup example <access_group_name>:<file_system_type>
 * ```
 */
export class AccessGroup extends pulumi.CustomResource {
    /**
     * Get an existing AccessGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessGroupState, opts?: pulumi.CustomResourceOptions): AccessGroup {
        return new AccessGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:nas/accessGroup:AccessGroup';

    /**
     * Returns true if the given object is an instance of AccessGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessGroup.__pulumiType;
    }

    /**
     * The name of the permission group.
     */
    declare public readonly accessGroupName: pulumi.Output<string>;
    /**
     * Permission group types, including Vpc.
     */
    declare public readonly accessGroupType: pulumi.Output<string>;
    /**
     * (Available since v1.218.0) Creation time.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Permission group description information.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * File system type. Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    declare public readonly fileSystemType: pulumi.Output<string | undefined>;
    /**
     * Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * (Available since v1.256.0) The region ID.
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
     *
     * @deprecated Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a AccessGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessGroupArgs | AccessGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessGroupState | undefined;
            resourceInputs["accessGroupName"] = state?.accessGroupName;
            resourceInputs["accessGroupType"] = state?.accessGroupType;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["fileSystemType"] = state?.fileSystemType;
            resourceInputs["name"] = state?.name;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as AccessGroupArgs | undefined;
            resourceInputs["accessGroupName"] = args?.accessGroupName;
            resourceInputs["accessGroupType"] = args?.accessGroupType;
            resourceInputs["description"] = args?.description;
            resourceInputs["fileSystemType"] = args?.fileSystemType;
            resourceInputs["name"] = args?.name;
            resourceInputs["type"] = args?.type;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessGroup resources.
 */
export interface AccessGroupState {
    /**
     * The name of the permission group.
     */
    accessGroupName?: pulumi.Input<string>;
    /**
     * Permission group types, including Vpc.
     */
    accessGroupType?: pulumi.Input<string>;
    /**
     * (Available since v1.218.0) Creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Permission group description information.
     */
    description?: pulumi.Input<string>;
    /**
     * File system type. Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * (Available since v1.256.0) The region ID.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
     *
     * @deprecated Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessGroup resource.
 */
export interface AccessGroupArgs {
    /**
     * The name of the permission group.
     */
    accessGroupName?: pulumi.Input<string>;
    /**
     * Permission group types, including Vpc.
     */
    accessGroupType?: pulumi.Input<string>;
    /**
     * Permission group description information.
     */
    description?: pulumi.Input<string>;
    /**
     * File system type. Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * The following arguments will be discarded. Please use new fields as soon as possible:
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
     *
     * @deprecated Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
     */
    name?: pulumi.Input<string>;
    /**
     * Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
     *
     * @deprecated Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
     */
    type?: pulumi.Input<string>;
}
