// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a NAS Access Group resource.
 *
 * In NAS, the permission group acts as a whitelist that allows you to restrict file system access. You can allow specified IP addresses or CIDR blocks to access the file system, and assign different levels of access permission to different IP addresses or CIDR blocks by adding rules to the permission group.
 * For information about NAS Access Group and how to use it, see [What is NAS Access Group](https://www.alibabacloud.com/help/en/doc-detail/27534)
 *
 * > **NOTE:** Available in v1.33.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const foo = new alicloud.nas.AccessGroup("foo", {
 *     description: "test_AccessG",
 *     type: "Classic",
 * });
 * ```
 *
 * Example after v1.92.0
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const foo = new alicloud.nas.AccessGroup("foo", {
 *     accessGroupName: "CreateAccessGroup",
 *     accessGroupType: "Vpc",
 *     description: "test_AccessG",
 *     fileSystemType: "extreme",
 * });
 * ```
 *
 * ## Import
 *
 * NAS Access Group can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:nas/accessGroup:AccessGroup foo tf_testAccNasConfig:standard
 * ```
 */
export class AccessGroup extends pulumi.CustomResource {
    /**
     * Get an existing AccessGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessGroupState, opts?: pulumi.CustomResourceOptions): AccessGroup {
        return new AccessGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:nas/accessGroup:AccessGroup';

    /**
     * Returns true if the given object is an instance of AccessGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessGroup.__pulumiType;
    }

    /**
     * A Name of one Access Group.
     */
    public readonly accessGroupName!: pulumi.Output<string>;
    /**
     * A Type of one Access Group. Valid values: `Vpc` and `Classic`.
     */
    public readonly accessGroupType!: pulumi.Output<string>;
    /**
     * The Access Group description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The type of file system. Valid values: `standard` and `extreme`. Default to `standard`. Note that the extreme only support Vpc Network.
     */
    public readonly fileSystemType!: pulumi.Output<string | undefined>;
    /**
     * Replaced by `accessGroupName` after version 1.92.0.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Replaced by `accessGroupType` after version 1.92.0.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a AccessGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessGroupArgs | AccessGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessGroupState | undefined;
            resourceInputs["accessGroupName"] = state ? state.accessGroupName : undefined;
            resourceInputs["accessGroupType"] = state ? state.accessGroupType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fileSystemType"] = state ? state.fileSystemType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AccessGroupArgs | undefined;
            resourceInputs["accessGroupName"] = args ? args.accessGroupName : undefined;
            resourceInputs["accessGroupType"] = args ? args.accessGroupType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fileSystemType"] = args ? args.fileSystemType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessGroup resources.
 */
export interface AccessGroupState {
    /**
     * A Name of one Access Group.
     */
    accessGroupName?: pulumi.Input<string>;
    /**
     * A Type of one Access Group. Valid values: `Vpc` and `Classic`.
     */
    accessGroupType?: pulumi.Input<string>;
    /**
     * The Access Group description.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of file system. Valid values: `standard` and `extreme`. Default to `standard`. Note that the extreme only support Vpc Network.
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * Replaced by `accessGroupName` after version 1.92.0.
     */
    name?: pulumi.Input<string>;
    /**
     * Replaced by `accessGroupType` after version 1.92.0.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessGroup resource.
 */
export interface AccessGroupArgs {
    /**
     * A Name of one Access Group.
     */
    accessGroupName?: pulumi.Input<string>;
    /**
     * A Type of one Access Group. Valid values: `Vpc` and `Classic`.
     */
    accessGroupType?: pulumi.Input<string>;
    /**
     * The Access Group description.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of file system. Valid values: `standard` and `extreme`. Default to `standard`. Note that the extreme only support Vpc Network.
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * Replaced by `accessGroupName` after version 1.92.0.
     */
    name?: pulumi.Input<string>;
    /**
     * Replaced by `accessGroupType` after version 1.92.0.
     */
    type?: pulumi.Input<string>;
}
