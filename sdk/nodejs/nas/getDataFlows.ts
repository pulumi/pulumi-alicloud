// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the Nas Data Flows of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.153.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.nas.getDataFlows({
 *     fileSystemId: "example_value",
 *     ids: [
 *         "example_value-1",
 *         "example_value-2",
 *     ],
 * });
 * export const nasDataFlowId1 = ids.then(ids => ids.flows?.[0]?.id);
 * const status = alicloud.nas.getDataFlows({
 *     fileSystemId: "example_value",
 *     status: "Running",
 * });
 * export const nasDataFlowId2 = status.then(status => status.flows?.[0]?.id);
 * ```
 */
export function getDataFlows(args: GetDataFlowsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataFlowsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:nas/getDataFlows:getDataFlows", {
        "fileSystemId": args.fileSystemId,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataFlows.
 */
export interface GetDataFlowsArgs {
    /**
     * The ID of the file system.
     */
    fileSystemId: string;
    /**
     * A list of Data Flow IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: string;
    /**
     * The status of the Data flow.
     */
    status?: string;
}

/**
 * A collection of values returned by getDataFlows.
 */
export interface GetDataFlowsResult {
    readonly fileSystemId: string;
    readonly flows: outputs.nas.GetDataFlowsFlow[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly status?: string;
}
/**
 * This data source provides the Nas Data Flows of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.153.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.nas.getDataFlows({
 *     fileSystemId: "example_value",
 *     ids: [
 *         "example_value-1",
 *         "example_value-2",
 *     ],
 * });
 * export const nasDataFlowId1 = ids.then(ids => ids.flows?.[0]?.id);
 * const status = alicloud.nas.getDataFlows({
 *     fileSystemId: "example_value",
 *     status: "Running",
 * });
 * export const nasDataFlowId2 = status.then(status => status.flows?.[0]?.id);
 * ```
 */
export function getDataFlowsOutput(args: GetDataFlowsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataFlowsResult> {
    return pulumi.output(args).apply((a: any) => getDataFlows(a, opts))
}

/**
 * A collection of arguments for invoking getDataFlows.
 */
export interface GetDataFlowsOutputArgs {
    /**
     * The ID of the file system.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * A list of Data Flow IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results (after running `pulumi preview`).
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The status of the Data flow.
     */
    status?: pulumi.Input<string>;
}
