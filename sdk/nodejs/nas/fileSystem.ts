// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a File Storage (NAS) File System resource.
 *
 * File System Instance.
 *
 * For information about File Storage (NAS) File System and how to use it, see [What is File System](https://www.alibabacloud.com/help/en/nas/developer-reference/api-nas-2017-06-26-createfilesystem).
 *
 * > **NOTE:** Available since v1.33.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.nas.getZones({
 *     fileSystemType: "standard",
 * });
 * const defaultFileSystem = new alicloud.nas.FileSystem("default", {
 *     protocolType: "NFS",
 *     storageType: "Capacity",
 *     description: name,
 *     encryptType: 1,
 *     fileSystemType: "standard",
 *     recycleBin: {
 *         status: "Enable",
 *         reservedDays: 10,
 *     },
 *     nfsAcl: {
 *         enabled: true,
 *     },
 *     zoneId: _default.then(_default => _default.zones?.[0]?.zoneId),
 * });
 * ```
 *
 * ## Import
 *
 * File Storage (NAS) File System can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:nas/fileSystem:FileSystem example <id>
 * ```
 */
export class FileSystem extends pulumi.CustomResource {
    /**
     * Get an existing FileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileSystemState, opts?: pulumi.CustomResourceOptions): FileSystem {
        return new FileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:nas/fileSystem:FileSystem';

    /**
     * Returns true if the given object is an instance of FileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileSystem.__pulumiType;
    }

    /**
     * File system capacity.
     *
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     *
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     */
    declare public readonly capacity: pulumi.Output<number>;
    /**
     * CreateTime
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * File system description.
     *
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with'http: // 'and'https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Whether the file system is encrypted.
     *
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     *
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     */
    declare public readonly encryptType: pulumi.Output<number>;
    /**
     * File system type.
     *
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     */
    declare public readonly fileSystemType: pulumi.Output<string>;
    /**
     * String of keytab file content encrypted by base64
     */
    declare public readonly keytab: pulumi.Output<string | undefined>;
    /**
     * String of the keytab file content encrypted by MD5
     */
    declare public readonly keytabMd5: pulumi.Output<string | undefined>;
    /**
     * The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     */
    declare public readonly kmsKeyId: pulumi.Output<string>;
    /**
     * NFS ACL See `nfsAcl` below.
     */
    declare public readonly nfsAcl: pulumi.Output<outputs.nas.FileSystemNfsAcl>;
    /**
     * Option. See `options` below.
     */
    declare public readonly options: pulumi.Output<outputs.nas.FileSystemOptions>;
    /**
     * File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     */
    declare public readonly protocolType: pulumi.Output<string>;
    /**
     * Recycle Bin See `recycleBin` below.
     */
    declare public readonly recycleBin: pulumi.Output<outputs.nas.FileSystemRecycleBin>;
    /**
     * RegionId
     */
    declare public /*out*/ readonly regionId: pulumi.Output<string>;
    /**
     * The ID of the resource group.
     */
    declare public readonly resourceGroupId: pulumi.Output<string>;
    /**
     * SMB ACL See `smbAcl` below.
     */
    declare public readonly smbAcl: pulumi.Output<outputs.nas.FileSystemSmbAcl>;
    /**
     * Only extreme NAS is supported.
     *
     * > **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     */
    declare public readonly snapshotId: pulumi.Output<string | undefined>;
    /**
     * File system status. Includes:(such as creating a mount point) can only be performed when the file system is in the Running state.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     */
    declare public readonly storageType: pulumi.Output<string>;
    /**
     * Label information collection.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     */
    declare public readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     */
    declare public readonly vswitchId: pulumi.Output<string | undefined>;
    /**
     * The zone ID.
     *
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     *
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     *
     * > **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     *
     * > **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a FileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileSystemArgs | FileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileSystemState | undefined;
            resourceInputs["capacity"] = state?.capacity;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["encryptType"] = state?.encryptType;
            resourceInputs["fileSystemType"] = state?.fileSystemType;
            resourceInputs["keytab"] = state?.keytab;
            resourceInputs["keytabMd5"] = state?.keytabMd5;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["nfsAcl"] = state?.nfsAcl;
            resourceInputs["options"] = state?.options;
            resourceInputs["protocolType"] = state?.protocolType;
            resourceInputs["recycleBin"] = state?.recycleBin;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["resourceGroupId"] = state?.resourceGroupId;
            resourceInputs["smbAcl"] = state?.smbAcl;
            resourceInputs["snapshotId"] = state?.snapshotId;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageType"] = state?.storageType;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vswitchId"] = state?.vswitchId;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as FileSystemArgs | undefined;
            if (args?.protocolType === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocolType'");
            }
            if (args?.storageType === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageType'");
            }
            resourceInputs["capacity"] = args?.capacity;
            resourceInputs["description"] = args?.description;
            resourceInputs["encryptType"] = args?.encryptType;
            resourceInputs["fileSystemType"] = args?.fileSystemType;
            resourceInputs["keytab"] = args?.keytab;
            resourceInputs["keytabMd5"] = args?.keytabMd5;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId;
            resourceInputs["nfsAcl"] = args?.nfsAcl;
            resourceInputs["options"] = args?.options;
            resourceInputs["protocolType"] = args?.protocolType;
            resourceInputs["recycleBin"] = args?.recycleBin;
            resourceInputs["resourceGroupId"] = args?.resourceGroupId;
            resourceInputs["smbAcl"] = args?.smbAcl;
            resourceInputs["snapshotId"] = args?.snapshotId;
            resourceInputs["storageType"] = args?.storageType;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vswitchId"] = args?.vswitchId;
            resourceInputs["zoneId"] = args?.zoneId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileSystem resources.
 */
export interface FileSystemState {
    /**
     * File system capacity.
     *
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     *
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     */
    capacity?: pulumi.Input<number>;
    /**
     * CreateTime
     */
    createTime?: pulumi.Input<string>;
    /**
     * File system description.
     *
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with'http: // 'and'https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the file system is encrypted.
     *
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     *
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     */
    encryptType?: pulumi.Input<number>;
    /**
     * File system type.
     *
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * String of keytab file content encrypted by base64
     */
    keytab?: pulumi.Input<string>;
    /**
     * String of the keytab file content encrypted by MD5
     */
    keytabMd5?: pulumi.Input<string>;
    /**
     * The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * NFS ACL See `nfsAcl` below.
     */
    nfsAcl?: pulumi.Input<inputs.nas.FileSystemNfsAcl>;
    /**
     * Option. See `options` below.
     */
    options?: pulumi.Input<inputs.nas.FileSystemOptions>;
    /**
     * File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     */
    protocolType?: pulumi.Input<string>;
    /**
     * Recycle Bin See `recycleBin` below.
     */
    recycleBin?: pulumi.Input<inputs.nas.FileSystemRecycleBin>;
    /**
     * RegionId
     */
    regionId?: pulumi.Input<string>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * SMB ACL See `smbAcl` below.
     */
    smbAcl?: pulumi.Input<inputs.nas.FileSystemSmbAcl>;
    /**
     * Only extreme NAS is supported.
     *
     * > **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * File system status. Includes:(such as creating a mount point) can only be performed when the file system is in the Running state.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     */
    storageType?: pulumi.Input<string>;
    /**
     * Label information collection.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID.
     *
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     *
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     *
     * > **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     *
     * > **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FileSystem resource.
 */
export interface FileSystemArgs {
    /**
     * File system capacity.
     *
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     *
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     */
    capacity?: pulumi.Input<number>;
    /**
     * File system description.
     *
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with'http: // 'and'https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the file system is encrypted.
     *
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     *
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     */
    encryptType?: pulumi.Input<number>;
    /**
     * File system type.
     *
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * String of keytab file content encrypted by base64
     */
    keytab?: pulumi.Input<string>;
    /**
     * String of the keytab file content encrypted by MD5
     */
    keytabMd5?: pulumi.Input<string>;
    /**
     * The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * NFS ACL See `nfsAcl` below.
     */
    nfsAcl?: pulumi.Input<inputs.nas.FileSystemNfsAcl>;
    /**
     * Option. See `options` below.
     */
    options?: pulumi.Input<inputs.nas.FileSystemOptions>;
    /**
     * File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     */
    protocolType: pulumi.Input<string>;
    /**
     * Recycle Bin See `recycleBin` below.
     */
    recycleBin?: pulumi.Input<inputs.nas.FileSystemRecycleBin>;
    /**
     * The ID of the resource group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * SMB ACL See `smbAcl` below.
     */
    smbAcl?: pulumi.Input<inputs.nas.FileSystemSmbAcl>;
    /**
     * Only extreme NAS is supported.
     *
     * > **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     */
    storageType: pulumi.Input<string>;
    /**
     * Label information collection.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     */
    vswitchId?: pulumi.Input<string>;
    /**
     * The zone ID.
     *
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     *
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     *
     * > **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     *
     * > **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     */
    zoneId?: pulumi.Input<string>;
}
