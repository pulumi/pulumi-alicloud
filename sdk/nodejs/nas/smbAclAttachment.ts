// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Nas Smb Acl resource.
 *
 * Alibaba Cloud SMB protocol file storage service supports user authentication based on AD domain system and permission access control at the file system level. Connecting and accessing the SMB file system as a domain user can implement the requirements for access control at the file and directory level in the SMB protocol file system. The current Alibaba Cloud SMB protocol file storage service does not support multi-user file and directory-level permission access control, and only provides file system-level authentication and access based on the whitelist mechanism that supports cloud accounts and source IP permission groups control.
 * > **NOTE:** Available in 1.186.0+.
 */
export class SmbAclAttachment extends pulumi.CustomResource {
    /**
     * Get an existing SmbAclAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SmbAclAttachmentState, opts?: pulumi.CustomResourceOptions): SmbAclAttachment {
        return new SmbAclAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:nas/smbAclAttachment:SmbAclAttachment';

    /**
     * Returns true if the given object is an instance of SmbAclAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SmbAclAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmbAclAttachment.__pulumiType;
    }

    /**
     * The method that is used to authenticate network identities.
     */
    public /*out*/ readonly authMethod!: pulumi.Output<string>;
    /**
     * Specifies whether to allow anonymous access. Valid values:
     * true: The file system allows anonymous access.
     * false: The file system denies anonymous access. Default value: false.
     */
    public readonly enableAnonymousAccess!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to enable the ACL feature.
     * true: enables the ACL feature.
     * false: disables the ACL feature.
     */
    public /*out*/ readonly enabled!: pulumi.Output<string>;
    /**
     * Specifies whether to enable encryption in transit. Valid values:
     * true: enables encryption in transit.
     * false: disables encryption in transit. Default value: false.
     */
    public readonly encryptData!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the file system.
     */
    public readonly fileSystemId!: pulumi.Output<string>;
    /**
     * The home directory of each user. Each user-specific home directory must meet the following requirements:    
     * Each segment starts with a forward slash (/) or a backslash (\).
     * Each segment does not contain the following special characters: <>":?*.
     * Each segment is 0 to 255 characters in length.
     * The total length is 0 to 32,767 characters.
     * For example, if you create a user named A and the home directory is /home, the file system automatically creates a directory named /home/A when User A logs on to the file system. If the /home/A directory already exists, the file system does not create the directory.
     */
    public readonly homeDirPath!: pulumi.Output<string | undefined>;
    /**
     * The string that is generated after the system encodes the keytab file by using Base64.
     */
    public readonly keytab!: pulumi.Output<string>;
    /**
     * RThe string that is generated after the system encodes the keytab file by using MD5.
     */
    public readonly keytabMd5!: pulumi.Output<string>;
    /**
     * Specifies whether to deny access from non-encrypted clients. Valid values:
     * true: The file system denies access from non-encrypted clients.
     * false: The file system allows access from non-encrypted clients. Default value: false.
     */
    public readonly rejectUnencryptedAccess!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of a super admin. The ID must meet the following requirements:
     * The ID starts with S and does not contain letters except S.
     * The ID contains at least three hyphens (-) as delimiters.
     * Example: S-1-5-22 and S-1-5-22-23.
     */
    public readonly superAdminSid!: pulumi.Output<string | undefined>;

    /**
     * Create a SmbAclAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SmbAclAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SmbAclAttachmentArgs | SmbAclAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SmbAclAttachmentState | undefined;
            resourceInputs["authMethod"] = state ? state.authMethod : undefined;
            resourceInputs["enableAnonymousAccess"] = state ? state.enableAnonymousAccess : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["encryptData"] = state ? state.encryptData : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["homeDirPath"] = state ? state.homeDirPath : undefined;
            resourceInputs["keytab"] = state ? state.keytab : undefined;
            resourceInputs["keytabMd5"] = state ? state.keytabMd5 : undefined;
            resourceInputs["rejectUnencryptedAccess"] = state ? state.rejectUnencryptedAccess : undefined;
            resourceInputs["superAdminSid"] = state ? state.superAdminSid : undefined;
        } else {
            const args = argsOrState as SmbAclAttachmentArgs | undefined;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            if ((!args || args.keytab === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keytab'");
            }
            if ((!args || args.keytabMd5 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keytabMd5'");
            }
            resourceInputs["enableAnonymousAccess"] = args ? args.enableAnonymousAccess : undefined;
            resourceInputs["encryptData"] = args ? args.encryptData : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["homeDirPath"] = args ? args.homeDirPath : undefined;
            resourceInputs["keytab"] = args ? args.keytab : undefined;
            resourceInputs["keytabMd5"] = args ? args.keytabMd5 : undefined;
            resourceInputs["rejectUnencryptedAccess"] = args ? args.rejectUnencryptedAccess : undefined;
            resourceInputs["superAdminSid"] = args ? args.superAdminSid : undefined;
            resourceInputs["authMethod"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SmbAclAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SmbAclAttachment resources.
 */
export interface SmbAclAttachmentState {
    /**
     * The method that is used to authenticate network identities.
     */
    authMethod?: pulumi.Input<string>;
    /**
     * Specifies whether to allow anonymous access. Valid values:
     * true: The file system allows anonymous access.
     * false: The file system denies anonymous access. Default value: false.
     */
    enableAnonymousAccess?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable the ACL feature.
     * true: enables the ACL feature.
     * false: disables the ACL feature.
     */
    enabled?: pulumi.Input<string>;
    /**
     * Specifies whether to enable encryption in transit. Valid values:
     * true: enables encryption in transit.
     * false: disables encryption in transit. Default value: false.
     */
    encryptData?: pulumi.Input<boolean>;
    /**
     * The ID of the file system.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * The home directory of each user. Each user-specific home directory must meet the following requirements:    
     * Each segment starts with a forward slash (/) or a backslash (\).
     * Each segment does not contain the following special characters: <>":?*.
     * Each segment is 0 to 255 characters in length.
     * The total length is 0 to 32,767 characters.
     * For example, if you create a user named A and the home directory is /home, the file system automatically creates a directory named /home/A when User A logs on to the file system. If the /home/A directory already exists, the file system does not create the directory.
     */
    homeDirPath?: pulumi.Input<string>;
    /**
     * The string that is generated after the system encodes the keytab file by using Base64.
     */
    keytab?: pulumi.Input<string>;
    /**
     * RThe string that is generated after the system encodes the keytab file by using MD5.
     */
    keytabMd5?: pulumi.Input<string>;
    /**
     * Specifies whether to deny access from non-encrypted clients. Valid values:
     * true: The file system denies access from non-encrypted clients.
     * false: The file system allows access from non-encrypted clients. Default value: false.
     */
    rejectUnencryptedAccess?: pulumi.Input<boolean>;
    /**
     * The ID of a super admin. The ID must meet the following requirements:
     * The ID starts with S and does not contain letters except S.
     * The ID contains at least three hyphens (-) as delimiters.
     * Example: S-1-5-22 and S-1-5-22-23.
     */
    superAdminSid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SmbAclAttachment resource.
 */
export interface SmbAclAttachmentArgs {
    /**
     * Specifies whether to allow anonymous access. Valid values:
     * true: The file system allows anonymous access.
     * false: The file system denies anonymous access. Default value: false.
     */
    enableAnonymousAccess?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable encryption in transit. Valid values:
     * true: enables encryption in transit.
     * false: disables encryption in transit. Default value: false.
     */
    encryptData?: pulumi.Input<boolean>;
    /**
     * The ID of the file system.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * The home directory of each user. Each user-specific home directory must meet the following requirements:    
     * Each segment starts with a forward slash (/) or a backslash (\).
     * Each segment does not contain the following special characters: <>":?*.
     * Each segment is 0 to 255 characters in length.
     * The total length is 0 to 32,767 characters.
     * For example, if you create a user named A and the home directory is /home, the file system automatically creates a directory named /home/A when User A logs on to the file system. If the /home/A directory already exists, the file system does not create the directory.
     */
    homeDirPath?: pulumi.Input<string>;
    /**
     * The string that is generated after the system encodes the keytab file by using Base64.
     */
    keytab: pulumi.Input<string>;
    /**
     * RThe string that is generated after the system encodes the keytab file by using MD5.
     */
    keytabMd5: pulumi.Input<string>;
    /**
     * Specifies whether to deny access from non-encrypted clients. Valid values:
     * true: The file system denies access from non-encrypted clients.
     * false: The file system allows access from non-encrypted clients. Default value: false.
     */
    rejectUnencryptedAccess?: pulumi.Input<boolean>;
    /**
     * The ID of a super admin. The ID must meet the following requirements:
     * The ID starts with S and does not contain letters except S.
     * The ID contains at least three hyphens (-) as delimiters.
     * Example: S-1-5-22 and S-1-5-22-23.
     */
    superAdminSid?: pulumi.Input<string>;
}
