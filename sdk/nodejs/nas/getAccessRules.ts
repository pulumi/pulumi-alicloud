// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides AccessRule available to the user.
 *
 * > **NOTE**: Available in 1.35.0+
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const foo = pulumi.output(alicloud.nas.getAccessRules({
 *     accessGroupName: "tf-testAccAccessGroupsdatasource",
 *     rwAccess: "RDWR",
 *     sourceCidrIp: "168.1.1.0/16",
 *     userAccess: "no_squash",
 * }));
 *
 * export const alicloudNasAccessRulesId = foo.rules[0].id;
 * ```
 */
export function getAccessRules(args: GetAccessRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessRulesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:nas/getAccessRules:getAccessRules", {
        "accessGroupName": args.accessGroupName,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "rwAccess": args.rwAccess,
        "sourceCidrIp": args.sourceCidrIp,
        "userAccess": args.userAccess,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessRules.
 */
export interface GetAccessRulesArgs {
    /**
     * Filter results by a specific AccessGroupName.
     */
    accessGroupName: string;
    /**
     * A list of rule IDs.
     */
    ids?: string[];
    outputFile?: string;
    /**
     * Filter results by a specific RWAccess.
     */
    rwAccess?: string;
    /**
     * Filter results by a specific SourceCidrIp.
     */
    sourceCidrIp?: string;
    /**
     * Filter results by a specific UserAccess.
     */
    userAccess?: string;
}

/**
 * A collection of values returned by getAccessRules.
 */
export interface GetAccessRulesResult {
    readonly accessGroupName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of rule IDs, Each element set to `accessRuleId` (Each element formats as `<access_group_name>:<access_rule_id>` before 1.53.0).
     */
    readonly ids: string[];
    readonly outputFile?: string;
    /**
     * A list of AccessRules. Each element contains the following attributes:
     */
    readonly rules: outputs.nas.GetAccessRulesRule[];
    /**
     * RWAccess of the AccessRule.
     */
    readonly rwAccess?: string;
    /**
     * SourceCidrIp of the AccessRule.
     */
    readonly sourceCidrIp?: string;
    /**
     * UserAccess of the AccessRule
     */
    readonly userAccess?: string;
}

export function getAccessRulesOutput(args: GetAccessRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessRulesResult> {
    return pulumi.output(args).apply(a => getAccessRules(a, opts))
}

/**
 * A collection of arguments for invoking getAccessRules.
 */
export interface GetAccessRulesOutputArgs {
    /**
     * Filter results by a specific AccessGroupName.
     */
    accessGroupName: pulumi.Input<string>;
    /**
     * A list of rule IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    /**
     * Filter results by a specific RWAccess.
     */
    rwAccess?: pulumi.Input<string>;
    /**
     * Filter results by a specific SourceCidrIp.
     */
    sourceCidrIp?: pulumi.Input<string>;
    /**
     * Filter results by a specific UserAccess.
     */
    userAccess?: pulumi.Input<string>;
}
