// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Phone Policy resource.
 *
 * Cloud phone policy.
 *
 * For information about Cloud Phone Policy and how to use it, see [What is Policy](https://next.api.alibabacloud.com/document/eds-aic/2023-09-30/CreatePolicyGroup).
 *
 * > **NOTE:** Available since v1.243.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.cloudphone.Policy("default", {
 *     policyGroupName: "NewPolicyName",
 *     resolutionWidth: 720,
 *     lockResolution: "on",
 *     cameraRedirect: "on",
 *     resolutionHeight: 1280,
 *     clipboard: "read",
 *     netRedirectPolicy: {
 *         netRedirect: "on",
 *         customProxy: "on",
 *         proxyType: "socks5",
 *         hostAddr: "192.168.12.13",
 *         port: "8888",
 *         proxyUserName: "user1",
 *         proxyPassword: "123456",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Phone Policy can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:cloudphone/policy:Policy example <id>
 * ```
 */
export class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyState, opts?: pulumi.CustomResourceOptions): Policy {
        return new Policy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cloudphone/policy:Policy';

    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Policy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Policy.__pulumiType;
    }

    /**
     * Whether to turn on local camera redirection.
     */
    declare public readonly cameraRedirect: pulumi.Output<string>;
    /**
     * Clipboard permissions.
     */
    declare public readonly clipboard: pulumi.Output<string>;
    /**
     * Whether to lock the resolution.
     */
    declare public readonly lockResolution: pulumi.Output<string>;
    /**
     * Network redirection. See `netRedirectPolicy` below.
     */
    declare public readonly netRedirectPolicy: pulumi.Output<outputs.cloudphone.PolicyNetRedirectPolicy>;
    /**
     * The policy name.
     */
    declare public readonly policyGroupName: pulumi.Output<string>;
    /**
     * The height of the resolution. Unit: Pixels.
     */
    declare public readonly resolutionHeight: pulumi.Output<number>;
    /**
     * The width of the resolution. Unit: Pixels.
     */
    declare public readonly resolutionWidth: pulumi.Output<number>;

    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyArgs | PolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyState | undefined;
            resourceInputs["cameraRedirect"] = state?.cameraRedirect;
            resourceInputs["clipboard"] = state?.clipboard;
            resourceInputs["lockResolution"] = state?.lockResolution;
            resourceInputs["netRedirectPolicy"] = state?.netRedirectPolicy;
            resourceInputs["policyGroupName"] = state?.policyGroupName;
            resourceInputs["resolutionHeight"] = state?.resolutionHeight;
            resourceInputs["resolutionWidth"] = state?.resolutionWidth;
        } else {
            const args = argsOrState as PolicyArgs | undefined;
            resourceInputs["cameraRedirect"] = args?.cameraRedirect;
            resourceInputs["clipboard"] = args?.clipboard;
            resourceInputs["lockResolution"] = args?.lockResolution;
            resourceInputs["netRedirectPolicy"] = args?.netRedirectPolicy;
            resourceInputs["policyGroupName"] = args?.policyGroupName;
            resourceInputs["resolutionHeight"] = args?.resolutionHeight;
            resourceInputs["resolutionWidth"] = args?.resolutionWidth;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Policy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Policy resources.
 */
export interface PolicyState {
    /**
     * Whether to turn on local camera redirection.
     */
    cameraRedirect?: pulumi.Input<string>;
    /**
     * Clipboard permissions.
     */
    clipboard?: pulumi.Input<string>;
    /**
     * Whether to lock the resolution.
     */
    lockResolution?: pulumi.Input<string>;
    /**
     * Network redirection. See `netRedirectPolicy` below.
     */
    netRedirectPolicy?: pulumi.Input<inputs.cloudphone.PolicyNetRedirectPolicy>;
    /**
     * The policy name.
     */
    policyGroupName?: pulumi.Input<string>;
    /**
     * The height of the resolution. Unit: Pixels.
     */
    resolutionHeight?: pulumi.Input<number>;
    /**
     * The width of the resolution. Unit: Pixels.
     */
    resolutionWidth?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Policy resource.
 */
export interface PolicyArgs {
    /**
     * Whether to turn on local camera redirection.
     */
    cameraRedirect?: pulumi.Input<string>;
    /**
     * Clipboard permissions.
     */
    clipboard?: pulumi.Input<string>;
    /**
     * Whether to lock the resolution.
     */
    lockResolution?: pulumi.Input<string>;
    /**
     * Network redirection. See `netRedirectPolicy` below.
     */
    netRedirectPolicy?: pulumi.Input<inputs.cloudphone.PolicyNetRedirectPolicy>;
    /**
     * The policy name.
     */
    policyGroupName?: pulumi.Input<string>;
    /**
     * The height of the resolution. Unit: Pixels.
     */
    resolutionHeight?: pulumi.Input<number>;
    /**
     * The width of the resolution. Unit: Pixels.
     */
    resolutionWidth?: pulumi.Input<number>;
}
