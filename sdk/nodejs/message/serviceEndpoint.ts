// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Message Service Endpoint can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:message/serviceEndpoint:ServiceEndpoint example <id>
 * ```
 */
export class ServiceEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ServiceEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceEndpointState, opts?: pulumi.CustomResourceOptions): ServiceEndpoint {
        return new ServiceEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:message/serviceEndpoint:ServiceEndpoint';

    /**
     * Returns true if the given object is an instance of ServiceEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceEndpoint.__pulumiType;
    }

    /**
     * Specifies whether the endpoint is enabled. Valid values:
     */
    public readonly endpointEnabled!: pulumi.Output<boolean>;
    /**
     * Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     */
    public readonly endpointType!: pulumi.Output<string>;

    /**
     * Create a ServiceEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceEndpointArgs | ServiceEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceEndpointState | undefined;
            resourceInputs["endpointEnabled"] = state ? state.endpointEnabled : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
        } else {
            const args = argsOrState as ServiceEndpointArgs | undefined;
            if ((!args || args.endpointEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointEnabled'");
            }
            if ((!args || args.endpointType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointType'");
            }
            resourceInputs["endpointEnabled"] = args ? args.endpointEnabled : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceEndpoint resources.
 */
export interface ServiceEndpointState {
    /**
     * Specifies whether the endpoint is enabled. Valid values:
     */
    endpointEnabled?: pulumi.Input<boolean>;
    /**
     * Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     */
    endpointType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceEndpoint resource.
 */
export interface ServiceEndpointArgs {
    /**
     * Specifies whether the endpoint is enabled. Valid values:
     */
    endpointEnabled: pulumi.Input<boolean>;
    /**
     * Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     */
    endpointType: pulumi.Input<string>;
}
