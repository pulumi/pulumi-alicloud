// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetServiceQueuesArgs, GetServiceQueuesResult, GetServiceQueuesOutputArgs } from "./getServiceQueues";
export const getServiceQueues: typeof import("./getServiceQueues").getServiceQueues = null as any;
export const getServiceQueuesOutput: typeof import("./getServiceQueues").getServiceQueuesOutput = null as any;
utilities.lazyLoad(exports, ["getServiceQueues","getServiceQueuesOutput"], () => require("./getServiceQueues"));

export { GetServiceSubscriptionsArgs, GetServiceSubscriptionsResult, GetServiceSubscriptionsOutputArgs } from "./getServiceSubscriptions";
export const getServiceSubscriptions: typeof import("./getServiceSubscriptions").getServiceSubscriptions = null as any;
export const getServiceSubscriptionsOutput: typeof import("./getServiceSubscriptions").getServiceSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getServiceSubscriptions","getServiceSubscriptionsOutput"], () => require("./getServiceSubscriptions"));

export { GetServiceTopicsArgs, GetServiceTopicsResult, GetServiceTopicsOutputArgs } from "./getServiceTopics";
export const getServiceTopics: typeof import("./getServiceTopics").getServiceTopics = null as any;
export const getServiceTopicsOutput: typeof import("./getServiceTopics").getServiceTopicsOutput = null as any;
utilities.lazyLoad(exports, ["getServiceTopics","getServiceTopicsOutput"], () => require("./getServiceTopics"));

export { ServiceEndpointArgs, ServiceEndpointState } from "./serviceEndpoint";
export type ServiceEndpoint = import("./serviceEndpoint").ServiceEndpoint;
export const ServiceEndpoint: typeof import("./serviceEndpoint").ServiceEndpoint = null as any;
utilities.lazyLoad(exports, ["ServiceEndpoint"], () => require("./serviceEndpoint"));

export { ServiceEndpointAclArgs, ServiceEndpointAclState } from "./serviceEndpointAcl";
export type ServiceEndpointAcl = import("./serviceEndpointAcl").ServiceEndpointAcl;
export const ServiceEndpointAcl: typeof import("./serviceEndpointAcl").ServiceEndpointAcl = null as any;
utilities.lazyLoad(exports, ["ServiceEndpointAcl"], () => require("./serviceEndpointAcl"));

export { ServiceQueueArgs, ServiceQueueState } from "./serviceQueue";
export type ServiceQueue = import("./serviceQueue").ServiceQueue;
export const ServiceQueue: typeof import("./serviceQueue").ServiceQueue = null as any;
utilities.lazyLoad(exports, ["ServiceQueue"], () => require("./serviceQueue"));

export { ServiceSubscriptionArgs, ServiceSubscriptionState } from "./serviceSubscription";
export type ServiceSubscription = import("./serviceSubscription").ServiceSubscription;
export const ServiceSubscription: typeof import("./serviceSubscription").ServiceSubscription = null as any;
utilities.lazyLoad(exports, ["ServiceSubscription"], () => require("./serviceSubscription"));

export { ServiceTopicArgs, ServiceTopicState } from "./serviceTopic";
export type ServiceTopic = import("./serviceTopic").ServiceTopic;
export const ServiceTopic: typeof import("./serviceTopic").ServiceTopic = null as any;
utilities.lazyLoad(exports, ["ServiceTopic"], () => require("./serviceTopic"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:message/serviceEndpoint:ServiceEndpoint":
                return new ServiceEndpoint(name, <any>undefined, { urn })
            case "alicloud:message/serviceEndpointAcl:ServiceEndpointAcl":
                return new ServiceEndpointAcl(name, <any>undefined, { urn })
            case "alicloud:message/serviceQueue:ServiceQueue":
                return new ServiceQueue(name, <any>undefined, { urn })
            case "alicloud:message/serviceSubscription:ServiceSubscription":
                return new ServiceSubscription(name, <any>undefined, { urn })
            case "alicloud:message/serviceTopic:ServiceTopic":
                return new ServiceTopic(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "message/serviceEndpoint", _module)
pulumi.runtime.registerResourceModule("alicloud", "message/serviceEndpointAcl", _module)
pulumi.runtime.registerResourceModule("alicloud", "message/serviceQueue", _module)
pulumi.runtime.registerResourceModule("alicloud", "message/serviceSubscription", _module)
pulumi.runtime.registerResourceModule("alicloud", "message/serviceTopic", _module)
