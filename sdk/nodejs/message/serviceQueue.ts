// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Message Service Queue resource.
 *
 * For information about Message Service Queue and how to use it, see [What is Queue](https://www.alibabacloud.com/help/en/message-service/latest/createqueue).
 *
 * > **NOTE:** Available since v1.188.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.message.ServiceQueue("default", {
 *     queueName: name,
 *     delaySeconds: 2,
 *     pollingWaitSeconds: 2,
 *     messageRetentionPeriod: 566,
 *     maximumMessageSize: 1126,
 *     visibilityTimeout: 30,
 * });
 * ```
 *
 * ## Import
 *
 * Message Service Queue can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:message/serviceQueue:ServiceQueue example <id>
 * ```
 */
export class ServiceQueue extends pulumi.CustomResource {
    /**
     * Get an existing ServiceQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceQueueState, opts?: pulumi.CustomResourceOptions): ServiceQueue {
        return new ServiceQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:message/serviceQueue:ServiceQueue';

    /**
     * Returns true if the given object is an instance of ServiceQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceQueue.__pulumiType;
    }

    /**
     * (Available since v1.223.2) The time when the queue was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    /**
     * The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
     */
    public readonly delaySeconds!: pulumi.Output<number>;
    /**
     * The dead-letter queue policy. See `dlqPolicy` below.
     */
    public readonly dlqPolicy!: pulumi.Output<outputs.message.ServiceQueueDlqPolicy>;
    /**
     * Specifies whether to enable the logging feature. Default value: `false`. Valid values:
     */
    public readonly loggingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
     */
    public readonly maximumMessageSize!: pulumi.Output<number>;
    /**
     * The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
     */
    public readonly messageRetentionPeriod!: pulumi.Output<number>;
    /**
     * The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
     */
    public readonly pollingWaitSeconds!: pulumi.Output<number>;
    /**
     * The name of the queue.
     */
    public readonly queueName!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
     */
    public readonly visibilityTimeout!: pulumi.Output<number>;

    /**
     * Create a ServiceQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceQueueArgs | ServiceQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceQueueState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["delaySeconds"] = state ? state.delaySeconds : undefined;
            resourceInputs["dlqPolicy"] = state ? state.dlqPolicy : undefined;
            resourceInputs["loggingEnabled"] = state ? state.loggingEnabled : undefined;
            resourceInputs["maximumMessageSize"] = state ? state.maximumMessageSize : undefined;
            resourceInputs["messageRetentionPeriod"] = state ? state.messageRetentionPeriod : undefined;
            resourceInputs["pollingWaitSeconds"] = state ? state.pollingWaitSeconds : undefined;
            resourceInputs["queueName"] = state ? state.queueName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["visibilityTimeout"] = state ? state.visibilityTimeout : undefined;
        } else {
            const args = argsOrState as ServiceQueueArgs | undefined;
            if ((!args || args.queueName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queueName'");
            }
            resourceInputs["delaySeconds"] = args ? args.delaySeconds : undefined;
            resourceInputs["dlqPolicy"] = args ? args.dlqPolicy : undefined;
            resourceInputs["loggingEnabled"] = args ? args.loggingEnabled : undefined;
            resourceInputs["maximumMessageSize"] = args ? args.maximumMessageSize : undefined;
            resourceInputs["messageRetentionPeriod"] = args ? args.messageRetentionPeriod : undefined;
            resourceInputs["pollingWaitSeconds"] = args ? args.pollingWaitSeconds : undefined;
            resourceInputs["queueName"] = args ? args.queueName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["visibilityTimeout"] = args ? args.visibilityTimeout : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceQueue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceQueue resources.
 */
export interface ServiceQueueState {
    /**
     * (Available since v1.223.2) The time when the queue was created.
     */
    createTime?: pulumi.Input<number>;
    /**
     * The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
     */
    delaySeconds?: pulumi.Input<number>;
    /**
     * The dead-letter queue policy. See `dlqPolicy` below.
     */
    dlqPolicy?: pulumi.Input<inputs.message.ServiceQueueDlqPolicy>;
    /**
     * Specifies whether to enable the logging feature. Default value: `false`. Valid values:
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
     */
    maximumMessageSize?: pulumi.Input<number>;
    /**
     * The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
     */
    messageRetentionPeriod?: pulumi.Input<number>;
    /**
     * The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
     */
    pollingWaitSeconds?: pulumi.Input<number>;
    /**
     * The name of the queue.
     */
    queueName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
     */
    visibilityTimeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceQueue resource.
 */
export interface ServiceQueueArgs {
    /**
     * The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
     */
    delaySeconds?: pulumi.Input<number>;
    /**
     * The dead-letter queue policy. See `dlqPolicy` below.
     */
    dlqPolicy?: pulumi.Input<inputs.message.ServiceQueueDlqPolicy>;
    /**
     * Specifies whether to enable the logging feature. Default value: `false`. Valid values:
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
     */
    maximumMessageSize?: pulumi.Input<number>;
    /**
     * The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
     */
    messageRetentionPeriod?: pulumi.Input<number>;
    /**
     * The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
     */
    pollingWaitSeconds?: pulumi.Input<number>;
    /**
     * The name of the queue.
     */
    queueName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
     */
    visibilityTimeout?: pulumi.Input<number>;
}
