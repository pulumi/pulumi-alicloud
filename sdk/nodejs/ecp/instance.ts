// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Elastic Cloud Phone (ECP) Instance resource.
 *
 * For information about Elastic Cloud Phone (ECP) Instance and how to use it, see [What is Instance](https://next.api.aliyun.com/document/cloudphone/2020-12-30/RunInstances).
 *
 * > **NOTE:** Available since v1.158.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.ecp.getZones({});
 * const defaultGetInstanceTypes = alicloud.ecp.getInstanceTypes({});
 * const defaultInteger = new random.index.Integer("default", {
 *     min: 10000,
 *     max: 99999,
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: `${name}-${defaultInteger.result}`,
 *     cidrBlock: "192.168.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: `${name}-${defaultInteger.result}`,
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "192.168.192.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.zoneId),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: `${name}-${defaultInteger.result}`,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultKeyPair = new alicloud.ecp.KeyPair("default", {
 *     keyPairName: `${name}-${defaultInteger.result}`,
 *     publicKeyBody: "ssh-rsa AAAAB3Nza12345678qwertyuudsfsg",
 * });
 * const defaultInstance = new alicloud.ecp.Instance("default", {
 *     instanceType: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.instanceType),
 *     imageId: "android-image-release5501072_a11_20240530.raw",
 *     vswitchId: defaultSwitch.id,
 *     securityGroupId: defaultSecurityGroup.id,
 *     keyPairName: defaultKeyPair.keyPairName,
 *     vncPassword: "Ecp123",
 *     paymentType: "PayAsYouGo",
 *     instanceName: name,
 *     description: name,
 *     force: true,
 * });
 * ```
 *
 * ## Import
 *
 * Elastic Cloud Phone (ECP) Instance can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ecp/instance:Instance example <id>
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecp/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Specifies whether to enable the auto-payment feature. Valid values:
     */
    declare public readonly autoPay: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to enable the auto-renewal feature. Valid values:
     */
    declare public readonly autoRenew: pulumi.Output<boolean | undefined>;
    /**
     * The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
     */
    declare public readonly eipBandwidth: pulumi.Output<number | undefined>;
    /**
     * Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
     */
    declare public readonly force: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the image.
     */
    declare public readonly imageId: pulumi.Output<string>;
    /**
     * The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
     */
    declare public readonly instanceName: pulumi.Output<string>;
    /**
     * The specifications of the ECP instance.
     */
    declare public readonly instanceType: pulumi.Output<string>;
    /**
     * The name of the key pair that you want to use to connect to the instance.
     */
    declare public readonly keyPairName: pulumi.Output<string | undefined>;
    /**
     * The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
     */
    declare public readonly paymentType: pulumi.Output<string>;
    /**
     * The subscription duration. Default value: `1`. Valid values:
     * - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
     * - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
     */
    declare public readonly period: pulumi.Output<string | undefined>;
    /**
     * The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
     */
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    /**
     * The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
     */
    declare public readonly resolution: pulumi.Output<string>;
    /**
     * The ID of the security group.
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * The status of the Instance. Valid values: `Running`, `Stopped`.
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
     */
    declare public readonly vncPassword: pulumi.Output<string | undefined>;
    /**
     * The ID of the vSwitch.
     */
    declare public readonly vswitchId: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["autoPay"] = state?.autoPay;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["description"] = state?.description;
            resourceInputs["eipBandwidth"] = state?.eipBandwidth;
            resourceInputs["force"] = state?.force;
            resourceInputs["imageId"] = state?.imageId;
            resourceInputs["instanceName"] = state?.instanceName;
            resourceInputs["instanceType"] = state?.instanceType;
            resourceInputs["keyPairName"] = state?.keyPairName;
            resourceInputs["paymentType"] = state?.paymentType;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["resolution"] = state?.resolution;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["vncPassword"] = state?.vncPassword;
            resourceInputs["vswitchId"] = state?.vswitchId;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.imageId === undefined && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if (args?.instanceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.vswitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["autoPay"] = args?.autoPay;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["description"] = args?.description;
            resourceInputs["eipBandwidth"] = args?.eipBandwidth;
            resourceInputs["force"] = args?.force;
            resourceInputs["imageId"] = args?.imageId;
            resourceInputs["instanceName"] = args?.instanceName;
            resourceInputs["instanceType"] = args?.instanceType;
            resourceInputs["keyPairName"] = args?.keyPairName;
            resourceInputs["paymentType"] = args?.paymentType;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["resolution"] = args?.resolution;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["status"] = args?.status;
            resourceInputs["vncPassword"] = args?.vncPassword ? pulumi.secret(args.vncPassword) : undefined;
            resourceInputs["vswitchId"] = args?.vswitchId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["vncPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Specifies whether to enable the auto-payment feature. Valid values:
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable the auto-renewal feature. Valid values:
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
     */
    eipBandwidth?: pulumi.Input<number>;
    /**
     * Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
     */
    force?: pulumi.Input<boolean>;
    /**
     * The ID of the image.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The specifications of the ECP instance.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The name of the key pair that you want to use to connect to the instance.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The subscription duration. Default value: `1`. Valid values:
     * - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
     * - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
     */
    period?: pulumi.Input<string>;
    /**
     * The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
     */
    resolution?: pulumi.Input<string>;
    /**
     * The ID of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The status of the Instance. Valid values: `Running`, `Stopped`.
     */
    status?: pulumi.Input<string>;
    /**
     * The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
     */
    vncPassword?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Specifies whether to enable the auto-payment feature. Valid values:
     */
    autoPay?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable the auto-renewal feature. Valid values:
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
     */
    description?: pulumi.Input<string>;
    /**
     * The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
     */
    eipBandwidth?: pulumi.Input<number>;
    /**
     * Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
     */
    force?: pulumi.Input<boolean>;
    /**
     * The ID of the image.
     */
    imageId: pulumi.Input<string>;
    /**
     * The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The specifications of the ECP instance.
     */
    instanceType: pulumi.Input<string>;
    /**
     * The name of the key pair that you want to use to connect to the instance.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The subscription duration. Default value: `1`. Valid values:
     * - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
     * - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
     */
    period?: pulumi.Input<string>;
    /**
     * The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
     */
    resolution?: pulumi.Input<string>;
    /**
     * The ID of the security group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The status of the Instance. Valid values: `Running`, `Stopped`.
     */
    status?: pulumi.Input<string>;
    /**
     * The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
     */
    vncPassword?: pulumi.Input<string>;
    /**
     * The ID of the vSwitch.
     */
    vswitchId: pulumi.Input<string>;
}
