// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * An access control list contains multiple IP addresses or CIDR blocks.
 * The access control list can help you to define multiple instance listening dimension,
 * and to meet the multiple usage for single access control list.
 *
 * Server Load Balancer allows you to configure access control for listeners.
 * You can configure different whitelists or blacklists for different listeners.
 *
 * You can configure access control
 * when you create a listener or change access control configuration after a listener is created.
 *
 * > **NOTE:** One access control list can be attached to many Listeners in different load balancer as whitelists or blacklists.
 *
 * > **NOTE:** The maximum number of access control lists per region  is 50.
 *
 * > **NOTE:** The maximum number of IP addresses added each time is 50.
 *
 * > **NOTE:** The maximum number of entries per access control list is 300.
 *
 * > **NOTE:** The maximum number of listeners that an access control list can be added to is 50.
 *
 * For information about slb and how to use it, see [What is Server Load Balancer](https://www.alibabacloud.com/help/doc-detail/27539.htm).
 *
 * For information about acl and how to use it, see [Configure an access control list](https://www.alibabacloud.com/help/doc-detail/85978.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraformslbaclconfig";
 * const ipVersion = config.get("ipVersion") || "ipv4";
 * const _default = new alicloud.slb.Acl("default", {
 *     ipVersion: ipVersion,
 *     entryLists: [
 *         {
 *             entry: "10.10.10.0/24",
 *             comment: "first",
 *         },
 *         {
 *             entry: "168.10.10.0/24",
 *             comment: "second",
 *         },
 *     ],
 * });
 * ```
 * ## Entry Block
 *
 * The entry mapping supports the following:
 *
 * * `entry` - (Required) An IP addresses or CIDR blocks.
 * * `comment` - (Optional) the comment of the entry.
 *
 * ## Import
 *
 * Server Load balancer access control list can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:slb/acl:Acl example acl-abc123456
 * ```
 */
export class Acl extends pulumi.CustomResource {
    /**
     * Get an existing Acl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AclState, opts?: pulumi.CustomResourceOptions): Acl {
        return new Acl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:slb/acl:Acl';

    /**
     * Returns true if the given object is an instance of Acl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Acl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Acl.__pulumiType;
    }

    /**
     * A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
     */
    public readonly entryLists!: pulumi.Output<outputs.slb.AclEntryList[] | undefined>;
    /**
     * The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
     */
    public readonly ipVersion!: pulumi.Output<string | undefined>;
    /**
     * Name of the access control list.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Resource group ID.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a Acl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AclArgs | AclState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AclState | undefined;
            inputs["entryLists"] = state ? state.entryLists : undefined;
            inputs["ipVersion"] = state ? state.ipVersion : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AclArgs | undefined;
            inputs["entryLists"] = args ? args.entryLists : undefined;
            inputs["ipVersion"] = args ? args.ipVersion : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Acl.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Acl resources.
 */
export interface AclState {
    /**
     * A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
     */
    readonly entryLists?: pulumi.Input<pulumi.Input<inputs.slb.AclEntryList>[]>;
    /**
     * The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
     */
    readonly ipVersion?: pulumi.Input<string>;
    /**
     * Name of the access control list.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Resource group ID.
     */
    readonly resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a Acl resource.
 */
export interface AclArgs {
    /**
     * A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
     */
    readonly entryLists?: pulumi.Input<pulumi.Input<inputs.slb.AclEntryList>[]>;
    /**
     * The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
     */
    readonly ipVersion?: pulumi.Input<string>;
    /**
     * Name of the access control list.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Resource group ID.
     */
    readonly resourceGroupId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}
