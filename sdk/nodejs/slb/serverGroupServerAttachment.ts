// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Load Balancer Virtual Backend Server Group Server Attachment resource.
 *
 * > **NOTE:** Available since v1.163.0.
 *
 * For information about Load Balancer Virtual Backend Server Group Server Attachment and how to use it, see [What is Virtual Backend Server Group Server Attachment](https://www.alibabacloud.com/help/en/slb/classic-load-balancer/developer-reference/api-slb-2014-05-15-addvservergroupbackendservers).
 *
 * > **NOTE:** Applying this resource may conflict with applying `alicloud.slb.Listener`,
 * and the `alicloud.slb.Listener` block should use `dependsOn = [alicloud_slb_server_group_server_attachment.xxx]` to avoid it.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = alicloud.slb.getZones({
 *     availableSlbAddressType: "vpc",
 * });
 * const defaultGetInstanceTypes = _default.then(_default => alicloud.ecs.getInstanceTypes({
 *     availabilityZone: _default.zones?.[0]?.id,
 *     instanceTypeFamily: "ecs.sn1ne",
 * }));
 * const defaultGetImages = alicloud.ecs.getImages({
 *     nameRegex: "^ubuntu_[0-9]+_[0-9]+_x64*",
 *     mostRecent: true,
 *     owners: "system",
 * });
 * const defaultNetwork = new alicloud.vpc.Network("default", {
 *     vpcName: name,
 *     cidrBlock: "192.168.0.0/16",
 * });
 * const defaultSwitch = new alicloud.vpc.Switch("default", {
 *     vswitchName: name,
 *     vpcId: defaultNetwork.id,
 *     cidrBlock: "192.168.192.0/24",
 *     zoneId: _default.then(_default => _default.zones?.[0]?.id),
 * });
 * const defaultSecurityGroup = new alicloud.ecs.SecurityGroup("default", {
 *     name: name,
 *     vpcId: defaultNetwork.id,
 * });
 * const defaultApplicationLoadBalancer = new alicloud.slb.ApplicationLoadBalancer("default", {
 *     loadBalancerName: name,
 *     vswitchId: defaultSwitch.id,
 *     loadBalancerSpec: "slb.s2.small",
 *     addressType: "intranet",
 * });
 * const defaultServerGroup = new alicloud.slb.ServerGroup("default", {
 *     loadBalancerId: defaultApplicationLoadBalancer.id,
 *     name: name,
 * });
 * const defaultInstance = new alicloud.ecs.Instance("default", {
 *     imageId: defaultGetImages.then(defaultGetImages => defaultGetImages.images?.[0]?.id),
 *     instanceType: defaultGetInstanceTypes.then(defaultGetInstanceTypes => defaultGetInstanceTypes.instanceTypes?.[0]?.id),
 *     instanceName: name,
 *     securityGroups: [defaultSecurityGroup].map(__item => __item.id),
 *     internetChargeType: "PayByTraffic",
 *     internetMaxBandwidthOut: 10,
 *     availabilityZone: _default.then(_default => _default.zones?.[0]?.id),
 *     instanceChargeType: "PostPaid",
 *     systemDiskCategory: "cloud_efficiency",
 *     vswitchId: defaultSwitch.id,
 * });
 * const serverAttachment = new alicloud.slb.ServerGroupServerAttachment("server_attachment", {
 *     serverGroupId: defaultServerGroup.id,
 *     serverId: defaultInstance.id,
 *     port: 8080,
 *     type: "ecs",
 *     weight: 0,
 *     description: name,
 * });
 * ```
 *
 * ## Import
 *
 * Load Balancer Virtual Backend Server Group Server Attachment can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:slb/serverGroupServerAttachment:ServerGroupServerAttachment example <server_group_id>:<server_id>:<port>
 * ```
 */
export class ServerGroupServerAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ServerGroupServerAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerGroupServerAttachmentState, opts?: pulumi.CustomResourceOptions): ServerGroupServerAttachment {
        return new ServerGroupServerAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:slb/serverGroupServerAttachment:ServerGroupServerAttachment';

    /**
     * Returns true if the given object is an instance of ServerGroupServerAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerGroupServerAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerGroupServerAttachment.__pulumiType;
    }

    /**
     * The description of the backend server.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The port that is used by the backend server. Valid values: `1` to `65535`.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * The ID of the server group.
     */
    public readonly serverGroupId!: pulumi.Output<string>;
    /**
     * The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
     */
    public readonly serverId!: pulumi.Output<string>;
    /**
     * The type of backend server. Valid values: `ecs`, `eni`, `eci`. **NOTE:** From version 1.246.0, `type` can be set to `eci`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
     */
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a ServerGroupServerAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerGroupServerAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerGroupServerAttachmentArgs | ServerGroupServerAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerGroupServerAttachmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["serverGroupId"] = state ? state.serverGroupId : undefined;
            resourceInputs["serverId"] = state ? state.serverId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as ServerGroupServerAttachmentArgs | undefined;
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.serverGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverGroupId'");
            }
            if ((!args || args.serverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["serverGroupId"] = args ? args.serverGroupId : undefined;
            resourceInputs["serverId"] = args ? args.serverId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerGroupServerAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerGroupServerAttachment resources.
 */
export interface ServerGroupServerAttachmentState {
    /**
     * The description of the backend server.
     */
    description?: pulumi.Input<string>;
    /**
     * The port that is used by the backend server. Valid values: `1` to `65535`.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the server group.
     */
    serverGroupId?: pulumi.Input<string>;
    /**
     * The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
     */
    serverId?: pulumi.Input<string>;
    /**
     * The type of backend server. Valid values: `ecs`, `eni`, `eci`. **NOTE:** From version 1.246.0, `type` can be set to `eci`.
     */
    type?: pulumi.Input<string>;
    /**
     * The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServerGroupServerAttachment resource.
 */
export interface ServerGroupServerAttachmentArgs {
    /**
     * The description of the backend server.
     */
    description?: pulumi.Input<string>;
    /**
     * The port that is used by the backend server. Valid values: `1` to `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The ID of the server group.
     */
    serverGroupId: pulumi.Input<string>;
    /**
     * The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
     */
    serverId: pulumi.Input<string>;
    /**
     * The type of backend server. Valid values: `ecs`, `eni`, `eci`. **NOTE:** From version 1.246.0, `type` can be set to `eci`.
     */
    type?: pulumi.Input<string>;
    /**
     * The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
     */
    weight?: pulumi.Input<number>;
}
