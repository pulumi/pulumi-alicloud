// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Slb Tls Cipher Policies of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.135.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.slb.getTlsCipherPolicies({
 *     ids: [
 *         "example_value-1",
 *         "example_value-2",
 *     ],
 * });
 * export const slbTlsCipherPolicyId1 = ids.then(ids => ids.policies?[0]?.id);
 * const nameRegex = alicloud.slb.getTlsCipherPolicies({
 *     nameRegex: "^My-TlsCipherPolicy",
 * });
 * export const slbTlsCipherPolicyId2 = nameRegex.then(nameRegex => nameRegex.policies?[0]?.id);
 * ```
 */
export function getTlsCipherPolicies(args?: GetTlsCipherPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsCipherPoliciesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:slb/getTlsCipherPolicies:getTlsCipherPolicies", {
        "ids": args.ids,
        "includeListener": args.includeListener,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
        "tlsCipherPolicyName": args.tlsCipherPolicyName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTlsCipherPolicies.
 */
export interface GetTlsCipherPoliciesArgs {
    /**
     * A list of Tls Cipher Policy IDs.
     */
    ids?: string[];
    /**
     * The include listener.
     */
    includeListener?: boolean;
    /**
     * A regex string to filter results by Tls Cipher Policy name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * TLS policy instance state.
     */
    status?: string;
    /**
     * TLS policy name. Length is from 2 to 128, or in both the English and Chinese characters must be with an uppercase/lowercase letter or a Chinese character and the beginning, may contain numbers, in dot `.`, underscore `_` or dash `-`.
     */
    tlsCipherPolicyName?: string;
}

/**
 * A collection of values returned by getTlsCipherPolicies.
 */
export interface GetTlsCipherPoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly includeListener?: boolean;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly policies: outputs.slb.GetTlsCipherPoliciesPolicy[];
    readonly status?: string;
    readonly tlsCipherPolicyName?: string;
}

export function getTlsCipherPoliciesOutput(args?: GetTlsCipherPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsCipherPoliciesResult> {
    return pulumi.output(args).apply(a => getTlsCipherPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getTlsCipherPolicies.
 */
export interface GetTlsCipherPoliciesOutputArgs {
    /**
     * A list of Tls Cipher Policy IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The include listener.
     */
    includeListener?: pulumi.Input<boolean>;
    /**
     * A regex string to filter results by Tls Cipher Policy name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * TLS policy instance state.
     */
    status?: pulumi.Input<string>;
    /**
     * TLS policy name. Length is from 2 to 128, or in both the English and Chinese characters must be with an uppercase/lowercase letter or a Chinese character and the beginning, may contain numbers, in dot `.`, underscore `_` or dash `-`.
     */
    tlsCipherPolicyName?: pulumi.Input<string>;
}
