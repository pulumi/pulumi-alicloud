// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a OSS Bucket Cors resource. Cross-Origin Resource Sharing (CORS) allows web applications to access resources in other regions.
 *
 * For information about OSS Bucket Cors and how to use it, see [What is Bucket Cors](https://www.alibabacloud.com/help/en/oss/developer-reference/putbucketcors).
 *
 * > **NOTE:** Available since v1.223.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 * import * as random from "@pulumi/random";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new random.index.Uuid("default", {});
 * const createBucket = new alicloud.oss.Bucket("CreateBucket", {
 *     storageClass: "Standard",
 *     bucket: `${name}-${_default.result}`,
 * });
 * const defaultBucketCors = new alicloud.oss.BucketCors("default", {
 *     bucket: createBucket.bucket,
 *     responseVary: true,
 *     corsRules: [{
 *         allowedMethods: ["GET"],
 *         allowedOrigins: ["*"],
 *         allowedHeaders: [
 *             "x-oss-test",
 *             "x-oss-abc",
 *         ],
 *         exposeHeaders: ["x-oss-request-id"],
 *         maxAgeSeconds: 1000,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * OSS Bucket Cors can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:oss/bucketCors:BucketCors example <id>
 * ```
 */
export class BucketCors extends pulumi.CustomResource {
    /**
     * Get an existing BucketCors resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketCorsState, opts?: pulumi.CustomResourceOptions): BucketCors {
        return new BucketCors(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:oss/bucketCors:BucketCors';

    /**
     * Returns true if the given object is an instance of BucketCors.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketCors {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketCors.__pulumiType;
    }

    /**
     * The name of the Bucket.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
     */
    public readonly corsRules!: pulumi.Output<outputs.oss.BucketCorsCorsRule[]>;
    /**
     * Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
     */
    public readonly responseVary!: pulumi.Output<boolean>;

    /**
     * Create a BucketCors resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketCorsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketCorsArgs | BucketCorsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketCorsState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["corsRules"] = state ? state.corsRules : undefined;
            resourceInputs["responseVary"] = state ? state.responseVary : undefined;
        } else {
            const args = argsOrState as BucketCorsArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.corsRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'corsRules'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["corsRules"] = args ? args.corsRules : undefined;
            resourceInputs["responseVary"] = args ? args.responseVary : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketCors.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketCors resources.
 */
export interface BucketCorsState {
    /**
     * The name of the Bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.oss.BucketCorsCorsRule>[]>;
    /**
     * Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
     */
    responseVary?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a BucketCors resource.
 */
export interface BucketCorsArgs {
    /**
     * The name of the Bucket.
     */
    bucket: pulumi.Input<string>;
    /**
     * The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
     */
    corsRules: pulumi.Input<pulumi.Input<inputs.oss.BucketCorsCorsRule>[]>;
    /**
     * Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
     */
    responseVary?: pulumi.Input<boolean>;
}
