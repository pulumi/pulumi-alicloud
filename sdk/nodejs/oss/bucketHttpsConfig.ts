// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * OSS Bucket Https Config can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:oss/bucketHttpsConfig:BucketHttpsConfig example <id>
 * ```
 */
export class BucketHttpsConfig extends pulumi.CustomResource {
    /**
     * Get an existing BucketHttpsConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketHttpsConfigState, opts?: pulumi.CustomResourceOptions): BucketHttpsConfig {
        return new BucketHttpsConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:oss/bucketHttpsConfig:BucketHttpsConfig';

    /**
     * Returns true if the given object is an instance of BucketHttpsConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketHttpsConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketHttpsConfig.__pulumiType;
    }

    /**
     * The name of the bucket.
     */
    declare public readonly bucket: pulumi.Output<string>;
    /**
     * Specifies whether to enable TLS version management for the bucket. Valid values: true, false.
     */
    declare public readonly enable: pulumi.Output<boolean>;
    /**
     * Specifies the TLS versions allowed to access this buckets.
     */
    declare public readonly tlsVersions: pulumi.Output<string[] | undefined>;

    /**
     * Create a BucketHttpsConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketHttpsConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketHttpsConfigArgs | BucketHttpsConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketHttpsConfigState | undefined;
            resourceInputs["bucket"] = state?.bucket;
            resourceInputs["enable"] = state?.enable;
            resourceInputs["tlsVersions"] = state?.tlsVersions;
        } else {
            const args = argsOrState as BucketHttpsConfigArgs | undefined;
            if (args?.bucket === undefined && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if (args?.enable === undefined && !opts.urn) {
                throw new Error("Missing required property 'enable'");
            }
            resourceInputs["bucket"] = args?.bucket;
            resourceInputs["enable"] = args?.enable;
            resourceInputs["tlsVersions"] = args?.tlsVersions;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketHttpsConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketHttpsConfig resources.
 */
export interface BucketHttpsConfigState {
    /**
     * The name of the bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * Specifies whether to enable TLS version management for the bucket. Valid values: true, false.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Specifies the TLS versions allowed to access this buckets.
     */
    tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a BucketHttpsConfig resource.
 */
export interface BucketHttpsConfigArgs {
    /**
     * The name of the bucket.
     */
    bucket: pulumi.Input<string>;
    /**
     * Specifies whether to enable TLS version management for the bucket. Valid values: true, false.
     */
    enable: pulumi.Input<boolean>;
    /**
     * Specifies the TLS versions allowed to access this buckets.
     */
    tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
}
