// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Eipanycast Anycast Eip Addresses of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.113.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.eipanycast.getAnycastEipAddresses({
 *     ids: ["example_value"],
 *     nameRegex: "the_resource_name",
 * });
 * export const firstEipanycastAnycastEipAddressId = example.then(example => example.addresses?[0]?.id);
 * ```
 */
export function getAnycastEipAddresses(args?: GetAnycastEipAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetAnycastEipAddressesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("alicloud:eipanycast/getAnycastEipAddresses:getAnycastEipAddresses", {
        "anycastEipAddressName": args.anycastEipAddressName,
        "bindInstanceIds": args.bindInstanceIds,
        "businessStatus": args.businessStatus,
        "ids": args.ids,
        "internetChargeType": args.internetChargeType,
        "ipAddress": args.ipAddress,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "paymentType": args.paymentType,
        "serviceLocation": args.serviceLocation,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getAnycastEipAddresses.
 */
export interface GetAnycastEipAddressesArgs {
    /**
     * Anycast EIP instance name.
     */
    anycastEipAddressName?: string;
    /**
     * The bind instance ids.
     */
    bindInstanceIds?: string[];
    /**
     * The business status of the Anycast EIP instance. -`Normal`: Normal state. -`FinancialLocked`: The status of arrears locked.
     */
    businessStatus?: string;
    /**
     * A list of Anycast Eip Address IDs.
     */
    ids?: string[];
    /**
     * The billing method of Anycast EIP instance. `PayByBandwidth`: refers to the method of billing based on traffic.
     */
    internetChargeType?: string;
    /**
     * Anycast EIP instance IP address.
     */
    ipAddress?: string;
    /**
     * A regex string to filter results by Anycast Eip Address name.
     */
    nameRegex?: string;
    outputFile?: string;
    /**
     * The payment model of Anycast EIP instance. "PostPaid": Refers to the post-paid mode.
     */
    paymentType?: string;
    /**
     * Anycast EIP instance access area. "international": Refers to areas outside of Mainland China.
     */
    serviceLocation?: string;
    /**
     * IP status。- `Associating`, `Unassociating`, `Allocated`, `Associated`, `Modifying`, `Releasing`, `Released`.
     */
    status?: string;
}

/**
 * A collection of values returned by getAnycastEipAddresses.
 */
export interface GetAnycastEipAddressesResult {
    readonly addresses: outputs.eipanycast.GetAnycastEipAddressesAddress[];
    readonly anycastEipAddressName?: string;
    readonly bindInstanceIds?: string[];
    readonly businessStatus?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly internetChargeType?: string;
    readonly ipAddress?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly paymentType?: string;
    readonly serviceLocation?: string;
    readonly status?: string;
}

export function getAnycastEipAddressesOutput(args?: GetAnycastEipAddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnycastEipAddressesResult> {
    return pulumi.output(args).apply(a => getAnycastEipAddresses(a, opts))
}

/**
 * A collection of arguments for invoking getAnycastEipAddresses.
 */
export interface GetAnycastEipAddressesOutputArgs {
    /**
     * Anycast EIP instance name.
     */
    anycastEipAddressName?: pulumi.Input<string>;
    /**
     * The bind instance ids.
     */
    bindInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The business status of the Anycast EIP instance. -`Normal`: Normal state. -`FinancialLocked`: The status of arrears locked.
     */
    businessStatus?: pulumi.Input<string>;
    /**
     * A list of Anycast Eip Address IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The billing method of Anycast EIP instance. `PayByBandwidth`: refers to the method of billing based on traffic.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Anycast EIP instance IP address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * A regex string to filter results by Anycast Eip Address name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    /**
     * The payment model of Anycast EIP instance. "PostPaid": Refers to the post-paid mode.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * Anycast EIP instance access area. "international": Refers to areas outside of Mainland China.
     */
    serviceLocation?: pulumi.Input<string>;
    /**
     * IP status。- `Associating`, `Unassociating`, `Allocated`, `Associated`, `Modifying`, `Releasing`, `Released`.
     */
    status?: pulumi.Input<string>;
}
