// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ENS Instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:ens/instance:Instance example <id>
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ens/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Whether to automatically renew, default to False, this parameter is invalid when paying by volume.
     */
    public readonly autoRenew!: pulumi.Output<boolean | undefined>;
    /**
     * Operator, required for regional level scheduling, invalid for node level scheduling.
     */
    public readonly carrier!: pulumi.Output<string | undefined>;
    /**
     * Data disk specifications. See `dataDisk` below.
     */
    public readonly dataDisks!: pulumi.Output<outputs.ens.InstanceDataDisk[] | undefined>;
    /**
     * Node id. When ScheduleAreaLevel is Region, EnsRegionId is required. When ScheduleAreaLevel is Big, Middle, Small, EnsRegionId is not required.
     */
    public readonly ensRegionId!: pulumi.Output<string | undefined>;
    /**
     * Host Name.
     */
    public readonly hostName!: pulumi.Output<string>;
    /**
     * The Image Id field. If InstanceType is arm_bmi, the image Id is a non-required parameter. If instanceType is another specification value, the image Id is a required parameter.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * Instance billing strategy, instance: instance granularity (prepaid method currently does not support instance), user: by user dimension (not transferred or prepaid method supports user).
     */
    public readonly instanceChargeStrategy!: pulumi.Output<string | undefined>;
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), periods (.), or hyphens (-). The default value is the InstanceId of the instance.
     */
    public readonly instanceName!: pulumi.Output<string | undefined>;
    /**
     * Instance specifications type.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Instance Charge type.it could be BandwidthByDay, 95BandwidthByMonth, PayByBandwidth4thMonth.
     */
    public readonly internetChargeType!: pulumi.Output<string | undefined>;
    /**
     * The maximum public network bandwidth.
     */
    public readonly internetMaxBandwidthOut!: pulumi.Output<number>;
    /**
     * Region code, required for regional level scheduling, invalid for node level scheduling.
     */
    public readonly netDistrictCode!: pulumi.Output<string | undefined>;
    /**
     * The password of the instance。It is 8 to 30 characters in length and must contain three types of characters: uppercase and lowercase letters, numbers, and special symbols. The following special symbols can be set: '''()'~! @#$%^& *-_+ =|{}[]:;',.? /'''.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Whether to use image preset password prompt: Password and KeyPairNamePasswordInherit must be passed.
     */
    public readonly passwordInherit!: pulumi.Output<boolean | undefined>;
    /**
     * Instance payment method, Subscription: prepaid, monthly package; PayAsYouGo: Pay as you go.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The duration of purchasing resources. If PeriodUnit is not specified, it defaults to purchasing on a monthly basis. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Monthc, then Period can be 1-9,12.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The unit of time for purchasing resources. If PeriodUnit is not specified, it defaults to purchasing by Month. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Month, then Period can be 1-9,12.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * Whether to allocate public IP. Value：true (default): can be assigned，false: cannot be assigned.
     */
    public readonly publicIpIdentification!: pulumi.Output<boolean | undefined>;
    /**
     * Number of instances.
     */
    public readonly quantity!: pulumi.Output<string | undefined>;
    /**
     * Scheduling level, which is used to perform node level or regional scheduling.
     */
    public readonly scheduleAreaLevel!: pulumi.Output<string>;
    /**
     * Dispatch price strategy. If left blank, it defaults to prioritizing low prices. Values: PriceLowPriority (priority high price), PriceLowPriority (priority low price).
     */
    public readonly schedulingPriceStrategy!: pulumi.Output<string | undefined>;
    /**
     * When scheduling at the node level, it is Concentrate. When scheduling at the regional level, it is selected according to customer needs. Concentrate: Centralized; Disperse: Disperse.
     */
    public readonly schedulingStrategy!: pulumi.Output<string | undefined>;
    /**
     * the status of the resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The field representing the system disk specification. SystemDisk is a non-required parameter when InstanceType is x86_pm,x86_bmi,x86_bm,pc_bmi, or arm_bmi. SystemDisk is a required parameter when instanceType is other specification families. See `systemDisk` below.
     */
    public readonly systemDisk!: pulumi.Output<outputs.ens.InstanceSystemDisk | undefined>;
    /**
     * Specifies whether to automatically append sequential suffixes to the hostnames specified by the HostName parameter and instance names specified by the InstanceName parameter when you create multiple instances at a time. The sequential suffix ranges from 001 to 999. Valid values:  true false Default value: false.
     */
    public readonly uniqueSuffix!: pulumi.Output<boolean | undefined>;
    /**
     * User defined data, with a maximum support of 16KB. You can input UserData information. UserData encoded in Base64 format.
     */
    public readonly userData!: pulumi.Output<string | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["carrier"] = state ? state.carrier : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["ensRegionId"] = state ? state.ensRegionId : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceChargeStrategy"] = state ? state.instanceChargeStrategy : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["netDistrictCode"] = state ? state.netDistrictCode : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordInherit"] = state ? state.passwordInherit : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["publicIpIdentification"] = state ? state.publicIpIdentification : undefined;
            resourceInputs["quantity"] = state ? state.quantity : undefined;
            resourceInputs["scheduleAreaLevel"] = state ? state.scheduleAreaLevel : undefined;
            resourceInputs["schedulingPriceStrategy"] = state ? state.schedulingPriceStrategy : undefined;
            resourceInputs["schedulingStrategy"] = state ? state.schedulingStrategy : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemDisk"] = state ? state.systemDisk : undefined;
            resourceInputs["uniqueSuffix"] = state ? state.uniqueSuffix : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.internetMaxBandwidthOut === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internetMaxBandwidthOut'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.scheduleAreaLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleAreaLevel'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["carrier"] = args ? args.carrier : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["ensRegionId"] = args ? args.ensRegionId : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceChargeStrategy"] = args ? args.instanceChargeStrategy : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["netDistrictCode"] = args ? args.netDistrictCode : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["passwordInherit"] = args ? args.passwordInherit : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["publicIpIdentification"] = args ? args.publicIpIdentification : undefined;
            resourceInputs["quantity"] = args ? args.quantity : undefined;
            resourceInputs["scheduleAreaLevel"] = args ? args.scheduleAreaLevel : undefined;
            resourceInputs["schedulingPriceStrategy"] = args ? args.schedulingPriceStrategy : undefined;
            resourceInputs["schedulingStrategy"] = args ? args.schedulingStrategy : undefined;
            resourceInputs["systemDisk"] = args ? args.systemDisk : undefined;
            resourceInputs["uniqueSuffix"] = args ? args.uniqueSuffix : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Whether to automatically renew, default to False, this parameter is invalid when paying by volume.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Operator, required for regional level scheduling, invalid for node level scheduling.
     */
    carrier?: pulumi.Input<string>;
    /**
     * Data disk specifications. See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.ens.InstanceDataDisk>[]>;
    /**
     * Node id. When ScheduleAreaLevel is Region, EnsRegionId is required. When ScheduleAreaLevel is Big, Middle, Small, EnsRegionId is not required.
     */
    ensRegionId?: pulumi.Input<string>;
    /**
     * Host Name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The Image Id field. If InstanceType is arm_bmi, the image Id is a non-required parameter. If instanceType is another specification value, the image Id is a required parameter.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Instance billing strategy, instance: instance granularity (prepaid method currently does not support instance), user: by user dimension (not transferred or prepaid method supports user).
     */
    instanceChargeStrategy?: pulumi.Input<string>;
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), periods (.), or hyphens (-). The default value is the InstanceId of the instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Instance specifications type.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Instance Charge type.it could be BandwidthByDay, 95BandwidthByMonth, PayByBandwidth4thMonth.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * The maximum public network bandwidth.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * Region code, required for regional level scheduling, invalid for node level scheduling.
     */
    netDistrictCode?: pulumi.Input<string>;
    /**
     * The password of the instance。It is 8 to 30 characters in length and must contain three types of characters: uppercase and lowercase letters, numbers, and special symbols. The following special symbols can be set: '''()'~! @#$%^& *-_+ =|{}[]:;',.? /'''.
     */
    password?: pulumi.Input<string>;
    /**
     * Whether to use image preset password prompt: Password and KeyPairNamePasswordInherit must be passed.
     */
    passwordInherit?: pulumi.Input<boolean>;
    /**
     * Instance payment method, Subscription: prepaid, monthly package; PayAsYouGo: Pay as you go.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The duration of purchasing resources. If PeriodUnit is not specified, it defaults to purchasing on a monthly basis. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Monthc, then Period can be 1-9,12.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of time for purchasing resources. If PeriodUnit is not specified, it defaults to purchasing by Month. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Month, then Period can be 1-9,12.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Whether to allocate public IP. Value：true (default): can be assigned，false: cannot be assigned.
     */
    publicIpIdentification?: pulumi.Input<boolean>;
    /**
     * Number of instances.
     */
    quantity?: pulumi.Input<string>;
    /**
     * Scheduling level, which is used to perform node level or regional scheduling.
     */
    scheduleAreaLevel?: pulumi.Input<string>;
    /**
     * Dispatch price strategy. If left blank, it defaults to prioritizing low prices. Values: PriceLowPriority (priority high price), PriceLowPriority (priority low price).
     */
    schedulingPriceStrategy?: pulumi.Input<string>;
    /**
     * When scheduling at the node level, it is Concentrate. When scheduling at the regional level, it is selected according to customer needs. Concentrate: Centralized; Disperse: Disperse.
     */
    schedulingStrategy?: pulumi.Input<string>;
    /**
     * the status of the resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The field representing the system disk specification. SystemDisk is a non-required parameter when InstanceType is x86_pm,x86_bmi,x86_bm,pc_bmi, or arm_bmi. SystemDisk is a required parameter when instanceType is other specification families. See `systemDisk` below.
     */
    systemDisk?: pulumi.Input<inputs.ens.InstanceSystemDisk>;
    /**
     * Specifies whether to automatically append sequential suffixes to the hostnames specified by the HostName parameter and instance names specified by the InstanceName parameter when you create multiple instances at a time. The sequential suffix ranges from 001 to 999. Valid values:  true false Default value: false.
     */
    uniqueSuffix?: pulumi.Input<boolean>;
    /**
     * User defined data, with a maximum support of 16KB. You can input UserData information. UserData encoded in Base64 format.
     */
    userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Whether to automatically renew, default to False, this parameter is invalid when paying by volume.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Operator, required for regional level scheduling, invalid for node level scheduling.
     */
    carrier?: pulumi.Input<string>;
    /**
     * Data disk specifications. See `dataDisk` below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.ens.InstanceDataDisk>[]>;
    /**
     * Node id. When ScheduleAreaLevel is Region, EnsRegionId is required. When ScheduleAreaLevel is Big, Middle, Small, EnsRegionId is not required.
     */
    ensRegionId?: pulumi.Input<string>;
    /**
     * Host Name.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The Image Id field. If InstanceType is arm_bmi, the image Id is a non-required parameter. If instanceType is another specification value, the image Id is a required parameter.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Instance billing strategy, instance: instance granularity (prepaid method currently does not support instance), user: by user dimension (not transferred or prepaid method supports user).
     */
    instanceChargeStrategy?: pulumi.Input<string>;
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), periods (.), or hyphens (-). The default value is the InstanceId of the instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Instance specifications type.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Instance Charge type.it could be BandwidthByDay, 95BandwidthByMonth, PayByBandwidth4thMonth.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * The maximum public network bandwidth.
     */
    internetMaxBandwidthOut: pulumi.Input<number>;
    /**
     * Region code, required for regional level scheduling, invalid for node level scheduling.
     */
    netDistrictCode?: pulumi.Input<string>;
    /**
     * The password of the instance。It is 8 to 30 characters in length and must contain three types of characters: uppercase and lowercase letters, numbers, and special symbols. The following special symbols can be set: '''()'~! @#$%^& *-_+ =|{}[]:;',.? /'''.
     */
    password?: pulumi.Input<string>;
    /**
     * Whether to use image preset password prompt: Password and KeyPairNamePasswordInherit must be passed.
     */
    passwordInherit?: pulumi.Input<boolean>;
    /**
     * Instance payment method, Subscription: prepaid, monthly package; PayAsYouGo: Pay as you go.
     */
    paymentType: pulumi.Input<string>;
    /**
     * The duration of purchasing resources. If PeriodUnit is not specified, it defaults to purchasing on a monthly basis. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Monthc, then Period can be 1-9,12.
     */
    period?: pulumi.Input<number>;
    /**
     * The unit of time for purchasing resources. If PeriodUnit is not specified, it defaults to purchasing by Month. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Month, then Period can be 1-9,12.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Whether to allocate public IP. Value：true (default): can be assigned，false: cannot be assigned.
     */
    publicIpIdentification?: pulumi.Input<boolean>;
    /**
     * Number of instances.
     */
    quantity?: pulumi.Input<string>;
    /**
     * Scheduling level, which is used to perform node level or regional scheduling.
     */
    scheduleAreaLevel: pulumi.Input<string>;
    /**
     * Dispatch price strategy. If left blank, it defaults to prioritizing low prices. Values: PriceLowPriority (priority high price), PriceLowPriority (priority low price).
     */
    schedulingPriceStrategy?: pulumi.Input<string>;
    /**
     * When scheduling at the node level, it is Concentrate. When scheduling at the regional level, it is selected according to customer needs. Concentrate: Centralized; Disperse: Disperse.
     */
    schedulingStrategy?: pulumi.Input<string>;
    /**
     * The field representing the system disk specification. SystemDisk is a non-required parameter when InstanceType is x86_pm,x86_bmi,x86_bm,pc_bmi, or arm_bmi. SystemDisk is a required parameter when instanceType is other specification families. See `systemDisk` below.
     */
    systemDisk?: pulumi.Input<inputs.ens.InstanceSystemDisk>;
    /**
     * Specifies whether to automatically append sequential suffixes to the hostnames specified by the HostName parameter and instance names specified by the InstanceName parameter when you create multiple instances at a time. The sequential suffix ranges from 001 to 999. Valid values:  true false Default value: false.
     */
    uniqueSuffix?: pulumi.Input<boolean>;
    /**
     * User defined data, with a maximum support of 16KB. You can input UserData information. UserData encoded in Base64 format.
     */
    userData?: pulumi.Input<string>;
}
