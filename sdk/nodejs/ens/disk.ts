// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ENS Disk resource. The disk. When you use it for the first time, please contact the product classmates to add a resource whitelist.
 *
 * For information about ENS Disk and how to use it, see [What is Disk](https://www.alibabacloud.com/help/en/ens/developer-reference/api-createdisk).
 *
 * > **NOTE:** Available since v1.213.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.ens.Disk("default", {
 *     category: "cloud_ssd",
 *     ensRegionId: "cn-chongqing-11",
 *     paymentType: "PayAsYouGo",
 *     size: 20,
 * });
 * ```
 *
 * ## Import
 *
 * ENS Disk can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ens/disk:Disk example <id>
 * ```
 */
export class Disk extends pulumi.CustomResource {
    /**
     * Get an existing Disk resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiskState, opts?: pulumi.CustomResourceOptions): Disk {
        return new Disk(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ens/disk:Disk';

    /**
     * Returns true if the given object is an instance of Disk.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Disk {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Disk.__pulumiType;
    }

    /**
     * Types of disk instancesValues: cloudEfficiency (high-efficiency cloud disk),cloud_ssd (full Flash cloud disk),local_hdd (local HDD),local_ssd (local ssd).
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Disk instance creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Name of the disk instance.
     */
    public readonly diskName!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the cloud disk is Encrypted. If Encrypted = true, the default service key is used when KMSKeyId is not entered. Value range:`true`, `false`(default).
     */
    public readonly encrypted!: pulumi.Output<boolean | undefined>;
    /**
     * Ens node IDExample value: cn-chengdu-telecom.
     */
    public readonly ensRegionId!: pulumi.Output<string>;
    /**
     * The ID of the KMS key used by the cloud disk. If Encrypted is set to true, the service default key is used when KMSKeyId is empty.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * Billing type of the disk instanceValue: PayAsYouGo.
     */
    public readonly paymentType!: pulumi.Output<string>;
    /**
     * The size of the disk instance. Unit: GiB.
     */
    public readonly size!: pulumi.Output<number | undefined>;
    /**
     * The ID of the snapshot used to create the cloud disk.
     *
     * The SnapshotId and Size parameters have the following limitations:
     * - If the snapshot capacity corresponding to the **SnapshotId** parameter is greater than the specified **Size** parameter, the Size of the cloud disk created is the Size of the specified snapshot.
     * - If the snapshot capacity corresponding to the **SnapshotId** parameter is less than the set **Size** parameter value, the Size of the cloud disk created is the specified **Size** parameter value.
     */
    public readonly snapshotId!: pulumi.Output<string | undefined>;
    /**
     * Status of the disk instance:Value:In-use: In useAvailable: To be mountedAttaching: AttachingDetaching: uninstallingCreating: CreatingReIniting: Resetting.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Disk resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiskArgs | DiskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiskState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["diskName"] = state ? state.diskName : undefined;
            resourceInputs["encrypted"] = state ? state.encrypted : undefined;
            resourceInputs["ensRegionId"] = state ? state.ensRegionId : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as DiskArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.ensRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ensRegionId'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["diskName"] = args ? args.diskName : undefined;
            resourceInputs["encrypted"] = args ? args.encrypted : undefined;
            resourceInputs["ensRegionId"] = args ? args.ensRegionId : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Disk.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Disk resources.
 */
export interface DiskState {
    /**
     * Types of disk instancesValues: cloudEfficiency (high-efficiency cloud disk),cloud_ssd (full Flash cloud disk),local_hdd (local HDD),local_ssd (local ssd).
     */
    category?: pulumi.Input<string>;
    /**
     * Disk instance creation time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Name of the disk instance.
     */
    diskName?: pulumi.Input<string>;
    /**
     * Indicates whether the cloud disk is Encrypted. If Encrypted = true, the default service key is used when KMSKeyId is not entered. Value range:`true`, `false`(default).
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * Ens node IDExample value: cn-chengdu-telecom.
     */
    ensRegionId?: pulumi.Input<string>;
    /**
     * The ID of the KMS key used by the cloud disk. If Encrypted is set to true, the service default key is used when KMSKeyId is empty.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Billing type of the disk instanceValue: PayAsYouGo.
     */
    paymentType?: pulumi.Input<string>;
    /**
     * The size of the disk instance. Unit: GiB.
     */
    size?: pulumi.Input<number>;
    /**
     * The ID of the snapshot used to create the cloud disk.
     *
     * The SnapshotId and Size parameters have the following limitations:
     * - If the snapshot capacity corresponding to the **SnapshotId** parameter is greater than the specified **Size** parameter, the Size of the cloud disk created is the Size of the specified snapshot.
     * - If the snapshot capacity corresponding to the **SnapshotId** parameter is less than the set **Size** parameter value, the Size of the cloud disk created is the specified **Size** parameter value.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * Status of the disk instance:Value:In-use: In useAvailable: To be mountedAttaching: AttachingDetaching: uninstallingCreating: CreatingReIniting: Resetting.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Disk resource.
 */
export interface DiskArgs {
    /**
     * Types of disk instancesValues: cloudEfficiency (high-efficiency cloud disk),cloud_ssd (full Flash cloud disk),local_hdd (local HDD),local_ssd (local ssd).
     */
    category: pulumi.Input<string>;
    /**
     * Name of the disk instance.
     */
    diskName?: pulumi.Input<string>;
    /**
     * Indicates whether the cloud disk is Encrypted. If Encrypted = true, the default service key is used when KMSKeyId is not entered. Value range:`true`, `false`(default).
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * Ens node IDExample value: cn-chengdu-telecom.
     */
    ensRegionId: pulumi.Input<string>;
    /**
     * The ID of the KMS key used by the cloud disk. If Encrypted is set to true, the service default key is used when KMSKeyId is empty.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Billing type of the disk instanceValue: PayAsYouGo.
     */
    paymentType: pulumi.Input<string>;
    /**
     * The size of the disk instance. Unit: GiB.
     */
    size?: pulumi.Input<number>;
    /**
     * The ID of the snapshot used to create the cloud disk.
     *
     * The SnapshotId and Size parameters have the following limitations:
     * - If the snapshot capacity corresponding to the **SnapshotId** parameter is greater than the specified **Size** parameter, the Size of the cloud disk created is the Size of the specified snapshot.
     * - If the snapshot capacity corresponding to the **SnapshotId** parameter is less than the set **Size** parameter value, the Size of the cloud disk created is the specified **Size** parameter value.
     */
    snapshotId?: pulumi.Input<string>;
}
