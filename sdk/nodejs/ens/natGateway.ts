// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a ENS Nat Gateway resource.
 *
 * Nat gateway of ENS.
 *
 * For information about ENS Nat Gateway and how to use it, see [What is Nat Gateway](https://next.api.alibabacloud.com/document/Ens/2017-11-10/CreateNatGateway).
 *
 * > **NOTE:** Available since v1.227.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const ensRegionId = config.get("ensRegionId") || "cn-chenzhou-telecom_unicom_cmcc";
 * const defaultObbrL7 = new alicloud.ens.Network("defaultObbrL7", {
 *     networkName: name,
 *     description: name,
 *     cidrBlock: "10.0.0.0/8",
 *     ensRegionId: ensRegionId,
 * });
 * const defaulteFw783 = new alicloud.ens.Vswitch("defaulteFw783", {
 *     cidrBlock: "10.0.8.0/24",
 *     vswitchName: name,
 *     ensRegionId: defaultObbrL7.ensRegionId,
 *     networkId: defaultObbrL7.id,
 * });
 * const _default = new alicloud.ens.NatGateway("default", {
 *     vswitchId: defaulteFw783.id,
 *     ensRegionId: defaulteFw783.ensRegionId,
 *     networkId: defaulteFw783.networkId,
 *     instanceType: "enat.default",
 *     natName: name,
 * });
 * ```
 *
 * ## Import
 *
 * ENS Nat Gateway can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:ens/natGateway:NatGateway example <id>
 * ```
 */
export class NatGateway extends pulumi.CustomResource {
    /**
     * Get an existing NatGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatGatewayState, opts?: pulumi.CustomResourceOptions): NatGateway {
        return new NatGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ens/natGateway:NatGateway';

    /**
     * Returns true if the given object is an instance of NatGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatGateway.__pulumiType;
    }

    /**
     * Creation time. UTC time, in the format of YYYY-MM-DDThh:mm:ssZ.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The ID of the ENS node.
     */
    public readonly ensRegionId!: pulumi.Output<string>;
    /**
     * NAT specifications. Value: `enat.default`.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with 'http:// 'or 'https.
     */
    public readonly natName!: pulumi.Output<string | undefined>;
    /**
     * The network ID.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * The vSwitch ID.
     */
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a NatGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatGatewayArgs | NatGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatGatewayState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["ensRegionId"] = state ? state.ensRegionId : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["natName"] = state ? state.natName : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as NatGatewayArgs | undefined;
            if ((!args || args.ensRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ensRegionId'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["ensRegionId"] = args ? args.ensRegionId : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["natName"] = args ? args.natName : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatGateway resources.
 */
export interface NatGatewayState {
    /**
     * Creation time. UTC time, in the format of YYYY-MM-DDThh:mm:ssZ.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the ENS node.
     */
    ensRegionId?: pulumi.Input<string>;
    /**
     * NAT specifications. Value: `enat.default`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with 'http:// 'or 'https.
     */
    natName?: pulumi.Input<string>;
    /**
     * The network ID.
     */
    networkId?: pulumi.Input<string>;
    /**
     * The vSwitch ID.
     */
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NatGateway resource.
 */
export interface NatGatewayArgs {
    /**
     * The ID of the ENS node.
     */
    ensRegionId: pulumi.Input<string>;
    /**
     * NAT specifications. Value: `enat.default`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with 'http:// 'or 'https.
     */
    natName?: pulumi.Input<string>;
    /**
     * The network ID.
     */
    networkId: pulumi.Input<string>;
    /**
     * The vSwitch ID.
     */
    vswitchId: pulumi.Input<string>;
}
