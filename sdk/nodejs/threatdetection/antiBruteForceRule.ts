// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Threat Detection Anti Brute Force Rule resource.
 *
 * Anti-brute force cracking rules.
 *
 * For information about Threat Detection Anti Brute Force Rule and how to use it, see [What is Anti Brute Force Rule](https://www.alibabacloud.com/help/en/security-center/developer-reference/api-sas-2018-12-03-createantibruteforcerule).
 *
 * > **NOTE:** Available since v1.195.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = new alicloud.threatdetection.AntiBruteForceRule("default", {
 *     antiBruteForceRuleName: "apispec_example",
 *     forbiddenTime: 360,
 *     uuidLists: ["032b618f-b220-4a0d-bd37-fbdc6ef58b6a"],
 *     failCount: 80,
 *     span: 10,
 * });
 * ```
 *
 * ## Import
 *
 * Threat Detection Anti Brute Force Rule can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule example <id>
 * ```
 */
export class AntiBruteForceRule extends pulumi.CustomResource {
    /**
     * Get an existing AntiBruteForceRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntiBruteForceRuleState, opts?: pulumi.CustomResourceOptions): AntiBruteForceRule {
        return new AntiBruteForceRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule';

    /**
     * Returns true if the given object is an instance of AntiBruteForceRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntiBruteForceRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntiBruteForceRule.__pulumiType;
    }

    /**
     * The name of the defense rule.
     */
    public readonly antiBruteForceRuleName!: pulumi.Output<string>;
    /**
     * Specifies whether to set the defense rule as the default rule. Valid values:
     */
    public readonly defaultRule!: pulumi.Output<boolean | undefined>;
    /**
     * FailCount
     */
    public readonly failCount!: pulumi.Output<number>;
    /**
     * The period of time during which logons from an account are not allowed. Unit: minutes. Valid values:
     */
    public readonly forbiddenTime!: pulumi.Output<number>;
    /**
     * The maximum period of time during which failed logon attempts from an account can occur. Unit: minutes. Valid values:
     */
    public readonly span!: pulumi.Output<number>;
    /**
     * The UUIDs of the servers to which you want to apply the defense rule.
     */
    public readonly uuidLists!: pulumi.Output<string[]>;

    /**
     * Create a AntiBruteForceRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AntiBruteForceRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntiBruteForceRuleArgs | AntiBruteForceRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntiBruteForceRuleState | undefined;
            resourceInputs["antiBruteForceRuleName"] = state ? state.antiBruteForceRuleName : undefined;
            resourceInputs["defaultRule"] = state ? state.defaultRule : undefined;
            resourceInputs["failCount"] = state ? state.failCount : undefined;
            resourceInputs["forbiddenTime"] = state ? state.forbiddenTime : undefined;
            resourceInputs["span"] = state ? state.span : undefined;
            resourceInputs["uuidLists"] = state ? state.uuidLists : undefined;
        } else {
            const args = argsOrState as AntiBruteForceRuleArgs | undefined;
            if ((!args || args.antiBruteForceRuleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'antiBruteForceRuleName'");
            }
            if ((!args || args.failCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'failCount'");
            }
            if ((!args || args.forbiddenTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forbiddenTime'");
            }
            if ((!args || args.span === undefined) && !opts.urn) {
                throw new Error("Missing required property 'span'");
            }
            if ((!args || args.uuidLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'uuidLists'");
            }
            resourceInputs["antiBruteForceRuleName"] = args ? args.antiBruteForceRuleName : undefined;
            resourceInputs["defaultRule"] = args ? args.defaultRule : undefined;
            resourceInputs["failCount"] = args ? args.failCount : undefined;
            resourceInputs["forbiddenTime"] = args ? args.forbiddenTime : undefined;
            resourceInputs["span"] = args ? args.span : undefined;
            resourceInputs["uuidLists"] = args ? args.uuidLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntiBruteForceRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AntiBruteForceRule resources.
 */
export interface AntiBruteForceRuleState {
    /**
     * The name of the defense rule.
     */
    antiBruteForceRuleName?: pulumi.Input<string>;
    /**
     * Specifies whether to set the defense rule as the default rule. Valid values:
     */
    defaultRule?: pulumi.Input<boolean>;
    /**
     * FailCount
     */
    failCount?: pulumi.Input<number>;
    /**
     * The period of time during which logons from an account are not allowed. Unit: minutes. Valid values:
     */
    forbiddenTime?: pulumi.Input<number>;
    /**
     * The maximum period of time during which failed logon attempts from an account can occur. Unit: minutes. Valid values:
     */
    span?: pulumi.Input<number>;
    /**
     * The UUIDs of the servers to which you want to apply the defense rule.
     */
    uuidLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AntiBruteForceRule resource.
 */
export interface AntiBruteForceRuleArgs {
    /**
     * The name of the defense rule.
     */
    antiBruteForceRuleName: pulumi.Input<string>;
    /**
     * Specifies whether to set the defense rule as the default rule. Valid values:
     */
    defaultRule?: pulumi.Input<boolean>;
    /**
     * FailCount
     */
    failCount: pulumi.Input<number>;
    /**
     * The period of time during which logons from an account are not allowed. Unit: minutes. Valid values:
     */
    forbiddenTime: pulumi.Input<number>;
    /**
     * The maximum period of time during which failed logon attempts from an account can occur. Unit: minutes. Valid values:
     */
    span: pulumi.Input<number>;
    /**
     * The UUIDs of the servers to which you want to apply the defense rule.
     */
    uuidLists: pulumi.Input<pulumi.Input<string>[]>;
}
