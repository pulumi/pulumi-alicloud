// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Threat Detection Asset Bind can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:threatdetection/assetBind:AssetBind example <id>
 * ```
 */
export class AssetBind extends pulumi.CustomResource {
    /**
     * Get an existing AssetBind resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssetBindState, opts?: pulumi.CustomResourceOptions): AssetBind {
        return new AssetBind(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:threatdetection/assetBind:AssetBind';

    /**
     * Returns true if the given object is an instance of AssetBind.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AssetBind {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssetBind.__pulumiType;
    }

    /**
     * Bind version.
     */
    public readonly authVersion!: pulumi.Output<number | undefined>;
    /**
     * The first ID of the resource
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AssetBind resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssetBindArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssetBindArgs | AssetBindState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AssetBindState | undefined;
            resourceInputs["authVersion"] = state ? state.authVersion : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AssetBindArgs | undefined;
            resourceInputs["authVersion"] = args ? args.authVersion : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AssetBind.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AssetBind resources.
 */
export interface AssetBindState {
    /**
     * Bind version.
     */
    authVersion?: pulumi.Input<number>;
    /**
     * The first ID of the resource
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AssetBind resource.
 */
export interface AssetBindArgs {
    /**
     * Bind version.
     */
    authVersion?: pulumi.Input<number>;
    /**
     * The first ID of the resource
     */
    uuid?: pulumi.Input<string>;
}
