// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AntiBruteForceRuleArgs, AntiBruteForceRuleState } from "./antiBruteForceRule";
export type AntiBruteForceRule = import("./antiBruteForceRule").AntiBruteForceRule;
export const AntiBruteForceRule: typeof import("./antiBruteForceRule").AntiBruteForceRule = null as any;
utilities.lazyLoad(exports, ["AntiBruteForceRule"], () => require("./antiBruteForceRule"));

export { BackupPolicyArgs, BackupPolicyState } from "./backupPolicy";
export type BackupPolicy = import("./backupPolicy").BackupPolicy;
export const BackupPolicy: typeof import("./backupPolicy").BackupPolicy = null as any;
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));

export { BaselineStrategyArgs, BaselineStrategyState } from "./baselineStrategy";
export type BaselineStrategy = import("./baselineStrategy").BaselineStrategy;
export const BaselineStrategy: typeof import("./baselineStrategy").BaselineStrategy = null as any;
utilities.lazyLoad(exports, ["BaselineStrategy"], () => require("./baselineStrategy"));

export { ClientFileProtectArgs, ClientFileProtectState } from "./clientFileProtect";
export type ClientFileProtect = import("./clientFileProtect").ClientFileProtect;
export const ClientFileProtect: typeof import("./clientFileProtect").ClientFileProtect = null as any;
utilities.lazyLoad(exports, ["ClientFileProtect"], () => require("./clientFileProtect"));

export { ClientUserDefineRuleArgs, ClientUserDefineRuleState } from "./clientUserDefineRule";
export type ClientUserDefineRule = import("./clientUserDefineRule").ClientUserDefineRule;
export const ClientUserDefineRule: typeof import("./clientUserDefineRule").ClientUserDefineRule = null as any;
utilities.lazyLoad(exports, ["ClientUserDefineRule"], () => require("./clientUserDefineRule"));

export { FileUploadLimitArgs, FileUploadLimitState } from "./fileUploadLimit";
export type FileUploadLimit = import("./fileUploadLimit").FileUploadLimit;
export const FileUploadLimit: typeof import("./fileUploadLimit").FileUploadLimit = null as any;
utilities.lazyLoad(exports, ["FileUploadLimit"], () => require("./fileUploadLimit"));

export { GetAntiBruteForceRulesArgs, GetAntiBruteForceRulesResult, GetAntiBruteForceRulesOutputArgs } from "./getAntiBruteForceRules";
export const getAntiBruteForceRules: typeof import("./getAntiBruteForceRules").getAntiBruteForceRules = null as any;
export const getAntiBruteForceRulesOutput: typeof import("./getAntiBruteForceRules").getAntiBruteForceRulesOutput = null as any;
utilities.lazyLoad(exports, ["getAntiBruteForceRules","getAntiBruteForceRulesOutput"], () => require("./getAntiBruteForceRules"));

export { GetAssetsArgs, GetAssetsResult, GetAssetsOutputArgs } from "./getAssets";
export const getAssets: typeof import("./getAssets").getAssets = null as any;
export const getAssetsOutput: typeof import("./getAssets").getAssetsOutput = null as any;
utilities.lazyLoad(exports, ["getAssets","getAssetsOutput"], () => require("./getAssets"));

export { GetBackupPoliciesArgs, GetBackupPoliciesResult, GetBackupPoliciesOutputArgs } from "./getBackupPolicies";
export const getBackupPolicies: typeof import("./getBackupPolicies").getBackupPolicies = null as any;
export const getBackupPoliciesOutput: typeof import("./getBackupPolicies").getBackupPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getBackupPolicies","getBackupPoliciesOutput"], () => require("./getBackupPolicies"));

export { GetBaselineStrategiesArgs, GetBaselineStrategiesResult, GetBaselineStrategiesOutputArgs } from "./getBaselineStrategies";
export const getBaselineStrategies: typeof import("./getBaselineStrategies").getBaselineStrategies = null as any;
export const getBaselineStrategiesOutput: typeof import("./getBaselineStrategies").getBaselineStrategiesOutput = null as any;
utilities.lazyLoad(exports, ["getBaselineStrategies","getBaselineStrategiesOutput"], () => require("./getBaselineStrategies"));

export { GetHoneyPotsArgs, GetHoneyPotsResult, GetHoneyPotsOutputArgs } from "./getHoneyPots";
export const getHoneyPots: typeof import("./getHoneyPots").getHoneyPots = null as any;
export const getHoneyPotsOutput: typeof import("./getHoneyPots").getHoneyPotsOutput = null as any;
utilities.lazyLoad(exports, ["getHoneyPots","getHoneyPotsOutput"], () => require("./getHoneyPots"));

export { GetHoneypotImagesArgs, GetHoneypotImagesResult, GetHoneypotImagesOutputArgs } from "./getHoneypotImages";
export const getHoneypotImages: typeof import("./getHoneypotImages").getHoneypotImages = null as any;
export const getHoneypotImagesOutput: typeof import("./getHoneypotImages").getHoneypotImagesOutput = null as any;
utilities.lazyLoad(exports, ["getHoneypotImages","getHoneypotImagesOutput"], () => require("./getHoneypotImages"));

export { GetHoneypotNodesArgs, GetHoneypotNodesResult, GetHoneypotNodesOutputArgs } from "./getHoneypotNodes";
export const getHoneypotNodes: typeof import("./getHoneypotNodes").getHoneypotNodes = null as any;
export const getHoneypotNodesOutput: typeof import("./getHoneypotNodes").getHoneypotNodesOutput = null as any;
utilities.lazyLoad(exports, ["getHoneypotNodes","getHoneypotNodesOutput"], () => require("./getHoneypotNodes"));

export { GetHoneypotPresetsArgs, GetHoneypotPresetsResult, GetHoneypotPresetsOutputArgs } from "./getHoneypotPresets";
export const getHoneypotPresets: typeof import("./getHoneypotPresets").getHoneypotPresets = null as any;
export const getHoneypotPresetsOutput: typeof import("./getHoneypotPresets").getHoneypotPresetsOutput = null as any;
utilities.lazyLoad(exports, ["getHoneypotPresets","getHoneypotPresetsOutput"], () => require("./getHoneypotPresets"));

export { GetHoneypotProbesArgs, GetHoneypotProbesResult, GetHoneypotProbesOutputArgs } from "./getHoneypotProbes";
export const getHoneypotProbes: typeof import("./getHoneypotProbes").getHoneypotProbes = null as any;
export const getHoneypotProbesOutput: typeof import("./getHoneypotProbes").getHoneypotProbesOutput = null as any;
utilities.lazyLoad(exports, ["getHoneypotProbes","getHoneypotProbesOutput"], () => require("./getHoneypotProbes"));

export { GetInstancesArgs, GetInstancesResult, GetInstancesOutputArgs } from "./getInstances";
export const getInstances: typeof import("./getInstances").getInstances = null as any;
export const getInstancesOutput: typeof import("./getInstances").getInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getInstances","getInstancesOutput"], () => require("./getInstances"));

export { GetLogShipperArgs, GetLogShipperResult, GetLogShipperOutputArgs } from "./getLogShipper";
export const getLogShipper: typeof import("./getLogShipper").getLogShipper = null as any;
export const getLogShipperOutput: typeof import("./getLogShipper").getLogShipperOutput = null as any;
utilities.lazyLoad(exports, ["getLogShipper","getLogShipperOutput"], () => require("./getLogShipper"));

export { GetVulWhitelistsArgs, GetVulWhitelistsResult, GetVulWhitelistsOutputArgs } from "./getVulWhitelists";
export const getVulWhitelists: typeof import("./getVulWhitelists").getVulWhitelists = null as any;
export const getVulWhitelistsOutput: typeof import("./getVulWhitelists").getVulWhitelistsOutput = null as any;
utilities.lazyLoad(exports, ["getVulWhitelists","getVulWhitelistsOutput"], () => require("./getVulWhitelists"));

export { GetWebLockConfigsArgs, GetWebLockConfigsResult, GetWebLockConfigsOutputArgs } from "./getWebLockConfigs";
export const getWebLockConfigs: typeof import("./getWebLockConfigs").getWebLockConfigs = null as any;
export const getWebLockConfigsOutput: typeof import("./getWebLockConfigs").getWebLockConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getWebLockConfigs","getWebLockConfigsOutput"], () => require("./getWebLockConfigs"));

export { HoneyPotArgs, HoneyPotState } from "./honeyPot";
export type HoneyPot = import("./honeyPot").HoneyPot;
export const HoneyPot: typeof import("./honeyPot").HoneyPot = null as any;
utilities.lazyLoad(exports, ["HoneyPot"], () => require("./honeyPot"));

export { HoneypotNodeArgs, HoneypotNodeState } from "./honeypotNode";
export type HoneypotNode = import("./honeypotNode").HoneypotNode;
export const HoneypotNode: typeof import("./honeypotNode").HoneypotNode = null as any;
utilities.lazyLoad(exports, ["HoneypotNode"], () => require("./honeypotNode"));

export { HoneypotPresetArgs, HoneypotPresetState } from "./honeypotPreset";
export type HoneypotPreset = import("./honeypotPreset").HoneypotPreset;
export const HoneypotPreset: typeof import("./honeypotPreset").HoneypotPreset = null as any;
utilities.lazyLoad(exports, ["HoneypotPreset"], () => require("./honeypotPreset"));

export { HoneypotProbeArgs, HoneypotProbeState } from "./honeypotProbe";
export type HoneypotProbe = import("./honeypotProbe").HoneypotProbe;
export const HoneypotProbe: typeof import("./honeypotProbe").HoneypotProbe = null as any;
utilities.lazyLoad(exports, ["HoneypotProbe"], () => require("./honeypotProbe"));

export { ImageEventOperationArgs, ImageEventOperationState } from "./imageEventOperation";
export type ImageEventOperation = import("./imageEventOperation").ImageEventOperation;
export const ImageEventOperation: typeof import("./imageEventOperation").ImageEventOperation = null as any;
utilities.lazyLoad(exports, ["ImageEventOperation"], () => require("./imageEventOperation"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { MaliciousFileWhitelistConfigArgs, MaliciousFileWhitelistConfigState } from "./maliciousFileWhitelistConfig";
export type MaliciousFileWhitelistConfig = import("./maliciousFileWhitelistConfig").MaliciousFileWhitelistConfig;
export const MaliciousFileWhitelistConfig: typeof import("./maliciousFileWhitelistConfig").MaliciousFileWhitelistConfig = null as any;
utilities.lazyLoad(exports, ["MaliciousFileWhitelistConfig"], () => require("./maliciousFileWhitelistConfig"));

export { OssScanConfigArgs, OssScanConfigState } from "./ossScanConfig";
export type OssScanConfig = import("./ossScanConfig").OssScanConfig;
export const OssScanConfig: typeof import("./ossScanConfig").OssScanConfig = null as any;
utilities.lazyLoad(exports, ["OssScanConfig"], () => require("./ossScanConfig"));

export { SasTrailArgs, SasTrailState } from "./sasTrail";
export type SasTrail = import("./sasTrail").SasTrail;
export const SasTrail: typeof import("./sasTrail").SasTrail = null as any;
utilities.lazyLoad(exports, ["SasTrail"], () => require("./sasTrail"));

export { VulWhitelistArgs, VulWhitelistState } from "./vulWhitelist";
export type VulWhitelist = import("./vulWhitelist").VulWhitelist;
export const VulWhitelist: typeof import("./vulWhitelist").VulWhitelist = null as any;
utilities.lazyLoad(exports, ["VulWhitelist"], () => require("./vulWhitelist"));

export { WebLockConfigArgs, WebLockConfigState } from "./webLockConfig";
export type WebLockConfig = import("./webLockConfig").WebLockConfig;
export const WebLockConfig: typeof import("./webLockConfig").WebLockConfig = null as any;
utilities.lazyLoad(exports, ["WebLockConfig"], () => require("./webLockConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule":
                return new AntiBruteForceRule(name, <any>undefined, { urn })
            case "alicloud:threatdetection/backupPolicy:BackupPolicy":
                return new BackupPolicy(name, <any>undefined, { urn })
            case "alicloud:threatdetection/baselineStrategy:BaselineStrategy":
                return new BaselineStrategy(name, <any>undefined, { urn })
            case "alicloud:threatdetection/clientFileProtect:ClientFileProtect":
                return new ClientFileProtect(name, <any>undefined, { urn })
            case "alicloud:threatdetection/clientUserDefineRule:ClientUserDefineRule":
                return new ClientUserDefineRule(name, <any>undefined, { urn })
            case "alicloud:threatdetection/fileUploadLimit:FileUploadLimit":
                return new FileUploadLimit(name, <any>undefined, { urn })
            case "alicloud:threatdetection/honeyPot:HoneyPot":
                return new HoneyPot(name, <any>undefined, { urn })
            case "alicloud:threatdetection/honeypotNode:HoneypotNode":
                return new HoneypotNode(name, <any>undefined, { urn })
            case "alicloud:threatdetection/honeypotPreset:HoneypotPreset":
                return new HoneypotPreset(name, <any>undefined, { urn })
            case "alicloud:threatdetection/honeypotProbe:HoneypotProbe":
                return new HoneypotProbe(name, <any>undefined, { urn })
            case "alicloud:threatdetection/imageEventOperation:ImageEventOperation":
                return new ImageEventOperation(name, <any>undefined, { urn })
            case "alicloud:threatdetection/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "alicloud:threatdetection/maliciousFileWhitelistConfig:MaliciousFileWhitelistConfig":
                return new MaliciousFileWhitelistConfig(name, <any>undefined, { urn })
            case "alicloud:threatdetection/ossScanConfig:OssScanConfig":
                return new OssScanConfig(name, <any>undefined, { urn })
            case "alicloud:threatdetection/sasTrail:SasTrail":
                return new SasTrail(name, <any>undefined, { urn })
            case "alicloud:threatdetection/vulWhitelist:VulWhitelist":
                return new VulWhitelist(name, <any>undefined, { urn })
            case "alicloud:threatdetection/webLockConfig:WebLockConfig":
                return new WebLockConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/antiBruteForceRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/backupPolicy", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/baselineStrategy", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/clientFileProtect", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/clientUserDefineRule", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/fileUploadLimit", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/honeyPot", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/honeypotNode", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/honeypotPreset", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/honeypotProbe", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/imageEventOperation", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/instance", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/maliciousFileWhitelistConfig", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/ossScanConfig", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/sasTrail", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/vulWhitelist", _module)
pulumi.runtime.registerResourceModule("alicloud", "threatdetection/webLockConfig", _module)
