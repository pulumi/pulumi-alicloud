// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Threat Detection Client File Protect resource. Client core file protection event monitoring, including file reading and writing, deletion, and permission change.
 *
 * For information about Threat Detection Client File Protect and how to use it, see [What is Client File Protect](https://www.alibabacloud.com/help/zh/security-center/developer-reference/api-sas-2018-12-03-createfileprotectrule).
 *
 * > **NOTE:** Available since v1.212.0.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || "terraform-example";
 * const _default = new alicloud.threatdetection.ClientFileProtect("default", {
 *     status: 0,
 *     filePaths: ["/usr/local"],
 *     fileOps: ["CREATE"],
 *     ruleAction: "pass",
 *     procPaths: ["/usr/local"],
 *     alertLevel: 0,
 *     switchId: "FILE_PROTECT_RULE_SWITCH_TYPE_1693474122929",
 *     ruleName: "rule_example",
 * });
 * ```
 *
 * ## Import
 *
 * Threat Detection Client File Protect can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import alicloud:threatdetection/clientFileProtect:ClientFileProtect example <id>
 * ```
 */
export class ClientFileProtect extends pulumi.CustomResource {
    /**
     * Get an existing ClientFileProtect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClientFileProtectState, opts?: pulumi.CustomResourceOptions): ClientFileProtect {
        return new ClientFileProtect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:threatdetection/clientFileProtect:ClientFileProtect';

    /**
     * Returns true if the given object is an instance of ClientFileProtect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClientFileProtect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClientFileProtect.__pulumiType;
    }

    /**
     * 0 no alert 1 info 2 suspicious 3 critical.
     */
    declare public readonly alertLevel: pulumi.Output<number | undefined>;
    /**
     * file operation.
     */
    declare public readonly fileOps: pulumi.Output<string[]>;
    /**
     * file path.
     */
    declare public readonly filePaths: pulumi.Output<string[]>;
    /**
     * process path.
     */
    declare public readonly procPaths: pulumi.Output<string[]>;
    /**
     * rule action, pass or alert.
     */
    declare public readonly ruleAction: pulumi.Output<string>;
    /**
     * ruleName.
     */
    declare public readonly ruleName: pulumi.Output<string>;
    /**
     * rule status 0 is disable 1 is enable.
     */
    declare public readonly status: pulumi.Output<number>;
    /**
     * switch id.
     */
    declare public readonly switchId: pulumi.Output<string | undefined>;

    /**
     * Create a ClientFileProtect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClientFileProtectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClientFileProtectArgs | ClientFileProtectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClientFileProtectState | undefined;
            resourceInputs["alertLevel"] = state?.alertLevel;
            resourceInputs["fileOps"] = state?.fileOps;
            resourceInputs["filePaths"] = state?.filePaths;
            resourceInputs["procPaths"] = state?.procPaths;
            resourceInputs["ruleAction"] = state?.ruleAction;
            resourceInputs["ruleName"] = state?.ruleName;
            resourceInputs["status"] = state?.status;
            resourceInputs["switchId"] = state?.switchId;
        } else {
            const args = argsOrState as ClientFileProtectArgs | undefined;
            if (args?.fileOps === undefined && !opts.urn) {
                throw new Error("Missing required property 'fileOps'");
            }
            if (args?.filePaths === undefined && !opts.urn) {
                throw new Error("Missing required property 'filePaths'");
            }
            if (args?.procPaths === undefined && !opts.urn) {
                throw new Error("Missing required property 'procPaths'");
            }
            if (args?.ruleAction === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleAction'");
            }
            if (args?.ruleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["alertLevel"] = args?.alertLevel;
            resourceInputs["fileOps"] = args?.fileOps;
            resourceInputs["filePaths"] = args?.filePaths;
            resourceInputs["procPaths"] = args?.procPaths;
            resourceInputs["ruleAction"] = args?.ruleAction;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["status"] = args?.status;
            resourceInputs["switchId"] = args?.switchId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClientFileProtect.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClientFileProtect resources.
 */
export interface ClientFileProtectState {
    /**
     * 0 no alert 1 info 2 suspicious 3 critical.
     */
    alertLevel?: pulumi.Input<number>;
    /**
     * file operation.
     */
    fileOps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * file path.
     */
    filePaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * process path.
     */
    procPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * rule action, pass or alert.
     */
    ruleAction?: pulumi.Input<string>;
    /**
     * ruleName.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * rule status 0 is disable 1 is enable.
     */
    status?: pulumi.Input<number>;
    /**
     * switch id.
     */
    switchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClientFileProtect resource.
 */
export interface ClientFileProtectArgs {
    /**
     * 0 no alert 1 info 2 suspicious 3 critical.
     */
    alertLevel?: pulumi.Input<number>;
    /**
     * file operation.
     */
    fileOps: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * file path.
     */
    filePaths: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * process path.
     */
    procPaths: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * rule action, pass or alert.
     */
    ruleAction: pulumi.Input<string>;
    /**
     * ruleName.
     */
    ruleName: pulumi.Input<string>;
    /**
     * rule status 0 is disable 1 is enable.
     */
    status?: pulumi.Input<number>;
    /**
     * switch id.
     */
    switchId?: pulumi.Input<string>;
}
