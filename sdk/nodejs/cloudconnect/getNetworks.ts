// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides Cloud Connect Networks available to the user.
 *
 * > **NOTE:** Available in 1.59.0+
 *
 * > **NOTE:** Only the following regions support create Cloud Connect Network. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.cloudconnect.getNetworks({
 *     ids: [defaultAlicloudCloudConnectNetworks.id],
 *     nameRegex: "^tf-testAcc.*",
 * });
 * const defaultNetwork = new alicloud.cloudconnect.Network("default", {
 *     name: "tf-testAccCloudConnectNetworkName",
 *     description: "tf-testAccCloudConnectNetworkDescription",
 *     cidrBlock: "192.168.0.0/24",
 *     isDefault: true,
 * });
 * ```
 */
export function getNetworks(args?: GetNetworksArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:cloudconnect/getNetworks:getNetworks", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworks.
 */
export interface GetNetworksArgs {
    /**
     * A list of CCN instances IDs.
     */
    ids?: string[];
    /**
     * A regex string to filter CCN instances by name.
     */
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getNetworks.
 */
export interface GetNetworksResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of CCN instances IDs.
     */
    readonly ids: string[];
    readonly nameRegex?: string;
    /**
     * A list of CCN instances names.
     */
    readonly names: string[];
    /**
     * A list of CCN instances. Each element contains the following attributes:
     */
    readonly networks: outputs.cloudconnect.GetNetworksNetwork[];
    readonly outputFile?: string;
}
/**
 * This data source provides Cloud Connect Networks available to the user.
 *
 * > **NOTE:** Available in 1.59.0+
 *
 * > **NOTE:** Only the following regions support create Cloud Connect Network. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const _default = alicloud.cloudconnect.getNetworks({
 *     ids: [defaultAlicloudCloudConnectNetworks.id],
 *     nameRegex: "^tf-testAcc.*",
 * });
 * const defaultNetwork = new alicloud.cloudconnect.Network("default", {
 *     name: "tf-testAccCloudConnectNetworkName",
 *     description: "tf-testAccCloudConnectNetworkDescription",
 *     cidrBlock: "192.168.0.0/24",
 *     isDefault: true,
 * });
 * ```
 */
export function getNetworksOutput(args?: GetNetworksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("alicloud:cloudconnect/getNetworks:getNetworks", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworks.
 */
export interface GetNetworksOutputArgs {
    /**
     * A list of CCN instances IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regex string to filter CCN instances by name.
     */
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
