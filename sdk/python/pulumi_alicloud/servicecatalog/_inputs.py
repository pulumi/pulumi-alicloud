# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ProvisionedProductOutputArgs',
    'ProvisionedProductOutputArgsDict',
    'ProvisionedProductParameterArgs',
    'ProvisionedProductParameterArgsDict',
]

MYPY = False

if not MYPY:
    class ProvisionedProductOutputArgsDict(TypedDict):
        description: NotRequired[pulumi.Input[builtins.str]]
        """
        Description of the output value defined in the template.
        """
        output_key: NotRequired[pulumi.Input[builtins.str]]
        """
        The name of the output value defined in the template.
        """
        output_value: NotRequired[pulumi.Input[builtins.str]]
        """
        The content of the output value defined in the template.
        """
elif False:
    ProvisionedProductOutputArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ProvisionedProductOutputArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 output_key: Optional[pulumi.Input[builtins.str]] = None,
                 output_value: Optional[pulumi.Input[builtins.str]] = None):
        """
        :param pulumi.Input[builtins.str] description: Description of the output value defined in the template.
        :param pulumi.Input[builtins.str] output_key: The name of the output value defined in the template.
        :param pulumi.Input[builtins.str] output_value: The content of the output value defined in the template.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if output_key is not None:
            pulumi.set(__self__, "output_key", output_key)
        if output_value is not None:
            pulumi.set(__self__, "output_value", output_value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Description of the output value defined in the template.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="outputKey")
    def output_key(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the output value defined in the template.
        """
        return pulumi.get(self, "output_key")

    @output_key.setter
    def output_key(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "output_key", value)

    @property
    @pulumi.getter(name="outputValue")
    def output_value(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The content of the output value defined in the template.
        """
        return pulumi.get(self, "output_value")

    @output_value.setter
    def output_value(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "output_value", value)


if not MYPY:
    class ProvisionedProductParameterArgsDict(TypedDict):
        parameter_key: NotRequired[pulumi.Input[builtins.str]]
        """
        The name of the parameter defined in the template.
        """
        parameter_value: NotRequired[pulumi.Input[builtins.str]]
        """
        The Template parameter value entered by the user.
        """
elif False:
    ProvisionedProductParameterArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ProvisionedProductParameterArgs:
    def __init__(__self__, *,
                 parameter_key: Optional[pulumi.Input[builtins.str]] = None,
                 parameter_value: Optional[pulumi.Input[builtins.str]] = None):
        """
        :param pulumi.Input[builtins.str] parameter_key: The name of the parameter defined in the template.
        :param pulumi.Input[builtins.str] parameter_value: The Template parameter value entered by the user.
        """
        if parameter_key is not None:
            pulumi.set(__self__, "parameter_key", parameter_key)
        if parameter_value is not None:
            pulumi.set(__self__, "parameter_value", parameter_value)

    @property
    @pulumi.getter(name="parameterKey")
    def parameter_key(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the parameter defined in the template.
        """
        return pulumi.get(self, "parameter_key")

    @parameter_key.setter
    def parameter_key(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "parameter_key", value)

    @property
    @pulumi.getter(name="parameterValue")
    def parameter_value(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Template parameter value entered by the user.
        """
        return pulumi.get(self, "parameter_value")

    @parameter_value.setter
    def parameter_value(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "parameter_value", value)


