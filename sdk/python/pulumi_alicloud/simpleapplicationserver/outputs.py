# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetImagesImageResult',
    'GetInstancesInstanceResult',
    'GetServerCustomImagesImageResult',
    'GetServerDisksDiskResult',
    'GetServerFirewallRulesRuleResult',
    'GetServerPlansPlanResult',
    'GetServerSnapshotsSnapshotResult',
]

@pulumi.output_type
class GetImagesImageResult(dict):
    def __init__(__self__, *,
                 description: builtins.str,
                 id: builtins.str,
                 image_id: builtins.str,
                 image_name: builtins.str,
                 image_type: builtins.str,
                 platform: builtins.str):
        """
        :param builtins.str description: The description of the image.
        :param builtins.str id: The ID of the Instance Image.
        :param builtins.str image_id: The ID of the image.
        :param builtins.str image_name: The name of the resource.
        :param builtins.str image_type: The type of the image. Valid values: `app`, `custom`, `system`.
        :param builtins.str platform: The platform of Plan supported.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "image_id", image_id)
        pulumi.set(__self__, "image_name", image_name)
        pulumi.set(__self__, "image_type", image_type)
        pulumi.set(__self__, "platform", platform)

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        The description of the image.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Instance Image.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> builtins.str:
        """
        The ID of the image.
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="imageName")
    def image_name(self) -> builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "image_name")

    @property
    @pulumi.getter(name="imageType")
    def image_type(self) -> builtins.str:
        """
        The type of the image. Valid values: `app`, `custom`, `system`.
        """
        return pulumi.get(self, "image_type")

    @property
    @pulumi.getter
    def platform(self) -> builtins.str:
        """
        The platform of Plan supported.
        """
        return pulumi.get(self, "platform")


@pulumi.output_type
class GetInstancesInstanceResult(dict):
    def __init__(__self__, *,
                 business_status: builtins.str,
                 create_time: builtins.str,
                 ddos_status: builtins.str,
                 expired_time: builtins.str,
                 id: builtins.str,
                 image_id: builtins.str,
                 inner_ip_address: builtins.str,
                 instance_id: builtins.str,
                 instance_name: builtins.str,
                 payment_type: builtins.str,
                 plan_id: builtins.str,
                 public_ip_address: builtins.str,
                 status: builtins.str):
        """
        :param builtins.str business_status: The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
        :param builtins.str create_time: The time when the simple application server was created.
        :param builtins.str ddos_status: The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
        :param builtins.str expired_time: The time when the simple application server expires.
        :param builtins.str id: The ID of the Instance.
        :param builtins.str image_id: The ID of the simple application server Image.
        :param builtins.str inner_ip_address: The internal IP address of the simple application server.
        :param builtins.str instance_id: The ID of the simple application server.
        :param builtins.str instance_name: The name of the resource.
        :param builtins.str payment_type: The billing method of the simple application server.
        :param builtins.str plan_id: The ID of the simple application server plan.
        :param builtins.str public_ip_address: The public IP address of the simple application server.
        :param builtins.str status: The status of the resource.
        """
        pulumi.set(__self__, "business_status", business_status)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "ddos_status", ddos_status)
        pulumi.set(__self__, "expired_time", expired_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "image_id", image_id)
        pulumi.set(__self__, "inner_ip_address", inner_ip_address)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "payment_type", payment_type)
        pulumi.set(__self__, "plan_id", plan_id)
        pulumi.set(__self__, "public_ip_address", public_ip_address)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="businessStatus")
    def business_status(self) -> builtins.str:
        """
        The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
        """
        return pulumi.get(self, "business_status")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> builtins.str:
        """
        The time when the simple application server was created.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="ddosStatus")
    def ddos_status(self) -> builtins.str:
        """
        The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
        """
        return pulumi.get(self, "ddos_status")

    @property
    @pulumi.getter(name="expiredTime")
    def expired_time(self) -> builtins.str:
        """
        The time when the simple application server expires.
        """
        return pulumi.get(self, "expired_time")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Instance.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> builtins.str:
        """
        The ID of the simple application server Image.
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="innerIpAddress")
    def inner_ip_address(self) -> builtins.str:
        """
        The internal IP address of the simple application server.
        """
        return pulumi.get(self, "inner_ip_address")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> builtins.str:
        """
        The ID of the simple application server.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="paymentType")
    def payment_type(self) -> builtins.str:
        """
        The billing method of the simple application server.
        """
        return pulumi.get(self, "payment_type")

    @property
    @pulumi.getter(name="planId")
    def plan_id(self) -> builtins.str:
        """
        The ID of the simple application server plan.
        """
        return pulumi.get(self, "plan_id")

    @property
    @pulumi.getter(name="publicIpAddress")
    def public_ip_address(self) -> builtins.str:
        """
        The public IP address of the simple application server.
        """
        return pulumi.get(self, "public_ip_address")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the resource.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class GetServerCustomImagesImageResult(dict):
    def __init__(__self__, *,
                 custom_image_id: builtins.str,
                 custom_image_name: builtins.str,
                 description: builtins.str,
                 id: builtins.str,
                 platform: builtins.str):
        """
        :param builtins.str custom_image_id: The first ID of the resource.
        :param builtins.str custom_image_name: The name of the resource.
        :param builtins.str description: Image description information.
        :param builtins.str id: The ID of the Custom Image.
        :param builtins.str platform: The type of operating system used by the Mirror. Valid values: `Linux`, `Windows`.
        """
        pulumi.set(__self__, "custom_image_id", custom_image_id)
        pulumi.set(__self__, "custom_image_name", custom_image_name)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "platform", platform)

    @property
    @pulumi.getter(name="customImageId")
    def custom_image_id(self) -> builtins.str:
        """
        The first ID of the resource.
        """
        return pulumi.get(self, "custom_image_id")

    @property
    @pulumi.getter(name="customImageName")
    def custom_image_name(self) -> builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "custom_image_name")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        Image description information.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Custom Image.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def platform(self) -> builtins.str:
        """
        The type of operating system used by the Mirror. Valid values: `Linux`, `Windows`.
        """
        return pulumi.get(self, "platform")


@pulumi.output_type
class GetServerDisksDiskResult(dict):
    def __init__(__self__, *,
                 category: builtins.str,
                 create_time: builtins.str,
                 device: builtins.str,
                 disk_id: builtins.str,
                 disk_name: builtins.str,
                 disk_type: builtins.str,
                 id: builtins.str,
                 instance_id: builtins.str,
                 payment_type: builtins.str,
                 size: builtins.int,
                 status: builtins.str):
        """
        :param builtins.str category: Disk type. Possible values: `ESSD`, `SSD`.
        :param builtins.str create_time: The time when the disk was created. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        :param builtins.str device: The device name of the disk on the simple application server.
        :param builtins.str disk_id: The first ID of the resource.
        :param builtins.str disk_name: The name of the resource.
        :param builtins.str disk_type: The type of the disk. Possible values: `System`, `Data`.
        :param builtins.str id: The ID of the Disk.
        :param builtins.str instance_id: Alibaba Cloud simple application server instance ID.
        :param builtins.str payment_type: The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
        :param builtins.int size: The size of the disk. Unit: `GB`.
        :param builtins.str status: The status of the disk. Valid values: `ReIniting`, `Creating`, `In_Use`, `Available`, `Attaching`, `Detaching`.
        """
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "device", device)
        pulumi.set(__self__, "disk_id", disk_id)
        pulumi.set(__self__, "disk_name", disk_name)
        pulumi.set(__self__, "disk_type", disk_type)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "payment_type", payment_type)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def category(self) -> builtins.str:
        """
        Disk type. Possible values: `ESSD`, `SSD`.
        """
        return pulumi.get(self, "category")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> builtins.str:
        """
        The time when the disk was created. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def device(self) -> builtins.str:
        """
        The device name of the disk on the simple application server.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="diskId")
    def disk_id(self) -> builtins.str:
        """
        The first ID of the resource.
        """
        return pulumi.get(self, "disk_id")

    @property
    @pulumi.getter(name="diskName")
    def disk_name(self) -> builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "disk_name")

    @property
    @pulumi.getter(name="diskType")
    def disk_type(self) -> builtins.str:
        """
        The type of the disk. Possible values: `System`, `Data`.
        """
        return pulumi.get(self, "disk_type")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Disk.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> builtins.str:
        """
        Alibaba Cloud simple application server instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="paymentType")
    def payment_type(self) -> builtins.str:
        """
        The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
        """
        return pulumi.get(self, "payment_type")

    @property
    @pulumi.getter
    def size(self) -> builtins.int:
        """
        The size of the disk. Unit: `GB`.
        """
        return pulumi.get(self, "size")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the disk. Valid values: `ReIniting`, `Creating`, `In_Use`, `Available`, `Attaching`, `Detaching`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class GetServerFirewallRulesRuleResult(dict):
    def __init__(__self__, *,
                 firewall_rule_id: builtins.str,
                 id: builtins.str,
                 instance_id: builtins.str,
                 port: builtins.str,
                 remark: builtins.str,
                 rule_protocol: builtins.str):
        """
        :param builtins.str firewall_rule_id: The ID of the firewall rule.
        :param builtins.str id: The ID of the Firewall Rule. The value formats as `<instance_id>:<firewall_rule_id>`.
        :param builtins.str instance_id: Alibaba Cloud simple application server instance ID.
        :param builtins.str port: The port range of the firewall rule.
        :param builtins.str remark: The remarks of the firewall rule.
        :param builtins.str rule_protocol: The transport layer protocol. Valid values: `Tcp`, `Udp`, `TcpAndUdp`.
        """
        pulumi.set(__self__, "firewall_rule_id", firewall_rule_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "remark", remark)
        pulumi.set(__self__, "rule_protocol", rule_protocol)

    @property
    @pulumi.getter(name="firewallRuleId")
    def firewall_rule_id(self) -> builtins.str:
        """
        The ID of the firewall rule.
        """
        return pulumi.get(self, "firewall_rule_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Firewall Rule. The value formats as `<instance_id>:<firewall_rule_id>`.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> builtins.str:
        """
        Alibaba Cloud simple application server instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def port(self) -> builtins.str:
        """
        The port range of the firewall rule.
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def remark(self) -> builtins.str:
        """
        The remarks of the firewall rule.
        """
        return pulumi.get(self, "remark")

    @property
    @pulumi.getter(name="ruleProtocol")
    def rule_protocol(self) -> builtins.str:
        """
        The transport layer protocol. Valid values: `Tcp`, `Udp`, `TcpAndUdp`.
        """
        return pulumi.get(self, "rule_protocol")


@pulumi.output_type
class GetServerPlansPlanResult(dict):
    def __init__(__self__, *,
                 bandwidth: builtins.int,
                 core: builtins.int,
                 disk_size: builtins.int,
                 flow: builtins.int,
                 id: builtins.str,
                 memory: builtins.float,
                 plan_id: builtins.str,
                 support_platform: builtins.str):
        """
        :param builtins.int bandwidth: The peak bandwidth. Unit: Mbit/s.
        :param builtins.int core: The number of CPU cores.
        :param builtins.int disk_size: The size of the enhanced SSD (ESSD). Unit: GB.
        :param builtins.int flow: The monthly data transfer quota. Unit: GB.
        :param builtins.str id: The ID of the Instance Plan.
        :param builtins.float memory: The memory size. Unit: GB.
        :param builtins.str plan_id: The ID of the Instance Plan.
        :param builtins.str support_platform: The platform of Plan supported.
        """
        pulumi.set(__self__, "bandwidth", bandwidth)
        pulumi.set(__self__, "core", core)
        pulumi.set(__self__, "disk_size", disk_size)
        pulumi.set(__self__, "flow", flow)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "memory", memory)
        pulumi.set(__self__, "plan_id", plan_id)
        pulumi.set(__self__, "support_platform", support_platform)

    @property
    @pulumi.getter
    def bandwidth(self) -> builtins.int:
        """
        The peak bandwidth. Unit: Mbit/s.
        """
        return pulumi.get(self, "bandwidth")

    @property
    @pulumi.getter
    def core(self) -> builtins.int:
        """
        The number of CPU cores.
        """
        return pulumi.get(self, "core")

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> builtins.int:
        """
        The size of the enhanced SSD (ESSD). Unit: GB.
        """
        return pulumi.get(self, "disk_size")

    @property
    @pulumi.getter
    def flow(self) -> builtins.int:
        """
        The monthly data transfer quota. Unit: GB.
        """
        return pulumi.get(self, "flow")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Instance Plan.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def memory(self) -> builtins.float:
        """
        The memory size. Unit: GB.
        """
        return pulumi.get(self, "memory")

    @property
    @pulumi.getter(name="planId")
    def plan_id(self) -> builtins.str:
        """
        The ID of the Instance Plan.
        """
        return pulumi.get(self, "plan_id")

    @property
    @pulumi.getter(name="supportPlatform")
    def support_platform(self) -> builtins.str:
        """
        The platform of Plan supported.
        """
        return pulumi.get(self, "support_platform")


@pulumi.output_type
class GetServerSnapshotsSnapshotResult(dict):
    def __init__(__self__, *,
                 create_time: builtins.str,
                 disk_id: builtins.str,
                 id: builtins.str,
                 progress: builtins.str,
                 remark: builtins.str,
                 snapshot_id: builtins.str,
                 snapshot_name: builtins.str,
                 source_disk_type: builtins.str,
                 status: builtins.str):
        """
        :param builtins.str create_time: The time when the snapshot was created. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        :param builtins.str disk_id: The ID of the source disk. This parameter has a value even after the source disk is released.
        :param builtins.str id: The ID of the Snapshot.
        :param builtins.str progress: The progress of snapshot creation.
        :param builtins.str remark: The remarks of the snapshot.
        :param builtins.str snapshot_id: The ID of the snapshot.
        :param builtins.str snapshot_name: The name of the snapshot.
        :param builtins.str source_disk_type: A snapshot of the source of a disk type. Possible values: `System`, `Data`.
        :param builtins.str status: The status of the snapshots. Valid values: `Progressing`, `Accomplished` and `Failed`.
        """
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "disk_id", disk_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "progress", progress)
        pulumi.set(__self__, "remark", remark)
        pulumi.set(__self__, "snapshot_id", snapshot_id)
        pulumi.set(__self__, "snapshot_name", snapshot_name)
        pulumi.set(__self__, "source_disk_type", source_disk_type)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> builtins.str:
        """
        The time when the snapshot was created. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="diskId")
    def disk_id(self) -> builtins.str:
        """
        The ID of the source disk. This parameter has a value even after the source disk is released.
        """
        return pulumi.get(self, "disk_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Snapshot.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def progress(self) -> builtins.str:
        """
        The progress of snapshot creation.
        """
        return pulumi.get(self, "progress")

    @property
    @pulumi.getter
    def remark(self) -> builtins.str:
        """
        The remarks of the snapshot.
        """
        return pulumi.get(self, "remark")

    @property
    @pulumi.getter(name="snapshotId")
    def snapshot_id(self) -> builtins.str:
        """
        The ID of the snapshot.
        """
        return pulumi.get(self, "snapshot_id")

    @property
    @pulumi.getter(name="snapshotName")
    def snapshot_name(self) -> builtins.str:
        """
        The name of the snapshot.
        """
        return pulumi.get(self, "snapshot_name")

    @property
    @pulumi.getter(name="sourceDiskType")
    def source_disk_type(self) -> builtins.str:
        """
        A snapshot of the source of a disk type. Possible values: `System`, `Data`.
        """
        return pulumi.get(self, "source_disk_type")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the snapshots. Valid values: `Progressing`, `Accomplished` and `Failed`.
        """
        return pulumi.get(self, "status")


