# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['NodeArgs', 'Node']

@pulumi.input_type
class NodeArgs:
    def __init__(__self__, *,
                 billing_cycle: Optional[pulumi.Input[str]] = None,
                 classify: Optional[pulumi.Input[str]] = None,
                 computing_server: Optional[pulumi.Input[str]] = None,
                 discount_level: Optional[pulumi.Input[str]] = None,
                 hpn_zone: Optional[pulumi.Input[str]] = None,
                 payment_ratio: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 product_form: Optional[pulumi.Input[str]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 resource_group_id: Optional[pulumi.Input[str]] = None,
                 server_arch: Optional[pulumi.Input[str]] = None,
                 stage_num: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zone: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Node resource.
        :param pulumi.Input[str] billing_cycle: Billing cycle
        :param pulumi.Input[str] classify: Classification
        :param pulumi.Input[str] computing_server: Node Model
        :param pulumi.Input[str] discount_level: Offer Information
        :param pulumi.Input[str] hpn_zone: Cluster Number
        :param pulumi.Input[str] payment_ratio: Down payment ratio
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        :param pulumi.Input[str] product_form: Form
        :param pulumi.Input[int] renew_period: Automatic renewal period, in months.
               
               > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        :param pulumi.Input[str] renewal_status: Automatic renewal status, value:
               - AutoRenewal: automatic renewal.
               - ManualRenewal: manual renewal.
               
               The default ManualRenewal.
        :param pulumi.Input[str] resource_group_id: The ID of the resource group
        :param pulumi.Input[str] server_arch: Architecture
        :param pulumi.Input[str] stage_num: Number of stages
        :param pulumi.Input[str] status: The status of the resource
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: The tag of the resource
        :param pulumi.Input[str] zone: Availability Zone
        """
        if billing_cycle is not None:
            pulumi.set(__self__, "billing_cycle", billing_cycle)
        if classify is not None:
            pulumi.set(__self__, "classify", classify)
        if computing_server is not None:
            pulumi.set(__self__, "computing_server", computing_server)
        if discount_level is not None:
            pulumi.set(__self__, "discount_level", discount_level)
        if hpn_zone is not None:
            pulumi.set(__self__, "hpn_zone", hpn_zone)
        if payment_ratio is not None:
            pulumi.set(__self__, "payment_ratio", payment_ratio)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if product_form is not None:
            pulumi.set(__self__, "product_form", product_form)
        if renew_period is not None:
            pulumi.set(__self__, "renew_period", renew_period)
        if renewal_status is not None:
            pulumi.set(__self__, "renewal_status", renewal_status)
        if resource_group_id is not None:
            pulumi.set(__self__, "resource_group_id", resource_group_id)
        if server_arch is not None:
            pulumi.set(__self__, "server_arch", server_arch)
        if stage_num is not None:
            pulumi.set(__self__, "stage_num", stage_num)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if zone is not None:
            pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter(name="billingCycle")
    def billing_cycle(self) -> Optional[pulumi.Input[str]]:
        """
        Billing cycle
        """
        return pulumi.get(self, "billing_cycle")

    @billing_cycle.setter
    def billing_cycle(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_cycle", value)

    @property
    @pulumi.getter
    def classify(self) -> Optional[pulumi.Input[str]]:
        """
        Classification
        """
        return pulumi.get(self, "classify")

    @classify.setter
    def classify(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "classify", value)

    @property
    @pulumi.getter(name="computingServer")
    def computing_server(self) -> Optional[pulumi.Input[str]]:
        """
        Node Model
        """
        return pulumi.get(self, "computing_server")

    @computing_server.setter
    def computing_server(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "computing_server", value)

    @property
    @pulumi.getter(name="discountLevel")
    def discount_level(self) -> Optional[pulumi.Input[str]]:
        """
        Offer Information
        """
        return pulumi.get(self, "discount_level")

    @discount_level.setter
    def discount_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "discount_level", value)

    @property
    @pulumi.getter(name="hpnZone")
    def hpn_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Cluster Number
        """
        return pulumi.get(self, "hpn_zone")

    @hpn_zone.setter
    def hpn_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hpn_zone", value)

    @property
    @pulumi.getter(name="paymentRatio")
    def payment_ratio(self) -> Optional[pulumi.Input[str]]:
        """
        Down payment ratio
        """
        return pulumi.get(self, "payment_ratio")

    @payment_ratio.setter
    def payment_ratio(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "payment_ratio", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="productForm")
    def product_form(self) -> Optional[pulumi.Input[str]]:
        """
        Form
        """
        return pulumi.get(self, "product_form")

    @product_form.setter
    def product_form(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "product_form", value)

    @property
    @pulumi.getter(name="renewPeriod")
    def renew_period(self) -> Optional[pulumi.Input[int]]:
        """
        Automatic renewal period, in months.

        > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        """
        return pulumi.get(self, "renew_period")

    @renew_period.setter
    def renew_period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "renew_period", value)

    @property
    @pulumi.getter(name="renewalStatus")
    def renewal_status(self) -> Optional[pulumi.Input[str]]:
        """
        Automatic renewal status, value:
        - AutoRenewal: automatic renewal.
        - ManualRenewal: manual renewal.

        The default ManualRenewal.
        """
        return pulumi.get(self, "renewal_status")

    @renewal_status.setter
    def renewal_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renewal_status", value)

    @property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the resource group
        """
        return pulumi.get(self, "resource_group_id")

    @resource_group_id.setter
    def resource_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_group_id", value)

    @property
    @pulumi.getter(name="serverArch")
    def server_arch(self) -> Optional[pulumi.Input[str]]:
        """
        Architecture
        """
        return pulumi.get(self, "server_arch")

    @server_arch.setter
    def server_arch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server_arch", value)

    @property
    @pulumi.getter(name="stageNum")
    def stage_num(self) -> Optional[pulumi.Input[str]]:
        """
        Number of stages
        """
        return pulumi.get(self, "stage_num")

    @stage_num.setter
    def stage_num(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stage_num", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the resource
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        The tag of the resource
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def zone(self) -> Optional[pulumi.Input[str]]:
        """
        Availability Zone
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone", value)


@pulumi.input_type
class _NodeState:
    def __init__(__self__, *,
                 billing_cycle: Optional[pulumi.Input[str]] = None,
                 classify: Optional[pulumi.Input[str]] = None,
                 computing_server: Optional[pulumi.Input[str]] = None,
                 create_time: Optional[pulumi.Input[str]] = None,
                 discount_level: Optional[pulumi.Input[str]] = None,
                 hpn_zone: Optional[pulumi.Input[str]] = None,
                 payment_ratio: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 product_form: Optional[pulumi.Input[str]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 resource_group_id: Optional[pulumi.Input[str]] = None,
                 server_arch: Optional[pulumi.Input[str]] = None,
                 stage_num: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zone: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Node resources.
        :param pulumi.Input[str] billing_cycle: Billing cycle
        :param pulumi.Input[str] classify: Classification
        :param pulumi.Input[str] computing_server: Node Model
        :param pulumi.Input[str] create_time: The creation time of the resource
        :param pulumi.Input[str] discount_level: Offer Information
        :param pulumi.Input[str] hpn_zone: Cluster Number
        :param pulumi.Input[str] payment_ratio: Down payment ratio
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        :param pulumi.Input[str] product_form: Form
        :param pulumi.Input[int] renew_period: Automatic renewal period, in months.
               
               > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        :param pulumi.Input[str] renewal_status: Automatic renewal status, value:
               - AutoRenewal: automatic renewal.
               - ManualRenewal: manual renewal.
               
               The default ManualRenewal.
        :param pulumi.Input[str] resource_group_id: The ID of the resource group
        :param pulumi.Input[str] server_arch: Architecture
        :param pulumi.Input[str] stage_num: Number of stages
        :param pulumi.Input[str] status: The status of the resource
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: The tag of the resource
        :param pulumi.Input[str] zone: Availability Zone
        """
        if billing_cycle is not None:
            pulumi.set(__self__, "billing_cycle", billing_cycle)
        if classify is not None:
            pulumi.set(__self__, "classify", classify)
        if computing_server is not None:
            pulumi.set(__self__, "computing_server", computing_server)
        if create_time is not None:
            pulumi.set(__self__, "create_time", create_time)
        if discount_level is not None:
            pulumi.set(__self__, "discount_level", discount_level)
        if hpn_zone is not None:
            pulumi.set(__self__, "hpn_zone", hpn_zone)
        if payment_ratio is not None:
            pulumi.set(__self__, "payment_ratio", payment_ratio)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if product_form is not None:
            pulumi.set(__self__, "product_form", product_form)
        if renew_period is not None:
            pulumi.set(__self__, "renew_period", renew_period)
        if renewal_status is not None:
            pulumi.set(__self__, "renewal_status", renewal_status)
        if resource_group_id is not None:
            pulumi.set(__self__, "resource_group_id", resource_group_id)
        if server_arch is not None:
            pulumi.set(__self__, "server_arch", server_arch)
        if stage_num is not None:
            pulumi.set(__self__, "stage_num", stage_num)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if zone is not None:
            pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter(name="billingCycle")
    def billing_cycle(self) -> Optional[pulumi.Input[str]]:
        """
        Billing cycle
        """
        return pulumi.get(self, "billing_cycle")

    @billing_cycle.setter
    def billing_cycle(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_cycle", value)

    @property
    @pulumi.getter
    def classify(self) -> Optional[pulumi.Input[str]]:
        """
        Classification
        """
        return pulumi.get(self, "classify")

    @classify.setter
    def classify(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "classify", value)

    @property
    @pulumi.getter(name="computingServer")
    def computing_server(self) -> Optional[pulumi.Input[str]]:
        """
        Node Model
        """
        return pulumi.get(self, "computing_server")

    @computing_server.setter
    def computing_server(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "computing_server", value)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[str]]:
        """
        The creation time of the resource
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_time", value)

    @property
    @pulumi.getter(name="discountLevel")
    def discount_level(self) -> Optional[pulumi.Input[str]]:
        """
        Offer Information
        """
        return pulumi.get(self, "discount_level")

    @discount_level.setter
    def discount_level(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "discount_level", value)

    @property
    @pulumi.getter(name="hpnZone")
    def hpn_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Cluster Number
        """
        return pulumi.get(self, "hpn_zone")

    @hpn_zone.setter
    def hpn_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hpn_zone", value)

    @property
    @pulumi.getter(name="paymentRatio")
    def payment_ratio(self) -> Optional[pulumi.Input[str]]:
        """
        Down payment ratio
        """
        return pulumi.get(self, "payment_ratio")

    @payment_ratio.setter
    def payment_ratio(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "payment_ratio", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="productForm")
    def product_form(self) -> Optional[pulumi.Input[str]]:
        """
        Form
        """
        return pulumi.get(self, "product_form")

    @product_form.setter
    def product_form(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "product_form", value)

    @property
    @pulumi.getter(name="renewPeriod")
    def renew_period(self) -> Optional[pulumi.Input[int]]:
        """
        Automatic renewal period, in months.

        > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        """
        return pulumi.get(self, "renew_period")

    @renew_period.setter
    def renew_period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "renew_period", value)

    @property
    @pulumi.getter(name="renewalStatus")
    def renewal_status(self) -> Optional[pulumi.Input[str]]:
        """
        Automatic renewal status, value:
        - AutoRenewal: automatic renewal.
        - ManualRenewal: manual renewal.

        The default ManualRenewal.
        """
        return pulumi.get(self, "renewal_status")

    @renewal_status.setter
    def renewal_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renewal_status", value)

    @property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the resource group
        """
        return pulumi.get(self, "resource_group_id")

    @resource_group_id.setter
    def resource_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_group_id", value)

    @property
    @pulumi.getter(name="serverArch")
    def server_arch(self) -> Optional[pulumi.Input[str]]:
        """
        Architecture
        """
        return pulumi.get(self, "server_arch")

    @server_arch.setter
    def server_arch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "server_arch", value)

    @property
    @pulumi.getter(name="stageNum")
    def stage_num(self) -> Optional[pulumi.Input[str]]:
        """
        Number of stages
        """
        return pulumi.get(self, "stage_num")

    @stage_num.setter
    def stage_num(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stage_num", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the resource
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        The tag of the resource
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def zone(self) -> Optional[pulumi.Input[str]]:
        """
        Availability Zone
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone", value)


class Node(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 billing_cycle: Optional[pulumi.Input[str]] = None,
                 classify: Optional[pulumi.Input[str]] = None,
                 computing_server: Optional[pulumi.Input[str]] = None,
                 discount_level: Optional[pulumi.Input[str]] = None,
                 hpn_zone: Optional[pulumi.Input[str]] = None,
                 payment_ratio: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 product_form: Optional[pulumi.Input[str]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 resource_group_id: Optional[pulumi.Input[str]] = None,
                 server_arch: Optional[pulumi.Input[str]] = None,
                 stage_num: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a Eflo Node resource.

        Large computing node.

        For information about Eflo Node and how to use it, see [What is Node](https://next.api.alibabacloud.com/document/BssOpenApi/2017-12-14/CreateInstance).

        > **NOTE:** Available since v1.246.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        config = pulumi.Config()
        name = config.get("name")
        if name is None:
            name = "terraform-example"
        default = alicloud.resourcemanager.get_resource_groups()
        default_node = alicloud.eflo.Node("default",
            period=36,
            discount_level="36",
            billing_cycle="1month",
            classify="gpuserver",
            zone="cn-hangzhou-b",
            product_form="instance",
            payment_ratio="0",
            hpn_zone="B1",
            server_arch="bmserver",
            computing_server="efg1.nvga1n",
            stage_num="36",
            renewal_status="AutoRenewal",
            renew_period=36,
            status="Unused")
        ```

        ## Import

        Eflo Node can be imported using the id, e.g.

        ```sh
        $ pulumi import alicloud:eflo/node:Node example <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] billing_cycle: Billing cycle
        :param pulumi.Input[str] classify: Classification
        :param pulumi.Input[str] computing_server: Node Model
        :param pulumi.Input[str] discount_level: Offer Information
        :param pulumi.Input[str] hpn_zone: Cluster Number
        :param pulumi.Input[str] payment_ratio: Down payment ratio
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        :param pulumi.Input[str] product_form: Form
        :param pulumi.Input[int] renew_period: Automatic renewal period, in months.
               
               > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        :param pulumi.Input[str] renewal_status: Automatic renewal status, value:
               - AutoRenewal: automatic renewal.
               - ManualRenewal: manual renewal.
               
               The default ManualRenewal.
        :param pulumi.Input[str] resource_group_id: The ID of the resource group
        :param pulumi.Input[str] server_arch: Architecture
        :param pulumi.Input[str] stage_num: Number of stages
        :param pulumi.Input[str] status: The status of the resource
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: The tag of the resource
        :param pulumi.Input[str] zone: Availability Zone
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[NodeArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a Eflo Node resource.

        Large computing node.

        For information about Eflo Node and how to use it, see [What is Node](https://next.api.alibabacloud.com/document/BssOpenApi/2017-12-14/CreateInstance).

        > **NOTE:** Available since v1.246.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        config = pulumi.Config()
        name = config.get("name")
        if name is None:
            name = "terraform-example"
        default = alicloud.resourcemanager.get_resource_groups()
        default_node = alicloud.eflo.Node("default",
            period=36,
            discount_level="36",
            billing_cycle="1month",
            classify="gpuserver",
            zone="cn-hangzhou-b",
            product_form="instance",
            payment_ratio="0",
            hpn_zone="B1",
            server_arch="bmserver",
            computing_server="efg1.nvga1n",
            stage_num="36",
            renewal_status="AutoRenewal",
            renew_period=36,
            status="Unused")
        ```

        ## Import

        Eflo Node can be imported using the id, e.g.

        ```sh
        $ pulumi import alicloud:eflo/node:Node example <id>
        ```

        :param str resource_name: The name of the resource.
        :param NodeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NodeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 billing_cycle: Optional[pulumi.Input[str]] = None,
                 classify: Optional[pulumi.Input[str]] = None,
                 computing_server: Optional[pulumi.Input[str]] = None,
                 discount_level: Optional[pulumi.Input[str]] = None,
                 hpn_zone: Optional[pulumi.Input[str]] = None,
                 payment_ratio: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 product_form: Optional[pulumi.Input[str]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 resource_group_id: Optional[pulumi.Input[str]] = None,
                 server_arch: Optional[pulumi.Input[str]] = None,
                 stage_num: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NodeArgs.__new__(NodeArgs)

            __props__.__dict__["billing_cycle"] = billing_cycle
            __props__.__dict__["classify"] = classify
            __props__.__dict__["computing_server"] = computing_server
            __props__.__dict__["discount_level"] = discount_level
            __props__.__dict__["hpn_zone"] = hpn_zone
            __props__.__dict__["payment_ratio"] = payment_ratio
            __props__.__dict__["period"] = period
            __props__.__dict__["product_form"] = product_form
            __props__.__dict__["renew_period"] = renew_period
            __props__.__dict__["renewal_status"] = renewal_status
            __props__.__dict__["resource_group_id"] = resource_group_id
            __props__.__dict__["server_arch"] = server_arch
            __props__.__dict__["stage_num"] = stage_num
            __props__.__dict__["status"] = status
            __props__.__dict__["tags"] = tags
            __props__.__dict__["zone"] = zone
            __props__.__dict__["create_time"] = None
        super(Node, __self__).__init__(
            'alicloud:eflo/node:Node',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            billing_cycle: Optional[pulumi.Input[str]] = None,
            classify: Optional[pulumi.Input[str]] = None,
            computing_server: Optional[pulumi.Input[str]] = None,
            create_time: Optional[pulumi.Input[str]] = None,
            discount_level: Optional[pulumi.Input[str]] = None,
            hpn_zone: Optional[pulumi.Input[str]] = None,
            payment_ratio: Optional[pulumi.Input[str]] = None,
            period: Optional[pulumi.Input[int]] = None,
            product_form: Optional[pulumi.Input[str]] = None,
            renew_period: Optional[pulumi.Input[int]] = None,
            renewal_status: Optional[pulumi.Input[str]] = None,
            resource_group_id: Optional[pulumi.Input[str]] = None,
            server_arch: Optional[pulumi.Input[str]] = None,
            stage_num: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            zone: Optional[pulumi.Input[str]] = None) -> 'Node':
        """
        Get an existing Node resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] billing_cycle: Billing cycle
        :param pulumi.Input[str] classify: Classification
        :param pulumi.Input[str] computing_server: Node Model
        :param pulumi.Input[str] create_time: The creation time of the resource
        :param pulumi.Input[str] discount_level: Offer Information
        :param pulumi.Input[str] hpn_zone: Cluster Number
        :param pulumi.Input[str] payment_ratio: Down payment ratio
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        :param pulumi.Input[str] product_form: Form
        :param pulumi.Input[int] renew_period: Automatic renewal period, in months.
               
               > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        :param pulumi.Input[str] renewal_status: Automatic renewal status, value:
               - AutoRenewal: automatic renewal.
               - ManualRenewal: manual renewal.
               
               The default ManualRenewal.
        :param pulumi.Input[str] resource_group_id: The ID of the resource group
        :param pulumi.Input[str] server_arch: Architecture
        :param pulumi.Input[str] stage_num: Number of stages
        :param pulumi.Input[str] status: The status of the resource
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: The tag of the resource
        :param pulumi.Input[str] zone: Availability Zone
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NodeState.__new__(_NodeState)

        __props__.__dict__["billing_cycle"] = billing_cycle
        __props__.__dict__["classify"] = classify
        __props__.__dict__["computing_server"] = computing_server
        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["discount_level"] = discount_level
        __props__.__dict__["hpn_zone"] = hpn_zone
        __props__.__dict__["payment_ratio"] = payment_ratio
        __props__.__dict__["period"] = period
        __props__.__dict__["product_form"] = product_form
        __props__.__dict__["renew_period"] = renew_period
        __props__.__dict__["renewal_status"] = renewal_status
        __props__.__dict__["resource_group_id"] = resource_group_id
        __props__.__dict__["server_arch"] = server_arch
        __props__.__dict__["stage_num"] = stage_num
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["zone"] = zone
        return Node(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="billingCycle")
    def billing_cycle(self) -> pulumi.Output[Optional[str]]:
        """
        Billing cycle
        """
        return pulumi.get(self, "billing_cycle")

    @property
    @pulumi.getter
    def classify(self) -> pulumi.Output[Optional[str]]:
        """
        Classification
        """
        return pulumi.get(self, "classify")

    @property
    @pulumi.getter(name="computingServer")
    def computing_server(self) -> pulumi.Output[Optional[str]]:
        """
        Node Model
        """
        return pulumi.get(self, "computing_server")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        The creation time of the resource
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="discountLevel")
    def discount_level(self) -> pulumi.Output[Optional[str]]:
        """
        Offer Information
        """
        return pulumi.get(self, "discount_level")

    @property
    @pulumi.getter(name="hpnZone")
    def hpn_zone(self) -> pulumi.Output[Optional[str]]:
        """
        Cluster Number
        """
        return pulumi.get(self, "hpn_zone")

    @property
    @pulumi.getter(name="paymentRatio")
    def payment_ratio(self) -> pulumi.Output[Optional[str]]:
        """
        Down payment ratio
        """
        return pulumi.get(self, "payment_ratio")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[Optional[int]]:
        """
        Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        """
        return pulumi.get(self, "period")

    @property
    @pulumi.getter(name="productForm")
    def product_form(self) -> pulumi.Output[Optional[str]]:
        """
        Form
        """
        return pulumi.get(self, "product_form")

    @property
    @pulumi.getter(name="renewPeriod")
    def renew_period(self) -> pulumi.Output[Optional[int]]:
        """
        Automatic renewal period, in months.

        > **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        """
        return pulumi.get(self, "renew_period")

    @property
    @pulumi.getter(name="renewalStatus")
    def renewal_status(self) -> pulumi.Output[Optional[str]]:
        """
        Automatic renewal status, value:
        - AutoRenewal: automatic renewal.
        - ManualRenewal: manual renewal.

        The default ManualRenewal.
        """
        return pulumi.get(self, "renewal_status")

    @property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> pulumi.Output[str]:
        """
        The ID of the resource group
        """
        return pulumi.get(self, "resource_group_id")

    @property
    @pulumi.getter(name="serverArch")
    def server_arch(self) -> pulumi.Output[Optional[str]]:
        """
        Architecture
        """
        return pulumi.get(self, "server_arch")

    @property
    @pulumi.getter(name="stageNum")
    def stage_num(self) -> pulumi.Output[Optional[str]]:
        """
        Number of stages
        """
        return pulumi.get(self, "stage_num")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the resource
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        The tag of the resource
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def zone(self) -> pulumi.Output[Optional[str]]:
        """
        Availability Zone
        """
        return pulumi.get(self, "zone")

