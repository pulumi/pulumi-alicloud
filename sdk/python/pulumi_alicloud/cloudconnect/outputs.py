# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetNetworksNetworkResult',
]

@pulumi.output_type
class GetNetworksNetworkResult(dict):
    def __init__(__self__, *,
                 cidr_block: str,
                 description: str,
                 id: str,
                 is_default: bool,
                 name: str):
        """
        :param str cidr_block: CidrBlock of the CCN instance.
        :param str id: ID of the CCN instance.
        :param bool is_default: IsDefault of the CCN instance.
        :param str name: Name of the CCN instance.
        """
        GetNetworksNetworkResult._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            cidr_block=cidr_block,
            description=description,
            id=id,
            is_default=is_default,
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             cidr_block: Optional[str] = None,
             description: Optional[str] = None,
             id: Optional[str] = None,
             is_default: Optional[bool] = None,
             name: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if cidr_block is None and 'cidrBlock' in kwargs:
            cidr_block = kwargs['cidrBlock']
        if cidr_block is None:
            raise TypeError("Missing 'cidr_block' argument")
        if description is None:
            raise TypeError("Missing 'description' argument")
        if id is None:
            raise TypeError("Missing 'id' argument")
        if is_default is None and 'isDefault' in kwargs:
            is_default = kwargs['isDefault']
        if is_default is None:
            raise TypeError("Missing 'is_default' argument")
        if name is None:
            raise TypeError("Missing 'name' argument")

        _setter("cidr_block", cidr_block)
        _setter("description", description)
        _setter("id", id)
        _setter("is_default", is_default)
        _setter("name", name)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> str:
        """
        CidrBlock of the CCN instance.
        """
        return pulumi.get(self, "cidr_block")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the CCN instance.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> bool:
        """
        IsDefault of the CCN instance.
        """
        return pulumi.get(self, "is_default")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the CCN instance.
        """
        return pulumi.get(self, "name")


