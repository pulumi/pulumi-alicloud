# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'AppTemplateConfigList',
    'GetAppTemplatesTemplateResult',
    'GetAppTemplatesTemplateConfigListResult',
]

@pulumi.output_type
class AppTemplateConfigList(dict):
    def __init__(__self__, *,
                 key: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str key: Configuration item key. Valid values: ["config.appCallbackAuthKey","config.appCallbackUrl","config.callbackClass.live","config.callbackClass.user","config.livePullDomain","config.livePushDomain","config.multipleClientsLogin","config.regionId","config.streamChangeCallbackUrl"].
        :param _builtins.str value: Configuration item content.
               
               > **NOTE:**  By default, the attribute `config_list` will return all of nine keys with empty value. If you want to set one or more of the key's value, you had better also set other keys, otherwise, there will be a diff.
        """
        if key is not None:
            pulumi.set(__self__, "key", key)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> Optional[_builtins.str]:
        """
        Configuration item key. Valid values: ["config.appCallbackAuthKey","config.appCallbackUrl","config.callbackClass.live","config.callbackClass.user","config.livePullDomain","config.livePushDomain","config.multipleClientsLogin","config.regionId","config.streamChangeCallbackUrl"].
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        Configuration item content.

        > **NOTE:**  By default, the attribute `config_list` will return all of nine keys with empty value. If you want to set one or more of the key's value, you had better also set other keys, otherwise, there will be a diff.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAppTemplatesTemplateResult(dict):
    def __init__(__self__, *,
                 app_template_creator: _builtins.str,
                 app_template_id: _builtins.str,
                 app_template_name: _builtins.str,
                 component_lists: Sequence[_builtins.str],
                 config_lists: Sequence['outputs.GetAppTemplatesTemplateConfigListResult'],
                 create_time: _builtins.str,
                 id: _builtins.str,
                 integration_mode: _builtins.str,
                 scene: _builtins.str,
                 sdk_info: _builtins.str,
                 standard_room_info: _builtins.str,
                 status: _builtins.str):
        """
        :param _builtins.str app_template_creator: Apply template creator.
        :param _builtins.str app_template_id: The first ID of the resource.
        :param _builtins.str app_template_name: The name of the resource.
        :param Sequence[_builtins.str] component_lists: List of components.
        :param Sequence['GetAppTemplatesTemplateConfigListArgs'] config_lists: List of config.
        :param _builtins.str create_time: Creation time.
        :param _builtins.str id: The ID of the App Template.
        :param _builtins.str integration_mode: Integration mode (Integrated SDK:paasSDK, Model Room: standardRoom).
        :param _builtins.str scene: Application Template scenario, e-commerce business, classroom classroom.
        :param _builtins.str sdk_info: SDK information.
        :param _builtins.str standard_room_info: Model room information.
        :param _builtins.str status: Application template usage status.
        """
        pulumi.set(__self__, "app_template_creator", app_template_creator)
        pulumi.set(__self__, "app_template_id", app_template_id)
        pulumi.set(__self__, "app_template_name", app_template_name)
        pulumi.set(__self__, "component_lists", component_lists)
        pulumi.set(__self__, "config_lists", config_lists)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "integration_mode", integration_mode)
        pulumi.set(__self__, "scene", scene)
        pulumi.set(__self__, "sdk_info", sdk_info)
        pulumi.set(__self__, "standard_room_info", standard_room_info)
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="appTemplateCreator")
    def app_template_creator(self) -> _builtins.str:
        """
        Apply template creator.
        """
        return pulumi.get(self, "app_template_creator")

    @_builtins.property
    @pulumi.getter(name="appTemplateId")
    def app_template_id(self) -> _builtins.str:
        """
        The first ID of the resource.
        """
        return pulumi.get(self, "app_template_id")

    @_builtins.property
    @pulumi.getter(name="appTemplateName")
    def app_template_name(self) -> _builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "app_template_name")

    @_builtins.property
    @pulumi.getter(name="componentLists")
    def component_lists(self) -> Sequence[_builtins.str]:
        """
        List of components.
        """
        return pulumi.get(self, "component_lists")

    @_builtins.property
    @pulumi.getter(name="configLists")
    def config_lists(self) -> Sequence['outputs.GetAppTemplatesTemplateConfigListResult']:
        """
        List of config.
        """
        return pulumi.get(self, "config_lists")

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> _builtins.str:
        """
        Creation time.
        """
        return pulumi.get(self, "create_time")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the App Template.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="integrationMode")
    def integration_mode(self) -> _builtins.str:
        """
        Integration mode (Integrated SDK:paasSDK, Model Room: standardRoom).
        """
        return pulumi.get(self, "integration_mode")

    @_builtins.property
    @pulumi.getter
    def scene(self) -> _builtins.str:
        """
        Application Template scenario, e-commerce business, classroom classroom.
        """
        return pulumi.get(self, "scene")

    @_builtins.property
    @pulumi.getter(name="sdkInfo")
    def sdk_info(self) -> _builtins.str:
        """
        SDK information.
        """
        return pulumi.get(self, "sdk_info")

    @_builtins.property
    @pulumi.getter(name="standardRoomInfo")
    def standard_room_info(self) -> _builtins.str:
        """
        Model room information.
        """
        return pulumi.get(self, "standard_room_info")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        Application template usage status.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class GetAppTemplatesTemplateConfigListResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str key: Config key.
        :param _builtins.str value: Config Value.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Config key.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Config Value.
        """
        return pulumi.get(self, "value")


