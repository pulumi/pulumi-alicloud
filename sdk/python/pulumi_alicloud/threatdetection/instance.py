# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['InstanceArgs', 'Instance']

@pulumi.input_type
class InstanceArgs:
    def __init__(__self__, *,
                 payment_type: pulumi.Input[str],
                 version_code: pulumi.Input[str],
                 buy_number: Optional[pulumi.Input[str]] = None,
                 container_image_scan: Optional[pulumi.Input[str]] = None,
                 honeypot: Optional[pulumi.Input[str]] = None,
                 honeypot_switch: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_type: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_period_unit: Optional[pulumi.Input[str]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
                 sas_sc: Optional[pulumi.Input[bool]] = None,
                 sas_sdk: Optional[pulumi.Input[str]] = None,
                 sas_sdk_switch: Optional[pulumi.Input[str]] = None,
                 sas_sls_storage: Optional[pulumi.Input[str]] = None,
                 sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
                 sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
                 threat_analysis: Optional[pulumi.Input[str]] = None,
                 threat_analysis_switch: Optional[pulumi.Input[str]] = None,
                 v_core: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Instance resource.
        :param pulumi.Input[str] payment_type: The payment type of the resource.
        :param pulumi.Input[str] version_code: Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        :param pulumi.Input[str] buy_number: Number of servers.
        :param pulumi.Input[str] container_image_scan: Container Image security scan.
        :param pulumi.Input[str] honeypot: Cloud honeypot authorization number.
        :param pulumi.Input[str] honeypot_switch: Cloud honeypot. Valid values: `1`, `2`.
        :param pulumi.Input[str] instance_id: The first ID of the resource
        :param pulumi.Input[str] modify_type: Change configuration type, value
               - Upgrade: Upgrade.
               - Downgrade: Downgrade.
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        :param pulumi.Input[int] renew_period: Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        :param pulumi.Input[str] renewal_period_unit: The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        :param pulumi.Input[str] renewal_status: Automatic renewal status, Default ManualRenewal. value:
        :param pulumi.Input[str] sas_anti_ransomware: Anti-extortion.
        :param pulumi.Input[bool] sas_sc: Large security screen.
        :param pulumi.Input[str] sas_sdk: Number of malicious file detections.
        :param pulumi.Input[str] sas_sdk_switch: Malicious file detection SDK. Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_sls_storage: Log analysis.
        :param pulumi.Input[str] sas_webguard_boolean: Web page tamper-proof.  Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_webguard_order_num: Number of tamper-proof authorizations.
        :param pulumi.Input[str] threat_analysis: The amount of threat analysis log storage.
        :param pulumi.Input[str] threat_analysis_switch: Threat analysis.  Valid values: `0`, `1`.
        :param pulumi.Input[str] v_core: Number of cores.
        """
        InstanceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            payment_type=payment_type,
            version_code=version_code,
            buy_number=buy_number,
            container_image_scan=container_image_scan,
            honeypot=honeypot,
            honeypot_switch=honeypot_switch,
            instance_id=instance_id,
            modify_type=modify_type,
            period=period,
            renew_period=renew_period,
            renewal_period_unit=renewal_period_unit,
            renewal_status=renewal_status,
            sas_anti_ransomware=sas_anti_ransomware,
            sas_sc=sas_sc,
            sas_sdk=sas_sdk,
            sas_sdk_switch=sas_sdk_switch,
            sas_sls_storage=sas_sls_storage,
            sas_webguard_boolean=sas_webguard_boolean,
            sas_webguard_order_num=sas_webguard_order_num,
            threat_analysis=threat_analysis,
            threat_analysis_switch=threat_analysis_switch,
            v_core=v_core,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             payment_type: pulumi.Input[str],
             version_code: pulumi.Input[str],
             buy_number: Optional[pulumi.Input[str]] = None,
             container_image_scan: Optional[pulumi.Input[str]] = None,
             honeypot: Optional[pulumi.Input[str]] = None,
             honeypot_switch: Optional[pulumi.Input[str]] = None,
             instance_id: Optional[pulumi.Input[str]] = None,
             modify_type: Optional[pulumi.Input[str]] = None,
             period: Optional[pulumi.Input[int]] = None,
             renew_period: Optional[pulumi.Input[int]] = None,
             renewal_period_unit: Optional[pulumi.Input[str]] = None,
             renewal_status: Optional[pulumi.Input[str]] = None,
             sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
             sas_sc: Optional[pulumi.Input[bool]] = None,
             sas_sdk: Optional[pulumi.Input[str]] = None,
             sas_sdk_switch: Optional[pulumi.Input[str]] = None,
             sas_sls_storage: Optional[pulumi.Input[str]] = None,
             sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
             sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
             threat_analysis: Optional[pulumi.Input[str]] = None,
             threat_analysis_switch: Optional[pulumi.Input[str]] = None,
             v_core: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'paymentType' in kwargs:
            payment_type = kwargs['paymentType']
        if 'versionCode' in kwargs:
            version_code = kwargs['versionCode']
        if 'buyNumber' in kwargs:
            buy_number = kwargs['buyNumber']
        if 'containerImageScan' in kwargs:
            container_image_scan = kwargs['containerImageScan']
        if 'honeypotSwitch' in kwargs:
            honeypot_switch = kwargs['honeypotSwitch']
        if 'instanceId' in kwargs:
            instance_id = kwargs['instanceId']
        if 'modifyType' in kwargs:
            modify_type = kwargs['modifyType']
        if 'renewPeriod' in kwargs:
            renew_period = kwargs['renewPeriod']
        if 'renewalPeriodUnit' in kwargs:
            renewal_period_unit = kwargs['renewalPeriodUnit']
        if 'renewalStatus' in kwargs:
            renewal_status = kwargs['renewalStatus']
        if 'sasAntiRansomware' in kwargs:
            sas_anti_ransomware = kwargs['sasAntiRansomware']
        if 'sasSc' in kwargs:
            sas_sc = kwargs['sasSc']
        if 'sasSdk' in kwargs:
            sas_sdk = kwargs['sasSdk']
        if 'sasSdkSwitch' in kwargs:
            sas_sdk_switch = kwargs['sasSdkSwitch']
        if 'sasSlsStorage' in kwargs:
            sas_sls_storage = kwargs['sasSlsStorage']
        if 'sasWebguardBoolean' in kwargs:
            sas_webguard_boolean = kwargs['sasWebguardBoolean']
        if 'sasWebguardOrderNum' in kwargs:
            sas_webguard_order_num = kwargs['sasWebguardOrderNum']
        if 'threatAnalysis' in kwargs:
            threat_analysis = kwargs['threatAnalysis']
        if 'threatAnalysisSwitch' in kwargs:
            threat_analysis_switch = kwargs['threatAnalysisSwitch']
        if 'vCore' in kwargs:
            v_core = kwargs['vCore']

        _setter("payment_type", payment_type)
        _setter("version_code", version_code)
        if buy_number is not None:
            _setter("buy_number", buy_number)
        if container_image_scan is not None:
            _setter("container_image_scan", container_image_scan)
        if honeypot is not None:
            _setter("honeypot", honeypot)
        if honeypot_switch is not None:
            _setter("honeypot_switch", honeypot_switch)
        if instance_id is not None:
            _setter("instance_id", instance_id)
        if modify_type is not None:
            _setter("modify_type", modify_type)
        if period is not None:
            _setter("period", period)
        if renew_period is not None:
            _setter("renew_period", renew_period)
        if renewal_period_unit is not None:
            _setter("renewal_period_unit", renewal_period_unit)
        if renewal_status is not None:
            _setter("renewal_status", renewal_status)
        if sas_anti_ransomware is not None:
            _setter("sas_anti_ransomware", sas_anti_ransomware)
        if sas_sc is not None:
            _setter("sas_sc", sas_sc)
        if sas_sdk is not None:
            _setter("sas_sdk", sas_sdk)
        if sas_sdk_switch is not None:
            _setter("sas_sdk_switch", sas_sdk_switch)
        if sas_sls_storage is not None:
            _setter("sas_sls_storage", sas_sls_storage)
        if sas_webguard_boolean is not None:
            _setter("sas_webguard_boolean", sas_webguard_boolean)
        if sas_webguard_order_num is not None:
            _setter("sas_webguard_order_num", sas_webguard_order_num)
        if threat_analysis is not None:
            _setter("threat_analysis", threat_analysis)
        if threat_analysis_switch is not None:
            _setter("threat_analysis_switch", threat_analysis_switch)
        if v_core is not None:
            _setter("v_core", v_core)

    @property
    @pulumi.getter(name="paymentType")
    def payment_type(self) -> pulumi.Input[str]:
        """
        The payment type of the resource.
        """
        return pulumi.get(self, "payment_type")

    @payment_type.setter
    def payment_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "payment_type", value)

    @property
    @pulumi.getter(name="versionCode")
    def version_code(self) -> pulumi.Input[str]:
        """
        Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        """
        return pulumi.get(self, "version_code")

    @version_code.setter
    def version_code(self, value: pulumi.Input[str]):
        pulumi.set(self, "version_code", value)

    @property
    @pulumi.getter(name="buyNumber")
    def buy_number(self) -> Optional[pulumi.Input[str]]:
        """
        Number of servers.
        """
        return pulumi.get(self, "buy_number")

    @buy_number.setter
    def buy_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "buy_number", value)

    @property
    @pulumi.getter(name="containerImageScan")
    def container_image_scan(self) -> Optional[pulumi.Input[str]]:
        """
        Container Image security scan.
        """
        return pulumi.get(self, "container_image_scan")

    @container_image_scan.setter
    def container_image_scan(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "container_image_scan", value)

    @property
    @pulumi.getter
    def honeypot(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud honeypot authorization number.
        """
        return pulumi.get(self, "honeypot")

    @honeypot.setter
    def honeypot(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "honeypot", value)

    @property
    @pulumi.getter(name="honeypotSwitch")
    def honeypot_switch(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud honeypot. Valid values: `1`, `2`.
        """
        return pulumi.get(self, "honeypot_switch")

    @honeypot_switch.setter
    def honeypot_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "honeypot_switch", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        The first ID of the resource
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="modifyType")
    def modify_type(self) -> Optional[pulumi.Input[str]]:
        """
        Change configuration type, value
        - Upgrade: Upgrade.
        - Downgrade: Downgrade.
        """
        return pulumi.get(self, "modify_type")

    @modify_type.setter
    def modify_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modify_type", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="renewPeriod")
    def renew_period(self) -> Optional[pulumi.Input[int]]:
        """
        Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        """
        return pulumi.get(self, "renew_period")

    @renew_period.setter
    def renew_period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "renew_period", value)

    @property
    @pulumi.getter(name="renewalPeriodUnit")
    def renewal_period_unit(self) -> Optional[pulumi.Input[str]]:
        """
        The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        """
        return pulumi.get(self, "renewal_period_unit")

    @renewal_period_unit.setter
    def renewal_period_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renewal_period_unit", value)

    @property
    @pulumi.getter(name="renewalStatus")
    def renewal_status(self) -> Optional[pulumi.Input[str]]:
        """
        Automatic renewal status, Default ManualRenewal. value:
        """
        return pulumi.get(self, "renewal_status")

    @renewal_status.setter
    def renewal_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renewal_status", value)

    @property
    @pulumi.getter(name="sasAntiRansomware")
    def sas_anti_ransomware(self) -> Optional[pulumi.Input[str]]:
        """
        Anti-extortion.
        """
        return pulumi.get(self, "sas_anti_ransomware")

    @sas_anti_ransomware.setter
    def sas_anti_ransomware(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_anti_ransomware", value)

    @property
    @pulumi.getter(name="sasSc")
    def sas_sc(self) -> Optional[pulumi.Input[bool]]:
        """
        Large security screen.
        """
        return pulumi.get(self, "sas_sc")

    @sas_sc.setter
    def sas_sc(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sas_sc", value)

    @property
    @pulumi.getter(name="sasSdk")
    def sas_sdk(self) -> Optional[pulumi.Input[str]]:
        """
        Number of malicious file detections.
        """
        return pulumi.get(self, "sas_sdk")

    @sas_sdk.setter
    def sas_sdk(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_sdk", value)

    @property
    @pulumi.getter(name="sasSdkSwitch")
    def sas_sdk_switch(self) -> Optional[pulumi.Input[str]]:
        """
        Malicious file detection SDK. Valid values: `0`, `1`.
        """
        return pulumi.get(self, "sas_sdk_switch")

    @sas_sdk_switch.setter
    def sas_sdk_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_sdk_switch", value)

    @property
    @pulumi.getter(name="sasSlsStorage")
    def sas_sls_storage(self) -> Optional[pulumi.Input[str]]:
        """
        Log analysis.
        """
        return pulumi.get(self, "sas_sls_storage")

    @sas_sls_storage.setter
    def sas_sls_storage(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_sls_storage", value)

    @property
    @pulumi.getter(name="sasWebguardBoolean")
    def sas_webguard_boolean(self) -> Optional[pulumi.Input[str]]:
        """
        Web page tamper-proof.  Valid values: `0`, `1`.
        """
        return pulumi.get(self, "sas_webguard_boolean")

    @sas_webguard_boolean.setter
    def sas_webguard_boolean(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_webguard_boolean", value)

    @property
    @pulumi.getter(name="sasWebguardOrderNum")
    def sas_webguard_order_num(self) -> Optional[pulumi.Input[str]]:
        """
        Number of tamper-proof authorizations.
        """
        return pulumi.get(self, "sas_webguard_order_num")

    @sas_webguard_order_num.setter
    def sas_webguard_order_num(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_webguard_order_num", value)

    @property
    @pulumi.getter(name="threatAnalysis")
    def threat_analysis(self) -> Optional[pulumi.Input[str]]:
        """
        The amount of threat analysis log storage.
        """
        return pulumi.get(self, "threat_analysis")

    @threat_analysis.setter
    def threat_analysis(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "threat_analysis", value)

    @property
    @pulumi.getter(name="threatAnalysisSwitch")
    def threat_analysis_switch(self) -> Optional[pulumi.Input[str]]:
        """
        Threat analysis.  Valid values: `0`, `1`.
        """
        return pulumi.get(self, "threat_analysis_switch")

    @threat_analysis_switch.setter
    def threat_analysis_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "threat_analysis_switch", value)

    @property
    @pulumi.getter(name="vCore")
    def v_core(self) -> Optional[pulumi.Input[str]]:
        """
        Number of cores.
        """
        return pulumi.get(self, "v_core")

    @v_core.setter
    def v_core(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "v_core", value)


@pulumi.input_type
class _InstanceState:
    def __init__(__self__, *,
                 buy_number: Optional[pulumi.Input[str]] = None,
                 container_image_scan: Optional[pulumi.Input[str]] = None,
                 create_time: Optional[pulumi.Input[str]] = None,
                 honeypot: Optional[pulumi.Input[str]] = None,
                 honeypot_switch: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_type: Optional[pulumi.Input[str]] = None,
                 payment_type: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_period_unit: Optional[pulumi.Input[str]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
                 sas_sc: Optional[pulumi.Input[bool]] = None,
                 sas_sdk: Optional[pulumi.Input[str]] = None,
                 sas_sdk_switch: Optional[pulumi.Input[str]] = None,
                 sas_sls_storage: Optional[pulumi.Input[str]] = None,
                 sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
                 sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 threat_analysis: Optional[pulumi.Input[str]] = None,
                 threat_analysis_switch: Optional[pulumi.Input[str]] = None,
                 v_core: Optional[pulumi.Input[str]] = None,
                 version_code: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Instance resources.
        :param pulumi.Input[str] buy_number: Number of servers.
        :param pulumi.Input[str] container_image_scan: Container Image security scan.
        :param pulumi.Input[str] create_time: The creation time of the resource
        :param pulumi.Input[str] honeypot: Cloud honeypot authorization number.
        :param pulumi.Input[str] honeypot_switch: Cloud honeypot. Valid values: `1`, `2`.
        :param pulumi.Input[str] instance_id: The first ID of the resource
        :param pulumi.Input[str] modify_type: Change configuration type, value
               - Upgrade: Upgrade.
               - Downgrade: Downgrade.
        :param pulumi.Input[str] payment_type: The payment type of the resource.
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        :param pulumi.Input[int] renew_period: Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        :param pulumi.Input[str] renewal_period_unit: The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        :param pulumi.Input[str] renewal_status: Automatic renewal status, Default ManualRenewal. value:
        :param pulumi.Input[str] sas_anti_ransomware: Anti-extortion.
        :param pulumi.Input[bool] sas_sc: Large security screen.
        :param pulumi.Input[str] sas_sdk: Number of malicious file detections.
        :param pulumi.Input[str] sas_sdk_switch: Malicious file detection SDK. Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_sls_storage: Log analysis.
        :param pulumi.Input[str] sas_webguard_boolean: Web page tamper-proof.  Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_webguard_order_num: Number of tamper-proof authorizations.
        :param pulumi.Input[str] status: The status of the resource
        :param pulumi.Input[str] threat_analysis: The amount of threat analysis log storage.
        :param pulumi.Input[str] threat_analysis_switch: Threat analysis.  Valid values: `0`, `1`.
        :param pulumi.Input[str] v_core: Number of cores.
        :param pulumi.Input[str] version_code: Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        """
        _InstanceState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            buy_number=buy_number,
            container_image_scan=container_image_scan,
            create_time=create_time,
            honeypot=honeypot,
            honeypot_switch=honeypot_switch,
            instance_id=instance_id,
            modify_type=modify_type,
            payment_type=payment_type,
            period=period,
            renew_period=renew_period,
            renewal_period_unit=renewal_period_unit,
            renewal_status=renewal_status,
            sas_anti_ransomware=sas_anti_ransomware,
            sas_sc=sas_sc,
            sas_sdk=sas_sdk,
            sas_sdk_switch=sas_sdk_switch,
            sas_sls_storage=sas_sls_storage,
            sas_webguard_boolean=sas_webguard_boolean,
            sas_webguard_order_num=sas_webguard_order_num,
            status=status,
            threat_analysis=threat_analysis,
            threat_analysis_switch=threat_analysis_switch,
            v_core=v_core,
            version_code=version_code,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             buy_number: Optional[pulumi.Input[str]] = None,
             container_image_scan: Optional[pulumi.Input[str]] = None,
             create_time: Optional[pulumi.Input[str]] = None,
             honeypot: Optional[pulumi.Input[str]] = None,
             honeypot_switch: Optional[pulumi.Input[str]] = None,
             instance_id: Optional[pulumi.Input[str]] = None,
             modify_type: Optional[pulumi.Input[str]] = None,
             payment_type: Optional[pulumi.Input[str]] = None,
             period: Optional[pulumi.Input[int]] = None,
             renew_period: Optional[pulumi.Input[int]] = None,
             renewal_period_unit: Optional[pulumi.Input[str]] = None,
             renewal_status: Optional[pulumi.Input[str]] = None,
             sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
             sas_sc: Optional[pulumi.Input[bool]] = None,
             sas_sdk: Optional[pulumi.Input[str]] = None,
             sas_sdk_switch: Optional[pulumi.Input[str]] = None,
             sas_sls_storage: Optional[pulumi.Input[str]] = None,
             sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
             sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
             status: Optional[pulumi.Input[str]] = None,
             threat_analysis: Optional[pulumi.Input[str]] = None,
             threat_analysis_switch: Optional[pulumi.Input[str]] = None,
             v_core: Optional[pulumi.Input[str]] = None,
             version_code: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'buyNumber' in kwargs:
            buy_number = kwargs['buyNumber']
        if 'containerImageScan' in kwargs:
            container_image_scan = kwargs['containerImageScan']
        if 'createTime' in kwargs:
            create_time = kwargs['createTime']
        if 'honeypotSwitch' in kwargs:
            honeypot_switch = kwargs['honeypotSwitch']
        if 'instanceId' in kwargs:
            instance_id = kwargs['instanceId']
        if 'modifyType' in kwargs:
            modify_type = kwargs['modifyType']
        if 'paymentType' in kwargs:
            payment_type = kwargs['paymentType']
        if 'renewPeriod' in kwargs:
            renew_period = kwargs['renewPeriod']
        if 'renewalPeriodUnit' in kwargs:
            renewal_period_unit = kwargs['renewalPeriodUnit']
        if 'renewalStatus' in kwargs:
            renewal_status = kwargs['renewalStatus']
        if 'sasAntiRansomware' in kwargs:
            sas_anti_ransomware = kwargs['sasAntiRansomware']
        if 'sasSc' in kwargs:
            sas_sc = kwargs['sasSc']
        if 'sasSdk' in kwargs:
            sas_sdk = kwargs['sasSdk']
        if 'sasSdkSwitch' in kwargs:
            sas_sdk_switch = kwargs['sasSdkSwitch']
        if 'sasSlsStorage' in kwargs:
            sas_sls_storage = kwargs['sasSlsStorage']
        if 'sasWebguardBoolean' in kwargs:
            sas_webguard_boolean = kwargs['sasWebguardBoolean']
        if 'sasWebguardOrderNum' in kwargs:
            sas_webguard_order_num = kwargs['sasWebguardOrderNum']
        if 'threatAnalysis' in kwargs:
            threat_analysis = kwargs['threatAnalysis']
        if 'threatAnalysisSwitch' in kwargs:
            threat_analysis_switch = kwargs['threatAnalysisSwitch']
        if 'vCore' in kwargs:
            v_core = kwargs['vCore']
        if 'versionCode' in kwargs:
            version_code = kwargs['versionCode']

        if buy_number is not None:
            _setter("buy_number", buy_number)
        if container_image_scan is not None:
            _setter("container_image_scan", container_image_scan)
        if create_time is not None:
            _setter("create_time", create_time)
        if honeypot is not None:
            _setter("honeypot", honeypot)
        if honeypot_switch is not None:
            _setter("honeypot_switch", honeypot_switch)
        if instance_id is not None:
            _setter("instance_id", instance_id)
        if modify_type is not None:
            _setter("modify_type", modify_type)
        if payment_type is not None:
            _setter("payment_type", payment_type)
        if period is not None:
            _setter("period", period)
        if renew_period is not None:
            _setter("renew_period", renew_period)
        if renewal_period_unit is not None:
            _setter("renewal_period_unit", renewal_period_unit)
        if renewal_status is not None:
            _setter("renewal_status", renewal_status)
        if sas_anti_ransomware is not None:
            _setter("sas_anti_ransomware", sas_anti_ransomware)
        if sas_sc is not None:
            _setter("sas_sc", sas_sc)
        if sas_sdk is not None:
            _setter("sas_sdk", sas_sdk)
        if sas_sdk_switch is not None:
            _setter("sas_sdk_switch", sas_sdk_switch)
        if sas_sls_storage is not None:
            _setter("sas_sls_storage", sas_sls_storage)
        if sas_webguard_boolean is not None:
            _setter("sas_webguard_boolean", sas_webguard_boolean)
        if sas_webguard_order_num is not None:
            _setter("sas_webguard_order_num", sas_webguard_order_num)
        if status is not None:
            _setter("status", status)
        if threat_analysis is not None:
            _setter("threat_analysis", threat_analysis)
        if threat_analysis_switch is not None:
            _setter("threat_analysis_switch", threat_analysis_switch)
        if v_core is not None:
            _setter("v_core", v_core)
        if version_code is not None:
            _setter("version_code", version_code)

    @property
    @pulumi.getter(name="buyNumber")
    def buy_number(self) -> Optional[pulumi.Input[str]]:
        """
        Number of servers.
        """
        return pulumi.get(self, "buy_number")

    @buy_number.setter
    def buy_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "buy_number", value)

    @property
    @pulumi.getter(name="containerImageScan")
    def container_image_scan(self) -> Optional[pulumi.Input[str]]:
        """
        Container Image security scan.
        """
        return pulumi.get(self, "container_image_scan")

    @container_image_scan.setter
    def container_image_scan(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "container_image_scan", value)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[str]]:
        """
        The creation time of the resource
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_time", value)

    @property
    @pulumi.getter
    def honeypot(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud honeypot authorization number.
        """
        return pulumi.get(self, "honeypot")

    @honeypot.setter
    def honeypot(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "honeypot", value)

    @property
    @pulumi.getter(name="honeypotSwitch")
    def honeypot_switch(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud honeypot. Valid values: `1`, `2`.
        """
        return pulumi.get(self, "honeypot_switch")

    @honeypot_switch.setter
    def honeypot_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "honeypot_switch", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        The first ID of the resource
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="modifyType")
    def modify_type(self) -> Optional[pulumi.Input[str]]:
        """
        Change configuration type, value
        - Upgrade: Upgrade.
        - Downgrade: Downgrade.
        """
        return pulumi.get(self, "modify_type")

    @modify_type.setter
    def modify_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modify_type", value)

    @property
    @pulumi.getter(name="paymentType")
    def payment_type(self) -> Optional[pulumi.Input[str]]:
        """
        The payment type of the resource.
        """
        return pulumi.get(self, "payment_type")

    @payment_type.setter
    def payment_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "payment_type", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="renewPeriod")
    def renew_period(self) -> Optional[pulumi.Input[int]]:
        """
        Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        """
        return pulumi.get(self, "renew_period")

    @renew_period.setter
    def renew_period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "renew_period", value)

    @property
    @pulumi.getter(name="renewalPeriodUnit")
    def renewal_period_unit(self) -> Optional[pulumi.Input[str]]:
        """
        The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        """
        return pulumi.get(self, "renewal_period_unit")

    @renewal_period_unit.setter
    def renewal_period_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renewal_period_unit", value)

    @property
    @pulumi.getter(name="renewalStatus")
    def renewal_status(self) -> Optional[pulumi.Input[str]]:
        """
        Automatic renewal status, Default ManualRenewal. value:
        """
        return pulumi.get(self, "renewal_status")

    @renewal_status.setter
    def renewal_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renewal_status", value)

    @property
    @pulumi.getter(name="sasAntiRansomware")
    def sas_anti_ransomware(self) -> Optional[pulumi.Input[str]]:
        """
        Anti-extortion.
        """
        return pulumi.get(self, "sas_anti_ransomware")

    @sas_anti_ransomware.setter
    def sas_anti_ransomware(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_anti_ransomware", value)

    @property
    @pulumi.getter(name="sasSc")
    def sas_sc(self) -> Optional[pulumi.Input[bool]]:
        """
        Large security screen.
        """
        return pulumi.get(self, "sas_sc")

    @sas_sc.setter
    def sas_sc(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sas_sc", value)

    @property
    @pulumi.getter(name="sasSdk")
    def sas_sdk(self) -> Optional[pulumi.Input[str]]:
        """
        Number of malicious file detections.
        """
        return pulumi.get(self, "sas_sdk")

    @sas_sdk.setter
    def sas_sdk(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_sdk", value)

    @property
    @pulumi.getter(name="sasSdkSwitch")
    def sas_sdk_switch(self) -> Optional[pulumi.Input[str]]:
        """
        Malicious file detection SDK. Valid values: `0`, `1`.
        """
        return pulumi.get(self, "sas_sdk_switch")

    @sas_sdk_switch.setter
    def sas_sdk_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_sdk_switch", value)

    @property
    @pulumi.getter(name="sasSlsStorage")
    def sas_sls_storage(self) -> Optional[pulumi.Input[str]]:
        """
        Log analysis.
        """
        return pulumi.get(self, "sas_sls_storage")

    @sas_sls_storage.setter
    def sas_sls_storage(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_sls_storage", value)

    @property
    @pulumi.getter(name="sasWebguardBoolean")
    def sas_webguard_boolean(self) -> Optional[pulumi.Input[str]]:
        """
        Web page tamper-proof.  Valid values: `0`, `1`.
        """
        return pulumi.get(self, "sas_webguard_boolean")

    @sas_webguard_boolean.setter
    def sas_webguard_boolean(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_webguard_boolean", value)

    @property
    @pulumi.getter(name="sasWebguardOrderNum")
    def sas_webguard_order_num(self) -> Optional[pulumi.Input[str]]:
        """
        Number of tamper-proof authorizations.
        """
        return pulumi.get(self, "sas_webguard_order_num")

    @sas_webguard_order_num.setter
    def sas_webguard_order_num(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sas_webguard_order_num", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the resource
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="threatAnalysis")
    def threat_analysis(self) -> Optional[pulumi.Input[str]]:
        """
        The amount of threat analysis log storage.
        """
        return pulumi.get(self, "threat_analysis")

    @threat_analysis.setter
    def threat_analysis(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "threat_analysis", value)

    @property
    @pulumi.getter(name="threatAnalysisSwitch")
    def threat_analysis_switch(self) -> Optional[pulumi.Input[str]]:
        """
        Threat analysis.  Valid values: `0`, `1`.
        """
        return pulumi.get(self, "threat_analysis_switch")

    @threat_analysis_switch.setter
    def threat_analysis_switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "threat_analysis_switch", value)

    @property
    @pulumi.getter(name="vCore")
    def v_core(self) -> Optional[pulumi.Input[str]]:
        """
        Number of cores.
        """
        return pulumi.get(self, "v_core")

    @v_core.setter
    def v_core(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "v_core", value)

    @property
    @pulumi.getter(name="versionCode")
    def version_code(self) -> Optional[pulumi.Input[str]]:
        """
        Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        """
        return pulumi.get(self, "version_code")

    @version_code.setter
    def version_code(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version_code", value)


class Instance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 buy_number: Optional[pulumi.Input[str]] = None,
                 container_image_scan: Optional[pulumi.Input[str]] = None,
                 honeypot: Optional[pulumi.Input[str]] = None,
                 honeypot_switch: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_type: Optional[pulumi.Input[str]] = None,
                 payment_type: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_period_unit: Optional[pulumi.Input[str]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
                 sas_sc: Optional[pulumi.Input[bool]] = None,
                 sas_sdk: Optional[pulumi.Input[str]] = None,
                 sas_sdk_switch: Optional[pulumi.Input[str]] = None,
                 sas_sls_storage: Optional[pulumi.Input[str]] = None,
                 sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
                 sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
                 threat_analysis: Optional[pulumi.Input[str]] = None,
                 threat_analysis_switch: Optional[pulumi.Input[str]] = None,
                 v_core: Optional[pulumi.Input[str]] = None,
                 version_code: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a Threat Detection Instance resource.

        For information about Threat Detection Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/en/security-center/latest/what-is-security-center).

        > **NOTE:** Available in v1.199.0+.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.threatdetection.Instance("default",
            buy_number="30",
            container_image_scan="100",
            honeypot="32",
            honeypot_switch="1",
            payment_type="Subscription",
            period=12,
            renewal_status="ManualRenewal",
            sas_anti_ransomware="100",
            sas_sc=True,
            sas_sdk="1000",
            sas_sdk_switch="1",
            sas_sls_storage="100",
            sas_webguard_order_num="100",
            v_core="100",
            version_code="level2")
        ```

        ## Import

        Threat Detection Instance do not support import.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] buy_number: Number of servers.
        :param pulumi.Input[str] container_image_scan: Container Image security scan.
        :param pulumi.Input[str] honeypot: Cloud honeypot authorization number.
        :param pulumi.Input[str] honeypot_switch: Cloud honeypot. Valid values: `1`, `2`.
        :param pulumi.Input[str] instance_id: The first ID of the resource
        :param pulumi.Input[str] modify_type: Change configuration type, value
               - Upgrade: Upgrade.
               - Downgrade: Downgrade.
        :param pulumi.Input[str] payment_type: The payment type of the resource.
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        :param pulumi.Input[int] renew_period: Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        :param pulumi.Input[str] renewal_period_unit: The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        :param pulumi.Input[str] renewal_status: Automatic renewal status, Default ManualRenewal. value:
        :param pulumi.Input[str] sas_anti_ransomware: Anti-extortion.
        :param pulumi.Input[bool] sas_sc: Large security screen.
        :param pulumi.Input[str] sas_sdk: Number of malicious file detections.
        :param pulumi.Input[str] sas_sdk_switch: Malicious file detection SDK. Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_sls_storage: Log analysis.
        :param pulumi.Input[str] sas_webguard_boolean: Web page tamper-proof.  Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_webguard_order_num: Number of tamper-proof authorizations.
        :param pulumi.Input[str] threat_analysis: The amount of threat analysis log storage.
        :param pulumi.Input[str] threat_analysis_switch: Threat analysis.  Valid values: `0`, `1`.
        :param pulumi.Input[str] v_core: Number of cores.
        :param pulumi.Input[str] version_code: Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a Threat Detection Instance resource.

        For information about Threat Detection Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/en/security-center/latest/what-is-security-center).

        > **NOTE:** Available in v1.199.0+.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.threatdetection.Instance("default",
            buy_number="30",
            container_image_scan="100",
            honeypot="32",
            honeypot_switch="1",
            payment_type="Subscription",
            period=12,
            renewal_status="ManualRenewal",
            sas_anti_ransomware="100",
            sas_sc=True,
            sas_sdk="1000",
            sas_sdk_switch="1",
            sas_sls_storage="100",
            sas_webguard_order_num="100",
            v_core="100",
            version_code="level2")
        ```

        ## Import

        Threat Detection Instance do not support import.

        :param str resource_name: The name of the resource.
        :param InstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            InstanceArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 buy_number: Optional[pulumi.Input[str]] = None,
                 container_image_scan: Optional[pulumi.Input[str]] = None,
                 honeypot: Optional[pulumi.Input[str]] = None,
                 honeypot_switch: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_type: Optional[pulumi.Input[str]] = None,
                 payment_type: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 renew_period: Optional[pulumi.Input[int]] = None,
                 renewal_period_unit: Optional[pulumi.Input[str]] = None,
                 renewal_status: Optional[pulumi.Input[str]] = None,
                 sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
                 sas_sc: Optional[pulumi.Input[bool]] = None,
                 sas_sdk: Optional[pulumi.Input[str]] = None,
                 sas_sdk_switch: Optional[pulumi.Input[str]] = None,
                 sas_sls_storage: Optional[pulumi.Input[str]] = None,
                 sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
                 sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
                 threat_analysis: Optional[pulumi.Input[str]] = None,
                 threat_analysis_switch: Optional[pulumi.Input[str]] = None,
                 v_core: Optional[pulumi.Input[str]] = None,
                 version_code: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceArgs.__new__(InstanceArgs)

            __props__.__dict__["buy_number"] = buy_number
            __props__.__dict__["container_image_scan"] = container_image_scan
            __props__.__dict__["honeypot"] = honeypot
            __props__.__dict__["honeypot_switch"] = honeypot_switch
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["modify_type"] = modify_type
            if payment_type is None and not opts.urn:
                raise TypeError("Missing required property 'payment_type'")
            __props__.__dict__["payment_type"] = payment_type
            __props__.__dict__["period"] = period
            __props__.__dict__["renew_period"] = renew_period
            __props__.__dict__["renewal_period_unit"] = renewal_period_unit
            __props__.__dict__["renewal_status"] = renewal_status
            __props__.__dict__["sas_anti_ransomware"] = sas_anti_ransomware
            __props__.__dict__["sas_sc"] = sas_sc
            __props__.__dict__["sas_sdk"] = sas_sdk
            __props__.__dict__["sas_sdk_switch"] = sas_sdk_switch
            __props__.__dict__["sas_sls_storage"] = sas_sls_storage
            __props__.__dict__["sas_webguard_boolean"] = sas_webguard_boolean
            __props__.__dict__["sas_webguard_order_num"] = sas_webguard_order_num
            __props__.__dict__["threat_analysis"] = threat_analysis
            __props__.__dict__["threat_analysis_switch"] = threat_analysis_switch
            __props__.__dict__["v_core"] = v_core
            if version_code is None and not opts.urn:
                raise TypeError("Missing required property 'version_code'")
            __props__.__dict__["version_code"] = version_code
            __props__.__dict__["create_time"] = None
            __props__.__dict__["status"] = None
        super(Instance, __self__).__init__(
            'alicloud:threatdetection/instance:Instance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            buy_number: Optional[pulumi.Input[str]] = None,
            container_image_scan: Optional[pulumi.Input[str]] = None,
            create_time: Optional[pulumi.Input[str]] = None,
            honeypot: Optional[pulumi.Input[str]] = None,
            honeypot_switch: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            modify_type: Optional[pulumi.Input[str]] = None,
            payment_type: Optional[pulumi.Input[str]] = None,
            period: Optional[pulumi.Input[int]] = None,
            renew_period: Optional[pulumi.Input[int]] = None,
            renewal_period_unit: Optional[pulumi.Input[str]] = None,
            renewal_status: Optional[pulumi.Input[str]] = None,
            sas_anti_ransomware: Optional[pulumi.Input[str]] = None,
            sas_sc: Optional[pulumi.Input[bool]] = None,
            sas_sdk: Optional[pulumi.Input[str]] = None,
            sas_sdk_switch: Optional[pulumi.Input[str]] = None,
            sas_sls_storage: Optional[pulumi.Input[str]] = None,
            sas_webguard_boolean: Optional[pulumi.Input[str]] = None,
            sas_webguard_order_num: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            threat_analysis: Optional[pulumi.Input[str]] = None,
            threat_analysis_switch: Optional[pulumi.Input[str]] = None,
            v_core: Optional[pulumi.Input[str]] = None,
            version_code: Optional[pulumi.Input[str]] = None) -> 'Instance':
        """
        Get an existing Instance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] buy_number: Number of servers.
        :param pulumi.Input[str] container_image_scan: Container Image security scan.
        :param pulumi.Input[str] create_time: The creation time of the resource
        :param pulumi.Input[str] honeypot: Cloud honeypot authorization number.
        :param pulumi.Input[str] honeypot_switch: Cloud honeypot. Valid values: `1`, `2`.
        :param pulumi.Input[str] instance_id: The first ID of the resource
        :param pulumi.Input[str] modify_type: Change configuration type, value
               - Upgrade: Upgrade.
               - Downgrade: Downgrade.
        :param pulumi.Input[str] payment_type: The payment type of the resource.
        :param pulumi.Input[int] period: Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        :param pulumi.Input[int] renew_period: Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        :param pulumi.Input[str] renewal_period_unit: The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        :param pulumi.Input[str] renewal_status: Automatic renewal status, Default ManualRenewal. value:
        :param pulumi.Input[str] sas_anti_ransomware: Anti-extortion.
        :param pulumi.Input[bool] sas_sc: Large security screen.
        :param pulumi.Input[str] sas_sdk: Number of malicious file detections.
        :param pulumi.Input[str] sas_sdk_switch: Malicious file detection SDK. Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_sls_storage: Log analysis.
        :param pulumi.Input[str] sas_webguard_boolean: Web page tamper-proof.  Valid values: `0`, `1`.
        :param pulumi.Input[str] sas_webguard_order_num: Number of tamper-proof authorizations.
        :param pulumi.Input[str] status: The status of the resource
        :param pulumi.Input[str] threat_analysis: The amount of threat analysis log storage.
        :param pulumi.Input[str] threat_analysis_switch: Threat analysis.  Valid values: `0`, `1`.
        :param pulumi.Input[str] v_core: Number of cores.
        :param pulumi.Input[str] version_code: Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceState.__new__(_InstanceState)

        __props__.__dict__["buy_number"] = buy_number
        __props__.__dict__["container_image_scan"] = container_image_scan
        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["honeypot"] = honeypot
        __props__.__dict__["honeypot_switch"] = honeypot_switch
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["modify_type"] = modify_type
        __props__.__dict__["payment_type"] = payment_type
        __props__.__dict__["period"] = period
        __props__.__dict__["renew_period"] = renew_period
        __props__.__dict__["renewal_period_unit"] = renewal_period_unit
        __props__.__dict__["renewal_status"] = renewal_status
        __props__.__dict__["sas_anti_ransomware"] = sas_anti_ransomware
        __props__.__dict__["sas_sc"] = sas_sc
        __props__.__dict__["sas_sdk"] = sas_sdk
        __props__.__dict__["sas_sdk_switch"] = sas_sdk_switch
        __props__.__dict__["sas_sls_storage"] = sas_sls_storage
        __props__.__dict__["sas_webguard_boolean"] = sas_webguard_boolean
        __props__.__dict__["sas_webguard_order_num"] = sas_webguard_order_num
        __props__.__dict__["status"] = status
        __props__.__dict__["threat_analysis"] = threat_analysis
        __props__.__dict__["threat_analysis_switch"] = threat_analysis_switch
        __props__.__dict__["v_core"] = v_core
        __props__.__dict__["version_code"] = version_code
        return Instance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="buyNumber")
    def buy_number(self) -> pulumi.Output[Optional[str]]:
        """
        Number of servers.
        """
        return pulumi.get(self, "buy_number")

    @property
    @pulumi.getter(name="containerImageScan")
    def container_image_scan(self) -> pulumi.Output[Optional[str]]:
        """
        Container Image security scan.
        """
        return pulumi.get(self, "container_image_scan")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        The creation time of the resource
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def honeypot(self) -> pulumi.Output[Optional[str]]:
        """
        Cloud honeypot authorization number.
        """
        return pulumi.get(self, "honeypot")

    @property
    @pulumi.getter(name="honeypotSwitch")
    def honeypot_switch(self) -> pulumi.Output[Optional[str]]:
        """
        Cloud honeypot. Valid values: `1`, `2`.
        """
        return pulumi.get(self, "honeypot_switch")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        The first ID of the resource
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="modifyType")
    def modify_type(self) -> pulumi.Output[Optional[str]]:
        """
        Change configuration type, value
        - Upgrade: Upgrade.
        - Downgrade: Downgrade.
        """
        return pulumi.get(self, "modify_type")

    @property
    @pulumi.getter(name="paymentType")
    def payment_type(self) -> pulumi.Output[str]:
        """
        The payment type of the resource.
        """
        return pulumi.get(self, "payment_type")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[Optional[int]]:
        """
        Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products. **NOTE:** must be set when creating a prepaid instance.
        """
        return pulumi.get(self, "period")

    @property
    @pulumi.getter(name="renewPeriod")
    def renew_period(self) -> pulumi.Output[Optional[int]]:
        """
        Automatic renewal cycle, in months. **NOTE:** The `renew_period` is required under the condition that `renewal_status` is `AutoRenewal`.
        """
        return pulumi.get(self, "renew_period")

    @property
    @pulumi.getter(name="renewalPeriodUnit")
    def renewal_period_unit(self) -> pulumi.Output[str]:
        """
        The unit of the auto-renewal period. **NOTE:** The `renewal_period_unit` is required under the condition that `renewal_status` is `AutoRenewal`. Valid values:
        """
        return pulumi.get(self, "renewal_period_unit")

    @property
    @pulumi.getter(name="renewalStatus")
    def renewal_status(self) -> pulumi.Output[str]:
        """
        Automatic renewal status, Default ManualRenewal. value:
        """
        return pulumi.get(self, "renewal_status")

    @property
    @pulumi.getter(name="sasAntiRansomware")
    def sas_anti_ransomware(self) -> pulumi.Output[Optional[str]]:
        """
        Anti-extortion.
        """
        return pulumi.get(self, "sas_anti_ransomware")

    @property
    @pulumi.getter(name="sasSc")
    def sas_sc(self) -> pulumi.Output[Optional[bool]]:
        """
        Large security screen.
        """
        return pulumi.get(self, "sas_sc")

    @property
    @pulumi.getter(name="sasSdk")
    def sas_sdk(self) -> pulumi.Output[Optional[str]]:
        """
        Number of malicious file detections.
        """
        return pulumi.get(self, "sas_sdk")

    @property
    @pulumi.getter(name="sasSdkSwitch")
    def sas_sdk_switch(self) -> pulumi.Output[Optional[str]]:
        """
        Malicious file detection SDK. Valid values: `0`, `1`.
        """
        return pulumi.get(self, "sas_sdk_switch")

    @property
    @pulumi.getter(name="sasSlsStorage")
    def sas_sls_storage(self) -> pulumi.Output[Optional[str]]:
        """
        Log analysis.
        """
        return pulumi.get(self, "sas_sls_storage")

    @property
    @pulumi.getter(name="sasWebguardBoolean")
    def sas_webguard_boolean(self) -> pulumi.Output[Optional[str]]:
        """
        Web page tamper-proof.  Valid values: `0`, `1`.
        """
        return pulumi.get(self, "sas_webguard_boolean")

    @property
    @pulumi.getter(name="sasWebguardOrderNum")
    def sas_webguard_order_num(self) -> pulumi.Output[Optional[str]]:
        """
        Number of tamper-proof authorizations.
        """
        return pulumi.get(self, "sas_webguard_order_num")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the resource
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="threatAnalysis")
    def threat_analysis(self) -> pulumi.Output[Optional[str]]:
        """
        The amount of threat analysis log storage.
        """
        return pulumi.get(self, "threat_analysis")

    @property
    @pulumi.getter(name="threatAnalysisSwitch")
    def threat_analysis_switch(self) -> pulumi.Output[Optional[str]]:
        """
        Threat analysis.  Valid values: `0`, `1`.
        """
        return pulumi.get(self, "threat_analysis_switch")

    @property
    @pulumi.getter(name="vCore")
    def v_core(self) -> pulumi.Output[Optional[str]]:
        """
        Number of cores.
        """
        return pulumi.get(self, "v_core")

    @property
    @pulumi.getter(name="versionCode")
    def version_code(self) -> pulumi.Output[str]:
        """
        Version selection. Valid values: `level10`, `level2`, `level3`, `level7`, `level8`.
        """
        return pulumi.get(self, "version_code")

