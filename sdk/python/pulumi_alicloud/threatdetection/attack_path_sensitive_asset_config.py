# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AttackPathSensitiveAssetConfigArgs', 'AttackPathSensitiveAssetConfig']

@pulumi.input_type
class AttackPathSensitiveAssetConfigArgs:
    def __init__(__self__, *,
                 attack_path_asset_lists: pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]]):
        """
        The set of arguments for constructing a AttackPathSensitiveAssetConfig resource.
        :param pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]] attack_path_asset_lists: The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        pulumi.set(__self__, "attack_path_asset_lists", attack_path_asset_lists)

    @_builtins.property
    @pulumi.getter(name="attackPathAssetLists")
    def attack_path_asset_lists(self) -> pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]]:
        """
        The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        return pulumi.get(self, "attack_path_asset_lists")

    @attack_path_asset_lists.setter
    def attack_path_asset_lists(self, value: pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]]):
        pulumi.set(self, "attack_path_asset_lists", value)


@pulumi.input_type
class _AttackPathSensitiveAssetConfigState:
    def __init__(__self__, *,
                 attack_path_asset_lists: Optional[pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]]] = None):
        """
        Input properties used for looking up and filtering AttackPathSensitiveAssetConfig resources.
        :param pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]] attack_path_asset_lists: The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        if attack_path_asset_lists is not None:
            pulumi.set(__self__, "attack_path_asset_lists", attack_path_asset_lists)

    @_builtins.property
    @pulumi.getter(name="attackPathAssetLists")
    def attack_path_asset_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]]]:
        """
        The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        return pulumi.get(self, "attack_path_asset_lists")

    @attack_path_asset_lists.setter
    def attack_path_asset_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AttackPathSensitiveAssetConfigAttackPathAssetListArgs']]]]):
        pulumi.set(self, "attack_path_asset_lists", value)


@pulumi.type_token("alicloud:threatdetection/attackPathSensitiveAssetConfig:AttackPathSensitiveAssetConfig")
class AttackPathSensitiveAssetConfig(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attack_path_asset_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AttackPathSensitiveAssetConfigAttackPathAssetListArgs', 'AttackPathSensitiveAssetConfigAttackPathAssetListArgsDict']]]]] = None,
                 __props__=None):
        """
        Provides a Threat Detection Attack Path Sensitive Asset Config resource.

        Attack Path Sensitive Asset Configuration.

        For information about Threat Detection Attack Path Sensitive Asset Config and how to use it, see [What is Attack Path Sensitive Asset Config](https://www.alibabacloud.com/help/en/security-center/developer-reference/api-sas-2018-12-03-createattackpathsensitiveassetconfig).

        > **NOTE:** Available since v1.257.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.slb.get_application_load_balancers()
        default_attack_path_sensitive_asset_config = alicloud.threatdetection.AttackPathSensitiveAssetConfig("default", attack_path_asset_lists=[{
            "instance_id": default.balancers[0].id,
            "vendor": 0,
            "asset_type": 1,
            "asset_sub_type": 0,
            "region_id": "cn-hangzhou",
        }])
        ```

        ## Import

        Threat Detection Attack Path Sensitive Asset Config can be imported using the id, e.g.

        ```sh
        $ pulumi import alicloud:threatdetection/attackPathSensitiveAssetConfig:AttackPathSensitiveAssetConfig example <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AttackPathSensitiveAssetConfigAttackPathAssetListArgs', 'AttackPathSensitiveAssetConfigAttackPathAssetListArgsDict']]]] attack_path_asset_lists: The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AttackPathSensitiveAssetConfigArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a Threat Detection Attack Path Sensitive Asset Config resource.

        Attack Path Sensitive Asset Configuration.

        For information about Threat Detection Attack Path Sensitive Asset Config and how to use it, see [What is Attack Path Sensitive Asset Config](https://www.alibabacloud.com/help/en/security-center/developer-reference/api-sas-2018-12-03-createattackpathsensitiveassetconfig).

        > **NOTE:** Available since v1.257.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.slb.get_application_load_balancers()
        default_attack_path_sensitive_asset_config = alicloud.threatdetection.AttackPathSensitiveAssetConfig("default", attack_path_asset_lists=[{
            "instance_id": default.balancers[0].id,
            "vendor": 0,
            "asset_type": 1,
            "asset_sub_type": 0,
            "region_id": "cn-hangzhou",
        }])
        ```

        ## Import

        Threat Detection Attack Path Sensitive Asset Config can be imported using the id, e.g.

        ```sh
        $ pulumi import alicloud:threatdetection/attackPathSensitiveAssetConfig:AttackPathSensitiveAssetConfig example <id>
        ```

        :param str resource_name: The name of the resource.
        :param AttackPathSensitiveAssetConfigArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AttackPathSensitiveAssetConfigArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attack_path_asset_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AttackPathSensitiveAssetConfigAttackPathAssetListArgs', 'AttackPathSensitiveAssetConfigAttackPathAssetListArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AttackPathSensitiveAssetConfigArgs.__new__(AttackPathSensitiveAssetConfigArgs)

            if attack_path_asset_lists is None and not opts.urn:
                raise TypeError("Missing required property 'attack_path_asset_lists'")
            __props__.__dict__["attack_path_asset_lists"] = attack_path_asset_lists
        super(AttackPathSensitiveAssetConfig, __self__).__init__(
            'alicloud:threatdetection/attackPathSensitiveAssetConfig:AttackPathSensitiveAssetConfig',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            attack_path_asset_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AttackPathSensitiveAssetConfigAttackPathAssetListArgs', 'AttackPathSensitiveAssetConfigAttackPathAssetListArgsDict']]]]] = None) -> 'AttackPathSensitiveAssetConfig':
        """
        Get an existing AttackPathSensitiveAssetConfig resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AttackPathSensitiveAssetConfigAttackPathAssetListArgs', 'AttackPathSensitiveAssetConfigAttackPathAssetListArgsDict']]]] attack_path_asset_lists: The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AttackPathSensitiveAssetConfigState.__new__(_AttackPathSensitiveAssetConfigState)

        __props__.__dict__["attack_path_asset_lists"] = attack_path_asset_lists
        return AttackPathSensitiveAssetConfig(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="attackPathAssetLists")
    def attack_path_asset_lists(self) -> pulumi.Output[Sequence['outputs.AttackPathSensitiveAssetConfigAttackPathAssetList']]:
        """
        The attack path sensitive asset configuration list. See `attack_path_asset_list` below.
        """
        return pulumi.get(self, "attack_path_asset_lists")

