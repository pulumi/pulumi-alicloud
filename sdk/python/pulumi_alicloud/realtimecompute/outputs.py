# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'VvpInstanceResourceSpec',
    'VvpInstanceStorage',
    'VvpInstanceStorageOss',
]

@pulumi.output_type
class VvpInstanceResourceSpec(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "memoryGb":
            suggest = "memory_gb"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VvpInstanceResourceSpec. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VvpInstanceResourceSpec.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VvpInstanceResourceSpec.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 cpu: Optional[_builtins.int] = None,
                 memory_gb: Optional[_builtins.int] = None):
        """
        :param _builtins.int cpu: CPU number.
        :param _builtins.int memory_gb: Memory size.
        """
        if cpu is not None:
            pulumi.set(__self__, "cpu", cpu)
        if memory_gb is not None:
            pulumi.set(__self__, "memory_gb", memory_gb)

    @_builtins.property
    @pulumi.getter
    def cpu(self) -> Optional[_builtins.int]:
        """
        CPU number.
        """
        return pulumi.get(self, "cpu")

    @_builtins.property
    @pulumi.getter(name="memoryGb")
    def memory_gb(self) -> Optional[_builtins.int]:
        """
        Memory size.
        """
        return pulumi.get(self, "memory_gb")


@pulumi.output_type
class VvpInstanceStorage(dict):
    def __init__(__self__, *,
                 oss: 'outputs.VvpInstanceStorageOss'):
        """
        :param 'VvpInstanceStorageOssArgs' oss: OSS stores information. See `oss` below.
        """
        pulumi.set(__self__, "oss", oss)

    @_builtins.property
    @pulumi.getter
    def oss(self) -> 'outputs.VvpInstanceStorageOss':
        """
        OSS stores information. See `oss` below.
        """
        return pulumi.get(self, "oss")


@pulumi.output_type
class VvpInstanceStorageOss(dict):
    def __init__(__self__, *,
                 bucket: _builtins.str):
        """
        :param _builtins.str bucket: OSS Bucket name.
        """
        pulumi.set(__self__, "bucket", bucket)

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> _builtins.str:
        """
        OSS Bucket name.
        """
        return pulumi.get(self, "bucket")


