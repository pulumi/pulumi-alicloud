# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'StudioApplicationInstance',
    'GetStudioApplicationsApplicationResult',
]

@pulumi.output_type
class StudioApplicationInstance(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "nodeName":
            suggest = "node_name"
        elif key == "nodeType":
            suggest = "node_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StudioApplicationInstance. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StudioApplicationInstance.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StudioApplicationInstance.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: Optional[_builtins.str] = None,
                 node_name: Optional[_builtins.str] = None,
                 node_type: Optional[_builtins.str] = None):
        """
        :param _builtins.str id: The id of the instance.
        :param _builtins.str node_name: The name of the instance.
        :param _builtins.str node_type: The type of the instance.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if node_name is not None:
            pulumi.set(__self__, "node_name", node_name)
        if node_type is not None:
            pulumi.set(__self__, "node_type", node_type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The id of the instance.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="nodeName")
    def node_name(self) -> Optional[_builtins.str]:
        """
        The name of the instance.
        """
        return pulumi.get(self, "node_name")

    @_builtins.property
    @pulumi.getter(name="nodeType")
    def node_type(self) -> Optional[_builtins.str]:
        """
        The type of the instance.
        """
        return pulumi.get(self, "node_type")


@pulumi.output_type
class GetStudioApplicationsApplicationResult(dict):
    def __init__(__self__, *,
                 application_id: _builtins.str,
                 application_name: _builtins.str,
                 create_time: _builtins.str,
                 id: _builtins.str,
                 image_url: _builtins.str,
                 resource_group_id: _builtins.str,
                 status: _builtins.str,
                 topo_url: _builtins.str):
        """
        :param _builtins.str application_id: The ID of the Application.
        :param _builtins.str application_name: The name of the Application.
        :param _builtins.str create_time: The creation time of the Application.
        :param _builtins.str id: The ID of the Application.
        :param _builtins.str image_url: The image url of the Application.
        :param _builtins.str resource_group_id: The ID of the resource group.
        :param _builtins.str status: The status of the Application. Valid values: `success`, `release`.
        :param _builtins.str topo_url: The topo url of the Application.
        """
        pulumi.set(__self__, "application_id", application_id)
        pulumi.set(__self__, "application_name", application_name)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "image_url", image_url)
        pulumi.set(__self__, "resource_group_id", resource_group_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "topo_url", topo_url)

    @_builtins.property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> _builtins.str:
        """
        The ID of the Application.
        """
        return pulumi.get(self, "application_id")

    @_builtins.property
    @pulumi.getter(name="applicationName")
    def application_name(self) -> _builtins.str:
        """
        The name of the Application.
        """
        return pulumi.get(self, "application_name")

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> _builtins.str:
        """
        The creation time of the Application.
        """
        return pulumi.get(self, "create_time")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the Application.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="imageUrl")
    def image_url(self) -> _builtins.str:
        """
        The image url of the Application.
        """
        return pulumi.get(self, "image_url")

    @_builtins.property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> _builtins.str:
        """
        The ID of the resource group.
        """
        return pulumi.get(self, "resource_group_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the Application. Valid values: `success`, `release`.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="topoUrl")
    def topo_url(self) -> _builtins.str:
        """
        The topo url of the Application.
        """
        return pulumi.get(self, "topo_url")


