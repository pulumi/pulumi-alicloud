# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAclsAclResult',
    'GetSmartagFlowLogsLogResult',
]

@pulumi.output_type
class GetAclsAclResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 name: builtins.str):
        """
        :param builtins.str id: The ID of the ACL. For example "acl-xxx".
        :param builtins.str name: The name of the Acl.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the ACL. For example "acl-xxx".
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        The name of the Acl.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetSmartagFlowLogsLogResult(dict):
    def __init__(__self__, *,
                 active_aging: builtins.int,
                 description: builtins.str,
                 flow_log_id: builtins.str,
                 flow_log_name: builtins.str,
                 id: builtins.str,
                 inactive_aging: builtins.int,
                 logstore_name: builtins.str,
                 netflow_server_ip: builtins.str,
                 netflow_server_port: builtins.int,
                 netflow_version: builtins.str,
                 output_type: builtins.str,
                 project_name: builtins.str,
                 resource_group_id: builtins.str,
                 sls_region_id: builtins.str,
                 status: builtins.str,
                 total_sag_num: builtins.int):
        """
        :param builtins.int active_aging: The time interval at which log data of active connections is collected. Valid values: 60 to 6000. Default value: 300. Unit: second.
        :param builtins.str description: The description of the flow log.
        :param builtins.str flow_log_id: The ID of the flow log.
        :param builtins.str flow_log_name: The name of the flow log.
        :param builtins.str id: The ID of the Flow Log.
        :param builtins.int inactive_aging: The time interval at which log data of inactive connections is connected. Valid values: 10 to 600. Default value: 15. Unit: second.
        :param builtins.str logstore_name: The name of the Log Service Logstore.
        :param builtins.str netflow_server_ip: The IP address of the NetFlow collector where the flow log is stored.
        :param builtins.int netflow_server_port: The port of the NetFlow collector. Default value: 9995.
        :param builtins.str netflow_version: The NetFlow version. Default value: V9.
        :param builtins.str output_type: The location where the flow log is stored. Valid values:  sls: The flow log is stored in Log Service. netflow: The flow log is stored on a NetFlow collector. all: The flow log is stored both in Log Service and on a NetFlow collector.
        :param builtins.str project_name: The name of the Log Service project.
        :param builtins.str resource_group_id: The ID of the resource group.
        :param builtins.str sls_region_id: The ID of the region where Log Service is deployed.
        :param builtins.str status: The status of the flow log. Valid values:  `Active`: The flow log is enabled. `Inactive`: The flow log is disabled.
        :param builtins.int total_sag_num: The number of Smart Access gateway (SAG) instances with which the flow log is associated.
        """
        pulumi.set(__self__, "active_aging", active_aging)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "flow_log_id", flow_log_id)
        pulumi.set(__self__, "flow_log_name", flow_log_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "inactive_aging", inactive_aging)
        pulumi.set(__self__, "logstore_name", logstore_name)
        pulumi.set(__self__, "netflow_server_ip", netflow_server_ip)
        pulumi.set(__self__, "netflow_server_port", netflow_server_port)
        pulumi.set(__self__, "netflow_version", netflow_version)
        pulumi.set(__self__, "output_type", output_type)
        pulumi.set(__self__, "project_name", project_name)
        pulumi.set(__self__, "resource_group_id", resource_group_id)
        pulumi.set(__self__, "sls_region_id", sls_region_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "total_sag_num", total_sag_num)

    @property
    @pulumi.getter(name="activeAging")
    def active_aging(self) -> builtins.int:
        """
        The time interval at which log data of active connections is collected. Valid values: 60 to 6000. Default value: 300. Unit: second.
        """
        return pulumi.get(self, "active_aging")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        The description of the flow log.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="flowLogId")
    def flow_log_id(self) -> builtins.str:
        """
        The ID of the flow log.
        """
        return pulumi.get(self, "flow_log_id")

    @property
    @pulumi.getter(name="flowLogName")
    def flow_log_name(self) -> builtins.str:
        """
        The name of the flow log.
        """
        return pulumi.get(self, "flow_log_name")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Flow Log.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="inactiveAging")
    def inactive_aging(self) -> builtins.int:
        """
        The time interval at which log data of inactive connections is connected. Valid values: 10 to 600. Default value: 15. Unit: second.
        """
        return pulumi.get(self, "inactive_aging")

    @property
    @pulumi.getter(name="logstoreName")
    def logstore_name(self) -> builtins.str:
        """
        The name of the Log Service Logstore.
        """
        return pulumi.get(self, "logstore_name")

    @property
    @pulumi.getter(name="netflowServerIp")
    def netflow_server_ip(self) -> builtins.str:
        """
        The IP address of the NetFlow collector where the flow log is stored.
        """
        return pulumi.get(self, "netflow_server_ip")

    @property
    @pulumi.getter(name="netflowServerPort")
    def netflow_server_port(self) -> builtins.int:
        """
        The port of the NetFlow collector. Default value: 9995.
        """
        return pulumi.get(self, "netflow_server_port")

    @property
    @pulumi.getter(name="netflowVersion")
    def netflow_version(self) -> builtins.str:
        """
        The NetFlow version. Default value: V9.
        """
        return pulumi.get(self, "netflow_version")

    @property
    @pulumi.getter(name="outputType")
    def output_type(self) -> builtins.str:
        """
        The location where the flow log is stored. Valid values:  sls: The flow log is stored in Log Service. netflow: The flow log is stored on a NetFlow collector. all: The flow log is stored both in Log Service and on a NetFlow collector.
        """
        return pulumi.get(self, "output_type")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> builtins.str:
        """
        The name of the Log Service project.
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> builtins.str:
        """
        The ID of the resource group.
        """
        return pulumi.get(self, "resource_group_id")

    @property
    @pulumi.getter(name="slsRegionId")
    def sls_region_id(self) -> builtins.str:
        """
        The ID of the region where Log Service is deployed.
        """
        return pulumi.get(self, "sls_region_id")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of the flow log. Valid values:  `Active`: The flow log is enabled. `Inactive`: The flow log is disabled.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="totalSagNum")
    def total_sag_num(self) -> builtins.int:
        """
        The number of Smart Access gateway (SAG) instances with which the flow log is associated.
        """
        return pulumi.get(self, "total_sag_num")


