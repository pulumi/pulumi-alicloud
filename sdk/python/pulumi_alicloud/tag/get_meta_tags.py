# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetMetaTagsResult',
    'AwaitableGetMetaTagsResult',
    'get_meta_tags',
    'get_meta_tags_output',
]

@pulumi.output_type
class GetMetaTagsResult:
    """
    A collection of values returned by getMetaTags.
    """
    def __init__(__self__, id=None, key_name=None, output_file=None, tags=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if key_name and not isinstance(key_name, str):
            raise TypeError("Expected argument 'key_name' to be a str")
        pulumi.set(__self__, "key_name", key_name)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="keyName")
    def key_name(self) -> Optional[str]:
        return pulumi.get(self, "key_name")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter
    def tags(self) -> Sequence['outputs.GetMetaTagsTagResult']:
        return pulumi.get(self, "tags")


class AwaitableGetMetaTagsResult(GetMetaTagsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMetaTagsResult(
            id=self.id,
            key_name=self.key_name,
            output_file=self.output_file,
            tags=self.tags)


def get_meta_tags(key_name: Optional[str] = None,
                  output_file: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMetaTagsResult:
    """
    This data source provides the Tag Meta Tags of the current Alibaba Cloud user.

    > **NOTE:** Available in v1.169.0+.

    ## Example Usage

    Basic Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    default = alicloud.tag.get_meta_tags(key_name="example_value")
    pulumi.export("tagMetaTagDefault1", default.tags.value_name)
    ```


    :param str key_name: The name of the key.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    """
    __args__ = dict()
    __args__['keyName'] = key_name
    __args__['outputFile'] = output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('alicloud:tag/getMetaTags:getMetaTags', __args__, opts=opts, typ=GetMetaTagsResult).value

    return AwaitableGetMetaTagsResult(
        id=pulumi.get(__ret__, 'id'),
        key_name=pulumi.get(__ret__, 'key_name'),
        output_file=pulumi.get(__ret__, 'output_file'),
        tags=pulumi.get(__ret__, 'tags'))


@_utilities.lift_output_func(get_meta_tags)
def get_meta_tags_output(key_name: Optional[pulumi.Input[Optional[str]]] = None,
                         output_file: Optional[pulumi.Input[Optional[str]]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMetaTagsResult]:
    """
    This data source provides the Tag Meta Tags of the current Alibaba Cloud user.

    > **NOTE:** Available in v1.169.0+.

    ## Example Usage

    Basic Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    default = alicloud.tag.get_meta_tags(key_name="example_value")
    pulumi.export("tagMetaTagDefault1", default.tags.value_name)
    ```


    :param str key_name: The name of the key.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    """
    ...
