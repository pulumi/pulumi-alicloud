# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['Domain']


class Domain(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_type: Optional[pulumi.Input[str]] = None,
                 connection_time: Optional[pulumi.Input[int]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 domain_name: Optional[pulumi.Input[str]] = None,
                 http2_ports: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 http_ports: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 http_to_user_ip: Optional[pulumi.Input[str]] = None,
                 https_ports: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 https_redirect: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 is_access_product: Optional[pulumi.Input[str]] = None,
                 load_balancing: Optional[pulumi.Input[str]] = None,
                 log_headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DomainLogHeaderArgs']]]]] = None,
                 read_time: Optional[pulumi.Input[int]] = None,
                 resource_group_id: Optional[pulumi.Input[str]] = None,
                 source_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 write_time: Optional[pulumi.Input[int]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Provides a WAF Domain resource to create domain in the Web Application Firewall.

        For information about WAF and how to use it, see [What is Alibaba Cloud WAF](https://www.alibabacloud.com/help/doc-detail/28517.htm).

        > **NOTE:** Available in 1.82.0+ .

        ## Example Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        domain = alicloud.waf.Domain("domain",
            cluster_type="PhysicalCluster",
            domain="www.aliyun.com",
            http2_ports=["443"],
            http_ports=["80"],
            http_to_user_ip="Off",
            https_ports=["443"],
            https_redirect="Off",
            instance_id="waf-123455",
            is_access_product="On",
            load_balancing="IpHash",
            log_headers=[alicloud.waf.DomainLogHeaderArgs(
                key="foo",
                value="http",
            )],
            source_ips=["1.1.1.1"])
        ```

        ## Import

        WAF domain can be imported using the id, e.g.

        ```sh
         $ pulumi import alicloud:waf/domain:Domain domain waf-132435:www.domain.com
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_type: The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
        :param pulumi.Input[int] connection_time: The connection timeout for WAF exclusive clusters. Unit: seconds.
        :param pulumi.Input[str] domain: Field `domain` has been deprecated from version 1.94.0. Use `domain_name` instead.
        :param pulumi.Input[str] domain_name: The domain that you want to add to WAF.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] http2_ports: List of the HTTP 2.0 ports.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] http_ports: List of the HTTP ports.
        :param pulumi.Input[str] http_to_user_ip: Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server. 
               By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] https_ports: List of the HTTPS ports.
        :param pulumi.Input[str] https_redirect: Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
        :param pulumi.Input[str] instance_id: The ID of the WAF instance.
        :param pulumi.Input[str] is_access_product: Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
        :param pulumi.Input[str] load_balancing: The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DomainLogHeaderArgs']]]] log_headers: The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
               * key: The key of label
               * value: The value of label
        :param pulumi.Input[int] read_time: The read timeout of a WAF exclusive cluster. Unit: seconds.
        :param pulumi.Input[str] resource_group_id: The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] source_ips: List of the IP address or domain of the origin server to which the specified domain points.
        :param pulumi.Input[int] write_time: The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['cluster_type'] = cluster_type
            __props__['connection_time'] = connection_time
            if domain is not None:
                warnings.warn("""Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.""", DeprecationWarning)
                pulumi.log.warn("domain is deprecated: Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.")
            __props__['domain'] = domain
            __props__['domain_name'] = domain_name
            __props__['http2_ports'] = http2_ports
            __props__['http_ports'] = http_ports
            __props__['http_to_user_ip'] = http_to_user_ip
            __props__['https_ports'] = https_ports
            __props__['https_redirect'] = https_redirect
            if instance_id is None:
                raise TypeError("Missing required property 'instance_id'")
            __props__['instance_id'] = instance_id
            if is_access_product is None:
                raise TypeError("Missing required property 'is_access_product'")
            __props__['is_access_product'] = is_access_product
            __props__['load_balancing'] = load_balancing
            __props__['log_headers'] = log_headers
            __props__['read_time'] = read_time
            __props__['resource_group_id'] = resource_group_id
            if source_ips is None:
                raise TypeError("Missing required property 'source_ips'")
            __props__['source_ips'] = source_ips
            __props__['write_time'] = write_time
            __props__['cname'] = None
        super(Domain, __self__).__init__(
            'alicloud:waf/domain:Domain',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cluster_type: Optional[pulumi.Input[str]] = None,
            cname: Optional[pulumi.Input[str]] = None,
            connection_time: Optional[pulumi.Input[int]] = None,
            domain: Optional[pulumi.Input[str]] = None,
            domain_name: Optional[pulumi.Input[str]] = None,
            http2_ports: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            http_ports: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            http_to_user_ip: Optional[pulumi.Input[str]] = None,
            https_ports: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            https_redirect: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            is_access_product: Optional[pulumi.Input[str]] = None,
            load_balancing: Optional[pulumi.Input[str]] = None,
            log_headers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DomainLogHeaderArgs']]]]] = None,
            read_time: Optional[pulumi.Input[int]] = None,
            resource_group_id: Optional[pulumi.Input[str]] = None,
            source_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            write_time: Optional[pulumi.Input[int]] = None) -> 'Domain':
        """
        Get an existing Domain resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_type: The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
        :param pulumi.Input[str] cname: The CNAME record assigned by the WAF instance to the specified domain.
        :param pulumi.Input[int] connection_time: The connection timeout for WAF exclusive clusters. Unit: seconds.
        :param pulumi.Input[str] domain: Field `domain` has been deprecated from version 1.94.0. Use `domain_name` instead.
        :param pulumi.Input[str] domain_name: The domain that you want to add to WAF.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] http2_ports: List of the HTTP 2.0 ports.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] http_ports: List of the HTTP ports.
        :param pulumi.Input[str] http_to_user_ip: Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server. 
               By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] https_ports: List of the HTTPS ports.
        :param pulumi.Input[str] https_redirect: Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
        :param pulumi.Input[str] instance_id: The ID of the WAF instance.
        :param pulumi.Input[str] is_access_product: Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
        :param pulumi.Input[str] load_balancing: The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['DomainLogHeaderArgs']]]] log_headers: The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
               * key: The key of label
               * value: The value of label
        :param pulumi.Input[int] read_time: The read timeout of a WAF exclusive cluster. Unit: seconds.
        :param pulumi.Input[str] resource_group_id: The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] source_ips: List of the IP address or domain of the origin server to which the specified domain points.
        :param pulumi.Input[int] write_time: The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["cluster_type"] = cluster_type
        __props__["cname"] = cname
        __props__["connection_time"] = connection_time
        __props__["domain"] = domain
        __props__["domain_name"] = domain_name
        __props__["http2_ports"] = http2_ports
        __props__["http_ports"] = http_ports
        __props__["http_to_user_ip"] = http_to_user_ip
        __props__["https_ports"] = https_ports
        __props__["https_redirect"] = https_redirect
        __props__["instance_id"] = instance_id
        __props__["is_access_product"] = is_access_product
        __props__["load_balancing"] = load_balancing
        __props__["log_headers"] = log_headers
        __props__["read_time"] = read_time
        __props__["resource_group_id"] = resource_group_id
        __props__["source_ips"] = source_ips
        __props__["write_time"] = write_time
        return Domain(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="clusterType")
    def cluster_type(self) -> pulumi.Output[Optional[str]]:
        """
        The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
        """
        return pulumi.get(self, "cluster_type")

    @property
    @pulumi.getter
    def cname(self) -> pulumi.Output[str]:
        """
        The CNAME record assigned by the WAF instance to the specified domain.
        """
        return pulumi.get(self, "cname")

    @property
    @pulumi.getter(name="connectionTime")
    def connection_time(self) -> pulumi.Output[Optional[int]]:
        """
        The connection timeout for WAF exclusive clusters. Unit: seconds.
        """
        return pulumi.get(self, "connection_time")

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Output[str]:
        """
        Field `domain` has been deprecated from version 1.94.0. Use `domain_name` instead.
        """
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> pulumi.Output[str]:
        """
        The domain that you want to add to WAF.
        """
        return pulumi.get(self, "domain_name")

    @property
    @pulumi.getter(name="http2Ports")
    def http2_ports(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        List of the HTTP 2.0 ports.
        """
        return pulumi.get(self, "http2_ports")

    @property
    @pulumi.getter(name="httpPorts")
    def http_ports(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        List of the HTTP ports.
        """
        return pulumi.get(self, "http_ports")

    @property
    @pulumi.getter(name="httpToUserIp")
    def http_to_user_ip(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server. 
        By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
        """
        return pulumi.get(self, "http_to_user_ip")

    @property
    @pulumi.getter(name="httpsPorts")
    def https_ports(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        List of the HTTPS ports.
        """
        return pulumi.get(self, "https_ports")

    @property
    @pulumi.getter(name="httpsRedirect")
    def https_redirect(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
        """
        return pulumi.get(self, "https_redirect")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        The ID of the WAF instance.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="isAccessProduct")
    def is_access_product(self) -> pulumi.Output[str]:
        """
        Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
        """
        return pulumi.get(self, "is_access_product")

    @property
    @pulumi.getter(name="loadBalancing")
    def load_balancing(self) -> pulumi.Output[Optional[str]]:
        """
        The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
        """
        return pulumi.get(self, "load_balancing")

    @property
    @pulumi.getter(name="logHeaders")
    def log_headers(self) -> pulumi.Output[Optional[Sequence['outputs.DomainLogHeader']]]:
        """
        The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
        * key: The key of label
        * value: The value of label
        """
        return pulumi.get(self, "log_headers")

    @property
    @pulumi.getter(name="readTime")
    def read_time(self) -> pulumi.Output[Optional[int]]:
        """
        The read timeout of a WAF exclusive cluster. Unit: seconds.
        """
        return pulumi.get(self, "read_time")

    @property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> pulumi.Output[str]:
        """
        The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
        """
        return pulumi.get(self, "resource_group_id")

    @property
    @pulumi.getter(name="sourceIps")
    def source_ips(self) -> pulumi.Output[Sequence[str]]:
        """
        List of the IP address or domain of the origin server to which the specified domain points.
        """
        return pulumi.get(self, "source_ips")

    @property
    @pulumi.getter(name="writeTime")
    def write_time(self) -> pulumi.Output[Optional[int]]:
        """
        The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
        """
        return pulumi.get(self, "write_time")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

