# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'InstanceEnvironmentVar',
    'GetInstancesInstanceResult',
]

@pulumi.output_type
class InstanceEnvironmentVar(dict):
    def __init__(__self__, *,
                 key: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str key: Keys for environment variables
        :param _builtins.str value: Values of environment variables
        """
        if key is not None:
            pulumi.set(__self__, "key", key)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> Optional[_builtins.str]:
        """
        Keys for environment variables
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        Values of environment variables
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetInstancesInstanceResult(dict):
    def __init__(__self__, *,
                 client_instance_id: _builtins.str,
                 client_instance_name: _builtins.str,
                 client_instance_type: _builtins.str,
                 id: _builtins.str,
                 instance_id: _builtins.str,
                 instance_name: _builtins.str,
                 instance_type: _builtins.str,
                 status: _builtins.str,
                 zone_id: _builtins.str):
        """
        :param _builtins.str client_instance_id: The ID of the ECS instance to be bound.
        :param _builtins.str client_instance_name: The name of the ECS instance bound to the EAIS instance.
        :param _builtins.str client_instance_type: The type of the ECS instance bound to the EAIS instance.
        :param _builtins.str id: The ID of the Instance.
        :param _builtins.str instance_id: The ID of the resource.
        :param _builtins.str instance_name: The name of the resource.
        :param _builtins.str instance_type: The type of the resource. Valid values: `eais.ei-a6.4xlarge`, `eais.ei-a6.2xlarge`, `eais.ei-a6.xlarge`, `eais.ei-a6.large`, `eais.ei-a6.medium`.
        :param _builtins.str status: The status of the resource. Valid values: `Attaching`, `Available`, `Detaching`, `InUse`, `Starting`, `Unavailable`.
        :param _builtins.str zone_id: The ID of the region to which the EAIS instance belongs.
        """
        pulumi.set(__self__, "client_instance_id", client_instance_id)
        pulumi.set(__self__, "client_instance_name", client_instance_name)
        pulumi.set(__self__, "client_instance_type", client_instance_type)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "instance_type", instance_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "zone_id", zone_id)

    @_builtins.property
    @pulumi.getter(name="clientInstanceId")
    def client_instance_id(self) -> _builtins.str:
        """
        The ID of the ECS instance to be bound.
        """
        return pulumi.get(self, "client_instance_id")

    @_builtins.property
    @pulumi.getter(name="clientInstanceName")
    def client_instance_name(self) -> _builtins.str:
        """
        The name of the ECS instance bound to the EAIS instance.
        """
        return pulumi.get(self, "client_instance_name")

    @_builtins.property
    @pulumi.getter(name="clientInstanceType")
    def client_instance_type(self) -> _builtins.str:
        """
        The type of the ECS instance bound to the EAIS instance.
        """
        return pulumi.get(self, "client_instance_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the Instance.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        """
        The ID of the resource.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> _builtins.str:
        """
        The name of the resource.
        """
        return pulumi.get(self, "instance_name")

    @_builtins.property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> _builtins.str:
        """
        The type of the resource. Valid values: `eais.ei-a6.4xlarge`, `eais.ei-a6.2xlarge`, `eais.ei-a6.xlarge`, `eais.ei-a6.large`, `eais.ei-a6.medium`.
        """
        return pulumi.get(self, "instance_type")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the resource. Valid values: `Attaching`, `Available`, `Detaching`, `InUse`, `Starting`, `Unavailable`.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> _builtins.str:
        """
        The ID of the region to which the EAIS instance belongs.
        """
        return pulumi.get(self, "zone_id")


