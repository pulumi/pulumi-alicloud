# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ServiceArgs', 'Service']

@pulumi.input_type
class ServiceArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 internet_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 log_config: Optional[pulumi.Input['ServiceLogConfigArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 name_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 nas_config: Optional[pulumi.Input['ServiceNasConfigArgs']] = None,
                 publish: Optional[pulumi.Input[_builtins.bool]] = None,
                 role: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tracing_config: Optional[pulumi.Input['ServiceTracingConfigArgs']] = None,
                 vpc_config: Optional[pulumi.Input['ServiceVpcConfigArgs']] = None):
        """
        The set of arguments for constructing a Service resource.
        :param pulumi.Input[_builtins.str] description: The Function Compute Service description.
        :param pulumi.Input[_builtins.bool] internet_access: Whether to allow the Service to access Internet. Default to "true".
        :param pulumi.Input['ServiceLogConfigArgs'] log_config: Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        :param pulumi.Input[_builtins.str] name: The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        :param pulumi.Input[_builtins.str] name_prefix: Setting a prefix to get a only name. It is conflict with `name`.
        :param pulumi.Input['ServiceNasConfigArgs'] nas_config: Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        :param pulumi.Input[_builtins.bool] publish: Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        :param pulumi.Input[_builtins.str] role: RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Map for tagging resources.
        :param pulumi.Input['ServiceTracingConfigArgs'] tracing_config: Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        :param pulumi.Input['ServiceVpcConfigArgs'] vpc_config: Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if internet_access is not None:
            pulumi.set(__self__, "internet_access", internet_access)
        if log_config is not None:
            pulumi.set(__self__, "log_config", log_config)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if name_prefix is not None:
            pulumi.set(__self__, "name_prefix", name_prefix)
        if nas_config is not None:
            pulumi.set(__self__, "nas_config", nas_config)
        if publish is not None:
            pulumi.set(__self__, "publish", publish)
        if role is not None:
            pulumi.set(__self__, "role", role)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if tracing_config is not None:
            pulumi.set(__self__, "tracing_config", tracing_config)
        if vpc_config is not None:
            pulumi.set(__self__, "vpc_config", vpc_config)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Function Compute Service description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="internetAccess")
    def internet_access(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to allow the Service to access Internet. Default to "true".
        """
        return pulumi.get(self, "internet_access")

    @internet_access.setter
    def internet_access(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "internet_access", value)

    @_builtins.property
    @pulumi.getter(name="logConfig")
    def log_config(self) -> Optional[pulumi.Input['ServiceLogConfigArgs']]:
        """
        Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        """
        return pulumi.get(self, "log_config")

    @log_config.setter
    def log_config(self, value: Optional[pulumi.Input['ServiceLogConfigArgs']]):
        pulumi.set(self, "log_config", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="namePrefix")
    def name_prefix(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Setting a prefix to get a only name. It is conflict with `name`.
        """
        return pulumi.get(self, "name_prefix")

    @name_prefix.setter
    def name_prefix(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name_prefix", value)

    @_builtins.property
    @pulumi.getter(name="nasConfig")
    def nas_config(self) -> Optional[pulumi.Input['ServiceNasConfigArgs']]:
        """
        Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        """
        return pulumi.get(self, "nas_config")

    @nas_config.setter
    def nas_config(self, value: Optional[pulumi.Input['ServiceNasConfigArgs']]):
        pulumi.set(self, "nas_config", value)

    @_builtins.property
    @pulumi.getter
    def publish(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        """
        return pulumi.get(self, "publish")

    @publish.setter
    def publish(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "publish", value)

    @_builtins.property
    @pulumi.getter
    def role(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        """
        return pulumi.get(self, "role")

    @role.setter
    def role(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "role", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Map for tagging resources.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="tracingConfig")
    def tracing_config(self) -> Optional[pulumi.Input['ServiceTracingConfigArgs']]:
        """
        Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        """
        return pulumi.get(self, "tracing_config")

    @tracing_config.setter
    def tracing_config(self, value: Optional[pulumi.Input['ServiceTracingConfigArgs']]):
        pulumi.set(self, "tracing_config", value)

    @_builtins.property
    @pulumi.getter(name="vpcConfig")
    def vpc_config(self) -> Optional[pulumi.Input['ServiceVpcConfigArgs']]:
        """
        Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        return pulumi.get(self, "vpc_config")

    @vpc_config.setter
    def vpc_config(self, value: Optional[pulumi.Input['ServiceVpcConfigArgs']]):
        pulumi.set(self, "vpc_config", value)


@pulumi.input_type
class _ServiceState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 internet_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 last_modified: Optional[pulumi.Input[_builtins.str]] = None,
                 log_config: Optional[pulumi.Input['ServiceLogConfigArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 name_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 nas_config: Optional[pulumi.Input['ServiceNasConfigArgs']] = None,
                 publish: Optional[pulumi.Input[_builtins.bool]] = None,
                 role: Optional[pulumi.Input[_builtins.str]] = None,
                 service_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tracing_config: Optional[pulumi.Input['ServiceTracingConfigArgs']] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 vpc_config: Optional[pulumi.Input['ServiceVpcConfigArgs']] = None):
        """
        Input properties used for looking up and filtering Service resources.
        :param pulumi.Input[_builtins.str] description: The Function Compute Service description.
        :param pulumi.Input[_builtins.bool] internet_access: Whether to allow the Service to access Internet. Default to "true".
        :param pulumi.Input[_builtins.str] last_modified: The date this resource was last modified.
        :param pulumi.Input['ServiceLogConfigArgs'] log_config: Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        :param pulumi.Input[_builtins.str] name: The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        :param pulumi.Input[_builtins.str] name_prefix: Setting a prefix to get a only name. It is conflict with `name`.
        :param pulumi.Input['ServiceNasConfigArgs'] nas_config: Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        :param pulumi.Input[_builtins.bool] publish: Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        :param pulumi.Input[_builtins.str] role: RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        :param pulumi.Input[_builtins.str] service_id: The Function Compute Service ID.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Map for tagging resources.
        :param pulumi.Input['ServiceTracingConfigArgs'] tracing_config: Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        :param pulumi.Input[_builtins.str] version: The latest published version of your Function Compute Service.
        :param pulumi.Input['ServiceVpcConfigArgs'] vpc_config: Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if internet_access is not None:
            pulumi.set(__self__, "internet_access", internet_access)
        if last_modified is not None:
            pulumi.set(__self__, "last_modified", last_modified)
        if log_config is not None:
            pulumi.set(__self__, "log_config", log_config)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if name_prefix is not None:
            pulumi.set(__self__, "name_prefix", name_prefix)
        if nas_config is not None:
            pulumi.set(__self__, "nas_config", nas_config)
        if publish is not None:
            pulumi.set(__self__, "publish", publish)
        if role is not None:
            pulumi.set(__self__, "role", role)
        if service_id is not None:
            pulumi.set(__self__, "service_id", service_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if tracing_config is not None:
            pulumi.set(__self__, "tracing_config", tracing_config)
        if version is not None:
            pulumi.set(__self__, "version", version)
        if vpc_config is not None:
            pulumi.set(__self__, "vpc_config", vpc_config)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Function Compute Service description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="internetAccess")
    def internet_access(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to allow the Service to access Internet. Default to "true".
        """
        return pulumi.get(self, "internet_access")

    @internet_access.setter
    def internet_access(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "internet_access", value)

    @_builtins.property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date this resource was last modified.
        """
        return pulumi.get(self, "last_modified")

    @last_modified.setter
    def last_modified(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_modified", value)

    @_builtins.property
    @pulumi.getter(name="logConfig")
    def log_config(self) -> Optional[pulumi.Input['ServiceLogConfigArgs']]:
        """
        Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        """
        return pulumi.get(self, "log_config")

    @log_config.setter
    def log_config(self, value: Optional[pulumi.Input['ServiceLogConfigArgs']]):
        pulumi.set(self, "log_config", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="namePrefix")
    def name_prefix(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Setting a prefix to get a only name. It is conflict with `name`.
        """
        return pulumi.get(self, "name_prefix")

    @name_prefix.setter
    def name_prefix(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name_prefix", value)

    @_builtins.property
    @pulumi.getter(name="nasConfig")
    def nas_config(self) -> Optional[pulumi.Input['ServiceNasConfigArgs']]:
        """
        Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        """
        return pulumi.get(self, "nas_config")

    @nas_config.setter
    def nas_config(self, value: Optional[pulumi.Input['ServiceNasConfigArgs']]):
        pulumi.set(self, "nas_config", value)

    @_builtins.property
    @pulumi.getter
    def publish(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        """
        return pulumi.get(self, "publish")

    @publish.setter
    def publish(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "publish", value)

    @_builtins.property
    @pulumi.getter
    def role(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        """
        return pulumi.get(self, "role")

    @role.setter
    def role(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "role", value)

    @_builtins.property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Function Compute Service ID.
        """
        return pulumi.get(self, "service_id")

    @service_id.setter
    def service_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Map for tagging resources.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="tracingConfig")
    def tracing_config(self) -> Optional[pulumi.Input['ServiceTracingConfigArgs']]:
        """
        Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        """
        return pulumi.get(self, "tracing_config")

    @tracing_config.setter
    def tracing_config(self, value: Optional[pulumi.Input['ServiceTracingConfigArgs']]):
        pulumi.set(self, "tracing_config", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest published version of your Function Compute Service.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="vpcConfig")
    def vpc_config(self) -> Optional[pulumi.Input['ServiceVpcConfigArgs']]:
        """
        Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        return pulumi.get(self, "vpc_config")

    @vpc_config.setter
    def vpc_config(self, value: Optional[pulumi.Input['ServiceVpcConfigArgs']]):
        pulumi.set(self, "vpc_config", value)


@pulumi.type_token("alicloud:fc/service:Service")
class Service(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 internet_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 log_config: Optional[pulumi.Input[Union['ServiceLogConfigArgs', 'ServiceLogConfigArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 name_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 nas_config: Optional[pulumi.Input[Union['ServiceNasConfigArgs', 'ServiceNasConfigArgsDict']]] = None,
                 publish: Optional[pulumi.Input[_builtins.bool]] = None,
                 role: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tracing_config: Optional[pulumi.Input[Union['ServiceTracingConfigArgs', 'ServiceTracingConfigArgsDict']]] = None,
                 vpc_config: Optional[pulumi.Input[Union['ServiceVpcConfigArgs', 'ServiceVpcConfigArgsDict']]] = None,
                 __props__=None):
        """
        Provides a Alicloud Function Compute Service resource. The resource is the base of launching Function and Trigger configuration.
        For information about Service and how to use it, see [What is Function Compute](https://www.alibabacloud.com/help/en/fc/developer-reference/api-fc-open-2021-04-06-createservice).

        > **NOTE:** The resource requires a provider field 'account_id'. See account_id.

        > **NOTE:** If you happen the error "Argument 'internetAccess' is not supported", you need to log on web console and click button "Apply VPC Function"
        which is in the upper of [Function Service Web Console](https://fc.console.aliyun.com/) page.

        > **NOTE:** Currently not all regions support Function Compute Service.
        For more details supported regions, see [Service endpoints](https://www.alibabacloud.com/help/doc-detail/52984.htm)

        > **NOTE:** Available since v1.93.0.
        ## Module Support

        You can use to the existing fc module to create a service and a function quickly and then set several triggers for it.

        ## Import

        Function Compute Service can be imported using the id or name, e.g.

        ```sh
        $ pulumi import alicloud:fc/service:Service foo my-fc-service
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: The Function Compute Service description.
        :param pulumi.Input[_builtins.bool] internet_access: Whether to allow the Service to access Internet. Default to "true".
        :param pulumi.Input[Union['ServiceLogConfigArgs', 'ServiceLogConfigArgsDict']] log_config: Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        :param pulumi.Input[_builtins.str] name: The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        :param pulumi.Input[_builtins.str] name_prefix: Setting a prefix to get a only name. It is conflict with `name`.
        :param pulumi.Input[Union['ServiceNasConfigArgs', 'ServiceNasConfigArgsDict']] nas_config: Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        :param pulumi.Input[_builtins.bool] publish: Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        :param pulumi.Input[_builtins.str] role: RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Map for tagging resources.
        :param pulumi.Input[Union['ServiceTracingConfigArgs', 'ServiceTracingConfigArgsDict']] tracing_config: Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        :param pulumi.Input[Union['ServiceVpcConfigArgs', 'ServiceVpcConfigArgsDict']] vpc_config: Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ServiceArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a Alicloud Function Compute Service resource. The resource is the base of launching Function and Trigger configuration.
        For information about Service and how to use it, see [What is Function Compute](https://www.alibabacloud.com/help/en/fc/developer-reference/api-fc-open-2021-04-06-createservice).

        > **NOTE:** The resource requires a provider field 'account_id'. See account_id.

        > **NOTE:** If you happen the error "Argument 'internetAccess' is not supported", you need to log on web console and click button "Apply VPC Function"
        which is in the upper of [Function Service Web Console](https://fc.console.aliyun.com/) page.

        > **NOTE:** Currently not all regions support Function Compute Service.
        For more details supported regions, see [Service endpoints](https://www.alibabacloud.com/help/doc-detail/52984.htm)

        > **NOTE:** Available since v1.93.0.
        ## Module Support

        You can use to the existing fc module to create a service and a function quickly and then set several triggers for it.

        ## Import

        Function Compute Service can be imported using the id or name, e.g.

        ```sh
        $ pulumi import alicloud:fc/service:Service foo my-fc-service
        ```

        :param str resource_name: The name of the resource.
        :param ServiceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServiceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 internet_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 log_config: Optional[pulumi.Input[Union['ServiceLogConfigArgs', 'ServiceLogConfigArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 name_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 nas_config: Optional[pulumi.Input[Union['ServiceNasConfigArgs', 'ServiceNasConfigArgsDict']]] = None,
                 publish: Optional[pulumi.Input[_builtins.bool]] = None,
                 role: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 tracing_config: Optional[pulumi.Input[Union['ServiceTracingConfigArgs', 'ServiceTracingConfigArgsDict']]] = None,
                 vpc_config: Optional[pulumi.Input[Union['ServiceVpcConfigArgs', 'ServiceVpcConfigArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServiceArgs.__new__(ServiceArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["internet_access"] = internet_access
            __props__.__dict__["log_config"] = log_config
            __props__.__dict__["name"] = name
            __props__.__dict__["name_prefix"] = name_prefix
            __props__.__dict__["nas_config"] = nas_config
            __props__.__dict__["publish"] = publish
            __props__.__dict__["role"] = role
            __props__.__dict__["tags"] = tags
            __props__.__dict__["tracing_config"] = tracing_config
            __props__.__dict__["vpc_config"] = vpc_config
            __props__.__dict__["last_modified"] = None
            __props__.__dict__["service_id"] = None
            __props__.__dict__["version"] = None
        super(Service, __self__).__init__(
            'alicloud:fc/service:Service',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            internet_access: Optional[pulumi.Input[_builtins.bool]] = None,
            last_modified: Optional[pulumi.Input[_builtins.str]] = None,
            log_config: Optional[pulumi.Input[Union['ServiceLogConfigArgs', 'ServiceLogConfigArgsDict']]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            name_prefix: Optional[pulumi.Input[_builtins.str]] = None,
            nas_config: Optional[pulumi.Input[Union['ServiceNasConfigArgs', 'ServiceNasConfigArgsDict']]] = None,
            publish: Optional[pulumi.Input[_builtins.bool]] = None,
            role: Optional[pulumi.Input[_builtins.str]] = None,
            service_id: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            tracing_config: Optional[pulumi.Input[Union['ServiceTracingConfigArgs', 'ServiceTracingConfigArgsDict']]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None,
            vpc_config: Optional[pulumi.Input[Union['ServiceVpcConfigArgs', 'ServiceVpcConfigArgsDict']]] = None) -> 'Service':
        """
        Get an existing Service resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: The Function Compute Service description.
        :param pulumi.Input[_builtins.bool] internet_access: Whether to allow the Service to access Internet. Default to "true".
        :param pulumi.Input[_builtins.str] last_modified: The date this resource was last modified.
        :param pulumi.Input[Union['ServiceLogConfigArgs', 'ServiceLogConfigArgsDict']] log_config: Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        :param pulumi.Input[_builtins.str] name: The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        :param pulumi.Input[_builtins.str] name_prefix: Setting a prefix to get a only name. It is conflict with `name`.
        :param pulumi.Input[Union['ServiceNasConfigArgs', 'ServiceNasConfigArgsDict']] nas_config: Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        :param pulumi.Input[_builtins.bool] publish: Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        :param pulumi.Input[_builtins.str] role: RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        :param pulumi.Input[_builtins.str] service_id: The Function Compute Service ID.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Map for tagging resources.
        :param pulumi.Input[Union['ServiceTracingConfigArgs', 'ServiceTracingConfigArgsDict']] tracing_config: Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        :param pulumi.Input[_builtins.str] version: The latest published version of your Function Compute Service.
        :param pulumi.Input[Union['ServiceVpcConfigArgs', 'ServiceVpcConfigArgsDict']] vpc_config: Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ServiceState.__new__(_ServiceState)

        __props__.__dict__["description"] = description
        __props__.__dict__["internet_access"] = internet_access
        __props__.__dict__["last_modified"] = last_modified
        __props__.__dict__["log_config"] = log_config
        __props__.__dict__["name"] = name
        __props__.__dict__["name_prefix"] = name_prefix
        __props__.__dict__["nas_config"] = nas_config
        __props__.__dict__["publish"] = publish
        __props__.__dict__["role"] = role
        __props__.__dict__["service_id"] = service_id
        __props__.__dict__["tags"] = tags
        __props__.__dict__["tracing_config"] = tracing_config
        __props__.__dict__["version"] = version
        __props__.__dict__["vpc_config"] = vpc_config
        return Service(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The Function Compute Service description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="internetAccess")
    def internet_access(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Whether to allow the Service to access Internet. Default to "true".
        """
        return pulumi.get(self, "internet_access")

    @_builtins.property
    @pulumi.getter(name="lastModified")
    def last_modified(self) -> pulumi.Output[_builtins.str]:
        """
        The date this resource was last modified.
        """
        return pulumi.get(self, "last_modified")

    @_builtins.property
    @pulumi.getter(name="logConfig")
    def log_config(self) -> pulumi.Output[Optional['outputs.ServiceLogConfig']]:
        """
        Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `log_config` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.). See `log_config` below.
        """
        return pulumi.get(self, "log_config")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The Function Compute Service name. It is the only in one Alicloud account and is conflict with `name_prefix`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="namePrefix")
    def name_prefix(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Setting a prefix to get a only name. It is conflict with `name`.
        """
        return pulumi.get(self, "name_prefix")

    @_builtins.property
    @pulumi.getter(name="nasConfig")
    def nas_config(self) -> pulumi.Output[Optional['outputs.ServiceNasConfig']]:
        """
        Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. See `nas_config` below.
        """
        return pulumi.get(self, "nas_config")

    @_builtins.property
    @pulumi.getter
    def publish(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.
        """
        return pulumi.get(self, "publish")

    @_builtins.property
    @pulumi.getter
    def role(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        """
        return pulumi.get(self, "role")

    @_builtins.property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> pulumi.Output[_builtins.str]:
        """
        The Function Compute Service ID.
        """
        return pulumi.get(self, "service_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        """
        Map for tagging resources.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="tracingConfig")
    def tracing_config(self) -> pulumi.Output[Optional['outputs.ServiceTracingConfig']]:
        """
        Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracing_config` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.). See `tracing_config` below.
        """
        return pulumi.get(self, "tracing_config")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        The latest published version of your Function Compute Service.
        """
        return pulumi.get(self, "version")

    @_builtins.property
    @pulumi.getter(name="vpcConfig")
    def vpc_config(self) -> pulumi.Output[Optional['outputs.ServiceVpcConfig']]:
        """
        Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpc_config` requires the following: (**NOTE:** If both `vswitch_ids` and `security_group_id` are empty, vpc_config is considered to be empty or unset.). See `vpc_config` below.
        """
        return pulumi.get(self, "vpc_config")

