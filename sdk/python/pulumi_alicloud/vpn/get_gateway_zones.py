# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetGatewayZonesResult',
    'AwaitableGetGatewayZonesResult',
    'get_gateway_zones',
    'get_gateway_zones_output',
]

@pulumi.output_type
class GetGatewayZonesResult:
    """
    A collection of values returned by getGatewayZones.
    """
    def __init__(__self__, id=None, ids=None, output_file=None, spec=None, zones=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        pulumi.set(__self__, "ids", ids)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if spec and not isinstance(spec, str):
            raise TypeError("Expected argument 'spec' to be a str")
        pulumi.set(__self__, "spec", spec)
        if zones and not isinstance(zones, list):
            raise TypeError("Expected argument 'zones' to be a list")
        pulumi.set(__self__, "zones", zones)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ids(self) -> Sequence[str]:
        """
        A list of Zone IDs.
        """
        return pulumi.get(self, "ids")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter
    def spec(self) -> str:
        return pulumi.get(self, "spec")

    @property
    @pulumi.getter
    def zones(self) -> Sequence['outputs.GetGatewayZonesZoneResult']:
        """
        A list of Zone Entries. Each element contains the following attributes:
        """
        return pulumi.get(self, "zones")


class AwaitableGetGatewayZonesResult(GetGatewayZonesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGatewayZonesResult(
            id=self.id,
            ids=self.ids,
            output_file=self.output_file,
            spec=self.spec,
            zones=self.zones)


def get_gateway_zones(ids: Optional[Sequence[str]] = None,
                      output_file: Optional[str] = None,
                      spec: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGatewayZonesResult:
    """
    This data source provides VPN Gateway Zone available to the user.[What is Zone](https://next.api.alibabacloud.com/api/Vpc/2016-04-28/DescribeVpnGatewayAvailableZones?lang=JAVA)

    > **NOTE:** Available since v1.216.0.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    default = alicloud.vpn.get_gateway_zones(spec="5M")
    ```


    :param Sequence[str] ids: A list of Zone IDs.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    :param str spec: Bandwidth specification.-If an IPsec connection is bound to a VPN gateway instance, this parameter indicates the Bandwidth specification of the VPN gateway instance.-If an IPsec connection is bound to a forwarding router, this parameter indicates the bandwidth that you expect the IPsec connection to support.Different bandwidth specifications may affect the zone information that is found. Value:
    """
    __args__ = dict()
    __args__['ids'] = ids
    __args__['outputFile'] = output_file
    __args__['spec'] = spec
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('alicloud:vpn/getGatewayZones:getGatewayZones', __args__, opts=opts, typ=GetGatewayZonesResult).value

    return AwaitableGetGatewayZonesResult(
        id=pulumi.get(__ret__, 'id'),
        ids=pulumi.get(__ret__, 'ids'),
        output_file=pulumi.get(__ret__, 'output_file'),
        spec=pulumi.get(__ret__, 'spec'),
        zones=pulumi.get(__ret__, 'zones'))


@_utilities.lift_output_func(get_gateway_zones)
def get_gateway_zones_output(ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                             output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             spec: Optional[pulumi.Input[str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGatewayZonesResult]:
    """
    This data source provides VPN Gateway Zone available to the user.[What is Zone](https://next.api.alibabacloud.com/api/Vpc/2016-04-28/DescribeVpnGatewayAvailableZones?lang=JAVA)

    > **NOTE:** Available since v1.216.0.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    default = alicloud.vpn.get_gateway_zones(spec="5M")
    ```


    :param Sequence[str] ids: A list of Zone IDs.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    :param str spec: Bandwidth specification.-If an IPsec connection is bound to a VPN gateway instance, this parameter indicates the Bandwidth specification of the VPN gateway instance.-If an IPsec connection is bound to a forwarding router, this parameter indicates the bandwidth that you expect the IPsec connection to support.Different bandwidth specifications may affect the zone information that is found. Value:
    """
    ...
