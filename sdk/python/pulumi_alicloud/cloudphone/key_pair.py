# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['KeyPairArgs', 'KeyPair']

@pulumi.input_type
class KeyPairArgs:
    def __init__(__self__, *,
                 key_pair_name: pulumi.Input[str],
                 public_key_body: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a KeyPair resource.
        :param pulumi.Input[str] key_pair_name: ADB key pair name.
        :param pulumi.Input[str] public_key_body: The public key of the key pair.
        """
        pulumi.set(__self__, "key_pair_name", key_pair_name)
        if public_key_body is not None:
            pulumi.set(__self__, "public_key_body", public_key_body)

    @property
    @pulumi.getter(name="keyPairName")
    def key_pair_name(self) -> pulumi.Input[str]:
        """
        ADB key pair name.
        """
        return pulumi.get(self, "key_pair_name")

    @key_pair_name.setter
    def key_pair_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "key_pair_name", value)

    @property
    @pulumi.getter(name="publicKeyBody")
    def public_key_body(self) -> Optional[pulumi.Input[str]]:
        """
        The public key of the key pair.
        """
        return pulumi.get(self, "public_key_body")

    @public_key_body.setter
    def public_key_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_key_body", value)


@pulumi.input_type
class _KeyPairState:
    def __init__(__self__, *,
                 key_pair_name: Optional[pulumi.Input[str]] = None,
                 public_key_body: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering KeyPair resources.
        :param pulumi.Input[str] key_pair_name: ADB key pair name.
        :param pulumi.Input[str] public_key_body: The public key of the key pair.
        """
        if key_pair_name is not None:
            pulumi.set(__self__, "key_pair_name", key_pair_name)
        if public_key_body is not None:
            pulumi.set(__self__, "public_key_body", public_key_body)

    @property
    @pulumi.getter(name="keyPairName")
    def key_pair_name(self) -> Optional[pulumi.Input[str]]:
        """
        ADB key pair name.
        """
        return pulumi.get(self, "key_pair_name")

    @key_pair_name.setter
    def key_pair_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key_pair_name", value)

    @property
    @pulumi.getter(name="publicKeyBody")
    def public_key_body(self) -> Optional[pulumi.Input[str]]:
        """
        The public key of the key pair.
        """
        return pulumi.get(self, "public_key_body")

    @public_key_body.setter
    def public_key_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_key_body", value)


class KeyPair(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 key_pair_name: Optional[pulumi.Input[str]] = None,
                 public_key_body: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a Cloud Phone Key Pair resource.

        Cloud Phone KeyPair.

        For information about Cloud Phone Key Pair and how to use it, see [What is Key Pair](https://next.api.alibabacloud.com/document/eds-aic/2023-09-30/CreateKeyPair).

        > **NOTE:** Available since v1.243.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        config = pulumi.Config()
        name = config.get("name")
        if name is None:
            name = "terraform-example"
        defaultj_z1gi0 = alicloud.cloudphone.Policy("defaultjZ1gi0")
        default_yh_ml_to = alicloud.cloudphoneinstance.Group("defaultYHMlTO",
            instance_group_spec="acp.basic.small",
            policy_group_id=defaultj_z1gi0.id,
            instance_group_name="AutoCreateGroupName",
            period=1,
            number_of_instances=1,
            charge_type="PostPaid",
            image_id="imgc-075cllfeuazh03tg9",
            period_unit="Hour",
            auto_renew=False,
            amount=1,
            auto_pay=False,
            gpu_acceleration=False)
        defaulthd_bep1 = alicloud.cloudphoneinstance.CloudPhoneInstance("defaulthdBep1",
            android_instance_group_id=default_yh_ml_to.id,
            android_instance_name="CreateInstanceName")
        default = alicloud.cloudphone.KeyPair("default",
            key_pair_name="example",
            public_key_body="QAAAAH0o+PMrbz9ZlxaNMYlk1rJkN4JXqwSUVYW5YzMW3fWJ7At1XO40GYDEFL43fLob52pmRxRDuRoGAELmS1AyzqUle2v9yGKFziqS/vK/4vM4MW/ppnTmvh9zPXir0fB/uwXS4iS6xt0gmvprgyRNs7hgXtBK9ASiGuPCv47aRJqh9mYzq2pe2rgb+K0OU5/nQXwWKSxYsv+w3KWPshpwx8iF/JWvjixILJ5gygndd+1HyE8jrLVmvm/OitNaMgkolY1bvmRVVKLmzde7FtXw0s4TVfYUvF385gwlrOulKcL7UuMHV87MV/tcvEA0Gg88JrKgI5LmvQ8BDkrfoSi+bchk1KTAqJ8YMvL2pOogXbBoONeJS176zLYpLHmONtIDQFz/gEqAjGQVW+j4J+1w8oWrn8EjtcDe2kY34s3PDLioK3BN9CIBBQur+SH25R0RnEqD0YPFT7/ym0LomtPOS0t72n5JejBTfWaXiqb/I4f2Ypy1PA6fV5UUFIHODpNtuS4g2HKKqDS/sgYRBA2gpN2MmqeqgsQmSy+EljHdUe4KDVqAZ/qxLqnbp47BGHw2xjuZ60nXAoRecWCg2GDbx13ga4dKUQY+ER8Jruz7ILK4MRB7E4SjSUVmgcdh534c51BYIdI2HkQwQU2dgyJyQme9sDQxxGHpYKFQlFSyXUeOSjXLtQEAAQA= qiaozhou_15694163938@h2sqyfpc71g1t2w")
        ```

        ## Import

        Cloud Phone Key Pair can be imported using the id, e.g.

        ```sh
        $ pulumi import alicloud:cloudphone/keyPair:KeyPair example <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] key_pair_name: ADB key pair name.
        :param pulumi.Input[str] public_key_body: The public key of the key pair.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: KeyPairArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a Cloud Phone Key Pair resource.

        Cloud Phone KeyPair.

        For information about Cloud Phone Key Pair and how to use it, see [What is Key Pair](https://next.api.alibabacloud.com/document/eds-aic/2023-09-30/CreateKeyPair).

        > **NOTE:** Available since v1.243.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        config = pulumi.Config()
        name = config.get("name")
        if name is None:
            name = "terraform-example"
        defaultj_z1gi0 = alicloud.cloudphone.Policy("defaultjZ1gi0")
        default_yh_ml_to = alicloud.cloudphoneinstance.Group("defaultYHMlTO",
            instance_group_spec="acp.basic.small",
            policy_group_id=defaultj_z1gi0.id,
            instance_group_name="AutoCreateGroupName",
            period=1,
            number_of_instances=1,
            charge_type="PostPaid",
            image_id="imgc-075cllfeuazh03tg9",
            period_unit="Hour",
            auto_renew=False,
            amount=1,
            auto_pay=False,
            gpu_acceleration=False)
        defaulthd_bep1 = alicloud.cloudphoneinstance.CloudPhoneInstance("defaulthdBep1",
            android_instance_group_id=default_yh_ml_to.id,
            android_instance_name="CreateInstanceName")
        default = alicloud.cloudphone.KeyPair("default",
            key_pair_name="example",
            public_key_body="QAAAAH0o+PMrbz9ZlxaNMYlk1rJkN4JXqwSUVYW5YzMW3fWJ7At1XO40GYDEFL43fLob52pmRxRDuRoGAELmS1AyzqUle2v9yGKFziqS/vK/4vM4MW/ppnTmvh9zPXir0fB/uwXS4iS6xt0gmvprgyRNs7hgXtBK9ASiGuPCv47aRJqh9mYzq2pe2rgb+K0OU5/nQXwWKSxYsv+w3KWPshpwx8iF/JWvjixILJ5gygndd+1HyE8jrLVmvm/OitNaMgkolY1bvmRVVKLmzde7FtXw0s4TVfYUvF385gwlrOulKcL7UuMHV87MV/tcvEA0Gg88JrKgI5LmvQ8BDkrfoSi+bchk1KTAqJ8YMvL2pOogXbBoONeJS176zLYpLHmONtIDQFz/gEqAjGQVW+j4J+1w8oWrn8EjtcDe2kY34s3PDLioK3BN9CIBBQur+SH25R0RnEqD0YPFT7/ym0LomtPOS0t72n5JejBTfWaXiqb/I4f2Ypy1PA6fV5UUFIHODpNtuS4g2HKKqDS/sgYRBA2gpN2MmqeqgsQmSy+EljHdUe4KDVqAZ/qxLqnbp47BGHw2xjuZ60nXAoRecWCg2GDbx13ga4dKUQY+ER8Jruz7ILK4MRB7E4SjSUVmgcdh534c51BYIdI2HkQwQU2dgyJyQme9sDQxxGHpYKFQlFSyXUeOSjXLtQEAAQA= qiaozhou_15694163938@h2sqyfpc71g1t2w")
        ```

        ## Import

        Cloud Phone Key Pair can be imported using the id, e.g.

        ```sh
        $ pulumi import alicloud:cloudphone/keyPair:KeyPair example <id>
        ```

        :param str resource_name: The name of the resource.
        :param KeyPairArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(KeyPairArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 key_pair_name: Optional[pulumi.Input[str]] = None,
                 public_key_body: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = KeyPairArgs.__new__(KeyPairArgs)

            if key_pair_name is None and not opts.urn:
                raise TypeError("Missing required property 'key_pair_name'")
            __props__.__dict__["key_pair_name"] = key_pair_name
            __props__.__dict__["public_key_body"] = public_key_body
        super(KeyPair, __self__).__init__(
            'alicloud:cloudphone/keyPair:KeyPair',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            key_pair_name: Optional[pulumi.Input[str]] = None,
            public_key_body: Optional[pulumi.Input[str]] = None) -> 'KeyPair':
        """
        Get an existing KeyPair resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] key_pair_name: ADB key pair name.
        :param pulumi.Input[str] public_key_body: The public key of the key pair.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _KeyPairState.__new__(_KeyPairState)

        __props__.__dict__["key_pair_name"] = key_pair_name
        __props__.__dict__["public_key_body"] = public_key_body
        return KeyPair(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="keyPairName")
    def key_pair_name(self) -> pulumi.Output[str]:
        """
        ADB key pair name.
        """
        return pulumi.get(self, "key_pair_name")

    @property
    @pulumi.getter(name="publicKeyBody")
    def public_key_body(self) -> pulumi.Output[Optional[str]]:
        """
        The public key of the key pair.
        """
        return pulumi.get(self, "public_key_body")

