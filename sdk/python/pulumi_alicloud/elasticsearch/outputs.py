# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = [
    'GetInstancesInstanceResult',
    'GetZonesZoneResult',
]

@pulumi.output_type
class GetInstancesInstanceResult(dict):
    def __init__(__self__, *,
                 created_at: str,
                 data_node_amount: int,
                 data_node_disk_size: int,
                 data_node_disk_type: str,
                 data_node_spec: str,
                 description: str,
                 id: str,
                 instance_charge_type: str,
                 status: str,
                 tags: Mapping[str, Any],
                 updated_at: str,
                 version: str,
                 vswitch_id: str):
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "data_node_amount", data_node_amount)
        pulumi.set(__self__, "data_node_disk_size", data_node_disk_size)
        pulumi.set(__self__, "data_node_disk_type", data_node_disk_type)
        pulumi.set(__self__, "data_node_spec", data_node_spec)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_charge_type", instance_charge_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "updated_at", updated_at)
        pulumi.set(__self__, "version", version)
        pulumi.set(__self__, "vswitch_id", vswitch_id)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> str:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="dataNodeAmount")
    def data_node_amount(self) -> int:
        return pulumi.get(self, "data_node_amount")

    @property
    @pulumi.getter(name="dataNodeDiskSize")
    def data_node_disk_size(self) -> int:
        return pulumi.get(self, "data_node_disk_size")

    @property
    @pulumi.getter(name="dataNodeDiskType")
    def data_node_disk_type(self) -> str:
        return pulumi.get(self, "data_node_disk_type")

    @property
    @pulumi.getter(name="dataNodeSpec")
    def data_node_spec(self) -> str:
        return pulumi.get(self, "data_node_spec")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> str:
        return pulumi.get(self, "instance_charge_type")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, Any]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> str:
        return pulumi.get(self, "updated_at")

    @property
    @pulumi.getter
    def version(self) -> str:
        return pulumi.get(self, "version")

    @property
    @pulumi.getter(name="vswitchId")
    def vswitch_id(self) -> str:
        return pulumi.get(self, "vswitch_id")


@pulumi.output_type
class GetZonesZoneResult(dict):
    def __init__(__self__, *,
                 id: str,
                 multi_zone_ids: Sequence[str]):
        """
        :param str id: ID of the zone.
        :param Sequence[str] multi_zone_ids: A list of zone ids in which the multi zone.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "multi_zone_ids", multi_zone_ids)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the zone.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="multiZoneIds")
    def multi_zone_ids(self) -> Sequence[str]:
        """
        A list of zone ids in which the multi zone.
        """
        return pulumi.get(self, "multi_zone_ids")


