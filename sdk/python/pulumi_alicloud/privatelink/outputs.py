# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetVpcEndpointConnectionsConnectionResult',
    'GetVpcEndpointServiceResourcesResourceResult',
    'GetVpcEndpointServiceUsersUserResult',
    'GetVpcEndpointServicesServiceResult',
    'GetVpcEndpointZonesZoneResult',
    'GetVpcEndpointsEndpointResult',
]

@pulumi.output_type
class GetVpcEndpointConnectionsConnectionResult(dict):
    def __init__(__self__, *,
                 bandwidth: builtins.int,
                 endpoint_id: builtins.str,
                 id: builtins.str,
                 status: builtins.str):
        """
        :param builtins.int bandwidth: The Bandwidth.
        :param builtins.str endpoint_id: The ID of the Vpc Endpoint.
        :param builtins.str id: The ID of the Vpc Endpoint Connection.
        :param builtins.str status: The status of Vpc Endpoint Connection. Valid Values: `Connected`, `Connecting`, `Deleted`, `Deleting`, `Disconnected`, `Disconnecting`, `Pending` and `ServiceDeleted`.
        """
        pulumi.set(__self__, "bandwidth", bandwidth)
        pulumi.set(__self__, "endpoint_id", endpoint_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def bandwidth(self) -> builtins.int:
        """
        The Bandwidth.
        """
        return pulumi.get(self, "bandwidth")

    @property
    @pulumi.getter(name="endpointId")
    def endpoint_id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint.
        """
        return pulumi.get(self, "endpoint_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint Connection.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of Vpc Endpoint Connection. Valid Values: `Connected`, `Connecting`, `Deleted`, `Deleting`, `Disconnected`, `Disconnecting`, `Pending` and `ServiceDeleted`.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class GetVpcEndpointServiceResourcesResourceResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 resource_id: builtins.str,
                 resource_type: builtins.str):
        """
        :param builtins.str id: The ID of the Vpc Endpoint Service Resource.
        :param builtins.str resource_id: The ID of Resource.
        :param builtins.str resource_type: The type of Resource.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "resource_type", resource_type)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint Service Resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> builtins.str:
        """
        The ID of Resource.
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> builtins.str:
        """
        The type of Resource.
        """
        return pulumi.get(self, "resource_type")


@pulumi.output_type
class GetVpcEndpointServiceUsersUserResult(dict):
    def __init__(__self__, *,
                 id: builtins.str,
                 user_id: builtins.str):
        """
        :param builtins.str id: The ID of the Vpc Endpoint Service User.
        :param builtins.str user_id: The Id of Ram User.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "user_id", user_id)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint Service User.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> builtins.str:
        """
        The Id of Ram User.
        """
        return pulumi.get(self, "user_id")


@pulumi.output_type
class GetVpcEndpointServicesServiceResult(dict):
    def __init__(__self__, *,
                 auto_accept_connection: builtins.bool,
                 connect_bandwidth: builtins.int,
                 id: builtins.str,
                 service_business_status: builtins.str,
                 service_description: builtins.str,
                 service_domain: builtins.str,
                 service_id: builtins.str,
                 status: builtins.str,
                 tags: Mapping[str, builtins.str],
                 vpc_endpoint_service_name: builtins.str):
        """
        :param builtins.bool auto_accept_connection: Whether to automatically accept terminal node connections.
        :param builtins.int connect_bandwidth: The connection bandwidth.
        :param builtins.str id: The ID of the Vpc Endpoint Service.
        :param builtins.str service_business_status: The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
        :param builtins.str service_description: The description of the terminal node service.
        :param builtins.str service_domain: The domain of service.
        :param builtins.str service_id: The ID of the Vpc Endpoint Service.
        :param builtins.str status: The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
        :param Mapping[str, builtins.str] tags: The tags of Vpc Endpoint Service.
        :param builtins.str vpc_endpoint_service_name: The name of Vpc Endpoint Service.
        """
        pulumi.set(__self__, "auto_accept_connection", auto_accept_connection)
        pulumi.set(__self__, "connect_bandwidth", connect_bandwidth)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "service_business_status", service_business_status)
        pulumi.set(__self__, "service_description", service_description)
        pulumi.set(__self__, "service_domain", service_domain)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "vpc_endpoint_service_name", vpc_endpoint_service_name)

    @property
    @pulumi.getter(name="autoAcceptConnection")
    def auto_accept_connection(self) -> builtins.bool:
        """
        Whether to automatically accept terminal node connections.
        """
        return pulumi.get(self, "auto_accept_connection")

    @property
    @pulumi.getter(name="connectBandwidth")
    def connect_bandwidth(self) -> builtins.int:
        """
        The connection bandwidth.
        """
        return pulumi.get(self, "connect_bandwidth")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint Service.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="serviceBusinessStatus")
    def service_business_status(self) -> builtins.str:
        """
        The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
        """
        return pulumi.get(self, "service_business_status")

    @property
    @pulumi.getter(name="serviceDescription")
    def service_description(self) -> builtins.str:
        """
        The description of the terminal node service.
        """
        return pulumi.get(self, "service_description")

    @property
    @pulumi.getter(name="serviceDomain")
    def service_domain(self) -> builtins.str:
        """
        The domain of service.
        """
        return pulumi.get(self, "service_domain")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint Service.
        """
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, builtins.str]:
        """
        The tags of Vpc Endpoint Service.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="vpcEndpointServiceName")
    def vpc_endpoint_service_name(self) -> builtins.str:
        """
        The name of Vpc Endpoint Service.
        """
        return pulumi.get(self, "vpc_endpoint_service_name")


@pulumi.output_type
class GetVpcEndpointZonesZoneResult(dict):
    def __init__(__self__, *,
                 eni_id: builtins.str,
                 eni_ip: builtins.str,
                 id: builtins.str,
                 status: builtins.str,
                 vswitch_id: builtins.str,
                 zone_domain: builtins.str,
                 zone_id: builtins.str):
        """
        :param builtins.str eni_id: Terminal node network card.
        :param builtins.str eni_ip: IP address of the terminal node network card.
        :param builtins.str id: The ID of the Vpc Endpoint Zone.
        :param builtins.str status: The Status of Vpc Endpoint Zone. Valid Values: `Connected`, `Connecting`, `Creating`, `Deleted`, `Deleting`, `Disconnected`, `Disconnecting` and `Wait`.
        :param builtins.str vswitch_id: The vSwitch id.
        :param builtins.str zone_domain: The Zone Domain.
        :param builtins.str zone_id: The Zone Id.
        """
        pulumi.set(__self__, "eni_id", eni_id)
        pulumi.set(__self__, "eni_ip", eni_ip)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "vswitch_id", vswitch_id)
        pulumi.set(__self__, "zone_domain", zone_domain)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="eniId")
    def eni_id(self) -> builtins.str:
        """
        Terminal node network card.
        """
        return pulumi.get(self, "eni_id")

    @property
    @pulumi.getter(name="eniIp")
    def eni_ip(self) -> builtins.str:
        """
        IP address of the terminal node network card.
        """
        return pulumi.get(self, "eni_ip")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint Zone.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The Status of Vpc Endpoint Zone. Valid Values: `Connected`, `Connecting`, `Creating`, `Deleted`, `Deleting`, `Disconnected`, `Disconnecting` and `Wait`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="vswitchId")
    def vswitch_id(self) -> builtins.str:
        """
        The vSwitch id.
        """
        return pulumi.get(self, "vswitch_id")

    @property
    @pulumi.getter(name="zoneDomain")
    def zone_domain(self) -> builtins.str:
        """
        The Zone Domain.
        """
        return pulumi.get(self, "zone_domain")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> builtins.str:
        """
        The Zone Id.
        """
        return pulumi.get(self, "zone_id")


@pulumi.output_type
class GetVpcEndpointsEndpointResult(dict):
    def __init__(__self__, *,
                 bandwidth: builtins.int,
                 connection_status: builtins.str,
                 endpoint_business_status: builtins.str,
                 endpoint_description: builtins.str,
                 endpoint_domain: builtins.str,
                 endpoint_id: builtins.str,
                 id: builtins.str,
                 security_group_ids: Sequence[builtins.str],
                 service_id: builtins.str,
                 service_name: builtins.str,
                 status: builtins.str,
                 tags: Mapping[str, builtins.str],
                 vpc_endpoint_name: builtins.str,
                 vpc_id: builtins.str):
        """
        :param builtins.int bandwidth: The Bandwidth.
        :param builtins.str connection_status: The status of Connection.
        :param builtins.str endpoint_business_status: The status of Endpoint Business.
        :param builtins.str endpoint_description: The description of Vpc Endpoint.
        :param builtins.str endpoint_domain: The Endpoint Domain.
        :param builtins.str endpoint_id: The ID of the Vpc Endpoint.
        :param builtins.str id: The ID of the Vpc Endpoint.
        :param Sequence[builtins.str] security_group_ids: The security group associated with the terminal node network card.
        :param builtins.str service_id: The terminal node service associated with the terminal node.
        :param builtins.str service_name: The name of the terminal node service associated with the terminal node.
        :param builtins.str status: The status of Vpc Endpoint.
        :param Mapping[str, builtins.str] tags: Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
        :param builtins.str vpc_endpoint_name: The name of Vpc Endpoint.
        :param builtins.str vpc_id: The private network to which the terminal node belongs..
        """
        pulumi.set(__self__, "bandwidth", bandwidth)
        pulumi.set(__self__, "connection_status", connection_status)
        pulumi.set(__self__, "endpoint_business_status", endpoint_business_status)
        pulumi.set(__self__, "endpoint_description", endpoint_description)
        pulumi.set(__self__, "endpoint_domain", endpoint_domain)
        pulumi.set(__self__, "endpoint_id", endpoint_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "security_group_ids", security_group_ids)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "service_name", service_name)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "vpc_endpoint_name", vpc_endpoint_name)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter
    def bandwidth(self) -> builtins.int:
        """
        The Bandwidth.
        """
        return pulumi.get(self, "bandwidth")

    @property
    @pulumi.getter(name="connectionStatus")
    def connection_status(self) -> builtins.str:
        """
        The status of Connection.
        """
        return pulumi.get(self, "connection_status")

    @property
    @pulumi.getter(name="endpointBusinessStatus")
    def endpoint_business_status(self) -> builtins.str:
        """
        The status of Endpoint Business.
        """
        return pulumi.get(self, "endpoint_business_status")

    @property
    @pulumi.getter(name="endpointDescription")
    def endpoint_description(self) -> builtins.str:
        """
        The description of Vpc Endpoint.
        """
        return pulumi.get(self, "endpoint_description")

    @property
    @pulumi.getter(name="endpointDomain")
    def endpoint_domain(self) -> builtins.str:
        """
        The Endpoint Domain.
        """
        return pulumi.get(self, "endpoint_domain")

    @property
    @pulumi.getter(name="endpointId")
    def endpoint_id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint.
        """
        return pulumi.get(self, "endpoint_id")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The ID of the Vpc Endpoint.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Sequence[builtins.str]:
        """
        The security group associated with the terminal node network card.
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> builtins.str:
        """
        The terminal node service associated with the terminal node.
        """
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> builtins.str:
        """
        The name of the terminal node service associated with the terminal node.
        """
        return pulumi.get(self, "service_name")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        The status of Vpc Endpoint.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, builtins.str]:
        """
        Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="vpcEndpointName")
    def vpc_endpoint_name(self) -> builtins.str:
        """
        The name of Vpc Endpoint.
        """
        return pulumi.get(self, "vpc_endpoint_name")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> builtins.str:
        """
        The private network to which the terminal node belongs..
        """
        return pulumi.get(self, "vpc_id")


