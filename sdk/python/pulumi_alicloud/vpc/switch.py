# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['SwitchArgs', 'Switch']

@pulumi.input_type
class SwitchArgs:
    def __init__(__self__, *,
                 cidr_block: pulumi.Input[str],
                 vpc_id: pulumi.Input[str],
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enable_ipv6: Optional[pulumi.Input[bool]] = None,
                 ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 vswitch_name: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Switch resource.
        :param pulumi.Input[str] cidr_block: The IPv4 CIDR block of the VSwitch.
        :param pulumi.Input[str] vpc_id: The VPC ID.
               
               The following arguments will be discarded. Please use new fields as soon as possible:
        :param pulumi.Input[str] availability_zone: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        :param pulumi.Input[str] description: The description of VSwitch.
        :param pulumi.Input[bool] enable_ipv6: Whether the IPv6 function is enabled in the switch. Value:
               - **true**: enables IPv6.
               - **false** (default): IPv6 is not enabled.
        :param pulumi.Input[int] ipv6_cidr_block_mask: The IPv6 CIDR block of the VSwitch.
        :param pulumi.Input[str] name: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        :param pulumi.Input[Mapping[str, Any]] tags: The tags of VSwitch.
        :param pulumi.Input[str] vswitch_name: The name of the VSwitch.
        :param pulumi.Input[str] zone_id: The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        SwitchArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            cidr_block=cidr_block,
            vpc_id=vpc_id,
            availability_zone=availability_zone,
            description=description,
            enable_ipv6=enable_ipv6,
            ipv6_cidr_block_mask=ipv6_cidr_block_mask,
            name=name,
            tags=tags,
            vswitch_name=vswitch_name,
            zone_id=zone_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             cidr_block: pulumi.Input[str],
             vpc_id: pulumi.Input[str],
             availability_zone: Optional[pulumi.Input[str]] = None,
             description: Optional[pulumi.Input[str]] = None,
             enable_ipv6: Optional[pulumi.Input[bool]] = None,
             ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
             name: Optional[pulumi.Input[str]] = None,
             tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             vswitch_name: Optional[pulumi.Input[str]] = None,
             zone_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'cidrBlock' in kwargs:
            cidr_block = kwargs['cidrBlock']
        if 'vpcId' in kwargs:
            vpc_id = kwargs['vpcId']
        if 'availabilityZone' in kwargs:
            availability_zone = kwargs['availabilityZone']
        if 'enableIpv6' in kwargs:
            enable_ipv6 = kwargs['enableIpv6']
        if 'ipv6CidrBlockMask' in kwargs:
            ipv6_cidr_block_mask = kwargs['ipv6CidrBlockMask']
        if 'vswitchName' in kwargs:
            vswitch_name = kwargs['vswitchName']
        if 'zoneId' in kwargs:
            zone_id = kwargs['zoneId']

        _setter("cidr_block", cidr_block)
        _setter("vpc_id", vpc_id)
        if availability_zone is not None:
            warnings.warn("""Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""", DeprecationWarning)
            pulumi.log.warn("""availability_zone is deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""")
        if availability_zone is not None:
            _setter("availability_zone", availability_zone)
        if description is not None:
            _setter("description", description)
        if enable_ipv6 is not None:
            _setter("enable_ipv6", enable_ipv6)
        if ipv6_cidr_block_mask is not None:
            _setter("ipv6_cidr_block_mask", ipv6_cidr_block_mask)
        if name is not None:
            warnings.warn("""Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""", DeprecationWarning)
            pulumi.log.warn("""name is deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""")
        if name is not None:
            _setter("name", name)
        if tags is not None:
            _setter("tags", tags)
        if vswitch_name is not None:
            _setter("vswitch_name", vswitch_name)
        if zone_id is not None:
            _setter("zone_id", zone_id)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> pulumi.Input[str]:
        """
        The IPv4 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "cidr_block")

    @cidr_block.setter
    def cidr_block(self, value: pulumi.Input[str]):
        pulumi.set(self, "cidr_block", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[str]:
        """
        The VPC ID.

        The following arguments will be discarded. Please use new fields as soon as possible:
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        """
        warnings.warn("""Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""", DeprecationWarning)
        pulumi.log.warn("""availability_zone is deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""")

        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "availability_zone", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of VSwitch.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="enableIpv6")
    def enable_ipv6(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the IPv6 function is enabled in the switch. Value:
        - **true**: enables IPv6.
        - **false** (default): IPv6 is not enabled.
        """
        return pulumi.get(self, "enable_ipv6")

    @enable_ipv6.setter
    def enable_ipv6(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_ipv6", value)

    @property
    @pulumi.getter(name="ipv6CidrBlockMask")
    def ipv6_cidr_block_mask(self) -> Optional[pulumi.Input[int]]:
        """
        The IPv6 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "ipv6_cidr_block_mask")

    @ipv6_cidr_block_mask.setter
    def ipv6_cidr_block_mask(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ipv6_cidr_block_mask", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        """
        warnings.warn("""Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""", DeprecationWarning)
        pulumi.log.warn("""name is deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""")

        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        The tags of VSwitch.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="vswitchName")
    def vswitch_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the VSwitch.
        """
        return pulumi.get(self, "vswitch_name")

    @vswitch_name.setter
    def vswitch_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vswitch_name", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)


@pulumi.input_type
class _SwitchState:
    def __init__(__self__, *,
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 cidr_block: Optional[pulumi.Input[str]] = None,
                 create_time: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enable_ipv6: Optional[pulumi.Input[bool]] = None,
                 ipv6_cidr_block: Optional[pulumi.Input[str]] = None,
                 ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vswitch_name: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Switch resources.
        :param pulumi.Input[str] availability_zone: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        :param pulumi.Input[str] cidr_block: The IPv4 CIDR block of the VSwitch.
        :param pulumi.Input[str] create_time: The creation time of the VSwitch.
        :param pulumi.Input[str] description: The description of VSwitch.
        :param pulumi.Input[bool] enable_ipv6: Whether the IPv6 function is enabled in the switch. Value:
               - **true**: enables IPv6.
               - **false** (default): IPv6 is not enabled.
        :param pulumi.Input[str] ipv6_cidr_block: The IPv6 CIDR block of the VSwitch.
        :param pulumi.Input[int] ipv6_cidr_block_mask: The IPv6 CIDR block of the VSwitch.
        :param pulumi.Input[str] name: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        :param pulumi.Input[str] status: The status of the resource.
        :param pulumi.Input[Mapping[str, Any]] tags: The tags of VSwitch.
        :param pulumi.Input[str] vpc_id: The VPC ID.
               
               The following arguments will be discarded. Please use new fields as soon as possible:
        :param pulumi.Input[str] vswitch_name: The name of the VSwitch.
        :param pulumi.Input[str] zone_id: The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        _SwitchState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            availability_zone=availability_zone,
            cidr_block=cidr_block,
            create_time=create_time,
            description=description,
            enable_ipv6=enable_ipv6,
            ipv6_cidr_block=ipv6_cidr_block,
            ipv6_cidr_block_mask=ipv6_cidr_block_mask,
            name=name,
            status=status,
            tags=tags,
            vpc_id=vpc_id,
            vswitch_name=vswitch_name,
            zone_id=zone_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             availability_zone: Optional[pulumi.Input[str]] = None,
             cidr_block: Optional[pulumi.Input[str]] = None,
             create_time: Optional[pulumi.Input[str]] = None,
             description: Optional[pulumi.Input[str]] = None,
             enable_ipv6: Optional[pulumi.Input[bool]] = None,
             ipv6_cidr_block: Optional[pulumi.Input[str]] = None,
             ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
             name: Optional[pulumi.Input[str]] = None,
             status: Optional[pulumi.Input[str]] = None,
             tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
             vpc_id: Optional[pulumi.Input[str]] = None,
             vswitch_name: Optional[pulumi.Input[str]] = None,
             zone_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):
        if 'availabilityZone' in kwargs:
            availability_zone = kwargs['availabilityZone']
        if 'cidrBlock' in kwargs:
            cidr_block = kwargs['cidrBlock']
        if 'createTime' in kwargs:
            create_time = kwargs['createTime']
        if 'enableIpv6' in kwargs:
            enable_ipv6 = kwargs['enableIpv6']
        if 'ipv6CidrBlock' in kwargs:
            ipv6_cidr_block = kwargs['ipv6CidrBlock']
        if 'ipv6CidrBlockMask' in kwargs:
            ipv6_cidr_block_mask = kwargs['ipv6CidrBlockMask']
        if 'vpcId' in kwargs:
            vpc_id = kwargs['vpcId']
        if 'vswitchName' in kwargs:
            vswitch_name = kwargs['vswitchName']
        if 'zoneId' in kwargs:
            zone_id = kwargs['zoneId']

        if availability_zone is not None:
            warnings.warn("""Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""", DeprecationWarning)
            pulumi.log.warn("""availability_zone is deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""")
        if availability_zone is not None:
            _setter("availability_zone", availability_zone)
        if cidr_block is not None:
            _setter("cidr_block", cidr_block)
        if create_time is not None:
            _setter("create_time", create_time)
        if description is not None:
            _setter("description", description)
        if enable_ipv6 is not None:
            _setter("enable_ipv6", enable_ipv6)
        if ipv6_cidr_block is not None:
            _setter("ipv6_cidr_block", ipv6_cidr_block)
        if ipv6_cidr_block_mask is not None:
            _setter("ipv6_cidr_block_mask", ipv6_cidr_block_mask)
        if name is not None:
            warnings.warn("""Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""", DeprecationWarning)
            pulumi.log.warn("""name is deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""")
        if name is not None:
            _setter("name", name)
        if status is not None:
            _setter("status", status)
        if tags is not None:
            _setter("tags", tags)
        if vpc_id is not None:
            _setter("vpc_id", vpc_id)
        if vswitch_name is not None:
            _setter("vswitch_name", vswitch_name)
        if zone_id is not None:
            _setter("zone_id", zone_id)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        """
        warnings.warn("""Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""", DeprecationWarning)
        pulumi.log.warn("""availability_zone is deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""")

        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "availability_zone", value)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> Optional[pulumi.Input[str]]:
        """
        The IPv4 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "cidr_block")

    @cidr_block.setter
    def cidr_block(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cidr_block", value)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[str]]:
        """
        The creation time of the VSwitch.
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_time", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of VSwitch.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="enableIpv6")
    def enable_ipv6(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the IPv6 function is enabled in the switch. Value:
        - **true**: enables IPv6.
        - **false** (default): IPv6 is not enabled.
        """
        return pulumi.get(self, "enable_ipv6")

    @enable_ipv6.setter
    def enable_ipv6(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_ipv6", value)

    @property
    @pulumi.getter(name="ipv6CidrBlock")
    def ipv6_cidr_block(self) -> Optional[pulumi.Input[str]]:
        """
        The IPv6 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "ipv6_cidr_block")

    @ipv6_cidr_block.setter
    def ipv6_cidr_block(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipv6_cidr_block", value)

    @property
    @pulumi.getter(name="ipv6CidrBlockMask")
    def ipv6_cidr_block_mask(self) -> Optional[pulumi.Input[int]]:
        """
        The IPv6 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "ipv6_cidr_block_mask")

    @ipv6_cidr_block_mask.setter
    def ipv6_cidr_block_mask(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ipv6_cidr_block_mask", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        """
        warnings.warn("""Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""", DeprecationWarning)
        pulumi.log.warn("""name is deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""")

        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the resource.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        The tags of VSwitch.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        The VPC ID.

        The following arguments will be discarded. Please use new fields as soon as possible:
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="vswitchName")
    def vswitch_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the VSwitch.
        """
        return pulumi.get(self, "vswitch_name")

    @vswitch_name.setter
    def vswitch_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vswitch_name", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)


class Switch(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 cidr_block: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enable_ipv6: Optional[pulumi.Input[bool]] = None,
                 ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vswitch_name: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a VPC Vswitch resource. ## Module Support

        You can use to the existing vpc module  to create a VPC and several VSwitches one-click.

        For information about VPC Vswitch and how to use it, see [What is Vswitch](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/work-with-vswitches).

        > **NOTE:** Available since v1.0.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        foo_zones = alicloud.get_zones(available_resource_creation="VSwitch")
        foo_network = alicloud.vpc.Network("fooNetwork",
            vpc_name="terraform-example",
            cidr_block="172.16.0.0/12")
        foo_switch = alicloud.vpc.Switch("fooSwitch",
            vswitch_name="terraform-example",
            cidr_block="172.16.0.0/21",
            vpc_id=foo_network.id,
            zone_id=foo_zones.zones[0].id)
        ```

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        foo = alicloud.get_zones(available_resource_creation="VSwitch")
        vpc = alicloud.vpc.Network("vpc",
            vpc_name="terraform-example",
            cidr_block="172.16.0.0/12")
        cidr_blocks = alicloud.vpc.Ipv4CidrBlock("cidrBlocks",
            vpc_id=vpc.id,
            secondary_cidr_block="192.163.0.0/16")
        island_nat = alicloud.vpc.Switch("island-nat",
            vpc_id=cidr_blocks.vpc_id,
            cidr_block="172.16.0.0/21",
            zone_id=foo.zones[0].id,
            vswitch_name="terraform-example",
            tags={
                "BuiltBy": "example_value",
                "cnm_version": "example_value",
                "Environment": "example_value",
                "ManagedBy": "example_value",
            })
        ```

        Create a switch associated with the additional network segment

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        foo_zones = alicloud.get_zones(available_resource_creation="VSwitch")
        foo_network = alicloud.vpc.Network("fooNetwork",
            vpc_name="terraform-example",
            cidr_block="172.16.0.0/12")
        foo_ipv4_cidr_block = alicloud.vpc.Ipv4CidrBlock("fooIpv4CidrBlock",
            vpc_id=foo_network.id,
            secondary_cidr_block="192.163.0.0/16")
        foo_switch = alicloud.vpc.Switch("fooSwitch",
            vpc_id=foo_ipv4_cidr_block.vpc_id,
            cidr_block="192.163.0.0/24",
            zone_id=foo_zones.zones[0].id)
        ```

        ## Import

        VPC Vswitch can be imported using the id, e.g.

        ```sh
         $ pulumi import alicloud:vpc/switch:Switch example <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] availability_zone: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        :param pulumi.Input[str] cidr_block: The IPv4 CIDR block of the VSwitch.
        :param pulumi.Input[str] description: The description of VSwitch.
        :param pulumi.Input[bool] enable_ipv6: Whether the IPv6 function is enabled in the switch. Value:
               - **true**: enables IPv6.
               - **false** (default): IPv6 is not enabled.
        :param pulumi.Input[int] ipv6_cidr_block_mask: The IPv6 CIDR block of the VSwitch.
        :param pulumi.Input[str] name: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        :param pulumi.Input[Mapping[str, Any]] tags: The tags of VSwitch.
        :param pulumi.Input[str] vpc_id: The VPC ID.
               
               The following arguments will be discarded. Please use new fields as soon as possible:
        :param pulumi.Input[str] vswitch_name: The name of the VSwitch.
        :param pulumi.Input[str] zone_id: The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SwitchArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a VPC Vswitch resource. ## Module Support

        You can use to the existing vpc module  to create a VPC and several VSwitches one-click.

        For information about VPC Vswitch and how to use it, see [What is Vswitch](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/work-with-vswitches).

        > **NOTE:** Available since v1.0.0.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        foo_zones = alicloud.get_zones(available_resource_creation="VSwitch")
        foo_network = alicloud.vpc.Network("fooNetwork",
            vpc_name="terraform-example",
            cidr_block="172.16.0.0/12")
        foo_switch = alicloud.vpc.Switch("fooSwitch",
            vswitch_name="terraform-example",
            cidr_block="172.16.0.0/21",
            vpc_id=foo_network.id,
            zone_id=foo_zones.zones[0].id)
        ```

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        foo = alicloud.get_zones(available_resource_creation="VSwitch")
        vpc = alicloud.vpc.Network("vpc",
            vpc_name="terraform-example",
            cidr_block="172.16.0.0/12")
        cidr_blocks = alicloud.vpc.Ipv4CidrBlock("cidrBlocks",
            vpc_id=vpc.id,
            secondary_cidr_block="192.163.0.0/16")
        island_nat = alicloud.vpc.Switch("island-nat",
            vpc_id=cidr_blocks.vpc_id,
            cidr_block="172.16.0.0/21",
            zone_id=foo.zones[0].id,
            vswitch_name="terraform-example",
            tags={
                "BuiltBy": "example_value",
                "cnm_version": "example_value",
                "Environment": "example_value",
                "ManagedBy": "example_value",
            })
        ```

        Create a switch associated with the additional network segment

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        foo_zones = alicloud.get_zones(available_resource_creation="VSwitch")
        foo_network = alicloud.vpc.Network("fooNetwork",
            vpc_name="terraform-example",
            cidr_block="172.16.0.0/12")
        foo_ipv4_cidr_block = alicloud.vpc.Ipv4CidrBlock("fooIpv4CidrBlock",
            vpc_id=foo_network.id,
            secondary_cidr_block="192.163.0.0/16")
        foo_switch = alicloud.vpc.Switch("fooSwitch",
            vpc_id=foo_ipv4_cidr_block.vpc_id,
            cidr_block="192.163.0.0/24",
            zone_id=foo_zones.zones[0].id)
        ```

        ## Import

        VPC Vswitch can be imported using the id, e.g.

        ```sh
         $ pulumi import alicloud:vpc/switch:Switch example <id>
        ```

        :param str resource_name: The name of the resource.
        :param SwitchArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SwitchArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            SwitchArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 availability_zone: Optional[pulumi.Input[str]] = None,
                 cidr_block: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enable_ipv6: Optional[pulumi.Input[bool]] = None,
                 ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 vswitch_name: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SwitchArgs.__new__(SwitchArgs)

            __props__.__dict__["availability_zone"] = availability_zone
            if cidr_block is None and not opts.urn:
                raise TypeError("Missing required property 'cidr_block'")
            __props__.__dict__["cidr_block"] = cidr_block
            __props__.__dict__["description"] = description
            __props__.__dict__["enable_ipv6"] = enable_ipv6
            __props__.__dict__["ipv6_cidr_block_mask"] = ipv6_cidr_block_mask
            __props__.__dict__["name"] = name
            __props__.__dict__["tags"] = tags
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["vswitch_name"] = vswitch_name
            __props__.__dict__["zone_id"] = zone_id
            __props__.__dict__["create_time"] = None
            __props__.__dict__["ipv6_cidr_block"] = None
            __props__.__dict__["status"] = None
        super(Switch, __self__).__init__(
            'alicloud:vpc/switch:Switch',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            availability_zone: Optional[pulumi.Input[str]] = None,
            cidr_block: Optional[pulumi.Input[str]] = None,
            create_time: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            enable_ipv6: Optional[pulumi.Input[bool]] = None,
            ipv6_cidr_block: Optional[pulumi.Input[str]] = None,
            ipv6_cidr_block_mask: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            vpc_id: Optional[pulumi.Input[str]] = None,
            vswitch_name: Optional[pulumi.Input[str]] = None,
            zone_id: Optional[pulumi.Input[str]] = None) -> 'Switch':
        """
        Get an existing Switch resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] availability_zone: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        :param pulumi.Input[str] cidr_block: The IPv4 CIDR block of the VSwitch.
        :param pulumi.Input[str] create_time: The creation time of the VSwitch.
        :param pulumi.Input[str] description: The description of VSwitch.
        :param pulumi.Input[bool] enable_ipv6: Whether the IPv6 function is enabled in the switch. Value:
               - **true**: enables IPv6.
               - **false** (default): IPv6 is not enabled.
        :param pulumi.Input[str] ipv6_cidr_block: The IPv6 CIDR block of the VSwitch.
        :param pulumi.Input[int] ipv6_cidr_block_mask: The IPv6 CIDR block of the VSwitch.
        :param pulumi.Input[str] name: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        :param pulumi.Input[str] status: The status of the resource.
        :param pulumi.Input[Mapping[str, Any]] tags: The tags of VSwitch.
        :param pulumi.Input[str] vpc_id: The VPC ID.
               
               The following arguments will be discarded. Please use new fields as soon as possible:
        :param pulumi.Input[str] vswitch_name: The name of the VSwitch.
        :param pulumi.Input[str] zone_id: The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SwitchState.__new__(_SwitchState)

        __props__.__dict__["availability_zone"] = availability_zone
        __props__.__dict__["cidr_block"] = cidr_block
        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_ipv6"] = enable_ipv6
        __props__.__dict__["ipv6_cidr_block"] = ipv6_cidr_block
        __props__.__dict__["ipv6_cidr_block_mask"] = ipv6_cidr_block_mask
        __props__.__dict__["name"] = name
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["vpc_id"] = vpc_id
        __props__.__dict__["vswitch_name"] = vswitch_name
        __props__.__dict__["zone_id"] = zone_id
        return Switch(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Output[str]:
        """
        Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
        """
        warnings.warn("""Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""", DeprecationWarning)
        pulumi.log.warn("""availability_zone is deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.""")

        return pulumi.get(self, "availability_zone")

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> pulumi.Output[str]:
        """
        The IPv4 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "cidr_block")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        The creation time of the VSwitch.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of VSwitch.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="enableIpv6")
    def enable_ipv6(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether the IPv6 function is enabled in the switch. Value:
        - **true**: enables IPv6.
        - **false** (default): IPv6 is not enabled.
        """
        return pulumi.get(self, "enable_ipv6")

    @property
    @pulumi.getter(name="ipv6CidrBlock")
    def ipv6_cidr_block(self) -> pulumi.Output[str]:
        """
        The IPv6 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "ipv6_cidr_block")

    @property
    @pulumi.getter(name="ipv6CidrBlockMask")
    def ipv6_cidr_block_mask(self) -> pulumi.Output[int]:
        """
        The IPv6 CIDR block of the VSwitch.
        """
        return pulumi.get(self, "ipv6_cidr_block_mask")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
        """
        warnings.warn("""Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""", DeprecationWarning)
        pulumi.log.warn("""name is deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.""")

        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the resource.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        """
        The tags of VSwitch.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[str]:
        """
        The VPC ID.

        The following arguments will be discarded. Please use new fields as soon as possible:
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vswitchName")
    def vswitch_name(self) -> pulumi.Output[str]:
        """
        The name of the VSwitch.
        """
        return pulumi.get(self, "vswitch_name")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[str]:
        """
        The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
        """
        return pulumi.get(self, "zone_id")

