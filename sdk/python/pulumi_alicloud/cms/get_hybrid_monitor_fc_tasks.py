# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetHybridMonitorFcTasksResult',
    'AwaitableGetHybridMonitorFcTasksResult',
    'get_hybrid_monitor_fc_tasks',
    'get_hybrid_monitor_fc_tasks_output',
]

@pulumi.output_type
class GetHybridMonitorFcTasksResult:
    """
    A collection of values returned by getHybridMonitorFcTasks.
    """
    def __init__(__self__, id=None, ids=None, namespace=None, output_file=None, page_number=None, page_size=None, tasks=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        pulumi.set(__self__, "ids", ids)
        if namespace and not isinstance(namespace, str):
            raise TypeError("Expected argument 'namespace' to be a str")
        pulumi.set(__self__, "namespace", namespace)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if page_number and not isinstance(page_number, int):
            raise TypeError("Expected argument 'page_number' to be a int")
        pulumi.set(__self__, "page_number", page_number)
        if page_size and not isinstance(page_size, int):
            raise TypeError("Expected argument 'page_size' to be a int")
        pulumi.set(__self__, "page_size", page_size)
        if tasks and not isinstance(tasks, list):
            raise TypeError("Expected argument 'tasks' to be a list")
        pulumi.set(__self__, "tasks", tasks)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ids(self) -> Sequence[str]:
        return pulumi.get(self, "ids")

    @property
    @pulumi.getter
    def namespace(self) -> Optional[str]:
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter(name="pageNumber")
    def page_number(self) -> Optional[int]:
        return pulumi.get(self, "page_number")

    @property
    @pulumi.getter(name="pageSize")
    def page_size(self) -> Optional[int]:
        return pulumi.get(self, "page_size")

    @property
    @pulumi.getter
    def tasks(self) -> Sequence['outputs.GetHybridMonitorFcTasksTaskResult']:
        return pulumi.get(self, "tasks")


class AwaitableGetHybridMonitorFcTasksResult(GetHybridMonitorFcTasksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHybridMonitorFcTasksResult(
            id=self.id,
            ids=self.ids,
            namespace=self.namespace,
            output_file=self.output_file,
            page_number=self.page_number,
            page_size=self.page_size,
            tasks=self.tasks)


def get_hybrid_monitor_fc_tasks(ids: Optional[Sequence[str]] = None,
                                namespace: Optional[str] = None,
                                output_file: Optional[str] = None,
                                page_number: Optional[int] = None,
                                page_size: Optional[int] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHybridMonitorFcTasksResult:
    """
    This data source provides the Cms Hybrid Monitor Fc Tasks of the current Alibaba Cloud user.

    > **NOTE:** Available in v1.179.0+.

    ## Example Usage

    Basic Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    ids = alicloud.cms.get_hybrid_monitor_fc_tasks(ids=["example_value"])
    pulumi.export("cmsHybridMonitorFcTaskId1", ids.tasks[0].id)
    ```


    :param Sequence[str] ids: A list of Hybrid Monitor Fc Task IDs.
    :param str namespace: The index warehouse where the host belongs.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    """
    __args__ = dict()
    __args__['ids'] = ids
    __args__['namespace'] = namespace
    __args__['outputFile'] = output_file
    __args__['pageNumber'] = page_number
    __args__['pageSize'] = page_size
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('alicloud:cms/getHybridMonitorFcTasks:getHybridMonitorFcTasks', __args__, opts=opts, typ=GetHybridMonitorFcTasksResult).value

    return AwaitableGetHybridMonitorFcTasksResult(
        id=pulumi.get(__ret__, 'id'),
        ids=pulumi.get(__ret__, 'ids'),
        namespace=pulumi.get(__ret__, 'namespace'),
        output_file=pulumi.get(__ret__, 'output_file'),
        page_number=pulumi.get(__ret__, 'page_number'),
        page_size=pulumi.get(__ret__, 'page_size'),
        tasks=pulumi.get(__ret__, 'tasks'))


@_utilities.lift_output_func(get_hybrid_monitor_fc_tasks)
def get_hybrid_monitor_fc_tasks_output(ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                       namespace: Optional[pulumi.Input[Optional[str]]] = None,
                                       output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                       page_number: Optional[pulumi.Input[Optional[int]]] = None,
                                       page_size: Optional[pulumi.Input[Optional[int]]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetHybridMonitorFcTasksResult]:
    """
    This data source provides the Cms Hybrid Monitor Fc Tasks of the current Alibaba Cloud user.

    > **NOTE:** Available in v1.179.0+.

    ## Example Usage

    Basic Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    ids = alicloud.cms.get_hybrid_monitor_fc_tasks(ids=["example_value"])
    pulumi.export("cmsHybridMonitorFcTaskId1", ids.tasks[0].id)
    ```


    :param Sequence[str] ids: A list of Hybrid Monitor Fc Task IDs.
    :param str namespace: The index warehouse where the host belongs.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    """
    ...
