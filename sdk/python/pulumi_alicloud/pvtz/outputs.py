# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'ZoneAttachmentVpc',
    'GetZoneRecordsRecordResult',
    'GetZonesZoneResult',
    'GetZonesZoneBindVpcResult',
]

@pulumi.output_type
class ZoneAttachmentVpc(dict):
    def __init__(__self__, *,
                 vpc_id: str,
                 region_id: Optional[str] = None):
        """
        :param str vpc_id: The Id of the vpc.
        :param str region_id: The region of the vpc. If not set, the current region will instead of.
        """
        pulumi.set(__self__, "vpc_id", vpc_id)
        if region_id is not None:
            pulumi.set(__self__, "region_id", region_id)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        The Id of the vpc.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[str]:
        """
        The region of the vpc. If not set, the current region will instead of.
        """
        return pulumi.get(self, "region_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetZoneRecordsRecordResult(dict):
    def __init__(__self__, *,
                 id: str,
                 priority: int,
                 record_id: int,
                 remark: str,
                 resource_record: str,
                 rr: str,
                 status: str,
                 ttl: int,
                 type: str,
                 value: str):
        """
        :param str id: ID of the Private Zone Record.
        :param int priority: Priority of the Private Zone Record.
        :param int record_id: RecordId of the Private Zone Record.
        :param str remark: Remark of the Private Zone Record.
        :param str resource_record: Resource record of the Private Zone Record.
        :param str rr: Rr of the Private Zone Record.
        :param str status: Resolve record status. Value:
               - ENABLE: enable resolution.
               - DISABLE: pause parsing.
        :param int ttl: Ttl of the Private Zone Record.
        :param str type: Type of the Private Zone Record.
        :param str value: Value of the Private Zone Record.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "priority", priority)
        pulumi.set(__self__, "record_id", record_id)
        pulumi.set(__self__, "remark", remark)
        pulumi.set(__self__, "resource_record", resource_record)
        pulumi.set(__self__, "rr", rr)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "ttl", ttl)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the Private Zone Record.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def priority(self) -> int:
        """
        Priority of the Private Zone Record.
        """
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="recordId")
    def record_id(self) -> int:
        """
        RecordId of the Private Zone Record.
        """
        return pulumi.get(self, "record_id")

    @property
    @pulumi.getter
    def remark(self) -> str:
        """
        Remark of the Private Zone Record.
        """
        return pulumi.get(self, "remark")

    @property
    @pulumi.getter(name="resourceRecord")
    def resource_record(self) -> str:
        """
        Resource record of the Private Zone Record.
        """
        return pulumi.get(self, "resource_record")

    @property
    @pulumi.getter
    def rr(self) -> str:
        """
        Rr of the Private Zone Record.
        """
        return pulumi.get(self, "rr")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Resolve record status. Value:
        - ENABLE: enable resolution.
        - DISABLE: pause parsing.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def ttl(self) -> int:
        """
        Ttl of the Private Zone Record.
        """
        return pulumi.get(self, "ttl")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Type of the Private Zone Record.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        Value of the Private Zone Record.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetZonesZoneResult(dict):
    def __init__(__self__, *,
                 bind_vpcs: Sequence['outputs.GetZonesZoneBindVpcResult'],
                 create_timestamp: int,
                 creation_time: str,
                 id: str,
                 is_ptr: bool,
                 name: str,
                 proxy_pattern: str,
                 record_count: int,
                 remark: str,
                 resource_group_id: str,
                 slave_dns: bool,
                 update_time: str,
                 update_timestamp: int,
                 zone_id: str,
                 zone_name: str):
        """
        :param Sequence['GetZonesZoneBindVpcArgs'] bind_vpcs: List of the VPCs is bound to the Private Zone:
        :param int create_timestamp: Time of create of the Private Zone.
        :param str id: ID of the Private Zone.
        :param bool is_ptr: Whether the Private Zone is ptr.
        :param str name: Name of the Private Zone.
        :param str proxy_pattern: The recursive DNS proxy.
        :param int record_count: Count of the Private Zone Record.
        :param str remark: Remark of the Private Zone.
        :param str resource_group_id: resource_group_id for zone resourceGroupId.
        :param bool slave_dns: Whether to turn on secondary DNS.
        :param int update_timestamp: Time of update of the Private Zone.
        :param str zone_id: ZoneId of the Private Zone.
        :param str zone_name: ZoneName of the Private Zone.
        """
        pulumi.set(__self__, "bind_vpcs", bind_vpcs)
        pulumi.set(__self__, "create_timestamp", create_timestamp)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_ptr", is_ptr)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "proxy_pattern", proxy_pattern)
        pulumi.set(__self__, "record_count", record_count)
        pulumi.set(__self__, "remark", remark)
        pulumi.set(__self__, "resource_group_id", resource_group_id)
        pulumi.set(__self__, "slave_dns", slave_dns)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "update_timestamp", update_timestamp)
        pulumi.set(__self__, "zone_id", zone_id)
        pulumi.set(__self__, "zone_name", zone_name)

    @property
    @pulumi.getter(name="bindVpcs")
    def bind_vpcs(self) -> Sequence['outputs.GetZonesZoneBindVpcResult']:
        """
        List of the VPCs is bound to the Private Zone:
        """
        return pulumi.get(self, "bind_vpcs")

    @property
    @pulumi.getter(name="createTimestamp")
    def create_timestamp(self) -> int:
        """
        Time of create of the Private Zone.
        """
        return pulumi.get(self, "create_timestamp")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the Private Zone.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isPtr")
    def is_ptr(self) -> bool:
        """
        Whether the Private Zone is ptr.
        """
        return pulumi.get(self, "is_ptr")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the Private Zone.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="proxyPattern")
    def proxy_pattern(self) -> str:
        """
        The recursive DNS proxy.
        """
        return pulumi.get(self, "proxy_pattern")

    @property
    @pulumi.getter(name="recordCount")
    def record_count(self) -> int:
        """
        Count of the Private Zone Record.
        """
        return pulumi.get(self, "record_count")

    @property
    @pulumi.getter
    def remark(self) -> str:
        """
        Remark of the Private Zone.
        """
        return pulumi.get(self, "remark")

    @property
    @pulumi.getter(name="resourceGroupId")
    def resource_group_id(self) -> str:
        """
        resource_group_id for zone resourceGroupId.
        """
        return pulumi.get(self, "resource_group_id")

    @property
    @pulumi.getter(name="slaveDns")
    def slave_dns(self) -> bool:
        """
        Whether to turn on secondary DNS.
        """
        return pulumi.get(self, "slave_dns")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="updateTimestamp")
    def update_timestamp(self) -> int:
        """
        Time of update of the Private Zone.
        """
        return pulumi.get(self, "update_timestamp")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        """
        ZoneId of the Private Zone.
        """
        return pulumi.get(self, "zone_id")

    @property
    @pulumi.getter(name="zoneName")
    def zone_name(self) -> str:
        """
        ZoneName of the Private Zone.
        """
        return pulumi.get(self, "zone_name")


@pulumi.output_type
class GetZonesZoneBindVpcResult(dict):
    def __init__(__self__, *,
                 region_id: str,
                 region_name: str,
                 vpc_id: str,
                 vpc_name: str):
        """
        :param str region_id: Binding the regionId of VPC.
        :param str region_name: Binding the regionName of VPC.
        :param str vpc_id: Binding the vpcId of VPC.
        """
        pulumi.set(__self__, "region_id", region_id)
        pulumi.set(__self__, "region_name", region_name)
        pulumi.set(__self__, "vpc_id", vpc_id)
        pulumi.set(__self__, "vpc_name", vpc_name)

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> str:
        """
        Binding the regionId of VPC.
        """
        return pulumi.get(self, "region_id")

    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> str:
        """
        Binding the regionName of VPC.
        """
        return pulumi.get(self, "region_name")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        Binding the vpcId of VPC.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vpcName")
    def vpc_name(self) -> str:
        return pulumi.get(self, "vpc_name")


