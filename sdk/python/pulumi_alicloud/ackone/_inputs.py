# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ClusterNetworkArgs',
    'ClusterNetworkArgsDict',
]

MYPY = False

if not MYPY:
    class ClusterNetworkArgsDict(TypedDict):
        vpc_id: pulumi.Input[str]
        """
        VpcId to which the cluster belongs.
        """
        vswitches: pulumi.Input[Sequence[pulumi.Input[str]]]
        """
        Switch to which the cluster belongs.
        """
        security_group_ids: NotRequired[pulumi.Input[Sequence[pulumi.Input[str]]]]
        """
        Security group to which the cluster belongs.
        """
elif False:
    ClusterNetworkArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ClusterNetworkArgs:
    def __init__(__self__, *,
                 vpc_id: pulumi.Input[str],
                 vswitches: pulumi.Input[Sequence[pulumi.Input[str]]],
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        :param pulumi.Input[str] vpc_id: VpcId to which the cluster belongs.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] vswitches: Switch to which the cluster belongs.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Security group to which the cluster belongs.
        """
        pulumi.set(__self__, "vpc_id", vpc_id)
        pulumi.set(__self__, "vswitches", vswitches)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[str]:
        """
        VpcId to which the cluster belongs.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter
    def vswitches(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Switch to which the cluster belongs.
        """
        return pulumi.get(self, "vswitches")

    @vswitches.setter
    def vswitches(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "vswitches", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Security group to which the cluster belongs.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)


