# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetLifecyclePoliciesResult',
    'AwaitableGetLifecyclePoliciesResult',
    'get_lifecycle_policies',
    'get_lifecycle_policies_output',
]

@pulumi.output_type
class GetLifecyclePoliciesResult:
    """
    A collection of values returned by getLifecyclePolicies.
    """
    def __init__(__self__, file_system_id=None, id=None, ids=None, name_regex=None, names=None, output_file=None, policies=None):
        if file_system_id and not isinstance(file_system_id, str):
            raise TypeError("Expected argument 'file_system_id' to be a str")
        pulumi.set(__self__, "file_system_id", file_system_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        pulumi.set(__self__, "ids", ids)
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        pulumi.set(__self__, "name_regex", name_regex)
        if names and not isinstance(names, list):
            raise TypeError("Expected argument 'names' to be a list")
        pulumi.set(__self__, "names", names)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if policies and not isinstance(policies, list):
            raise TypeError("Expected argument 'policies' to be a list")
        pulumi.set(__self__, "policies", policies)

    @property
    @pulumi.getter(name="fileSystemId")
    def file_system_id(self) -> str:
        return pulumi.get(self, "file_system_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ids(self) -> Sequence[str]:
        return pulumi.get(self, "ids")

    @property
    @pulumi.getter(name="nameRegex")
    def name_regex(self) -> Optional[str]:
        return pulumi.get(self, "name_regex")

    @property
    @pulumi.getter
    def names(self) -> Sequence[str]:
        return pulumi.get(self, "names")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter
    def policies(self) -> Sequence['outputs.GetLifecyclePoliciesPolicyResult']:
        return pulumi.get(self, "policies")


class AwaitableGetLifecyclePoliciesResult(GetLifecyclePoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLifecyclePoliciesResult(
            file_system_id=self.file_system_id,
            id=self.id,
            ids=self.ids,
            name_regex=self.name_regex,
            names=self.names,
            output_file=self.output_file,
            policies=self.policies)


def get_lifecycle_policies(file_system_id: Optional[str] = None,
                           ids: Optional[Sequence[str]] = None,
                           name_regex: Optional[str] = None,
                           output_file: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLifecyclePoliciesResult:
    """
    This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.

    > **NOTE:** Available in v1.153.0+.

    ## Example Usage

    Basic Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    ids = alicloud.nas.get_lifecycle_policies(file_system_id="example_value",
        ids=[
            "my-LifecyclePolicy-1",
            "my-LifecyclePolicy-2",
        ])
    pulumi.export("nasLifecyclePolicyId1", ids.policies[0].id)
    name_regex = alicloud.nas.get_lifecycle_policies(file_system_id="example_value",
        name_regex="^my-LifecyclePolicy")
    pulumi.export("nasLifecyclePolicyId2", name_regex.policies[0].id)
    ```


    :param str file_system_id: The ID of the file system.
    :param Sequence[str] ids: A list of Lifecycle Policy IDs.
    :param str name_regex: A regex string to filter results by Lifecycle Policy name.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    """
    __args__ = dict()
    __args__['fileSystemId'] = file_system_id
    __args__['ids'] = ids
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('alicloud:nas/getLifecyclePolicies:getLifecyclePolicies', __args__, opts=opts, typ=GetLifecyclePoliciesResult).value

    return AwaitableGetLifecyclePoliciesResult(
        file_system_id=pulumi.get(__ret__, 'file_system_id'),
        id=pulumi.get(__ret__, 'id'),
        ids=pulumi.get(__ret__, 'ids'),
        name_regex=pulumi.get(__ret__, 'name_regex'),
        names=pulumi.get(__ret__, 'names'),
        output_file=pulumi.get(__ret__, 'output_file'),
        policies=pulumi.get(__ret__, 'policies'))


@_utilities.lift_output_func(get_lifecycle_policies)
def get_lifecycle_policies_output(file_system_id: Optional[pulumi.Input[str]] = None,
                                  ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                  name_regex: Optional[pulumi.Input[Optional[str]]] = None,
                                  output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLifecyclePoliciesResult]:
    """
    This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.

    > **NOTE:** Available in v1.153.0+.

    ## Example Usage

    Basic Usage

    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    ids = alicloud.nas.get_lifecycle_policies(file_system_id="example_value",
        ids=[
            "my-LifecyclePolicy-1",
            "my-LifecyclePolicy-2",
        ])
    pulumi.export("nasLifecyclePolicyId1", ids.policies[0].id)
    name_regex = alicloud.nas.get_lifecycle_policies(file_system_id="example_value",
        name_regex="^my-LifecyclePolicy")
    pulumi.export("nasLifecyclePolicyId2", name_regex.policies[0].id)
    ```


    :param str file_system_id: The ID of the file system.
    :param Sequence[str] ids: A list of Lifecycle Policy IDs.
    :param str name_regex: A regex string to filter results by Lifecycle Policy name.
    :param str output_file: File name where to save data source results (after running `pulumi preview`).
    """
    ...
