# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetGroupsGroupResult',
]

@pulumi.output_type
class GetGroupsGroupResult(dict):
    def __init__(__self__, *,
                 group_flag: int,
                 group_id: str,
                 group_name: str,
                 id: str):
        """
        :param int group_flag: GroupFlag, '0' mean default group(created by system), '1' means customer defined group.
        :param str group_id: The ID of Group.
        :param str group_name: The name of Group.
        :param str id: The ID of the Group(same as the group_id).
        """
        GetGroupsGroupResult._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            group_flag=group_flag,
            group_id=group_id,
            group_name=group_name,
            id=id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             group_flag: Optional[int] = None,
             group_id: Optional[str] = None,
             group_name: Optional[str] = None,
             id: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if group_flag is None and 'groupFlag' in kwargs:
            group_flag = kwargs['groupFlag']
        if group_flag is None:
            raise TypeError("Missing 'group_flag' argument")
        if group_id is None and 'groupId' in kwargs:
            group_id = kwargs['groupId']
        if group_id is None:
            raise TypeError("Missing 'group_id' argument")
        if group_name is None and 'groupName' in kwargs:
            group_name = kwargs['groupName']
        if group_name is None:
            raise TypeError("Missing 'group_name' argument")
        if id is None:
            raise TypeError("Missing 'id' argument")

        _setter("group_flag", group_flag)
        _setter("group_id", group_id)
        _setter("group_name", group_name)
        _setter("id", id)

    @property
    @pulumi.getter(name="groupFlag")
    def group_flag(self) -> int:
        """
        GroupFlag, '0' mean default group(created by system), '1' means customer defined group.
        """
        return pulumi.get(self, "group_flag")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> str:
        """
        The ID of Group.
        """
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> str:
        """
        The name of Group.
        """
        return pulumi.get(self, "group_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Group(same as the group_id).
        """
        return pulumi.get(self, "id")


