// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds
{
    public static class GetRamDirectories
    {
        /// <summary>
        /// This data source provides the Ecd Ram Directories of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.174.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Eds.GetRamDirectories.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Eds.GetRamDirectories.Invoke(new()
        ///     {
        ///         NameRegex = "^my-RamDirectory",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ecdRamDirectoryId1"] = ids.Apply(getRamDirectoriesResult =&gt; getRamDirectoriesResult.Directories[0]?.Id),
        ///         ["ecdRamDirectoryId2"] = nameRegex.Apply(getRamDirectoriesResult =&gt; getRamDirectoriesResult.Directories[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRamDirectoriesResult> InvokeAsync(GetRamDirectoriesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRamDirectoriesResult>("alicloud:eds/getRamDirectories:getRamDirectories", args ?? new GetRamDirectoriesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Ecd Ram Directories of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.174.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Eds.GetRamDirectories.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Eds.GetRamDirectories.Invoke(new()
        ///     {
        ///         NameRegex = "^my-RamDirectory",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ecdRamDirectoryId1"] = ids.Apply(getRamDirectoriesResult =&gt; getRamDirectoriesResult.Directories[0]?.Id),
        ///         ["ecdRamDirectoryId2"] = nameRegex.Apply(getRamDirectoriesResult =&gt; getRamDirectoriesResult.Directories[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRamDirectoriesResult> Invoke(GetRamDirectoriesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRamDirectoriesResult>("alicloud:eds/getRamDirectories:getRamDirectories", args ?? new GetRamDirectoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRamDirectoriesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Ram Directory IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Ram Directory name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of directory.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetRamDirectoriesArgs()
        {
        }
        public static new GetRamDirectoriesArgs Empty => new GetRamDirectoriesArgs();
    }

    public sealed class GetRamDirectoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Ram Directory IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Ram Directory name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of directory.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetRamDirectoriesInvokeArgs()
        {
        }
        public static new GetRamDirectoriesInvokeArgs Empty => new GetRamDirectoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRamDirectoriesResult
    {
        public readonly ImmutableArray<Outputs.GetRamDirectoriesDirectoryResult> Directories;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly string? Status;

        [OutputConstructor]
        private GetRamDirectoriesResult(
            ImmutableArray<Outputs.GetRamDirectoriesDirectoryResult> directories,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? status)
        {
            Directories = directories;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Status = status;
        }
    }
}
