// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds
{
    public static class GetDesktopTypes
    {
        /// <summary>
        /// This data source provides the Ecd Desktop Types of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.170.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Eds.GetDesktopTypes.Invoke(new()
        ///     {
        ///         InstanceTypeFamily = "eds.hf",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ecdDesktopTypeId1"] = ids.Apply(getDesktopTypesResult =&gt; getDesktopTypesResult.Types[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDesktopTypesResult> InvokeAsync(GetDesktopTypesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDesktopTypesResult>("alicloud:eds/getDesktopTypes:getDesktopTypes", args ?? new GetDesktopTypesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Ecd Desktop Types of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.170.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Eds.GetDesktopTypes.Invoke(new()
        ///     {
        ///         InstanceTypeFamily = "eds.hf",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ecdDesktopTypeId1"] = ids.Apply(getDesktopTypesResult =&gt; getDesktopTypesResult.Types[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDesktopTypesResult> Invoke(GetDesktopTypesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDesktopTypesResult>("alicloud:eds/getDesktopTypes:getDesktopTypes", args ?? new GetDesktopTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDesktopTypesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CPU cores.
        /// </summary>
        [Input("cpuCount")]
        public int? CpuCount { get; set; }

        /// <summary>
        /// The GPU cores.
        /// </summary>
        [Input("gpuCount")]
        public double? GpuCount { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Desktop Type IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Specification family.
        /// </summary>
        [Input("instanceTypeFamily")]
        public string? InstanceTypeFamily { get; set; }

        /// <summary>
        /// The Memory size. Unit: MiB.
        /// </summary>
        [Input("memorySize")]
        public int? MemorySize { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetDesktopTypesArgs()
        {
        }
        public static new GetDesktopTypesArgs Empty => new GetDesktopTypesArgs();
    }

    public sealed class GetDesktopTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CPU cores.
        /// </summary>
        [Input("cpuCount")]
        public Input<int>? CpuCount { get; set; }

        /// <summary>
        /// The GPU cores.
        /// </summary>
        [Input("gpuCount")]
        public Input<double>? GpuCount { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Desktop Type IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Specification family.
        /// </summary>
        [Input("instanceTypeFamily")]
        public Input<string>? InstanceTypeFamily { get; set; }

        /// <summary>
        /// The Memory size. Unit: MiB.
        /// </summary>
        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetDesktopTypesInvokeArgs()
        {
        }
        public static new GetDesktopTypesInvokeArgs Empty => new GetDesktopTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDesktopTypesResult
    {
        public readonly int? CpuCount;
        public readonly double? GpuCount;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? InstanceTypeFamily;
        public readonly int? MemorySize;
        public readonly string? OutputFile;
        public readonly string? Status;
        public readonly ImmutableArray<Outputs.GetDesktopTypesTypeResult> Types;

        [OutputConstructor]
        private GetDesktopTypesResult(
            int? cpuCount,

            double? gpuCount,

            string id,

            ImmutableArray<string> ids,

            string? instanceTypeFamily,

            int? memorySize,

            string? outputFile,

            string? status,

            ImmutableArray<Outputs.GetDesktopTypesTypeResult> types)
        {
            CpuCount = cpuCount;
            GpuCount = gpuCount;
            Id = id;
            Ids = ids;
            InstanceTypeFamily = instanceTypeFamily;
            MemorySize = memorySize;
            OutputFile = outputFile;
            Status = status;
            Types = types;
        }
    }
}
