// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetCommandsCommandInvokeDesktopResult
    {
        /// <summary>
        /// The desktop id of the Desktop.
        /// </summary>
        public readonly string DesktopId;
        /// <summary>
        /// Output Field Text Length Exceeds 24 KB of Truncated Discarded Text Length.
        /// </summary>
        public readonly int Dropped;
        /// <summary>
        /// Command of the Failure Or Perform the Reason for the Failure of the Code.
        /// </summary>
        public readonly string ErrorCode;
        /// <summary>
        /// Command of the Failure Or Perform the Reason for the Failure of the Details.
        /// </summary>
        public readonly string ErrorInfo;
        /// <summary>
        /// Command of the Failure Or Perform the Reason for the Failure of the Details.
        /// </summary>
        public readonly string ExitCode;
        /// <summary>
        /// The Script Process until the End of Time.
        /// </summary>
        public readonly string FinishTime;
        /// <summary>
        /// A Single Cloud Desktop Script Progress Status.
        /// </summary>
        public readonly string InvocationStatus;
        /// <summary>
        /// Script the Output of the Process.
        /// </summary>
        public readonly string Output;
        /// <summary>
        /// Command in the Desktop Implementation.
        /// </summary>
        public readonly int Repeats;
        /// <summary>
        /// The Script Process on the Desktop, in the Start Timing of the Execution.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// If You Use the invocation Indicates That the Call of the Time.
        /// </summary>
        public readonly string StopTime;

        [OutputConstructor]
        private GetCommandsCommandInvokeDesktopResult(
            string desktopId,

            int dropped,

            string errorCode,

            string errorInfo,

            string exitCode,

            string finishTime,

            string invocationStatus,

            string output,

            int repeats,

            string startTime,

            string stopTime)
        {
            DesktopId = desktopId;
            Dropped = dropped;
            ErrorCode = errorCode;
            ErrorInfo = errorInfo;
            ExitCode = exitCode;
            FinishTime = finishTime;
            InvocationStatus = invocationStatus;
            Output = output;
            Repeats = repeats;
            StartTime = startTime;
            StopTime = stopTime;
        }
    }
}
