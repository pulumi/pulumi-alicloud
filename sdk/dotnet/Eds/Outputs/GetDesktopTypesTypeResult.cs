// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetDesktopTypesTypeResult
    {
        /// <summary>
        /// The CPU cores.
        /// </summary>
        public readonly string CpuCount;
        /// <summary>
        /// The size of the data disk. Unit: GiB.
        /// </summary>
        public readonly string DataDiskSize;
        /// <summary>
        /// Specification ID.
        /// </summary>
        public readonly string DesktopTypeId;
        /// <summary>
        /// The GPU cores.
        /// </summary>
        public readonly double GpuCount;
        /// <summary>
        /// The GPU video memory.
        /// </summary>
        public readonly string GpuSpec;
        /// <summary>
        /// The ID of the Desktop Type.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Specification family.
        /// </summary>
        public readonly string InstanceTypeFamily;
        /// <summary>
        /// The Memory size. Unit: MiB.
        /// </summary>
        public readonly string MemorySize;
        /// <summary>
        /// The status of the resource.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The size of the system disk. Unit: GiB.
        /// </summary>
        public readonly string SystemDiskSize;

        [OutputConstructor]
        private GetDesktopTypesTypeResult(
            string cpuCount,

            string dataDiskSize,

            string desktopTypeId,

            double gpuCount,

            string gpuSpec,

            string id,

            string instanceTypeFamily,

            string memorySize,

            string status,

            string systemDiskSize)
        {
            CpuCount = cpuCount;
            DataDiskSize = dataDiskSize;
            DesktopTypeId = desktopTypeId;
            GpuCount = gpuCount;
            GpuSpec = gpuSpec;
            Id = id;
            InstanceTypeFamily = instanceTypeFamily;
            MemorySize = memorySize;
            Status = status;
            SystemDiskSize = systemDiskSize;
        }
    }
}
