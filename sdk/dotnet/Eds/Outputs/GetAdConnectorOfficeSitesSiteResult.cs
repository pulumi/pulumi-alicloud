// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetAdConnectorOfficeSitesSiteResult
    {
        /// <summary>
        /// The Name of the ad connector office site.
        /// </summary>
        public readonly string AdConnectorOfficeSiteName;
        /// <summary>
        /// AD Connector Collection of Information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAdConnectorOfficeSitesSiteAdConnectorResult> AdConnectors;
        /// <summary>
        /// The Internet Bandwidth Peak. Possible Values: 0~200. If This Field Is Set to 0, Indicates That There Is No Open Internet Access.
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// Cloud Enterprise Network Instance Id.
        /// </summary>
        public readonly string CenId;
        /// <summary>
        /// Workspace Corresponds to the Security Office Network of IPv4 Segment.
        /// </summary>
        public readonly string CidrBlock;
        /// <summary>
        /// Workspace Creation Time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Security Group ID.
        /// </summary>
        public readonly string CustomSecurityGroupId;
        /// <summary>
        /// The method that is used to connect the client to cloud desktops.
        /// </summary>
        public readonly string DesktopAccessType;
        /// <summary>
        /// The endpoint that is used to connect to cloud desktops over a VPC.
        /// </summary>
        public readonly string DesktopVpcEndpoint;
        /// <summary>
        /// Enterprise Ad Corresponding DNS Address.
        /// </summary>
        public readonly ImmutableArray<string> DnsAddresses;
        /// <summary>
        /// The Easy-to-Use DNS Name.
        /// </summary>
        public readonly string DnsUserName;
        /// <summary>
        /// Enterprise of Ad Domain Name.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The Domain Administrator's Username.
        /// </summary>
        public readonly string DomainUserName;
        /// <summary>
        /// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
        /// </summary>
        public readonly bool EnableAdminAccess;
        /// <summary>
        /// Indicates whether the desktop communication feature is enabled for cloud desktops in the same workspace. After the feature is enabled, the cloud desktops in the same workspace can access each other.
        /// </summary>
        public readonly bool EnableCrossDesktopAccess;
        /// <summary>
        /// Whether the Open Internet Access Function.
        /// </summary>
        public readonly bool EnableInternetAccess;
        /// <summary>
        /// NAS File System ID.
        /// </summary>
        public readonly ImmutableArray<string> FileSystemIds;
        /// <summary>
        /// The ID of the Ad Connector Office Site.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Registered Log Information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAdConnectorOfficeSitesSiteLogResult> Logs;
        /// <summary>
        /// Whether to Enable Multi-Factor Authentication MFA.
        /// </summary>
        public readonly bool MfaEnabled;
        /// <summary>
        /// The ID of the Internet Access.
        /// </summary>
        public readonly string NetworkPackageId;
        /// <summary>
        /// The ID of the Workspace.
        /// </summary>
        public readonly string OfficeSiteId;
        /// <summary>
        /// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
        /// </summary>
        public readonly string OfficeSiteType;
        /// <summary>
        /// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
        /// </summary>
        public readonly bool SsoEnabled;
        /// <summary>
        /// The workspace status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Sub-Domain DNS Address.
        /// </summary>
        public readonly ImmutableArray<string> SubDomainDnsAddresses;
        /// <summary>
        /// The AD Domain DNS Name.
        /// </summary>
        public readonly string SubDomainName;
        /// <summary>
        /// The AD Trust Password.
        /// </summary>
        public readonly string TrustPassword;
        /// <summary>
        /// Security Office VPC ID.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The vswitch ids.
        /// </summary>
        public readonly ImmutableArray<string> VswitchIds;

        [OutputConstructor]
        private GetAdConnectorOfficeSitesSiteResult(
            string adConnectorOfficeSiteName,

            ImmutableArray<Outputs.GetAdConnectorOfficeSitesSiteAdConnectorResult> adConnectors,

            int bandwidth,

            string cenId,

            string cidrBlock,

            string createTime,

            string customSecurityGroupId,

            string desktopAccessType,

            string desktopVpcEndpoint,

            ImmutableArray<string> dnsAddresses,

            string dnsUserName,

            string domainName,

            string domainUserName,

            bool enableAdminAccess,

            bool enableCrossDesktopAccess,

            bool enableInternetAccess,

            ImmutableArray<string> fileSystemIds,

            string id,

            ImmutableArray<Outputs.GetAdConnectorOfficeSitesSiteLogResult> logs,

            bool mfaEnabled,

            string networkPackageId,

            string officeSiteId,

            string officeSiteType,

            bool ssoEnabled,

            string status,

            ImmutableArray<string> subDomainDnsAddresses,

            string subDomainName,

            string trustPassword,

            string vpcId,

            ImmutableArray<string> vswitchIds)
        {
            AdConnectorOfficeSiteName = adConnectorOfficeSiteName;
            AdConnectors = adConnectors;
            Bandwidth = bandwidth;
            CenId = cenId;
            CidrBlock = cidrBlock;
            CreateTime = createTime;
            CustomSecurityGroupId = customSecurityGroupId;
            DesktopAccessType = desktopAccessType;
            DesktopVpcEndpoint = desktopVpcEndpoint;
            DnsAddresses = dnsAddresses;
            DnsUserName = dnsUserName;
            DomainName = domainName;
            DomainUserName = domainUserName;
            EnableAdminAccess = enableAdminAccess;
            EnableCrossDesktopAccess = enableCrossDesktopAccess;
            EnableInternetAccess = enableInternetAccess;
            FileSystemIds = fileSystemIds;
            Id = id;
            Logs = logs;
            MfaEnabled = mfaEnabled;
            NetworkPackageId = networkPackageId;
            OfficeSiteId = officeSiteId;
            OfficeSiteType = officeSiteType;
            SsoEnabled = ssoEnabled;
            Status = status;
            SubDomainDnsAddresses = subDomainDnsAddresses;
            SubDomainName = subDomainName;
            TrustPassword = trustPassword;
            VpcId = vpcId;
            VswitchIds = vswitchIds;
        }
    }
}
