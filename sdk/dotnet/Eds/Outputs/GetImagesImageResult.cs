// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetImagesImageResult
    {
        /// <summary>
        /// The creation time of the image.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The size of data disk of the image.
        /// </summary>
        public readonly int DataDiskSize;
        /// <summary>
        /// The description of the image.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The Gpu Category of the image.
        /// </summary>
        public readonly bool GpuCategory;
        /// <summary>
        /// The ID of the Image.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The image id of the image.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The image name.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// The image type of the image. Valid values: `SYSTEM`, `CUSTOM`.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// The os type of the image.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// The progress of the image.
        /// </summary>
        public readonly string Progress;
        /// <summary>
        /// The size of the image.
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// The status of the image. Valid values: `Creating`, `Available`, `CreateFailed`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetImagesImageResult(
            string createTime,

            int dataDiskSize,

            string description,

            bool gpuCategory,

            string id,

            string imageId,

            string imageName,

            string imageType,

            string osType,

            string progress,

            int size,

            string status)
        {
            CreateTime = createTime;
            DataDiskSize = dataDiskSize;
            Description = description;
            GpuCategory = gpuCategory;
            Id = id;
            ImageId = imageId;
            ImageName = imageName;
            ImageType = imageType;
            OsType = osType;
            Progress = progress;
            Size = size;
            Status = status;
        }
    }
}
