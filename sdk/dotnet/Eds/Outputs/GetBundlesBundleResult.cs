// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetBundlesBundleResult
    {
        /// <summary>
        /// The bundle id of the bundle.
        /// </summary>
        public readonly string BundleId;
        /// <summary>
        /// The name of the bundle.
        /// </summary>
        public readonly string BundleName;
        /// <summary>
        /// The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
        /// </summary>
        public readonly string BundleType;
        /// <summary>
        /// The description of the bundle.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The desktop type of the bundle.
        /// </summary>
        public readonly string DesktopType;
        /// <summary>
        /// The desktop type attribute of the bundle.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBundlesBundleDesktopTypeAttributeResult> DesktopTypeAttributes;
        /// <summary>
        /// The disks of the bundle.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBundlesBundleDiskResult> Disks;
        /// <summary>
        /// The ID of the bundle.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The image id attribute of the bundle.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The os type attribute of the bundle.
        /// </summary>
        public readonly string OsType;

        [OutputConstructor]
        private GetBundlesBundleResult(
            string bundleId,

            string bundleName,

            string bundleType,

            string description,

            string desktopType,

            ImmutableArray<Outputs.GetBundlesBundleDesktopTypeAttributeResult> desktopTypeAttributes,

            ImmutableArray<Outputs.GetBundlesBundleDiskResult> disks,

            string id,

            string imageId,

            string osType)
        {
            BundleId = bundleId;
            BundleName = bundleName;
            BundleType = bundleType;
            Description = description;
            DesktopType = desktopType;
            DesktopTypeAttributes = desktopTypeAttributes;
            Disks = disks;
            Id = id;
            ImageId = imageId;
            OsType = osType;
        }
    }
}
