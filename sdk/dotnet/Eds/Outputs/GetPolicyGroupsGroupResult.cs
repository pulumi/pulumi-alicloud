// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetPolicyGroupsGroupResult
    {
        /// <summary>
        /// The rule of authorize access rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyGroupsGroupAuthorizeAccessPolicyRuleResult> AuthorizeAccessPolicyRules;
        /// <summary>
        /// The policy rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleResult> AuthorizeSecurityPolicyRules;
        /// <summary>
        /// Whether to enable local camera redirection. Valid values: `On`, `Off`.
        /// </summary>
        public readonly string CameraRedirect;
        /// <summary>
        /// The clipboard policy.
        /// </summary>
        public readonly string Clipboard;
        /// <summary>
        /// The list of domain.
        /// </summary>
        public readonly string DomainList;
        /// <summary>
        /// The count of eds.
        /// </summary>
        public readonly int EdsCount;
        /// <summary>
        /// The access of html5.
        /// </summary>
        public readonly string HtmlAccess;
        /// <summary>
        /// The html5 file transfer.
        /// </summary>
        public readonly string HtmlFileTransfer;
        /// <summary>
        /// The ID of the Policy Group.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Local drive redirect policy.
        /// </summary>
        public readonly string LocalDrive;
        /// <summary>
        /// The policy group id.
        /// </summary>
        public readonly string PolicyGroupId;
        /// <summary>
        /// The name of policy group.
        /// </summary>
        public readonly string PolicyGroupName;
        /// <summary>
        /// The type of policy group.
        /// </summary>
        public readonly string PolicyGroupType;
        /// <summary>
        /// Whether to enable screen recording. Valid values: `Off`, `Alltime`, `Period`.
        /// </summary>
        public readonly string Recording;
        /// <summary>
        /// The end time of recording.
        /// </summary>
        public readonly string RecordingEndTime;
        /// <summary>
        /// The fps of recording. Valid values: `2`, `5`, `10`, `15`.
        /// </summary>
        public readonly int RecordingFps;
        /// <summary>
        /// The start time of recording.
        /// </summary>
        public readonly string RecordingStartTime;
        /// <summary>
        /// The status of policy.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The usb redirect policy.
        /// </summary>
        public readonly string UsbRedirect;
        /// <summary>
        /// The quality of visual.sae_ecdsae_nameecd_po
        /// </summary>
        public readonly string VisualQuality;
        /// <summary>
        /// The watermark policy.
        /// </summary>
        public readonly string Watermark;
        /// <summary>
        /// The watermark transparency.
        /// </summary>
        public readonly string WatermarkTransparency;
        /// <summary>
        /// The type of watemark.
        /// </summary>
        public readonly string WatermarkType;

        [OutputConstructor]
        private GetPolicyGroupsGroupResult(
            ImmutableArray<Outputs.GetPolicyGroupsGroupAuthorizeAccessPolicyRuleResult> authorizeAccessPolicyRules,

            ImmutableArray<Outputs.GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleResult> authorizeSecurityPolicyRules,

            string cameraRedirect,

            string clipboard,

            string domainList,

            int edsCount,

            string htmlAccess,

            string htmlFileTransfer,

            string id,

            string localDrive,

            string policyGroupId,

            string policyGroupName,

            string policyGroupType,

            string recording,

            string recordingEndTime,

            int recordingFps,

            string recordingStartTime,

            string status,

            string usbRedirect,

            string visualQuality,

            string watermark,

            string watermarkTransparency,

            string watermarkType)
        {
            AuthorizeAccessPolicyRules = authorizeAccessPolicyRules;
            AuthorizeSecurityPolicyRules = authorizeSecurityPolicyRules;
            CameraRedirect = cameraRedirect;
            Clipboard = clipboard;
            DomainList = domainList;
            EdsCount = edsCount;
            HtmlAccess = htmlAccess;
            HtmlFileTransfer = htmlFileTransfer;
            Id = id;
            LocalDrive = localDrive;
            PolicyGroupId = policyGroupId;
            PolicyGroupName = policyGroupName;
            PolicyGroupType = policyGroupType;
            Recording = recording;
            RecordingEndTime = recordingEndTime;
            RecordingFps = recordingFps;
            RecordingStartTime = recordingStartTime;
            Status = status;
            UsbRedirect = usbRedirect;
            VisualQuality = visualQuality;
            Watermark = watermark;
            WatermarkTransparency = watermarkTransparency;
            WatermarkType = watermarkType;
        }
    }
}
