// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds.Outputs
{

    [OutputType]
    public sealed class GetSnapshotsSnapshotResult
    {
        /// <summary>
        /// The time when the snapshot was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the cloud desktop to which the snapshot belongs.
        /// </summary>
        public readonly string DesktopId;
        /// <summary>
        /// The ID of the Snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The progress of creating the snapshot.
        /// </summary>
        public readonly string Progress;
        /// <summary>
        /// The remaining time that is required to create the snapshot. Unit: seconds.
        /// </summary>
        public readonly int RemainTime;
        /// <summary>
        /// The ID of the snapshot.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        public readonly string SnapshotName;
        /// <summary>
        /// The type of the snapshot.
        /// </summary>
        public readonly string SnapshotType;
        /// <summary>
        /// The capacity of the source disk. Unit: GiB.
        /// </summary>
        public readonly string SourceDiskSize;
        /// <summary>
        /// The type of the source disk.
        /// </summary>
        public readonly string SourceDiskType;
        /// <summary>
        /// The status of the snapshot.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetSnapshotsSnapshotResult(
            string createTime,

            string description,

            string desktopId,

            string id,

            string progress,

            int remainTime,

            string snapshotId,

            string snapshotName,

            string snapshotType,

            string sourceDiskSize,

            string sourceDiskType,

            string status)
        {
            CreateTime = createTime;
            Description = description;
            DesktopId = desktopId;
            Id = id;
            Progress = progress;
            RemainTime = remainTime;
            SnapshotId = snapshotId;
            SnapshotName = snapshotName;
            SnapshotType = snapshotType;
            SourceDiskSize = sourceDiskSize;
            SourceDiskType = sourceDiskType;
            Status = status;
        }
    }
}
