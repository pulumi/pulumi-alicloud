// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eds
{
    public static class GetNasFileSystems
    {
        /// <summary>
        /// This data source provides the Ecd Nas File Systems of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.141.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultSimpleOfficeSite = new AliCloud.Eds.SimpleOfficeSite("defaultSimpleOfficeSite", new AliCloud.Eds.SimpleOfficeSiteArgs
        ///         {
        ///             CidrBlock = "172.16.0.0/12",
        ///             DesktopAccessType = "Internet",
        ///             OfficeSiteName = "your_office_site_name",
        ///             EnableInternetAccess = false,
        ///         });
        ///         var defaultNasFileSystem = new AliCloud.Eds.NasFileSystem("defaultNasFileSystem", new AliCloud.Eds.NasFileSystemArgs
        ///         {
        ///             Description = "your_description",
        ///             OfficeSiteId = defaultSimpleOfficeSite.Id,
        ///             NasFileSystemName = "your_nas_file_system_name",
        ///         });
        ///         var ids = Output.Create(AliCloud.Eds.GetNasFileSystems.InvokeAsync());
        ///         this.EcdNasFileSystemId1 = ids.Apply(ids =&gt; ids.Systems?[0]?.Id);
        ///         var nameRegex = defaultNasFileSystem.NasFileSystemName.Apply(nasFileSystemName =&gt; AliCloud.Eds.GetNasFileSystems.Invoke(new AliCloud.Eds.GetNasFileSystemsInvokeArgs
        ///         {
        ///             NameRegex = nasFileSystemName,
        ///         }));
        ///         this.EcdNasFileSystemId2 = nameRegex.Apply(nameRegex =&gt; nameRegex.Systems?[0]?.Id);
        ///     }
        /// 
        ///     [Output("ecdNasFileSystemId1")]
        ///     public Output&lt;string&gt; EcdNasFileSystemId1 { get; set; }
        ///     [Output("ecdNasFileSystemId2")]
        ///     public Output&lt;string&gt; EcdNasFileSystemId2 { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNasFileSystemsResult> InvokeAsync(GetNasFileSystemsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNasFileSystemsResult>("alicloud:eds/getNasFileSystems:getNasFileSystems", args ?? new GetNasFileSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Ecd Nas File Systems of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.141.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultSimpleOfficeSite = new AliCloud.Eds.SimpleOfficeSite("defaultSimpleOfficeSite", new AliCloud.Eds.SimpleOfficeSiteArgs
        ///         {
        ///             CidrBlock = "172.16.0.0/12",
        ///             DesktopAccessType = "Internet",
        ///             OfficeSiteName = "your_office_site_name",
        ///             EnableInternetAccess = false,
        ///         });
        ///         var defaultNasFileSystem = new AliCloud.Eds.NasFileSystem("defaultNasFileSystem", new AliCloud.Eds.NasFileSystemArgs
        ///         {
        ///             Description = "your_description",
        ///             OfficeSiteId = defaultSimpleOfficeSite.Id,
        ///             NasFileSystemName = "your_nas_file_system_name",
        ///         });
        ///         var ids = Output.Create(AliCloud.Eds.GetNasFileSystems.InvokeAsync());
        ///         this.EcdNasFileSystemId1 = ids.Apply(ids =&gt; ids.Systems?[0]?.Id);
        ///         var nameRegex = defaultNasFileSystem.NasFileSystemName.Apply(nasFileSystemName =&gt; AliCloud.Eds.GetNasFileSystems.Invoke(new AliCloud.Eds.GetNasFileSystemsInvokeArgs
        ///         {
        ///             NameRegex = nasFileSystemName,
        ///         }));
        ///         this.EcdNasFileSystemId2 = nameRegex.Apply(nameRegex =&gt; nameRegex.Systems?[0]?.Id);
        ///     }
        /// 
        ///     [Output("ecdNasFileSystemId1")]
        ///     public Output&lt;string&gt; EcdNasFileSystemId1 { get; set; }
        ///     [Output("ecdNasFileSystemId2")]
        ///     public Output&lt;string&gt; EcdNasFileSystemId2 { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNasFileSystemsResult> Invoke(GetNasFileSystemsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNasFileSystemsResult>("alicloud:eds/getNasFileSystems:getNasFileSystems", args ?? new GetNasFileSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNasFileSystemsArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Nas File System IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Nas File System name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// The ID of office site.
        /// </summary>
        [Input("officeSiteId")]
        public string? OfficeSiteId { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetNasFileSystemsArgs()
        {
        }
    }

    public sealed class GetNasFileSystemsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Nas File System IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Nas File System name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// The ID of office site.
        /// </summary>
        [Input("officeSiteId")]
        public Input<string>? OfficeSiteId { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetNasFileSystemsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNasFileSystemsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OfficeSiteId;
        public readonly string? OutputFile;
        public readonly string? Status;
        public readonly ImmutableArray<Outputs.GetNasFileSystemsSystemResult> Systems;

        [OutputConstructor]
        private GetNasFileSystemsResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? officeSiteId,

            string? outputFile,

            string? status,

            ImmutableArray<Outputs.GetNasFileSystemsSystemResult> systems)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OfficeSiteId = officeSiteId;
            OutputFile = outputFile;
            Status = status;
            Systems = systems;
        }
    }
}
