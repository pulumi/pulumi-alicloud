// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Rds.Outputs
{

    [OutputType]
    public sealed class GetCrossRegionBackupsBackupResult
    {
        /// <summary>
        /// The time when the cross-region data backup file was generated.
        /// </summary>
        public readonly string BackupEndTime;
        /// <summary>
        /// The method that is used to generate the cross-region data backup file. Valid values:
        /// `L` - logical backup.
        /// `P` - physical backup.
        /// </summary>
        public readonly string BackupMethod;
        /// <summary>
        /// The level at which the cross-region data backup file is generated.
        /// `0` - instance-level backup.
        /// `1` - database-level backup.
        /// </summary>
        public readonly string BackupSetScale;
        /// <summary>
        /// TThe status of the cross-region data backup. Valid values:
        /// `0` - The cross-region data backup is successful.
        /// `1` - The cross-region data backup failed.
        /// </summary>
        public readonly int BackupSetStatus;
        /// <summary>
        /// The time when the cross-region data backup started.
        /// </summary>
        public readonly string BackupStartTime;
        /// <summary>
        /// The type of the cross-region data backup. Valid values:F: full data backup
        /// `F` - full data backup.
        /// `I` - incremental data backup.
        /// </summary>
        public readonly string BackupType;
        /// <summary>
        /// The RDS edition of the instance. Valid values:
        /// `Basic` - Basic Edition.
        /// `HighAvailability` - High-availability Edition.
        /// `Finance` - Enterprise Edition. This edition is supported only by the China site (aliyun.com).
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// The point in time that is indicated by the data in the cross-region data backup file.
        /// </summary>
        public readonly string ConsistentTime;
        /// <summary>
        /// The external URL from which you can download the cross-region data backup file.
        /// </summary>
        public readonly string CrossBackupDownloadLink;
        /// <summary>
        /// The ID of the cross-region data backup file.
        /// </summary>
        public readonly string CrossBackupId;
        /// <summary>
        /// The ID of the destination region where the cross-region data backup file of the instance is stored.
        /// </summary>
        public readonly string CrossBackupRegion;
        /// <summary>
        /// The name of the compressed package that contains the cross-region data backup file.
        /// </summary>
        public readonly string CrossBackupSetFile;
        /// <summary>
        /// The location where the cross-region data backup file is stored.
        /// </summary>
        public readonly string CrossBackupSetLocation;
        /// <summary>
        /// The size of the cross-region data backup file. Unit: bytes.
        /// </summary>
        public readonly int CrossBackupSetSize;
        /// <summary>
        /// The storage type.
        /// </summary>
        public readonly string DbInstanceStorageType;
        /// <summary>
        /// The engine of the database.
        /// </summary>
        public readonly string Engine;
        /// <summary>
        /// The version of the database engine.
        /// </summary>
        public readonly string EngineVersion;
        /// <summary>
        /// The ID of the cross-region data backup file.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the instance. This parameter is used to determine whether the instance that generates the cross-region data backup file is a primary or secondary instance.
        /// </summary>
        public readonly int InstanceId;
        /// <summary>
        /// The start time to which data can be restored. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        public readonly string RecoveryBeginTime;
        /// <summary>
        /// The end time to which data can be restored. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        public readonly string RecoveryEndTime;
        /// <summary>
        /// An array that consists of the regions to which the cross-region data backup file can be restored.
        /// </summary>
        public readonly ImmutableArray<string> RestoreRegions;

        [OutputConstructor]
        private GetCrossRegionBackupsBackupResult(
            string backupEndTime,

            string backupMethod,

            string backupSetScale,

            int backupSetStatus,

            string backupStartTime,

            string backupType,

            string category,

            string consistentTime,

            string crossBackupDownloadLink,

            string crossBackupId,

            string crossBackupRegion,

            string crossBackupSetFile,

            string crossBackupSetLocation,

            int crossBackupSetSize,

            string dbInstanceStorageType,

            string engine,

            string engineVersion,

            string id,

            int instanceId,

            string recoveryBeginTime,

            string recoveryEndTime,

            ImmutableArray<string> restoreRegions)
        {
            BackupEndTime = backupEndTime;
            BackupMethod = backupMethod;
            BackupSetScale = backupSetScale;
            BackupSetStatus = backupSetStatus;
            BackupStartTime = backupStartTime;
            BackupType = backupType;
            Category = category;
            ConsistentTime = consistentTime;
            CrossBackupDownloadLink = crossBackupDownloadLink;
            CrossBackupId = crossBackupId;
            CrossBackupRegion = crossBackupRegion;
            CrossBackupSetFile = crossBackupSetFile;
            CrossBackupSetLocation = crossBackupSetLocation;
            CrossBackupSetSize = crossBackupSetSize;
            DbInstanceStorageType = dbInstanceStorageType;
            Engine = engine;
            EngineVersion = engineVersion;
            Id = id;
            InstanceId = instanceId;
            RecoveryBeginTime = recoveryBeginTime;
            RecoveryEndTime = recoveryEndTime;
            RestoreRegions = restoreRegions;
        }
    }
}
