// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Rds
{
    /// <summary>
    /// Provides a RDS database proxy public network address resource.
    /// 
    /// For information about Resource AlicloudRdsDBProxyPublic and how to use it, see [What is proxy](https://www.alibabacloud.com/help/en/rds/developer-reference/api-rds-2014-08-15-createdbproxyendpointaddress).
    /// 
    /// &gt; **NOTE:** Available since v1.250.0.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var @default = AliCloud.Rds.GetZones.Invoke(new()
    ///     {
    ///         Engine = "MySQL",
    ///         EngineVersion = "5.6",
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
    ///         VswitchName = name,
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         Name = name,
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Rds.Instance("default", new()
    ///     {
    ///         Engine = "MySQL",
    ///         EngineVersion = "5.7",
    ///         InstanceType = "rds.mysql.c1.large",
    ///         InstanceStorage = 20,
    ///         InstanceChargeType = "Postpaid",
    ///         InstanceName = name,
    ///         VswitchId = defaultSwitch.Id,
    ///         DbInstanceStorageType = "local_ssd",
    ///     });
    /// 
    ///     var defaultReadOnlyInstance = new AliCloud.Rds.ReadOnlyInstance("default", new()
    ///     {
    ///         ZoneId = defaultInstance.ZoneId,
    ///         MasterDbInstanceId = defaultInstance.Id,
    ///         EngineVersion = defaultInstance.EngineVersion,
    ///         InstanceStorage = defaultInstance.InstanceStorage,
    ///         InstanceType = defaultInstance.InstanceType,
    ///         InstanceName = $"{name}readonly",
    ///         VswitchId = defaultSwitch.Id,
    ///     });
    /// 
    ///     var defaultRdsDbProxy = new AliCloud.Rds.RdsDbProxy("default", new()
    ///     {
    ///         InstanceId = defaultInstance.Id,
    ///         InstanceNetworkType = "VPC",
    ///         VpcId = defaultInstance.VpcId,
    ///         VswitchId = defaultInstance.VswitchId,
    ///         DbProxyInstanceNum = 2,
    ///         DbProxyConnectionPrefix = "example",
    ///         DbProxyConnectStringPort = 3306,
    ///         DbProxyEndpointReadWriteMode = "ReadWrite",
    ///         ReadOnlyInstanceMaxDelayTime = 90,
    ///         DbProxyFeatures = "TransactionReadSqlRouteOptimizeStatus:1;ConnectionPersist:1;ReadWriteSpliting:1",
    ///         ReadOnlyInstanceDistributionType = "Custom",
    ///         ReadOnlyInstanceWeights = new[]
    ///         {
    ///             new AliCloud.Rds.Inputs.RdsDbProxyReadOnlyInstanceWeightArgs
    ///             {
    ///                 InstanceId = defaultInstance.Id,
    ///                 Weight = "100",
    ///             },
    ///             new AliCloud.Rds.Inputs.RdsDbProxyReadOnlyInstanceWeightArgs
    ///             {
    ///                 InstanceId = defaultReadOnlyInstance.Id,
    ///                 Weight = "500",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var defaultDbProxyPublic = new AliCloud.Rds.DbProxyPublic("default", new()
    ///     {
    ///         DbInstanceId = defaultInstance.Id,
    ///         DbProxyEndpointId = defaultRdsDbProxy.DbProxyEndpointId,
    ///         ConnectionStringPrefix = "exampleabc",
    ///         DbProxyConnectionStringNetType = "Public",
    ///         DbProxyNewConnectStringPort = "3306",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &gt; **NOTE:** Resource `alicloud.rds.DbProxyPublic` should be created after `alicloud.rds.RdsDbProxy`, so the `depends_on` statement is necessary.
    /// 
    /// ## Import
    /// 
    /// RDS Database Proxy Public Network Address can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:rds/dbProxyPublic:DbProxyPublic example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:rds/dbProxyPublic:DbProxyPublic")]
    public partial class DbProxyPublic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The prefix for the new database proxy connection address can be customized.
        /// </summary>
        [Output("connectionStringPrefix")]
        public Output<string> ConnectionStringPrefix { get; private set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// The network type of the new database proxy connection address,This resource defaults to Public.
        /// </summary>
        [Output("dbProxyConnectionStringNetType")]
        public Output<string> DbProxyConnectionStringNetType { get; private set; } = null!;

        /// <summary>
        /// Database proxy connection address ID.
        /// </summary>
        [Output("dbProxyEndpointId")]
        public Output<string> DbProxyEndpointId { get; private set; } = null!;

        /// <summary>
        /// The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
        /// </summary>
        [Output("dbProxyNewConnectStringPort")]
        public Output<string> DbProxyNewConnectStringPort { get; private set; } = null!;


        /// <summary>
        /// Create a DbProxyPublic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbProxyPublic(string name, DbProxyPublicArgs args, CustomResourceOptions? options = null)
            : base("alicloud:rds/dbProxyPublic:DbProxyPublic", name, args ?? new DbProxyPublicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbProxyPublic(string name, Input<string> id, DbProxyPublicState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:rds/dbProxyPublic:DbProxyPublic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbProxyPublic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbProxyPublic Get(string name, Input<string> id, DbProxyPublicState? state = null, CustomResourceOptions? options = null)
        {
            return new DbProxyPublic(name, id, state, options);
        }
    }

    public sealed class DbProxyPublicArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The prefix for the new database proxy connection address can be customized.
        /// </summary>
        [Input("connectionStringPrefix", required: true)]
        public Input<string> ConnectionStringPrefix { get; set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The network type of the new database proxy connection address,This resource defaults to Public.
        /// </summary>
        [Input("dbProxyConnectionStringNetType", required: true)]
        public Input<string> DbProxyConnectionStringNetType { get; set; } = null!;

        /// <summary>
        /// Database proxy connection address ID.
        /// </summary>
        [Input("dbProxyEndpointId", required: true)]
        public Input<string> DbProxyEndpointId { get; set; } = null!;

        /// <summary>
        /// The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
        /// </summary>
        [Input("dbProxyNewConnectStringPort")]
        public Input<string>? DbProxyNewConnectStringPort { get; set; }

        public DbProxyPublicArgs()
        {
        }
        public static new DbProxyPublicArgs Empty => new DbProxyPublicArgs();
    }

    public sealed class DbProxyPublicState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The prefix for the new database proxy connection address can be customized.
        /// </summary>
        [Input("connectionStringPrefix")]
        public Input<string>? ConnectionStringPrefix { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        /// <summary>
        /// The network type of the new database proxy connection address,This resource defaults to Public.
        /// </summary>
        [Input("dbProxyConnectionStringNetType")]
        public Input<string>? DbProxyConnectionStringNetType { get; set; }

        /// <summary>
        /// Database proxy connection address ID.
        /// </summary>
        [Input("dbProxyEndpointId")]
        public Input<string>? DbProxyEndpointId { get; set; }

        /// <summary>
        /// The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
        /// </summary>
        [Input("dbProxyNewConnectStringPort")]
        public Input<string>? DbProxyNewConnectStringPort { get; set; }

        public DbProxyPublicState()
        {
        }
        public static new DbProxyPublicState Empty => new DbProxyPublicState();
    }
}
