// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Rds
{
    /// <summary>
    /// Provides a RDS Custom Deployment Set resource.
    /// 
    /// Custom Deployment set.
    /// 
    /// For information about RDS Custom Deployment Set and how to use it, see [What is Custom Deployment Set](https://www.alibabacloud.com/help/en/).
    /// 
    /// &gt; **NOTE:** Available since v1.235.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.Rds.CustomDeploymentSet("default", new()
    ///     {
    ///         OnUnableToRedeployFailedInstance = "CancelMembershipAndStart",
    ///         CustomDeploymentSetName = name,
    ///         Description = "2024:11:19 1010:1111:0808",
    ///         GroupCount = 3,
    ///         Strategy = "Availability",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RDS Custom Deployment Set can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:rds/customDeploymentSet:CustomDeploymentSet example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:rds/customDeploymentSet:CustomDeploymentSet")]
    public partial class CustomDeploymentSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("customDeploymentSetName")]
        public Output<string?> CustomDeploymentSetName { get; private set; } = null!;

        /// <summary>
        /// Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
        /// 
        /// Default value: 3
        /// 
        /// &gt; **NOTE:**  This parameter takes effect only when 'Strategy = AvailabilityGroup.
        /// </summary>
        [Output("groupCount")]
        public Output<int?> GroupCount { get; private set; } = null!;

        /// <summary>
        /// After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
        /// - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
        /// - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
        /// 
        /// Default value: CancelMembershipAndStart.
        /// </summary>
        [Output("onUnableToRedeployFailedInstance")]
        public Output<string?> OnUnableToRedeployFailedInstance { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Deployment strategy. Value range:
        /// - `Availability`: High Availability policy.
        /// - `AvailabilityGroup`: the high availability policy of the deployment set group.
        /// - `LowLatency`: Network low latency policy.
        /// 
        /// Default value: Availability.
        /// </summary>
        [Output("strategy")]
        public Output<string> Strategy { get; private set; } = null!;


        /// <summary>
        /// Create a CustomDeploymentSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomDeploymentSet(string name, CustomDeploymentSetArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:rds/customDeploymentSet:CustomDeploymentSet", name, args ?? new CustomDeploymentSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomDeploymentSet(string name, Input<string> id, CustomDeploymentSetState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:rds/customDeploymentSet:CustomDeploymentSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomDeploymentSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomDeploymentSet Get(string name, Input<string> id, CustomDeploymentSetState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomDeploymentSet(name, id, state, options);
        }
    }

    public sealed class CustomDeploymentSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("customDeploymentSetName")]
        public Input<string>? CustomDeploymentSetName { get; set; }

        /// <summary>
        /// Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
        /// 
        /// Default value: 3
        /// 
        /// &gt; **NOTE:**  This parameter takes effect only when 'Strategy = AvailabilityGroup.
        /// </summary>
        [Input("groupCount")]
        public Input<int>? GroupCount { get; set; }

        /// <summary>
        /// After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
        /// - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
        /// - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
        /// 
        /// Default value: CancelMembershipAndStart.
        /// </summary>
        [Input("onUnableToRedeployFailedInstance")]
        public Input<string>? OnUnableToRedeployFailedInstance { get; set; }

        /// <summary>
        /// Deployment strategy. Value range:
        /// - `Availability`: High Availability policy.
        /// - `AvailabilityGroup`: the high availability policy of the deployment set group.
        /// - `LowLatency`: Network low latency policy.
        /// 
        /// Default value: Availability.
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        public CustomDeploymentSetArgs()
        {
        }
        public static new CustomDeploymentSetArgs Empty => new CustomDeploymentSetArgs();
    }

    public sealed class CustomDeploymentSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("customDeploymentSetName")]
        public Input<string>? CustomDeploymentSetName { get; set; }

        /// <summary>
        /// Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
        /// 
        /// Default value: 3
        /// 
        /// &gt; **NOTE:**  This parameter takes effect only when 'Strategy = AvailabilityGroup.
        /// </summary>
        [Input("groupCount")]
        public Input<int>? GroupCount { get; set; }

        /// <summary>
        /// After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
        /// - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
        /// - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
        /// 
        /// Default value: CancelMembershipAndStart.
        /// </summary>
        [Input("onUnableToRedeployFailedInstance")]
        public Input<string>? OnUnableToRedeployFailedInstance { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Deployment strategy. Value range:
        /// - `Availability`: High Availability policy.
        /// - `AvailabilityGroup`: the high availability policy of the deployment set group.
        /// - `LowLatency`: Network low latency policy.
        /// 
        /// Default value: Availability.
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        public CustomDeploymentSetState()
        {
        }
        public static new CustomDeploymentSetState Empty => new CustomDeploymentSetState();
    }
}
