// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Rds
{
    /// <summary>
    /// Provides an RDS instance emote disaster recovery strategy policy resource and used to configure instance emote disaster recovery strategy policy.
    /// 
    /// For information about RDS cross region backup settings and how to use them, see [What is cross region backup](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/modify-cross-region-backup-settings).
    /// 
    /// &gt; **NOTE:** Available in 1.195.0+.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var creation = config.Get("creation") ?? "Rds";
    ///     var name = config.Get("name") ?? "tf-testAccRdsCrossRegionBackupPolicy";
    ///     var defaultZones = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = creation,
    ///     });
    /// 
    ///     var regions = AliCloud.Rds.GetCrossRegions.Invoke();
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("defaultNetwork", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("defaultSwitch", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[5]?.Id),
    ///         VswitchName = name,
    ///     });
    /// 
    ///     var instance = new AliCloud.Rds.Instance("instance", new()
    ///     {
    ///         Engine = "MySQL",
    ///         EngineVersion = "8.0",
    ///         DbInstanceStorageType = "local_ssd",
    ///         InstanceType = "rds.mysql.c1.large",
    ///         InstanceStorage = 10,
    ///         VswitchId = defaultSwitch.Id,
    ///         InstanceName = name,
    ///     });
    /// 
    ///     var policy = new AliCloud.Rds.RdsInstanceCrossBackupPolicy("policy", new()
    ///     {
    ///         InstanceId = instance.Id,
    ///         CrossBackupRegion = regions.Apply(getCrossRegionsResult =&gt; getCrossRegionsResult.Ids[0]),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RDS remote disaster recovery policies can be imported using id or instance id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy example "rm-12345678"
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy")]
    public partial class RdsInstanceCrossBackupPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The status of the overall cross-region backup switch on the instance. Valid values:
        /// - Disabled
        /// - Enable
        /// </summary>
        [Output("backupEnabled")]
        public Output<string> BackupEnabled { get; private set; } = null!;

        /// <summary>
        /// The time when cross-region backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Output("backupEnabledTime")]
        public Output<string> BackupEnabledTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the destination region where the cross-region backup files of the instance are stored.
        /// </summary>
        [Output("crossBackupRegion")]
        public Output<string> CrossBackupRegion { get; private set; } = null!;

        /// <summary>
        /// The policy that is used to save cross-region backups of the instance. Default value: 1. The default value 1 indicates that all cross-region backups are saved.
        /// </summary>
        [Output("crossBackupType")]
        public Output<string> CrossBackupType { get; private set; } = null!;

        /// <summary>
        /// The state of the instance. For more information, see Instance status.
        /// </summary>
        [Output("dbInstanceStatus")]
        public Output<string> DbInstanceStatus { get; private set; } = null!;

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The lock status of the instance. Valid values:
        /// - Unlock: The instance is not locked.
        /// - ManualLock: The instance is manually locked.
        /// - LockByExpiration: The instance is locked upon expiration.
        /// - LockByRestoration: The instance is automatically locked before a rollback.
        /// - LockByDiskQuota: The instance is automatically locked because its storage space is exhausted. In this situation, the instance is inaccessible.
        /// </summary>
        [Output("lockMode")]
        public Output<string> LockMode { get; private set; } = null!;

        /// <summary>
        /// The status of the cross-region log backup feature on the instance. Valid values:
        /// - Enable: Enables the feature.
        /// - Disabled: Disables the feature.
        /// </summary>
        [Output("logBackupEnabled")]
        public Output<string> LogBackupEnabled { get; private set; } = null!;

        /// <summary>
        /// The time when cross-region log backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Output("logBackupEnabledTime")]
        public Output<string> LogBackupEnabledTime { get; private set; } = null!;

        /// <summary>
        /// The policy that is used to retain cross-region backups of the instance. Default value: 1. The default value 1 indicate that cross-region backups are retained based on the specified retention period.
        /// </summary>
        [Output("retentType")]
        public Output<string> RetentType { get; private set; } = null!;

        /// <summary>
        /// The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
        /// </summary>
        [Output("retention")]
        public Output<int> Retention { get; private set; } = null!;


        /// <summary>
        /// Create a RdsInstanceCrossBackupPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RdsInstanceCrossBackupPolicy(string name, RdsInstanceCrossBackupPolicyArgs args, CustomResourceOptions? options = null)
            : base("alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy", name, args ?? new RdsInstanceCrossBackupPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RdsInstanceCrossBackupPolicy(string name, Input<string> id, RdsInstanceCrossBackupPolicyState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RdsInstanceCrossBackupPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RdsInstanceCrossBackupPolicy Get(string name, Input<string> id, RdsInstanceCrossBackupPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new RdsInstanceCrossBackupPolicy(name, id, state, options);
        }
    }

    public sealed class RdsInstanceCrossBackupPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the destination region where the cross-region backup files of the instance are stored.
        /// </summary>
        [Input("crossBackupRegion", required: true)]
        public Input<string> CrossBackupRegion { get; set; } = null!;

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The status of the cross-region log backup feature on the instance. Valid values:
        /// - Enable: Enables the feature.
        /// - Disabled: Disables the feature.
        /// </summary>
        [Input("logBackupEnabled")]
        public Input<string>? LogBackupEnabled { get; set; }

        /// <summary>
        /// The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        public RdsInstanceCrossBackupPolicyArgs()
        {
        }
        public static new RdsInstanceCrossBackupPolicyArgs Empty => new RdsInstanceCrossBackupPolicyArgs();
    }

    public sealed class RdsInstanceCrossBackupPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The status of the overall cross-region backup switch on the instance. Valid values:
        /// - Disabled
        /// - Enable
        /// </summary>
        [Input("backupEnabled")]
        public Input<string>? BackupEnabled { get; set; }

        /// <summary>
        /// The time when cross-region backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("backupEnabledTime")]
        public Input<string>? BackupEnabledTime { get; set; }

        /// <summary>
        /// The ID of the destination region where the cross-region backup files of the instance are stored.
        /// </summary>
        [Input("crossBackupRegion")]
        public Input<string>? CrossBackupRegion { get; set; }

        /// <summary>
        /// The policy that is used to save cross-region backups of the instance. Default value: 1. The default value 1 indicates that all cross-region backups are saved.
        /// </summary>
        [Input("crossBackupType")]
        public Input<string>? CrossBackupType { get; set; }

        /// <summary>
        /// The state of the instance. For more information, see Instance status.
        /// </summary>
        [Input("dbInstanceStatus")]
        public Input<string>? DbInstanceStatus { get; set; }

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The lock status of the instance. Valid values:
        /// - Unlock: The instance is not locked.
        /// - ManualLock: The instance is manually locked.
        /// - LockByExpiration: The instance is locked upon expiration.
        /// - LockByRestoration: The instance is automatically locked before a rollback.
        /// - LockByDiskQuota: The instance is automatically locked because its storage space is exhausted. In this situation, the instance is inaccessible.
        /// </summary>
        [Input("lockMode")]
        public Input<string>? LockMode { get; set; }

        /// <summary>
        /// The status of the cross-region log backup feature on the instance. Valid values:
        /// - Enable: Enables the feature.
        /// - Disabled: Disables the feature.
        /// </summary>
        [Input("logBackupEnabled")]
        public Input<string>? LogBackupEnabled { get; set; }

        /// <summary>
        /// The time when cross-region log backup was enabled on the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("logBackupEnabledTime")]
        public Input<string>? LogBackupEnabledTime { get; set; }

        /// <summary>
        /// The policy that is used to retain cross-region backups of the instance. Default value: 1. The default value 1 indicate that cross-region backups are retained based on the specified retention period.
        /// </summary>
        [Input("retentType")]
        public Input<string>? RetentType { get; set; }

        /// <summary>
        /// The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        public RdsInstanceCrossBackupPolicyState()
        {
        }
        public static new RdsInstanceCrossBackupPolicyState Empty => new RdsInstanceCrossBackupPolicyState();
    }
}
