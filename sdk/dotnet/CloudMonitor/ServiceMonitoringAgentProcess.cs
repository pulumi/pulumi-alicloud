// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudMonitor
{
    /// <summary>
    /// Provides a Cloud Monitor Service Monitoring Agent Process resource.
    /// 
    /// For information about Cloud Monitor Service Monitoring Agent Process and how to use it, see [What is Monitoring Agent Process](https://www.alibabacloud.com/help/en/cms/developer-reference/api-cms-2019-01-01-createmonitoragentprocess).
    /// 
    /// &gt; **NOTE:** Available since v1.212.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultZones = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableDiskCategory = "cloud_efficiency",
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var defaultInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
    ///     {
    ///         AvailabilityZone = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         InstanceTypeFamily = "ecs.sn1ne",
    ///     });
    /// 
    ///     var defaultImages = AliCloud.Ecs.GetImages.Invoke(new()
    ///     {
    ///         NameRegex = "^ubuntu_[0-9]+_[0-9]+_x64*",
    ///         MostRecent = true,
    ///         Owners = "system",
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("defaultNetwork", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("defaultSwitch", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VswitchName = name,
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new()
    ///     {
    ///         VpcId = defaultSwitch.VpcId,
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Ecs.Instance("defaultInstance", new()
    ///     {
    ///         ImageId = defaultImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
    ///         InstanceType = defaultInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
    ///         InstanceName = name,
    ///         SecurityGroups = new[]
    ///         {
    ///             defaultSecurityGroup,
    ///         }.Select(__item =&gt; __item.Id).ToList(),
    ///         InternetChargeType = "PayByTraffic",
    ///         InternetMaxBandwidthOut = 10,
    ///         AvailabilityZone = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         InstanceChargeType = "PostPaid",
    ///         SystemDiskCategory = "cloud_efficiency",
    ///         VswitchId = defaultSwitch.Id,
    ///     });
    /// 
    ///     var defaultServiceMonitoringAgentProcess = new AliCloud.CloudMonitor.ServiceMonitoringAgentProcess("defaultServiceMonitoringAgentProcess", new()
    ///     {
    ///         InstanceId = defaultInstance.Id,
    ///         ProcessName = name,
    ///         ProcessUser = "root",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Monitor Service Monitoring Agent Process can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess example &lt;instance_id&gt;:&lt;process_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess")]
    public partial class ServiceMonitoringAgentProcess : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the process.
        /// </summary>
        [Output("processId")]
        public Output<string> ProcessId { get; private set; } = null!;

        /// <summary>
        /// The name of the process.
        /// </summary>
        [Output("processName")]
        public Output<string> ProcessName { get; private set; } = null!;

        /// <summary>
        /// The user who launches the process.
        /// </summary>
        [Output("processUser")]
        public Output<string?> ProcessUser { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceMonitoringAgentProcess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceMonitoringAgentProcess(string name, ServiceMonitoringAgentProcessArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess", name, args ?? new ServiceMonitoringAgentProcessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceMonitoringAgentProcess(string name, Input<string> id, ServiceMonitoringAgentProcessState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceMonitoringAgentProcess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceMonitoringAgentProcess Get(string name, Input<string> id, ServiceMonitoringAgentProcessState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceMonitoringAgentProcess(name, id, state, options);
        }
    }

    public sealed class ServiceMonitoringAgentProcessArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The name of the process.
        /// </summary>
        [Input("processName", required: true)]
        public Input<string> ProcessName { get; set; } = null!;

        /// <summary>
        /// The user who launches the process.
        /// </summary>
        [Input("processUser")]
        public Input<string>? ProcessUser { get; set; }

        public ServiceMonitoringAgentProcessArgs()
        {
        }
        public static new ServiceMonitoringAgentProcessArgs Empty => new ServiceMonitoringAgentProcessArgs();
    }

    public sealed class ServiceMonitoringAgentProcessState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The ID of the process.
        /// </summary>
        [Input("processId")]
        public Input<string>? ProcessId { get; set; }

        /// <summary>
        /// The name of the process.
        /// </summary>
        [Input("processName")]
        public Input<string>? ProcessName { get; set; }

        /// <summary>
        /// The user who launches the process.
        /// </summary>
        [Input("processUser")]
        public Input<string>? ProcessUser { get; set; }

        public ServiceMonitoringAgentProcessState()
        {
        }
        public static new ServiceMonitoringAgentProcessState Empty => new ServiceMonitoringAgentProcessState();
    }
}
