// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudMonitor
{
    public static class GetServiceMetricAlarmRules
    {
        /// <summary>
        /// This data source provides the Cloud Monitor Service Metric Alarm Rules of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.256.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.Ecs.GetInstances.Invoke(new()
        ///     {
        ///         Status = "Running",
        ///     });
        /// 
        ///     var defaultAlarmContactGroup = new AliCloud.Cms.AlarmContactGroup("default", new()
        ///     {
        ///         AlarmContactGroupName = name,
        ///     });
        /// 
        ///     var defaultAlarm = new AliCloud.Cms.Alarm("default", new()
        ///     {
        ///         Name = name,
        ///         Project = "acs_ecs_dashboard",
        ///         Metric = "disk_writebytes",
        ///         Period = 900,
        ///         SilenceTime = 300,
        ///         Webhook = "https://www.aliyun.com",
        ///         Enabled = true,
        ///         ContactGroups = new[]
        ///         {
        ///             defaultAlarmContactGroup.AlarmContactGroupName,
        ///         },
        ///         EffectiveInterval = "06:00-20:00",
        ///         MetricDimensions = @default.Apply(@default =&gt; @$"  [
        ///     {{
        ///       \""instanceId\"": \""{@default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0])}\"",
        ///       \""device\"": \""/dev/vda1\""
        ///     }}
        ///   ]
        /// "),
        ///         EscalationsCritical = new AliCloud.Cms.Inputs.AlarmEscalationsCriticalArgs
        ///         {
        ///             Statistics = "Average",
        ///             ComparisonOperator = "&lt;=",
        ///             Threshold = "90",
        ///             Times = 1,
        ///         },
        ///         EscalationsInfo = new AliCloud.Cms.Inputs.AlarmEscalationsInfoArgs
        ///         {
        ///             Statistics = "Minimum",
        ///             ComparisonOperator = "!=",
        ///             Threshold = "20",
        ///             Times = 3,
        ///         },
        ///         EscalationsWarn = new AliCloud.Cms.Inputs.AlarmEscalationsWarnArgs
        ///         {
        ///             Statistics = "Average",
        ///             ComparisonOperator = "==",
        ///             Threshold = "30",
        ///             Times = 5,
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.CloudMonitor.GetServiceMetricAlarmRules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultAlarm.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cloudMonitorServiceMetricAlarmRulesId0"] = ids.Apply(getServiceMetricAlarmRulesResult =&gt; getServiceMetricAlarmRulesResult.Rules[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceMetricAlarmRulesResult> InvokeAsync(GetServiceMetricAlarmRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceMetricAlarmRulesResult>("alicloud:cloudmonitor/getServiceMetricAlarmRules:getServiceMetricAlarmRules", args ?? new GetServiceMetricAlarmRulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Cloud Monitor Service Metric Alarm Rules of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.256.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.Ecs.GetInstances.Invoke(new()
        ///     {
        ///         Status = "Running",
        ///     });
        /// 
        ///     var defaultAlarmContactGroup = new AliCloud.Cms.AlarmContactGroup("default", new()
        ///     {
        ///         AlarmContactGroupName = name,
        ///     });
        /// 
        ///     var defaultAlarm = new AliCloud.Cms.Alarm("default", new()
        ///     {
        ///         Name = name,
        ///         Project = "acs_ecs_dashboard",
        ///         Metric = "disk_writebytes",
        ///         Period = 900,
        ///         SilenceTime = 300,
        ///         Webhook = "https://www.aliyun.com",
        ///         Enabled = true,
        ///         ContactGroups = new[]
        ///         {
        ///             defaultAlarmContactGroup.AlarmContactGroupName,
        ///         },
        ///         EffectiveInterval = "06:00-20:00",
        ///         MetricDimensions = @default.Apply(@default =&gt; @$"  [
        ///     {{
        ///       \""instanceId\"": \""{@default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0])}\"",
        ///       \""device\"": \""/dev/vda1\""
        ///     }}
        ///   ]
        /// "),
        ///         EscalationsCritical = new AliCloud.Cms.Inputs.AlarmEscalationsCriticalArgs
        ///         {
        ///             Statistics = "Average",
        ///             ComparisonOperator = "&lt;=",
        ///             Threshold = "90",
        ///             Times = 1,
        ///         },
        ///         EscalationsInfo = new AliCloud.Cms.Inputs.AlarmEscalationsInfoArgs
        ///         {
        ///             Statistics = "Minimum",
        ///             ComparisonOperator = "!=",
        ///             Threshold = "20",
        ///             Times = 3,
        ///         },
        ///         EscalationsWarn = new AliCloud.Cms.Inputs.AlarmEscalationsWarnArgs
        ///         {
        ///             Statistics = "Average",
        ///             ComparisonOperator = "==",
        ///             Threshold = "30",
        ///             Times = 5,
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.CloudMonitor.GetServiceMetricAlarmRules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultAlarm.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cloudMonitorServiceMetricAlarmRulesId0"] = ids.Apply(getServiceMetricAlarmRulesResult =&gt; getServiceMetricAlarmRulesResult.Rules[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceMetricAlarmRulesResult> Invoke(GetServiceMetricAlarmRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceMetricAlarmRulesResult>("alicloud:cloudmonitor/getServiceMetricAlarmRules:getServiceMetricAlarmRules", args ?? new GetServiceMetricAlarmRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Cloud Monitor Service Metric Alarm Rules of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.256.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.Ecs.GetInstances.Invoke(new()
        ///     {
        ///         Status = "Running",
        ///     });
        /// 
        ///     var defaultAlarmContactGroup = new AliCloud.Cms.AlarmContactGroup("default", new()
        ///     {
        ///         AlarmContactGroupName = name,
        ///     });
        /// 
        ///     var defaultAlarm = new AliCloud.Cms.Alarm("default", new()
        ///     {
        ///         Name = name,
        ///         Project = "acs_ecs_dashboard",
        ///         Metric = "disk_writebytes",
        ///         Period = 900,
        ///         SilenceTime = 300,
        ///         Webhook = "https://www.aliyun.com",
        ///         Enabled = true,
        ///         ContactGroups = new[]
        ///         {
        ///             defaultAlarmContactGroup.AlarmContactGroupName,
        ///         },
        ///         EffectiveInterval = "06:00-20:00",
        ///         MetricDimensions = @default.Apply(@default =&gt; @$"  [
        ///     {{
        ///       \""instanceId\"": \""{@default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0])}\"",
        ///       \""device\"": \""/dev/vda1\""
        ///     }}
        ///   ]
        /// "),
        ///         EscalationsCritical = new AliCloud.Cms.Inputs.AlarmEscalationsCriticalArgs
        ///         {
        ///             Statistics = "Average",
        ///             ComparisonOperator = "&lt;=",
        ///             Threshold = "90",
        ///             Times = 1,
        ///         },
        ///         EscalationsInfo = new AliCloud.Cms.Inputs.AlarmEscalationsInfoArgs
        ///         {
        ///             Statistics = "Minimum",
        ///             ComparisonOperator = "!=",
        ///             Threshold = "20",
        ///             Times = 3,
        ///         },
        ///         EscalationsWarn = new AliCloud.Cms.Inputs.AlarmEscalationsWarnArgs
        ///         {
        ///             Statistics = "Average",
        ///             ComparisonOperator = "==",
        ///             Threshold = "30",
        ///             Times = 5,
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.CloudMonitor.GetServiceMetricAlarmRules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultAlarm.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cloudMonitorServiceMetricAlarmRulesId0"] = ids.Apply(getServiceMetricAlarmRulesResult =&gt; getServiceMetricAlarmRulesResult.Rules[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceMetricAlarmRulesResult> Invoke(GetServiceMetricAlarmRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceMetricAlarmRulesResult>("alicloud:cloudmonitor/getServiceMetricAlarmRules:getServiceMetricAlarmRules", args ?? new GetServiceMetricAlarmRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceMetricAlarmRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The monitoring dimensions of the specified resource.
        /// </summary>
        [Input("dimensions")]
        public string? Dimensions { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Metric Alarm Rule IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the metric.
        /// </summary>
        [Input("metricName")]
        public string? MetricName { get; set; }

        /// <summary>
        /// The namespace of the cloud service.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The name of the alert rule.
        /// </summary>
        [Input("ruleName")]
        public string? RuleName { get; set; }

        /// <summary>
        /// Specifies whether to query enabled or disabled alert rules. Valid values: `True`, `False`.
        /// </summary>
        [Input("status")]
        public bool? Status { get; set; }

        public GetServiceMetricAlarmRulesArgs()
        {
        }
        public static new GetServiceMetricAlarmRulesArgs Empty => new GetServiceMetricAlarmRulesArgs();
    }

    public sealed class GetServiceMetricAlarmRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The monitoring dimensions of the specified resource.
        /// </summary>
        [Input("dimensions")]
        public Input<string>? Dimensions { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Metric Alarm Rule IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the metric.
        /// </summary>
        [Input("metricName")]
        public Input<string>? MetricName { get; set; }

        /// <summary>
        /// The namespace of the cloud service.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The name of the alert rule.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Specifies whether to query enabled or disabled alert rules. Valid values: `True`, `False`.
        /// </summary>
        [Input("status")]
        public Input<bool>? Status { get; set; }

        public GetServiceMetricAlarmRulesInvokeArgs()
        {
        }
        public static new GetServiceMetricAlarmRulesInvokeArgs Empty => new GetServiceMetricAlarmRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceMetricAlarmRulesResult
    {
        /// <summary>
        /// The dimensions of the alert rule.
        /// </summary>
        public readonly string? Dimensions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The metric that is used to monitor the cloud service.
        /// </summary>
        public readonly string? MetricName;
        /// <summary>
        /// The namespace of the cloud service.
        /// </summary>
        public readonly string? Namespace;
        public readonly string? OutputFile;
        /// <summary>
        /// The name of the alert rule.
        /// </summary>
        public readonly string? RuleName;
        /// <summary>
        /// A list of Hybrid Double Writes. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceMetricAlarmRulesRuleResult> Rules;
        /// <summary>
        /// Indicates whether the alert rule is enabled.
        /// </summary>
        public readonly bool? Status;

        [OutputConstructor]
        private GetServiceMetricAlarmRulesResult(
            string? dimensions,

            string id,

            ImmutableArray<string> ids,

            string? metricName,

            string? @namespace,

            string? outputFile,

            string? ruleName,

            ImmutableArray<Outputs.GetServiceMetricAlarmRulesRuleResult> rules,

            bool? status)
        {
            Dimensions = dimensions;
            Id = id;
            Ids = ids;
            MetricName = metricName;
            Namespace = @namespace;
            OutputFile = outputFile;
            RuleName = ruleName;
            Rules = rules;
            Status = status;
        }
    }
}
