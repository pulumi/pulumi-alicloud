// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Aligreen
{
    /// <summary>
    /// Provides a Aligreen Image Lib resource.
    /// 
    /// Image library for image detection.
    /// 
    /// For information about Aligreen Image Lib and how to use it, see [What is Image Lib](https://next.api.alibabacloud.com/document/Green/2017-08-23/CreateImageLib).
    /// 
    /// &gt; **NOTE:** Available since v1.228.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform";
    ///     var defaultUalunB = new AliCloud.Aligreen.BizType("defaultUalunB", new()
    ///     {
    ///         BizTypeName = name,
    ///     });
    /// 
    ///     var @default = new AliCloud.Aligreen.ImageLib("default", new()
    ///     {
    ///         Category = "BLACK",
    ///         Enable = true,
    ///         Scene = "PORN",
    ///         ImageLibName = name,
    ///         BizTypes = new[]
    ///         {
    ///             defaultUalunB.BizTypeName,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Aligreen Image Lib can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:aligreen/imageLib:ImageLib example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:aligreen/imageLib:ImageLib")]
    public partial class ImageLib : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of business scenarios. For example: ["bizTypeA", "bizTypeB", "bizTypeC"]
        /// </summary>
        [Output("bizTypes")]
        public Output<ImmutableArray<string>> BizTypes { get; private set; } = null!;

        /// <summary>
        /// The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
        /// </summary>
        [Output("enable")]
        public Output<bool> Enable { get; private set; } = null!;

        /// <summary>
        /// The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
        /// </summary>
        [Output("imageLibName")]
        public Output<string> ImageLibName { get; private set; } = null!;

        /// <summary>
        /// The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
        /// </summary>
        [Output("scene")]
        public Output<string> Scene { get; private set; } = null!;


        /// <summary>
        /// Create a ImageLib resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageLib(string name, ImageLibArgs args, CustomResourceOptions? options = null)
            : base("alicloud:aligreen/imageLib:ImageLib", name, args ?? new ImageLibArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageLib(string name, Input<string> id, ImageLibState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:aligreen/imageLib:ImageLib", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageLib resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageLib Get(string name, Input<string> id, ImageLibState? state = null, CustomResourceOptions? options = null)
        {
            return new ImageLib(name, id, state, options);
        }
    }

    public sealed class ImageLibArgs : global::Pulumi.ResourceArgs
    {
        [Input("bizTypes")]
        private InputList<string>? _bizTypes;

        /// <summary>
        /// List of business scenarios. For example: ["bizTypeA", "bizTypeB", "bizTypeC"]
        /// </summary>
        public InputList<string> BizTypes
        {
            get => _bizTypes ?? (_bizTypes = new InputList<string>());
            set => _bizTypes = value;
        }

        /// <summary>
        /// The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
        /// </summary>
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        /// <summary>
        /// Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
        /// </summary>
        [Input("imageLibName", required: true)]
        public Input<string> ImageLibName { get; set; } = null!;

        /// <summary>
        /// The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
        /// </summary>
        [Input("scene", required: true)]
        public Input<string> Scene { get; set; } = null!;

        public ImageLibArgs()
        {
        }
        public static new ImageLibArgs Empty => new ImageLibArgs();
    }

    public sealed class ImageLibState : global::Pulumi.ResourceArgs
    {
        [Input("bizTypes")]
        private InputList<string>? _bizTypes;

        /// <summary>
        /// List of business scenarios. For example: ["bizTypeA", "bizTypeB", "bizTypeC"]
        /// </summary>
        public InputList<string> BizTypes
        {
            get => _bizTypes ?? (_bizTypes = new InputList<string>());
            set => _bizTypes = value;
        }

        /// <summary>
        /// The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
        /// </summary>
        [Input("imageLibName")]
        public Input<string>? ImageLibName { get; set; }

        /// <summary>
        /// The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
        /// </summary>
        [Input("scene")]
        public Input<string>? Scene { get; set; }

        public ImageLibState()
        {
        }
        public static new ImageLibState Empty => new ImageLibState();
    }
}
