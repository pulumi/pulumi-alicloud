// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cas.Outputs
{

    [OutputType]
    public sealed class GetServiceCertificatesCertificateResult
    {
        /// <summary>
        /// Whether the certificate was purchased from Aliyun. **Note:** From version 1.232.0, `BuyInAliyun` takes effect only if `EnableDetails` is set to `True`.
        /// </summary>
        public readonly bool BuyInAliyun;
        /// <summary>
        /// The Cert of the certificate. **Note:** `Cert` takes effect only if `EnableDetails` is set to `True`.
        /// </summary>
        public readonly string Cert;
        /// <summary>
        /// The ID of the certificate.
        /// </summary>
        public readonly string CertId;
        /// <summary>
        /// The name of the certificate.
        /// </summary>
        public readonly string CertificateName;
        /// <summary>
        /// The city in which the organization is located.
        /// </summary>
        public readonly string City;
        /// <summary>
        /// The parent domain name of the certificate.
        /// </summary>
        public readonly string Common;
        /// <summary>
        /// The code of the country in which the organization is located.
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// The time at which the certificate expires.
        /// </summary>
        public readonly string EndDate;
        /// <summary>
        /// Whether the certificate has expired.
        /// </summary>
        public readonly bool Expired;
        /// <summary>
        /// The fingerprint of the certificate.
        /// </summary>
        public readonly string Fingerprint;
        /// <summary>
        /// The ID of the Ssl Certificates Service Certificate.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The issuer of the certificate.
        /// </summary>
        public readonly string Issuer;
        /// <summary>
        /// The Key of the certificate. **Note:** `Key` takes effect only if `EnableDetails` is set to `True`.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// (Deprecated since v1.129.0) The name of the certificate. **Note:** Field `Name` has been deprecated from provider version 1.129.0. New field `CertificateName` instead.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the organization that is associated with the certificate.
        /// </summary>
        public readonly string OrgName;
        /// <summary>
        /// The province or autonomous region in which the organization is located.
        /// </summary>
        public readonly string Province;
        /// <summary>
        /// All domain names that are bound to the certificate.
        /// </summary>
        public readonly string Sans;
        /// <summary>
        /// The time at which the certificate starts to take effect.
        /// </summary>
        public readonly string StartDate;

        [OutputConstructor]
        private GetServiceCertificatesCertificateResult(
            bool buyInAliyun,

            string cert,

            string certId,

            string certificateName,

            string city,

            string common,

            string country,

            string endDate,

            bool expired,

            string fingerprint,

            string id,

            string issuer,

            string key,

            string name,

            string orgName,

            string province,

            string sans,

            string startDate)
        {
            BuyInAliyun = buyInAliyun;
            Cert = cert;
            CertId = certId;
            CertificateName = certificateName;
            City = city;
            Common = common;
            Country = country;
            EndDate = endDate;
            Expired = expired;
            Fingerprint = fingerprint;
            Id = id;
            Issuer = issuer;
            Key = key;
            Name = name;
            OrgName = orgName;
            Province = province;
            Sans = sans;
            StartDate = startDate;
        }
    }
}
