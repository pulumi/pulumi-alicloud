// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eflo
{
    /// <summary>
    /// Provides a Eflo Experiment Plan Template resource.
    /// 
    /// For information about Eflo Experiment Plan Template and how to use it, see [What is Experiment Plan Template](https://www.alibabacloud.com/help/en/pai/developer-reference/api-eflo-cnp-2023-08-28-createexperimentplantemplate).
    /// 
    /// &gt; **NOTE:** Available since v1.248.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.Eflo.ExperimentPlanTemplate("default", new()
    ///     {
    ///         TemplatePipelines = new[]
    ///         {
    ///             new AliCloud.Eflo.Inputs.ExperimentPlanTemplateTemplatePipelineArgs
    ///             {
    ///                 WorkloadId = 2,
    ///                 WorkloadName = "MatMul",
    ///                 EnvParams = new AliCloud.Eflo.Inputs.ExperimentPlanTemplateTemplatePipelineEnvParamsArgs
    ///                 {
    ///                     CpuPerWorker = 90,
    ///                     GpuPerWorker = 8,
    ///                     MemoryPerWorker = 500,
    ///                     ShareMemory = 500,
    ///                     WorkerNum = 1,
    ///                     PyTorchVersion = "1",
    ///                     GpuDriverVersion = "1",
    ///                     CudaVersion = "1",
    ///                     NcclVersion = "1",
    ///                 },
    ///                 PipelineOrder = 1,
    ///                 Scene = "baseline",
    ///             },
    ///         },
    ///         PrivacyLevel = "private",
    ///         TemplateName = name,
    ///         TemplateDescription = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Eflo Experiment Plan Template can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate")]
    public partial class ExperimentPlanTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Used to indicate the privacy level of the content or information. It can have the following optional parameters:
        /// - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
        /// - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
        /// </summary>
        [Output("privacyLevel")]
        public Output<string> PrivacyLevel { get; private set; } = null!;

        /// <summary>
        /// Describe the purpose of this template.
        /// </summary>
        [Output("templateDescription")]
        public Output<string?> TemplateDescription { get; private set; } = null!;

        /// <summary>
        /// The ID of the template.
        /// </summary>
        [Output("templateId")]
        public Output<string> TemplateId { get; private set; } = null!;

        /// <summary>
        /// Help users identify and select specific templates.
        /// </summary>
        [Output("templateName")]
        public Output<string> TemplateName { get; private set; } = null!;

        /// <summary>
        /// Representative Template Pipeline. See `template_pipeline` below.
        /// </summary>
        [Output("templatePipelines")]
        public Output<ImmutableArray<Outputs.ExperimentPlanTemplateTemplatePipeline>> TemplatePipelines { get; private set; } = null!;


        /// <summary>
        /// Create a ExperimentPlanTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExperimentPlanTemplate(string name, ExperimentPlanTemplateArgs args, CustomResourceOptions? options = null)
            : base("alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate", name, args ?? new ExperimentPlanTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExperimentPlanTemplate(string name, Input<string> id, ExperimentPlanTemplateState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExperimentPlanTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExperimentPlanTemplate Get(string name, Input<string> id, ExperimentPlanTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new ExperimentPlanTemplate(name, id, state, options);
        }
    }

    public sealed class ExperimentPlanTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Used to indicate the privacy level of the content or information. It can have the following optional parameters:
        /// - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
        /// - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
        /// </summary>
        [Input("privacyLevel", required: true)]
        public Input<string> PrivacyLevel { get; set; } = null!;

        /// <summary>
        /// Describe the purpose of this template.
        /// </summary>
        [Input("templateDescription")]
        public Input<string>? TemplateDescription { get; set; }

        /// <summary>
        /// Help users identify and select specific templates.
        /// </summary>
        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        [Input("templatePipelines", required: true)]
        private InputList<Inputs.ExperimentPlanTemplateTemplatePipelineArgs>? _templatePipelines;

        /// <summary>
        /// Representative Template Pipeline. See `template_pipeline` below.
        /// </summary>
        public InputList<Inputs.ExperimentPlanTemplateTemplatePipelineArgs> TemplatePipelines
        {
            get => _templatePipelines ?? (_templatePipelines = new InputList<Inputs.ExperimentPlanTemplateTemplatePipelineArgs>());
            set => _templatePipelines = value;
        }

        public ExperimentPlanTemplateArgs()
        {
        }
        public static new ExperimentPlanTemplateArgs Empty => new ExperimentPlanTemplateArgs();
    }

    public sealed class ExperimentPlanTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Used to indicate the privacy level of the content or information. It can have the following optional parameters:
        /// - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
        /// - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
        /// </summary>
        [Input("privacyLevel")]
        public Input<string>? PrivacyLevel { get; set; }

        /// <summary>
        /// Describe the purpose of this template.
        /// </summary>
        [Input("templateDescription")]
        public Input<string>? TemplateDescription { get; set; }

        /// <summary>
        /// The ID of the template.
        /// </summary>
        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        /// <summary>
        /// Help users identify and select specific templates.
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        [Input("templatePipelines")]
        private InputList<Inputs.ExperimentPlanTemplateTemplatePipelineGetArgs>? _templatePipelines;

        /// <summary>
        /// Representative Template Pipeline. See `template_pipeline` below.
        /// </summary>
        public InputList<Inputs.ExperimentPlanTemplateTemplatePipelineGetArgs> TemplatePipelines
        {
            get => _templatePipelines ?? (_templatePipelines = new InputList<Inputs.ExperimentPlanTemplateTemplatePipelineGetArgs>());
            set => _templatePipelines = value;
        }

        public ExperimentPlanTemplateState()
        {
        }
        public static new ExperimentPlanTemplateState Empty => new ExperimentPlanTemplateState();
    }
}
