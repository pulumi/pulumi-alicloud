// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eflo
{
    /// <summary>
    /// Provides a Eflo Node resource.
    /// 
    /// Large computing node.
    /// 
    /// For information about Eflo Node and how to use it, see [What is Node](https://next.api.alibabacloud.com/document/BssOpenApi/2017-12-14/CreateInstance).
    /// 
    /// &gt; **NOTE:** Available since v1.246.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultNode = new AliCloud.Eflo.Node("default", new()
    ///     {
    ///         Period = 36,
    ///         DiscountLevel = "36",
    ///         BillingCycle = "1month",
    ///         Classify = "gpuserver",
    ///         Zone = "cn-hangzhou-b",
    ///         ProductForm = "instance",
    ///         PaymentRatio = "0",
    ///         HpnZone = "B1",
    ///         ServerArch = "bmserver",
    ///         ComputingServer = "efg1.nvga1n",
    ///         StageNum = "36",
    ///         RenewalStatus = "AutoRenewal",
    ///         RenewPeriod = 36,
    ///         Status = "Unused",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Eflo Node can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:eflo/node:Node example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:eflo/node:Node")]
    public partial class Node : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Billing cycle
        /// </summary>
        [Output("billingCycle")]
        public Output<string?> BillingCycle { get; private set; } = null!;

        /// <summary>
        /// Classification
        /// </summary>
        [Output("classify")]
        public Output<string?> Classify { get; private set; } = null!;

        /// <summary>
        /// Node Model
        /// </summary>
        [Output("computingServer")]
        public Output<string?> ComputingServer { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Offer Information
        /// </summary>
        [Output("discountLevel")]
        public Output<string?> DiscountLevel { get; private set; } = null!;

        /// <summary>
        /// Cluster Number
        /// </summary>
        [Output("hpnZone")]
        public Output<string?> HpnZone { get; private set; } = null!;

        /// <summary>
        /// Down payment ratio
        /// </summary>
        [Output("paymentRatio")]
        public Output<string?> PaymentRatio { get; private set; } = null!;

        /// <summary>
        /// Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// Form
        /// </summary>
        [Output("productForm")]
        public Output<string?> ProductForm { get; private set; } = null!;

        /// <summary>
        /// Automatic renewal period, in months.
        /// 
        /// &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        /// </summary>
        [Output("renewPeriod")]
        public Output<int?> RenewPeriod { get; private set; } = null!;

        /// <summary>
        /// Automatic renewal status, value:
        /// - AutoRenewal: automatic renewal.
        /// - ManualRenewal: manual renewal.
        /// 
        /// The default ManualRenewal.
        /// </summary>
        [Output("renewalStatus")]
        public Output<string?> RenewalStatus { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// Architecture
        /// </summary>
        [Output("serverArch")]
        public Output<string?> ServerArch { get; private set; } = null!;

        /// <summary>
        /// Number of stages
        /// </summary>
        [Output("stageNum")]
        public Output<string?> StageNum { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Availability Zone
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a Node resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Node(string name, NodeArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:eflo/node:Node", name, args ?? new NodeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Node(string name, Input<string> id, NodeState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:eflo/node:Node", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Node resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Node Get(string name, Input<string> id, NodeState? state = null, CustomResourceOptions? options = null)
        {
            return new Node(name, id, state, options);
        }
    }

    public sealed class NodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Billing cycle
        /// </summary>
        [Input("billingCycle")]
        public Input<string>? BillingCycle { get; set; }

        /// <summary>
        /// Classification
        /// </summary>
        [Input("classify")]
        public Input<string>? Classify { get; set; }

        /// <summary>
        /// Node Model
        /// </summary>
        [Input("computingServer")]
        public Input<string>? ComputingServer { get; set; }

        /// <summary>
        /// Offer Information
        /// </summary>
        [Input("discountLevel")]
        public Input<string>? DiscountLevel { get; set; }

        /// <summary>
        /// Cluster Number
        /// </summary>
        [Input("hpnZone")]
        public Input<string>? HpnZone { get; set; }

        /// <summary>
        /// Down payment ratio
        /// </summary>
        [Input("paymentRatio")]
        public Input<string>? PaymentRatio { get; set; }

        /// <summary>
        /// Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// Form
        /// </summary>
        [Input("productForm")]
        public Input<string>? ProductForm { get; set; }

        /// <summary>
        /// Automatic renewal period, in months.
        /// 
        /// &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        /// </summary>
        [Input("renewPeriod")]
        public Input<int>? RenewPeriod { get; set; }

        /// <summary>
        /// Automatic renewal status, value:
        /// - AutoRenewal: automatic renewal.
        /// - ManualRenewal: manual renewal.
        /// 
        /// The default ManualRenewal.
        /// </summary>
        [Input("renewalStatus")]
        public Input<string>? RenewalStatus { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Architecture
        /// </summary>
        [Input("serverArch")]
        public Input<string>? ServerArch { get; set; }

        /// <summary>
        /// Number of stages
        /// </summary>
        [Input("stageNum")]
        public Input<string>? StageNum { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Availability Zone
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public NodeArgs()
        {
        }
        public static new NodeArgs Empty => new NodeArgs();
    }

    public sealed class NodeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Billing cycle
        /// </summary>
        [Input("billingCycle")]
        public Input<string>? BillingCycle { get; set; }

        /// <summary>
        /// Classification
        /// </summary>
        [Input("classify")]
        public Input<string>? Classify { get; set; }

        /// <summary>
        /// Node Model
        /// </summary>
        [Input("computingServer")]
        public Input<string>? ComputingServer { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Offer Information
        /// </summary>
        [Input("discountLevel")]
        public Input<string>? DiscountLevel { get; set; }

        /// <summary>
        /// Cluster Number
        /// </summary>
        [Input("hpnZone")]
        public Input<string>? HpnZone { get; set; }

        /// <summary>
        /// Down payment ratio
        /// </summary>
        [Input("paymentRatio")]
        public Input<string>? PaymentRatio { get; set; }

        /// <summary>
        /// Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// Form
        /// </summary>
        [Input("productForm")]
        public Input<string>? ProductForm { get; set; }

        /// <summary>
        /// Automatic renewal period, in months.
        /// 
        /// &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
        /// </summary>
        [Input("renewPeriod")]
        public Input<int>? RenewPeriod { get; set; }

        /// <summary>
        /// Automatic renewal status, value:
        /// - AutoRenewal: automatic renewal.
        /// - ManualRenewal: manual renewal.
        /// 
        /// The default ManualRenewal.
        /// </summary>
        [Input("renewalStatus")]
        public Input<string>? RenewalStatus { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Architecture
        /// </summary>
        [Input("serverArch")]
        public Input<string>? ServerArch { get; set; }

        /// <summary>
        /// Number of stages
        /// </summary>
        [Input("stageNum")]
        public Input<string>? StageNum { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Availability Zone
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public NodeState()
        {
        }
        public static new NodeState Empty => new NodeState();
    }
}
