// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eflo.Inputs
{

    public sealed class ResourceUserAccessParamArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessId", required: true)]
        private Input<string>? _accessId;

        /// <summary>
        /// Access keys are important credentials for authentication.
        /// </summary>
        public Input<string>? AccessId
        {
            get => _accessId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessKey", required: true)]
        private Input<string>? _accessKey;

        /// <summary>
        /// A Secret Key is a Secret credential paired with an access Key to verify a user's identity and protect the security of an interface.
        /// </summary>
        public Input<string>? AccessKey
        {
            get => _accessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// An Endpoint is a network address for accessing a service or API, usually a URL to a specific service instance.
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// A Workspace generally refers to a separate space created by a user on a particular computing environment or platform.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public ResourceUserAccessParamArgs()
        {
        }
        public static new ResourceUserAccessParamArgs Empty => new ResourceUserAccessParamArgs();
    }
}
