// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.SchedulerX
{
    /// <summary>
    /// Provides a Schedulerx App Group resource.
    /// 
    /// For information about Schedulerx App Group and how to use it, see [What is App Group](https://www.alibabacloud.com/help/en/schedulerx/schedulerx-serverless/developer-reference/api-schedulerx2-2019-04-30-createappgroup).
    /// 
    /// &gt; **NOTE:** Available since v1.240.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var createNameSpace = new AliCloud.SchedulerX.Namespace("CreateNameSpace", new()
    ///     {
    ///         NamespaceName = name,
    ///         Description = name,
    ///     });
    /// 
    ///     var @default = new AliCloud.SchedulerX.AppGroup("default", new()
    ///     {
    ///         MaxJobs = 100,
    ///         MonitorContactsJson = JsonSerializer.Serialize(new[]
    ///         {
    ///             new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["userName"] = "name1",
    ///                 ["userPhone"] = "89756******",
    ///             },
    ///             new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["userName"] = "name2",
    ///                 ["ding"] = "http://www.example.com",
    ///             },
    ///         }),
    ///         DeleteJobs = false,
    ///         AppType = 1,
    ///         NamespaceSource = "schedulerx",
    ///         GroupId = "example-appgroup-pop-autoexample",
    ///         NamespaceName = "default",
    ///         Description = name,
    ///         MonitorConfigJson = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["sendChannel"] = "sms,ding",
    ///         }),
    ///         AppVersion = "1",
    ///         AppName = "example-appgroup-pop-autoexample",
    ///         Namespace = createNameSpace.NamespaceUid,
    ///         EnableLog = false,
    ///         ScheduleBusyWorkers = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Schedulerx App Group can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:schedulerx/appGroup:AppGroup example &lt;namespace&gt;:&lt;group_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:schedulerx/appGroup:AppGroup")]
    public partial class AppGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Application Name
        /// </summary>
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        /// <summary>
        /// Application type.
        /// - 1, general application.
        /// - 2, k8s application.
        /// </summary>
        [Output("appType")]
        public Output<int?> AppType { get; private set; } = null!;

        /// <summary>
        /// Application Version, 1: Basic Edition, 2: Professional Edition
        /// </summary>
        [Output("appVersion")]
        public Output<string?> AppVersion { get; private set; } = null!;

        /// <summary>
        /// Whether to delete the task in the application Group. The values are as follows:
        /// </summary>
        [Output("deleteJobs")]
        public Output<bool?> DeleteJobs { get; private set; } = null!;

        /// <summary>
        /// Application Description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the log.
        /// - true: On
        /// - false: Close
        /// </summary>
        [Output("enableLog")]
        public Output<bool?> EnableLog { get; private set; } = null!;

        /// <summary>
        /// Application ID
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The maximum number of instances running at the same time. The default value is 1, that is, the last trigger is not completed, and the next trigger will not be performed even at the running time.
        /// </summary>
        [Output("maxConcurrency")]
        public Output<int?> MaxConcurrency { get; private set; } = null!;

        /// <summary>
        /// Application Grouping Configurable Maximum Number of Tasks
        /// </summary>
        [Output("maxJobs")]
        public Output<int?> MaxJobs { get; private set; } = null!;

        /// <summary>
        /// Alarm configuration JSON field. For more information about this field, see **Request Parameters * *.
        /// </summary>
        [Output("monitorConfigJson")]
        public Output<string?> MonitorConfigJson { get; private set; } = null!;

        /// <summary>
        /// Alarm contact JSON format.
        /// </summary>
        [Output("monitorContactsJson")]
        public Output<string?> MonitorContactsJson { get; private set; } = null!;

        /// <summary>
        /// The namespace ID, which is obtained on the namespace page of the console.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Output("namespaceName")]
        public Output<string> NamespaceName { get; private set; } = null!;

        /// <summary>
        /// Not supported for the time being, no need to fill in.
        /// </summary>
        [Output("namespaceSource")]
        public Output<string?> NamespaceSource { get; private set; } = null!;

        /// <summary>
        /// Whether to schedule a busy machine.
        /// </summary>
        [Output("scheduleBusyWorkers")]
        public Output<bool?> ScheduleBusyWorkers { get; private set; } = null!;


        /// <summary>
        /// Create a AppGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppGroup(string name, AppGroupArgs args, CustomResourceOptions? options = null)
            : base("alicloud:schedulerx/appGroup:AppGroup", name, args ?? new AppGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppGroup(string name, Input<string> id, AppGroupState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:schedulerx/appGroup:AppGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppGroup Get(string name, Input<string> id, AppGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new AppGroup(name, id, state, options);
        }
    }

    public sealed class AppGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application Name
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// Application type.
        /// - 1, general application.
        /// - 2, k8s application.
        /// </summary>
        [Input("appType")]
        public Input<int>? AppType { get; set; }

        /// <summary>
        /// Application Version, 1: Basic Edition, 2: Professional Edition
        /// </summary>
        [Input("appVersion")]
        public Input<string>? AppVersion { get; set; }

        /// <summary>
        /// Whether to delete the task in the application Group. The values are as follows:
        /// </summary>
        [Input("deleteJobs")]
        public Input<bool>? DeleteJobs { get; set; }

        /// <summary>
        /// Application Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable the log.
        /// - true: On
        /// - false: Close
        /// </summary>
        [Input("enableLog")]
        public Input<bool>? EnableLog { get; set; }

        /// <summary>
        /// Application ID
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The maximum number of instances running at the same time. The default value is 1, that is, the last trigger is not completed, and the next trigger will not be performed even at the running time.
        /// </summary>
        [Input("maxConcurrency")]
        public Input<int>? MaxConcurrency { get; set; }

        /// <summary>
        /// Application Grouping Configurable Maximum Number of Tasks
        /// </summary>
        [Input("maxJobs")]
        public Input<int>? MaxJobs { get; set; }

        /// <summary>
        /// Alarm configuration JSON field. For more information about this field, see **Request Parameters * *.
        /// </summary>
        [Input("monitorConfigJson")]
        public Input<string>? MonitorConfigJson { get; set; }

        /// <summary>
        /// Alarm contact JSON format.
        /// </summary>
        [Input("monitorContactsJson")]
        public Input<string>? MonitorContactsJson { get; set; }

        /// <summary>
        /// The namespace ID, which is obtained on the namespace page of the console.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// Not supported for the time being, no need to fill in.
        /// </summary>
        [Input("namespaceSource")]
        public Input<string>? NamespaceSource { get; set; }

        /// <summary>
        /// Whether to schedule a busy machine.
        /// </summary>
        [Input("scheduleBusyWorkers")]
        public Input<bool>? ScheduleBusyWorkers { get; set; }

        public AppGroupArgs()
        {
        }
        public static new AppGroupArgs Empty => new AppGroupArgs();
    }

    public sealed class AppGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Application Name
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// Application type.
        /// - 1, general application.
        /// - 2, k8s application.
        /// </summary>
        [Input("appType")]
        public Input<int>? AppType { get; set; }

        /// <summary>
        /// Application Version, 1: Basic Edition, 2: Professional Edition
        /// </summary>
        [Input("appVersion")]
        public Input<string>? AppVersion { get; set; }

        /// <summary>
        /// Whether to delete the task in the application Group. The values are as follows:
        /// </summary>
        [Input("deleteJobs")]
        public Input<bool>? DeleteJobs { get; set; }

        /// <summary>
        /// Application Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable the log.
        /// - true: On
        /// - false: Close
        /// </summary>
        [Input("enableLog")]
        public Input<bool>? EnableLog { get; set; }

        /// <summary>
        /// Application ID
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The maximum number of instances running at the same time. The default value is 1, that is, the last trigger is not completed, and the next trigger will not be performed even at the running time.
        /// </summary>
        [Input("maxConcurrency")]
        public Input<int>? MaxConcurrency { get; set; }

        /// <summary>
        /// Application Grouping Configurable Maximum Number of Tasks
        /// </summary>
        [Input("maxJobs")]
        public Input<int>? MaxJobs { get; set; }

        /// <summary>
        /// Alarm configuration JSON field. For more information about this field, see **Request Parameters * *.
        /// </summary>
        [Input("monitorConfigJson")]
        public Input<string>? MonitorConfigJson { get; set; }

        /// <summary>
        /// Alarm contact JSON format.
        /// </summary>
        [Input("monitorContactsJson")]
        public Input<string>? MonitorContactsJson { get; set; }

        /// <summary>
        /// The namespace ID, which is obtained on the namespace page of the console.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The namespace name.
        /// </summary>
        [Input("namespaceName")]
        public Input<string>? NamespaceName { get; set; }

        /// <summary>
        /// Not supported for the time being, no need to fill in.
        /// </summary>
        [Input("namespaceSource")]
        public Input<string>? NamespaceSource { get; set; }

        /// <summary>
        /// Whether to schedule a busy machine.
        /// </summary>
        [Input("scheduleBusyWorkers")]
        public Input<bool>? ScheduleBusyWorkers { get; set; }

        public AppGroupState()
        {
        }
        public static new AppGroupState Empty => new AppGroupState();
    }
}
