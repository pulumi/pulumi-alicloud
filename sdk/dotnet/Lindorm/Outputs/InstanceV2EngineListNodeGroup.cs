// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Lindorm.Outputs
{

    [OutputType]
    public sealed class InstanceV2EngineListNodeGroup
    {
        /// <summary>
        /// Node Type
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// Number of CPU cores
        /// </summary>
        public readonly int? CpuCoreCount;
        /// <summary>
        /// Whether to mount  local cloud disks
        /// </summary>
        public readonly bool? EnableAttachLocalDisk;
        /// <summary>
        /// Node memory size
        /// </summary>
        public readonly int? MemorySizeGiB;
        /// <summary>
        /// Number of nodes
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// Local cloud disk storage capacity
        /// </summary>
        public readonly int? NodeDiskSize;
        /// <summary>
        /// Node Disk Type
        /// </summary>
        public readonly string? NodeDiskType;
        /// <summary>
        /// Node Specifications
        /// </summary>
        public readonly string NodeSpec;
        /// <summary>
        /// Resource group name
        /// </summary>
        public readonly string ResourceGroupName;
        /// <summary>
        /// Spec Id
        /// </summary>
        public readonly string? SpecId;
        /// <summary>
        /// Node Status
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private InstanceV2EngineListNodeGroup(
            string? category,

            int? cpuCoreCount,

            bool? enableAttachLocalDisk,

            int? memorySizeGiB,

            int nodeCount,

            int? nodeDiskSize,

            string? nodeDiskType,

            string nodeSpec,

            string resourceGroupName,

            string? specId,

            string? status)
        {
            Category = category;
            CpuCoreCount = cpuCoreCount;
            EnableAttachLocalDisk = enableAttachLocalDisk;
            MemorySizeGiB = memorySizeGiB;
            NodeCount = nodeCount;
            NodeDiskSize = nodeDiskSize;
            NodeDiskType = nodeDiskType;
            NodeSpec = nodeSpec;
            ResourceGroupName = resourceGroupName;
            SpecId = specId;
            Status = status;
        }
    }
}
