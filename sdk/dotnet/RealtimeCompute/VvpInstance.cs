// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.RealtimeCompute
{
    /// <summary>
    /// ## Import
    /// 
    /// Realtime Compute Vvp Instance can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:realtimecompute/vvpInstance:VvpInstance example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:realtimecompute/vvpInstance:VvpInstance")]
    public partial class VvpInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The number of subscription periods. If the payment type is PRE, this parameter is required.
        /// </summary>
        [Output("duration")]
        public Output<int?> Duration { get; private set; } = null!;

        /// <summary>
        /// The payment type of the resource.
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// The subscription period. If the payment type is PRE, this parameter is required.
        /// </summary>
        [Output("pricingCycle")]
        public Output<string?> PricingCycle { get; private set; } = null!;

        /// <summary>
        /// The resource group to which the newly purchased instance belongs.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// Resource specifications. See `resource_spec` below.
        /// </summary>
        [Output("resourceSpec")]
        public Output<Outputs.VvpInstanceResourceSpec> ResourceSpec { get; private set; } = null!;

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Store information. See `storage` below.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.VvpInstanceStorage> Storage { get; private set; } = null!;

        /// <summary>
        /// The tags of the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The VPC ID of the user.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Virtual Switch ID.
        /// </summary>
        [Output("vswitchIds")]
        public Output<ImmutableArray<string>> VswitchIds { get; private set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Output("vvpInstanceName")]
        public Output<string> VvpInstanceName { get; private set; } = null!;

        /// <summary>
        /// The zone ID of the resource.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a VvpInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VvpInstance(string name, VvpInstanceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:realtimecompute/vvpInstance:VvpInstance", name, args ?? new VvpInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VvpInstance(string name, Input<string> id, VvpInstanceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:realtimecompute/vvpInstance:VvpInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VvpInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VvpInstance Get(string name, Input<string> id, VvpInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new VvpInstance(name, id, state, options);
        }
    }

    public sealed class VvpInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of subscription periods. If the payment type is PRE, this parameter is required.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// The payment type of the resource.
        /// </summary>
        [Input("paymentType", required: true)]
        public Input<string> PaymentType { get; set; } = null!;

        /// <summary>
        /// The subscription period. If the payment type is PRE, this parameter is required.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// The resource group to which the newly purchased instance belongs.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Resource specifications. See `resource_spec` below.
        /// </summary>
        [Input("resourceSpec")]
        public Input<Inputs.VvpInstanceResourceSpecArgs>? ResourceSpec { get; set; }

        /// <summary>
        /// Store information. See `storage` below.
        /// </summary>
        [Input("storage", required: true)]
        public Input<Inputs.VvpInstanceStorageArgs> Storage { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC ID of the user.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        [Input("vswitchIds", required: true)]
        private InputList<string>? _vswitchIds;

        /// <summary>
        /// Virtual Switch ID.
        /// </summary>
        public InputList<string> VswitchIds
        {
            get => _vswitchIds ?? (_vswitchIds = new InputList<string>());
            set => _vswitchIds = value;
        }

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("vvpInstanceName", required: true)]
        public Input<string> VvpInstanceName { get; set; } = null!;

        /// <summary>
        /// The zone ID of the resource.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public VvpInstanceArgs()
        {
        }
        public static new VvpInstanceArgs Empty => new VvpInstanceArgs();
    }

    public sealed class VvpInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The number of subscription periods. If the payment type is PRE, this parameter is required.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// The payment type of the resource.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// The subscription period. If the payment type is PRE, this parameter is required.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// The resource group to which the newly purchased instance belongs.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Resource specifications. See `resource_spec` below.
        /// </summary>
        [Input("resourceSpec")]
        public Input<Inputs.VvpInstanceResourceSpecGetArgs>? ResourceSpec { get; set; }

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Store information. See `storage` below.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.VvpInstanceStorageGetArgs>? Storage { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The tags of the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC ID of the user.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("vswitchIds")]
        private InputList<string>? _vswitchIds;

        /// <summary>
        /// Virtual Switch ID.
        /// </summary>
        public InputList<string> VswitchIds
        {
            get => _vswitchIds ?? (_vswitchIds = new InputList<string>());
            set => _vswitchIds = value;
        }

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("vvpInstanceName")]
        public Input<string>? VvpInstanceName { get; set; }

        /// <summary>
        /// The zone ID of the resource.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public VvpInstanceState()
        {
        }
        public static new VvpInstanceState Empty => new VvpInstanceState();
    }
}
