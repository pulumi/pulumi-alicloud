// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dds.Outputs
{

    [OutputType]
    public sealed class GetMongoInstancesInstanceResult
    {
        public readonly string AvailabilityZone;
        public readonly string ChargeType;
        public readonly string CreationTime;
        public readonly string Engine;
        public readonly string EngineVersion;
        public readonly string ExpirationTime;
        public readonly string Id;
        public readonly string InstanceClass;
        public readonly string InstanceType;
        public readonly string LockMode;
        public readonly ImmutableArray<Outputs.GetMongoInstancesInstanceMongoResult> Mongos;
        public readonly string Name;
        public readonly string NetworkType;
        public readonly string RegionId;
        public readonly string Replication;
        public readonly ImmutableArray<Outputs.GetMongoInstancesInstanceShardResult> Shards;
        public readonly string Status;
        public readonly int Storage;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetMongoInstancesInstanceResult(
            string availabilityZone,

            string chargeType,

            string creationTime,

            string engine,

            string engineVersion,

            string expirationTime,

            string id,

            string instanceClass,

            string instanceType,

            string lockMode,

            ImmutableArray<Outputs.GetMongoInstancesInstanceMongoResult> mongos,

            string name,

            string networkType,

            string regionId,

            string replication,

            ImmutableArray<Outputs.GetMongoInstancesInstanceShardResult> shards,

            string status,

            int storage,

            ImmutableDictionary<string, string> tags)
        {
            AvailabilityZone = availabilityZone;
            ChargeType = chargeType;
            CreationTime = creationTime;
            Engine = engine;
            EngineVersion = engineVersion;
            ExpirationTime = expirationTime;
            Id = id;
            InstanceClass = instanceClass;
            InstanceType = instanceType;
            LockMode = lockMode;
            Mongos = mongos;
            Name = name;
            NetworkType = networkType;
            RegionId = regionId;
            Replication = replication;
            Shards = shards;
            Status = status;
            Storage = storage;
            Tags = tags;
        }
    }
}
