// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dcdn.Outputs
{

    [OutputType]
    public sealed class GetDomainsDomainResult
    {
        /// <summary>
        /// Indicates the name of the certificate.
        /// </summary>
        public readonly string CertName;
        /// <summary>
        /// The canonical name (CNAME) of the accelerated domain.
        /// </summary>
        public readonly string Cname;
        /// <summary>
        /// The reason that causes the review failure.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The name of the DCDN Domain.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The time when the accelerated domain was last modified.
        /// </summary>
        public readonly string GmtModified;
        /// <summary>
        /// The ID of the DCDN Domain.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// The acceleration region.
        /// </summary>
        public readonly string Scope;
        /// <summary>
        /// The origin information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDomainsDomainSourceResult> Sources;
        /// <summary>
        /// Indicates whether the SSL certificate is enabled.
        /// </summary>
        public readonly string SslProtocol;
        /// <summary>
        /// Indicates the public key of the certificate.
        /// </summary>
        public readonly string SslPub;
        /// <summary>
        /// The status of DCDN Domain.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetDomainsDomainResult(
            string certName,

            string cname,

            string description,

            string domainName,

            string gmtModified,

            string id,

            string resourceGroupId,

            string scope,

            ImmutableArray<Outputs.GetDomainsDomainSourceResult> sources,

            string sslProtocol,

            string sslPub,

            string status)
        {
            CertName = certName;
            Cname = cname;
            Description = description;
            DomainName = domainName;
            GmtModified = gmtModified;
            Id = id;
            ResourceGroupId = resourceGroupId;
            Scope = scope;
            Sources = sources;
            SslProtocol = sslProtocol;
            SslPub = sslPub;
            Status = status;
        }
    }
}
