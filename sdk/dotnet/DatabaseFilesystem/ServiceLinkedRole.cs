// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.DatabaseFilesystem
{
    /// <summary>
    /// Using this data source can create Dbfs service-linked roles(SLR). Dbfs may need to access another Alibaba Cloud service to implement a specific feature. In this case, Dbfs must assume a specific service-linked role, which is a Resource Access Management (RAM) role, to obtain permissions to access another Alibaba Cloud service.
    /// 
    /// For information about Dbfs service-linked roles(SLR) and how to use it, see [What is service-linked roles](https://www.alibabacloud.com/help/doc-detail/181425.htm).
    /// 
    /// &gt; **NOTE:** Available in v1.157.0+.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var serviceLinkedRole = new AliCloud.DatabaseFilesystem.ServiceLinkedRole("serviceLinkedRole", new AliCloud.DatabaseFilesystem.ServiceLinkedRoleArgs
    ///         {
    ///             ProductName = "AliyunServiceRoleForDbfs",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Dbfs service-linked roles(SLR) can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:databasefilesystem/serviceLinkedRole:ServiceLinkedRole example &lt;product_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:databasefilesystem/serviceLinkedRole:ServiceLinkedRole")]
    public partial class ServiceLinkedRole : Pulumi.CustomResource
    {
        /// <summary>
        /// The product name for SLR. Dbfs can automatically create the following service-linked roles: `AliyunServiceRoleForDbfs`.
        /// </summary>
        [Output("productName")]
        public Output<string> ProductName { get; private set; } = null!;

        /// <summary>
        /// The status of the service Associated role. Valid Values: `true`: Created. `false`: not created.
        /// </summary>
        [Output("status")]
        public Output<bool> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceLinkedRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceLinkedRole(string name, ServiceLinkedRoleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:databasefilesystem/serviceLinkedRole:ServiceLinkedRole", name, args ?? new ServiceLinkedRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceLinkedRole(string name, Input<string> id, ServiceLinkedRoleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:databasefilesystem/serviceLinkedRole:ServiceLinkedRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceLinkedRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceLinkedRole Get(string name, Input<string> id, ServiceLinkedRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceLinkedRole(name, id, state, options);
        }
    }

    public sealed class ServiceLinkedRoleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The product name for SLR. Dbfs can automatically create the following service-linked roles: `AliyunServiceRoleForDbfs`.
        /// </summary>
        [Input("productName", required: true)]
        public Input<string> ProductName { get; set; } = null!;

        public ServiceLinkedRoleArgs()
        {
        }
    }

    public sealed class ServiceLinkedRoleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The product name for SLR. Dbfs can automatically create the following service-linked roles: `AliyunServiceRoleForDbfs`.
        /// </summary>
        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        /// <summary>
        /// The status of the service Associated role. Valid Values: `true`: Created. `false`: not created.
        /// </summary>
        [Input("status")]
        public Input<bool>? Status { get; set; }

        public ServiceLinkedRoleState()
        {
        }
    }
}
