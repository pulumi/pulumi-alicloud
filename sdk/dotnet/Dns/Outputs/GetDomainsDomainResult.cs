// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dns.Outputs
{

    [OutputType]
    public sealed class GetDomainsDomainResult
    {
        /// <summary>
        /// Specifies whether the domain is from Alibaba Cloud or not.
        /// </summary>
        public readonly bool AliDomain;
        public readonly ImmutableArray<int> AvailableTtls;
        /// <summary>
        /// DNS list of domain names in the resolution system.
        /// </summary>
        public readonly ImmutableArray<string> DnsServers;
        /// <summary>
        /// ID of the domain.
        /// </summary>
        public readonly string DomainId;
        /// <summary>
        /// Name of the domain.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// Domain group ID, if not filled, the default is all groups.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// Name of group that contains the domain.
        /// </summary>
        public readonly string GroupName;
        /// <summary>
        /// The Id of resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether it is in black hole.
        /// </summary>
        public readonly bool InBlackHole;
        /// <summary>
        /// Whether it is cleaning.
        /// </summary>
        public readonly bool InClean;
        /// <summary>
        /// Cloud analysis product ID.
        /// </summary>
        public readonly string InstanceId;
        public readonly string LineType;
        /// <summary>
        /// Minimum TTL.
        /// </summary>
        public readonly int MinTtl;
        /// <summary>
        /// Punycode of the Chinese domain.
        /// </summary>
        public readonly string PunyCode;
        /// <summary>
        /// Tree-like analytical line list.
        /// </summary>
        public readonly string RecordLineTreeJson;
        public readonly ImmutableArray<Outputs.GetDomainsDomainRecordLineResult> RecordLines;
        /// <summary>
        /// Whether it is a regional route.
        /// </summary>
        public readonly bool RegionLines;
        /// <summary>
        /// The Id of resource group which the dns belongs.
        /// </summary>
        public readonly string Remark;
        /// <summary>
        /// The Id of resource group which the dns belongs.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// Whether to allow auxiliary dns.
        /// </summary>
        public readonly bool SlaveDns;
        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Cloud analysis version code.
        /// </summary>
        public readonly string VersionCode;
        public readonly string VersionName;

        [OutputConstructor]
        private GetDomainsDomainResult(
            bool aliDomain,

            ImmutableArray<int> availableTtls,

            ImmutableArray<string> dnsServers,

            string domainId,

            string domainName,

            string groupId,

            string groupName,

            string id,

            bool inBlackHole,

            bool inClean,

            string instanceId,

            string lineType,

            int minTtl,

            string punyCode,

            string recordLineTreeJson,

            ImmutableArray<Outputs.GetDomainsDomainRecordLineResult> recordLines,

            bool regionLines,

            string remark,

            string resourceGroupId,

            bool slaveDns,

            ImmutableDictionary<string, string> tags,

            string versionCode,

            string versionName)
        {
            AliDomain = aliDomain;
            AvailableTtls = availableTtls;
            DnsServers = dnsServers;
            DomainId = domainId;
            DomainName = domainName;
            GroupId = groupId;
            GroupName = groupName;
            Id = id;
            InBlackHole = inBlackHole;
            InClean = inClean;
            InstanceId = instanceId;
            LineType = lineType;
            MinTtl = minTtl;
            PunyCode = punyCode;
            RecordLineTreeJson = recordLineTreeJson;
            RecordLines = recordLines;
            RegionLines = regionLines;
            Remark = remark;
            ResourceGroupId = resourceGroupId;
            SlaveDns = slaveDns;
            Tags = tags;
            VersionCode = versionCode;
            VersionName = versionName;
        }
    }
}
