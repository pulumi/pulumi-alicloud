// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpn.Outputs
{

    [OutputType]
    public sealed class GatewayVpnAttachmentTunnelOptionsSpecification
    {
        /// <summary>
        /// The ID of the user gateway associated with the tunnel.
        /// 
        /// &gt; **NOTE:**  This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
        /// </summary>
        public readonly string CustomerGatewayId;
        /// <summary>
        /// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:
        /// </summary>
        public readonly bool? EnableDpd;
        /// <summary>
        /// Whether the NAT crossing function is enabled for the tunnel. Value:
        /// </summary>
        public readonly bool? EnableNatTraversal;
        /// <summary>
        /// The local internet IP in Tunnel.
        /// </summary>
        public readonly string? InternetIp;
        /// <summary>
        /// The role of Tunnel.
        /// </summary>
        public readonly string? Role;
        /// <summary>
        /// The state of Tunnel.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The negotiation status of Tunnel.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Add the BGP configuration for the tunnel.
        /// 
        /// &gt; **NOTE:**  After you enable the BGP function for IPsec connections (that is, specify `EnableTunnelsBgp` as `True`), you must configure this parameter.
        /// See `TunnelBgpConfig` below.
        /// </summary>
        public readonly Outputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig? TunnelBgpConfig;
        /// <summary>
        /// The tunnel ID of IPsec-VPN connection.
        /// </summary>
        public readonly string? TunnelId;
        /// <summary>
        /// Configuration information for the first phase negotiation. See `TunnelIkeConfig` below.
        /// </summary>
        public readonly Outputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig? TunnelIkeConfig;
        /// <summary>
        /// The order in which the tunnel was created.
        /// </summary>
        public readonly int TunnelIndex;
        /// <summary>
        /// Configuration information for the second-stage negotiation. See `TunnelIpsecConfig` below.
        /// </summary>
        public readonly Outputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig? TunnelIpsecConfig;
        /// <summary>
        /// The zoneNo of tunnel.
        /// </summary>
        public readonly string? ZoneNo;

        [OutputConstructor]
        private GatewayVpnAttachmentTunnelOptionsSpecification(
            string customerGatewayId,

            bool? enableDpd,

            bool? enableNatTraversal,

            string? internetIp,

            string? role,

            string? state,

            string? status,

            Outputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig? tunnelBgpConfig,

            string? tunnelId,

            Outputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig? tunnelIkeConfig,

            int tunnelIndex,

            Outputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig? tunnelIpsecConfig,

            string? zoneNo)
        {
            CustomerGatewayId = customerGatewayId;
            EnableDpd = enableDpd;
            EnableNatTraversal = enableNatTraversal;
            InternetIp = internetIp;
            Role = role;
            State = state;
            Status = status;
            TunnelBgpConfig = tunnelBgpConfig;
            TunnelId = tunnelId;
            TunnelIkeConfig = tunnelIkeConfig;
            TunnelIndex = tunnelIndex;
            TunnelIpsecConfig = tunnelIpsecConfig;
            ZoneNo = zoneNo;
        }
    }
}
