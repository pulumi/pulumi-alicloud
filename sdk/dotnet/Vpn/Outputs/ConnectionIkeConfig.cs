// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpn.Outputs
{

    [OutputType]
    public sealed class ConnectionIkeConfig
    {
        /// <summary>
        /// the authentication algorithm that is used in Phase 1 negotiations. Valid values: md5, sha1, sha2
        /// </summary>
        public readonly string? IkeAuthAlg;
        /// <summary>
        /// the encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
        /// </summary>
        public readonly string? IkeEncAlg;
        /// <summary>
        /// the SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
        /// </summary>
        public readonly int? IkeLifetime;
        /// <summary>
        /// the identifier of the VPN gateway. It can contain at most 100 characters. The default value is the IP address of the VPN gateway.
        /// </summary>
        public readonly string? IkeLocalId;
        /// <summary>
        /// the negotiation mode of IKE. Valid values: main and aggressive. Default value: main.
        /// - main: This mode offers higher security during negotiations.
        /// - aggressive: This mode supports faster negotiations and a higher success rate.
        /// </summary>
        public readonly string? IkeMode;
        /// <summary>
        /// the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Valid values: group1, group2, group5, and group14. Default value: group2.
        /// </summary>
        public readonly string? IkePfs;
        /// <summary>
        /// the identifier of the customer gateway. It can contain at most 100 characters. The default value is the IP address of the customer gateway.
        /// </summary>
        public readonly string? IkeRemoteId;
        /// <summary>
        /// the version of the Internet Key Exchange (IKE) protocol. Valid values: ikev1 and ikev2. Default value: ikev1.
        /// Compared with IKEv1, IKEv2 simplifies the security association (SA) negotiation process and provides better support for scenarios with multiple CIDR blocks.
        /// </summary>
        public readonly string? IkeVersion;
        /// <summary>
        /// the pre-shared key that is used for identity authentication between the VPN gateway and the on-premises data center. The key must be 1 to 100 characters in length and can contain digits, letters, and the following special characters: ~!\`@#$%^&amp;*()_-+={}[]|;:',.&lt;&gt;/? If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. You can call the DescribeVpnConnection operation to query the pre-shared key that is automatically generated by the system.
        /// </summary>
        public readonly string? Psk;

        [OutputConstructor]
        private ConnectionIkeConfig(
            string? ikeAuthAlg,

            string? ikeEncAlg,

            int? ikeLifetime,

            string? ikeLocalId,

            string? ikeMode,

            string? ikePfs,

            string? ikeRemoteId,

            string? ikeVersion,

            string? psk)
        {
            IkeAuthAlg = ikeAuthAlg;
            IkeEncAlg = ikeEncAlg;
            IkeLifetime = ikeLifetime;
            IkeLocalId = ikeLocalId;
            IkeMode = ikeMode;
            IkePfs = ikePfs;
            IkeRemoteId = ikeRemoteId;
            IkeVersion = ikeVersion;
            Psk = psk;
        }
    }
}
