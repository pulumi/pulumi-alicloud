// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpn.Inputs
{

    public sealed class ConnectionIkeConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the authentication algorithm that is used in Phase 1 negotiations. Valid values: md5, sha1, sha2
        /// </summary>
        [Input("ikeAuthAlg")]
        public Input<string>? IkeAuthAlg { get; set; }

        /// <summary>
        /// the encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
        /// </summary>
        [Input("ikeEncAlg")]
        public Input<string>? IkeEncAlg { get; set; }

        /// <summary>
        /// the SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
        /// </summary>
        [Input("ikeLifetime")]
        public Input<int>? IkeLifetime { get; set; }

        /// <summary>
        /// the identifier of the VPN gateway. It can contain at most 100 characters. The default value is the IP address of the VPN gateway.
        /// </summary>
        [Input("ikeLocalId")]
        public Input<string>? IkeLocalId { get; set; }

        /// <summary>
        /// the negotiation mode of IKE. Valid values: main and aggressive. Default value: main.
        /// - main: This mode offers higher security during negotiations.
        /// - aggressive: This mode supports faster negotiations and a higher success rate.
        /// </summary>
        [Input("ikeMode")]
        public Input<string>? IkeMode { get; set; }

        /// <summary>
        /// the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Valid values: group1, group2, group5, and group14. Default value: group2.
        /// </summary>
        [Input("ikePfs")]
        public Input<string>? IkePfs { get; set; }

        /// <summary>
        /// the identifier of the customer gateway. It can contain at most 100 characters. The default value is the IP address of the customer gateway.
        /// </summary>
        [Input("ikeRemoteId")]
        public Input<string>? IkeRemoteId { get; set; }

        /// <summary>
        /// the version of the Internet Key Exchange (IKE) protocol. Valid values: ikev1 and ikev2. Default value: ikev1.
        /// Compared with IKEv1, IKEv2 simplifies the security association (SA) negotiation process and provides better support for scenarios with multiple CIDR blocks.
        /// </summary>
        [Input("ikeVersion")]
        public Input<string>? IkeVersion { get; set; }

        /// <summary>
        /// the pre-shared key that is used for identity authentication between the VPN gateway and the on-premises data center. The key must be 1 to 100 characters in length and can contain digits, letters, and the following special characters: ~!\`@#$%^&amp;*()_-+={}[]|;:',.&lt;&gt;/? If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. You can call the DescribeVpnConnection operation to query the pre-shared key that is automatically generated by the system.
        /// </summary>
        [Input("psk")]
        public Input<string>? Psk { get; set; }

        public ConnectionIkeConfigGetArgs()
        {
        }
        public static new ConnectionIkeConfigGetArgs Empty => new ConnectionIkeConfigGetArgs();
    }
}
