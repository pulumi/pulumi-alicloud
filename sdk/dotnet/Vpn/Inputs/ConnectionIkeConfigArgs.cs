// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpn.Inputs
{

    public sealed class ConnectionIkeConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IKE auth Algorithm.
        /// </summary>
        [Input("ikeAuthAlg")]
        public Input<string>? IkeAuthAlg { get; set; }

        /// <summary>
        /// IKE encript algorithm.
        /// </summary>
        [Input("ikeEncAlg")]
        public Input<string>? IkeEncAlg { get; set; }

        /// <summary>
        /// IKE lifetime.
        /// </summary>
        [Input("ikeLifetime")]
        public Input<int>? IkeLifetime { get; set; }

        /// <summary>
        /// The local ID, which supports the FQDN and IP formats, and defaults to the IP address of the selected VPN gateway.
        /// </summary>
        [Input("ikeLocalId")]
        public Input<string>? IkeLocalId { get; set; }

        /// <summary>
        /// IKE mode, supports main and aggressive mode. The main mode is highly secure. If NAT traversal is enabled, we recommend that you use the aggressive mode.
        /// </summary>
        [Input("ikeMode")]
        public Input<string>? IkeMode { get; set; }

        /// <summary>
        /// DH group.
        /// </summary>
        [Input("ikePfs")]
        public Input<string>? IkePfs { get; set; }

        /// <summary>
        /// The peer ID. The FQDN and IP address formats are supported. The default value is the IP address of the selected customer gateway.
        /// </summary>
        [Input("ikeRemoteId")]
        public Input<string>? IkeRemoteId { get; set; }

        /// <summary>
        /// IKE version.
        /// </summary>
        [Input("ikeVersion")]
        public Input<string>? IkeVersion { get; set; }

        /// <summary>
        /// Preshared secret key.
        /// </summary>
        [Input("psk")]
        public Input<string>? Psk { get; set; }

        public ConnectionIkeConfigArgs()
        {
        }
        public static new ConnectionIkeConfigArgs Empty => new ConnectionIkeConfigArgs();
    }
}
