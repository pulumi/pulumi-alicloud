// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpn.Inputs
{

    public sealed class ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("ikeAuthAlg")]
        public Input<string>? IkeAuthAlg { get; set; }

        [Input("ikeEncAlg")]
        public Input<string>? IkeEncAlg { get; set; }

        [Input("ikeLifetime")]
        public Input<int>? IkeLifetime { get; set; }

        [Input("ikeMode")]
        public Input<string>? IkeMode { get; set; }

        [Input("ikePfs")]
        public Input<string>? IkePfs { get; set; }

        [Input("ikeVersion")]
        public Input<string>? IkeVersion { get; set; }

        /// <summary>
        /// The identifier of the tunnel on the Alibaba Cloud side, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the tunnel.
        /// LocalId supports fully qualified domain names (FQDNs). If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
        /// </summary>
        [Input("localId")]
        public Input<string>? LocalId { get; set; }

        [Input("psk")]
        public Input<string>? Psk { get; set; }

        /// <summary>
        /// The identifier of the tunnel peer, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the customer gateway that is associated with the tunnel.
        /// RemoteId supports FQDNs. If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
        /// </summary>
        [Input("remoteId")]
        public Input<string>? RemoteId { get; set; }

        public ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs()
        {
        }
        public static new ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs Empty => new ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs();
    }
}
