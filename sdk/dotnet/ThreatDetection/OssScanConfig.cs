// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    /// <summary>
    /// Provides a Threat Detection Oss Scan Config resource. Oss detection configuration.
    /// 
    /// For information about Threat Detection Oss Scan Config and how to use it, see [What is Oss Scan Config](https://www.alibabacloud.com/help/zh/security-center/developer-reference/api-sas-2018-12-03-createossscanconfig/).
    /// 
    /// &gt; **NOTE:** Available since v1.214.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var default8j4t1R = new AliCloud.Oss.Bucket("default8j4t1R", new()
    ///     {
    ///         BucketName = $"{name}-1",
    ///         StorageClass = "Standard",
    ///     });
    /// 
    ///     var default9HMqfT = new AliCloud.Oss.Bucket("default9HMqfT", new()
    ///     {
    ///         BucketName = $"{name}-2",
    ///         StorageClass = "Standard",
    ///     });
    /// 
    ///     var defaultxBXqFQ = new AliCloud.Oss.Bucket("defaultxBXqFQ", new()
    ///     {
    ///         BucketName = $"{name}-3",
    ///         StorageClass = "Standard",
    ///     });
    /// 
    ///     var defaulthZvCmR = new AliCloud.Oss.Bucket("defaulthZvCmR", new()
    ///     {
    ///         BucketName = $"{name}-4",
    ///         StorageClass = "Standard",
    ///     });
    /// 
    ///     var @default = new AliCloud.ThreatDetection.OssScanConfig("default", new()
    ///     {
    ///         KeySuffixLists = new[]
    ///         {
    ///             ".jsp",
    ///             ".php",
    ///             ".k",
    ///         },
    ///         ScanDayLists = new[]
    ///         {
    ///             2,
    ///             5,
    ///             4,
    ///             3,
    ///         },
    ///         OssScanConfigName = name,
    ///         EndTime = "00:00:02",
    ///         StartTime = "00:00:01",
    ///         Enable = 1,
    ///         AllKeyPrefix = false,
    ///         BucketNameLists = new[]
    ///         {
    ///             default8j4t1R.BucketName,
    ///             default9HMqfT.BucketName,
    ///             defaultxBXqFQ.BucketName,
    ///         },
    ///         KeyPrefixLists = new[]
    ///         {
    ///             "/root",
    ///             "/usr",
    ///             "/123",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Threat Detection Oss Scan Config can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:threatdetection/ossScanConfig:OssScanConfig example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:threatdetection/ossScanConfig:OssScanConfig")]
    public partial class OssScanConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Match all prefixes.
        /// </summary>
        [Output("allKeyPrefix")]
        public Output<bool> AllKeyPrefix { get; private set; } = null!;

        /// <summary>
        /// Bucket List.
        /// </summary>
        [Output("bucketNameLists")]
        public Output<ImmutableArray<string>> BucketNameLists { get; private set; } = null!;

        /// <summary>
        /// Enable configuration.
        /// </summary>
        [Output("enable")]
        public Output<int> Enable { get; private set; } = null!;

        /// <summary>
        /// End time, hours, minutes and seconds.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// File prefix list.
        /// </summary>
        [Output("keyPrefixLists")]
        public Output<ImmutableArray<string>> KeyPrefixLists { get; private set; } = null!;

        /// <summary>
        /// File Suffix List.
        /// </summary>
        [Output("keySuffixLists")]
        public Output<ImmutableArray<string>> KeySuffixLists { get; private set; } = null!;

        /// <summary>
        /// Configuration Name.
        /// </summary>
        [Output("ossScanConfigName")]
        public Output<string?> OssScanConfigName { get; private set; } = null!;

        /// <summary>
        /// Scan cycle.
        /// </summary>
        [Output("scanDayLists")]
        public Output<ImmutableArray<int>> ScanDayLists { get; private set; } = null!;

        /// <summary>
        /// Start time, hours, minutes and seconds.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;


        /// <summary>
        /// Create a OssScanConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OssScanConfig(string name, OssScanConfigArgs args, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/ossScanConfig:OssScanConfig", name, args ?? new OssScanConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OssScanConfig(string name, Input<string> id, OssScanConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/ossScanConfig:OssScanConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OssScanConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OssScanConfig Get(string name, Input<string> id, OssScanConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new OssScanConfig(name, id, state, options);
        }
    }

    public sealed class OssScanConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match all prefixes.
        /// </summary>
        [Input("allKeyPrefix")]
        public Input<bool>? AllKeyPrefix { get; set; }

        [Input("bucketNameLists", required: true)]
        private InputList<string>? _bucketNameLists;

        /// <summary>
        /// Bucket List.
        /// </summary>
        public InputList<string> BucketNameLists
        {
            get => _bucketNameLists ?? (_bucketNameLists = new InputList<string>());
            set => _bucketNameLists = value;
        }

        /// <summary>
        /// Enable configuration.
        /// </summary>
        [Input("enable", required: true)]
        public Input<int> Enable { get; set; } = null!;

        /// <summary>
        /// End time, hours, minutes and seconds.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        [Input("keyPrefixLists")]
        private InputList<string>? _keyPrefixLists;

        /// <summary>
        /// File prefix list.
        /// </summary>
        public InputList<string> KeyPrefixLists
        {
            get => _keyPrefixLists ?? (_keyPrefixLists = new InputList<string>());
            set => _keyPrefixLists = value;
        }

        [Input("keySuffixLists", required: true)]
        private InputList<string>? _keySuffixLists;

        /// <summary>
        /// File Suffix List.
        /// </summary>
        public InputList<string> KeySuffixLists
        {
            get => _keySuffixLists ?? (_keySuffixLists = new InputList<string>());
            set => _keySuffixLists = value;
        }

        /// <summary>
        /// Configuration Name.
        /// </summary>
        [Input("ossScanConfigName")]
        public Input<string>? OssScanConfigName { get; set; }

        [Input("scanDayLists", required: true)]
        private InputList<int>? _scanDayLists;

        /// <summary>
        /// Scan cycle.
        /// </summary>
        public InputList<int> ScanDayLists
        {
            get => _scanDayLists ?? (_scanDayLists = new InputList<int>());
            set => _scanDayLists = value;
        }

        /// <summary>
        /// Start time, hours, minutes and seconds.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public OssScanConfigArgs()
        {
        }
        public static new OssScanConfigArgs Empty => new OssScanConfigArgs();
    }

    public sealed class OssScanConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match all prefixes.
        /// </summary>
        [Input("allKeyPrefix")]
        public Input<bool>? AllKeyPrefix { get; set; }

        [Input("bucketNameLists")]
        private InputList<string>? _bucketNameLists;

        /// <summary>
        /// Bucket List.
        /// </summary>
        public InputList<string> BucketNameLists
        {
            get => _bucketNameLists ?? (_bucketNameLists = new InputList<string>());
            set => _bucketNameLists = value;
        }

        /// <summary>
        /// Enable configuration.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// End time, hours, minutes and seconds.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("keyPrefixLists")]
        private InputList<string>? _keyPrefixLists;

        /// <summary>
        /// File prefix list.
        /// </summary>
        public InputList<string> KeyPrefixLists
        {
            get => _keyPrefixLists ?? (_keyPrefixLists = new InputList<string>());
            set => _keyPrefixLists = value;
        }

        [Input("keySuffixLists")]
        private InputList<string>? _keySuffixLists;

        /// <summary>
        /// File Suffix List.
        /// </summary>
        public InputList<string> KeySuffixLists
        {
            get => _keySuffixLists ?? (_keySuffixLists = new InputList<string>());
            set => _keySuffixLists = value;
        }

        /// <summary>
        /// Configuration Name.
        /// </summary>
        [Input("ossScanConfigName")]
        public Input<string>? OssScanConfigName { get; set; }

        [Input("scanDayLists")]
        private InputList<int>? _scanDayLists;

        /// <summary>
        /// Scan cycle.
        /// </summary>
        public InputList<int> ScanDayLists
        {
            get => _scanDayLists ?? (_scanDayLists = new InputList<int>());
            set => _scanDayLists = value;
        }

        /// <summary>
        /// Start time, hours, minutes and seconds.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public OssScanConfigState()
        {
        }
        public static new OssScanConfigState Empty => new OssScanConfigState();
    }
}
