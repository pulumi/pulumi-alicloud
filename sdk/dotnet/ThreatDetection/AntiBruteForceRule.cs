// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    /// <summary>
    /// Provides a Threat Detection Anti Brute Force Rule resource.
    /// 
    /// For information about Threat Detection Anti Brute Force Rule and how to use it, see [What is Anti Brute Force Rule](https://www.alibabacloud.com/help/en/security-center/latest/api-doc-sas-2018-12-03-api-doc-createantibruteforcerule).
    /// 
    /// &gt; **NOTE:** Available in v1.195.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new AliCloud.ThreatDetection.AntiBruteForceRule("default", new()
    ///     {
    ///         AntiBruteForceRuleName = "apispec_test",
    ///         FailCount = 80,
    ///         ForbiddenTime = 360,
    ///         Span = 10,
    ///         UuidLists = new[]
    ///         {
    ///             "032b618f-b220-4a0d-bd37-fbdc6ef58b6a",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Threat Detection Anti Brute Force Rule can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule")]
    public partial class AntiBruteForceRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the defense rule.
        /// </summary>
        [Output("antiBruteForceRuleId")]
        public Output<string> AntiBruteForceRuleId { get; private set; } = null!;

        /// <summary>
        /// The name of the defense rule.
        /// </summary>
        [Output("antiBruteForceRuleName")]
        public Output<string> AntiBruteForceRuleName { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to set the defense rule as the default rule.
        /// </summary>
        [Output("defaultRule")]
        public Output<bool> DefaultRule { get; private set; } = null!;

        /// <summary>
        /// The threshold for the number of failed user logins when the brute-force defense rule takes effect.
        /// </summary>
        [Output("failCount")]
        public Output<int> FailCount { get; private set; } = null!;

        /// <summary>
        /// The period of time during which logons from an account are not allowed. Unit: minutes.
        /// </summary>
        [Output("forbiddenTime")]
        public Output<int> ForbiddenTime { get; private set; } = null!;

        /// <summary>
        /// The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
        /// </summary>
        [Output("span")]
        public Output<int> Span { get; private set; } = null!;

        /// <summary>
        /// An array consisting of the UUIDs of servers to which the defense rule is applied.**The binding status must be Enterprise Edition.**
        /// </summary>
        [Output("uuidLists")]
        public Output<ImmutableArray<string>> UuidLists { get; private set; } = null!;


        /// <summary>
        /// Create a AntiBruteForceRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AntiBruteForceRule(string name, AntiBruteForceRuleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule", name, args ?? new AntiBruteForceRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AntiBruteForceRule(string name, Input<string> id, AntiBruteForceRuleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/antiBruteForceRule:AntiBruteForceRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AntiBruteForceRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AntiBruteForceRule Get(string name, Input<string> id, AntiBruteForceRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new AntiBruteForceRule(name, id, state, options);
        }
    }

    public sealed class AntiBruteForceRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the defense rule.
        /// </summary>
        [Input("antiBruteForceRuleName", required: true)]
        public Input<string> AntiBruteForceRuleName { get; set; } = null!;

        /// <summary>
        /// Specifies whether to set the defense rule as the default rule.
        /// </summary>
        [Input("defaultRule")]
        public Input<bool>? DefaultRule { get; set; }

        /// <summary>
        /// The threshold for the number of failed user logins when the brute-force defense rule takes effect.
        /// </summary>
        [Input("failCount", required: true)]
        public Input<int> FailCount { get; set; } = null!;

        /// <summary>
        /// The period of time during which logons from an account are not allowed. Unit: minutes.
        /// </summary>
        [Input("forbiddenTime", required: true)]
        public Input<int> ForbiddenTime { get; set; } = null!;

        /// <summary>
        /// The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
        /// </summary>
        [Input("span", required: true)]
        public Input<int> Span { get; set; } = null!;

        [Input("uuidLists", required: true)]
        private InputList<string>? _uuidLists;

        /// <summary>
        /// An array consisting of the UUIDs of servers to which the defense rule is applied.**The binding status must be Enterprise Edition.**
        /// </summary>
        public InputList<string> UuidLists
        {
            get => _uuidLists ?? (_uuidLists = new InputList<string>());
            set => _uuidLists = value;
        }

        public AntiBruteForceRuleArgs()
        {
        }
        public static new AntiBruteForceRuleArgs Empty => new AntiBruteForceRuleArgs();
    }

    public sealed class AntiBruteForceRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the defense rule.
        /// </summary>
        [Input("antiBruteForceRuleId")]
        public Input<string>? AntiBruteForceRuleId { get; set; }

        /// <summary>
        /// The name of the defense rule.
        /// </summary>
        [Input("antiBruteForceRuleName")]
        public Input<string>? AntiBruteForceRuleName { get; set; }

        /// <summary>
        /// Specifies whether to set the defense rule as the default rule.
        /// </summary>
        [Input("defaultRule")]
        public Input<bool>? DefaultRule { get; set; }

        /// <summary>
        /// The threshold for the number of failed user logins when the brute-force defense rule takes effect.
        /// </summary>
        [Input("failCount")]
        public Input<int>? FailCount { get; set; }

        /// <summary>
        /// The period of time during which logons from an account are not allowed. Unit: minutes.
        /// </summary>
        [Input("forbiddenTime")]
        public Input<int>? ForbiddenTime { get; set; }

        /// <summary>
        /// The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
        /// </summary>
        [Input("span")]
        public Input<int>? Span { get; set; }

        [Input("uuidLists")]
        private InputList<string>? _uuidLists;

        /// <summary>
        /// An array consisting of the UUIDs of servers to which the defense rule is applied.**The binding status must be Enterprise Edition.**
        /// </summary>
        public InputList<string> UuidLists
        {
            get => _uuidLists ?? (_uuidLists = new InputList<string>());
            set => _uuidLists = value;
        }

        public AntiBruteForceRuleState()
        {
        }
        public static new AntiBruteForceRuleState Empty => new AntiBruteForceRuleState();
    }
}
