// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    /// <summary>
    /// Provides a Threat Detection Web Lock Config resource.
    /// 
    /// For information about Threat Detection Web Lock Config and how to use it, see [What is Web Lock Config](https://www.alibabacloud.com/help/en/security-center/latest/api-doc-sas-2018-12-03-api-doc-modifyweblockstart).
    /// 
    /// &gt; **NOTE:** Available in v1.195.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultAssets = AliCloud.ThreatDetection.GetAssets.Invoke(new()
    ///     {
    ///         MachineTypes = "ecs",
    ///     });
    /// 
    ///     var defaultWebLockConfig = new AliCloud.ThreatDetection.WebLockConfig("defaultWebLockConfig", new()
    ///     {
    ///         InclusiveFileType = "php;jsp;asp;aspx;js;cgi;html;htm;xml;shtml;shtm;jpg",
    ///         Uuid = defaultAssets.Apply(getAssetsResult =&gt; getAssetsResult.Ids[0]),
    ///         Mode = "whitelist",
    ///         LocalBackupDir = "/usr/local/aegis/bak",
    ///         Dir = "/tmp/",
    ///         DefenceMode = "audit",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Threat Detection Web Lock Config can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:threatdetection/webLockConfig:WebLockConfig example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:threatdetection/webLockConfig:WebLockConfig")]
    public partial class WebLockConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Protection mode. Value:-**block**: Intercept-**audit**: Alarm
        /// </summary>
        [Output("defenceMode")]
        public Output<string> DefenceMode { get; private set; } = null!;

        /// <summary>
        /// Specify the protection directory.
        /// </summary>
        [Output("dir")]
        public Output<string> Dir { get; private set; } = null!;

        /// <summary>
        /// Specify a directory address that does not require Web tamper protection (I. E. Excluded directories).&gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Output("exclusiveDir")]
        public Output<string?> ExclusiveDir { get; private set; } = null!;

        /// <summary>
        /// Specify files that do not need to enable tamper protection for web pages (that is, exclude files).&gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Output("exclusiveFile")]
        public Output<string?> ExclusiveFile { get; private set; } = null!;

        /// <summary>
        /// Specify the type of file that does not require Web tamper protection (that is, the type of excluded file). When there are multiple file types, use semicolons (;) separation. Value:-php-jsp-asp-aspx-js-cgi-html-htm-xml-shtml-shtm-jpg-gif-png &gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Output("exclusiveFileType")]
        public Output<string?> ExclusiveFileType { get; private set; } = null!;

        /// <summary>
        /// Specify the type of file that requires tamper protection. When there are multiple file types, use semicolons (;) separation. Value:-php-jsp-asp-aspx-js-cgi-html-htm-xml-shtml-shtm-jpg-gif-png&gt; The protection Mode **Mode** is set to **whitelist**, you need to configure this parameter.
        /// </summary>
        [Output("inclusiveFileType")]
        public Output<string?> InclusiveFileType { get; private set; } = null!;

        /// <summary>
        /// The local backup path is used to protect the safe backup of the Directory.
        /// </summary>
        [Output("localBackupDir")]
        public Output<string> LocalBackupDir { get; private set; } = null!;

        /// <summary>
        /// Specify the protected directory mode. Value:-**whitelist**: whitelist mode, which protects the added protected directories and file types.-**blacklist**: blacklist mode, which protects all unexcluded subdirectories, file types, and specified files under the added protection directory.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Specify the UUID of the server to which you want to add a protection directory.&gt; You can call the DescribeCloudCenterInstances interface to obtain the UUID of the server.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a WebLockConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebLockConfig(string name, WebLockConfigArgs args, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/webLockConfig:WebLockConfig", name, args ?? new WebLockConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebLockConfig(string name, Input<string> id, WebLockConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/webLockConfig:WebLockConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebLockConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebLockConfig Get(string name, Input<string> id, WebLockConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new WebLockConfig(name, id, state, options);
        }
    }

    public sealed class WebLockConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Protection mode. Value:-**block**: Intercept-**audit**: Alarm
        /// </summary>
        [Input("defenceMode", required: true)]
        public Input<string> DefenceMode { get; set; } = null!;

        /// <summary>
        /// Specify the protection directory.
        /// </summary>
        [Input("dir", required: true)]
        public Input<string> Dir { get; set; } = null!;

        /// <summary>
        /// Specify a directory address that does not require Web tamper protection (I. E. Excluded directories).&gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Input("exclusiveDir")]
        public Input<string>? ExclusiveDir { get; set; }

        /// <summary>
        /// Specify files that do not need to enable tamper protection for web pages (that is, exclude files).&gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Input("exclusiveFile")]
        public Input<string>? ExclusiveFile { get; set; }

        /// <summary>
        /// Specify the type of file that does not require Web tamper protection (that is, the type of excluded file). When there are multiple file types, use semicolons (;) separation. Value:-php-jsp-asp-aspx-js-cgi-html-htm-xml-shtml-shtm-jpg-gif-png &gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Input("exclusiveFileType")]
        public Input<string>? ExclusiveFileType { get; set; }

        /// <summary>
        /// Specify the type of file that requires tamper protection. When there are multiple file types, use semicolons (;) separation. Value:-php-jsp-asp-aspx-js-cgi-html-htm-xml-shtml-shtm-jpg-gif-png&gt; The protection Mode **Mode** is set to **whitelist**, you need to configure this parameter.
        /// </summary>
        [Input("inclusiveFileType")]
        public Input<string>? InclusiveFileType { get; set; }

        /// <summary>
        /// The local backup path is used to protect the safe backup of the Directory.
        /// </summary>
        [Input("localBackupDir", required: true)]
        public Input<string> LocalBackupDir { get; set; } = null!;

        /// <summary>
        /// Specify the protected directory mode. Value:-**whitelist**: whitelist mode, which protects the added protected directories and file types.-**blacklist**: blacklist mode, which protects all unexcluded subdirectories, file types, and specified files under the added protection directory.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// Specify the UUID of the server to which you want to add a protection directory.&gt; You can call the DescribeCloudCenterInstances interface to obtain the UUID of the server.
        /// </summary>
        [Input("uuid", required: true)]
        public Input<string> Uuid { get; set; } = null!;

        public WebLockConfigArgs()
        {
        }
        public static new WebLockConfigArgs Empty => new WebLockConfigArgs();
    }

    public sealed class WebLockConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Protection mode. Value:-**block**: Intercept-**audit**: Alarm
        /// </summary>
        [Input("defenceMode")]
        public Input<string>? DefenceMode { get; set; }

        /// <summary>
        /// Specify the protection directory.
        /// </summary>
        [Input("dir")]
        public Input<string>? Dir { get; set; }

        /// <summary>
        /// Specify a directory address that does not require Web tamper protection (I. E. Excluded directories).&gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Input("exclusiveDir")]
        public Input<string>? ExclusiveDir { get; set; }

        /// <summary>
        /// Specify files that do not need to enable tamper protection for web pages (that is, exclude files).&gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Input("exclusiveFile")]
        public Input<string>? ExclusiveFile { get; set; }

        /// <summary>
        /// Specify the type of file that does not require Web tamper protection (that is, the type of excluded file). When there are multiple file types, use semicolons (;) separation. Value:-php-jsp-asp-aspx-js-cgi-html-htm-xml-shtml-shtm-jpg-gif-png &gt; The protection Mode **Mode** is set to **blacklist**, you need to configure this parameter.
        /// </summary>
        [Input("exclusiveFileType")]
        public Input<string>? ExclusiveFileType { get; set; }

        /// <summary>
        /// Specify the type of file that requires tamper protection. When there are multiple file types, use semicolons (;) separation. Value:-php-jsp-asp-aspx-js-cgi-html-htm-xml-shtml-shtm-jpg-gif-png&gt; The protection Mode **Mode** is set to **whitelist**, you need to configure this parameter.
        /// </summary>
        [Input("inclusiveFileType")]
        public Input<string>? InclusiveFileType { get; set; }

        /// <summary>
        /// The local backup path is used to protect the safe backup of the Directory.
        /// </summary>
        [Input("localBackupDir")]
        public Input<string>? LocalBackupDir { get; set; }

        /// <summary>
        /// Specify the protected directory mode. Value:-**whitelist**: whitelist mode, which protects the added protected directories and file types.-**blacklist**: blacklist mode, which protects all unexcluded subdirectories, file types, and specified files under the added protection directory.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Specify the UUID of the server to which you want to add a protection directory.&gt; You can call the DescribeCloudCenterInstances interface to obtain the UUID of the server.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public WebLockConfigState()
        {
        }
        public static new WebLockConfigState Empty => new WebLockConfigState();
    }
}
