// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    /// <summary>
    /// Provides a Threat Detection Image Event Operation resource. Image Event Operation.
    /// 
    /// For information about Threat Detection Image Event Operation and how to use it, see [What is Image Event Operation](https://www.alibabacloud.com/help/zh/security-center/developer-reference/api-sas-2018-12-03-addimageeventoperation).
    /// 
    /// &gt; **NOTE:** Available since v1.212.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.ThreatDetection.ImageEventOperation("default", new()
    ///     {
    ///         Conditions = @"[
    ///   {
    ///       ""condition"":""MD5"",
    ///       ""type"":""equals"",
    ///       ""value"":""0083a31cc0083a31ccf7c10367a6e783e""
    ///   }
    /// ]
    /// 
    /// ",
    ///         EventKey = "alibabacloud_ak",
    ///         EventName = "阿里云AK",
    ///         EventType = "maliciousFile",
    ///         OperationCode = "whitelist",
    ///         Scenarios = @"{
    ///   ""type"":""default"",
    ///   ""value"":""""
    /// }
    /// 
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Threat Detection Image Event Operation can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:threatdetection/imageEventOperation:ImageEventOperation example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:threatdetection/imageEventOperation:ImageEventOperation")]
    public partial class ImageEventOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Event Conditions.
        /// </summary>
        [Output("conditions")]
        public Output<string?> Conditions { get; private set; } = null!;

        /// <summary>
        /// Image Event Key.
        /// </summary>
        [Output("eventKey")]
        public Output<string?> EventKey { get; private set; } = null!;

        /// <summary>
        /// Image Event Name.
        /// </summary>
        [Output("eventName")]
        public Output<string?> EventName { get; private set; } = null!;

        /// <summary>
        /// Image Event Type.
        /// </summary>
        [Output("eventType")]
        public Output<string> EventType { get; private set; } = null!;

        /// <summary>
        /// Event Operation Code.
        /// </summary>
        [Output("operationCode")]
        public Output<string?> OperationCode { get; private set; } = null!;

        /// <summary>
        /// Event Scenarios.
        /// </summary>
        [Output("scenarios")]
        public Output<string?> Scenarios { get; private set; } = null!;


        /// <summary>
        /// Create a ImageEventOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageEventOperation(string name, ImageEventOperationArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/imageEventOperation:ImageEventOperation", name, args ?? new ImageEventOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageEventOperation(string name, Input<string> id, ImageEventOperationState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/imageEventOperation:ImageEventOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageEventOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageEventOperation Get(string name, Input<string> id, ImageEventOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new ImageEventOperation(name, id, state, options);
        }
    }

    public sealed class ImageEventOperationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Event Conditions.
        /// </summary>
        [Input("conditions")]
        public Input<string>? Conditions { get; set; }

        /// <summary>
        /// Image Event Key.
        /// </summary>
        [Input("eventKey")]
        public Input<string>? EventKey { get; set; }

        /// <summary>
        /// Image Event Name.
        /// </summary>
        [Input("eventName")]
        public Input<string>? EventName { get; set; }

        /// <summary>
        /// Image Event Type.
        /// </summary>
        [Input("eventType")]
        public Input<string>? EventType { get; set; }

        /// <summary>
        /// Event Operation Code.
        /// </summary>
        [Input("operationCode")]
        public Input<string>? OperationCode { get; set; }

        /// <summary>
        /// Event Scenarios.
        /// </summary>
        [Input("scenarios")]
        public Input<string>? Scenarios { get; set; }

        public ImageEventOperationArgs()
        {
        }
        public static new ImageEventOperationArgs Empty => new ImageEventOperationArgs();
    }

    public sealed class ImageEventOperationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Event Conditions.
        /// </summary>
        [Input("conditions")]
        public Input<string>? Conditions { get; set; }

        /// <summary>
        /// Image Event Key.
        /// </summary>
        [Input("eventKey")]
        public Input<string>? EventKey { get; set; }

        /// <summary>
        /// Image Event Name.
        /// </summary>
        [Input("eventName")]
        public Input<string>? EventName { get; set; }

        /// <summary>
        /// Image Event Type.
        /// </summary>
        [Input("eventType")]
        public Input<string>? EventType { get; set; }

        /// <summary>
        /// Event Operation Code.
        /// </summary>
        [Input("operationCode")]
        public Input<string>? OperationCode { get; set; }

        /// <summary>
        /// Event Scenarios.
        /// </summary>
        [Input("scenarios")]
        public Input<string>? Scenarios { get; set; }

        public ImageEventOperationState()
        {
        }
        public static new ImageEventOperationState Empty => new ImageEventOperationState();
    }
}
