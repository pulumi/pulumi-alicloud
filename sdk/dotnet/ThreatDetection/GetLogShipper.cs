// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    public static class GetLogShipper
    {
        /// <summary>
        /// Using this data source can open Threat Detection Log Shipper automatically. If the service has been enabled, it will return `Opened`.
        /// 
        /// For information about Threat Detection Log Shipper and how to use it, see [What is Log Shipper](https://www.alibabacloud.com/help/en/security-center/latest/api-doc-sas-2018-12-03-api-doc-modifyopenlogshipper).
        /// 
        /// &gt; **NOTE:** Available in v1.195.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var open = AliCloud.ThreatDetection.GetLogShipper.Invoke(new()
        ///     {
        ///         Enable = "On",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLogShipperResult> InvokeAsync(GetLogShipperArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogShipperResult>("alicloud:threatdetection/getLogShipper:getLogShipper", args ?? new GetLogShipperArgs(), options.WithDefaults());

        /// <summary>
        /// Using this data source can open Threat Detection Log Shipper automatically. If the service has been enabled, it will return `Opened`.
        /// 
        /// For information about Threat Detection Log Shipper and how to use it, see [What is Log Shipper](https://www.alibabacloud.com/help/en/security-center/latest/api-doc-sas-2018-12-03-api-doc-modifyopenlogshipper).
        /// 
        /// &gt; **NOTE:** Available in v1.195.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var open = AliCloud.ThreatDetection.GetLogShipper.Invoke(new()
        ///     {
        ///         Enable = "On",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLogShipperResult> Invoke(GetLogShipperInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogShipperResult>("alicloud:threatdetection/getLogShipper:getLogShipper", args ?? new GetLogShipperInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogShipperArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Setting the value to `On` to enable the service. Valid values: `On` or `Off`. Default to `Off`.
        /// </summary>
        [Input("enable")]
        public string? Enable { get; set; }

        public GetLogShipperArgs()
        {
        }
        public static new GetLogShipperArgs Empty => new GetLogShipperArgs();
    }

    public sealed class GetLogShipperInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Setting the value to `On` to enable the service. Valid values: `On` or `Off`. Default to `Off`.
        /// </summary>
        [Input("enable")]
        public Input<string>? Enable { get; set; }

        public GetLogShipperInvokeArgs()
        {
        }
        public static new GetLogShipperInvokeArgs Empty => new GetLogShipperInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogShipperResult
    {
        /// <summary>
        /// Log Analysis Service authorization status.
        /// </summary>
        public readonly string AuthStatus;
        /// <summary>
        /// Cloud Security Center purchase status.
        /// </summary>
        public readonly string BuyStatus;
        public readonly string? Enable;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Log analysis shipping activation status.
        /// </summary>
        public readonly string OpenStatus;
        /// <summary>
        /// Log analysis project status.
        /// </summary>
        public readonly string SlsProjectStatus;
        /// <summary>
        /// Log Analysis Service is activated.
        /// </summary>
        public readonly string SlsServiceStatus;
        /// <summary>
        /// The current service enable status.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetLogShipperResult(
            string authStatus,

            string buyStatus,

            string? enable,

            string id,

            string openStatus,

            string slsProjectStatus,

            string slsServiceStatus,

            string status)
        {
            AuthStatus = authStatus;
            BuyStatus = buyStatus;
            Enable = enable;
            Id = id;
            OpenStatus = openStatus;
            SlsProjectStatus = slsProjectStatus;
            SlsServiceStatus = slsServiceStatus;
            Status = status;
        }
    }
}
