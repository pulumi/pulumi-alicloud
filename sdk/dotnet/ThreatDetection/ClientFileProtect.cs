// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    /// <summary>
    /// Provides a Threat Detection Client File Protect resource. Client core file protection event monitoring, including file reading and writing, deletion, and permission change.
    /// 
    /// For information about Threat Detection Client File Protect and how to use it, see [What is Client File Protect](https://www.alibabacloud.com/help/zh/security-center/developer-reference/api-sas-2018-12-03-createfileprotectrule).
    /// 
    /// &gt; **NOTE:** Available since v1.212.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.ThreatDetection.ClientFileProtect("default", new()
    ///     {
    ///         AlertLevel = 0,
    ///         FileOps = new[]
    ///         {
    ///             "CREATE",
    ///         },
    ///         FilePaths = new[]
    ///         {
    ///             "/usr/local",
    ///         },
    ///         ProcPaths = new[]
    ///         {
    ///             "/usr/local",
    ///         },
    ///         RuleAction = "pass",
    ///         RuleName = "rule_example",
    ///         Status = 0,
    ///         SwitchId = "FILE_PROTECT_RULE_SWITCH_TYPE_1693474122929",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Threat Detection Client File Protect can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:threatdetection/clientFileProtect:ClientFileProtect example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:threatdetection/clientFileProtect:ClientFileProtect")]
    public partial class ClientFileProtect : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 0 no alert 1 info 2 suspicious 3 critical.
        /// </summary>
        [Output("alertLevel")]
        public Output<int?> AlertLevel { get; private set; } = null!;

        /// <summary>
        /// file operation.
        /// </summary>
        [Output("fileOps")]
        public Output<ImmutableArray<string>> FileOps { get; private set; } = null!;

        /// <summary>
        /// file path.
        /// </summary>
        [Output("filePaths")]
        public Output<ImmutableArray<string>> FilePaths { get; private set; } = null!;

        /// <summary>
        /// process path.
        /// </summary>
        [Output("procPaths")]
        public Output<ImmutableArray<string>> ProcPaths { get; private set; } = null!;

        /// <summary>
        /// rule action, pass or alert.
        /// </summary>
        [Output("ruleAction")]
        public Output<string> RuleAction { get; private set; } = null!;

        /// <summary>
        /// ruleName.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// rule status 0 is disable 1 is enable.
        /// </summary>
        [Output("status")]
        public Output<int> Status { get; private set; } = null!;

        /// <summary>
        /// switch id.
        /// </summary>
        [Output("switchId")]
        public Output<string?> SwitchId { get; private set; } = null!;


        /// <summary>
        /// Create a ClientFileProtect resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClientFileProtect(string name, ClientFileProtectArgs args, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/clientFileProtect:ClientFileProtect", name, args ?? new ClientFileProtectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClientFileProtect(string name, Input<string> id, ClientFileProtectState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/clientFileProtect:ClientFileProtect", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClientFileProtect resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClientFileProtect Get(string name, Input<string> id, ClientFileProtectState? state = null, CustomResourceOptions? options = null)
        {
            return new ClientFileProtect(name, id, state, options);
        }
    }

    public sealed class ClientFileProtectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 0 no alert 1 info 2 suspicious 3 critical.
        /// </summary>
        [Input("alertLevel")]
        public Input<int>? AlertLevel { get; set; }

        [Input("fileOps", required: true)]
        private InputList<string>? _fileOps;

        /// <summary>
        /// file operation.
        /// </summary>
        public InputList<string> FileOps
        {
            get => _fileOps ?? (_fileOps = new InputList<string>());
            set => _fileOps = value;
        }

        [Input("filePaths", required: true)]
        private InputList<string>? _filePaths;

        /// <summary>
        /// file path.
        /// </summary>
        public InputList<string> FilePaths
        {
            get => _filePaths ?? (_filePaths = new InputList<string>());
            set => _filePaths = value;
        }

        [Input("procPaths", required: true)]
        private InputList<string>? _procPaths;

        /// <summary>
        /// process path.
        /// </summary>
        public InputList<string> ProcPaths
        {
            get => _procPaths ?? (_procPaths = new InputList<string>());
            set => _procPaths = value;
        }

        /// <summary>
        /// rule action, pass or alert.
        /// </summary>
        [Input("ruleAction", required: true)]
        public Input<string> RuleAction { get; set; } = null!;

        /// <summary>
        /// ruleName.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// rule status 0 is disable 1 is enable.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// switch id.
        /// </summary>
        [Input("switchId")]
        public Input<string>? SwitchId { get; set; }

        public ClientFileProtectArgs()
        {
        }
        public static new ClientFileProtectArgs Empty => new ClientFileProtectArgs();
    }

    public sealed class ClientFileProtectState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 0 no alert 1 info 2 suspicious 3 critical.
        /// </summary>
        [Input("alertLevel")]
        public Input<int>? AlertLevel { get; set; }

        [Input("fileOps")]
        private InputList<string>? _fileOps;

        /// <summary>
        /// file operation.
        /// </summary>
        public InputList<string> FileOps
        {
            get => _fileOps ?? (_fileOps = new InputList<string>());
            set => _fileOps = value;
        }

        [Input("filePaths")]
        private InputList<string>? _filePaths;

        /// <summary>
        /// file path.
        /// </summary>
        public InputList<string> FilePaths
        {
            get => _filePaths ?? (_filePaths = new InputList<string>());
            set => _filePaths = value;
        }

        [Input("procPaths")]
        private InputList<string>? _procPaths;

        /// <summary>
        /// process path.
        /// </summary>
        public InputList<string> ProcPaths
        {
            get => _procPaths ?? (_procPaths = new InputList<string>());
            set => _procPaths = value;
        }

        /// <summary>
        /// rule action, pass or alert.
        /// </summary>
        [Input("ruleAction")]
        public Input<string>? RuleAction { get; set; }

        /// <summary>
        /// ruleName.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// rule status 0 is disable 1 is enable.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// switch id.
        /// </summary>
        [Input("switchId")]
        public Input<string>? SwitchId { get; set; }

        public ClientFileProtectState()
        {
        }
        public static new ClientFileProtectState Empty => new ClientFileProtectState();
    }
}
