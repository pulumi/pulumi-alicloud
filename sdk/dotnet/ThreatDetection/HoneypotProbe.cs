// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ThreatDetection
{
    /// <summary>
    /// Provides a Threat Detection Honeypot Probe resource.
    /// 
    /// For information about Threat Detection Honeypot Probe and how to use it, see [What is Honeypot Probe](https://www.alibabacloud.com/help/en/security-center/latest/api-doc-sas-2018-12-03-api-doc-createhoneypotprobe).
    /// 
    /// &gt; **NOTE:** Available in v1.195.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new AliCloud.ThreatDetection.HoneypotProbe("default", new()
    ///     {
    ///         Arp = true,
    ///         ControlNodeId = "a44e1ab3-6945-444c-889d-5bacee7056e8",
    ///         DisplayName = "apispec",
    ///         HoneypotBindLists = new[]
    ///         {
    ///             new AliCloud.ThreatDetection.Inputs.HoneypotProbeHoneypotBindListArgs
    ///             {
    ///                 BindPortLists = new[]
    ///                 {
    ///                     new AliCloud.ThreatDetection.Inputs.HoneypotProbeHoneypotBindListBindPortListArgs
    ///                     {
    ///                         EndPort = 80,
    ///                         StartPort = 80,
    ///                     },
    ///                 },
    ///                 HoneypotId = "ede59ccdb1b7a2e21735d4593a6eb5ed31883af320c5ab63ab33818e94307be9",
    ///             },
    ///         },
    ///         Ping = true,
    ///         ProbeType = "host_probe",
    ///         Uuid = "032b618f-b220-4a0d-bd37-fbdc6ef58b6a",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Threat Detection Honeypot Probe can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:threatdetection/honeypotProbe:HoneypotProbe example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:threatdetection/honeypotProbe:HoneypotProbe")]
    public partial class HoneypotProbe : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARP spoofing detection.**true**: Enable **false**: Disabled
        /// </summary>
        [Output("arp")]
        public Output<bool?> Arp { get; private set; } = null!;

        /// <summary>
        /// The ID of the management node.
        /// </summary>
        [Output("controlNodeId")]
        public Output<string> ControlNodeId { get; private set; } = null!;

        /// <summary>
        /// Probe display name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Configure the service.See the following `Block HoneypotBindList`.
        /// </summary>
        [Output("honeypotBindLists")]
        public Output<ImmutableArray<Outputs.HoneypotProbeHoneypotBindList>> HoneypotBindLists { get; private set; } = null!;

        /// <summary>
        /// The first ID of the resource
        /// </summary>
        [Output("honeypotProbeId")]
        public Output<string> HoneypotProbeId { get; private set; } = null!;

        /// <summary>
        /// Ping scan detection. Value: **true**: Enable **false**: Disabled
        /// </summary>
        [Output("ping")]
        public Output<bool?> Ping { get; private set; } = null!;

        /// <summary>
        /// Probe type, support `host_probe` and `vpc_black_hole_probe`.
        /// </summary>
        [Output("probeType")]
        public Output<string> ProbeType { get; private set; } = null!;

        /// <summary>
        /// The version of the probe.
        /// </summary>
        [Output("probeVersion")]
        public Output<string> ProbeVersion { get; private set; } = null!;

        /// <summary>
        /// The IP address of the proxy.
        /// </summary>
        [Output("proxyIp")]
        public Output<string?> ProxyIp { get; private set; } = null!;

        /// <summary>
        /// Listen to the IP address list.
        /// </summary>
        [Output("serviceIpLists")]
        public Output<ImmutableArray<string>> ServiceIpLists { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Machine uuid, **probe_type** is `host_probe`. This value cannot be empty.
        /// </summary>
        [Output("uuid")]
        public Output<string?> Uuid { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC. **probe_type** is `vpc_black_hole_probe`. This value cannot be empty.
        /// </summary>
        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a HoneypotProbe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HoneypotProbe(string name, HoneypotProbeArgs args, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/honeypotProbe:HoneypotProbe", name, args ?? new HoneypotProbeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HoneypotProbe(string name, Input<string> id, HoneypotProbeState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:threatdetection/honeypotProbe:HoneypotProbe", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HoneypotProbe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HoneypotProbe Get(string name, Input<string> id, HoneypotProbeState? state = null, CustomResourceOptions? options = null)
        {
            return new HoneypotProbe(name, id, state, options);
        }
    }

    public sealed class HoneypotProbeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARP spoofing detection.**true**: Enable **false**: Disabled
        /// </summary>
        [Input("arp")]
        public Input<bool>? Arp { get; set; }

        /// <summary>
        /// The ID of the management node.
        /// </summary>
        [Input("controlNodeId", required: true)]
        public Input<string> ControlNodeId { get; set; } = null!;

        /// <summary>
        /// Probe display name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("honeypotBindLists")]
        private InputList<Inputs.HoneypotProbeHoneypotBindListArgs>? _honeypotBindLists;

        /// <summary>
        /// Configure the service.See the following `Block HoneypotBindList`.
        /// </summary>
        public InputList<Inputs.HoneypotProbeHoneypotBindListArgs> HoneypotBindLists
        {
            get => _honeypotBindLists ?? (_honeypotBindLists = new InputList<Inputs.HoneypotProbeHoneypotBindListArgs>());
            set => _honeypotBindLists = value;
        }

        /// <summary>
        /// Ping scan detection. Value: **true**: Enable **false**: Disabled
        /// </summary>
        [Input("ping")]
        public Input<bool>? Ping { get; set; }

        /// <summary>
        /// Probe type, support `host_probe` and `vpc_black_hole_probe`.
        /// </summary>
        [Input("probeType", required: true)]
        public Input<string> ProbeType { get; set; } = null!;

        /// <summary>
        /// The version of the probe.
        /// </summary>
        [Input("probeVersion")]
        public Input<string>? ProbeVersion { get; set; }

        /// <summary>
        /// The IP address of the proxy.
        /// </summary>
        [Input("proxyIp")]
        public Input<string>? ProxyIp { get; set; }

        [Input("serviceIpLists")]
        private InputList<string>? _serviceIpLists;

        /// <summary>
        /// Listen to the IP address list.
        /// </summary>
        public InputList<string> ServiceIpLists
        {
            get => _serviceIpLists ?? (_serviceIpLists = new InputList<string>());
            set => _serviceIpLists = value;
        }

        /// <summary>
        /// Machine uuid, **probe_type** is `host_probe`. This value cannot be empty.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// The ID of the VPC. **probe_type** is `vpc_black_hole_probe`. This value cannot be empty.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public HoneypotProbeArgs()
        {
        }
        public static new HoneypotProbeArgs Empty => new HoneypotProbeArgs();
    }

    public sealed class HoneypotProbeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARP spoofing detection.**true**: Enable **false**: Disabled
        /// </summary>
        [Input("arp")]
        public Input<bool>? Arp { get; set; }

        /// <summary>
        /// The ID of the management node.
        /// </summary>
        [Input("controlNodeId")]
        public Input<string>? ControlNodeId { get; set; }

        /// <summary>
        /// Probe display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("honeypotBindLists")]
        private InputList<Inputs.HoneypotProbeHoneypotBindListGetArgs>? _honeypotBindLists;

        /// <summary>
        /// Configure the service.See the following `Block HoneypotBindList`.
        /// </summary>
        public InputList<Inputs.HoneypotProbeHoneypotBindListGetArgs> HoneypotBindLists
        {
            get => _honeypotBindLists ?? (_honeypotBindLists = new InputList<Inputs.HoneypotProbeHoneypotBindListGetArgs>());
            set => _honeypotBindLists = value;
        }

        /// <summary>
        /// The first ID of the resource
        /// </summary>
        [Input("honeypotProbeId")]
        public Input<string>? HoneypotProbeId { get; set; }

        /// <summary>
        /// Ping scan detection. Value: **true**: Enable **false**: Disabled
        /// </summary>
        [Input("ping")]
        public Input<bool>? Ping { get; set; }

        /// <summary>
        /// Probe type, support `host_probe` and `vpc_black_hole_probe`.
        /// </summary>
        [Input("probeType")]
        public Input<string>? ProbeType { get; set; }

        /// <summary>
        /// The version of the probe.
        /// </summary>
        [Input("probeVersion")]
        public Input<string>? ProbeVersion { get; set; }

        /// <summary>
        /// The IP address of the proxy.
        /// </summary>
        [Input("proxyIp")]
        public Input<string>? ProxyIp { get; set; }

        [Input("serviceIpLists")]
        private InputList<string>? _serviceIpLists;

        /// <summary>
        /// Listen to the IP address list.
        /// </summary>
        public InputList<string> ServiceIpLists
        {
            get => _serviceIpLists ?? (_serviceIpLists = new InputList<string>());
            set => _serviceIpLists = value;
        }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Machine uuid, **probe_type** is `host_probe`. This value cannot be empty.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// The ID of the VPC. **probe_type** is `vpc_black_hole_probe`. This value cannot be empty.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public HoneypotProbeState()
        {
        }
        public static new HoneypotProbeState Empty => new HoneypotProbeState();
    }
}
