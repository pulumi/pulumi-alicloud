// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Edas
{
    /// <summary>
    /// Provides an EDAS deploy group resource.
    /// 
    /// &gt; **NOTE:** Available in 1.82.0+
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new AliCloud.Edas.DeployGroup("default", new()
    ///     {
    ///         AppId = @var.App_id,
    ///         GroupName = @var.Group_name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// EDAS deploy group can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:edas/deployGroup:DeployGroup group app_id:group_name:group_id
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:edas/deployGroup:DeployGroup")]
    public partial class DeployGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the application that you want to deploy.
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// The name of the instance group that you want to create.
        /// </summary>
        [Output("groupName")]
        public Output<string> GroupName { get; private set; } = null!;

        /// <summary>
        /// The type of the instance group that you want to create. Valid values: 0: Default group. 1: Phased release is disabled for traffic management. 2: Phased release is enabled for traffic management.
        /// </summary>
        [Output("groupType")]
        public Output<int> GroupType { get; private set; } = null!;


        /// <summary>
        /// Create a DeployGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeployGroup(string name, DeployGroupArgs args, CustomResourceOptions? options = null)
            : base("alicloud:edas/deployGroup:DeployGroup", name, args ?? new DeployGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeployGroup(string name, Input<string> id, DeployGroupState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:edas/deployGroup:DeployGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeployGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeployGroup Get(string name, Input<string> id, DeployGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new DeployGroup(name, id, state, options);
        }
    }

    public sealed class DeployGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the application that you want to deploy.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// The name of the instance group that you want to create.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        public DeployGroupArgs()
        {
        }
        public static new DeployGroupArgs Empty => new DeployGroupArgs();
    }

    public sealed class DeployGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the application that you want to deploy.
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// The name of the instance group that you want to create.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The type of the instance group that you want to create. Valid values: 0: Default group. 1: Phased release is disabled for traffic management. 2: Phased release is enabled for traffic management.
        /// </summary>
        [Input("groupType")]
        public Input<int>? GroupType { get; set; }

        public DeployGroupState()
        {
        }
        public static new DeployGroupState Empty => new DeployGroupState();
    }
}
