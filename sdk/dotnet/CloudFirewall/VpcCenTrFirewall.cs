// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudFirewall
{
    /// <summary>
    /// Provides a Cloud Firewall Vpc Cen Tr Firewall resource.
    /// 
    /// VPC firewall Cloud Enterprise Network Enterprise Edition.
    /// 
    /// For information about Cloud Firewall Vpc Cen Tr Firewall and how to use it, see [What is Vpc Cen Tr Firewall](https://www.alibabacloud.com/help/en/cloud-firewall/cloudfirewall/developer-reference/api-cloudfw-2017-12-07-createtrfirewallv2).
    /// 
    /// &gt; **NOTE:** Available since v1.228.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var description = config.Get("description") ?? "Created by Terraform";
    ///     var firewallName = config.Get("firewallName") ?? "tf-example";
    ///     var trAttachmentMasterCidr = config.Get("trAttachmentMasterCidr") ?? "192.168.3.192/26";
    ///     var firewallSubnetCidr = config.Get("firewallSubnetCidr") ?? "192.168.3.0/25";
    ///     var region = config.Get("region") ?? "cn-hangzhou";
    ///     var trAttachmentSlaveCidr = config.Get("trAttachmentSlaveCidr") ?? "192.168.3.128/26";
    ///     var firewallVpcCidr = config.Get("firewallVpcCidr") ?? "192.168.3.0/24";
    ///     var zone1 = config.Get("zone1") ?? "cn-hangzhou-h";
    ///     var firewallNameUpdate = config.Get("firewallNameUpdate") ?? "tf-example-1";
    ///     var zone2 = config.Get("zone2") ?? "cn-hangzhou-i";
    ///     var @default = AliCloud.Cen.GetTransitRouterAvailableResources.Invoke();
    /// 
    ///     var defaultGetZones = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var cen = new AliCloud.Cen.Instance("cen", new()
    ///     {
    ///         Description = "terraform example",
    ///         CenInstanceName = name,
    ///     });
    /// 
    ///     var tr = new AliCloud.Cen.TransitRouter("tr", new()
    ///     {
    ///         TransitRouterName = name,
    ///         TransitRouterDescription = "tr-created-by-terraform",
    ///         CenId = cen.Id,
    ///     });
    /// 
    ///     var vpc1 = new AliCloud.Vpc.Network("vpc1", new()
    ///     {
    ///         Description = "created by terraform",
    ///         CidrBlock = "192.168.1.0/24",
    ///         VpcName = name,
    ///     });
    /// 
    ///     var vpc1vsw1 = new AliCloud.Vpc.Switch("vpc1vsw1", new()
    ///     {
    ///         CidrBlock = "192.168.1.0/25",
    ///         VswitchName = name,
    ///         VpcId = vpc1.Id,
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getTransitRouterAvailableResourcesResult =&gt; getTransitRouterAvailableResourcesResult.Resources[0]?.MasterZones[1])),
    ///     });
    /// 
    ///     var vpc1vsw2 = new AliCloud.Vpc.Switch("vpc1vsw2", new()
    ///     {
    ///         VpcId = vpc1.Id,
    ///         CidrBlock = "192.168.1.128/26",
    ///         VswitchName = name,
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getTransitRouterAvailableResourcesResult =&gt; getTransitRouterAvailableResourcesResult.Resources[0]?.MasterZones[2])),
    ///     });
    /// 
    ///     var foo = new AliCloud.Vpc.RouteTable("foo", new()
    ///     {
    ///         VpcId = vpc1.Id,
    ///         RouteTableName = name,
    ///         Description = name,
    ///     });
    /// 
    ///     var tr_vpc1 = new AliCloud.Cen.TransitRouterVpcAttachment("tr-vpc1", new()
    ///     {
    ///         ZoneMappings = new[]
    ///         {
    ///             new AliCloud.Cen.Inputs.TransitRouterVpcAttachmentZoneMappingArgs
    ///             {
    ///                 VswitchId = vpc1vsw1.Id,
    ///                 ZoneId = @default.Apply(@default =&gt; @default.Apply(getTransitRouterAvailableResourcesResult =&gt; getTransitRouterAvailableResourcesResult.Resources[0]?.MasterZones[1])),
    ///             },
    ///             new AliCloud.Cen.Inputs.TransitRouterVpcAttachmentZoneMappingArgs
    ///             {
    ///                 ZoneId = @default.Apply(@default =&gt; @default.Apply(getTransitRouterAvailableResourcesResult =&gt; getTransitRouterAvailableResourcesResult.Resources[0]?.MasterZones[2])),
    ///                 VswitchId = vpc1vsw2.Id,
    ///             },
    ///         },
    ///         VpcId = vpc1.Id,
    ///         CenId = cen.Id,
    ///         TransitRouterId = tr.TransitRouterId,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             foo,
    ///         },
    ///     });
    /// 
    ///     var wait10Minutes = new Time.Index.Sleep("wait_10_minutes", new()
    ///     {
    ///         CreateDuration = "10m",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             tr_vpc1,
    ///         },
    ///     });
    /// 
    ///     var defaultVpcCenTrFirewall = new AliCloud.CloudFirewall.VpcCenTrFirewall("default", new()
    ///     {
    ///         CenId = tr_vpc1.CenId,
    ///         FirewallName = name,
    ///         FirewallSubnetCidr = firewallSubnetCidr,
    ///         TrAttachmentSlaveCidr = trAttachmentSlaveCidr,
    ///         FirewallDescription = "VpcCenTrFirewall created by terraform",
    ///         RegionNo = region,
    ///         TrAttachmentMasterCidr = trAttachmentMasterCidr,
    ///         FirewallVpcCidr = firewallVpcCidr,
    ///         TransitRouterId = tr.TransitRouterId,
    ///         RouteMode = "managed",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             wait10Minutes,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Firewall Vpc Cen Tr Firewall can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudfirewall/vpcCenTrFirewall:VpcCenTrFirewall example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudfirewall/vpcCenTrFirewall:VpcCenTrFirewall")]
    public partial class VpcCenTrFirewall : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the CEN instance.
        /// </summary>
        [Output("cenId")]
        public Output<string> CenId { get; private set; } = null!;

        /// <summary>
        /// Firewall description.
        /// </summary>
        [Output("firewallDescription")]
        public Output<string?> FirewallDescription { get; private set; } = null!;

        /// <summary>
        /// The name of Cloud Firewall.
        /// </summary>
        [Output("firewallName")]
        public Output<string> FirewallName { get; private set; } = null!;

        /// <summary>
        /// Required in automatic mode, the CIDR of subnet used to store the firewall ENI in the firewall VPC.
        /// </summary>
        [Output("firewallSubnetCidr")]
        public Output<string> FirewallSubnetCidr { get; private set; } = null!;

        /// <summary>
        /// Required in automatic mode,  th CIDR of firewall VPC.
        /// </summary>
        [Output("firewallVpcCidr")]
        public Output<string> FirewallVpcCidr { get; private set; } = null!;

        /// <summary>
        /// The region ID of the transit router instance.
        /// </summary>
        [Output("regionNo")]
        public Output<string> RegionNo { get; private set; } = null!;

        /// <summary>
        /// The routing pattern. Value: managed: indicates automatic mode
        /// </summary>
        [Output("routeMode")]
        public Output<string> RouteMode { get; private set; } = null!;

        /// <summary>
        /// Firewall status. Value:
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Required in automatic mode, the primary CIDR of network used to connect to the TR in the firewall VPC.
        /// </summary>
        [Output("trAttachmentMasterCidr")]
        public Output<string> TrAttachmentMasterCidr { get; private set; } = null!;

        /// <summary>
        /// The primary zone of the switch.
        /// </summary>
        [Output("trAttachmentMasterZone")]
        public Output<string?> TrAttachmentMasterZone { get; private set; } = null!;

        /// <summary>
        /// Required in automatic mode, the the secondary CIDR of the subnet in the firewall VPC used to connect to TR.
        /// </summary>
        [Output("trAttachmentSlaveCidr")]
        public Output<string> TrAttachmentSlaveCidr { get; private set; } = null!;

        /// <summary>
        /// Switch standby area.
        /// </summary>
        [Output("trAttachmentSlaveZone")]
        public Output<string?> TrAttachmentSlaveZone { get; private set; } = null!;

        /// <summary>
        /// The ID of the transit router instance.
        /// </summary>
        [Output("transitRouterId")]
        public Output<string> TransitRouterId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcCenTrFirewall resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcCenTrFirewall(string name, VpcCenTrFirewallArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cloudfirewall/vpcCenTrFirewall:VpcCenTrFirewall", name, args ?? new VpcCenTrFirewallArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcCenTrFirewall(string name, Input<string> id, VpcCenTrFirewallState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudfirewall/vpcCenTrFirewall:VpcCenTrFirewall", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcCenTrFirewall resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcCenTrFirewall Get(string name, Input<string> id, VpcCenTrFirewallState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcCenTrFirewall(name, id, state, options);
        }
    }

    public sealed class VpcCenTrFirewallArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the CEN instance.
        /// </summary>
        [Input("cenId", required: true)]
        public Input<string> CenId { get; set; } = null!;

        /// <summary>
        /// Firewall description.
        /// </summary>
        [Input("firewallDescription")]
        public Input<string>? FirewallDescription { get; set; }

        /// <summary>
        /// The name of Cloud Firewall.
        /// </summary>
        [Input("firewallName", required: true)]
        public Input<string> FirewallName { get; set; } = null!;

        /// <summary>
        /// Required in automatic mode, the CIDR of subnet used to store the firewall ENI in the firewall VPC.
        /// </summary>
        [Input("firewallSubnetCidr", required: true)]
        public Input<string> FirewallSubnetCidr { get; set; } = null!;

        /// <summary>
        /// Required in automatic mode,  th CIDR of firewall VPC.
        /// </summary>
        [Input("firewallVpcCidr", required: true)]
        public Input<string> FirewallVpcCidr { get; set; } = null!;

        /// <summary>
        /// The region ID of the transit router instance.
        /// </summary>
        [Input("regionNo", required: true)]
        public Input<string> RegionNo { get; set; } = null!;

        /// <summary>
        /// The routing pattern. Value: managed: indicates automatic mode
        /// </summary>
        [Input("routeMode", required: true)]
        public Input<string> RouteMode { get; set; } = null!;

        /// <summary>
        /// Required in automatic mode, the primary CIDR of network used to connect to the TR in the firewall VPC.
        /// </summary>
        [Input("trAttachmentMasterCidr", required: true)]
        public Input<string> TrAttachmentMasterCidr { get; set; } = null!;

        /// <summary>
        /// The primary zone of the switch.
        /// </summary>
        [Input("trAttachmentMasterZone")]
        public Input<string>? TrAttachmentMasterZone { get; set; }

        /// <summary>
        /// Required in automatic mode, the the secondary CIDR of the subnet in the firewall VPC used to connect to TR.
        /// </summary>
        [Input("trAttachmentSlaveCidr", required: true)]
        public Input<string> TrAttachmentSlaveCidr { get; set; } = null!;

        /// <summary>
        /// Switch standby area.
        /// </summary>
        [Input("trAttachmentSlaveZone")]
        public Input<string>? TrAttachmentSlaveZone { get; set; }

        /// <summary>
        /// The ID of the transit router instance.
        /// </summary>
        [Input("transitRouterId", required: true)]
        public Input<string> TransitRouterId { get; set; } = null!;

        public VpcCenTrFirewallArgs()
        {
        }
        public static new VpcCenTrFirewallArgs Empty => new VpcCenTrFirewallArgs();
    }

    public sealed class VpcCenTrFirewallState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the CEN instance.
        /// </summary>
        [Input("cenId")]
        public Input<string>? CenId { get; set; }

        /// <summary>
        /// Firewall description.
        /// </summary>
        [Input("firewallDescription")]
        public Input<string>? FirewallDescription { get; set; }

        /// <summary>
        /// The name of Cloud Firewall.
        /// </summary>
        [Input("firewallName")]
        public Input<string>? FirewallName { get; set; }

        /// <summary>
        /// Required in automatic mode, the CIDR of subnet used to store the firewall ENI in the firewall VPC.
        /// </summary>
        [Input("firewallSubnetCidr")]
        public Input<string>? FirewallSubnetCidr { get; set; }

        /// <summary>
        /// Required in automatic mode,  th CIDR of firewall VPC.
        /// </summary>
        [Input("firewallVpcCidr")]
        public Input<string>? FirewallVpcCidr { get; set; }

        /// <summary>
        /// The region ID of the transit router instance.
        /// </summary>
        [Input("regionNo")]
        public Input<string>? RegionNo { get; set; }

        /// <summary>
        /// The routing pattern. Value: managed: indicates automatic mode
        /// </summary>
        [Input("routeMode")]
        public Input<string>? RouteMode { get; set; }

        /// <summary>
        /// Firewall status. Value:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Required in automatic mode, the primary CIDR of network used to connect to the TR in the firewall VPC.
        /// </summary>
        [Input("trAttachmentMasterCidr")]
        public Input<string>? TrAttachmentMasterCidr { get; set; }

        /// <summary>
        /// The primary zone of the switch.
        /// </summary>
        [Input("trAttachmentMasterZone")]
        public Input<string>? TrAttachmentMasterZone { get; set; }

        /// <summary>
        /// Required in automatic mode, the the secondary CIDR of the subnet in the firewall VPC used to connect to TR.
        /// </summary>
        [Input("trAttachmentSlaveCidr")]
        public Input<string>? TrAttachmentSlaveCidr { get; set; }

        /// <summary>
        /// Switch standby area.
        /// </summary>
        [Input("trAttachmentSlaveZone")]
        public Input<string>? TrAttachmentSlaveZone { get; set; }

        /// <summary>
        /// The ID of the transit router instance.
        /// </summary>
        [Input("transitRouterId")]
        public Input<string>? TransitRouterId { get; set; }

        public VpcCenTrFirewallState()
        {
        }
        public static new VpcCenTrFirewallState Empty => new VpcCenTrFirewallState();
    }
}
