// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudFirewall
{
    /// <summary>
    /// ## Import
    /// 
    /// Cloud Firewall IPS Config can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudfirewall/ipsConfig:IpsConfig example 
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudfirewall/ipsConfig:IpsConfig")]
    public partial class IpsConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Basic rule switch. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Output("basicRules")]
        public Output<int?> BasicRules { get; private set; } = null!;

        /// <summary>
        /// Threat intelligence. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Output("ctiRules")]
        public Output<int?> CtiRules { get; private set; } = null!;

        /// <summary>
        /// Language
        /// </summary>
        [Output("lang")]
        public Output<string?> Lang { get; private set; } = null!;

        /// <summary>
        /// Sensitive data detection Daily detection traffic limit. Defaults to 0.
        /// </summary>
        [Output("maxSdl")]
        public Output<int?> MaxSdl { get; private set; } = null!;

        /// <summary>
        /// Virtual patch switch. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Output("patchRules")]
        public Output<int?> PatchRules { get; private set; } = null!;

        /// <summary>
        /// The IPS rule Group. Value:
        /// - 1: loose rule Group.
        /// - 2: Medium rule Group.
        /// - 3: Strict rule groups.
        /// </summary>
        [Output("ruleClass")]
        public Output<int?> RuleClass { get; private set; } = null!;

        /// <summary>
        /// IPS defense mode. Value:
        /// - 1: Intercept mode.
        /// - 0: Observation mode (Default).
        /// </summary>
        [Output("runMode")]
        public Output<int?> RunMode { get; private set; } = null!;


        /// <summary>
        /// Create a IpsConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IpsConfig(string name, IpsConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudfirewall/ipsConfig:IpsConfig", name, args ?? new IpsConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IpsConfig(string name, Input<string> id, IpsConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudfirewall/ipsConfig:IpsConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IpsConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IpsConfig Get(string name, Input<string> id, IpsConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new IpsConfig(name, id, state, options);
        }
    }

    public sealed class IpsConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Basic rule switch. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Input("basicRules")]
        public Input<int>? BasicRules { get; set; }

        /// <summary>
        /// Threat intelligence. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Input("ctiRules")]
        public Input<int>? CtiRules { get; set; }

        /// <summary>
        /// Language
        /// </summary>
        [Input("lang")]
        public Input<string>? Lang { get; set; }

        /// <summary>
        /// Sensitive data detection Daily detection traffic limit. Defaults to 0.
        /// </summary>
        [Input("maxSdl")]
        public Input<int>? MaxSdl { get; set; }

        /// <summary>
        /// Virtual patch switch. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Input("patchRules")]
        public Input<int>? PatchRules { get; set; }

        /// <summary>
        /// The IPS rule Group. Value:
        /// - 1: loose rule Group.
        /// - 2: Medium rule Group.
        /// - 3: Strict rule groups.
        /// </summary>
        [Input("ruleClass")]
        public Input<int>? RuleClass { get; set; }

        /// <summary>
        /// IPS defense mode. Value:
        /// - 1: Intercept mode.
        /// - 0: Observation mode (Default).
        /// </summary>
        [Input("runMode")]
        public Input<int>? RunMode { get; set; }

        public IpsConfigArgs()
        {
        }
        public static new IpsConfigArgs Empty => new IpsConfigArgs();
    }

    public sealed class IpsConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Basic rule switch. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Input("basicRules")]
        public Input<int>? BasicRules { get; set; }

        /// <summary>
        /// Threat intelligence. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Input("ctiRules")]
        public Input<int>? CtiRules { get; set; }

        /// <summary>
        /// Language
        /// </summary>
        [Input("lang")]
        public Input<string>? Lang { get; set; }

        /// <summary>
        /// Sensitive data detection Daily detection traffic limit. Defaults to 0.
        /// </summary>
        [Input("maxSdl")]
        public Input<int>? MaxSdl { get; set; }

        /// <summary>
        /// Virtual patch switch. Value:
        /// - 1: Open.
        /// - 0: Closed (Default).
        /// </summary>
        [Input("patchRules")]
        public Input<int>? PatchRules { get; set; }

        /// <summary>
        /// The IPS rule Group. Value:
        /// - 1: loose rule Group.
        /// - 2: Medium rule Group.
        /// - 3: Strict rule groups.
        /// </summary>
        [Input("ruleClass")]
        public Input<int>? RuleClass { get; set; }

        /// <summary>
        /// IPS defense mode. Value:
        /// - 1: Intercept mode.
        /// - 0: Observation mode (Default).
        /// </summary>
        [Input("runMode")]
        public Input<int>? RunMode { get; set; }

        public IpsConfigState()
        {
        }
        public static new IpsConfigState Empty => new IpsConfigState();
    }
}
