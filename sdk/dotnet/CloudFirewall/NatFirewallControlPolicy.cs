// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudFirewall
{
    /// <summary>
    /// Provides a Cloud Firewall Nat Firewall Control Policy resource. Nat firewall access control policy.
    /// 
    /// For information about Cloud Firewall Nat Firewall Control Policy and how to use it, see [What is Nat Firewall Control Policy](https://www.alibabacloud.com/help/en/cloud-firewall/developer-reference/api-cloudfw-2017-12-07-createnatfirewallcontrolpolicy).
    /// 
    /// &gt; **NOTE:** Available since v1.224.0.
    /// 
    /// ## Import
    /// 
    /// Cloud Firewall Nat Firewall Control Policy can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy example &lt;acl_uuid&gt;:&lt;nat_gateway_id&gt;:&lt;direction&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy")]
    public partial class NatFirewallControlPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
        /// - **accept**: Release
        /// - **drop**: Refused
        /// - **log**: Observation.
        /// </summary>
        [Output("aclAction")]
        public Output<string> AclAction { get; private set; } = null!;

        /// <summary>
        /// The unique ID of the security access control policy.
        /// &gt; **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
        /// </summary>
        [Output("aclUuid")]
        public Output<string> AclUuid { get; private set; } = null!;

        /// <summary>
        /// The list of application types supported by the access control policy.
        /// </summary>
        [Output("applicationNameLists")]
        public Output<ImmutableArray<string>> ApplicationNameLists { get; private set; } = null!;

        /// <summary>
        /// The time when the policy was created.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description of the access control policy.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The destination port of traffic access in the access control policy. Value:
        /// - When the protocol type is set to ICMP, the value of DestPort is null.
        /// &gt; **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
        /// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
        /// &gt; **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
        /// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
        /// </summary>
        [Output("destPort")]
        public Output<string> DestPort { get; private set; } = null!;

        /// <summary>
        /// The address book name of the destination port of the access traffic in the access control policy.
        /// &gt; **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
        /// </summary>
        [Output("destPortGroup")]
        public Output<string?> DestPortGroup { get; private set; } = null!;

        /// <summary>
        /// The destination port type of the access traffic in the security access control policy.
        /// - **port**: port
        /// - **group**: Port Address Book.
        /// </summary>
        [Output("destPortType")]
        public Output<string> DestPortType { get; private set; } = null!;

        /// <summary>
        /// The destination address segment in the access control policy. Valid values:
        /// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
        /// - When DestinationType IS group, Destination is the name of the Destination address book. For example: db_group
        /// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
        /// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
        /// </summary>
        [Output("destination")]
        public Output<string> Destination { get; private set; } = null!;

        /// <summary>
        /// The destination address type in the access control policy. Valid values:
        /// - **net**: Destination Network segment (CIDR address)
        /// - **group**: Destination Address Book
        /// - **domain**: the destination domain name.
        /// </summary>
        [Output("destinationType")]
        public Output<string> DestinationType { get; private set; } = null!;

        /// <summary>
        /// The traffic direction of the access control policy. Valid values:
        /// - **out**: Internal and external traffic access control.
        /// </summary>
        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        /// <summary>
        /// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
        /// - **0**: Based on FQDN
        /// - **1**: DNS-based dynamic resolution
        /// - **2**: dynamic resolution based on FQDN and DNS.
        /// </summary>
        [Output("domainResolveType")]
        public Output<int?> DomainResolveType { get; private set; } = null!;

        /// <summary>
        /// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
        /// &gt; **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
        /// </summary>
        [Output("endTime")]
        public Output<int?> EndTime { get; private set; } = null!;

        /// <summary>
        /// Supported IP address version. Value:
        /// - **4** (default): indicates the IPv4 address.
        /// </summary>
        [Output("ipVersion")]
        public Output<string?> IpVersion { get; private set; } = null!;

        /// <summary>
        /// The ID of the NAT gateway instance.
        /// </summary>
        [Output("natGatewayId")]
        public Output<string> NatGatewayId { get; private set; } = null!;

        /// <summary>
        /// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
        /// </summary>
        [Output("newOrder")]
        public Output<string> NewOrder { get; private set; } = null!;

        /// <summary>
        /// The security protocol type for traffic access in the access control policy. Valid values:
        /// - ANY (indicates that all protocol types are queried)
        /// - TCP
        /// - UDP
        /// - ICMP.
        /// </summary>
        [Output("proto")]
        public Output<string> Proto { get; private set; } = null!;

        /// <summary>
        /// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
        /// - **true**: Enable access control policy
        /// - **false**: Do not enable access control policies.
        /// </summary>
        [Output("release")]
        public Output<string> Release { get; private set; } = null!;

        /// <summary>
        /// Collection of recurring dates for the policy validity period of the access control policy.
        /// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
        /// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
        /// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
        /// </summary>
        [Output("repeatDays")]
        public Output<ImmutableArray<int>> RepeatDays { get; private set; } = null!;

        /// <summary>
        /// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
        /// &gt; **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
        /// </summary>
        [Output("repeatEndTime")]
        public Output<string?> RepeatEndTime { get; private set; } = null!;

        /// <summary>
        /// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
        /// &gt; **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
        /// </summary>
        [Output("repeatStartTime")]
        public Output<string?> RepeatStartTime { get; private set; } = null!;

        /// <summary>
        /// The type of repetition for the policy validity period of the access control policy. Value:
        /// - **Permit** (default): Always
        /// - **None**: Specify a single time
        /// - **Daily**: Daily
        /// - **Weekly**: Weekly
        /// - **Monthly**: Monthly.
        /// </summary>
        [Output("repeatType")]
        public Output<string> RepeatType { get; private set; } = null!;

        /// <summary>
        /// The source address in the access control policy. Valid values:
        /// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
        /// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// The source address type in the access control policy. Valid values:
        /// - **net**: the source network segment (CIDR address)
        /// - **group**: source address book
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;

        /// <summary>
        /// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
        /// &gt; **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
        /// </summary>
        [Output("startTime")]
        public Output<int?> StartTime { get; private set; } = null!;


        /// <summary>
        /// Create a NatFirewallControlPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NatFirewallControlPolicy(string name, NatFirewallControlPolicyArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy", name, args ?? new NatFirewallControlPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NatFirewallControlPolicy(string name, Input<string> id, NatFirewallControlPolicyState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NatFirewallControlPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NatFirewallControlPolicy Get(string name, Input<string> id, NatFirewallControlPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new NatFirewallControlPolicy(name, id, state, options);
        }
    }

    public sealed class NatFirewallControlPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
        /// - **accept**: Release
        /// - **drop**: Refused
        /// - **log**: Observation.
        /// </summary>
        [Input("aclAction", required: true)]
        public Input<string> AclAction { get; set; } = null!;

        [Input("applicationNameLists", required: true)]
        private InputList<string>? _applicationNameLists;

        /// <summary>
        /// The list of application types supported by the access control policy.
        /// </summary>
        public InputList<string> ApplicationNameLists
        {
            get => _applicationNameLists ?? (_applicationNameLists = new InputList<string>());
            set => _applicationNameLists = value;
        }

        /// <summary>
        /// The description of the access control policy.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The destination port of traffic access in the access control policy. Value:
        /// - When the protocol type is set to ICMP, the value of DestPort is null.
        /// &gt; **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
        /// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
        /// &gt; **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
        /// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
        /// </summary>
        [Input("destPort")]
        public Input<string>? DestPort { get; set; }

        /// <summary>
        /// The address book name of the destination port of the access traffic in the access control policy.
        /// &gt; **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
        /// </summary>
        [Input("destPortGroup")]
        public Input<string>? DestPortGroup { get; set; }

        /// <summary>
        /// The destination port type of the access traffic in the security access control policy.
        /// - **port**: port
        /// - **group**: Port Address Book.
        /// </summary>
        [Input("destPortType")]
        public Input<string>? DestPortType { get; set; }

        /// <summary>
        /// The destination address segment in the access control policy. Valid values:
        /// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
        /// - When DestinationType IS group, Destination is the name of the Destination address book. For example: db_group
        /// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
        /// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
        /// </summary>
        [Input("destination", required: true)]
        public Input<string> Destination { get; set; } = null!;

        /// <summary>
        /// The destination address type in the access control policy. Valid values:
        /// - **net**: Destination Network segment (CIDR address)
        /// - **group**: Destination Address Book
        /// - **domain**: the destination domain name.
        /// </summary>
        [Input("destinationType", required: true)]
        public Input<string> DestinationType { get; set; } = null!;

        /// <summary>
        /// The traffic direction of the access control policy. Valid values:
        /// - **out**: Internal and external traffic access control.
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
        /// - **0**: Based on FQDN
        /// - **1**: DNS-based dynamic resolution
        /// - **2**: dynamic resolution based on FQDN and DNS.
        /// </summary>
        [Input("domainResolveType")]
        public Input<int>? DomainResolveType { get; set; }

        /// <summary>
        /// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
        /// &gt; **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
        /// </summary>
        [Input("endTime")]
        public Input<int>? EndTime { get; set; }

        /// <summary>
        /// Supported IP address version. Value:
        /// - **4** (default): indicates the IPv4 address.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// The ID of the NAT gateway instance.
        /// </summary>
        [Input("natGatewayId", required: true)]
        public Input<string> NatGatewayId { get; set; } = null!;

        /// <summary>
        /// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
        /// </summary>
        [Input("newOrder", required: true)]
        public Input<string> NewOrder { get; set; } = null!;

        /// <summary>
        /// The security protocol type for traffic access in the access control policy. Valid values:
        /// - ANY (indicates that all protocol types are queried)
        /// - TCP
        /// - UDP
        /// - ICMP.
        /// </summary>
        [Input("proto", required: true)]
        public Input<string> Proto { get; set; } = null!;

        /// <summary>
        /// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
        /// - **true**: Enable access control policy
        /// - **false**: Do not enable access control policies.
        /// </summary>
        [Input("release")]
        public Input<string>? Release { get; set; }

        [Input("repeatDays")]
        private InputList<int>? _repeatDays;

        /// <summary>
        /// Collection of recurring dates for the policy validity period of the access control policy.
        /// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
        /// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
        /// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
        /// </summary>
        public InputList<int> RepeatDays
        {
            get => _repeatDays ?? (_repeatDays = new InputList<int>());
            set => _repeatDays = value;
        }

        /// <summary>
        /// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
        /// &gt; **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
        /// </summary>
        [Input("repeatEndTime")]
        public Input<string>? RepeatEndTime { get; set; }

        /// <summary>
        /// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
        /// &gt; **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
        /// </summary>
        [Input("repeatStartTime")]
        public Input<string>? RepeatStartTime { get; set; }

        /// <summary>
        /// The type of repetition for the policy validity period of the access control policy. Value:
        /// - **Permit** (default): Always
        /// - **None**: Specify a single time
        /// - **Daily**: Daily
        /// - **Weekly**: Weekly
        /// - **Monthly**: Monthly.
        /// </summary>
        [Input("repeatType")]
        public Input<string>? RepeatType { get; set; }

        /// <summary>
        /// The source address in the access control policy. Valid values:
        /// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
        /// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        /// <summary>
        /// The source address type in the access control policy. Valid values:
        /// - **net**: the source network segment (CIDR address)
        /// - **group**: source address book
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        /// <summary>
        /// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
        /// &gt; **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        public NatFirewallControlPolicyArgs()
        {
        }
        public static new NatFirewallControlPolicyArgs Empty => new NatFirewallControlPolicyArgs();
    }

    public sealed class NatFirewallControlPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
        /// - **accept**: Release
        /// - **drop**: Refused
        /// - **log**: Observation.
        /// </summary>
        [Input("aclAction")]
        public Input<string>? AclAction { get; set; }

        /// <summary>
        /// The unique ID of the security access control policy.
        /// &gt; **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
        /// </summary>
        [Input("aclUuid")]
        public Input<string>? AclUuid { get; set; }

        [Input("applicationNameLists")]
        private InputList<string>? _applicationNameLists;

        /// <summary>
        /// The list of application types supported by the access control policy.
        /// </summary>
        public InputList<string> ApplicationNameLists
        {
            get => _applicationNameLists ?? (_applicationNameLists = new InputList<string>());
            set => _applicationNameLists = value;
        }

        /// <summary>
        /// The time when the policy was created.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// The description of the access control policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The destination port of traffic access in the access control policy. Value:
        /// - When the protocol type is set to ICMP, the value of DestPort is null.
        /// &gt; **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
        /// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
        /// &gt; **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
        /// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
        /// </summary>
        [Input("destPort")]
        public Input<string>? DestPort { get; set; }

        /// <summary>
        /// The address book name of the destination port of the access traffic in the access control policy.
        /// &gt; **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
        /// </summary>
        [Input("destPortGroup")]
        public Input<string>? DestPortGroup { get; set; }

        /// <summary>
        /// The destination port type of the access traffic in the security access control policy.
        /// - **port**: port
        /// - **group**: Port Address Book.
        /// </summary>
        [Input("destPortType")]
        public Input<string>? DestPortType { get; set; }

        /// <summary>
        /// The destination address segment in the access control policy. Valid values:
        /// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
        /// - When DestinationType IS group, Destination is the name of the Destination address book. For example: db_group
        /// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
        /// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
        /// </summary>
        [Input("destination")]
        public Input<string>? Destination { get; set; }

        /// <summary>
        /// The destination address type in the access control policy. Valid values:
        /// - **net**: Destination Network segment (CIDR address)
        /// - **group**: Destination Address Book
        /// - **domain**: the destination domain name.
        /// </summary>
        [Input("destinationType")]
        public Input<string>? DestinationType { get; set; }

        /// <summary>
        /// The traffic direction of the access control policy. Valid values:
        /// - **out**: Internal and external traffic access control.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
        /// - **0**: Based on FQDN
        /// - **1**: DNS-based dynamic resolution
        /// - **2**: dynamic resolution based on FQDN and DNS.
        /// </summary>
        [Input("domainResolveType")]
        public Input<int>? DomainResolveType { get; set; }

        /// <summary>
        /// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
        /// &gt; **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
        /// </summary>
        [Input("endTime")]
        public Input<int>? EndTime { get; set; }

        /// <summary>
        /// Supported IP address version. Value:
        /// - **4** (default): indicates the IPv4 address.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// The ID of the NAT gateway instance.
        /// </summary>
        [Input("natGatewayId")]
        public Input<string>? NatGatewayId { get; set; }

        /// <summary>
        /// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
        /// </summary>
        [Input("newOrder")]
        public Input<string>? NewOrder { get; set; }

        /// <summary>
        /// The security protocol type for traffic access in the access control policy. Valid values:
        /// - ANY (indicates that all protocol types are queried)
        /// - TCP
        /// - UDP
        /// - ICMP.
        /// </summary>
        [Input("proto")]
        public Input<string>? Proto { get; set; }

        /// <summary>
        /// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
        /// - **true**: Enable access control policy
        /// - **false**: Do not enable access control policies.
        /// </summary>
        [Input("release")]
        public Input<string>? Release { get; set; }

        [Input("repeatDays")]
        private InputList<int>? _repeatDays;

        /// <summary>
        /// Collection of recurring dates for the policy validity period of the access control policy.
        /// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
        /// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
        /// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
        /// </summary>
        public InputList<int> RepeatDays
        {
            get => _repeatDays ?? (_repeatDays = new InputList<int>());
            set => _repeatDays = value;
        }

        /// <summary>
        /// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
        /// &gt; **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
        /// </summary>
        [Input("repeatEndTime")]
        public Input<string>? RepeatEndTime { get; set; }

        /// <summary>
        /// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
        /// &gt; **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
        /// </summary>
        [Input("repeatStartTime")]
        public Input<string>? RepeatStartTime { get; set; }

        /// <summary>
        /// The type of repetition for the policy validity period of the access control policy. Value:
        /// - **Permit** (default): Always
        /// - **None**: Specify a single time
        /// - **Daily**: Daily
        /// - **Weekly**: Weekly
        /// - **Monthly**: Monthly.
        /// </summary>
        [Input("repeatType")]
        public Input<string>? RepeatType { get; set; }

        /// <summary>
        /// The source address in the access control policy. Valid values:
        /// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
        /// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// The source address type in the access control policy. Valid values:
        /// - **net**: the source network segment (CIDR address)
        /// - **group**: source address book
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
        /// &gt; **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        public NatFirewallControlPolicyState()
        {
        }
        public static new NatFirewallControlPolicyState Empty => new NatFirewallControlPolicyState();
    }
}
