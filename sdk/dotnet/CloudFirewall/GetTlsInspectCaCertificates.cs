// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudFirewall
{
    public static class GetTlsInspectCaCertificates
    {
        /// <summary>
        /// This data source provides Cloud Firewall Tls Inspect Ca Certificate available to the user.[What is Tls Inspect Ca Certificate](https://next.api.alibabacloud.com/document/Cloudfw/2017-12-07/GetTlsInspectCertificateDownloadUrl)
        /// 
        /// &gt; **NOTE:** Available since v1.262.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultCloudFirewallTlsInspectCaCertificate = new AliCloud.Index.CloudFirewallTlsInspectCaCertificate("default");
        /// 
        ///     var @default = AliCloud.CloudFirewall.GetTlsInspectCaCertificates.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultCloudFirewallTlsInspectCaCertificate.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudCloudFirewallTlsInspectCaCertificateExampleId"] = @default.Apply(@default =&gt; @default.Apply(getTlsInspectCaCertificatesResult =&gt; getTlsInspectCaCertificatesResult.Certificates[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetTlsInspectCaCertificatesResult> InvokeAsync(GetTlsInspectCaCertificatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTlsInspectCaCertificatesResult>("alicloud:cloudfirewall/getTlsInspectCaCertificates:getTlsInspectCaCertificates", args ?? new GetTlsInspectCaCertificatesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Cloud Firewall Tls Inspect Ca Certificate available to the user.[What is Tls Inspect Ca Certificate](https://next.api.alibabacloud.com/document/Cloudfw/2017-12-07/GetTlsInspectCertificateDownloadUrl)
        /// 
        /// &gt; **NOTE:** Available since v1.262.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultCloudFirewallTlsInspectCaCertificate = new AliCloud.Index.CloudFirewallTlsInspectCaCertificate("default");
        /// 
        ///     var @default = AliCloud.CloudFirewall.GetTlsInspectCaCertificates.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultCloudFirewallTlsInspectCaCertificate.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudCloudFirewallTlsInspectCaCertificateExampleId"] = @default.Apply(@default =&gt; @default.Apply(getTlsInspectCaCertificatesResult =&gt; getTlsInspectCaCertificatesResult.Certificates[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetTlsInspectCaCertificatesResult> Invoke(GetTlsInspectCaCertificatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTlsInspectCaCertificatesResult>("alicloud:cloudfirewall/getTlsInspectCaCertificates:getTlsInspectCaCertificates", args ?? new GetTlsInspectCaCertificatesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Cloud Firewall Tls Inspect Ca Certificate available to the user.[What is Tls Inspect Ca Certificate](https://next.api.alibabacloud.com/document/Cloudfw/2017-12-07/GetTlsInspectCertificateDownloadUrl)
        /// 
        /// &gt; **NOTE:** Available since v1.262.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultCloudFirewallTlsInspectCaCertificate = new AliCloud.Index.CloudFirewallTlsInspectCaCertificate("default");
        /// 
        ///     var @default = AliCloud.CloudFirewall.GetTlsInspectCaCertificates.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultCloudFirewallTlsInspectCaCertificate.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudCloudFirewallTlsInspectCaCertificateExampleId"] = @default.Apply(@default =&gt; @default.Apply(getTlsInspectCaCertificatesResult =&gt; getTlsInspectCaCertificatesResult.Certificates[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetTlsInspectCaCertificatesResult> Invoke(GetTlsInspectCaCertificatesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTlsInspectCaCertificatesResult>("alicloud:cloudfirewall/getTlsInspectCaCertificates:getTlsInspectCaCertificates", args ?? new GetTlsInspectCaCertificatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTlsInspectCaCertificatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// CA certificate ID
        /// </summary>
        [Input("caCertId")]
        public string? CaCertId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Tls Inspect Ca Certificate IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Current page number.
        /// </summary>
        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        /// <summary>
        /// Number of records per page.
        /// </summary>
        [Input("pageSize")]
        public int? PageSize { get; set; }

        public GetTlsInspectCaCertificatesArgs()
        {
        }
        public static new GetTlsInspectCaCertificatesArgs Empty => new GetTlsInspectCaCertificatesArgs();
    }

    public sealed class GetTlsInspectCaCertificatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// CA certificate ID
        /// </summary>
        [Input("caCertId")]
        public Input<string>? CaCertId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Tls Inspect Ca Certificate IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Current page number.
        /// </summary>
        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        /// <summary>
        /// Number of records per page.
        /// </summary>
        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        public GetTlsInspectCaCertificatesInvokeArgs()
        {
        }
        public static new GetTlsInspectCaCertificatesInvokeArgs Empty => new GetTlsInspectCaCertificatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTlsInspectCaCertificatesResult
    {
        /// <summary>
        /// CA certificate ID
        /// </summary>
        public readonly string? CaCertId;
        /// <summary>
        /// A list of Tls Inspect Ca Certificate Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTlsInspectCaCertificatesCertificateResult> Certificates;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Tls Inspect Ca Certificate IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;

        [OutputConstructor]
        private GetTlsInspectCaCertificatesResult(
            string? caCertId,

            ImmutableArray<Outputs.GetTlsInspectCaCertificatesCertificateResult> certificates,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            int? pageNumber,

            int? pageSize)
        {
            CaCertId = caCertId;
            Certificates = certificates;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
        }
    }
}
