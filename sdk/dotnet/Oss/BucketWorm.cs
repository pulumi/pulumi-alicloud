// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Oss
{
    /// <summary>
    /// ## Import
    /// 
    /// OSS Bucket Worm can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:oss/bucketWorm:BucketWorm example &lt;bucket&gt;:&lt;worm_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:oss/bucketWorm:BucketWorm")]
    public partial class BucketWorm : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The specified number of days to retain the Object.
        /// </summary>
        [Output("retentionPeriodInDays")]
        public Output<int?> RetentionPeriodInDays { get; private set; } = null!;

        /// <summary>
        /// The status of the compliance retention policy. Optional values:
        /// - `InProgress`: After a compliance retention policy is created, the policy is in the InProgress status by default, and the validity period of this status is 24 hours.
        /// - `Locked`: The compliance retention policy is Locked.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The ID of the retention policy.
        /// </summary>
        [Output("wormId")]
        public Output<string> WormId { get; private set; } = null!;


        /// <summary>
        /// Create a BucketWorm resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketWorm(string name, BucketWormArgs args, CustomResourceOptions? options = null)
            : base("alicloud:oss/bucketWorm:BucketWorm", name, args ?? new BucketWormArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketWorm(string name, Input<string> id, BucketWormState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:oss/bucketWorm:BucketWorm", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketWorm resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketWorm Get(string name, Input<string> id, BucketWormState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketWorm(name, id, state, options);
        }
    }

    public sealed class BucketWormArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The specified number of days to retain the Object.
        /// </summary>
        [Input("retentionPeriodInDays")]
        public Input<int>? RetentionPeriodInDays { get; set; }

        /// <summary>
        /// The status of the compliance retention policy. Optional values:
        /// - `InProgress`: After a compliance retention policy is created, the policy is in the InProgress status by default, and the validity period of this status is 24 hours.
        /// - `Locked`: The compliance retention policy is Locked.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public BucketWormArgs()
        {
        }
        public static new BucketWormArgs Empty => new BucketWormArgs();
    }

    public sealed class BucketWormState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The specified number of days to retain the Object.
        /// </summary>
        [Input("retentionPeriodInDays")]
        public Input<int>? RetentionPeriodInDays { get; set; }

        /// <summary>
        /// The status of the compliance retention policy. Optional values:
        /// - `InProgress`: After a compliance retention policy is created, the policy is in the InProgress status by default, and the validity period of this status is 24 hours.
        /// - `Locked`: The compliance retention policy is Locked.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The ID of the retention policy.
        /// </summary>
        [Input("wormId")]
        public Input<string>? WormId { get; set; }

        public BucketWormState()
        {
        }
        public static new BucketWormState Empty => new BucketWormState();
    }
}
