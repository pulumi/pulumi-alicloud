// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen
{
    public static class GetTransitRouterRouteTablePropagations
    {
        /// <summary>
        /// This data source provides the CEN Transit Router Route Table Propagations of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.126.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
        ///     {
        ///         NameRegex = "^preserved-NODELETING",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 1,
        ///         Max = 2999,
        ///     });
        /// 
        ///     var defaultInstance = new AliCloud.Cen.Instance("default", new()
        ///     {
        ///         CenInstanceName = name,
        ///         ProtectionLevel = "REDUCED",
        ///     });
        /// 
        ///     var defaultTransitRouter = new AliCloud.Cen.TransitRouter("default", new()
        ///     {
        ///         CenId = defaultInstance.Id,
        ///     });
        /// 
        ///     var defaultVirtualBorderRouter = new AliCloud.ExpressConnect.VirtualBorderRouter("default", new()
        ///     {
        ///         LocalGatewayIp = "10.0.0.1",
        ///         PeerGatewayIp = "10.0.0.2",
        ///         PeeringSubnetMask = "255.255.255.252",
        ///         PhysicalConnectionId = @default.Apply(@default =&gt; @default.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Connections[0]?.Id)),
        ///         VirtualBorderRouterName = name,
        ///         VlanId = defaultInteger.Id,
        ///         MinRxInterval = 1000,
        ///         MinTxInterval = 1000,
        ///         DetectMultiplier = 10,
        ///     });
        /// 
        ///     var defaultTransitRouterVbrAttachment = new AliCloud.Cen.TransitRouterVbrAttachment("default", new()
        ///     {
        ///         CenId = defaultInstance.Id,
        ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
        ///         VbrId = defaultVirtualBorderRouter.Id,
        ///         AutoPublishRouteEnabled = true,
        ///         TransitRouterAttachmentName = name,
        ///         TransitRouterAttachmentDescription = name,
        ///     });
        /// 
        ///     var defaultTransitRouterRouteTable = new AliCloud.Cen.TransitRouterRouteTable("default", new()
        ///     {
        ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
        ///         TransitRouterRouteTableName = name,
        ///     });
        /// 
        ///     var defaultTransitRouterRouteTablePropagation = new AliCloud.Cen.TransitRouterRouteTablePropagation("default", new()
        ///     {
        ///         TransitRouterAttachmentId = defaultTransitRouterVbrAttachment.TransitRouterAttachmentId,
        ///         TransitRouterRouteTableId = defaultTransitRouterRouteTable.TransitRouterRouteTableId,
        ///     });
        /// 
        ///     var ids = AliCloud.Cen.GetTransitRouterRouteTablePropagations.Invoke(new()
        ///     {
        ///         TransitRouterRouteTableId = defaultTransitRouterRouteTablePropagation.TransitRouterRouteTableId,
        ///         Ids = new[]
        ///         {
        ///             defaultTransitRouterRouteTablePropagation.TransitRouterAttachmentId,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cenTransitRouterRouteTablePropagationId0"] = ids.Apply(getTransitRouterRouteTablePropagationsResult =&gt; getTransitRouterRouteTablePropagationsResult.Propagations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetTransitRouterRouteTablePropagationsResult> InvokeAsync(GetTransitRouterRouteTablePropagationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransitRouterRouteTablePropagationsResult>("alicloud:cen/getTransitRouterRouteTablePropagations:getTransitRouterRouteTablePropagations", args ?? new GetTransitRouterRouteTablePropagationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the CEN Transit Router Route Table Propagations of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.126.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
        ///     {
        ///         NameRegex = "^preserved-NODELETING",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 1,
        ///         Max = 2999,
        ///     });
        /// 
        ///     var defaultInstance = new AliCloud.Cen.Instance("default", new()
        ///     {
        ///         CenInstanceName = name,
        ///         ProtectionLevel = "REDUCED",
        ///     });
        /// 
        ///     var defaultTransitRouter = new AliCloud.Cen.TransitRouter("default", new()
        ///     {
        ///         CenId = defaultInstance.Id,
        ///     });
        /// 
        ///     var defaultVirtualBorderRouter = new AliCloud.ExpressConnect.VirtualBorderRouter("default", new()
        ///     {
        ///         LocalGatewayIp = "10.0.0.1",
        ///         PeerGatewayIp = "10.0.0.2",
        ///         PeeringSubnetMask = "255.255.255.252",
        ///         PhysicalConnectionId = @default.Apply(@default =&gt; @default.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Connections[0]?.Id)),
        ///         VirtualBorderRouterName = name,
        ///         VlanId = defaultInteger.Id,
        ///         MinRxInterval = 1000,
        ///         MinTxInterval = 1000,
        ///         DetectMultiplier = 10,
        ///     });
        /// 
        ///     var defaultTransitRouterVbrAttachment = new AliCloud.Cen.TransitRouterVbrAttachment("default", new()
        ///     {
        ///         CenId = defaultInstance.Id,
        ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
        ///         VbrId = defaultVirtualBorderRouter.Id,
        ///         AutoPublishRouteEnabled = true,
        ///         TransitRouterAttachmentName = name,
        ///         TransitRouterAttachmentDescription = name,
        ///     });
        /// 
        ///     var defaultTransitRouterRouteTable = new AliCloud.Cen.TransitRouterRouteTable("default", new()
        ///     {
        ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
        ///         TransitRouterRouteTableName = name,
        ///     });
        /// 
        ///     var defaultTransitRouterRouteTablePropagation = new AliCloud.Cen.TransitRouterRouteTablePropagation("default", new()
        ///     {
        ///         TransitRouterAttachmentId = defaultTransitRouterVbrAttachment.TransitRouterAttachmentId,
        ///         TransitRouterRouteTableId = defaultTransitRouterRouteTable.TransitRouterRouteTableId,
        ///     });
        /// 
        ///     var ids = AliCloud.Cen.GetTransitRouterRouteTablePropagations.Invoke(new()
        ///     {
        ///         TransitRouterRouteTableId = defaultTransitRouterRouteTablePropagation.TransitRouterRouteTableId,
        ///         Ids = new[]
        ///         {
        ///             defaultTransitRouterRouteTablePropagation.TransitRouterAttachmentId,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cenTransitRouterRouteTablePropagationId0"] = ids.Apply(getTransitRouterRouteTablePropagationsResult =&gt; getTransitRouterRouteTablePropagationsResult.Propagations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransitRouterRouteTablePropagationsResult> Invoke(GetTransitRouterRouteTablePropagationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitRouterRouteTablePropagationsResult>("alicloud:cen/getTransitRouterRouteTablePropagations:getTransitRouterRouteTablePropagations", args ?? new GetTransitRouterRouteTablePropagationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the CEN Transit Router Route Table Propagations of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.126.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
        ///     {
        ///         NameRegex = "^preserved-NODELETING",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 1,
        ///         Max = 2999,
        ///     });
        /// 
        ///     var defaultInstance = new AliCloud.Cen.Instance("default", new()
        ///     {
        ///         CenInstanceName = name,
        ///         ProtectionLevel = "REDUCED",
        ///     });
        /// 
        ///     var defaultTransitRouter = new AliCloud.Cen.TransitRouter("default", new()
        ///     {
        ///         CenId = defaultInstance.Id,
        ///     });
        /// 
        ///     var defaultVirtualBorderRouter = new AliCloud.ExpressConnect.VirtualBorderRouter("default", new()
        ///     {
        ///         LocalGatewayIp = "10.0.0.1",
        ///         PeerGatewayIp = "10.0.0.2",
        ///         PeeringSubnetMask = "255.255.255.252",
        ///         PhysicalConnectionId = @default.Apply(@default =&gt; @default.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Connections[0]?.Id)),
        ///         VirtualBorderRouterName = name,
        ///         VlanId = defaultInteger.Id,
        ///         MinRxInterval = 1000,
        ///         MinTxInterval = 1000,
        ///         DetectMultiplier = 10,
        ///     });
        /// 
        ///     var defaultTransitRouterVbrAttachment = new AliCloud.Cen.TransitRouterVbrAttachment("default", new()
        ///     {
        ///         CenId = defaultInstance.Id,
        ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
        ///         VbrId = defaultVirtualBorderRouter.Id,
        ///         AutoPublishRouteEnabled = true,
        ///         TransitRouterAttachmentName = name,
        ///         TransitRouterAttachmentDescription = name,
        ///     });
        /// 
        ///     var defaultTransitRouterRouteTable = new AliCloud.Cen.TransitRouterRouteTable("default", new()
        ///     {
        ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
        ///         TransitRouterRouteTableName = name,
        ///     });
        /// 
        ///     var defaultTransitRouterRouteTablePropagation = new AliCloud.Cen.TransitRouterRouteTablePropagation("default", new()
        ///     {
        ///         TransitRouterAttachmentId = defaultTransitRouterVbrAttachment.TransitRouterAttachmentId,
        ///         TransitRouterRouteTableId = defaultTransitRouterRouteTable.TransitRouterRouteTableId,
        ///     });
        /// 
        ///     var ids = AliCloud.Cen.GetTransitRouterRouteTablePropagations.Invoke(new()
        ///     {
        ///         TransitRouterRouteTableId = defaultTransitRouterRouteTablePropagation.TransitRouterRouteTableId,
        ///         Ids = new[]
        ///         {
        ///             defaultTransitRouterRouteTablePropagation.TransitRouterAttachmentId,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cenTransitRouterRouteTablePropagationId0"] = ids.Apply(getTransitRouterRouteTablePropagationsResult =&gt; getTransitRouterRouteTablePropagationsResult.Propagations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransitRouterRouteTablePropagationsResult> Invoke(GetTransitRouterRouteTablePropagationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitRouterRouteTablePropagationsResult>("alicloud:cen/getTransitRouterRouteTablePropagations:getTransitRouterRouteTablePropagations", args ?? new GetTransitRouterRouteTablePropagationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitRouterRouteTablePropagationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Transit Router Route Table Propagation IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of the route learning correlation. Valid values: `Active`, `Enabling`, `Disabling`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// The ID of the network instance connection.
        /// </summary>
        [Input("transitRouterAttachmentId")]
        public string? TransitRouterAttachmentId { get; set; }

        /// <summary>
        /// The ID of the route table of the Enterprise Edition transit router.
        /// </summary>
        [Input("transitRouterRouteTableId", required: true)]
        public string TransitRouterRouteTableId { get; set; } = null!;

        public GetTransitRouterRouteTablePropagationsArgs()
        {
        }
        public static new GetTransitRouterRouteTablePropagationsArgs Empty => new GetTransitRouterRouteTablePropagationsArgs();
    }

    public sealed class GetTransitRouterRouteTablePropagationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Transit Router Route Table Propagation IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of the route learning correlation. Valid values: `Active`, `Enabling`, `Disabling`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The ID of the network instance connection.
        /// </summary>
        [Input("transitRouterAttachmentId")]
        public Input<string>? TransitRouterAttachmentId { get; set; }

        /// <summary>
        /// The ID of the route table of the Enterprise Edition transit router.
        /// </summary>
        [Input("transitRouterRouteTableId", required: true)]
        public Input<string> TransitRouterRouteTableId { get; set; } = null!;

        public GetTransitRouterRouteTablePropagationsInvokeArgs()
        {
        }
        public static new GetTransitRouterRouteTablePropagationsInvokeArgs Empty => new GetTransitRouterRouteTablePropagationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransitRouterRouteTablePropagationsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of Transit Router Route Table Propagations. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransitRouterRouteTablePropagationsPropagationResult> Propagations;
        /// <summary>
        /// The status of the route learning correlation.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The ID of the network instance connection.
        /// </summary>
        public readonly string? TransitRouterAttachmentId;
        /// <summary>
        /// The ID of the route table of the Enterprise Edition transit router.
        /// </summary>
        public readonly string TransitRouterRouteTableId;

        [OutputConstructor]
        private GetTransitRouterRouteTablePropagationsResult(
            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            ImmutableArray<Outputs.GetTransitRouterRouteTablePropagationsPropagationResult> propagations,

            string? status,

            string? transitRouterAttachmentId,

            string transitRouterRouteTableId)
        {
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            Propagations = propagations;
            Status = status;
            TransitRouterAttachmentId = transitRouterAttachmentId;
            TransitRouterRouteTableId = transitRouterRouteTableId;
        }
    }
}
