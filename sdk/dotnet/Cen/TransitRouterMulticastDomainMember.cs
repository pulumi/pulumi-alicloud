// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen
{
    /// <summary>
    /// Provides a Cen Transit Router Multicast Domain Member resource.
    /// 
    /// For information about Cen Transit Router Multicast Domain Member and how to use it, see [What is Transit Router Multicast Domain Member](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/api-doc-cbn-2017-09-12-api-doc-registertransitroutermulticastgroupmembers).
    /// 
    /// &gt; **NOTE:** Available in v1.195.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new AliCloud.Cen.TransitRouterMulticastDomainMember("default", new()
    ///     {
    ///         GroupIpAddress = "239.1.1.1",
    ///         NetworkInterfaceId = "eni-d7o632ny4ryst9ydmt93",
    ///         TransitRouterMulticastDomainId = "tr-mcast-domain-2d9oq455uk533zfr29",
    ///         VpcId = "vpc-d7oapc6waducz2ytvg6b6",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cen Transit Router Multicast Domain Member can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:cen/transitRouterMulticastDomainMember:TransitRouterMulticastDomainMember example &lt;transit_router_multicast_domain_id&gt;:&lt;group_ip_address&gt;:&lt;network_interface_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cen/transitRouterMulticastDomainMember:TransitRouterMulticastDomainMember")]
    public partial class TransitRouterMulticastDomainMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether only to precheck the request.
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
        /// </summary>
        [Output("groupIpAddress")]
        public Output<string> GroupIpAddress { get; private set; } = null!;

        /// <summary>
        /// The ID of the ENI.
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The ID of the multicast domain to which the multicast member belongs.
        /// </summary>
        [Output("transitRouterMulticastDomainId")]
        public Output<string> TransitRouterMulticastDomainId { get; private set; } = null!;

        /// <summary>
        /// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
        /// </summary>
        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a TransitRouterMulticastDomainMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitRouterMulticastDomainMember(string name, TransitRouterMulticastDomainMemberArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cen/transitRouterMulticastDomainMember:TransitRouterMulticastDomainMember", name, args ?? new TransitRouterMulticastDomainMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitRouterMulticastDomainMember(string name, Input<string> id, TransitRouterMulticastDomainMemberState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cen/transitRouterMulticastDomainMember:TransitRouterMulticastDomainMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitRouterMulticastDomainMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitRouterMulticastDomainMember Get(string name, Input<string> id, TransitRouterMulticastDomainMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitRouterMulticastDomainMember(name, id, state, options);
        }
    }

    public sealed class TransitRouterMulticastDomainMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether only to precheck the request.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
        /// </summary>
        [Input("groupIpAddress", required: true)]
        public Input<string> GroupIpAddress { get; set; } = null!;

        /// <summary>
        /// The ID of the ENI.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public Input<string> NetworkInterfaceId { get; set; } = null!;

        /// <summary>
        /// The ID of the multicast domain to which the multicast member belongs.
        /// </summary>
        [Input("transitRouterMulticastDomainId", required: true)]
        public Input<string> TransitRouterMulticastDomainId { get; set; } = null!;

        /// <summary>
        /// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public TransitRouterMulticastDomainMemberArgs()
        {
        }
        public static new TransitRouterMulticastDomainMemberArgs Empty => new TransitRouterMulticastDomainMemberArgs();
    }

    public sealed class TransitRouterMulticastDomainMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether only to precheck the request.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
        /// </summary>
        [Input("groupIpAddress")]
        public Input<string>? GroupIpAddress { get; set; }

        /// <summary>
        /// The ID of the ENI.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The ID of the multicast domain to which the multicast member belongs.
        /// </summary>
        [Input("transitRouterMulticastDomainId")]
        public Input<string>? TransitRouterMulticastDomainId { get; set; }

        /// <summary>
        /// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public TransitRouterMulticastDomainMemberState()
        {
        }
        public static new TransitRouterMulticastDomainMemberState Empty => new TransitRouterMulticastDomainMemberState();
    }
}
