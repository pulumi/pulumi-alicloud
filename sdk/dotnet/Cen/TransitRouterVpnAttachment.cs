// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen
{
    /// <summary>
    /// Provides a Cloud Enterprise Network (CEN) Transit Router Vpn Attachment resource.
    /// 
    /// For information about Cloud Enterprise Network (CEN) Transit Router Vpn Attachment and how to use it, see [What is Transit Router Vpn Attachment](https://www.alibabacloud.com/help/en/cen/developer-reference/api-cbn-2017-09-12-createtransitroutervpnattachment).
    /// 
    /// &gt; **NOTE:** Available since v1.183.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var @default = AliCloud.Cen.GetTransitRouterAvailableResources.Invoke();
    /// 
    ///     var example = new AliCloud.Cen.Instance("example", new()
    ///     {
    ///         CenInstanceName = name,
    ///     });
    /// 
    ///     var exampleTransitRouter = new AliCloud.Cen.TransitRouter("example", new()
    ///     {
    ///         CenId = example.Id,
    ///         TransitRouterDescription = name,
    ///         TransitRouterName = name,
    ///     });
    /// 
    ///     var exampleCustomerGateway = new AliCloud.Vpn.CustomerGateway("example", new()
    ///     {
    ///         CustomerGatewayName = name,
    ///         IpAddress = "42.104.22.210",
    ///         Asn = "45014",
    ///         Description = name,
    ///     });
    /// 
    ///     var exampleGatewayVpnAttachment = new AliCloud.Vpn.GatewayVpnAttachment("example", new()
    ///     {
    ///         CustomerGatewayId = exampleCustomerGateway.Id,
    ///         NetworkType = "public",
    ///         LocalSubnet = "0.0.0.0/0",
    ///         RemoteSubnet = "0.0.0.0/0",
    ///         EffectImmediately = false,
    ///         IkeConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentIkeConfigArgs
    ///         {
    ///             IkeAuthAlg = "md5",
    ///             IkeEncAlg = "des",
    ///             IkeVersion = "ikev2",
    ///             IkeMode = "main",
    ///             IkeLifetime = 86400,
    ///             Psk = "tf-examplevpn2",
    ///             IkePfs = "group1",
    ///             RemoteId = "examplebob2",
    ///             LocalId = "examplealice2",
    ///         },
    ///         IpsecConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentIpsecConfigArgs
    ///         {
    ///             IpsecPfs = "group5",
    ///             IpsecEncAlg = "des",
    ///             IpsecAuthAlg = "md5",
    ///             IpsecLifetime = 86400,
    ///         },
    ///         BgpConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentBgpConfigArgs
    ///         {
    ///             Enable = true,
    ///             LocalAsn = 45014,
    ///             TunnelCidr = "169.254.11.0/30",
    ///             LocalBgpIp = "169.254.11.1",
    ///         },
    ///         HealthCheckConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentHealthCheckConfigArgs
    ///         {
    ///             Enable = true,
    ///             Sip = "192.168.1.1",
    ///             Dip = "10.0.0.1",
    ///             Interval = 10,
    ///             Retry = 10,
    ///             Policy = "revoke_route",
    ///         },
    ///         EnableDpd = true,
    ///         EnableNatTraversal = true,
    ///         VpnAttachmentName = name,
    ///     });
    /// 
    ///     var exampleTransitRouterCidr = new AliCloud.Cen.TransitRouterCidr("example", new()
    ///     {
    ///         TransitRouterId = exampleTransitRouter.TransitRouterId,
    ///         Cidr = "192.168.0.0/16",
    ///         TransitRouterCidrName = name,
    ///         Description = name,
    ///         PublishCidrRoute = true,
    ///     });
    /// 
    ///     var exampleTransitRouterVpnAttachment = new AliCloud.Cen.TransitRouterVpnAttachment("example", new()
    ///     {
    ///         AutoPublishRouteEnabled = false,
    ///         TransitRouterAttachmentDescription = name,
    ///         TransitRouterAttachmentName = name,
    ///         CenId = exampleTransitRouter.CenId,
    ///         TransitRouterId = exampleTransitRouterCidr.TransitRouterId,
    ///         VpnId = exampleGatewayVpnAttachment.Id,
    ///         Zones = new[]
    ///         {
    ///             new AliCloud.Cen.Inputs.TransitRouterVpnAttachmentZoneArgs
    ///             {
    ///                 ZoneId = @default.Apply(@default =&gt; @default.Apply(getTransitRouterAvailableResourcesResult =&gt; getTransitRouterAvailableResourcesResult.Resources[0]?.MasterZones[0])),
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Dual Tunnel Mode Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var @default = AliCloud.GetAccount.Invoke();
    /// 
    ///     var defaultbpR5Uk = new AliCloud.Cen.Instance("defaultbpR5Uk", new()
    ///     {
    ///         CenInstanceName = "example-vpn-attachment",
    ///     });
    /// 
    ///     var defaultM8Zo6H = new AliCloud.Cen.TransitRouter("defaultM8Zo6H", new()
    ///     {
    ///         CenId = defaultbpR5Uk.Id,
    ///     });
    /// 
    ///     var defaultuUtyCv = new AliCloud.Cen.TransitRouterCidr("defaultuUtyCv", new()
    ///     {
    ///         Cidr = "192.168.10.0/24",
    ///         TransitRouterId = defaultM8Zo6H.TransitRouterId,
    ///     });
    /// 
    ///     var defaultMeoCIz = new AliCloud.Vpn.CustomerGateway("defaultMeoCIz", new()
    ///     {
    ///         IpAddress = "0.0.0.0",
    ///         CustomerGatewayName = "example-vpn-attachment",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             defaultuUtyCv,
    ///         },
    ///     });
    /// 
    ///     var defaultGetTransitRouterService = AliCloud.Cen.GetTransitRouterService.Invoke(new()
    ///     {
    ///         Enable = "On",
    ///     });
    /// 
    ///     var defaultvrPzdh = new AliCloud.Vpn.GatewayVpnAttachment("defaultvrPzdh", new()
    ///     {
    ///         NetworkType = "public",
    ///         LocalSubnet = "0.0.0.0/0",
    ///         EnableTunnelsBgp = false,
    ///         VpnAttachmentName = name,
    ///         TunnelOptionsSpecifications = new[]
    ///         {
    ///             new AliCloud.Vpn.Inputs.GatewayVpnAttachmentTunnelOptionsSpecificationArgs
    ///             {
    ///                 CustomerGatewayId = defaultMeoCIz.Id,
    ///                 EnableDpd = true,
    ///                 EnableNatTraversal = true,
    ///                 TunnelIndex = 1,
    ///                 TunnelIkeConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs
    ///                 {
    ///                     RemoteId = "2.2.2.2",
    ///                     IkeEncAlg = "aes",
    ///                     IkeMode = "main",
    ///                     IkeVersion = "ikev1",
    ///                     LocalId = "1.1.1.1",
    ///                     IkeAuthAlg = "md5",
    ///                     IkeLifetime = 86100,
    ///                     IkePfs = "group2",
    ///                     Psk = "12345678",
    ///                 },
    ///                 TunnelIpsecConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs
    ///                 {
    ///                     IpsecAuthAlg = "md5",
    ///                     IpsecEncAlg = "aes",
    ///                     IpsecLifetime = 86200,
    ///                     IpsecPfs = "group5",
    ///                 },
    ///             },
    ///             new AliCloud.Vpn.Inputs.GatewayVpnAttachmentTunnelOptionsSpecificationArgs
    ///             {
    ///                 EnableNatTraversal = true,
    ///                 TunnelIndex = 2,
    ///                 TunnelIkeConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs
    ///                 {
    ///                     LocalId = "4.4.4.4",
    ///                     RemoteId = "5.5.5.5",
    ///                     IkeLifetime = 86400,
    ///                     IkePfs = "group5",
    ///                     IkeMode = "main",
    ///                     IkeVersion = "ikev2",
    ///                     Psk = "32333442",
    ///                     IkeAuthAlg = "md5",
    ///                     IkeEncAlg = "aes",
    ///                 },
    ///                 TunnelIpsecConfig = new AliCloud.Vpn.Inputs.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs
    ///                 {
    ///                     IpsecEncAlg = "aes",
    ///                     IpsecLifetime = 86400,
    ///                     IpsecPfs = "group5",
    ///                     IpsecAuthAlg = "sha256",
    ///                 },
    ///                 CustomerGatewayId = defaultMeoCIz.Id,
    ///                 EnableDpd = true,
    ///             },
    ///         },
    ///         RemoteSubnet = "0.0.0.0/0",
    ///     });
    /// 
    ///     var defaultTransitRouterVpnAttachment = new AliCloud.Cen.TransitRouterVpnAttachment("default", new()
    ///     {
    ///         TransitRouterId = defaultM8Zo6H.TransitRouterId,
    ///         VpnId = defaultvrPzdh.Id,
    ///         AutoPublishRouteEnabled = false,
    ///         ChargeType = "POSTPAY",
    ///         TransitRouterAttachmentName = "example-vpn-attachment",
    ///         VpnOwnerId = @default.Apply(@default =&gt; @default.Apply(getAccountResult =&gt; getAccountResult.Id)),
    ///         CenId = defaultM8Zo6H.CenId,
    ///         TransitRouterAttachmentDescription = "example-vpn-attachment",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Enterprise Network (CEN) Transit Router Vpn Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment")]
    public partial class TransitRouterVpnAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
        /// </summary>
        [Output("autoPublishRouteEnabled")]
        public Output<bool?> AutoPublishRouteEnabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the Cloud Enterprise Network (CEN) instance.
        /// </summary>
        [Output("cenId")]
        public Output<string> CenId { get; private set; } = null!;

        /// <summary>
        /// The billing method.
        /// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
        /// </summary>
        [Output("chargeType")]
        public Output<string> ChargeType { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the region where the transit router is deployed.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// Status
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The new description of the VPN attachment.
        /// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
        /// </summary>
        [Output("transitRouterAttachmentDescription")]
        public Output<string?> TransitRouterAttachmentDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the VPN attachment.
        /// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
        /// </summary>
        [Output("transitRouterAttachmentName")]
        public Output<string?> TransitRouterAttachmentName { get; private set; } = null!;

        /// <summary>
        /// The ID of the transit router.
        /// </summary>
        [Output("transitRouterId")]
        public Output<string?> TransitRouterId { get; private set; } = null!;

        /// <summary>
        /// The ID of the IPsec-VPN attachment.
        /// </summary>
        [Output("vpnId")]
        public Output<string> VpnId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
        /// 
        /// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
        /// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
        /// </summary>
        [Output("vpnOwnerId")]
        public Output<string> VpnOwnerId { get; private set; } = null!;

        /// <summary>
        /// The Zone ID in the current region.
        /// System will create resources under the Zone that you specify.
        /// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<Outputs.TransitRouterVpnAttachmentZone>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a TransitRouterVpnAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitRouterVpnAttachment(string name, TransitRouterVpnAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment", name, args ?? new TransitRouterVpnAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitRouterVpnAttachment(string name, Input<string> id, TransitRouterVpnAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitRouterVpnAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitRouterVpnAttachment Get(string name, Input<string> id, TransitRouterVpnAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitRouterVpnAttachment(name, id, state, options);
        }
    }

    public sealed class TransitRouterVpnAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
        /// </summary>
        [Input("autoPublishRouteEnabled")]
        public Input<bool>? AutoPublishRouteEnabled { get; set; }

        /// <summary>
        /// The ID of the Cloud Enterprise Network (CEN) instance.
        /// </summary>
        [Input("cenId")]
        public Input<string>? CenId { get; set; }

        /// <summary>
        /// The billing method.
        /// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The new description of the VPN attachment.
        /// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
        /// </summary>
        [Input("transitRouterAttachmentDescription")]
        public Input<string>? TransitRouterAttachmentDescription { get; set; }

        /// <summary>
        /// The name of the VPN attachment.
        /// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
        /// </summary>
        [Input("transitRouterAttachmentName")]
        public Input<string>? TransitRouterAttachmentName { get; set; }

        /// <summary>
        /// The ID of the transit router.
        /// </summary>
        [Input("transitRouterId")]
        public Input<string>? TransitRouterId { get; set; }

        /// <summary>
        /// The ID of the IPsec-VPN attachment.
        /// </summary>
        [Input("vpnId", required: true)]
        public Input<string> VpnId { get; set; } = null!;

        /// <summary>
        /// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
        /// 
        /// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
        /// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
        /// </summary>
        [Input("vpnOwnerId")]
        public Input<string>? VpnOwnerId { get; set; }

        [Input("zones")]
        private InputList<Inputs.TransitRouterVpnAttachmentZoneArgs>? _zones;

        /// <summary>
        /// The Zone ID in the current region.
        /// System will create resources under the Zone that you specify.
        /// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
        /// </summary>
        public InputList<Inputs.TransitRouterVpnAttachmentZoneArgs> Zones
        {
            get => _zones ?? (_zones = new InputList<Inputs.TransitRouterVpnAttachmentZoneArgs>());
            set => _zones = value;
        }

        public TransitRouterVpnAttachmentArgs()
        {
        }
        public static new TransitRouterVpnAttachmentArgs Empty => new TransitRouterVpnAttachmentArgs();
    }

    public sealed class TransitRouterVpnAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
        /// </summary>
        [Input("autoPublishRouteEnabled")]
        public Input<bool>? AutoPublishRouteEnabled { get; set; }

        /// <summary>
        /// The ID of the Cloud Enterprise Network (CEN) instance.
        /// </summary>
        [Input("cenId")]
        public Input<string>? CenId { get; set; }

        /// <summary>
        /// The billing method.
        /// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the region where the transit router is deployed.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// Status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The new description of the VPN attachment.
        /// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
        /// </summary>
        [Input("transitRouterAttachmentDescription")]
        public Input<string>? TransitRouterAttachmentDescription { get; set; }

        /// <summary>
        /// The name of the VPN attachment.
        /// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
        /// </summary>
        [Input("transitRouterAttachmentName")]
        public Input<string>? TransitRouterAttachmentName { get; set; }

        /// <summary>
        /// The ID of the transit router.
        /// </summary>
        [Input("transitRouterId")]
        public Input<string>? TransitRouterId { get; set; }

        /// <summary>
        /// The ID of the IPsec-VPN attachment.
        /// </summary>
        [Input("vpnId")]
        public Input<string>? VpnId { get; set; }

        /// <summary>
        /// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
        /// 
        /// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
        /// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
        /// </summary>
        [Input("vpnOwnerId")]
        public Input<string>? VpnOwnerId { get; set; }

        [Input("zones")]
        private InputList<Inputs.TransitRouterVpnAttachmentZoneGetArgs>? _zones;

        /// <summary>
        /// The Zone ID in the current region.
        /// System will create resources under the Zone that you specify.
        /// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
        /// </summary>
        public InputList<Inputs.TransitRouterVpnAttachmentZoneGetArgs> Zones
        {
            get => _zones ?? (_zones = new InputList<Inputs.TransitRouterVpnAttachmentZoneGetArgs>());
            set => _zones = value;
        }

        public TransitRouterVpnAttachmentState()
        {
        }
        public static new TransitRouterVpnAttachmentState Empty => new TransitRouterVpnAttachmentState();
    }
}
