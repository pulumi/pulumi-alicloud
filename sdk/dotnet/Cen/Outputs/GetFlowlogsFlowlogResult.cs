// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen.Outputs
{

    [OutputType]
    public sealed class GetFlowlogsFlowlogResult
    {
        /// <summary>
        /// The ID of Cen instance.
        /// </summary>
        public readonly string CenId;
        /// <summary>
        /// The createTime of flowlog.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of the flowlog.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of FlowLog.
        /// </summary>
        public readonly string FlowLogId;
        /// <summary>
        /// The name of the flowlog.
        /// </summary>
        public readonly string FlowLogName;
        /// <summary>
        /// Flowlog Version.
        /// </summary>
        public readonly string FlowLogVersion;
        /// <summary>
        /// The ID of FlowLog.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The duration of the capture window for the flow log to capture traffic. Unit: seconds. Valid values: **60** or **600 * *. Default value: **600 * *.
        /// </summary>
        public readonly int Interval;
        /// <summary>
        /// (Available since v1.236.0) Log Format.
        /// </summary>
        public readonly string LogFormatString;
        /// <summary>
        /// The LogStore that stores the flowlog.
        /// </summary>
        public readonly string LogStoreName;
        /// <summary>
        /// The Project that stores the flowlog.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// (Available since v1.236.0) Total number of records.
        /// </summary>
        public readonly string RecordTotal;
        /// <summary>
        /// Region id
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The status of the flow log. Valid values:-**Active**: started.-**InActive**: not started.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The tag of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// (Available since v1.236.0) Cross-region Connection ID or VBR connection ID.&gt; This parameter is required.
        /// </summary>
        public readonly string TransitRouterAttachmentId;
        /// <summary>
        /// Transit Router ID
        /// </summary>
        public readonly string TransitRouterId;

        [OutputConstructor]
        private GetFlowlogsFlowlogResult(
            string cenId,

            string createTime,

            string description,

            string flowLogId,

            string flowLogName,

            string flowLogVersion,

            string id,

            int interval,

            string logFormatString,

            string logStoreName,

            string projectName,

            string recordTotal,

            string regionId,

            string status,

            ImmutableDictionary<string, string> tags,

            string transitRouterAttachmentId,

            string transitRouterId)
        {
            CenId = cenId;
            CreateTime = createTime;
            Description = description;
            FlowLogId = flowLogId;
            FlowLogName = flowLogName;
            FlowLogVersion = flowLogVersion;
            Id = id;
            Interval = interval;
            LogFormatString = logFormatString;
            LogStoreName = logStoreName;
            ProjectName = projectName;
            RecordTotal = recordTotal;
            RegionId = regionId;
            Status = status;
            Tags = tags;
            TransitRouterAttachmentId = transitRouterAttachmentId;
            TransitRouterId = transitRouterId;
        }
    }
}
