// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen.Outputs
{

    [OutputType]
    public sealed class GetTransitRouterMulticastDomainMembersMemberResult
    {
        /// <summary>
        /// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
        /// </summary>
        public readonly string GroupIpAddress;
        /// <summary>
        /// The `key` of the resource supplied above.The value is formulated as `&lt;transit_router_multicast_domain_id&gt;:&lt;group_ip_address&gt;:&lt;network_interface_id&gt;`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the ENI.
        /// </summary>
        public readonly string NetworkInterfaceId;
        /// <summary>
        /// The status of the resource
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The ID of the multicast domain to which the multicast member belongs.
        /// </summary>
        public readonly string TransitRouterMulticastDomainId;
        /// <summary>
        /// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetTransitRouterMulticastDomainMembersMemberResult(
            string groupIpAddress,

            string id,

            string networkInterfaceId,

            string status,

            string transitRouterMulticastDomainId,

            string vpcId)
        {
            GroupIpAddress = groupIpAddress;
            Id = id;
            NetworkInterfaceId = networkInterfaceId;
            Status = status;
            TransitRouterMulticastDomainId = transitRouterMulticastDomainId;
            VpcId = vpcId;
        }
    }
}
