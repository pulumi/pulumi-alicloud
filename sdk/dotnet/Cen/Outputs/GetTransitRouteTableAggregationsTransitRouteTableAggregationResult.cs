// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen.Outputs
{

    [OutputType]
    public sealed class GetTransitRouteTableAggregationsTransitRouteTableAggregationResult
    {
        /// <summary>
        /// The ID of the Transit Route Table Aggregation. It formats as `&lt;transit_route_table_id&gt;:&lt;transit_route_table_aggregation_cidr&gt;`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The route type of the aggregate route.
        /// </summary>
        public readonly string RouteType;
        /// <summary>
        /// The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The destination CIDR block of the aggregate route.
        /// </summary>
        public readonly string TransitRouteTableAggregationCidr;
        /// <summary>
        /// The description of the aggregate route.
        /// </summary>
        public readonly string TransitRouteTableAggregationDescription;
        /// <summary>
        /// The name of the aggregate route.
        /// </summary>
        public readonly string TransitRouteTableAggregationName;
        /// <summary>
        /// The scope of networks that you want to advertise the aggregate route.
        /// </summary>
        public readonly string TransitRouteTableAggregationScope;
        /// <summary>
        /// The ID of the route table of the Enterprise Edition transit router.
        /// </summary>
        public readonly string TransitRouteTableId;

        [OutputConstructor]
        private GetTransitRouteTableAggregationsTransitRouteTableAggregationResult(
            string id,

            string routeType,

            string status,

            string transitRouteTableAggregationCidr,

            string transitRouteTableAggregationDescription,

            string transitRouteTableAggregationName,

            string transitRouteTableAggregationScope,

            string transitRouteTableId)
        {
            Id = id;
            RouteType = routeType;
            Status = status;
            TransitRouteTableAggregationCidr = transitRouteTableAggregationCidr;
            TransitRouteTableAggregationDescription = transitRouteTableAggregationDescription;
            TransitRouteTableAggregationName = transitRouteTableAggregationName;
            TransitRouteTableAggregationScope = transitRouteTableAggregationScope;
            TransitRouteTableId = transitRouteTableId;
        }
    }
}
