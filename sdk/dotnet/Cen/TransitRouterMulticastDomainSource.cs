// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen
{
    /// <summary>
    /// Provides a Cen Transit Router Multicast Domain Source resource.
    /// 
    /// For information about Cen Transit Router Multicast Domain Source and how to use it, see [What is Transit Router Multicast Domain Source](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/api-cbn-2017-09-12-registertransitroutermulticastgroupsources).
    /// 
    /// &gt; **NOTE:** Available since v1.195.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var @default = AliCloud.Cen.GetTransitRouterAvailableResources.Invoke();
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "192.168.0.0/16",
    ///     });
    /// 
    ///     var defaultMaster = new AliCloud.Vpc.Switch("default_master", new()
    ///     {
    ///         VswitchName = name,
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "192.168.1.0/24",
    ///         ZoneId = "cn-hangzhou-i",
    ///     });
    /// 
    ///     var defaultSlave = new AliCloud.Vpc.Switch("default_slave", new()
    ///     {
    ///         VswitchName = name,
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "192.168.2.0/24",
    ///         ZoneId = "cn-hangzhou-j",
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Cen.Instance("default", new()
    ///     {
    ///         CenInstanceName = name,
    ///         ProtectionLevel = "REDUCED",
    ///     });
    /// 
    ///     var defaultTransitRouter = new AliCloud.Cen.TransitRouter("default", new()
    ///     {
    ///         CenId = defaultInstance.Id,
    ///         SupportMulticast = true,
    ///     });
    /// 
    ///     var defaultTransitRouterVpcAttachment = new AliCloud.Cen.TransitRouterVpcAttachment("default", new()
    ///     {
    ///         CenId = defaultInstance.Id,
    ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
    ///         VpcId = defaultNetwork.Id,
    ///         ZoneMappings = new[]
    ///         {
    ///             new AliCloud.Cen.Inputs.TransitRouterVpcAttachmentZoneMappingArgs
    ///             {
    ///                 ZoneId = defaultMaster.ZoneId,
    ///                 VswitchId = defaultMaster.Id,
    ///             },
    ///             new AliCloud.Cen.Inputs.TransitRouterVpcAttachmentZoneMappingArgs
    ///             {
    ///                 ZoneId = defaultSlave.ZoneId,
    ///                 VswitchId = defaultSlave.Id,
    ///             },
    ///         },
    ///         TransitRouterAttachmentName = name,
    ///         TransitRouterAttachmentDescription = name,
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         Name = name,
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultGetResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
    ///     {
    ///         Status = "OK",
    ///     });
    /// 
    ///     var defaultTransitRouterMulticastDomain = new AliCloud.Cen.TransitRouterMulticastDomain("default", new()
    ///     {
    ///         TransitRouterId = defaultTransitRouter.TransitRouterId,
    ///         TransitRouterMulticastDomainName = name,
    ///         TransitRouterMulticastDomainDescription = name,
    ///     });
    /// 
    ///     var defaultEcsNetworkInterface = new AliCloud.Ecs.EcsNetworkInterface("default", new()
    ///     {
    ///         NetworkInterfaceName = name,
    ///         VswitchId = defaultMaster.Id,
    ///         SecurityGroupIds = new[]
    ///         {
    ///             defaultSecurityGroup.Id,
    ///         },
    ///         Description = "Basic test",
    ///         PrimaryIpAddress = defaultMaster.CidrBlock.Apply(cidrBlock =&gt; Std.Cidrhost.Invoke(new()
    ///         {
    ///             Input = cidrBlock,
    ///             Host = 100,
    ///         })).Apply(invoke =&gt; invoke.Result),
    ///         Tags = 
    ///         {
    ///             { "Created", "TF" },
    ///             { "For", "Test" },
    ///         },
    ///         ResourceGroupId = defaultGetResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0]),
    ///     });
    /// 
    ///     var defaultTransitRouterMulticastDomainAssociation = new AliCloud.Cen.TransitRouterMulticastDomainAssociation("default", new()
    ///     {
    ///         TransitRouterMulticastDomainId = defaultTransitRouterMulticastDomain.Id,
    ///         TransitRouterAttachmentId = defaultTransitRouterVpcAttachment.TransitRouterAttachmentId,
    ///         VswitchId = defaultMaster.Id,
    ///     });
    /// 
    ///     var example = new AliCloud.Cen.TransitRouterMulticastDomainSource("example", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         TransitRouterMulticastDomainId = defaultTransitRouterMulticastDomainAssociation.TransitRouterMulticastDomainId,
    ///         NetworkInterfaceId = defaultEcsNetworkInterface.Id,
    ///         GroupIpAddress = "239.1.1.1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cen Transit Router Multicast Domain Source can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cen/transitRouterMulticastDomainSource:TransitRouterMulticastDomainSource example &lt;transit_router_multicast_domain_id&gt;:&lt;group_ip_address&gt;:&lt;network_interface_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cen/transitRouterMulticastDomainSource:TransitRouterMulticastDomainSource")]
    public partial class TransitRouterMulticastDomainSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
        /// </summary>
        [Output("groupIpAddress")]
        public Output<string> GroupIpAddress { get; private set; } = null!;

        /// <summary>
        /// ENI ID of the multicast source.
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The ID of the multicast domain to which the multicast source belongs.
        /// </summary>
        [Output("transitRouterMulticastDomainId")]
        public Output<string> TransitRouterMulticastDomainId { get; private set; } = null!;

        /// <summary>
        /// The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a TransitRouterMulticastDomainSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitRouterMulticastDomainSource(string name, TransitRouterMulticastDomainSourceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cen/transitRouterMulticastDomainSource:TransitRouterMulticastDomainSource", name, args ?? new TransitRouterMulticastDomainSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitRouterMulticastDomainSource(string name, Input<string> id, TransitRouterMulticastDomainSourceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cen/transitRouterMulticastDomainSource:TransitRouterMulticastDomainSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitRouterMulticastDomainSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitRouterMulticastDomainSource Get(string name, Input<string> id, TransitRouterMulticastDomainSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitRouterMulticastDomainSource(name, id, state, options);
        }
    }

    public sealed class TransitRouterMulticastDomainSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
        /// </summary>
        [Input("groupIpAddress", required: true)]
        public Input<string> GroupIpAddress { get; set; } = null!;

        /// <summary>
        /// ENI ID of the multicast source.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public Input<string> NetworkInterfaceId { get; set; } = null!;

        /// <summary>
        /// The ID of the multicast domain to which the multicast source belongs.
        /// </summary>
        [Input("transitRouterMulticastDomainId", required: true)]
        public Input<string> TransitRouterMulticastDomainId { get; set; } = null!;

        /// <summary>
        /// The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public TransitRouterMulticastDomainSourceArgs()
        {
        }
        public static new TransitRouterMulticastDomainSourceArgs Empty => new TransitRouterMulticastDomainSourceArgs();
    }

    public sealed class TransitRouterMulticastDomainSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
        /// </summary>
        [Input("groupIpAddress")]
        public Input<string>? GroupIpAddress { get; set; }

        /// <summary>
        /// ENI ID of the multicast source.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The ID of the multicast domain to which the multicast source belongs.
        /// </summary>
        [Input("transitRouterMulticastDomainId")]
        public Input<string>? TransitRouterMulticastDomainId { get; set; }

        /// <summary>
        /// The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public TransitRouterMulticastDomainSourceState()
        {
        }
        public static new TransitRouterMulticastDomainSourceState Empty => new TransitRouterMulticastDomainSourceState();
    }
}
