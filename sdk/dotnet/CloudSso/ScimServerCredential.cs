// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudSso
{
    /// <summary>
    /// Provides a Cloud SSO SCIM Server Credential resource.
    /// 
    /// For information about Cloud SSO SCIM Server Credential and how to use it, see [What is Cloud SSO SCIM Server Credential](https://www.alibabacloud.com/help/en/cloudsso/latest/api-cloudsso-2021-05-15-createscimservercredential).
    /// 
    /// &gt; **NOTE:** Available since v1.138.0.
    /// 
    /// &gt; **NOTE:** Cloud SSO Only Support `cn-shanghai` And `us-west-1` Region
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.CloudSso.GetDirectories.Invoke();
    /// 
    ///     var defaultScimServerCredential = new AliCloud.CloudSso.ScimServerCredential("default", new()
    ///     {
    ///         DirectoryId = @default.Apply(@default =&gt; @default.Apply(getDirectoriesResult =&gt; getDirectoriesResult.Directories[0]?.Id)),
    ///         CredentialSecretFile = "./credential_secret_file.txt",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud SSO SCIM Server Credential can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudsso/scimServerCredential:ScimServerCredential example &lt;directory_id&gt;:&lt;credential_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudsso/scimServerCredential:ScimServerCredential")]
    public partial class ScimServerCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Available since v1.245.0) The time when the SCIM credential was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the SCIM credential.
        /// </summary>
        [Output("credentialId")]
        public Output<string> CredentialId { get; private set; } = null!;

        /// <summary>
        /// The name of file that can save Credential ID and Credential Secret. Strongly suggest you to specified it when you creating credential, otherwise, you wouldn't get its secret ever.
        /// </summary>
        [Output("credentialSecretFile")]
        public Output<string?> CredentialSecretFile { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.245.0) The type of the SCIM credential.
        /// </summary>
        [Output("credentialType")]
        public Output<string> CredentialType { get; private set; } = null!;

        /// <summary>
        /// The ID of the Directory.
        /// </summary>
        [Output("directoryId")]
        public Output<string> DirectoryId { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.245.0) The time when the SCIM credential expires.
        /// </summary>
        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        /// <summary>
        /// The status of the SCIM Server Credential. Valid values: `Enabled`, `Disabled`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ScimServerCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScimServerCredential(string name, ScimServerCredentialArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cloudsso/scimServerCredential:ScimServerCredential", name, args ?? new ScimServerCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScimServerCredential(string name, Input<string> id, ScimServerCredentialState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudsso/scimServerCredential:ScimServerCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScimServerCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScimServerCredential Get(string name, Input<string> id, ScimServerCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new ScimServerCredential(name, id, state, options);
        }
    }

    public sealed class ScimServerCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of file that can save Credential ID and Credential Secret. Strongly suggest you to specified it when you creating credential, otherwise, you wouldn't get its secret ever.
        /// </summary>
        [Input("credentialSecretFile")]
        public Input<string>? CredentialSecretFile { get; set; }

        /// <summary>
        /// The ID of the Directory.
        /// </summary>
        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        /// <summary>
        /// The status of the SCIM Server Credential. Valid values: `Enabled`, `Disabled`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ScimServerCredentialArgs()
        {
        }
        public static new ScimServerCredentialArgs Empty => new ScimServerCredentialArgs();
    }

    public sealed class ScimServerCredentialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Available since v1.245.0) The time when the SCIM credential was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the SCIM credential.
        /// </summary>
        [Input("credentialId")]
        public Input<string>? CredentialId { get; set; }

        /// <summary>
        /// The name of file that can save Credential ID and Credential Secret. Strongly suggest you to specified it when you creating credential, otherwise, you wouldn't get its secret ever.
        /// </summary>
        [Input("credentialSecretFile")]
        public Input<string>? CredentialSecretFile { get; set; }

        /// <summary>
        /// (Available since v1.245.0) The type of the SCIM credential.
        /// </summary>
        [Input("credentialType")]
        public Input<string>? CredentialType { get; set; }

        /// <summary>
        /// The ID of the Directory.
        /// </summary>
        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        /// <summary>
        /// (Available since v1.245.0) The time when the SCIM credential expires.
        /// </summary>
        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        /// <summary>
        /// The status of the SCIM Server Credential. Valid values: `Enabled`, `Disabled`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ScimServerCredentialState()
        {
        }
        public static new ScimServerCredentialState Empty => new ScimServerCredentialState();
    }
}
