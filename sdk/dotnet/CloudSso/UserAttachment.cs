// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudSso
{
    /// <summary>
    /// Provides a Cloud SSO User Attachment resource.
    /// 
    /// For information about Cloud SSO User Attachment and how to use it, see [What is User Attachment](https://www.alibabacloud.com/help/en/cloudsso/latest/api-cloudsso-2021-05-15-addusertogroup).
    /// 
    /// &gt; **NOTE:** Available since v1.141.0.
    /// 
    /// &gt; **NOTE:** Cloud SSO Only Support `cn-shanghai` And `us-west-1` Region
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.CloudSso.GetDirectories.Invoke();
    /// 
    ///     var defaultInteger = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var defaultDirectory = new List&lt;AliCloud.CloudSso.Directory&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; @default.Apply(@default =&gt; @default.Apply(getDirectoriesResult =&gt; getDirectoriesResult.Ids)).Length.Apply(length =&gt; length &gt; 0 ? 0 : 1); rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         defaultDirectory.Add(new AliCloud.CloudSso.Directory($"default-{range.Value}", new()
    ///         {
    ///             DirectoryName = name,
    ///         }));
    ///     }
    ///     var directoryId = Output.Tuple(@default.Apply(@default =&gt; @default.Apply(getDirectoriesResult =&gt; getDirectoriesResult.Ids)).Length, @default, Std.Concat.Invoke(new()
    ///     {
    ///         Input = new[]
    ///         {
    ///             defaultDirectory.Select(__item =&gt; __item.Id).ToList(),
    ///             new[]
    ///             {
    ///                 "",
    ///             },
    ///         },
    ///     })).Apply(values =&gt;
    ///     {
    ///         var length = values.Item1;
    ///         var @default = values.Item2;
    ///         var invoke = values.Item3;
    ///         return length &gt; 0 ? @default.Apply(getDirectoriesResult =&gt; getDirectoriesResult.Ids[0]) : invoke.Result[0];
    ///     });
    /// 
    ///     var defaultUser = new AliCloud.CloudSso.User("default", new()
    ///     {
    ///         DirectoryId = directoryId,
    ///         UserName = $"{name}-{defaultInteger.Result}",
    ///     });
    /// 
    ///     var defaultGroup = new AliCloud.CloudSso.Group("default", new()
    ///     {
    ///         DirectoryId = directoryId,
    ///         GroupName = name,
    ///         Description = name,
    ///     });
    /// 
    ///     var defaultUserAttachment = new AliCloud.CloudSso.UserAttachment("default", new()
    ///     {
    ///         DirectoryId = directoryId,
    ///         UserId = defaultUser.UserId,
    ///         GroupId = defaultGroup.GroupId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud SSO User Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudsso/userAttachment:UserAttachment example &lt;directory_id&gt;:&lt;group_id&gt;:&lt;user_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudsso/userAttachment:UserAttachment")]
    public partial class UserAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the directory.
        /// </summary>
        [Output("directoryId")]
        public Output<string> DirectoryId { get; private set; } = null!;

        /// <summary>
        /// The ID of the group.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the user.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UserAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserAttachment(string name, UserAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cloudsso/userAttachment:UserAttachment", name, args ?? new UserAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserAttachment(string name, Input<string> id, UserAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudsso/userAttachment:UserAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserAttachment Get(string name, Input<string> id, UserAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new UserAttachment(name, id, state, options);
        }
    }

    public sealed class UserAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the directory.
        /// </summary>
        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        /// <summary>
        /// The ID of the group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The ID of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public UserAttachmentArgs()
        {
        }
        public static new UserAttachmentArgs Empty => new UserAttachmentArgs();
    }

    public sealed class UserAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the directory.
        /// </summary>
        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        /// <summary>
        /// The ID of the group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The ID of the user.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public UserAttachmentState()
        {
        }
        public static new UserAttachmentState Empty => new UserAttachmentState();
    }
}
