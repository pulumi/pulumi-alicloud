// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudSso
{
    /// <summary>
    /// Provides a Cloud SSO Directory resource.
    /// 
    /// For information about Cloud SSO Directory and how to use it, see [What is Directory](https://www.alibabacloud.com/help/en/cloudsso/latest/api-cloudsso-2021-05-15-createdirectory).
    /// 
    /// &gt; **NOTE:** Available since v1.135.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var @default = new AliCloud.CloudSso.Directory("default", new()
    ///     {
    ///         DirectoryName = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud SSO Directory can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudsso/directory:Directory example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudsso/directory:Directory")]
    public partial class Directory : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CreateTime
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Directory Global Acceleration activation status
        /// </summary>
        [Output("directoryGlobalAccessStatus")]
        public Output<string> DirectoryGlobalAccessStatus { get; private set; } = null!;

        /// <summary>
        /// DirectoryName
        /// </summary>
        [Output("directoryName")]
        public Output<string?> DirectoryName { get; private set; } = null!;

        /// <summary>
        /// Login preferences See `LoginPreference` below.
        /// </summary>
        [Output("loginPreference")]
        public Output<Outputs.DirectoryLoginPreference> LoginPreference { get; private set; } = null!;

        /// <summary>
        /// Global MFA verification configuration. See `MfaAuthenticationSettingInfo` below.
        /// </summary>
        [Output("mfaAuthenticationSettingInfo")]
        public Output<Outputs.DirectoryMfaAuthenticationSettingInfo> MfaAuthenticationSettingInfo { get; private set; } = null!;

        /// <summary>
        /// MFA Authentication Status
        /// </summary>
        [Output("mfaAuthenticationStatus")]
        public Output<string> MfaAuthenticationStatus { get; private set; } = null!;

        /// <summary>
        /// Password policy See `PasswordPolicy` below.
        /// </summary>
        [Output("passwordPolicy")]
        public Output<Outputs.DirectoryPasswordPolicy> PasswordPolicy { get; private set; } = null!;

        /// <summary>
        /// Identity Provider (IDP) See `SamlIdentityProviderConfiguration` below.
        /// </summary>
        [Output("samlIdentityProviderConfiguration")]
        public Output<Outputs.DirectorySamlIdentityProviderConfiguration> SamlIdentityProviderConfiguration { get; private set; } = null!;

        /// <summary>
        /// SP information. See `SamlServiceProvider` below.
        /// </summary>
        [Output("samlServiceProvider")]
        public Output<Outputs.DirectorySamlServiceProvider> SamlServiceProvider { get; private set; } = null!;

        /// <summary>
        /// SCIM Synchronization Status
        /// </summary>
        [Output("scimSynchronizationStatus")]
        public Output<string> ScimSynchronizationStatus { get; private set; } = null!;

        /// <summary>
        /// User Provisioning configuration See `UserProvisioningConfiguration` below.
        /// </summary>
        [Output("userProvisioningConfiguration")]
        public Output<Outputs.DirectoryUserProvisioningConfiguration> UserProvisioningConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a Directory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Directory(string name, DirectoryArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudsso/directory:Directory", name, args ?? new DirectoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Directory(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudsso/directory:Directory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Directory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Directory Get(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
        {
            return new Directory(name, id, state, options);
        }
    }

    public sealed class DirectoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Directory Global Acceleration activation status
        /// </summary>
        [Input("directoryGlobalAccessStatus")]
        public Input<string>? DirectoryGlobalAccessStatus { get; set; }

        /// <summary>
        /// DirectoryName
        /// </summary>
        [Input("directoryName")]
        public Input<string>? DirectoryName { get; set; }

        /// <summary>
        /// Login preferences See `LoginPreference` below.
        /// </summary>
        [Input("loginPreference")]
        public Input<Inputs.DirectoryLoginPreferenceArgs>? LoginPreference { get; set; }

        /// <summary>
        /// Global MFA verification configuration. See `MfaAuthenticationSettingInfo` below.
        /// </summary>
        [Input("mfaAuthenticationSettingInfo")]
        public Input<Inputs.DirectoryMfaAuthenticationSettingInfoArgs>? MfaAuthenticationSettingInfo { get; set; }

        /// <summary>
        /// MFA Authentication Status
        /// </summary>
        [Input("mfaAuthenticationStatus")]
        public Input<string>? MfaAuthenticationStatus { get; set; }

        /// <summary>
        /// Password policy See `PasswordPolicy` below.
        /// </summary>
        [Input("passwordPolicy")]
        public Input<Inputs.DirectoryPasswordPolicyArgs>? PasswordPolicy { get; set; }

        /// <summary>
        /// Identity Provider (IDP) See `SamlIdentityProviderConfiguration` below.
        /// </summary>
        [Input("samlIdentityProviderConfiguration")]
        public Input<Inputs.DirectorySamlIdentityProviderConfigurationArgs>? SamlIdentityProviderConfiguration { get; set; }

        /// <summary>
        /// SP information. See `SamlServiceProvider` below.
        /// </summary>
        [Input("samlServiceProvider")]
        public Input<Inputs.DirectorySamlServiceProviderArgs>? SamlServiceProvider { get; set; }

        /// <summary>
        /// SCIM Synchronization Status
        /// </summary>
        [Input("scimSynchronizationStatus")]
        public Input<string>? ScimSynchronizationStatus { get; set; }

        /// <summary>
        /// User Provisioning configuration See `UserProvisioningConfiguration` below.
        /// </summary>
        [Input("userProvisioningConfiguration")]
        public Input<Inputs.DirectoryUserProvisioningConfigurationArgs>? UserProvisioningConfiguration { get; set; }

        public DirectoryArgs()
        {
        }
        public static new DirectoryArgs Empty => new DirectoryArgs();
    }

    public sealed class DirectoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CreateTime
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Directory Global Acceleration activation status
        /// </summary>
        [Input("directoryGlobalAccessStatus")]
        public Input<string>? DirectoryGlobalAccessStatus { get; set; }

        /// <summary>
        /// DirectoryName
        /// </summary>
        [Input("directoryName")]
        public Input<string>? DirectoryName { get; set; }

        /// <summary>
        /// Login preferences See `LoginPreference` below.
        /// </summary>
        [Input("loginPreference")]
        public Input<Inputs.DirectoryLoginPreferenceGetArgs>? LoginPreference { get; set; }

        /// <summary>
        /// Global MFA verification configuration. See `MfaAuthenticationSettingInfo` below.
        /// </summary>
        [Input("mfaAuthenticationSettingInfo")]
        public Input<Inputs.DirectoryMfaAuthenticationSettingInfoGetArgs>? MfaAuthenticationSettingInfo { get; set; }

        /// <summary>
        /// MFA Authentication Status
        /// </summary>
        [Input("mfaAuthenticationStatus")]
        public Input<string>? MfaAuthenticationStatus { get; set; }

        /// <summary>
        /// Password policy See `PasswordPolicy` below.
        /// </summary>
        [Input("passwordPolicy")]
        public Input<Inputs.DirectoryPasswordPolicyGetArgs>? PasswordPolicy { get; set; }

        /// <summary>
        /// Identity Provider (IDP) See `SamlIdentityProviderConfiguration` below.
        /// </summary>
        [Input("samlIdentityProviderConfiguration")]
        public Input<Inputs.DirectorySamlIdentityProviderConfigurationGetArgs>? SamlIdentityProviderConfiguration { get; set; }

        /// <summary>
        /// SP information. See `SamlServiceProvider` below.
        /// </summary>
        [Input("samlServiceProvider")]
        public Input<Inputs.DirectorySamlServiceProviderGetArgs>? SamlServiceProvider { get; set; }

        /// <summary>
        /// SCIM Synchronization Status
        /// </summary>
        [Input("scimSynchronizationStatus")]
        public Input<string>? ScimSynchronizationStatus { get; set; }

        /// <summary>
        /// User Provisioning configuration See `UserProvisioningConfiguration` below.
        /// </summary>
        [Input("userProvisioningConfiguration")]
        public Input<Inputs.DirectoryUserProvisioningConfigurationGetArgs>? UserProvisioningConfiguration { get; set; }

        public DirectoryState()
        {
        }
        public static new DirectoryState Empty => new DirectoryState();
    }
}
