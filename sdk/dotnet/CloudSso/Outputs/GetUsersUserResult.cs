// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudSso.Outputs
{

    [OutputType]
    public sealed class GetUsersUserResult
    {
        /// <summary>
        /// The create time of the user.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of user.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the Directory.
        /// </summary>
        public readonly string DirectoryId;
        /// <summary>
        /// The display name of user.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The User's Contact Email Address.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// The first name of user.
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// The ID of the User.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last name of user.
        /// </summary>
        public readonly string LastName;
        /// <summary>
        /// The List of MFA Device for User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersUserMfaDeviceResult> MfaDevices;
        /// <summary>
        /// ProvisionType.
        /// </summary>
        public readonly string ProvisionType;
        /// <summary>
        /// User status. Valid values: `Enabled` and `Disabled`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The User ID of the group.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// The name of user.
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetUsersUserResult(
            string createTime,

            string description,

            string directoryId,

            string displayName,

            string email,

            string firstName,

            string id,

            string lastName,

            ImmutableArray<Outputs.GetUsersUserMfaDeviceResult> mfaDevices,

            string provisionType,

            string status,

            string userId,

            string userName)
        {
            CreateTime = createTime;
            Description = description;
            DirectoryId = directoryId;
            DisplayName = displayName;
            Email = email;
            FirstName = firstName;
            Id = id;
            LastName = lastName;
            MfaDevices = mfaDevices;
            ProvisionType = provisionType;
            Status = status;
            UserId = userId;
            UserName = userName;
        }
    }
}
