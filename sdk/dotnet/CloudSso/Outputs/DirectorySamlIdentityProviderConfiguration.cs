// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudSso.Outputs
{

    [OutputType]
    public sealed class DirectorySamlIdentityProviderConfiguration
    {
        /// <summary>
        /// The Binding method for initiating a SAML request.
        /// </summary>
        public readonly string? BindingType;
        /// <summary>
        /// Certificate ID list
        /// </summary>
        public readonly ImmutableArray<string> CertificateIds;
        /// <summary>
        /// CreateTime
        /// </summary>
        public readonly string? CreateTime;
        /// <summary>
        /// EncodedMetadataDocument
        /// </summary>
        public readonly string? EncodedMetadataDocument;
        /// <summary>
        /// EntityId
        /// </summary>
        public readonly string? EntityId;
        /// <summary>
        /// LoginUrl
        /// </summary>
        public readonly string? LoginUrl;
        /// <summary>
        /// SSOStatus
        /// </summary>
        public readonly string? SsoStatus;
        /// <summary>
        /// UpdateTime
        /// </summary>
        public readonly string? UpdateTime;
        /// <summary>
        /// SP Request whether the signature is required
        /// </summary>
        public readonly bool? WantRequestSigned;

        [OutputConstructor]
        private DirectorySamlIdentityProviderConfiguration(
            string? bindingType,

            ImmutableArray<string> certificateIds,

            string? createTime,

            string? encodedMetadataDocument,

            string? entityId,

            string? loginUrl,

            string? ssoStatus,

            string? updateTime,

            bool? wantRequestSigned)
        {
            BindingType = bindingType;
            CertificateIds = certificateIds;
            CreateTime = createTime;
            EncodedMetadataDocument = encodedMetadataDocument;
            EntityId = entityId;
            LoginUrl = loginUrl;
            SsoStatus = ssoStatus;
            UpdateTime = updateTime;
            WantRequestSigned = wantRequestSigned;
        }
    }
}
