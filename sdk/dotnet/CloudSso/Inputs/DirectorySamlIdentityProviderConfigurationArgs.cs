// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudSso.Inputs
{

    public sealed class DirectorySamlIdentityProviderConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Binding method for initiating a SAML request.
        /// </summary>
        [Input("bindingType")]
        public Input<string>? BindingType { get; set; }

        [Input("certificateIds")]
        private InputList<string>? _certificateIds;

        /// <summary>
        /// Certificate ID list
        /// </summary>
        public InputList<string> CertificateIds
        {
            get => _certificateIds ?? (_certificateIds = new InputList<string>());
            set => _certificateIds = value;
        }

        /// <summary>
        /// CreateTime
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("encodedMetadataDocument")]
        private Input<string>? _encodedMetadataDocument;

        /// <summary>
        /// EncodedMetadataDocument
        /// </summary>
        public Input<string>? EncodedMetadataDocument
        {
            get => _encodedMetadataDocument;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _encodedMetadataDocument = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// EntityId
        /// </summary>
        [Input("entityId")]
        public Input<string>? EntityId { get; set; }

        /// <summary>
        /// LoginUrl
        /// </summary>
        [Input("loginUrl")]
        public Input<string>? LoginUrl { get; set; }

        /// <summary>
        /// SSOStatus
        /// </summary>
        [Input("ssoStatus")]
        public Input<string>? SsoStatus { get; set; }

        /// <summary>
        /// UpdateTime
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// SP Request whether the signature is required
        /// </summary>
        [Input("wantRequestSigned")]
        public Input<bool>? WantRequestSigned { get; set; }

        public DirectorySamlIdentityProviderConfigurationArgs()
        {
        }
        public static new DirectorySamlIdentityProviderConfigurationArgs Empty => new DirectorySamlIdentityProviderConfigurationArgs();
    }
}
