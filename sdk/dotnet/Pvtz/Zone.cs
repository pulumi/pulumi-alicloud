// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Pvtz
{
    /// <summary>
    /// ## Import
    /// 
    /// Private Zone can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:pvtz/zone:Zone example abc123456
    /// ```
    /// </summary>
    public partial class Zone : Pulumi.CustomResource
    {
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        [Output("isPtr")]
        public Output<bool> IsPtr { get; private set; } = null!;

        /// <summary>
        /// The language. Valid values: "zh", "en", "jp".
        /// </summary>
        [Output("lang")]
        public Output<string?> Lang { get; private set; } = null!;

        /// <summary>
        /// The name of the Private Zone.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The recursive DNS proxy. Valid values:
        /// - ZONE: indicates that the recursive DNS proxy is disabled.
        /// - RECORD: indicates that the recursive DNS proxy is enabled.
        /// </summary>
        [Output("proxyPattern")]
        public Output<string?> ProxyPattern { get; private set; } = null!;

        /// <summary>
        /// The count of the Private Zone Record.
        /// </summary>
        [Output("recordCount")]
        public Output<int> RecordCount { get; private set; } = null!;

        /// <summary>
        /// The remark of the Private Zone.
        /// </summary>
        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;

        /// <summary>
        /// The Id of resource group which the Private Zone belongs.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The IP address of the client.
        /// </summary>
        [Output("userClientIp")]
        public Output<string?> UserClientIp { get; private set; } = null!;


        /// <summary>
        /// Create a Zone resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Zone(string name, ZoneArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:pvtz/zone:Zone", name, args ?? new ZoneArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Zone(string name, Input<string> id, ZoneState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:pvtz/zone:Zone", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Zone resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Zone Get(string name, Input<string> id, ZoneState? state = null, CustomResourceOptions? options = null)
        {
            return new Zone(name, id, state, options);
        }
    }

    public sealed class ZoneArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The language. Valid values: "zh", "en", "jp".
        /// </summary>
        [Input("lang")]
        public Input<string>? Lang { get; set; }

        /// <summary>
        /// The name of the Private Zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The recursive DNS proxy. Valid values:
        /// - ZONE: indicates that the recursive DNS proxy is disabled.
        /// - RECORD: indicates that the recursive DNS proxy is enabled.
        /// </summary>
        [Input("proxyPattern")]
        public Input<string>? ProxyPattern { get; set; }

        /// <summary>
        /// The remark of the Private Zone.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// The Id of resource group which the Private Zone belongs.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The IP address of the client.
        /// </summary>
        [Input("userClientIp")]
        public Input<string>? UserClientIp { get; set; }

        public ZoneArgs()
        {
        }
    }

    public sealed class ZoneState : Pulumi.ResourceArgs
    {
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        [Input("isPtr")]
        public Input<bool>? IsPtr { get; set; }

        /// <summary>
        /// The language. Valid values: "zh", "en", "jp".
        /// </summary>
        [Input("lang")]
        public Input<string>? Lang { get; set; }

        /// <summary>
        /// The name of the Private Zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The recursive DNS proxy. Valid values:
        /// - ZONE: indicates that the recursive DNS proxy is disabled.
        /// - RECORD: indicates that the recursive DNS proxy is enabled.
        /// </summary>
        [Input("proxyPattern")]
        public Input<string>? ProxyPattern { get; set; }

        /// <summary>
        /// The count of the Private Zone Record.
        /// </summary>
        [Input("recordCount")]
        public Input<int>? RecordCount { get; set; }

        /// <summary>
        /// The remark of the Private Zone.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// The Id of resource group which the Private Zone belongs.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// The IP address of the client.
        /// </summary>
        [Input("userClientIp")]
        public Input<string>? UserClientIp { get; set; }

        public ZoneState()
        {
        }
    }
}
