// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Pvtz
{
    /// <summary>
    /// Provides a Private Zone Rule resource.
    /// 
    /// For information about Private Zone Rule and how to use it, see [What is Rule](https://www.alibabacloud.com/help/en/privatezone/latest/add-forwarding-rule).
    /// 
    /// &gt; **NOTE:** Available since v1.143.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "example_value";
    ///     var defaultInteger = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var @default = AliCloud.Pvtz.GetResolverZones.Invoke(new()
    ///     {
    ///         Status = "NORMAL",
    ///     });
    /// 
    ///     var defaultGetRegions = AliCloud.GetRegions.Invoke(new()
    ///     {
    ///         Current = true,
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "172.16.0.0/12",
    ///     });
    /// 
    ///     var defaultSwitch = new List&lt;AliCloud.Vpc.Switch&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         defaultSwitch.Add(new AliCloud.Vpc.Switch($"default-{range.Value}", new()
    ///         {
    ///             VpcId = defaultNetwork.Id,
    ///             CidrBlock = defaultNetwork.CidrBlock.Apply(cidrBlock =&gt; Std.Cidrsubnet.Invoke(new()
    ///             {
    ///                 Input = cidrBlock,
    ///                 Newbits = 8,
    ///                 Netnum = range.Value,
    ///             })).Apply(invoke =&gt; invoke.Result),
    ///             ZoneId = @default.Apply(@default =&gt; @default.Apply(getResolverZonesResult =&gt; getResolverZonesResult.Zones)[range.Value].ZoneId),
    ///         }));
    ///     }
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         Name = name,
    ///     });
    /// 
    ///     var defaultEndpoint = new AliCloud.Pvtz.Endpoint("default", new()
    ///     {
    ///         EndpointName = $"{name}-{defaultInteger.Result}",
    ///         SecurityGroupId = defaultSecurityGroup.Id,
    ///         VpcId = defaultNetwork.Id,
    ///         VpcRegionId = defaultGetRegions.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///         IpConfigs = new[]
    ///         {
    ///             new AliCloud.Pvtz.Inputs.EndpointIpConfigArgs
    ///             {
    ///                 ZoneId = defaultSwitch[0].ZoneId,
    ///                 CidrBlock = defaultSwitch[0].CidrBlock,
    ///                 VswitchId = defaultSwitch[0].Id,
    ///             },
    ///             new AliCloud.Pvtz.Inputs.EndpointIpConfigArgs
    ///             {
    ///                 ZoneId = defaultSwitch[1].ZoneId,
    ///                 CidrBlock = defaultSwitch[1].CidrBlock,
    ///                 VswitchId = defaultSwitch[1].Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var defaultRule = new AliCloud.Pvtz.Rule("default", new()
    ///     {
    ///         EndpointId = defaultEndpoint.Id,
    ///         RuleName = $"{name}-{defaultInteger.Result}",
    ///         Type = "OUTBOUND",
    ///         ZoneName = name,
    ///         ForwardIps = new[]
    ///         {
    ///             new AliCloud.Pvtz.Inputs.RuleForwardIpArgs
    ///             {
    ///                 Ip = "114.114.114.114",
    ///                 Port = 8080,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Private Zone Rule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:pvtz/rule:Rule example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:pvtz/rule:Rule")]
    public partial class Rule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Endpoint.
        /// </summary>
        [Output("endpointId")]
        public Output<string> EndpointId { get; private set; } = null!;

        /// <summary>
        /// Forwarding target. See `ForwardIps` below.
        /// </summary>
        [Output("forwardIps")]
        public Output<ImmutableArray<Outputs.RuleForwardIp>> ForwardIps { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// The type of the rule. Valid values: `OUTBOUND`.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The name of the forwarding zone.
        /// </summary>
        [Output("zoneName")]
        public Output<string> ZoneName { get; private set; } = null!;


        /// <summary>
        /// Create a Rule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Rule(string name, RuleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:pvtz/rule:Rule", name, args ?? new RuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Rule(string name, Input<string> id, RuleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:pvtz/rule:Rule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Rule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Rule Get(string name, Input<string> id, RuleState? state = null, CustomResourceOptions? options = null)
        {
            return new Rule(name, id, state, options);
        }
    }

    public sealed class RuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Endpoint.
        /// </summary>
        [Input("endpointId", required: true)]
        public Input<string> EndpointId { get; set; } = null!;

        [Input("forwardIps", required: true)]
        private InputList<Inputs.RuleForwardIpArgs>? _forwardIps;

        /// <summary>
        /// Forwarding target. See `ForwardIps` below.
        /// </summary>
        public InputList<Inputs.RuleForwardIpArgs> ForwardIps
        {
            get => _forwardIps ?? (_forwardIps = new InputList<Inputs.RuleForwardIpArgs>());
            set => _forwardIps = value;
        }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// The type of the rule. Valid values: `OUTBOUND`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The name of the forwarding zone.
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public RuleArgs()
        {
        }
        public static new RuleArgs Empty => new RuleArgs();
    }

    public sealed class RuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Endpoint.
        /// </summary>
        [Input("endpointId")]
        public Input<string>? EndpointId { get; set; }

        [Input("forwardIps")]
        private InputList<Inputs.RuleForwardIpGetArgs>? _forwardIps;

        /// <summary>
        /// Forwarding target. See `ForwardIps` below.
        /// </summary>
        public InputList<Inputs.RuleForwardIpGetArgs> ForwardIps
        {
            get => _forwardIps ?? (_forwardIps = new InputList<Inputs.RuleForwardIpGetArgs>());
            set => _forwardIps = value;
        }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The type of the rule. Valid values: `OUTBOUND`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The name of the forwarding zone.
        /// </summary>
        [Input("zoneName")]
        public Input<string>? ZoneName { get; set; }

        public RuleState()
        {
        }
        public static new RuleState Empty => new RuleState();
    }
}
