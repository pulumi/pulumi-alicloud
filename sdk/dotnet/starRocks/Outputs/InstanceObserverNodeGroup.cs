// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.starRocks.Outputs
{

    [OutputType]
    public sealed class InstanceObserverNodeGroup
    {
        /// <summary>
        /// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
        /// </summary>
        public readonly int? Cu;
        /// <summary>
        /// DiskNumber
        /// </summary>
        public readonly int? DiskNumber;
        /// <summary>
        /// Local SSD instance specifications.
        /// </summary>
        public readonly string? LocalStorageInstanceType;
        /// <summary>
        /// Resident node number of node group.
        /// </summary>
        public readonly int? ResidentNodeNumber;
        /// <summary>
        /// Compute group specification types include the following:
        /// - standard
        /// </summary>
        public readonly string? SpecType;
        /// <summary>
        /// Performance levels of cloud disks include the following values:
        /// - pl0: Maximum random read/write IOPS per disk is 10,000.
        /// - pl1: Maximum random read/write IOPS per disk is 50,000.
        /// - pl2: Maximum random read/write IOPS per disk is 100,000.
        /// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
        /// </summary>
        public readonly string? StoragePerformanceLevel;
        /// <summary>
        /// Storage size, measured in GiB.
        /// </summary>
        public readonly int? StorageSize;
        /// <summary>
        /// Zone ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private InstanceObserverNodeGroup(
            int? cu,

            int? diskNumber,

            string? localStorageInstanceType,

            int? residentNodeNumber,

            string? specType,

            string? storagePerformanceLevel,

            int? storageSize,

            string? zoneId)
        {
            Cu = cu;
            DiskNumber = diskNumber;
            LocalStorageInstanceType = localStorageInstanceType;
            ResidentNodeNumber = residentNodeNumber;
            SpecType = specType;
            StoragePerformanceLevel = storagePerformanceLevel;
            StorageSize = storageSize;
            ZoneId = zoneId;
        }
    }
}
