// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.starRocks
{
    /// <summary>
    /// Provides a Star Rocks Instance resource.
    /// 
    /// StarRocks resource instance.
    /// 
    /// For information about Star Rocks Instance and how to use it, see [What is Instance](https://next.api.alibabacloud.com/document/starrocks/2022-10-19/CreateInstanceV1).
    /// 
    /// &gt; **NOTE:** Available since v1.256.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultB21JUD = new AliCloud.Vpc.Network("defaultB21JUD", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///     });
    /// 
    ///     var default106DkE = new AliCloud.Vpc.Switch("default106DkE", new()
    ///     {
    ///         VpcId = defaultB21JUD.Id,
    ///         CidrBlock = "172.16.1.0/24",
    ///         VswitchName = "sr-example",
    ///         ZoneId = "cn-hangzhou-i",
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.StarRocks.Instance("default", new()
    ///     {
    ///         InstanceName = "create-instance-1",
    ///         AutoRenew = false,
    ///         FrontendNodeGroups = new[]
    ///         {
    ///             new AliCloud.starRocks.Inputs.InstanceFrontendNodeGroupArgs
    ///             {
    ///                 Cu = 8,
    ///                 StorageSize = 100,
    ///                 ResidentNodeNumber = 3,
    ///                 StoragePerformanceLevel = "pl1",
    ///                 SpecType = "standard",
    ///                 DiskNumber = 1,
    ///                 ZoneId = "cn-hangzhou-i",
    ///                 LocalStorageInstanceType = "null",
    ///             },
    ///         },
    ///         Vswitches = new[]
    ///         {
    ///             new AliCloud.starRocks.Inputs.InstanceVswitchArgs
    ///             {
    ///                 VswitchId = default106DkE.Id,
    ///                 ZoneId = "cn-hangzhou-i",
    ///             },
    ///         },
    ///         BackendNodeGroups = new[]
    ///         {
    ///             new AliCloud.starRocks.Inputs.InstanceBackendNodeGroupArgs
    ///             {
    ///                 Cu = 8,
    ///                 StorageSize = 100,
    ///                 ResidentNodeNumber = 3,
    ///                 DiskNumber = 1,
    ///                 StoragePerformanceLevel = "pl1",
    ///                 SpecType = "standard",
    ///                 ZoneId = "cn-hangzhou-i",
    ///                 LocalStorageInstanceType = "null",
    ///             },
    ///         },
    ///         ClusterZoneId = "cn-hangzhou-i",
    ///         Duration = 1,
    ///         PayType = "postPaid",
    ///         VpcId = defaultB21JUD.Id,
    ///         Version = "3.3",
    ///         RunMode = "shared_data",
    ///         PackageType = "official",
    ///         AdminPassword = "1qaz@QAZ",
    ///         OssAccessingRoleName = "AliyunEMRStarRocksAccessingOSSRole",
    ///         PricingCycle = "Month",
    ///         KmsKeyId = "123",
    ///         PromotionOptionNo = "123",
    ///         Encrypted = false,
    ///         ObserverNodeGroups = new[]
    ///         {
    ///             new AliCloud.starRocks.Inputs.InstanceObserverNodeGroupArgs
    ///             {
    ///                 Cu = 8,
    ///                 StorageSize = 100,
    ///                 StoragePerformanceLevel = "pl1",
    ///                 DiskNumber = 1,
    ///                 ResidentNodeNumber = 1,
    ///                 SpecType = "standard",
    ///                 LocalStorageInstanceType = "null",
    ///                 ZoneId = "cn-hangzhou-h",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Star Rocks Instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:starrocks/instance:Instance example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:starrocks/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Password of admin user.
        /// </summary>
        [Output("adminPassword")]
        public Output<string> AdminPassword { get; private set; } = null!;

        /// <summary>
        /// Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
        /// </summary>
        [Output("autoRenew")]
        public Output<bool?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// BackendNodeGroups See `BackendNodeGroups` below.
        /// </summary>
        [Output("backendNodeGroups")]
        public Output<ImmutableArray<Outputs.InstanceBackendNodeGroup>> BackendNodeGroups { get; private set; } = null!;

        /// <summary>
        /// ZoneId of instance.
        /// </summary>
        [Output("clusterZoneId")]
        public Output<string> ClusterZoneId { get; private set; } = null!;

        /// <summary>
        /// The creation time of the instance.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Duration of purchase. It is only meaningful when payType is set to PrePaid.
        /// </summary>
        [Output("duration")]
        public Output<int?> Duration { get; private set; } = null!;

        /// <summary>
        /// Whether encrypted
        /// </summary>
        [Output("encrypted")]
        public Output<bool?> Encrypted { get; private set; } = null!;

        /// <summary>
        /// FrontendNodeGroups See `FrontendNodeGroups` below.
        /// </summary>
        [Output("frontendNodeGroups")]
        public Output<ImmutableArray<Outputs.InstanceFrontendNodeGroup>> FrontendNodeGroups { get; private set; } = null!;

        /// <summary>
        /// The name of the instance.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// KmsKeyId
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// ObserverNodeGroups See `ObserverNodeGroups` below.
        /// </summary>
        [Output("observerNodeGroups")]
        public Output<ImmutableArray<Outputs.InstanceObserverNodeGroup>> ObserverNodeGroups { get; private set; } = null!;

        /// <summary>
        /// Role name used for password-free access to OSS.
        /// </summary>
        [Output("ossAccessingRoleName")]
        public Output<string?> OssAccessingRoleName { get; private set; } = null!;

        /// <summary>
        /// The package type of the instance:
        /// - trial
        /// - official
        /// </summary>
        [Output("packageType")]
        public Output<string> PackageType { get; private set; } = null!;

        /// <summary>
        /// The pay type of the instance:
        /// - prePaid
        /// - postPaid
        /// </summary>
        [Output("payType")]
        public Output<string> PayType { get; private set; } = null!;

        /// <summary>
        /// The duration unit for purchasing:
        /// - Month
        /// - Year
        /// This is only meaningful when PayType is set to PrePaid.
        /// </summary>
        [Output("pricingCycle")]
        public Output<string?> PricingCycle { get; private set; } = null!;

        /// <summary>
        /// Promotion
        /// </summary>
        [Output("promotionOptionNo")]
        public Output<string?> PromotionOptionNo { get; private set; } = null!;

        /// <summary>
        /// The region ID of the instance.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// ResourceGroupId
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The run mode of the instance:
        /// - SharedNothing
        /// - SharedData
        /// - lakehouse
        /// </summary>
        [Output("runMode")]
        public Output<string> RunMode { get; private set; } = null!;

        /// <summary>
        /// The status of the instance.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tag list of the instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The version of the instance.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// The VPC ID of the instance.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// The VSwitches info of the instance. See `Vswitches` below.
        /// </summary>
        [Output("vswitches")]
        public Output<ImmutableArray<Outputs.InstanceVswitch>> Vswitches { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:starrocks/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:starrocks/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "alicloud:index/starRocksInstance:StarRocksInstance" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Password of admin user.
        /// </summary>
        [Input("adminPassword", required: true)]
        public Input<string> AdminPassword { get; set; } = null!;

        /// <summary>
        /// Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        [Input("backendNodeGroups")]
        private InputList<Inputs.InstanceBackendNodeGroupArgs>? _backendNodeGroups;

        /// <summary>
        /// BackendNodeGroups See `BackendNodeGroups` below.
        /// </summary>
        public InputList<Inputs.InstanceBackendNodeGroupArgs> BackendNodeGroups
        {
            get => _backendNodeGroups ?? (_backendNodeGroups = new InputList<Inputs.InstanceBackendNodeGroupArgs>());
            set => _backendNodeGroups = value;
        }

        /// <summary>
        /// ZoneId of instance.
        /// </summary>
        [Input("clusterZoneId", required: true)]
        public Input<string> ClusterZoneId { get; set; } = null!;

        /// <summary>
        /// Duration of purchase. It is only meaningful when payType is set to PrePaid.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// Whether encrypted
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("frontendNodeGroups")]
        private InputList<Inputs.InstanceFrontendNodeGroupArgs>? _frontendNodeGroups;

        /// <summary>
        /// FrontendNodeGroups See `FrontendNodeGroups` below.
        /// </summary>
        public InputList<Inputs.InstanceFrontendNodeGroupArgs> FrontendNodeGroups
        {
            get => _frontendNodeGroups ?? (_frontendNodeGroups = new InputList<Inputs.InstanceFrontendNodeGroupArgs>());
            set => _frontendNodeGroups = value;
        }

        /// <summary>
        /// The name of the instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// KmsKeyId
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("observerNodeGroups")]
        private InputList<Inputs.InstanceObserverNodeGroupArgs>? _observerNodeGroups;

        /// <summary>
        /// ObserverNodeGroups See `ObserverNodeGroups` below.
        /// </summary>
        public InputList<Inputs.InstanceObserverNodeGroupArgs> ObserverNodeGroups
        {
            get => _observerNodeGroups ?? (_observerNodeGroups = new InputList<Inputs.InstanceObserverNodeGroupArgs>());
            set => _observerNodeGroups = value;
        }

        /// <summary>
        /// Role name used for password-free access to OSS.
        /// </summary>
        [Input("ossAccessingRoleName")]
        public Input<string>? OssAccessingRoleName { get; set; }

        /// <summary>
        /// The package type of the instance:
        /// - trial
        /// - official
        /// </summary>
        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        /// <summary>
        /// The pay type of the instance:
        /// - prePaid
        /// - postPaid
        /// </summary>
        [Input("payType", required: true)]
        public Input<string> PayType { get; set; } = null!;

        /// <summary>
        /// The duration unit for purchasing:
        /// - Month
        /// - Year
        /// This is only meaningful when PayType is set to PrePaid.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// Promotion
        /// </summary>
        [Input("promotionOptionNo")]
        public Input<string>? PromotionOptionNo { get; set; }

        /// <summary>
        /// ResourceGroupId
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The run mode of the instance:
        /// - SharedNothing
        /// - SharedData
        /// - lakehouse
        /// </summary>
        [Input("runMode", required: true)]
        public Input<string> RunMode { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag list of the instance.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The version of the instance.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        /// <summary>
        /// The VPC ID of the instance.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        [Input("vswitches")]
        private InputList<Inputs.InstanceVswitchArgs>? _vswitches;

        /// <summary>
        /// The VSwitches info of the instance. See `Vswitches` below.
        /// </summary>
        public InputList<Inputs.InstanceVswitchArgs> Vswitches
        {
            get => _vswitches ?? (_vswitches = new InputList<Inputs.InstanceVswitchArgs>());
            set => _vswitches = value;
        }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Password of admin user.
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        /// <summary>
        /// Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        [Input("backendNodeGroups")]
        private InputList<Inputs.InstanceBackendNodeGroupGetArgs>? _backendNodeGroups;

        /// <summary>
        /// BackendNodeGroups See `BackendNodeGroups` below.
        /// </summary>
        public InputList<Inputs.InstanceBackendNodeGroupGetArgs> BackendNodeGroups
        {
            get => _backendNodeGroups ?? (_backendNodeGroups = new InputList<Inputs.InstanceBackendNodeGroupGetArgs>());
            set => _backendNodeGroups = value;
        }

        /// <summary>
        /// ZoneId of instance.
        /// </summary>
        [Input("clusterZoneId")]
        public Input<string>? ClusterZoneId { get; set; }

        /// <summary>
        /// The creation time of the instance.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Duration of purchase. It is only meaningful when payType is set to PrePaid.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// Whether encrypted
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("frontendNodeGroups")]
        private InputList<Inputs.InstanceFrontendNodeGroupGetArgs>? _frontendNodeGroups;

        /// <summary>
        /// FrontendNodeGroups See `FrontendNodeGroups` below.
        /// </summary>
        public InputList<Inputs.InstanceFrontendNodeGroupGetArgs> FrontendNodeGroups
        {
            get => _frontendNodeGroups ?? (_frontendNodeGroups = new InputList<Inputs.InstanceFrontendNodeGroupGetArgs>());
            set => _frontendNodeGroups = value;
        }

        /// <summary>
        /// The name of the instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// KmsKeyId
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("observerNodeGroups")]
        private InputList<Inputs.InstanceObserverNodeGroupGetArgs>? _observerNodeGroups;

        /// <summary>
        /// ObserverNodeGroups See `ObserverNodeGroups` below.
        /// </summary>
        public InputList<Inputs.InstanceObserverNodeGroupGetArgs> ObserverNodeGroups
        {
            get => _observerNodeGroups ?? (_observerNodeGroups = new InputList<Inputs.InstanceObserverNodeGroupGetArgs>());
            set => _observerNodeGroups = value;
        }

        /// <summary>
        /// Role name used for password-free access to OSS.
        /// </summary>
        [Input("ossAccessingRoleName")]
        public Input<string>? OssAccessingRoleName { get; set; }

        /// <summary>
        /// The package type of the instance:
        /// - trial
        /// - official
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// The pay type of the instance:
        /// - prePaid
        /// - postPaid
        /// </summary>
        [Input("payType")]
        public Input<string>? PayType { get; set; }

        /// <summary>
        /// The duration unit for purchasing:
        /// - Month
        /// - Year
        /// This is only meaningful when PayType is set to PrePaid.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// Promotion
        /// </summary>
        [Input("promotionOptionNo")]
        public Input<string>? PromotionOptionNo { get; set; }

        /// <summary>
        /// The region ID of the instance.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// ResourceGroupId
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The run mode of the instance:
        /// - SharedNothing
        /// - SharedData
        /// - lakehouse
        /// </summary>
        [Input("runMode")]
        public Input<string>? RunMode { get; set; }

        /// <summary>
        /// The status of the instance.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tag list of the instance.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The version of the instance.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// The VPC ID of the instance.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("vswitches")]
        private InputList<Inputs.InstanceVswitchGetArgs>? _vswitches;

        /// <summary>
        /// The VSwitches info of the instance. See `Vswitches` below.
        /// </summary>
        public InputList<Inputs.InstanceVswitchGetArgs> Vswitches
        {
            get => _vswitches ?? (_vswitches = new InputList<Inputs.InstanceVswitchGetArgs>());
            set => _vswitches = value;
        }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
