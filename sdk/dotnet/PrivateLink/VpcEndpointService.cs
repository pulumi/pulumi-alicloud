// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.PrivateLink
{
    /// <summary>
    /// Provides a Private Link Vpc Endpoint Service resource.
    /// 
    /// For information about Private Link Vpc Endpoint Service and how to use it, see [What is Vpc Endpoint Service](https://www.alibabacloud.com/help/en/privatelink/latest/api-privatelink-2020-04-15-createvpcendpointservice).
    /// 
    /// &gt; **NOTE:** Available since v1.109.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var example = new AliCloud.PrivateLink.VpcEndpointService("example", new()
    ///     {
    ///         ServiceDescription = name,
    ///         ConnectBandwidth = 103,
    ///         AutoAcceptConnection = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Private Link Vpc Endpoint Service can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:privatelink/vpcEndpointService:VpcEndpointService example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:privatelink/vpcEndpointService:VpcEndpointService")]
    public partial class VpcEndpointService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
        /// - **true**
        /// - **false**.
        /// </summary>
        [Output("autoAcceptConnection")]
        public Output<bool?> AutoAcceptConnection { get; private set; } = null!;

        /// <summary>
        /// The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
        /// </summary>
        [Output("connectBandwidth")]
        public Output<int> ConnectBandwidth { get; private set; } = null!;

        /// <summary>
        /// The time when the endpoint service was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to perform only a dry run, without performing the actual request.
        /// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
        /// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// The payer of the endpoint service. Valid values:
        /// - **Endpoint**: the service consumer.
        /// - **EndpointService**: the service provider.
        /// </summary>
        [Output("payer")]
        public Output<string> Payer { get; private set; } = null!;

        /// <summary>
        /// The resource group ID.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The service state of the endpoint service.
        /// </summary>
        [Output("serviceBusinessStatus")]
        public Output<string> ServiceBusinessStatus { get; private set; } = null!;

        /// <summary>
        /// The description of the endpoint service.
        /// </summary>
        [Output("serviceDescription")]
        public Output<string?> ServiceDescription { get; private set; } = null!;

        /// <summary>
        /// The domain name of the endpoint service.
        /// </summary>
        [Output("serviceDomain")]
        public Output<string> ServiceDomain { get; private set; } = null!;

        /// <summary>
        /// Service resource type, value:
        /// - **slb**: indicates that the service resource type is Classic Load Balancer (CLB).
        /// - **alb**: indicates that the service resource type is Application Load Balancer (ALB).
        /// - **nlb**: indicates that the service resource type is Network Load Balancer (NLB).
        /// </summary>
        [Output("serviceResourceType")]
        public Output<string> ServiceResourceType { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable IPv6 for the endpoint service. Valid values:
        /// - **true**
        /// - **false (default)**.
        /// </summary>
        [Output("serviceSupportIpv6")]
        public Output<bool> ServiceSupportIpv6 { get; private set; } = null!;

        /// <summary>
        /// The state of the endpoint service.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The list of tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The name of the endpoint service.
        /// </summary>
        [Output("vpcEndpointServiceName")]
        public Output<string> VpcEndpointServiceName { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
        /// - **true**
        /// - **false (default)**.
        /// </summary>
        [Output("zoneAffinityEnabled")]
        public Output<bool> ZoneAffinityEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpointService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpointService(string name, VpcEndpointServiceArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:privatelink/vpcEndpointService:VpcEndpointService", name, args ?? new VpcEndpointServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpointService(string name, Input<string> id, VpcEndpointServiceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:privatelink/vpcEndpointService:VpcEndpointService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpointService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpointService Get(string name, Input<string> id, VpcEndpointServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcEndpointService(name, id, state, options);
        }
    }

    public sealed class VpcEndpointServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
        /// - **true**
        /// - **false**.
        /// </summary>
        [Input("autoAcceptConnection")]
        public Input<bool>? AutoAcceptConnection { get; set; }

        /// <summary>
        /// The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
        /// </summary>
        [Input("connectBandwidth")]
        public Input<int>? ConnectBandwidth { get; set; }

        /// <summary>
        /// Specifies whether to perform only a dry run, without performing the actual request.
        /// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
        /// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The payer of the endpoint service. Valid values:
        /// - **Endpoint**: the service consumer.
        /// - **EndpointService**: the service provider.
        /// </summary>
        [Input("payer")]
        public Input<string>? Payer { get; set; }

        /// <summary>
        /// The resource group ID.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The description of the endpoint service.
        /// </summary>
        [Input("serviceDescription")]
        public Input<string>? ServiceDescription { get; set; }

        /// <summary>
        /// Service resource type, value:
        /// - **slb**: indicates that the service resource type is Classic Load Balancer (CLB).
        /// - **alb**: indicates that the service resource type is Application Load Balancer (ALB).
        /// - **nlb**: indicates that the service resource type is Network Load Balancer (NLB).
        /// </summary>
        [Input("serviceResourceType")]
        public Input<string>? ServiceResourceType { get; set; }

        /// <summary>
        /// Specifies whether to enable IPv6 for the endpoint service. Valid values:
        /// - **true**
        /// - **false (default)**.
        /// </summary>
        [Input("serviceSupportIpv6")]
        public Input<bool>? ServiceSupportIpv6 { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The list of tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
        /// - **true**
        /// - **false (default)**.
        /// </summary>
        [Input("zoneAffinityEnabled")]
        public Input<bool>? ZoneAffinityEnabled { get; set; }

        public VpcEndpointServiceArgs()
        {
        }
        public static new VpcEndpointServiceArgs Empty => new VpcEndpointServiceArgs();
    }

    public sealed class VpcEndpointServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
        /// - **true**
        /// - **false**.
        /// </summary>
        [Input("autoAcceptConnection")]
        public Input<bool>? AutoAcceptConnection { get; set; }

        /// <summary>
        /// The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
        /// </summary>
        [Input("connectBandwidth")]
        public Input<int>? ConnectBandwidth { get; set; }

        /// <summary>
        /// The time when the endpoint service was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Specifies whether to perform only a dry run, without performing the actual request.
        /// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
        /// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The payer of the endpoint service. Valid values:
        /// - **Endpoint**: the service consumer.
        /// - **EndpointService**: the service provider.
        /// </summary>
        [Input("payer")]
        public Input<string>? Payer { get; set; }

        /// <summary>
        /// The resource group ID.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The service state of the endpoint service.
        /// </summary>
        [Input("serviceBusinessStatus")]
        public Input<string>? ServiceBusinessStatus { get; set; }

        /// <summary>
        /// The description of the endpoint service.
        /// </summary>
        [Input("serviceDescription")]
        public Input<string>? ServiceDescription { get; set; }

        /// <summary>
        /// The domain name of the endpoint service.
        /// </summary>
        [Input("serviceDomain")]
        public Input<string>? ServiceDomain { get; set; }

        /// <summary>
        /// Service resource type, value:
        /// - **slb**: indicates that the service resource type is Classic Load Balancer (CLB).
        /// - **alb**: indicates that the service resource type is Application Load Balancer (ALB).
        /// - **nlb**: indicates that the service resource type is Network Load Balancer (NLB).
        /// </summary>
        [Input("serviceResourceType")]
        public Input<string>? ServiceResourceType { get; set; }

        /// <summary>
        /// Specifies whether to enable IPv6 for the endpoint service. Valid values:
        /// - **true**
        /// - **false (default)**.
        /// </summary>
        [Input("serviceSupportIpv6")]
        public Input<bool>? ServiceSupportIpv6 { get; set; }

        /// <summary>
        /// The state of the endpoint service.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The list of tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the endpoint service.
        /// </summary>
        [Input("vpcEndpointServiceName")]
        public Input<string>? VpcEndpointServiceName { get; set; }

        /// <summary>
        /// Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
        /// - **true**
        /// - **false (default)**.
        /// </summary>
        [Input("zoneAffinityEnabled")]
        public Input<bool>? ZoneAffinityEnabled { get; set; }

        public VpcEndpointServiceState()
        {
        }
        public static new VpcEndpointServiceState Empty => new VpcEndpointServiceState();
    }
}
