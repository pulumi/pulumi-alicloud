// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sae
{
    /// <summary>
    /// Provides a Serverless App Engine (SAE) Config Map resource.
    /// 
    /// For information about Serverless App Engine (SAE) Config Map and how to use it, see [What is Config Map](https://help.aliyun.com/document_detail/97792.html).
    /// 
    /// &gt; **NOTE:** Available in v1.130.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var configMapName = config.Get("configMapName") ?? "examplename";
    ///     var exampleNamespace = new AliCloud.Sae.Namespace("exampleNamespace", new()
    ///     {
    ///         NamespaceId = "cn-hangzhou:yourname",
    ///         NamespaceName = "example_value",
    ///         NamespaceDescription = "your_description",
    ///     });
    /// 
    ///     var exampleConfigMap = new AliCloud.Sae.ConfigMap("exampleConfigMap", new()
    ///     {
    ///         Data = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["env.home"] = "/root",
    ///             ["env.shell"] = "/bin/sh",
    ///         }),
    ///         NamespaceId = exampleNamespace.NamespaceId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Serverless App Engine (SAE) Config Map can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:sae/configMap:ConfigMap example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:sae/configMap:ConfigMap")]
    public partial class ConfigMap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ConfigMap instance data.
        /// </summary>
        [Output("data")]
        public Output<string> Data { get; private set; } = null!;

        /// <summary>
        /// The Description of ConfigMap.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// ConfigMap instance name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The NamespaceId of ConfigMap.It can contain 2 to 32 lowercase characters.The value is in format `{RegionId}:{namespace}`
        /// </summary>
        [Output("namespaceId")]
        public Output<string> NamespaceId { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigMap(string name, ConfigMapArgs args, CustomResourceOptions? options = null)
            : base("alicloud:sae/configMap:ConfigMap", name, args ?? new ConfigMapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigMap(string name, Input<string> id, ConfigMapState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:sae/configMap:ConfigMap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigMap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigMap Get(string name, Input<string> id, ConfigMapState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigMap(name, id, state, options);
        }
    }

    public sealed class ConfigMapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ConfigMap instance data.
        /// </summary>
        [Input("data", required: true)]
        public Input<string> Data { get; set; } = null!;

        /// <summary>
        /// The Description of ConfigMap.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ConfigMap instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NamespaceId of ConfigMap.It can contain 2 to 32 lowercase characters.The value is in format `{RegionId}:{namespace}`
        /// </summary>
        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        public ConfigMapArgs()
        {
        }
        public static new ConfigMapArgs Empty => new ConfigMapArgs();
    }

    public sealed class ConfigMapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ConfigMap instance data.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The Description of ConfigMap.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ConfigMap instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NamespaceId of ConfigMap.It can contain 2 to 32 lowercase characters.The value is in format `{RegionId}:{namespace}`
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        public ConfigMapState()
        {
        }
        public static new ConfigMapState Empty => new ConfigMapState();
    }
}
