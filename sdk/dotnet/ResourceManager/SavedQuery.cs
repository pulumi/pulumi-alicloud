// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ResourceManager
{
    /// <summary>
    /// Provides a Resource Manager Saved Query resource. ResourceCenter Saved Query.
    /// 
    /// For information about Resource Manager Saved Query and how to use it, see [What is Saved Query](https://www.alibabacloud.com/help/zh/resource-management/developer-reference/api-resourcecenter-2022-12-01-createsavedquery).
    /// 
    /// &gt; **NOTE:** Available since v1.212.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.ResourceManager.SavedQuery("default", new()
    ///     {
    ///         Description = name,
    ///         Expression = "select * from resources limit 1;",
    ///         SavedQueryName = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource Manager Saved Query can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:resourcemanager/savedQuery:SavedQuery example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:resourcemanager/savedQuery:SavedQuery")]
    public partial class SavedQuery : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Query Description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Query Expression.
        /// </summary>
        [Output("expression")]
        public Output<string> Expression { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("savedQueryName")]
        public Output<string> SavedQueryName { get; private set; } = null!;


        /// <summary>
        /// Create a SavedQuery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SavedQuery(string name, SavedQueryArgs args, CustomResourceOptions? options = null)
            : base("alicloud:resourcemanager/savedQuery:SavedQuery", name, args ?? new SavedQueryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SavedQuery(string name, Input<string> id, SavedQueryState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:resourcemanager/savedQuery:SavedQuery", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SavedQuery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SavedQuery Get(string name, Input<string> id, SavedQueryState? state = null, CustomResourceOptions? options = null)
        {
            return new SavedQuery(name, id, state, options);
        }
    }

    public sealed class SavedQueryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Query Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Query Expression.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("savedQueryName", required: true)]
        public Input<string> SavedQueryName { get; set; } = null!;

        public SavedQueryArgs()
        {
        }
        public static new SavedQueryArgs Empty => new SavedQueryArgs();
    }

    public sealed class SavedQueryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Query Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Query Expression.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("savedQueryName")]
        public Input<string>? SavedQueryName { get; set; }

        public SavedQueryState()
        {
        }
        public static new SavedQueryState Empty => new SavedQueryState();
    }
}
