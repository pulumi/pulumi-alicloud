// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ResourceManager
{
    /// <summary>
    /// Provides a Resource Manager Message Contact resource.
    /// 
    /// Message contact for Resource Directory account.
    /// 
    /// For information about Resource Manager Message Contact and how to use it, see [What is Message Contact](https://next.api.alibabacloud.com/document/ResourceDirectoryMaster/2022-04-19/AddMessageContact).
    /// 
    /// &gt; **NOTE:** Available since v1.259.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.ResourceManager.MessageContact("default", new()
    ///     {
    ///         MessageTypes = new[]
    ///         {
    ///             "AccountExpenses",
    ///         },
    ///         PhoneNumber = "86-18626811111",
    ///         Title = "TechnicalDirector",
    ///         EmailAddress = "resourceexample@126.com",
    ///         MessageContactName = "example",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource Manager Message Contact can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:resourcemanager/messageContact:MessageContact example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:resourcemanager/messageContact:MessageContact")]
    public partial class MessageContact : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when the contact was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The email address of the contact.
        /// After you specify an email address, you need to call SendEmailVerificationForMessageContact to send verification information to the email address. After the verification is passed, the email address takes effect.
        /// </summary>
        [Output("emailAddress")]
        public Output<string> EmailAddress { get; private set; } = null!;

        /// <summary>
        /// The name of the contact.
        /// The name must be unique in your resource directory.
        /// The name must be 2 to 12 characters in length and can contain only letters.
        /// </summary>
        [Output("messageContactName")]
        public Output<string> MessageContactName { get; private set; } = null!;

        /// <summary>
        /// The types of messages received by the contact.
        /// </summary>
        [Output("messageTypes")]
        public Output<ImmutableArray<string>> MessageTypes { get; private set; } = null!;

        /// <summary>
        /// The mobile phone number of the contact.
        /// 
        /// Specify the mobile phone number in the `-` format.
        /// 
        /// &gt; **NOTE:**  Only mobile phone numbers in the `86-` format in the Chinese mainland are supported.
        /// 
        /// After you specify a mobile phone number, you need to call SendPhoneVerificationForMessageContact to send verification information to the mobile phone number. After the verification is passed, the mobile phone number takes effect.
        /// </summary>
        [Output("phoneNumber")]
        public Output<string?> PhoneNumber { get; private set; } = null!;

        /// <summary>
        /// The status of the contact.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The job title of the contact.Valid values:
        /// - FinanceDirector
        /// - TechnicalDirector
        /// - MaintenanceDirector
        /// - CEO
        /// - ProjectDirector
        /// - Other
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a MessageContact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MessageContact(string name, MessageContactArgs args, CustomResourceOptions? options = null)
            : base("alicloud:resourcemanager/messageContact:MessageContact", name, args ?? new MessageContactArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MessageContact(string name, Input<string> id, MessageContactState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:resourcemanager/messageContact:MessageContact", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MessageContact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MessageContact Get(string name, Input<string> id, MessageContactState? state = null, CustomResourceOptions? options = null)
        {
            return new MessageContact(name, id, state, options);
        }
    }

    public sealed class MessageContactArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the contact.
        /// After you specify an email address, you need to call SendEmailVerificationForMessageContact to send verification information to the email address. After the verification is passed, the email address takes effect.
        /// </summary>
        [Input("emailAddress", required: true)]
        public Input<string> EmailAddress { get; set; } = null!;

        /// <summary>
        /// The name of the contact.
        /// The name must be unique in your resource directory.
        /// The name must be 2 to 12 characters in length and can contain only letters.
        /// </summary>
        [Input("messageContactName", required: true)]
        public Input<string> MessageContactName { get; set; } = null!;

        [Input("messageTypes", required: true)]
        private InputList<string>? _messageTypes;

        /// <summary>
        /// The types of messages received by the contact.
        /// </summary>
        public InputList<string> MessageTypes
        {
            get => _messageTypes ?? (_messageTypes = new InputList<string>());
            set => _messageTypes = value;
        }

        /// <summary>
        /// The mobile phone number of the contact.
        /// 
        /// Specify the mobile phone number in the `-` format.
        /// 
        /// &gt; **NOTE:**  Only mobile phone numbers in the `86-` format in the Chinese mainland are supported.
        /// 
        /// After you specify a mobile phone number, you need to call SendPhoneVerificationForMessageContact to send verification information to the mobile phone number. After the verification is passed, the mobile phone number takes effect.
        /// </summary>
        [Input("phoneNumber")]
        public Input<string>? PhoneNumber { get; set; }

        /// <summary>
        /// The job title of the contact.Valid values:
        /// - FinanceDirector
        /// - TechnicalDirector
        /// - MaintenanceDirector
        /// - CEO
        /// - ProjectDirector
        /// - Other
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public MessageContactArgs()
        {
        }
        public static new MessageContactArgs Empty => new MessageContactArgs();
    }

    public sealed class MessageContactState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the contact was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The email address of the contact.
        /// After you specify an email address, you need to call SendEmailVerificationForMessageContact to send verification information to the email address. After the verification is passed, the email address takes effect.
        /// </summary>
        [Input("emailAddress")]
        public Input<string>? EmailAddress { get; set; }

        /// <summary>
        /// The name of the contact.
        /// The name must be unique in your resource directory.
        /// The name must be 2 to 12 characters in length and can contain only letters.
        /// </summary>
        [Input("messageContactName")]
        public Input<string>? MessageContactName { get; set; }

        [Input("messageTypes")]
        private InputList<string>? _messageTypes;

        /// <summary>
        /// The types of messages received by the contact.
        /// </summary>
        public InputList<string> MessageTypes
        {
            get => _messageTypes ?? (_messageTypes = new InputList<string>());
            set => _messageTypes = value;
        }

        /// <summary>
        /// The mobile phone number of the contact.
        /// 
        /// Specify the mobile phone number in the `-` format.
        /// 
        /// &gt; **NOTE:**  Only mobile phone numbers in the `86-` format in the Chinese mainland are supported.
        /// 
        /// After you specify a mobile phone number, you need to call SendPhoneVerificationForMessageContact to send verification information to the mobile phone number. After the verification is passed, the mobile phone number takes effect.
        /// </summary>
        [Input("phoneNumber")]
        public Input<string>? PhoneNumber { get; set; }

        /// <summary>
        /// The status of the contact.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The job title of the contact.Valid values:
        /// - FinanceDirector
        /// - TechnicalDirector
        /// - MaintenanceDirector
        /// - CEO
        /// - ProjectDirector
        /// - Other
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public MessageContactState()
        {
        }
        public static new MessageContactState Empty => new MessageContactState();
    }
}
