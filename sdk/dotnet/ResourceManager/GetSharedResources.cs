// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ResourceManager
{
    public static class GetSharedResources
    {
        /// <summary>
        /// This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.111.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultResourceShare = new AliCloud.ResourceManager.ResourceShare("default", new()
        ///     {
        ///         ResourceShareName = name,
        ///     });
        /// 
        ///     var defaultSharedResource = new AliCloud.ResourceManager.SharedResource("default", new()
        ///     {
        ///         ResourceShareId = defaultResourceShare.Id,
        ///         ResourceId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
        ///         ResourceType = "VSwitch",
        ///     });
        /// 
        ///     var ids = AliCloud.ResourceManager.GetSharedResources.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             Std.Format.Invoke(new()
        ///             {
        ///                 Input = "%s:%s",
        ///                 Args = new[]
        ///                 {
        ///                     defaultSharedResource.ResourceId,
        ///                     defaultSharedResource.ResourceType,
        ///                 },
        ///             }).Result,
        ///         },
        ///     });
        /// 
        ///     var resourceShareId = AliCloud.ResourceManager.GetSharedResources.Invoke(new()
        ///     {
        ///         ResourceShareId = defaultSharedResource.ResourceShareId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstResourceManagerSharedResourceId"] = ids.Apply(getSharedResourcesResult =&gt; getSharedResourcesResult.Resources[0]?.Id),
        ///         ["secondResourceManagerSharedResourceId"] = resourceShareId.Apply(getSharedResourcesResult =&gt; getSharedResourcesResult.Resources[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSharedResourcesResult> InvokeAsync(GetSharedResourcesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSharedResourcesResult>("alicloud:resourcemanager/getSharedResources:getSharedResources", args ?? new GetSharedResourcesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.111.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultResourceShare = new AliCloud.ResourceManager.ResourceShare("default", new()
        ///     {
        ///         ResourceShareName = name,
        ///     });
        /// 
        ///     var defaultSharedResource = new AliCloud.ResourceManager.SharedResource("default", new()
        ///     {
        ///         ResourceShareId = defaultResourceShare.Id,
        ///         ResourceId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
        ///         ResourceType = "VSwitch",
        ///     });
        /// 
        ///     var ids = AliCloud.ResourceManager.GetSharedResources.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             Std.Format.Invoke(new()
        ///             {
        ///                 Input = "%s:%s",
        ///                 Args = new[]
        ///                 {
        ///                     defaultSharedResource.ResourceId,
        ///                     defaultSharedResource.ResourceType,
        ///                 },
        ///             }).Result,
        ///         },
        ///     });
        /// 
        ///     var resourceShareId = AliCloud.ResourceManager.GetSharedResources.Invoke(new()
        ///     {
        ///         ResourceShareId = defaultSharedResource.ResourceShareId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstResourceManagerSharedResourceId"] = ids.Apply(getSharedResourcesResult =&gt; getSharedResourcesResult.Resources[0]?.Id),
        ///         ["secondResourceManagerSharedResourceId"] = resourceShareId.Apply(getSharedResourcesResult =&gt; getSharedResourcesResult.Resources[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSharedResourcesResult> Invoke(GetSharedResourcesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSharedResourcesResult>("alicloud:resourcemanager/getSharedResources:getSharedResources", args ?? new GetSharedResourcesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.111.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultResourceShare = new AliCloud.ResourceManager.ResourceShare("default", new()
        ///     {
        ///         ResourceShareName = name,
        ///     });
        /// 
        ///     var defaultSharedResource = new AliCloud.ResourceManager.SharedResource("default", new()
        ///     {
        ///         ResourceShareId = defaultResourceShare.Id,
        ///         ResourceId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
        ///         ResourceType = "VSwitch",
        ///     });
        /// 
        ///     var ids = AliCloud.ResourceManager.GetSharedResources.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             Std.Format.Invoke(new()
        ///             {
        ///                 Input = "%s:%s",
        ///                 Args = new[]
        ///                 {
        ///                     defaultSharedResource.ResourceId,
        ///                     defaultSharedResource.ResourceType,
        ///                 },
        ///             }).Result,
        ///         },
        ///     });
        /// 
        ///     var resourceShareId = AliCloud.ResourceManager.GetSharedResources.Invoke(new()
        ///     {
        ///         ResourceShareId = defaultSharedResource.ResourceShareId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstResourceManagerSharedResourceId"] = ids.Apply(getSharedResourcesResult =&gt; getSharedResourcesResult.Resources[0]?.Id),
        ///         ["secondResourceManagerSharedResourceId"] = resourceShareId.Apply(getSharedResourcesResult =&gt; getSharedResourcesResult.Resources[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSharedResourcesResult> Invoke(GetSharedResourcesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSharedResourcesResult>("alicloud:resourcemanager/getSharedResources:getSharedResources", args ?? new GetSharedResourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSharedResourcesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of shared resource IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The resource share ID of resource manager.
        /// </summary>
        [Input("resourceShareId")]
        public string? ResourceShareId { get; set; }

        /// <summary>
        /// The status of share resource. Valid values: `Associated`, `Associating`, `Disassociated`, `Disassociating` and `Failed`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetSharedResourcesArgs()
        {
        }
        public static new GetSharedResourcesArgs Empty => new GetSharedResourcesArgs();
    }

    public sealed class GetSharedResourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of shared resource IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The resource share ID of resource manager.
        /// </summary>
        [Input("resourceShareId")]
        public Input<string>? ResourceShareId { get; set; }

        /// <summary>
        /// The status of share resource. Valid values: `Associated`, `Associating`, `Disassociated`, `Disassociating` and `Failed`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetSharedResourcesInvokeArgs()
        {
        }
        public static new GetSharedResourcesInvokeArgs Empty => new GetSharedResourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSharedResourcesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The resource share ID of resource manager.
        /// </summary>
        public readonly string? ResourceShareId;
        /// <summary>
        /// A list of Resource Manager Shared Resources. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSharedResourcesResourceResult> Resources;
        /// <summary>
        /// The status of shared resource.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetSharedResourcesResult(
            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string? resourceShareId,

            ImmutableArray<Outputs.GetSharedResourcesResourceResult> resources,

            string? status)
        {
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            ResourceShareId = resourceShareId;
            Resources = resources;
            Status = status;
        }
    }
}
