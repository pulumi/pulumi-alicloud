// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ResourceManager
{
    public static class GetSharedResources
    {
        /// <summary>
        /// This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.111.0.
        /// </summary>
        public static Task<GetSharedResourcesResult> InvokeAsync(GetSharedResourcesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSharedResourcesResult>("alicloud:resourcemanager/getSharedResources:getSharedResources", args ?? new GetSharedResourcesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.111.0.
        /// </summary>
        public static Output<GetSharedResourcesResult> Invoke(GetSharedResourcesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSharedResourcesResult>("alicloud:resourcemanager/getSharedResources:getSharedResources", args ?? new GetSharedResourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSharedResourcesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of shared resource IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The resource share ID of resource manager.
        /// </summary>
        [Input("resourceShareId")]
        public string? ResourceShareId { get; set; }

        /// <summary>
        /// The status of share resource. Valid values: `Associated`, `Associating`, `Disassociated`, `Disassociating` and `Failed`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetSharedResourcesArgs()
        {
        }
        public static new GetSharedResourcesArgs Empty => new GetSharedResourcesArgs();
    }

    public sealed class GetSharedResourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of shared resource IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The resource share ID of resource manager.
        /// </summary>
        [Input("resourceShareId")]
        public Input<string>? ResourceShareId { get; set; }

        /// <summary>
        /// The status of share resource. Valid values: `Associated`, `Associating`, `Disassociated`, `Disassociating` and `Failed`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetSharedResourcesInvokeArgs()
        {
        }
        public static new GetSharedResourcesInvokeArgs Empty => new GetSharedResourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSharedResourcesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The resource share ID of resource manager.
        /// </summary>
        public readonly string? ResourceShareId;
        /// <summary>
        /// A list of Resource Manager Shared Resources. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSharedResourcesResourceResult> Resources;
        /// <summary>
        /// The status of shared resource.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetSharedResourcesResult(
            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string? resourceShareId,

            ImmutableArray<Outputs.GetSharedResourcesResourceResult> resources,

            string? status)
        {
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            ResourceShareId = resourceShareId;
            Resources = resources;
            Status = status;
        }
    }
}
