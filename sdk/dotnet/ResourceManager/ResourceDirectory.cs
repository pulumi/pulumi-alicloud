// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ResourceManager
{
    /// <summary>
    /// Provides a Resource Manager Resource Directory resource.
    /// 
    /// For information about Resource Manager Resource Directory and how to use it, see [What is Resource Directory](https://www.alibabacloud.com/help/en/doc-detail/94475.htm).
    /// 
    /// &gt; **NOTE:** Available since v1.84.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = AliCloud.ResourceManager.GetResourceDirectories.Invoke();
    /// 
    ///     var defaultResourceDirectory = new List&lt;AliCloud.ResourceManager.ResourceDirectory&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; @default.Apply(@default =&gt; @default.Apply(getResourceDirectoriesResult =&gt; getResourceDirectoriesResult.Directories)).Length.Apply(length =&gt; length &gt; 0 ? 0 : 1); rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         defaultResourceDirectory.Add(new AliCloud.ResourceManager.ResourceDirectory($"default-{range.Value}", new()
    ///         {
    ///             Status = "Enabled",
    ///         }));
    ///     }
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource Manager Resource Directory can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:resourcemanager/resourceDirectory:ResourceDirectory example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:resourcemanager/resourceDirectory:ResourceDirectory")]
    public partial class ResourceDirectory : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when the resource directory was created
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the master account
        /// </summary>
        [Output("masterAccountId")]
        public Output<string> MasterAccountId { get; private set; } = null!;

        /// <summary>
        /// The name of the master account
        /// </summary>
        [Output("masterAccountName")]
        public Output<string> MasterAccountName { get; private set; } = null!;

        /// <summary>
        /// The status of the Member Display Name Synchronization feature. Valid values:
        /// - Enabled
        /// - Disabled
        /// </summary>
        [Output("memberAccountDisplayNameSyncStatus")]
        public Output<string> MemberAccountDisplayNameSyncStatus { get; private set; } = null!;

        /// <summary>
        /// The status of the member deletion feature. Valid values:
        /// - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
        /// - Disabled: The feature is disabled. You cannot delete members of the resource account type.
        /// </summary>
        [Output("memberDeletionStatus")]
        public Output<string> MemberDeletionStatus { get; private set; } = null!;

        /// <summary>
        /// The ID of the root folder
        /// </summary>
        [Output("rootFolderId")]
        public Output<string> RootFolderId { get; private set; } = null!;

        /// <summary>
        /// ScpStatus
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ResourceDirectory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourceDirectory(string name, ResourceDirectoryArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:resourcemanager/resourceDirectory:ResourceDirectory", name, args ?? new ResourceDirectoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourceDirectory(string name, Input<string> id, ResourceDirectoryState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:resourcemanager/resourceDirectory:ResourceDirectory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourceDirectory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourceDirectory Get(string name, Input<string> id, ResourceDirectoryState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourceDirectory(name, id, state, options);
        }
    }

    public sealed class ResourceDirectoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The status of the Member Display Name Synchronization feature. Valid values:
        /// - Enabled
        /// - Disabled
        /// </summary>
        [Input("memberAccountDisplayNameSyncStatus")]
        public Input<string>? MemberAccountDisplayNameSyncStatus { get; set; }

        /// <summary>
        /// The status of the member deletion feature. Valid values:
        /// - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
        /// - Disabled: The feature is disabled. You cannot delete members of the resource account type.
        /// </summary>
        [Input("memberDeletionStatus")]
        public Input<string>? MemberDeletionStatus { get; set; }

        /// <summary>
        /// ScpStatus
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ResourceDirectoryArgs()
        {
        }
        public static new ResourceDirectoryArgs Empty => new ResourceDirectoryArgs();
    }

    public sealed class ResourceDirectoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the resource directory was created
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the master account
        /// </summary>
        [Input("masterAccountId")]
        public Input<string>? MasterAccountId { get; set; }

        /// <summary>
        /// The name of the master account
        /// </summary>
        [Input("masterAccountName")]
        public Input<string>? MasterAccountName { get; set; }

        /// <summary>
        /// The status of the Member Display Name Synchronization feature. Valid values:
        /// - Enabled
        /// - Disabled
        /// </summary>
        [Input("memberAccountDisplayNameSyncStatus")]
        public Input<string>? MemberAccountDisplayNameSyncStatus { get; set; }

        /// <summary>
        /// The status of the member deletion feature. Valid values:
        /// - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
        /// - Disabled: The feature is disabled. You cannot delete members of the resource account type.
        /// </summary>
        [Input("memberDeletionStatus")]
        public Input<string>? MemberDeletionStatus { get; set; }

        /// <summary>
        /// The ID of the root folder
        /// </summary>
        [Input("rootFolderId")]
        public Input<string>? RootFolderId { get; set; }

        /// <summary>
        /// ScpStatus
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ResourceDirectoryState()
        {
        }
        public static new ResourceDirectoryState Empty => new ResourceDirectoryState();
    }
}
