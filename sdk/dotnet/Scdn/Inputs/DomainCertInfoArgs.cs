// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Scdn.Inputs
{

    public sealed class DomainCertInfoArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If You Enable HTTPS Here Certificate Name.
        /// </summary>
        [Input("certName")]
        public Input<string>? CertName { get; set; }

        /// <summary>
        /// Certificate Type. Value Range: 
        /// * upload: Certificate
        /// * cas: Certificate Authority Certificate.
        /// * free: Free Certificate.
        /// </summary>
        [Input("certType")]
        public Input<string>? CertType { get; set; }

        [Input("sslPri")]
        private Input<string>? _sslPri;

        /// <summary>
        /// Private Key. Do Not Enable Certificate without Entering a User Name and Configure Certificates Enter Private Key.
        /// </summary>
        public Input<string>? SslPri
        {
            get => _sslPri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslPri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether to Enable SSL Certificate. Valid Values: on, off. Valid values: `on`, `off`.
        /// </summary>
        [Input("sslProtocol")]
        public Input<string>? SslProtocol { get; set; }

        /// <summary>
        /// If You Enable HTTPS Here Key.
        /// </summary>
        [Input("sslPub")]
        public Input<string>? SslPub { get; set; }

        public DomainCertInfoArgs()
        {
        }
        public static new DomainCertInfoArgs Empty => new DomainCertInfoArgs();
    }
}
