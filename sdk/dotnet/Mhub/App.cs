// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Mhub
{
    /// <summary>
    /// Provides a MHUB App resource.
    /// 
    /// For information about MHUB App and how to use it, see [What is App](https://help.aliyun.com/product/65109.html).
    /// 
    /// &gt; **NOTE:** Available in v1.138.0+.
    /// 
    /// &gt; **NOTE:** At present, the resource only supports cn-shanghai region.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "example_value";
    ///     var defaultProduct = new AliCloud.Mhub.Product("defaultProduct", new()
    ///     {
    ///         ProductName = name,
    ///     });
    /// 
    ///     var defaultApp = new AliCloud.Mhub.App("defaultApp", new()
    ///     {
    ///         AppName = name,
    ///         ProductId = defaultProduct.Id,
    ///         PackageName = "com.test.android",
    ///         Type = "Android",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MHUB App can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:mhub/app:App example &lt;product_id&gt;:&lt;app_key&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:mhub/app:App")]
    public partial class App : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AppName.
        /// </summary>
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        /// <summary>
        /// The app id of iOS. **NOTE:** Either `bundle_id` or `package_name` must be set.
        /// </summary>
        [Output("bundleId")]
        public Output<string?> BundleId { get; private set; } = null!;

        /// <summary>
        /// Base64 string of picture.
        /// </summary>
        [Output("encodedIcon")]
        public Output<string?> EncodedIcon { get; private set; } = null!;

        /// <summary>
        /// The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
        /// </summary>
        [Output("industryId")]
        public Output<string> IndustryId { get; private set; } = null!;

        /// <summary>
        /// Android App package name. **NOTE:** Either `bundle_id` or `package_name` must be set.
        /// </summary>
        [Output("packageName")]
        public Output<string?> PackageName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        /// <summary>
        /// The type of the Product. Valid values: `Android` and `iOS`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a App resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public App(string name, AppArgs args, CustomResourceOptions? options = null)
            : base("alicloud:mhub/app:App", name, args ?? new AppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private App(string name, Input<string> id, AppState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:mhub/app:App", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing App resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static App Get(string name, Input<string> id, AppState? state = null, CustomResourceOptions? options = null)
        {
            return new App(name, id, state, options);
        }
    }

    public sealed class AppArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AppName.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// The app id of iOS. **NOTE:** Either `bundle_id` or `package_name` must be set.
        /// </summary>
        [Input("bundleId")]
        public Input<string>? BundleId { get; set; }

        /// <summary>
        /// Base64 string of picture.
        /// </summary>
        [Input("encodedIcon")]
        public Input<string>? EncodedIcon { get; set; }

        /// <summary>
        /// The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
        /// </summary>
        [Input("industryId")]
        public Input<string>? IndustryId { get; set; }

        /// <summary>
        /// Android App package name. **NOTE:** Either `bundle_id` or `package_name` must be set.
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        /// <summary>
        /// The type of the Product. Valid values: `Android` and `iOS`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AppArgs()
        {
        }
        public static new AppArgs Empty => new AppArgs();
    }

    public sealed class AppState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AppName.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// The app id of iOS. **NOTE:** Either `bundle_id` or `package_name` must be set.
        /// </summary>
        [Input("bundleId")]
        public Input<string>? BundleId { get; set; }

        /// <summary>
        /// Base64 string of picture.
        /// </summary>
        [Input("encodedIcon")]
        public Input<string>? EncodedIcon { get; set; }

        /// <summary>
        /// The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
        /// </summary>
        [Input("industryId")]
        public Input<string>? IndustryId { get; set; }

        /// <summary>
        /// Android App package name. **NOTE:** Either `bundle_id` or `package_name` must be set.
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// The type of the Product. Valid values: `Android` and `iOS`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AppState()
        {
        }
        public static new AppState Empty => new AppState();
    }
}
