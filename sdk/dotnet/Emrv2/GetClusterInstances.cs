// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emrv2
{
    public static class GetClusterInstances
    {
        /// <summary>
        /// This data source provides the Emr Cluster ecs instances of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.243.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
        ///     {
        ///         Status = "OK",
        ///     });
        /// 
        ///     var defaultGetZones = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableInstanceType = "ecs.g7.xlarge",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = "TF-VPC",
        ///         CidrBlock = "172.16.0.0/12",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/21",
        ///         ZoneId = defaultGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///         VswitchName = "TF_VSwitch",
        ///     });
        /// 
        ///     var defaultEcsKeyPair = new AliCloud.Ecs.EcsKeyPair("default", new()
        ///     {
        ///         KeyPairName = "terraform-kp",
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         Name = "TF_SECURITY_GROUP",
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultRole = new AliCloud.Ram.Role("default", new()
        ///     {
        ///         Name = "emrtf",
        ///         Document = @"    {
        ///         ""Statement"": [
        ///         {
        ///             ""Action"": ""sts:AssumeRole"",
        ///             ""Effect"": ""Allow"",
        ///             ""Principal"": {
        ///             ""Service"": [
        ///                 ""emr.aliyuncs.com"",
        ///                 ""ecs.aliyuncs.com""
        ///             ]
        ///             }
        ///         }
        ///         ],
        ///         ""Version"": ""1""
        ///     }
        /// ",
        ///         Description = "this is a role test.",
        ///         Force = true,
        ///     });
        /// 
        ///     var defaultCluster = new AliCloud.Emrv2.Cluster("default", new()
        ///     {
        ///         PaymentType = "PayAsYouGo",
        ///         ClusterType = "DATALAKE",
        ///         ReleaseVersion = "EMR-5.10.0",
        ///         ClusterName = "terraform-emr-cluster-v2",
        ///         DeployMode = "NORMAL",
        ///         SecurityMode = "NORMAL",
        ///         Applications = new[]
        ///         {
        ///             "HADOOP-COMMON",
        ///             "HDFS",
        ///             "YARN",
        ///             "HIVE",
        ///             "SPARK3",
        ///             "TEZ",
        ///         },
        ///         ApplicationConfigs = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterApplicationConfigArgs
        ///             {
        ///                 ApplicationName = "HIVE",
        ///                 ConfigFileName = "hivemetastore-site.xml",
        ///                 ConfigItemKey = "hive.metastore.type",
        ///                 ConfigItemValue = "DLF",
        ///                 ConfigScope = "CLUSTER",
        ///             },
        ///             new AliCloud.Emrv2.Inputs.ClusterApplicationConfigArgs
        ///             {
        ///                 ApplicationName = "SPARK3",
        ///                 ConfigFileName = "hive-site.xml",
        ///                 ConfigItemKey = "hive.metastore.type",
        ///                 ConfigItemValue = "DLF",
        ///                 ConfigScope = "CLUSTER",
        ///             },
        ///         },
        ///         NodeAttributes = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeAttributeArgs
        ///             {
        ///                 RamRole = defaultRole.Name,
        ///                 SecurityGroupId = defaultSecurityGroup.Id,
        ///                 VpcId = defaultNetwork.Id,
        ///                 ZoneId = defaultGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///                 KeyPairName = defaultEcsKeyPair.Id,
        ///             },
        ///         },
        ///         Tags = 
        ///         {
        ///             { "created", "tf" },
        ///         },
        ///         NodeGroups = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
        ///             {
        ///                 NodeGroupType = "MASTER",
        ///                 NodeGroupName = "emr-master",
        ///                 PaymentType = "PayAsYouGo",
        ///                 VswitchIds = new[]
        ///                 {
        ///                     defaultSwitch.Id,
        ///                 },
        ///                 WithPublicIp = false,
        ///                 InstanceTypes = new[]
        ///                 {
        ///                     "ecs.g7.xlarge",
        ///                 },
        ///                 NodeCount = 1,
        ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
        ///                 {
        ///                     Category = "cloud_essd",
        ///                     Size = 80,
        ///                     Count = 1,
        ///                 },
        ///                 DataDisks = new[]
        ///                 {
        ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
        ///                     {
        ///                         Category = "cloud_essd",
        ///                         Size = 80,
        ///                         Count = 3,
        ///                     },
        ///                 },
        ///             },
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
        ///             {
        ///                 NodeGroupType = "CORE",
        ///                 NodeGroupName = "emr-core",
        ///                 PaymentType = "PayAsYouGo",
        ///                 VswitchIds = new[]
        ///                 {
        ///                     defaultSwitch.Id,
        ///                 },
        ///                 WithPublicIp = false,
        ///                 InstanceTypes = new[]
        ///                 {
        ///                     "ecs.g7.xlarge",
        ///                 },
        ///                 NodeCount = 3,
        ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
        ///                 {
        ///                     Category = "cloud_essd",
        ///                     Size = 80,
        ///                     Count = 1,
        ///                 },
        ///                 DataDisks = new[]
        ///                 {
        ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
        ///                     {
        ///                         Category = "cloud_essd",
        ///                         Size = 80,
        ///                         Count = 3,
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0])),
        ///     });
        /// 
        ///     var ids = AliCloud.Emrv2.GetClusterInstances.Invoke();
        /// 
        ///     var nodeGroupNames = AliCloud.Emrv2.GetClusterInstances.Invoke(new()
        ///     {
        ///         NodeGroupNames = new[]
        ///         {
        ///             "emr-core",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["emrv2ClusterInstancesId1"] = ids.Apply(getClusterInstancesResult =&gt; getClusterInstancesResult.Instances[0]?.InstanceId),
        ///         ["emrv2ClusterInstancesId2"] = nodeGroupNames.Apply(getClusterInstancesResult =&gt; getClusterInstancesResult.Instances[0]?.InstanceId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetClusterInstancesResult> InvokeAsync(GetClusterInstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterInstancesResult>("alicloud:emrv2/getClusterInstances:getClusterInstances", args ?? new GetClusterInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Emr Cluster ecs instances of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.243.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
        ///     {
        ///         Status = "OK",
        ///     });
        /// 
        ///     var defaultGetZones = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableInstanceType = "ecs.g7.xlarge",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = "TF-VPC",
        ///         CidrBlock = "172.16.0.0/12",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/21",
        ///         ZoneId = defaultGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///         VswitchName = "TF_VSwitch",
        ///     });
        /// 
        ///     var defaultEcsKeyPair = new AliCloud.Ecs.EcsKeyPair("default", new()
        ///     {
        ///         KeyPairName = "terraform-kp",
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         Name = "TF_SECURITY_GROUP",
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultRole = new AliCloud.Ram.Role("default", new()
        ///     {
        ///         Name = "emrtf",
        ///         Document = @"    {
        ///         ""Statement"": [
        ///         {
        ///             ""Action"": ""sts:AssumeRole"",
        ///             ""Effect"": ""Allow"",
        ///             ""Principal"": {
        ///             ""Service"": [
        ///                 ""emr.aliyuncs.com"",
        ///                 ""ecs.aliyuncs.com""
        ///             ]
        ///             }
        ///         }
        ///         ],
        ///         ""Version"": ""1""
        ///     }
        /// ",
        ///         Description = "this is a role test.",
        ///         Force = true,
        ///     });
        /// 
        ///     var defaultCluster = new AliCloud.Emrv2.Cluster("default", new()
        ///     {
        ///         PaymentType = "PayAsYouGo",
        ///         ClusterType = "DATALAKE",
        ///         ReleaseVersion = "EMR-5.10.0",
        ///         ClusterName = "terraform-emr-cluster-v2",
        ///         DeployMode = "NORMAL",
        ///         SecurityMode = "NORMAL",
        ///         Applications = new[]
        ///         {
        ///             "HADOOP-COMMON",
        ///             "HDFS",
        ///             "YARN",
        ///             "HIVE",
        ///             "SPARK3",
        ///             "TEZ",
        ///         },
        ///         ApplicationConfigs = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterApplicationConfigArgs
        ///             {
        ///                 ApplicationName = "HIVE",
        ///                 ConfigFileName = "hivemetastore-site.xml",
        ///                 ConfigItemKey = "hive.metastore.type",
        ///                 ConfigItemValue = "DLF",
        ///                 ConfigScope = "CLUSTER",
        ///             },
        ///             new AliCloud.Emrv2.Inputs.ClusterApplicationConfigArgs
        ///             {
        ///                 ApplicationName = "SPARK3",
        ///                 ConfigFileName = "hive-site.xml",
        ///                 ConfigItemKey = "hive.metastore.type",
        ///                 ConfigItemValue = "DLF",
        ///                 ConfigScope = "CLUSTER",
        ///             },
        ///         },
        ///         NodeAttributes = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeAttributeArgs
        ///             {
        ///                 RamRole = defaultRole.Name,
        ///                 SecurityGroupId = defaultSecurityGroup.Id,
        ///                 VpcId = defaultNetwork.Id,
        ///                 ZoneId = defaultGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///                 KeyPairName = defaultEcsKeyPair.Id,
        ///             },
        ///         },
        ///         Tags = 
        ///         {
        ///             { "created", "tf" },
        ///         },
        ///         NodeGroups = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
        ///             {
        ///                 NodeGroupType = "MASTER",
        ///                 NodeGroupName = "emr-master",
        ///                 PaymentType = "PayAsYouGo",
        ///                 VswitchIds = new[]
        ///                 {
        ///                     defaultSwitch.Id,
        ///                 },
        ///                 WithPublicIp = false,
        ///                 InstanceTypes = new[]
        ///                 {
        ///                     "ecs.g7.xlarge",
        ///                 },
        ///                 NodeCount = 1,
        ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
        ///                 {
        ///                     Category = "cloud_essd",
        ///                     Size = 80,
        ///                     Count = 1,
        ///                 },
        ///                 DataDisks = new[]
        ///                 {
        ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
        ///                     {
        ///                         Category = "cloud_essd",
        ///                         Size = 80,
        ///                         Count = 3,
        ///                     },
        ///                 },
        ///             },
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
        ///             {
        ///                 NodeGroupType = "CORE",
        ///                 NodeGroupName = "emr-core",
        ///                 PaymentType = "PayAsYouGo",
        ///                 VswitchIds = new[]
        ///                 {
        ///                     defaultSwitch.Id,
        ///                 },
        ///                 WithPublicIp = false,
        ///                 InstanceTypes = new[]
        ///                 {
        ///                     "ecs.g7.xlarge",
        ///                 },
        ///                 NodeCount = 3,
        ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
        ///                 {
        ///                     Category = "cloud_essd",
        ///                     Size = 80,
        ///                     Count = 1,
        ///                 },
        ///                 DataDisks = new[]
        ///                 {
        ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
        ///                     {
        ///                         Category = "cloud_essd",
        ///                         Size = 80,
        ///                         Count = 3,
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0])),
        ///     });
        /// 
        ///     var ids = AliCloud.Emrv2.GetClusterInstances.Invoke();
        /// 
        ///     var nodeGroupNames = AliCloud.Emrv2.GetClusterInstances.Invoke(new()
        ///     {
        ///         NodeGroupNames = new[]
        ///         {
        ///             "emr-core",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["emrv2ClusterInstancesId1"] = ids.Apply(getClusterInstancesResult =&gt; getClusterInstancesResult.Instances[0]?.InstanceId),
        ///         ["emrv2ClusterInstancesId2"] = nodeGroupNames.Apply(getClusterInstancesResult =&gt; getClusterInstancesResult.Instances[0]?.InstanceId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetClusterInstancesResult> Invoke(GetClusterInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterInstancesResult>("alicloud:emrv2/getClusterInstances:getClusterInstances", args ?? new GetClusterInstancesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Emr Cluster ecs instances of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.243.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
        ///     {
        ///         Status = "OK",
        ///     });
        /// 
        ///     var defaultGetZones = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableInstanceType = "ecs.g7.xlarge",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = "TF-VPC",
        ///         CidrBlock = "172.16.0.0/12",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/21",
        ///         ZoneId = defaultGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///         VswitchName = "TF_VSwitch",
        ///     });
        /// 
        ///     var defaultEcsKeyPair = new AliCloud.Ecs.EcsKeyPair("default", new()
        ///     {
        ///         KeyPairName = "terraform-kp",
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         Name = "TF_SECURITY_GROUP",
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultRole = new AliCloud.Ram.Role("default", new()
        ///     {
        ///         Name = "emrtf",
        ///         Document = @"    {
        ///         ""Statement"": [
        ///         {
        ///             ""Action"": ""sts:AssumeRole"",
        ///             ""Effect"": ""Allow"",
        ///             ""Principal"": {
        ///             ""Service"": [
        ///                 ""emr.aliyuncs.com"",
        ///                 ""ecs.aliyuncs.com""
        ///             ]
        ///             }
        ///         }
        ///         ],
        ///         ""Version"": ""1""
        ///     }
        /// ",
        ///         Description = "this is a role test.",
        ///         Force = true,
        ///     });
        /// 
        ///     var defaultCluster = new AliCloud.Emrv2.Cluster("default", new()
        ///     {
        ///         PaymentType = "PayAsYouGo",
        ///         ClusterType = "DATALAKE",
        ///         ReleaseVersion = "EMR-5.10.0",
        ///         ClusterName = "terraform-emr-cluster-v2",
        ///         DeployMode = "NORMAL",
        ///         SecurityMode = "NORMAL",
        ///         Applications = new[]
        ///         {
        ///             "HADOOP-COMMON",
        ///             "HDFS",
        ///             "YARN",
        ///             "HIVE",
        ///             "SPARK3",
        ///             "TEZ",
        ///         },
        ///         ApplicationConfigs = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterApplicationConfigArgs
        ///             {
        ///                 ApplicationName = "HIVE",
        ///                 ConfigFileName = "hivemetastore-site.xml",
        ///                 ConfigItemKey = "hive.metastore.type",
        ///                 ConfigItemValue = "DLF",
        ///                 ConfigScope = "CLUSTER",
        ///             },
        ///             new AliCloud.Emrv2.Inputs.ClusterApplicationConfigArgs
        ///             {
        ///                 ApplicationName = "SPARK3",
        ///                 ConfigFileName = "hive-site.xml",
        ///                 ConfigItemKey = "hive.metastore.type",
        ///                 ConfigItemValue = "DLF",
        ///                 ConfigScope = "CLUSTER",
        ///             },
        ///         },
        ///         NodeAttributes = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeAttributeArgs
        ///             {
        ///                 RamRole = defaultRole.Name,
        ///                 SecurityGroupId = defaultSecurityGroup.Id,
        ///                 VpcId = defaultNetwork.Id,
        ///                 ZoneId = defaultGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///                 KeyPairName = defaultEcsKeyPair.Id,
        ///             },
        ///         },
        ///         Tags = 
        ///         {
        ///             { "created", "tf" },
        ///         },
        ///         NodeGroups = new[]
        ///         {
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
        ///             {
        ///                 NodeGroupType = "MASTER",
        ///                 NodeGroupName = "emr-master",
        ///                 PaymentType = "PayAsYouGo",
        ///                 VswitchIds = new[]
        ///                 {
        ///                     defaultSwitch.Id,
        ///                 },
        ///                 WithPublicIp = false,
        ///                 InstanceTypes = new[]
        ///                 {
        ///                     "ecs.g7.xlarge",
        ///                 },
        ///                 NodeCount = 1,
        ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
        ///                 {
        ///                     Category = "cloud_essd",
        ///                     Size = 80,
        ///                     Count = 1,
        ///                 },
        ///                 DataDisks = new[]
        ///                 {
        ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
        ///                     {
        ///                         Category = "cloud_essd",
        ///                         Size = 80,
        ///                         Count = 3,
        ///                     },
        ///                 },
        ///             },
        ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
        ///             {
        ///                 NodeGroupType = "CORE",
        ///                 NodeGroupName = "emr-core",
        ///                 PaymentType = "PayAsYouGo",
        ///                 VswitchIds = new[]
        ///                 {
        ///                     defaultSwitch.Id,
        ///                 },
        ///                 WithPublicIp = false,
        ///                 InstanceTypes = new[]
        ///                 {
        ///                     "ecs.g7.xlarge",
        ///                 },
        ///                 NodeCount = 3,
        ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
        ///                 {
        ///                     Category = "cloud_essd",
        ///                     Size = 80,
        ///                     Count = 1,
        ///                 },
        ///                 DataDisks = new[]
        ///                 {
        ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
        ///                     {
        ///                         Category = "cloud_essd",
        ///                         Size = 80,
        ///                         Count = 3,
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0])),
        ///     });
        /// 
        ///     var ids = AliCloud.Emrv2.GetClusterInstances.Invoke();
        /// 
        ///     var nodeGroupNames = AliCloud.Emrv2.GetClusterInstances.Invoke(new()
        ///     {
        ///         NodeGroupNames = new[]
        ///         {
        ///             "emr-core",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["emrv2ClusterInstancesId1"] = ids.Apply(getClusterInstancesResult =&gt; getClusterInstancesResult.Instances[0]?.InstanceId),
        ///         ["emrv2ClusterInstancesId2"] = nodeGroupNames.Apply(getClusterInstancesResult =&gt; getClusterInstancesResult.Instances[0]?.InstanceId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetClusterInstancesResult> Invoke(GetClusterInstancesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterInstancesResult>("alicloud:emrv2/getClusterInstances:getClusterInstances", args ?? new GetClusterInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The emr cluster ID.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Cluster IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("instanceStates")]
        private List<string>? _instanceStates;

        /// <summary>
        /// The cluster ecs instance states.
        /// </summary>
        public List<string> InstanceStates
        {
            get => _instanceStates ?? (_instanceStates = new List<string>());
            set => _instanceStates = value;
        }

        /// <summary>
        /// The max results is used to list emr cluster ecs instances for next page.
        /// </summary>
        [Input("maxResults")]
        public int? MaxResults { get; set; }

        /// <summary>
        /// The next token is used to list emr cluster ecs instances for next page.
        /// </summary>
        [Input("nextToken")]
        public string? NextToken { get; set; }

        [Input("nodeGroupIds")]
        private List<string>? _nodeGroupIds;

        /// <summary>
        /// The cluster node group ids.
        /// </summary>
        public List<string> NodeGroupIds
        {
            get => _nodeGroupIds ?? (_nodeGroupIds = new List<string>());
            set => _nodeGroupIds = value;
        }

        [Input("nodeGroupNames")]
        private List<string>? _nodeGroupNames;

        /// <summary>
        /// The cluster node group names.
        /// </summary>
        public List<string> NodeGroupNames
        {
            get => _nodeGroupNames ?? (_nodeGroupNames = new List<string>());
            set => _nodeGroupNames = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetClusterInstancesArgs()
        {
        }
        public static new GetClusterInstancesArgs Empty => new GetClusterInstancesArgs();
    }

    public sealed class GetClusterInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The emr cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Cluster IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("instanceStates")]
        private InputList<string>? _instanceStates;

        /// <summary>
        /// The cluster ecs instance states.
        /// </summary>
        public InputList<string> InstanceStates
        {
            get => _instanceStates ?? (_instanceStates = new InputList<string>());
            set => _instanceStates = value;
        }

        /// <summary>
        /// The max results is used to list emr cluster ecs instances for next page.
        /// </summary>
        [Input("maxResults")]
        public Input<int>? MaxResults { get; set; }

        /// <summary>
        /// The next token is used to list emr cluster ecs instances for next page.
        /// </summary>
        [Input("nextToken")]
        public Input<string>? NextToken { get; set; }

        [Input("nodeGroupIds")]
        private InputList<string>? _nodeGroupIds;

        /// <summary>
        /// The cluster node group ids.
        /// </summary>
        public InputList<string> NodeGroupIds
        {
            get => _nodeGroupIds ?? (_nodeGroupIds = new InputList<string>());
            set => _nodeGroupIds = value;
        }

        [Input("nodeGroupNames")]
        private InputList<string>? _nodeGroupNames;

        /// <summary>
        /// The cluster node group names.
        /// </summary>
        public InputList<string> NodeGroupNames
        {
            get => _nodeGroupNames ?? (_nodeGroupNames = new InputList<string>());
            set => _nodeGroupNames = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetClusterInstancesInvokeArgs()
        {
        }
        public static new GetClusterInstancesInvokeArgs Empty => new GetClusterInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterInstancesResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Cluster ecs instance IDS.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly ImmutableArray<string> InstanceStates;
        /// <summary>
        /// A list of Emr Cluster ecs instances. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterInstancesInstanceResult> Instances;
        public readonly int? MaxResults;
        /// <summary>
        /// A list of Cluster ecs instance names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string NextToken;
        public readonly ImmutableArray<string> NodeGroupIds;
        public readonly ImmutableArray<string> NodeGroupNames;
        public readonly string? OutputFile;
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The total count of list emr cluster ecs instances.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetClusterInstancesResult(
            string clusterId,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<string> instanceStates,

            ImmutableArray<Outputs.GetClusterInstancesInstanceResult> instances,

            int? maxResults,

            ImmutableArray<string> names,

            string nextToken,

            ImmutableArray<string> nodeGroupIds,

            ImmutableArray<string> nodeGroupNames,

            string? outputFile,

            ImmutableDictionary<string, string>? tags,

            int totalCount)
        {
            ClusterId = clusterId;
            Id = id;
            Ids = ids;
            InstanceStates = instanceStates;
            Instances = instances;
            MaxResults = maxResults;
            Names = names;
            NextToken = nextToken;
            NodeGroupIds = nodeGroupIds;
            NodeGroupNames = nodeGroupNames;
            OutputFile = outputFile;
            Tags = tags;
            TotalCount = totalCount;
        }
    }
}
