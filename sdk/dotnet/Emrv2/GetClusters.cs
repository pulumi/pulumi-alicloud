// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emrv2
{
    public static class GetClusters
    {
        /// <summary>
        /// This data source provides the Emr Clusters of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.199.0+.
        /// </summary>
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("alicloud:emrv2/getClusters:getClusters", args ?? new GetClustersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Emr Clusters of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.199.0+.
        /// </summary>
        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClustersResult>("alicloud:emrv2/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClustersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster name.
        /// </summary>
        [Input("clusterName")]
        public string? ClusterName { get; set; }

        [Input("clusterStates")]
        private List<string>? _clusterStates;

        /// <summary>
        /// The cluster states.
        /// </summary>
        public List<string> ClusterStates
        {
            get => _clusterStates ?? (_clusterStates = new List<string>());
            set => _clusterStates = value;
        }

        [Input("clusterTypes")]
        private List<string>? _clusterTypes;

        /// <summary>
        /// The cluster types.
        /// </summary>
        public List<string> ClusterTypes
        {
            get => _clusterTypes ?? (_clusterTypes = new List<string>());
            set => _clusterTypes = value;
        }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Cluster IDS.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The max results is used to list clusters for next page.
        /// </summary>
        [Input("maxResults")]
        public int? MaxResults { get; set; }

        /// <summary>
        /// A regex string to filter results by Cluster name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// The next token is used to list clusters for next page.
        /// </summary>
        [Input("nextToken")]
        public string? NextToken { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("paymentTypes")]
        private List<string>? _paymentTypes;

        /// <summary>
        /// The cluster payment types.
        /// </summary>
        public List<string> PaymentTypes
        {
            get => _paymentTypes ?? (_paymentTypes = new List<string>());
            set => _paymentTypes = value;
        }

        /// <summary>
        /// The Resource Group ID.
        /// </summary>
        [Input("resourceGroupId")]
        public string? ResourceGroupId { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetClustersArgs()
        {
        }
        public static new GetClustersArgs Empty => new GetClustersArgs();
    }

    public sealed class GetClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster name.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("clusterStates")]
        private InputList<string>? _clusterStates;

        /// <summary>
        /// The cluster states.
        /// </summary>
        public InputList<string> ClusterStates
        {
            get => _clusterStates ?? (_clusterStates = new InputList<string>());
            set => _clusterStates = value;
        }

        [Input("clusterTypes")]
        private InputList<string>? _clusterTypes;

        /// <summary>
        /// The cluster types.
        /// </summary>
        public InputList<string> ClusterTypes
        {
            get => _clusterTypes ?? (_clusterTypes = new InputList<string>());
            set => _clusterTypes = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Cluster IDS.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The max results is used to list clusters for next page.
        /// </summary>
        [Input("maxResults")]
        public Input<int>? MaxResults { get; set; }

        /// <summary>
        /// A regex string to filter results by Cluster name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// The next token is used to list clusters for next page.
        /// </summary>
        [Input("nextToken")]
        public Input<string>? NextToken { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("paymentTypes")]
        private InputList<string>? _paymentTypes;

        /// <summary>
        /// The cluster payment types.
        /// </summary>
        public InputList<string> PaymentTypes
        {
            get => _paymentTypes ?? (_paymentTypes = new InputList<string>());
            set => _paymentTypes = value;
        }

        /// <summary>
        /// The Resource Group ID.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GetClustersInvokeArgs()
        {
        }
        public static new GetClustersInvokeArgs Empty => new GetClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetClustersResult
    {
        public readonly string? ClusterName;
        public readonly ImmutableArray<string> ClusterStates;
        public readonly ImmutableArray<string> ClusterTypes;
        public readonly ImmutableArray<Outputs.GetClustersClusterResult> Clusters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly int? MaxResults;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? NextToken;
        public readonly string? OutputFile;
        public readonly ImmutableArray<string> PaymentTypes;
        public readonly string? ResourceGroupId;
        public readonly ImmutableDictionary<string, object>? Tags;
        public readonly int TotalCount;

        [OutputConstructor]
        private GetClustersResult(
            string? clusterName,

            ImmutableArray<string> clusterStates,

            ImmutableArray<string> clusterTypes,

            ImmutableArray<Outputs.GetClustersClusterResult> clusters,

            string id,

            ImmutableArray<string> ids,

            int? maxResults,

            string? nameRegex,

            ImmutableArray<string> names,

            string? nextToken,

            string? outputFile,

            ImmutableArray<string> paymentTypes,

            string? resourceGroupId,

            ImmutableDictionary<string, object>? tags,

            int totalCount)
        {
            ClusterName = clusterName;
            ClusterStates = clusterStates;
            ClusterTypes = clusterTypes;
            Clusters = clusters;
            Id = id;
            Ids = ids;
            MaxResults = maxResults;
            NameRegex = nameRegex;
            Names = names;
            NextToken = nextToken;
            OutputFile = outputFile;
            PaymentTypes = paymentTypes;
            ResourceGroupId = resourceGroupId;
            Tags = tags;
            TotalCount = totalCount;
        }
    }
}
