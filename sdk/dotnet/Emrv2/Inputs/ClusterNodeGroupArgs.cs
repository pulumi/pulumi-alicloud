// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emrv2.Inputs
{

    public sealed class ClusterNodeGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The node group of ack configuration for emr cluster to deploying on kubernetes. See `ack_config` below.
        /// </summary>
        [Input("ackConfig")]
        public Input<Inputs.ClusterNodeGroupAckConfigArgs>? AckConfig { get; set; }

        [Input("additionalSecurityGroupIds")]
        private InputList<string>? _additionalSecurityGroupIds;

        /// <summary>
        /// Additional security Group IDS for Cluster, you can also specify this key for each node group. **NOTE:** From version 1.236.0, `additional_security_group_ids` can be modified.
        /// </summary>
        public InputList<string> AdditionalSecurityGroupIds
        {
            get => _additionalSecurityGroupIds ?? (_additionalSecurityGroupIds = new InputList<string>());
            set => _additionalSecurityGroupIds = value;
        }

        /// <summary>
        /// The node group auto scaling policy for emr cluster. See `auto_scaling_policy` below.
        /// </summary>
        [Input("autoScalingPolicy")]
        public Input<Inputs.ClusterNodeGroupAutoScalingPolicyArgs>? AutoScalingPolicy { get; set; }

        /// <summary>
        /// The detail cost optimized configuration of emr cluster. See `cost_optimized_config` below. **NOTE:** From version 1.236.0, `cost_optimized_config` can be modified.
        /// </summary>
        [Input("costOptimizedConfig")]
        public Input<Inputs.ClusterNodeGroupCostOptimizedConfigArgs>? CostOptimizedConfig { get; set; }

        [Input("dataDisks", required: true)]
        private InputList<Inputs.ClusterNodeGroupDataDiskArgs>? _dataDisks;

        /// <summary>
        /// Host Ecs data disks information in this node group. See `data_disks` below.
        /// </summary>
        public InputList<Inputs.ClusterNodeGroupDataDiskArgs> DataDisks
        {
            get => _dataDisks ?? (_dataDisks = new InputList<Inputs.ClusterNodeGroupDataDiskArgs>());
            set => _dataDisks = value;
        }

        /// <summary>
        /// Deployment set strategy for this cluster node group. Supported value: NONE, CLUSTER or NODE_GROUP. **NOTE:** From version 1.236.0, `deployment_set_strategy` can be modified.
        /// </summary>
        [Input("deploymentSetStrategy")]
        public Input<string>? DeploymentSetStrategy { get; set; }

        /// <summary>
        /// Enable emr cluster of task node graceful decommission, ’true’ or ‘false’ .
        /// </summary>
        [Input("gracefulShutdown")]
        public Input<bool>? GracefulShutdown { get; set; }

        [Input("instanceTypes", required: true)]
        private InputList<string>? _instanceTypes;

        /// <summary>
        /// Host Ecs instance types. **NOTE:** From version 1.236.0, `instance_types` can be modified.
        /// </summary>
        public InputList<string> InstanceTypes
        {
            get => _instanceTypes ?? (_instanceTypes = new InputList<string>());
            set => _instanceTypes = value;
        }

        /// <summary>
        /// Host Ecs number in this node group.
        /// </summary>
        [Input("nodeCount", required: true)]
        public Input<int> NodeCount { get; set; } = null!;

        /// <summary>
        /// The node group name of emr cluster.
        /// </summary>
        [Input("nodeGroupName", required: true)]
        public Input<string> NodeGroupName { get; set; } = null!;

        /// <summary>
        /// The node group type of emr cluster, supported value: MASTER, CORE or TASK. Node group type of GATEWAY is available since v1.219.0. Node group type of MASTER-EXTEND is available since v1.243.0.
        /// </summary>
        [Input("nodeGroupType", required: true)]
        public Input<string> NodeGroupType { get; set; } = null!;

        /// <summary>
        /// Node resize strategy for this cluster node group. Supported value: PRIORITY, COST_OPTIMIZED.
        /// </summary>
        [Input("nodeResizeStrategy")]
        public Input<string>? NodeResizeStrategy { get; set; }

        /// <summary>
        /// Payment Type for this cluster. Supported value: PayAsYouGo or Subscription.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        [Input("spotBidPrices")]
        private InputList<Inputs.ClusterNodeGroupSpotBidPriceArgs>? _spotBidPrices;

        /// <summary>
        /// The spot bid prices of a PayAsYouGo instance. See `spot_bid_prices` below.
        /// </summary>
        public InputList<Inputs.ClusterNodeGroupSpotBidPriceArgs> SpotBidPrices
        {
            get => _spotBidPrices ?? (_spotBidPrices = new InputList<Inputs.ClusterNodeGroupSpotBidPriceArgs>());
            set => _spotBidPrices = value;
        }

        /// <summary>
        /// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
        /// </summary>
        [Input("spotInstanceRemedy")]
        public Input<bool>? SpotInstanceRemedy { get; set; }

        /// <summary>
        /// The spot strategy configuration of emr cluster. Valid values: `NoSpot`, `SpotWithPriceLimit`, `SpotAsPriceGo`.
        /// </summary>
        [Input("spotStrategy")]
        public Input<string>? SpotStrategy { get; set; }

        /// <summary>
        /// The detail configuration of subscription payment type. See `subscription_config` below.
        /// </summary>
        [Input("subscriptionConfig")]
        public Input<Inputs.ClusterNodeGroupSubscriptionConfigArgs>? SubscriptionConfig { get; set; }

        /// <summary>
        /// Host Ecs system disk information in this node group. See `system_disk` below.
        /// </summary>
        [Input("systemDisk", required: true)]
        public Input<Inputs.ClusterNodeGroupSystemDiskArgs> SystemDisk { get; set; } = null!;

        [Input("vswitchIds")]
        private InputList<string>? _vswitchIds;

        /// <summary>
        /// Global vSwitch ids, you can also specify it in node group. **NOTE:** From version 1.236.0, `vswitch_ids` can be modified.
        /// </summary>
        public InputList<string> VswitchIds
        {
            get => _vswitchIds ?? (_vswitchIds = new InputList<string>());
            set => _vswitchIds = value;
        }

        /// <summary>
        /// Whether the node has a public IP address enabled. **NOTE:** From version 1.236.0, `with_public_ip` can be modified.
        /// </summary>
        [Input("withPublicIp")]
        public Input<bool>? WithPublicIp { get; set; }

        public ClusterNodeGroupArgs()
        {
        }
        public static new ClusterNodeGroupArgs Empty => new ClusterNodeGroupArgs();
    }
}
