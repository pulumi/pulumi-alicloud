// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Wafv3.Outputs
{

    [OutputType]
    public sealed class DefenseRuleConfig
    {
        /// <summary>
        /// The regions outside China from which you want to block requests. Separate multiple region codes with commas (,). You can call the DescribeIpAbroadCountryInfos operation to query the countries and regions outside China that can be blocked.
        /// </summary>
        public readonly string? AbroadRegions;
        /// <summary>
        /// The policies for account extraction. Up to five policies are supported. Each policy is a JSON string. For more information, see accountIdentifiers description. See `AccountIdentifiers` below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DefenseRuleConfigAccountIdentifier> AccountIdentifiers;
        /// <summary>
        /// The list of regular rule IDs that are not detected. The value is in the ["XX1", "XX2",...] format. This parameter is required only when the module to which the whitelist applies is set to specific regular rules in basic protection (BypassTags is set to regular_rule).
        /// </summary>
        public readonly ImmutableArray<string> BypassRegularRules;
        /// <summary>
        /// The regular rule type is not detected. This parameter is configured only when the whitelist module is configured as the Web application regular type (the value of the BypassTags parameter is regular_type). Value:
        /// - sqli: Indicates SQL injection.
        /// - xss: Indicates cross-site scripting (XSS).
        /// - cmdi: Indicates OS command injection.
        /// - expression_injection: Indicates expression injection.
        /// - java_deserialization: indicates Java deserialization.
        /// - dot_net_deserialization: Represents. net deserialization.
        /// - php_deserialization: indicates PHP deserialization.
        /// - code_exec: Indicates code execution.
        /// - ssrf: indicates SSRF (server-side request forgery).
        /// - path_traversal: indicates a Path Traversal.
        /// - arbitrary_file_uploading: Indicates to upload any file.
        /// - webshell: Represents a webshell.
        /// - rfilei: Indicates the remote file contains (RFI).
        /// - lfilei: Indicates that the local file contains (LFI).
        /// - protocol_violation: indicates a protocol violation.
        /// - scanner_behavior: Indicates scanner behavior.
        /// - logic_flaw: Indicates a business logic defect.
        /// - arbitrary_file_reading: Indicates arbitrary file reading.
        /// - arbitrary_file_download: Indicates an arbitrary file download.
        /// - xxe: Indicates external entity injection.
        /// - csrf: indicates cross-site request forgery.
        /// - crlf: indicates CRLF.
        /// - other: indicates other.
        /// </summary>
        public readonly ImmutableArray<string> BypassRegularTypes;
        /// <summary>
        /// The modules to which the whitelist applies. The value is in the ["XX1", "XX2",...] format. Valid values:
        /// - waf: indicates all modules.
        /// - customrule: indicates custom rules.
        /// - blacklist: indicates IP blacklist.
        /// - antiscan: indicates scan protection.
        /// - regular: indicates basic protection rules.
        /// - regular_rule: indicates specific regular rules in basic protection.
        /// - regular_type: indicates specific regular rule types in basic protection.
        /// - major_protection: indicates major event support protection.
        /// - cc: indicates CC protection.
        /// - region_block: indicates Location Blacklist.
        /// - antibot_scene: indicates BOT scenario protection.
        /// - dlp: indicates information leakage prevention.
        /// - tamperproof: indicates web tamper-proofing.
        /// - spike_throttle: indicates peak traffic throttling.
        /// </summary>
        public readonly ImmutableArray<string> BypassTags;
        /// <summary>
        /// Set the effective range of the speed limit. This information is configured only when ccStatus is set to 1. Value:
        /// - service: indicates that the effective object is a protected object.
        /// - rule: indicates that the effective object is a single rule.
        /// </summary>
        public readonly string? CcEffect;
        /// <summary>
        /// Whether to open the speed limit. Value:
        /// - 0: indicates that the speed limit is off.
        /// - 1: Indicates that the speed limit is on.
        /// </summary>
        public readonly int? CcStatus;
        /// <summary>
        /// The regions in China from which you want to block requests. If you specify "CN", requests from the Chinese mainland (excluding Hong Kong, Macao, and Taiwan) are blocked. Separate multiple regions with commas (,). For more information about region codes, see Description of region codes in China.
        /// </summary>
        public readonly string? CnRegions;
        /// <summary>
        /// The traffic characteristics of ACL, which are described in JSON format. You can enter up to five matching conditions. For specific configuration information, see detailed configuration of conditions. See `Conditions` below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DefenseRuleConfigCondition> Conditions;
        /// <summary>
        /// The HTTP flood protection mode. Valid values:
        /// - 0 (default): indicates normal protection.
        /// - 1: indicates emergency protection.
        /// </summary>
        public readonly int? Mode;
        /// <summary>
        /// The protocol type of the cached page address. Valid values: http, https.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// The detailed speed limit configuration, which is described in the JSON string format. This information is configured only when CcStatus is set to 1. For specific configuration information, see detailed configuration of Ratelimit. See `RateLimit` below.
        /// </summary>
        public readonly Outputs.DefenseRuleConfigRateLimit? RateLimit;
        /// <summary>
        /// The IP addresses that you want to add to the blacklist. Specify the value of this parameter in the ["ip1","ip2",...] format.
        /// </summary>
        public readonly ImmutableArray<string> RemoteAddrs;
        /// <summary>
        /// Protection rule action. Value:
        /// - block: Indicates an intercept.
        /// - monitor: indicates observation.
        /// - js: indicates JS validation.
        /// - captcha: Indicates a slider.
        /// - captcha_strict: indicates a strict slider.
        /// - filter: filters sensitive information. This action applies only to scenarios that the Information leakage prevention rule include sensitive information match conditions.
        /// 
        /// &gt; **NOTE:**  For the supported protection rule actions, follow the rule actions displayed in the WAF console.
        /// </summary>
        public readonly string? RuleAction;
        /// <summary>
        /// The throttling threshold. Valid values:
        /// - The QPS throttling threshold ranges from 1 to 5000000. If you select QPS throttling (such as 500 QPS), traffic that meets the throttling conditions and exceeds 500 QPS will be blocked.
        /// - The percentage throttling threshold ranges from 1 to 99. If you select percentage throttling (such as 80%), only 80% of the traffic that meets the throttling conditions will be allowed.
        /// </summary>
        public readonly int? ThrottleThrehold;
        /// <summary>
        /// The throttling method. Valid values:
        /// - qps: indicates throttling based on queries per second (QPS).
        /// - ratio (default): indicates throttling based on percentage.
        /// </summary>
        public readonly string? ThrottleType;
        /// <summary>
        /// The User-Agent string that is allowed for access to the address.
        /// </summary>
        public readonly string? Ua;
        /// <summary>
        /// The address of the cached page.
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private DefenseRuleConfig(
            string? abroadRegions,

            ImmutableArray<Outputs.DefenseRuleConfigAccountIdentifier> accountIdentifiers,

            ImmutableArray<string> bypassRegularRules,

            ImmutableArray<string> bypassRegularTypes,

            ImmutableArray<string> bypassTags,

            string? ccEffect,

            int? ccStatus,

            string? cnRegions,

            ImmutableArray<Outputs.DefenseRuleConfigCondition> conditions,

            int? mode,

            string? protocol,

            Outputs.DefenseRuleConfigRateLimit? rateLimit,

            ImmutableArray<string> remoteAddrs,

            string? ruleAction,

            int? throttleThrehold,

            string? throttleType,

            string? ua,

            string? url)
        {
            AbroadRegions = abroadRegions;
            AccountIdentifiers = accountIdentifiers;
            BypassRegularRules = bypassRegularRules;
            BypassRegularTypes = bypassRegularTypes;
            BypassTags = bypassTags;
            CcEffect = ccEffect;
            CcStatus = ccStatus;
            CnRegions = cnRegions;
            Conditions = conditions;
            Mode = mode;
            Protocol = protocol;
            RateLimit = rateLimit;
            RemoteAddrs = remoteAddrs;
            RuleAction = ruleAction;
            ThrottleThrehold = throttleThrehold;
            ThrottleType = throttleType;
            Ua = ua;
            Url = url;
        }
    }
}
