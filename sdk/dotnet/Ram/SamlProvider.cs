// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ram
{
    /// <summary>
    /// Provides a RAM SAML Provider resource.
    /// 
    /// For information about RAM SAML Provider and how to use it, see [What is SAML Provider](https://www.alibabacloud.com/help/doc-detail/186846.htm).
    /// 
    /// &gt; **NOTE:** Available in v1.114.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AliCloud.Ram.SamlProvider("example", new()
    ///     {
    ///         Description = "For Terraform Test",
    ///         EncodedsamlMetadataDocument = "your encodedsaml metadata document",
    ///         SamlProviderName = "tf-testAcc",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RAM SAML Provider can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:ram/samlProvider:SamlProvider example &lt;saml_provider_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ram/samlProvider:SamlProvider")]
    public partial class SamlProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Alibaba Cloud Resource Name (ARN) of the IdP.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The description of SAML Provider.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The metadata file, which is Base64 encoded. The file is provided by an IdP that supports SAML 2.0.
        /// </summary>
        [Output("encodedsamlMetadataDocument")]
        public Output<string?> EncodedsamlMetadataDocument { get; private set; } = null!;

        /// <summary>
        /// The name of SAML Provider.
        /// </summary>
        [Output("samlProviderName")]
        public Output<string> SamlProviderName { get; private set; } = null!;

        /// <summary>
        /// The update time.
        /// </summary>
        [Output("updateDate")]
        public Output<string> UpdateDate { get; private set; } = null!;


        /// <summary>
        /// Create a SamlProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SamlProvider(string name, SamlProviderArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ram/samlProvider:SamlProvider", name, args ?? new SamlProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SamlProvider(string name, Input<string> id, SamlProviderState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ram/samlProvider:SamlProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SamlProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SamlProvider Get(string name, Input<string> id, SamlProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new SamlProvider(name, id, state, options);
        }
    }

    public sealed class SamlProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of SAML Provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The metadata file, which is Base64 encoded. The file is provided by an IdP that supports SAML 2.0.
        /// </summary>
        [Input("encodedsamlMetadataDocument")]
        public Input<string>? EncodedsamlMetadataDocument { get; set; }

        /// <summary>
        /// The name of SAML Provider.
        /// </summary>
        [Input("samlProviderName", required: true)]
        public Input<string> SamlProviderName { get; set; } = null!;

        public SamlProviderArgs()
        {
        }
        public static new SamlProviderArgs Empty => new SamlProviderArgs();
    }

    public sealed class SamlProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Alibaba Cloud Resource Name (ARN) of the IdP.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The description of SAML Provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The metadata file, which is Base64 encoded. The file is provided by an IdP that supports SAML 2.0.
        /// </summary>
        [Input("encodedsamlMetadataDocument")]
        public Input<string>? EncodedsamlMetadataDocument { get; set; }

        /// <summary>
        /// The name of SAML Provider.
        /// </summary>
        [Input("samlProviderName")]
        public Input<string>? SamlProviderName { get; set; }

        /// <summary>
        /// The update time.
        /// </summary>
        [Input("updateDate")]
        public Input<string>? UpdateDate { get; set; }

        public SamlProviderState()
        {
        }
        public static new SamlProviderState Empty => new SamlProviderState();
    }
}
