// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ram
{
    /// <summary>
    /// Provides a RAM Role Policy Attachment resource.
    /// 
    /// For information about RAM Role Policy Attachment and how to use it, see [What is Role Policy Attachment](https://next.api.alibabacloud.com/document/Ram/2015-05-01/AttachPolicyToRole).
    /// 
    /// &gt; **NOTE:** Available since v1.0.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a RAM Role Policy attachment.
    ///     var role = new AliCloud.Ram.Role("role", new()
    ///     {
    ///         Name = "roleName",
    ///         Document = @"    {
    ///       \""Statement\"": [
    ///         {
    ///           \""Action\"": \""sts:AssumeRole\"",
    ///           \""Effect\"": \""Allow\"",
    ///           \""Principal\"": {
    ///             \""Service\"": [
    ///               \""apigateway.aliyuncs.com\"", 
    ///               \""ecs.aliyuncs.com\""
    ///             ]
    ///           }
    ///         }
    ///       ],
    ///       \""Version\"": \""1\""
    ///     }
    /// ",
    ///         Description = "this is a role test.",
    ///     });
    /// 
    ///     var @default = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var policy = new AliCloud.Ram.Policy("policy", new()
    ///     {
    ///         PolicyName = $"tf-example-{@default.Result}",
    ///         PolicyDocument = @"  {
    ///     \""Statement\"": [
    ///       {
    ///         \""Action\"": [
    ///           \""oss:ListObjects\"",
    ///           \""oss:GetObject\""
    ///         ],
    ///         \""Effect\"": \""Allow\"",
    ///         \""Resource\"": [
    ///           \""acs:oss:*:*:mybucket\"",
    ///           \""acs:oss:*:*:mybucket/*\""
    ///         ]
    ///       }
    ///     ],
    ///       \""Version\"": \""1\""
    ///   }
    /// ",
    ///         Description = "this is a policy test",
    ///     });
    /// 
    ///     var attach = new AliCloud.Ram.RolePolicyAttachment("attach", new()
    ///     {
    ///         PolicyName = policy.PolicyName,
    ///         PolicyType = policy.Type,
    ///         RoleName = role.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RAM Role Policy Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ram/rolePolicyAttachment:RolePolicyAttachment example role:&lt;policy_name&gt;:&lt;policy_type&gt;:&lt;role_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ram/rolePolicyAttachment:RolePolicyAttachment")]
    public partial class RolePolicyAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the policy.
        /// </summary>
        [Output("policyName")]
        public Output<string> PolicyName { get; private set; } = null!;

        /// <summary>
        /// Policy type.
        /// - Custom: Custom policy.
        /// - System: System policy.
        /// </summary>
        [Output("policyType")]
        public Output<string> PolicyType { get; private set; } = null!;

        /// <summary>
        /// The RAM role name.
        /// </summary>
        [Output("roleName")]
        public Output<string> RoleName { get; private set; } = null!;


        /// <summary>
        /// Create a RolePolicyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RolePolicyAttachment(string name, RolePolicyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ram/rolePolicyAttachment:RolePolicyAttachment", name, args ?? new RolePolicyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RolePolicyAttachment(string name, Input<string> id, RolePolicyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ram/rolePolicyAttachment:RolePolicyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RolePolicyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RolePolicyAttachment Get(string name, Input<string> id, RolePolicyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new RolePolicyAttachment(name, id, state, options);
        }
    }

    public sealed class RolePolicyAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the policy.
        /// </summary>
        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        /// <summary>
        /// Policy type.
        /// - Custom: Custom policy.
        /// - System: System policy.
        /// </summary>
        [Input("policyType", required: true)]
        public Input<string> PolicyType { get; set; } = null!;

        /// <summary>
        /// The RAM role name.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public RolePolicyAttachmentArgs()
        {
        }
        public static new RolePolicyAttachmentArgs Empty => new RolePolicyAttachmentArgs();
    }

    public sealed class RolePolicyAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the policy.
        /// </summary>
        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        /// <summary>
        /// Policy type.
        /// - Custom: Custom policy.
        /// - System: System policy.
        /// </summary>
        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        /// <summary>
        /// The RAM role name.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public RolePolicyAttachmentState()
        {
        }
        public static new RolePolicyAttachmentState Empty => new RolePolicyAttachmentState();
    }
}
