// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ram
{
    public static class GetRolePolicyAttachments
    {
        /// <summary>
        /// This data source provides Ram Role Policy Attachment available to the user.[What is Role Policy Attachment](https://next.api.alibabacloud.com/document/Ram/2015-05-01/AttachPolicyToRole)
        /// 
        /// &gt; **NOTE:** Available since v1.248.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var role = new AliCloud.Ram.Role("role", new()
        ///     {
        ///         Name = "roleName",
        ///         Document = @"    {
        ///       \""Statement\"": [
        ///         {
        ///           \""Action\"": \""sts:AssumeRole\"",
        ///           \""Effect\"": \""Allow\"",
        ///           \""Principal\"": {
        ///             \""Service\"": [
        ///               \""apigateway.aliyuncs.com\"", 
        ///               \""ecs.aliyuncs.com\""
        ///             ]
        ///           }
        ///         }
        ///       ],
        ///       \""Version\"": \""1\""
        ///     }
        /// ",
        ///         Description = "this is a role test.",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var policy = new AliCloud.Ram.Policy("policy", new()
        ///     {
        ///         PolicyName = $"tf-example-{defaultInteger.Result}",
        ///         PolicyDocument = @"  {
        ///     \""Statement\"": [
        ///       {
        ///         \""Action\"": [
        ///           \""oss:ListObjects\"",
        ///           \""oss:GetObject\""
        ///         ],
        ///         \""Effect\"": \""Allow\"",
        ///         \""Resource\"": [
        ///           \""acs:oss:*:*:mybucket\"",
        ///           \""acs:oss:*:*:mybucket/*\""
        ///         ]
        ///       }
        ///     ],
        ///       \""Version\"": \""1\""
        ///   }
        /// ",
        ///         Description = "this is a policy test",
        ///     });
        /// 
        ///     var defaultRolePolicyAttachment = new AliCloud.Ram.RolePolicyAttachment("default", new()
        ///     {
        ///         PolicyName = policy.PolicyName,
        ///         PolicyType = policy.Type,
        ///         RoleName = role.Name,
        ///     });
        /// 
        ///     var @default = AliCloud.Ram.GetRolePolicyAttachments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultRolePolicyAttachment.Id,
        ///         },
        ///         RoleName = role.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudRamRolePolicyAttachmentExampleId"] = @default.Apply(@default =&gt; @default.Apply(getRolePolicyAttachmentsResult =&gt; getRolePolicyAttachmentsResult.Attachments[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetRolePolicyAttachmentsResult> InvokeAsync(GetRolePolicyAttachmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRolePolicyAttachmentsResult>("alicloud:ram/getRolePolicyAttachments:getRolePolicyAttachments", args ?? new GetRolePolicyAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Ram Role Policy Attachment available to the user.[What is Role Policy Attachment](https://next.api.alibabacloud.com/document/Ram/2015-05-01/AttachPolicyToRole)
        /// 
        /// &gt; **NOTE:** Available since v1.248.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var role = new AliCloud.Ram.Role("role", new()
        ///     {
        ///         Name = "roleName",
        ///         Document = @"    {
        ///       \""Statement\"": [
        ///         {
        ///           \""Action\"": \""sts:AssumeRole\"",
        ///           \""Effect\"": \""Allow\"",
        ///           \""Principal\"": {
        ///             \""Service\"": [
        ///               \""apigateway.aliyuncs.com\"", 
        ///               \""ecs.aliyuncs.com\""
        ///             ]
        ///           }
        ///         }
        ///       ],
        ///       \""Version\"": \""1\""
        ///     }
        /// ",
        ///         Description = "this is a role test.",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var policy = new AliCloud.Ram.Policy("policy", new()
        ///     {
        ///         PolicyName = $"tf-example-{defaultInteger.Result}",
        ///         PolicyDocument = @"  {
        ///     \""Statement\"": [
        ///       {
        ///         \""Action\"": [
        ///           \""oss:ListObjects\"",
        ///           \""oss:GetObject\""
        ///         ],
        ///         \""Effect\"": \""Allow\"",
        ///         \""Resource\"": [
        ///           \""acs:oss:*:*:mybucket\"",
        ///           \""acs:oss:*:*:mybucket/*\""
        ///         ]
        ///       }
        ///     ],
        ///       \""Version\"": \""1\""
        ///   }
        /// ",
        ///         Description = "this is a policy test",
        ///     });
        /// 
        ///     var defaultRolePolicyAttachment = new AliCloud.Ram.RolePolicyAttachment("default", new()
        ///     {
        ///         PolicyName = policy.PolicyName,
        ///         PolicyType = policy.Type,
        ///         RoleName = role.Name,
        ///     });
        /// 
        ///     var @default = AliCloud.Ram.GetRolePolicyAttachments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultRolePolicyAttachment.Id,
        ///         },
        ///         RoleName = role.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudRamRolePolicyAttachmentExampleId"] = @default.Apply(@default =&gt; @default.Apply(getRolePolicyAttachmentsResult =&gt; getRolePolicyAttachmentsResult.Attachments[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetRolePolicyAttachmentsResult> Invoke(GetRolePolicyAttachmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRolePolicyAttachmentsResult>("alicloud:ram/getRolePolicyAttachments:getRolePolicyAttachments", args ?? new GetRolePolicyAttachmentsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Ram Role Policy Attachment available to the user.[What is Role Policy Attachment](https://next.api.alibabacloud.com/document/Ram/2015-05-01/AttachPolicyToRole)
        /// 
        /// &gt; **NOTE:** Available since v1.248.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var role = new AliCloud.Ram.Role("role", new()
        ///     {
        ///         Name = "roleName",
        ///         Document = @"    {
        ///       \""Statement\"": [
        ///         {
        ///           \""Action\"": \""sts:AssumeRole\"",
        ///           \""Effect\"": \""Allow\"",
        ///           \""Principal\"": {
        ///             \""Service\"": [
        ///               \""apigateway.aliyuncs.com\"", 
        ///               \""ecs.aliyuncs.com\""
        ///             ]
        ///           }
        ///         }
        ///       ],
        ///       \""Version\"": \""1\""
        ///     }
        /// ",
        ///         Description = "this is a role test.",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var policy = new AliCloud.Ram.Policy("policy", new()
        ///     {
        ///         PolicyName = $"tf-example-{defaultInteger.Result}",
        ///         PolicyDocument = @"  {
        ///     \""Statement\"": [
        ///       {
        ///         \""Action\"": [
        ///           \""oss:ListObjects\"",
        ///           \""oss:GetObject\""
        ///         ],
        ///         \""Effect\"": \""Allow\"",
        ///         \""Resource\"": [
        ///           \""acs:oss:*:*:mybucket\"",
        ///           \""acs:oss:*:*:mybucket/*\""
        ///         ]
        ///       }
        ///     ],
        ///       \""Version\"": \""1\""
        ///   }
        /// ",
        ///         Description = "this is a policy test",
        ///     });
        /// 
        ///     var defaultRolePolicyAttachment = new AliCloud.Ram.RolePolicyAttachment("default", new()
        ///     {
        ///         PolicyName = policy.PolicyName,
        ///         PolicyType = policy.Type,
        ///         RoleName = role.Name,
        ///     });
        /// 
        ///     var @default = AliCloud.Ram.GetRolePolicyAttachments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultRolePolicyAttachment.Id,
        ///         },
        ///         RoleName = role.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudRamRolePolicyAttachmentExampleId"] = @default.Apply(@default =&gt; @default.Apply(getRolePolicyAttachmentsResult =&gt; getRolePolicyAttachmentsResult.Attachments[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetRolePolicyAttachmentsResult> Invoke(GetRolePolicyAttachmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRolePolicyAttachmentsResult>("alicloud:ram/getRolePolicyAttachments:getRolePolicyAttachments", args ?? new GetRolePolicyAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRolePolicyAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Role Policy Attachment IDs. The value is formulated as `role:&lt;policy_name&gt;:&lt;policy_type&gt;:&lt;role_name&gt;`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The RAM role name.
        /// </summary>
        [Input("roleName", required: true)]
        public string RoleName { get; set; } = null!;

        public GetRolePolicyAttachmentsArgs()
        {
        }
        public static new GetRolePolicyAttachmentsArgs Empty => new GetRolePolicyAttachmentsArgs();
    }

    public sealed class GetRolePolicyAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Role Policy Attachment IDs. The value is formulated as `role:&lt;policy_name&gt;:&lt;policy_type&gt;:&lt;role_name&gt;`.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The RAM role name.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public GetRolePolicyAttachmentsInvokeArgs()
        {
        }
        public static new GetRolePolicyAttachmentsInvokeArgs Empty => new GetRolePolicyAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRolePolicyAttachmentsResult
    {
        /// <summary>
        /// A list of Role Policy Attachment Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRolePolicyAttachmentsAttachmentResult> Attachments;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Role Policy Attachment IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        public readonly string RoleName;

        [OutputConstructor]
        private GetRolePolicyAttachmentsResult(
            ImmutableArray<Outputs.GetRolePolicyAttachmentsAttachmentResult> attachments,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string roleName)
        {
            Attachments = attachments;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            RoleName = roleName;
        }
    }
}
