// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ram
{
    /// <summary>
    /// Provides a RAM Login Profile resource.
    /// 
    /// For information about RAM Login Profile and how to use it, see [What is Login Profile](https://www.alibabacloud.com/help/en/ram/developer-reference/api-ram-2015-05-01-createloginprofile).
    /// 
    /// &gt; **NOTE:** Available since v1.0.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var user = new AliCloud.Ram.User("user", new()
    ///     {
    ///         Name = "terraform_example",
    ///         DisplayName = "terraform_example",
    ///         Mobile = "86-18688888888",
    ///         Email = "hello.uuu@aaa.com",
    ///         Comments = "terraform_example",
    ///         Force = true,
    ///     });
    /// 
    ///     var profile = new AliCloud.Ram.LoginProfile("profile", new()
    ///     {
    ///         UserName = user.Name,
    ///         Password = "Example_1234",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RAM Login Profile can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ram/loginProfile:LoginProfile example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ram/loginProfile:LoginProfile")]
    public partial class LoginProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to forcefully enable multi-factor authentication (MFA) for the RAM user. Valid values:
        /// - true: forcefully enables MFA for the RAM user. The RAM user must bind an MFA device upon the next logon.
        /// - false (default): does not forcefully enable MFA for the RAM user.
        /// </summary>
        [Output("mfaBindRequired")]
        public Output<bool> MfaBindRequired { get; private set; } = null!;

        /// <summary>
        /// The password must meet the Password strength requirements. For more information about password strength setting requirements, see [GetPasswordPolicy](https://help.aliyun.com/document_detail/2337691.html).
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// Whether the user must reset the password at the next logon. Value:
        /// - true
        /// - false (default)
        /// </summary>
        [Output("passwordResetRequired")]
        public Output<bool?> PasswordResetRequired { get; private set; } = null!;

        /// <summary>
        /// The user name.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a LoginProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoginProfile(string name, LoginProfileArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ram/loginProfile:LoginProfile", name, args ?? new LoginProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoginProfile(string name, Input<string> id, LoginProfileState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ram/loginProfile:LoginProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoginProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoginProfile Get(string name, Input<string> id, LoginProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new LoginProfile(name, id, state, options);
        }
    }

    public sealed class LoginProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to forcefully enable multi-factor authentication (MFA) for the RAM user. Valid values:
        /// - true: forcefully enables MFA for the RAM user. The RAM user must bind an MFA device upon the next logon.
        /// - false (default): does not forcefully enable MFA for the RAM user.
        /// </summary>
        [Input("mfaBindRequired")]
        public Input<bool>? MfaBindRequired { get; set; }

        /// <summary>
        /// The password must meet the Password strength requirements. For more information about password strength setting requirements, see [GetPasswordPolicy](https://help.aliyun.com/document_detail/2337691.html).
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// Whether the user must reset the password at the next logon. Value:
        /// - true
        /// - false (default)
        /// </summary>
        [Input("passwordResetRequired")]
        public Input<bool>? PasswordResetRequired { get; set; }

        /// <summary>
        /// The user name.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public LoginProfileArgs()
        {
        }
        public static new LoginProfileArgs Empty => new LoginProfileArgs();
    }

    public sealed class LoginProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Specifies whether to forcefully enable multi-factor authentication (MFA) for the RAM user. Valid values:
        /// - true: forcefully enables MFA for the RAM user. The RAM user must bind an MFA device upon the next logon.
        /// - false (default): does not forcefully enable MFA for the RAM user.
        /// </summary>
        [Input("mfaBindRequired")]
        public Input<bool>? MfaBindRequired { get; set; }

        /// <summary>
        /// The password must meet the Password strength requirements. For more information about password strength setting requirements, see [GetPasswordPolicy](https://help.aliyun.com/document_detail/2337691.html).
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Whether the user must reset the password at the next logon. Value:
        /// - true
        /// - false (default)
        /// </summary>
        [Input("passwordResetRequired")]
        public Input<bool>? PasswordResetRequired { get; set; }

        /// <summary>
        /// The user name.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public LoginProfileState()
        {
        }
        public static new LoginProfileState Empty => new LoginProfileState();
    }
}
