// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.EventBridge
{
    /// <summary>
    /// Provides a Event Bridge Api Destination resource.
    /// 
    /// For information about Event Bridge Api Destination and how to use it, see [What is Api Destination](https://www.alibabacloud.com/help/en/eventbridge/latest/api-eventbridge-2020-04-01-createapidestination).
    /// 
    /// &gt; **NOTE:** Available since v1.211.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var region = config.Get("region") ?? "cn-chengdu";
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultConnection = new AliCloud.EventBridge.Connection("defaultConnection", new()
    ///     {
    ///         ConnectionName = name,
    ///         NetworkParameters = new AliCloud.EventBridge.Inputs.ConnectionNetworkParametersArgs
    ///         {
    ///             NetworkType = "PublicNetwork",
    ///         },
    ///     });
    /// 
    ///     var defaultApiDestination = new AliCloud.EventBridge.ApiDestination("defaultApiDestination", new()
    ///     {
    ///         ConnectionName = defaultConnection.ConnectionName,
    ///         ApiDestinationName = name,
    ///         Description = "test-api-destination-connection",
    ///         HttpApiParameters = new AliCloud.EventBridge.Inputs.ApiDestinationHttpApiParametersArgs
    ///         {
    ///             Endpoint = "http://127.0.0.1:8001",
    ///             Method = "POST",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Event Bridge Api Destination can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:eventbridge/apiDestination:ApiDestination example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:eventbridge/apiDestination:ApiDestination")]
    public partial class ApiDestination : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the API destination.
        /// </summary>
        [Output("apiDestinationName")]
        public Output<string> ApiDestinationName { get; private set; } = null!;

        /// <summary>
        /// The name of the connection.
        /// </summary>
        [Output("connectionName")]
        public Output<string> ConnectionName { get; private set; } = null!;

        /// <summary>
        /// The creation time of the Api Destination.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description of the API destination.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The parameters that are configured for the API destination. See `http_api_parameters` below.
        /// </summary>
        [Output("httpApiParameters")]
        public Output<Outputs.ApiDestinationHttpApiParameters> HttpApiParameters { get; private set; } = null!;


        /// <summary>
        /// Create a ApiDestination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiDestination(string name, ApiDestinationArgs args, CustomResourceOptions? options = null)
            : base("alicloud:eventbridge/apiDestination:ApiDestination", name, args ?? new ApiDestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiDestination(string name, Input<string> id, ApiDestinationState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:eventbridge/apiDestination:ApiDestination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiDestination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiDestination Get(string name, Input<string> id, ApiDestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiDestination(name, id, state, options);
        }
    }

    public sealed class ApiDestinationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API destination.
        /// </summary>
        [Input("apiDestinationName", required: true)]
        public Input<string> ApiDestinationName { get; set; } = null!;

        /// <summary>
        /// The name of the connection.
        /// </summary>
        [Input("connectionName", required: true)]
        public Input<string> ConnectionName { get; set; } = null!;

        /// <summary>
        /// The description of the API destination.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The parameters that are configured for the API destination. See `http_api_parameters` below.
        /// </summary>
        [Input("httpApiParameters", required: true)]
        public Input<Inputs.ApiDestinationHttpApiParametersArgs> HttpApiParameters { get; set; } = null!;

        public ApiDestinationArgs()
        {
        }
        public static new ApiDestinationArgs Empty => new ApiDestinationArgs();
    }

    public sealed class ApiDestinationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API destination.
        /// </summary>
        [Input("apiDestinationName")]
        public Input<string>? ApiDestinationName { get; set; }

        /// <summary>
        /// The name of the connection.
        /// </summary>
        [Input("connectionName")]
        public Input<string>? ConnectionName { get; set; }

        /// <summary>
        /// The creation time of the Api Destination.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// The description of the API destination.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The parameters that are configured for the API destination. See `http_api_parameters` below.
        /// </summary>
        [Input("httpApiParameters")]
        public Input<Inputs.ApiDestinationHttpApiParametersGetArgs>? HttpApiParameters { get; set; }

        public ApiDestinationState()
        {
        }
        public static new ApiDestinationState Empty => new ApiDestinationState();
    }
}
