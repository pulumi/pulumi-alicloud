// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.SimpleApplicationServer
{
    public static class GetServerDisks
    {
        /// <summary>
        /// This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.143.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var ids = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "example_id",
        ///             },
        ///         }));
        ///         this.SimpleApplicationServerDiskId1 = ids.Apply(ids =&gt; ids.Disks?[0]?.Id);
        ///         var nameRegex = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             NameRegex = "^my-Disk",
        ///         }));
        ///         this.SimpleApplicationServerDiskId2 = nameRegex.Apply(nameRegex =&gt; nameRegex.Disks?[0]?.Id);
        ///         var status = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             Status = "In_use",
        ///         }));
        ///         this.SimpleApplicationServerDiskId3 = status.Apply(status =&gt; status.Disks?[0]?.Id);
        ///         var instanceId = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             InstanceId = "example_value",
        ///         }));
        ///         this.SimpleApplicationServerDiskId4 = instanceId.Apply(instanceId =&gt; instanceId.Disks?[0]?.Id);
        ///         var diskType = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             DiskType = "System",
        ///         }));
        ///         this.SimpleApplicationServerDiskId5 = diskType.Apply(diskType =&gt; diskType.Disks?[0]?.Id);
        ///     }
        /// 
        ///     [Output("simpleApplicationServerDiskId1")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId1 { get; set; }
        ///     [Output("simpleApplicationServerDiskId2")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId2 { get; set; }
        ///     [Output("simpleApplicationServerDiskId3")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId3 { get; set; }
        ///     [Output("simpleApplicationServerDiskId4")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId4 { get; set; }
        ///     [Output("simpleApplicationServerDiskId5")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId5 { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerDisksResult> InvokeAsync(GetServerDisksArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerDisksResult>("alicloud:simpleapplicationserver/getServerDisks:getServerDisks", args ?? new GetServerDisksArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.143.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var ids = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "example_id",
        ///             },
        ///         }));
        ///         this.SimpleApplicationServerDiskId1 = ids.Apply(ids =&gt; ids.Disks?[0]?.Id);
        ///         var nameRegex = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             NameRegex = "^my-Disk",
        ///         }));
        ///         this.SimpleApplicationServerDiskId2 = nameRegex.Apply(nameRegex =&gt; nameRegex.Disks?[0]?.Id);
        ///         var status = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             Status = "In_use",
        ///         }));
        ///         this.SimpleApplicationServerDiskId3 = status.Apply(status =&gt; status.Disks?[0]?.Id);
        ///         var instanceId = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             InstanceId = "example_value",
        ///         }));
        ///         this.SimpleApplicationServerDiskId4 = instanceId.Apply(instanceId =&gt; instanceId.Disks?[0]?.Id);
        ///         var diskType = Output.Create(AliCloud.SimpleApplicationServer.GetServerDisks.InvokeAsync(new AliCloud.SimpleApplicationServer.GetServerDisksArgs
        ///         {
        ///             DiskType = "System",
        ///         }));
        ///         this.SimpleApplicationServerDiskId5 = diskType.Apply(diskType =&gt; diskType.Disks?[0]?.Id);
        ///     }
        /// 
        ///     [Output("simpleApplicationServerDiskId1")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId1 { get; set; }
        ///     [Output("simpleApplicationServerDiskId2")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId2 { get; set; }
        ///     [Output("simpleApplicationServerDiskId3")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId3 { get; set; }
        ///     [Output("simpleApplicationServerDiskId4")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId4 { get; set; }
        ///     [Output("simpleApplicationServerDiskId5")]
        ///     public Output&lt;string&gt; SimpleApplicationServerDiskId5 { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServerDisksResult> Invoke(GetServerDisksInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServerDisksResult>("alicloud:simpleapplicationserver/getServerDisks:getServerDisks", args ?? new GetServerDisksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerDisksArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of the disk. Possible values: `System`, `Data`.
        /// </summary>
        [Input("diskType")]
        public string? DiskType { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Disk IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Alibaba Cloud simple application server instance ID.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// A regex string to filter results by Disk name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of the disk. Valid values: `ReIniting`, `Creating`, `In_Use`, `Available`, `Attaching`, `Detaching`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetServerDisksArgs()
        {
        }
    }

    public sealed class GetServerDisksInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of the disk. Possible values: `System`, `Data`.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Disk IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Alibaba Cloud simple application server instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// A regex string to filter results by Disk name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of the disk. Valid values: `ReIniting`, `Creating`, `In_Use`, `Available`, `Attaching`, `Detaching`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetServerDisksInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerDisksResult
    {
        public readonly string? DiskType;
        public readonly ImmutableArray<Outputs.GetServerDisksDiskResult> Disks;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? InstanceId;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly string? Status;

        [OutputConstructor]
        private GetServerDisksResult(
            string? diskType,

            ImmutableArray<Outputs.GetServerDisksDiskResult> disks,

            string id,

            ImmutableArray<string> ids,

            string? instanceId,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? status)
        {
            DiskType = diskType;
            Disks = disks;
            Id = id;
            Ids = ids;
            InstanceId = instanceId;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Status = status;
        }
    }
}
