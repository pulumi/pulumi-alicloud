// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sls
{
    public static class GetMachineGroups
    {
        /// <summary>
        /// This data source provides Sls Machine Group available to the user.[What is Machine Group](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateMachineGroup)
        /// 
        /// &gt; **NOTE:** Available since v1.259.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var projectName = config.Get("projectName") ?? "project-for-machine-group-terraform";
        ///     var defaultyJqrue = new AliCloud.Log.Project("defaultyJqrue", new()
        ///     {
        ///         Description = "for terraform example",
        ///         Name = projectName,
        ///     });
        /// 
        ///     var defaultMachineGroup = new AliCloud.Sls.MachineGroup("default", new()
        ///     {
        ///         GroupName = "group1",
        ///         ProjectName = projectName,
        ///         MachineIdentifyType = "ip",
        ///         GroupAttribute = new AliCloud.Sls.Inputs.MachineGroupGroupAttributeArgs
        ///         {
        ///             GroupTopic = "example",
        ///             ExternalName = "example",
        ///         },
        ///         MachineLists = new[]
        ///         {
        ///             "192.168.1.1",
        ///         },
        ///     });
        /// 
        ///     var @default = AliCloud.Sls.GetMachineGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultMachineGroup.Id,
        ///         },
        ///         GroupName = "group1",
        ///         ProjectName = projectName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudSlsMachineGroupExampleId"] = @default.Apply(@default =&gt; @default.Apply(getMachineGroupsResult =&gt; getMachineGroupsResult.Groups[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetMachineGroupsResult> InvokeAsync(GetMachineGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMachineGroupsResult>("alicloud:sls/getMachineGroups:getMachineGroups", args ?? new GetMachineGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Sls Machine Group available to the user.[What is Machine Group](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateMachineGroup)
        /// 
        /// &gt; **NOTE:** Available since v1.259.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var projectName = config.Get("projectName") ?? "project-for-machine-group-terraform";
        ///     var defaultyJqrue = new AliCloud.Log.Project("defaultyJqrue", new()
        ///     {
        ///         Description = "for terraform example",
        ///         Name = projectName,
        ///     });
        /// 
        ///     var defaultMachineGroup = new AliCloud.Sls.MachineGroup("default", new()
        ///     {
        ///         GroupName = "group1",
        ///         ProjectName = projectName,
        ///         MachineIdentifyType = "ip",
        ///         GroupAttribute = new AliCloud.Sls.Inputs.MachineGroupGroupAttributeArgs
        ///         {
        ///             GroupTopic = "example",
        ///             ExternalName = "example",
        ///         },
        ///         MachineLists = new[]
        ///         {
        ///             "192.168.1.1",
        ///         },
        ///     });
        /// 
        ///     var @default = AliCloud.Sls.GetMachineGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultMachineGroup.Id,
        ///         },
        ///         GroupName = "group1",
        ///         ProjectName = projectName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudSlsMachineGroupExampleId"] = @default.Apply(@default =&gt; @default.Apply(getMachineGroupsResult =&gt; getMachineGroupsResult.Groups[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMachineGroupsResult> Invoke(GetMachineGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineGroupsResult>("alicloud:sls/getMachineGroups:getMachineGroups", args ?? new GetMachineGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Sls Machine Group available to the user.[What is Machine Group](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateMachineGroup)
        /// 
        /// &gt; **NOTE:** Available since v1.259.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var projectName = config.Get("projectName") ?? "project-for-machine-group-terraform";
        ///     var defaultyJqrue = new AliCloud.Log.Project("defaultyJqrue", new()
        ///     {
        ///         Description = "for terraform example",
        ///         Name = projectName,
        ///     });
        /// 
        ///     var defaultMachineGroup = new AliCloud.Sls.MachineGroup("default", new()
        ///     {
        ///         GroupName = "group1",
        ///         ProjectName = projectName,
        ///         MachineIdentifyType = "ip",
        ///         GroupAttribute = new AliCloud.Sls.Inputs.MachineGroupGroupAttributeArgs
        ///         {
        ///             GroupTopic = "example",
        ///             ExternalName = "example",
        ///         },
        ///         MachineLists = new[]
        ///         {
        ///             "192.168.1.1",
        ///         },
        ///     });
        /// 
        ///     var @default = AliCloud.Sls.GetMachineGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultMachineGroup.Id,
        ///         },
        ///         GroupName = "group1",
        ///         ProjectName = projectName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudSlsMachineGroupExampleId"] = @default.Apply(@default =&gt; @default.Apply(getMachineGroupsResult =&gt; getMachineGroupsResult.Groups[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMachineGroupsResult> Invoke(GetMachineGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineGroupsResult>("alicloud:sls/getMachineGroups:getMachineGroups", args ?? new GetMachineGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMachineGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Machine Group name
        /// </summary>
        [Input("groupName")]
        public string? GroupName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Machine Group IDs. The value is formulated as `&lt;project_name&gt;:&lt;group_name&gt;`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Project name
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        public GetMachineGroupsArgs()
        {
        }
        public static new GetMachineGroupsArgs Empty => new GetMachineGroupsArgs();
    }

    public sealed class GetMachineGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Machine Group name
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Machine Group IDs. The value is formulated as `&lt;project_name&gt;:&lt;group_name&gt;`.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Project name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        public GetMachineGroupsInvokeArgs()
        {
        }
        public static new GetMachineGroupsInvokeArgs Empty => new GetMachineGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetMachineGroupsResult
    {
        /// <summary>
        /// Machine Group name
        /// </summary>
        public readonly string? GroupName;
        /// <summary>
        /// A list of Machine Group Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMachineGroupsGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Machine Group IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        public readonly string ProjectName;

        [OutputConstructor]
        private GetMachineGroupsResult(
            string? groupName,

            ImmutableArray<Outputs.GetMachineGroupsGroupResult> groups,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string projectName)
        {
            GroupName = groupName;
            Groups = groups;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            ProjectName = projectName;
        }
    }
}
