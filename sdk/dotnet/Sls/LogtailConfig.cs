// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sls
{
    /// <summary>
    /// Provides a Log Service (SLS) Logtail Config resource.
    /// 
    /// For information about Log Service (SLS) Logtail Config and how to use it, see [What is Logtail Config](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateConfig).
    /// 
    /// &gt; **NOTE:** Available since v1.259.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Random.Index.Integer("default", new()
    ///     {
    ///         Max = 99999,
    ///         Min = 10000,
    ///     });
    /// 
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tfaccsls62147";
    ///     var projectName = config.Get("projectName") ?? "project-for-logtail-terraform";
    ///     var defaultuA28zS = new AliCloud.Log.Project("defaultuA28zS", new()
    ///     {
    ///         ProjectName = projectName,
    ///     });
    /// 
    ///     var defaultLogtailConfig = new AliCloud.Sls.LogtailConfig("default", new()
    ///     {
    ///         ProjectName = defaultuA28zS.ProjectName,
    ///         OutputDetail = new AliCloud.Sls.Inputs.LogtailConfigOutputDetailArgs
    ///         {
    ///             Endpoint = "cn-hangzhou-intranet.log.aliyuncs.com",
    ///             Region = "cn-hangzhou",
    ///             LogstoreName = "example",
    ///         },
    ///         OutputType = "LogService",
    ///         InputDetail = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["adjustTimezone"] = false,
    ///             ["delayAlarmBytes"] = 0,
    ///             ["delaySkipBytes"] = 0,
    ///             ["discardNonUtf8"] = false,
    ///             ["discardUnmatch"] = true,
    ///             ["dockerFile"] = false,
    ///             ["enableRawLog"] = false,
    ///             ["enableTag"] = false,
    ///             ["fileEncoding"] = "utf8",
    ///             ["filePattern"] = "access*.log",
    ///             ["filterKey"] = new[]
    ///             {
    ///                 "key1",
    ///             },
    ///             ["filterRegex"] = new[]
    ///             {
    ///                 "regex1",
    ///             },
    ///             ["key"] = new[]
    ///             {
    ///                 "key1",
    ///                 "key2",
    ///             },
    ///             ["localStorage"] = true,
    ///             ["logBeginRegex"] = ".*",
    ///             ["logPath"] = "/var/log/httpd",
    ///             ["logTimezone"] = "",
    ///             ["logType"] = "common_reg_log",
    ///             ["maxDepth"] = 1000,
    ///             ["maxSendRate"] = -1,
    ///             ["mergeType"] = "topic",
    ///             ["preserve"] = true,
    ///             ["preserveDepth"] = 0,
    ///             ["priority"] = 0,
    ///             ["regex"] = "(w+)(s+)",
    ///             ["sendRateExpire"] = 0,
    ///             ["sensitive_keys"] = new[]
    ///             {
    ///             },
    ///             ["tailExisted"] = false,
    ///             ["timeFormat"] = "%Y/%m/%d %H:%M:%S",
    ///             ["timeKey"] = "time",
    ///             ["topicFormat"] = "none",
    ///         }),
    ///         LogtailConfigName = "tfaccsls62147",
    ///         InputType = "file",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Log Service (SLS) Logtail Config can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:sls/logtailConfig:LogtailConfig example &lt;project_name&gt;:&lt;logtail_config_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:sls/logtailConfig:LogtailConfig")]
    public partial class LogtailConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The detailed configuration entered by logtail.
        /// </summary>
        [Output("inputDetail")]
        public Output<string?> InputDetail { get; private set; } = null!;

        /// <summary>
        /// Method of log entry
        /// </summary>
        [Output("inputType")]
        public Output<string?> InputType { get; private set; } = null!;

        /// <summary>
        /// Last modification time, unix timestamp
        /// </summary>
        [Output("lastModifyTime")]
        public Output<int> LastModifyTime { get; private set; } = null!;

        /// <summary>
        /// Sample log
        /// </summary>
        [Output("logSample")]
        public Output<string?> LogSample { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("logtailConfigName")]
        public Output<string> LogtailConfigName { get; private set; } = null!;

        /// <summary>
        /// Detailed configuration of logtail output See `output_detail` below.
        /// </summary>
        [Output("outputDetail")]
        public Output<Outputs.LogtailConfigOutputDetail?> OutputDetail { get; private set; } = null!;

        /// <summary>
        /// Log output mode. You can only upload data to log service.
        /// </summary>
        [Output("outputType")]
        public Output<string?> OutputType { get; private set; } = null!;

        /// <summary>
        /// Project name
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;


        /// <summary>
        /// Create a LogtailConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogtailConfig(string name, LogtailConfigArgs args, CustomResourceOptions? options = null)
            : base("alicloud:sls/logtailConfig:LogtailConfig", name, args ?? new LogtailConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogtailConfig(string name, Input<string> id, LogtailConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:sls/logtailConfig:LogtailConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogtailConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogtailConfig Get(string name, Input<string> id, LogtailConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new LogtailConfig(name, id, state, options);
        }
    }

    public sealed class LogtailConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The detailed configuration entered by logtail.
        /// </summary>
        [Input("inputDetail")]
        public Input<string>? InputDetail { get; set; }

        /// <summary>
        /// Method of log entry
        /// </summary>
        [Input("inputType")]
        public Input<string>? InputType { get; set; }

        /// <summary>
        /// Last modification time, unix timestamp
        /// </summary>
        [Input("lastModifyTime")]
        public Input<int>? LastModifyTime { get; set; }

        /// <summary>
        /// Sample log
        /// </summary>
        [Input("logSample")]
        public Input<string>? LogSample { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("logtailConfigName")]
        public Input<string>? LogtailConfigName { get; set; }

        /// <summary>
        /// Detailed configuration of logtail output See `output_detail` below.
        /// </summary>
        [Input("outputDetail")]
        public Input<Inputs.LogtailConfigOutputDetailArgs>? OutputDetail { get; set; }

        /// <summary>
        /// Log output mode. You can only upload data to log service.
        /// </summary>
        [Input("outputType")]
        public Input<string>? OutputType { get; set; }

        /// <summary>
        /// Project name
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        public LogtailConfigArgs()
        {
        }
        public static new LogtailConfigArgs Empty => new LogtailConfigArgs();
    }

    public sealed class LogtailConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The detailed configuration entered by logtail.
        /// </summary>
        [Input("inputDetail")]
        public Input<string>? InputDetail { get; set; }

        /// <summary>
        /// Method of log entry
        /// </summary>
        [Input("inputType")]
        public Input<string>? InputType { get; set; }

        /// <summary>
        /// Last modification time, unix timestamp
        /// </summary>
        [Input("lastModifyTime")]
        public Input<int>? LastModifyTime { get; set; }

        /// <summary>
        /// Sample log
        /// </summary>
        [Input("logSample")]
        public Input<string>? LogSample { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("logtailConfigName")]
        public Input<string>? LogtailConfigName { get; set; }

        /// <summary>
        /// Detailed configuration of logtail output See `output_detail` below.
        /// </summary>
        [Input("outputDetail")]
        public Input<Inputs.LogtailConfigOutputDetailGetArgs>? OutputDetail { get; set; }

        /// <summary>
        /// Log output mode. You can only upload data to log service.
        /// </summary>
        [Input("outputType")]
        public Input<string>? OutputType { get; set; }

        /// <summary>
        /// Project name
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        public LogtailConfigState()
        {
        }
        public static new LogtailConfigState Empty => new LogtailConfigState();
    }
}
