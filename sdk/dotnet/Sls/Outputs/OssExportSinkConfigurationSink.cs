// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sls.Outputs
{

    [OutputType]
    public sealed class OssExportSinkConfigurationSink
    {
        /// <summary>
        /// The OSS bucket.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The interval between two data shipping operations. Valid values: 300 to 900. Unit: seconds.
        /// </summary>
        public readonly string BufferInterval;
        /// <summary>
        /// The size of the OSS object to which data is shipped. Valid values: 5 to 256. Unit: MB.
        /// </summary>
        public readonly string BufferSize;
        /// <summary>
        /// Supports four compression types, such as snappy, gzip, zstd, and none.
        /// </summary>
        public readonly string CompressionType;
        /// <summary>
        /// The OSS file content details. Note: the value of this parameter should be updated based on the value of the contentType parameter.
        /// 
        /// If the contentType value is JSON, the parameters of the contentDetail value are as follows:
        /// 
        /// If the tag is allowed to be posted, the value of the parameter enableTag is true. Example:{"enableTag": true}
        /// 
        /// You are not allowed to post tags. The value of the parameter enableTag is false. Example:{"enableTag": false}
        /// 
        /// If the contentType value is csv, the parameters of the contentDetail value are as follows:
        /// 
        /// The parameter columns is the key of the log in the source logstore.
        /// 
        /// The delimiter parameter, which can be ",","|","", or "\t".
        /// 
        /// The header parameter determines whether the OSS file retains the header. The optional value is true or false.
        /// 
        /// The lineFeed parameter. Optional values are "\t", "\n", or "".
        /// 
        /// The invalid field content parameter is null to specify the delivery content when the field name does not exist.
        /// 
        /// The escape character parameter "quote". Optional values are "" "," '", or" ".
        /// 
        /// Example:{"null": "-", "header": false, "lineFeed": "\n", "quote": "", "delimiter": ",", "columns": ["a", "B", "c", "d"]}
        /// 
        /// When the contentType value is parquet, the parameters of the contentDetail value are as follows:
        /// 
        /// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
        /// 
        /// When the contentType value is set to orc, the parameters of the contentDetail value are as follows:
        /// 
        /// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
        /// </summary>
        public readonly string ContentDetail;
        /// <summary>
        /// The storage format of the OSS object. Valid values: json, parquet, csv, and orc.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// The latency of data shipping. The value of this parameter cannot exceed the data retention period of the source Logstore.
        /// </summary>
        public readonly int? DelaySeconds;
        /// <summary>
        /// The OSS Endpoint can only be an OSS intranet Endpoint and only supports the same region. Example value: https://oss-cn-hangzhou-internal.aliyuncs.com
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The directory is dynamically generated according to the time. The default value is% Y/%m/%d/%H/%M. The corresponding generated directory is, for example, 2017/01/23/12/00. Note that the partition format cannot start and end. Example values:%Y/%m/%d
        /// </summary>
        public readonly string? PathFormat;
        /// <summary>
        /// The partition format type. only support time
        /// </summary>
        public readonly string? PathFormatType;
        /// <summary>
        /// The prefix of the OSS object.
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// The suffix of the OSS object.
        /// </summary>
        public readonly string? Suffix;
        /// <summary>
        /// The time zone. Example value: +0800
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private OssExportSinkConfigurationSink(
            string bucket,

            string bufferInterval,

            string bufferSize,

            string compressionType,

            string contentDetail,

            string contentType,

            int? delaySeconds,

            string endpoint,

            string? pathFormat,

            string? pathFormatType,

            string? prefix,

            string roleArn,

            string? suffix,

            string timeZone)
        {
            Bucket = bucket;
            BufferInterval = bufferInterval;
            BufferSize = bufferSize;
            CompressionType = compressionType;
            ContentDetail = contentDetail;
            ContentType = contentType;
            DelaySeconds = delaySeconds;
            Endpoint = endpoint;
            PathFormat = pathFormat;
            PathFormatType = pathFormatType;
            Prefix = prefix;
            RoleArn = roleArn;
            Suffix = suffix;
            TimeZone = timeZone;
        }
    }
}
