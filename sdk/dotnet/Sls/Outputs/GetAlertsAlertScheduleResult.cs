// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sls.Outputs
{

    [OutputType]
    public sealed class GetAlertsAlertScheduleResult
    {
        /// <summary>
        /// Cron expression, the minimum accuracy is minutes, 24 hours. For example, 0 0/1 * * * means that the check is conducted every 1 hour from 00:00.When type is set to Cron, cronExpression must be set.
        /// </summary>
        public readonly string CronExpression;
        /// <summary>
        /// Timed task execution delay (unit: s).
        /// </summary>
        public readonly int Delay;
        /// <summary>
        /// Fixed interval for scheduling.
        /// </summary>
        public readonly string Interval;
        /// <summary>
        /// Dispatch immediately.
        /// </summary>
        public readonly bool RunImmdiately;
        /// <summary>
        /// The time zone where the Cron expression is located. The default value is null, indicating the eighth zone in the east.
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// Check the frequency type. Log Service checks the query and analysis results according to the frequency you configured. The values are as follows:Fixedate: checks query and analysis results at regular intervals.Cron: specifies the time interval by using the Cron expression, and checks the query and analysis results at the specified time interval.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAlertsAlertScheduleResult(
            string cronExpression,

            int delay,

            string interval,

            bool runImmdiately,

            string timeZone,

            string type)
        {
            CronExpression = cronExpression;
            Delay = delay;
            Interval = interval;
            RunImmdiately = runImmdiately;
            TimeZone = timeZone;
            Type = type;
        }
    }
}
