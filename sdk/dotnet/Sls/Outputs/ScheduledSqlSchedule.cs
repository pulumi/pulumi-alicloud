// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sls.Outputs
{

    [OutputType]
    public sealed class ScheduledSqlSchedule
    {
        /// <summary>
        /// Cron expression, minimum precision is minutes, 24-hour clock. For example, 0 0/1 **indicates that the check is performed every one hour from 00:00. When type is set to Cron, cronExpression must be set.
        /// </summary>
        public readonly string? CronExpression;
        /// <summary>
        /// Delay time.
        /// </summary>
        public readonly int? Delay;
        /// <summary>
        /// Time interval, such as 5m, 1H.
        /// </summary>
        public readonly string? Interval;
        /// <summary>
        /// Whether to execute the OSS import task immediately after it is created.
        /// </summary>
        public readonly bool? RunImmediately;
        /// <summary>
        /// Time Zone.
        /// </summary>
        public readonly string? TimeZone;
        /// <summary>
        /// Check the frequency type. Log Service checks the query and analysis results based on the frequency you configured. The value is as follows: FixedRate: checks the query and analysis results at fixed intervals. Cron: specifies a time interval through a Cron expression, and checks the query and analysis results at the specified time interval. Weekly: Check the query and analysis results at a fixed point in time on the day of the week. Daily: checks the query and analysis results at a fixed time point every day. Hourly: Check query and analysis results every hour.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ScheduledSqlSchedule(
            string? cronExpression,

            int? delay,

            string? interval,

            bool? runImmediately,

            string? timeZone,

            string? type)
        {
            CronExpression = cronExpression;
            Delay = delay;
            Interval = interval;
            RunImmediately = runImmediately;
            TimeZone = timeZone;
            Type = type;
        }
    }
}
