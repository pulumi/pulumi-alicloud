// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ActionTrail
{
    public static class GetSaslUsers
    {
        /// <summary>
        /// This data source provides the Alikafka Sasl Users of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.66.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = name,
        ///         CidrBlock = "10.4.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VswitchName = name,
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "10.4.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultInstance = new AliCloud.AliKafka.Instance("default", new()
        ///     {
        ///         Name = name,
        ///         PartitionNum = 50,
        ///         DiskType = 1,
        ///         DiskSize = 500,
        ///         DeployType = 5,
        ///         IoMax = 20,
        ///         SpecType = "professional",
        ///         ServiceVersion = "2.2.0",
        ///         VswitchId = defaultSwitch.Id,
        ///         SecurityGroup = defaultSecurityGroup.Id,
        ///         Config = @"  {
        ///     \""enable.acl\"": \""true\""
        ///   }
        /// ",
        ///     });
        /// 
        ///     var defaultSaslUser = new AliCloud.AliKafka.SaslUser("default", new()
        ///     {
        ///         InstanceId = defaultInstance.Id,
        ///         Username = name,
        ///         Password = "YourPassword1234!",
        ///     });
        /// 
        ///     var ids = AliCloud.ActionTrail.GetSaslUsers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultSaslUser.Id,
        ///         },
        ///         InstanceId = defaultSaslUser.InstanceId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alikafkaSaslUsersId0"] = ids.Apply(getSaslUsersResult =&gt; getSaslUsersResult.Users[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSaslUsersResult> InvokeAsync(GetSaslUsersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSaslUsersResult>("alicloud:actiontrail/getSaslUsers:getSaslUsers", args ?? new GetSaslUsersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Alikafka Sasl Users of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.66.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = name,
        ///         CidrBlock = "10.4.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VswitchName = name,
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "10.4.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultInstance = new AliCloud.AliKafka.Instance("default", new()
        ///     {
        ///         Name = name,
        ///         PartitionNum = 50,
        ///         DiskType = 1,
        ///         DiskSize = 500,
        ///         DeployType = 5,
        ///         IoMax = 20,
        ///         SpecType = "professional",
        ///         ServiceVersion = "2.2.0",
        ///         VswitchId = defaultSwitch.Id,
        ///         SecurityGroup = defaultSecurityGroup.Id,
        ///         Config = @"  {
        ///     \""enable.acl\"": \""true\""
        ///   }
        /// ",
        ///     });
        /// 
        ///     var defaultSaslUser = new AliCloud.AliKafka.SaslUser("default", new()
        ///     {
        ///         InstanceId = defaultInstance.Id,
        ///         Username = name,
        ///         Password = "YourPassword1234!",
        ///     });
        /// 
        ///     var ids = AliCloud.ActionTrail.GetSaslUsers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultSaslUser.Id,
        ///         },
        ///         InstanceId = defaultSaslUser.InstanceId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alikafkaSaslUsersId0"] = ids.Apply(getSaslUsersResult =&gt; getSaslUsersResult.Users[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSaslUsersResult> Invoke(GetSaslUsersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSaslUsersResult>("alicloud:actiontrail/getSaslUsers:getSaslUsers", args ?? new GetSaslUsersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Alikafka Sasl Users of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.66.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = name,
        ///         CidrBlock = "10.4.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VswitchName = name,
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "10.4.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultInstance = new AliCloud.AliKafka.Instance("default", new()
        ///     {
        ///         Name = name,
        ///         PartitionNum = 50,
        ///         DiskType = 1,
        ///         DiskSize = 500,
        ///         DeployType = 5,
        ///         IoMax = 20,
        ///         SpecType = "professional",
        ///         ServiceVersion = "2.2.0",
        ///         VswitchId = defaultSwitch.Id,
        ///         SecurityGroup = defaultSecurityGroup.Id,
        ///         Config = @"  {
        ///     \""enable.acl\"": \""true\""
        ///   }
        /// ",
        ///     });
        /// 
        ///     var defaultSaslUser = new AliCloud.AliKafka.SaslUser("default", new()
        ///     {
        ///         InstanceId = defaultInstance.Id,
        ///         Username = name,
        ///         Password = "YourPassword1234!",
        ///     });
        /// 
        ///     var ids = AliCloud.ActionTrail.GetSaslUsers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultSaslUser.Id,
        ///         },
        ///         InstanceId = defaultSaslUser.InstanceId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alikafkaSaslUsersId0"] = ids.Apply(getSaslUsersResult =&gt; getSaslUsersResult.Users[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSaslUsersResult> Invoke(GetSaslUsersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSaslUsersResult>("alicloud:actiontrail/getSaslUsers:getSaslUsers", args ?? new GetSaslUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSaslUsersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Sasl User IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// A regex string to filter results by Sasl User name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetSaslUsersArgs()
        {
        }
        public static new GetSaslUsersArgs Empty => new GetSaslUsersArgs();
    }

    public sealed class GetSaslUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Sasl User IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// A regex string to filter results by Sasl User name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetSaslUsersInvokeArgs()
        {
        }
        public static new GetSaslUsersInvokeArgs Empty => new GetSaslUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetSaslUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string InstanceId;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Sasl User names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of Sasl Users. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSaslUsersUserResult> Users;

        [OutputConstructor]
        private GetSaslUsersResult(
            string id,

            ImmutableArray<string> ids,

            string instanceId,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<Outputs.GetSaslUsersUserResult> users)
        {
            Id = id;
            Ids = ids;
            InstanceId = instanceId;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Users = users;
        }
    }
}
