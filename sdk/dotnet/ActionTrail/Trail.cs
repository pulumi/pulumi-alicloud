// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ActionTrail
{
    /// <summary>
    /// Provides a Actiontrail Trail resource.
    /// 
    /// Trail of ActionTrail. After creating a trail, you need to enable the trail through StartLogging.
    /// 
    /// For information about Actiontrail Trail and how to use it, see [What is Trail](https://www.alibabacloud.com/help/en/actiontrail/latest/api-actiontrail-2020-07-06-createtrail).
    /// 
    /// &gt; **NOTE:** Available since v1.95.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.GetRegions.Invoke(new()
    ///     {
    ///         Current = true,
    ///     });
    /// 
    ///     var defaultGetAccount = AliCloud.GetAccount.Invoke();
    /// 
    ///     var defaultInteger = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var defaultProject = new AliCloud.Log.Project("default", new()
    ///     {
    ///         ProjectName = $"{name}-{defaultInteger.Result}",
    ///         Description = "tf actiontrail example",
    ///     });
    /// 
    ///     var defaultGetRoles = AliCloud.Ram.GetRoles.Invoke(new()
    ///     {
    ///         NameRegex = "AliyunServiceRoleForActionTrail",
    ///     });
    /// 
    ///     var defaultTrail = new AliCloud.ActionTrail.Trail("default", new()
    ///     {
    ///         TrailName = name,
    ///         SlsWriteRoleArn = defaultGetRoles.Apply(getRolesResult =&gt; getRolesResult.Roles[0]?.Arn),
    ///         SlsProjectArn = Output.Tuple(@default, defaultGetAccount, defaultProject.ProjectName).Apply(values =&gt;
    ///         {
    ///             var @default = values.Item1;
    ///             var defaultGetAccount = values.Item2;
    ///             var projectName = values.Item3;
    ///             return $"acs:log:{@default.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id)}:{defaultGetAccount.Apply(getAccountResult =&gt; getAccountResult.Id)}:project/{projectName}";
    ///         }),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Actiontrail Trail can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:actiontrail/trail:Trail example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:actiontrail/trail:Trail")]
    public partial class Trail : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Available since v1.256.0) The time when the trail was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The read/write type of the events to be delivered. Default value: `All`. Valid values: `Read`, `Write`, `All`.
        /// </summary>
        [Output("eventRw")]
        public Output<string> EventRw { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to create a multi-account trail. Default value: `False`. Valid values:
        /// </summary>
        [Output("isOrganizationTrail")]
        public Output<bool?> IsOrganizationTrail { get; private set; } = null!;

        /// <summary>
        /// The ARN of the MaxCompute project to which you want to deliver events.
        /// </summary>
        [Output("maxComputeProjectArn")]
        public Output<string?> MaxComputeProjectArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.
        /// </summary>
        [Output("maxComputeWriteRoleArn")]
        public Output<string> MaxComputeWriteRoleArn { get; private set; } = null!;

        /// <summary>
        /// Field `MnsTopicArn` has been deprecated from provider version 1.118.0.
        /// </summary>
        [Output("mnsTopicArn")]
        public Output<string?> MnsTopicArn { get; private set; } = null!;

        /// <summary>
        /// Field `Name` has been deprecated from provider version 1.95.0. New field `TrailName` instead.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The OSS bucket to which the trail delivers logs.
        /// </summary>
        [Output("ossBucketName")]
        public Output<string?> OssBucketName { get; private set; } = null!;

        /// <summary>
        /// The prefix of the file name in the OSS bucket to which the trail delivers logs.
        /// </summary>
        [Output("ossKeyPrefix")]
        public Output<string?> OssKeyPrefix { get; private set; } = null!;

        /// <summary>
        /// The name of the RAM role that the user allows ActionTrail to access OSS service.
        /// </summary>
        [Output("ossWriteRoleArn")]
        public Output<string?> OssWriteRoleArn { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.256.0) The home region of the trail.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// Field `RoleName` has been deprecated from provider version 1.118.0.
        /// </summary>
        [Output("roleName")]
        public Output<string?> RoleName { get; private set; } = null!;

        /// <summary>
        /// The ARN of the Simple Log Service project to which the trail delivers logs.
        /// </summary>
        [Output("slsProjectArn")]
        public Output<string?> SlsProjectArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the role that ActionTrail assumes to deliver operation events to the Simple Log Service project.
        /// </summary>
        [Output("slsWriteRoleArn")]
        public Output<string> SlsWriteRoleArn { get; private set; } = null!;

        /// <summary>
        /// The status of the trail. Default value: `Enable`. Valid values: `Enable`, `Disable`.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// The name of the trail to be created.
        /// </summary>
        [Output("trailName")]
        public Output<string> TrailName { get; private set; } = null!;

        /// <summary>
        /// The region of the trail.
        /// </summary>
        [Output("trailRegion")]
        public Output<string> TrailRegion { get; private set; } = null!;


        /// <summary>
        /// Create a Trail resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Trail(string name, TrailArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:actiontrail/trail:Trail", name, args ?? new TrailArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Trail(string name, Input<string> id, TrailState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:actiontrail/trail:Trail", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Trail resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Trail Get(string name, Input<string> id, TrailState? state = null, CustomResourceOptions? options = null)
        {
            return new Trail(name, id, state, options);
        }
    }

    public sealed class TrailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The read/write type of the events to be delivered. Default value: `All`. Valid values: `Read`, `Write`, `All`.
        /// </summary>
        [Input("eventRw")]
        public Input<string>? EventRw { get; set; }

        /// <summary>
        /// Specifies whether to create a multi-account trail. Default value: `False`. Valid values:
        /// </summary>
        [Input("isOrganizationTrail")]
        public Input<bool>? IsOrganizationTrail { get; set; }

        /// <summary>
        /// The ARN of the MaxCompute project to which you want to deliver events.
        /// </summary>
        [Input("maxComputeProjectArn")]
        public Input<string>? MaxComputeProjectArn { get; set; }

        /// <summary>
        /// The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.
        /// </summary>
        [Input("maxComputeWriteRoleArn")]
        public Input<string>? MaxComputeWriteRoleArn { get; set; }

        /// <summary>
        /// Field `MnsTopicArn` has been deprecated from provider version 1.118.0.
        /// </summary>
        [Input("mnsTopicArn")]
        public Input<string>? MnsTopicArn { get; set; }

        /// <summary>
        /// Field `Name` has been deprecated from provider version 1.95.0. New field `TrailName` instead.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The OSS bucket to which the trail delivers logs.
        /// </summary>
        [Input("ossBucketName")]
        public Input<string>? OssBucketName { get; set; }

        /// <summary>
        /// The prefix of the file name in the OSS bucket to which the trail delivers logs.
        /// </summary>
        [Input("ossKeyPrefix")]
        public Input<string>? OssKeyPrefix { get; set; }

        /// <summary>
        /// The name of the RAM role that the user allows ActionTrail to access OSS service.
        /// </summary>
        [Input("ossWriteRoleArn")]
        public Input<string>? OssWriteRoleArn { get; set; }

        /// <summary>
        /// Field `RoleName` has been deprecated from provider version 1.118.0.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        /// <summary>
        /// The ARN of the Simple Log Service project to which the trail delivers logs.
        /// </summary>
        [Input("slsProjectArn")]
        public Input<string>? SlsProjectArn { get; set; }

        /// <summary>
        /// The ARN of the role that ActionTrail assumes to deliver operation events to the Simple Log Service project.
        /// </summary>
        [Input("slsWriteRoleArn")]
        public Input<string>? SlsWriteRoleArn { get; set; }

        /// <summary>
        /// The status of the trail. Default value: `Enable`. Valid values: `Enable`, `Disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the trail to be created.
        /// </summary>
        [Input("trailName")]
        public Input<string>? TrailName { get; set; }

        /// <summary>
        /// The region of the trail.
        /// </summary>
        [Input("trailRegion")]
        public Input<string>? TrailRegion { get; set; }

        public TrailArgs()
        {
        }
        public static new TrailArgs Empty => new TrailArgs();
    }

    public sealed class TrailState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Available since v1.256.0) The time when the trail was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The read/write type of the events to be delivered. Default value: `All`. Valid values: `Read`, `Write`, `All`.
        /// </summary>
        [Input("eventRw")]
        public Input<string>? EventRw { get; set; }

        /// <summary>
        /// Specifies whether to create a multi-account trail. Default value: `False`. Valid values:
        /// </summary>
        [Input("isOrganizationTrail")]
        public Input<bool>? IsOrganizationTrail { get; set; }

        /// <summary>
        /// The ARN of the MaxCompute project to which you want to deliver events.
        /// </summary>
        [Input("maxComputeProjectArn")]
        public Input<string>? MaxComputeProjectArn { get; set; }

        /// <summary>
        /// The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.
        /// </summary>
        [Input("maxComputeWriteRoleArn")]
        public Input<string>? MaxComputeWriteRoleArn { get; set; }

        /// <summary>
        /// Field `MnsTopicArn` has been deprecated from provider version 1.118.0.
        /// </summary>
        [Input("mnsTopicArn")]
        public Input<string>? MnsTopicArn { get; set; }

        /// <summary>
        /// Field `Name` has been deprecated from provider version 1.95.0. New field `TrailName` instead.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The OSS bucket to which the trail delivers logs.
        /// </summary>
        [Input("ossBucketName")]
        public Input<string>? OssBucketName { get; set; }

        /// <summary>
        /// The prefix of the file name in the OSS bucket to which the trail delivers logs.
        /// </summary>
        [Input("ossKeyPrefix")]
        public Input<string>? OssKeyPrefix { get; set; }

        /// <summary>
        /// The name of the RAM role that the user allows ActionTrail to access OSS service.
        /// </summary>
        [Input("ossWriteRoleArn")]
        public Input<string>? OssWriteRoleArn { get; set; }

        /// <summary>
        /// (Available since v1.256.0) The home region of the trail.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// Field `RoleName` has been deprecated from provider version 1.118.0.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        /// <summary>
        /// The ARN of the Simple Log Service project to which the trail delivers logs.
        /// </summary>
        [Input("slsProjectArn")]
        public Input<string>? SlsProjectArn { get; set; }

        /// <summary>
        /// The ARN of the role that ActionTrail assumes to deliver operation events to the Simple Log Service project.
        /// </summary>
        [Input("slsWriteRoleArn")]
        public Input<string>? SlsWriteRoleArn { get; set; }

        /// <summary>
        /// The status of the trail. Default value: `Enable`. Valid values: `Enable`, `Disable`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the trail to be created.
        /// </summary>
        [Input("trailName")]
        public Input<string>? TrailName { get; set; }

        /// <summary>
        /// The region of the trail.
        /// </summary>
        [Input("trailRegion")]
        public Input<string>? TrailRegion { get; set; }

        public TrailState()
        {
        }
        public static new TrailState Empty => new TrailState();
    }
}
