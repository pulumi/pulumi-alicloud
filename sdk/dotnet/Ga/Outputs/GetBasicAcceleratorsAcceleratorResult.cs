// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ga.Outputs
{

    [OutputType]
    public sealed class GetBasicAcceleratorsAcceleratorResult
    {
        /// <summary>
        /// The bandwidth billing method. Valid values:
        /// - `BandwidthPackage`: billed based on bandwidth plans.
        /// - `CDT`: billed through Cloud Data Transfer (CDT) and based on data transfer.
        /// - `CDT95`: billed through CDT and based on the 95th percentile bandwidth. This bandwidth billing method is available only for users that are included in the whitelist.
        /// </summary>
        public readonly string BandwidthBillingType;
        /// <summary>
        /// The id of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly string BasicAcceleratorId;
        /// <summary>
        /// The name of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly string BasicAcceleratorName;
        /// <summary>
        /// The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicAcceleratorsAcceleratorBasicBandwidthPackageResult> BasicBandwidthPackages;
        /// <summary>
        /// The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly string BasicEndpointGroupId;
        /// <summary>
        /// The ID of the acceleration region.
        /// </summary>
        public readonly string BasicIpSetId;
        /// <summary>
        /// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
        /// </summary>
        public readonly int CreateTime;
        /// <summary>
        /// The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageResult> CrossDomainBandwidthPackages;
        /// <summary>
        /// The description of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
        /// </summary>
        public readonly int ExpiredTime;
        /// <summary>
        /// The id of the Global Accelerator Basic Accelerator.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The billing method of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly string InstanceChargeType;
        /// <summary>
        /// The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetBasicAcceleratorsAcceleratorResult(
            string bandwidthBillingType,

            string basicAcceleratorId,

            string basicAcceleratorName,

            ImmutableArray<Outputs.GetBasicAcceleratorsAcceleratorBasicBandwidthPackageResult> basicBandwidthPackages,

            string basicEndpointGroupId,

            string basicIpSetId,

            int createTime,

            ImmutableArray<Outputs.GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageResult> crossDomainBandwidthPackages,

            string description,

            int expiredTime,

            string id,

            string instanceChargeType,

            string regionId,

            string status)
        {
            BandwidthBillingType = bandwidthBillingType;
            BasicAcceleratorId = basicAcceleratorId;
            BasicAcceleratorName = basicAcceleratorName;
            BasicBandwidthPackages = basicBandwidthPackages;
            BasicEndpointGroupId = basicEndpointGroupId;
            BasicIpSetId = basicIpSetId;
            CreateTime = createTime;
            CrossDomainBandwidthPackages = crossDomainBandwidthPackages;
            Description = description;
            ExpiredTime = expiredTime;
            Id = id;
            InstanceChargeType = instanceChargeType;
            RegionId = regionId;
            Status = status;
        }
    }
}
