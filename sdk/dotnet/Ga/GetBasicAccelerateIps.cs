// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ga
{
    public static class GetBasicAccelerateIps
    {
        /// <summary>
        /// This data source provides the Global Accelerator (GA) Basic Accelerate IPs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.194.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Ga.GetBasicAccelerateIps.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///         IpSetId = "example_ip_set_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gaBasicAccelerateIpId1"] = ids.Apply(getBasicAccelerateIpsResult =&gt; getBasicAccelerateIpsResult.Ips[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBasicAccelerateIpsResult> InvokeAsync(GetBasicAccelerateIpsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBasicAccelerateIpsResult>("alicloud:ga/getBasicAccelerateIps:getBasicAccelerateIps", args ?? new GetBasicAccelerateIpsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Global Accelerator (GA) Basic Accelerate IPs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.194.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Ga.GetBasicAccelerateIps.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///         IpSetId = "example_ip_set_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gaBasicAccelerateIpId1"] = ids.Apply(getBasicAccelerateIpsResult =&gt; getBasicAccelerateIpsResult.Ips[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBasicAccelerateIpsResult> Invoke(GetBasicAccelerateIpsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBasicAccelerateIpsResult>("alicloud:ga/getBasicAccelerateIps:getBasicAccelerateIps", args ?? new GetBasicAccelerateIpsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBasicAccelerateIpsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The address of the Basic Accelerate IP.
        /// </summary>
        [Input("accelerateIpAddress")]
        public string? AccelerateIpAddress { get; set; }

        /// <summary>
        /// The id of the Basic Accelerate IP.
        /// </summary>
        [Input("accelerateIpId")]
        public string? AccelerateIpId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Global Accelerator Basic Accelerate IP IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The ID of the Basic Ip Set.
        /// </summary>
        [Input("ipSetId", required: true)]
        public string IpSetId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetBasicAccelerateIpsArgs()
        {
        }
        public static new GetBasicAccelerateIpsArgs Empty => new GetBasicAccelerateIpsArgs();
    }

    public sealed class GetBasicAccelerateIpsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The address of the Basic Accelerate IP.
        /// </summary>
        [Input("accelerateIpAddress")]
        public Input<string>? AccelerateIpAddress { get; set; }

        /// <summary>
        /// The id of the Basic Accelerate IP.
        /// </summary>
        [Input("accelerateIpId")]
        public Input<string>? AccelerateIpId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Global Accelerator Basic Accelerate IP IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The ID of the Basic Ip Set.
        /// </summary>
        [Input("ipSetId", required: true)]
        public Input<string> IpSetId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetBasicAccelerateIpsInvokeArgs()
        {
        }
        public static new GetBasicAccelerateIpsInvokeArgs Empty => new GetBasicAccelerateIpsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBasicAccelerateIpsResult
    {
        /// <summary>
        /// The address of the Basic Accelerate IP.
        /// </summary>
        public readonly string? AccelerateIpAddress;
        /// <summary>
        /// The id of the Basic Accelerate IP.
        /// </summary>
        public readonly string? AccelerateIpId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The ID of the Basic Ip Set.
        /// </summary>
        public readonly string IpSetId;
        /// <summary>
        /// A list of Global Accelerator Basic Accelerate IPs. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicAccelerateIpsIpResult> Ips;
        public readonly string? OutputFile;
        /// <summary>
        /// The status of the Basic Accelerate IP instance.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetBasicAccelerateIpsResult(
            string? accelerateIpAddress,

            string? accelerateIpId,

            string id,

            ImmutableArray<string> ids,

            string ipSetId,

            ImmutableArray<Outputs.GetBasicAccelerateIpsIpResult> ips,

            string? outputFile,

            string? status)
        {
            AccelerateIpAddress = accelerateIpAddress;
            AccelerateIpId = accelerateIpId;
            Id = id;
            Ids = ids;
            IpSetId = ipSetId;
            Ips = ips;
            OutputFile = outputFile;
            Status = status;
        }
    }
}
