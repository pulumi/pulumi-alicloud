// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ga
{
    public static class GetBasicAccelerators
    {
        /// <summary>
        /// This data source provides the Global Accelerator (GA) Basic Accelerators of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.194.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Ga.GetBasicAccelerators.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Ga.GetBasicAccelerators.Invoke(new()
        ///     {
        ///         NameRegex = "tf-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gaBasicAcceleratorId1"] = ids.Apply(getBasicAcceleratorsResult =&gt; getBasicAcceleratorsResult.Accelerators[0]?.Id),
        ///         ["gaBasicAcceleratorId2"] = nameRegex.Apply(getBasicAcceleratorsResult =&gt; getBasicAcceleratorsResult.Accelerators[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBasicAcceleratorsResult> InvokeAsync(GetBasicAcceleratorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBasicAcceleratorsResult>("alicloud:ga/getBasicAccelerators:getBasicAccelerators", args ?? new GetBasicAcceleratorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Global Accelerator (GA) Basic Accelerators of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.194.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Ga.GetBasicAccelerators.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Ga.GetBasicAccelerators.Invoke(new()
        ///     {
        ///         NameRegex = "tf-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gaBasicAcceleratorId1"] = ids.Apply(getBasicAcceleratorsResult =&gt; getBasicAcceleratorsResult.Accelerators[0]?.Id),
        ///         ["gaBasicAcceleratorId2"] = nameRegex.Apply(getBasicAcceleratorsResult =&gt; getBasicAcceleratorsResult.Accelerators[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBasicAcceleratorsResult> Invoke(GetBasicAcceleratorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBasicAcceleratorsResult>("alicloud:ga/getBasicAccelerators:getBasicAccelerators", args ?? new GetBasicAcceleratorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBasicAcceleratorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Input("acceleratorId")]
        public string? AcceleratorId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Global Accelerator Basic Accelerator IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Global Accelerator Basic Accelerator name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        [Input("pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetBasicAcceleratorsArgs()
        {
        }
        public static new GetBasicAcceleratorsArgs Empty => new GetBasicAcceleratorsArgs();
    }

    public sealed class GetBasicAcceleratorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Input("acceleratorId")]
        public Input<string>? AcceleratorId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Global Accelerator Basic Accelerator IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Global Accelerator Basic Accelerator name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        /// <summary>
        /// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetBasicAcceleratorsInvokeArgs()
        {
        }
        public static new GetBasicAcceleratorsInvokeArgs Empty => new GetBasicAcceleratorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBasicAcceleratorsResult
    {
        public readonly string? AcceleratorId;
        /// <summary>
        /// A list of Global Accelerator Basic Accelerators. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBasicAcceleratorsAcceleratorResult> Accelerators;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Global Accelerator Basic Accelerator names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;
        /// <summary>
        /// The status of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetBasicAcceleratorsResult(
            string? acceleratorId,

            ImmutableArray<Outputs.GetBasicAcceleratorsAcceleratorResult> accelerators,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            int? pageNumber,

            int? pageSize,

            string? status)
        {
            AcceleratorId = acceleratorId;
            Accelerators = accelerators;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
            Status = status;
        }
    }
}
