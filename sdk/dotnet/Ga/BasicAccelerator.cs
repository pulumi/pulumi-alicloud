// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ga
{
    /// <summary>
    /// Provides a Global Accelerator (GA) Basic Accelerator resource.
    /// 
    /// For information about Global Accelerator (GA) Basic Accelerator and how to use it, see [What is Basic Accelerator](https://www.alibabacloud.com/help/en/global-accelerator/latest/createbasicaccelerator).
    /// 
    /// &gt; **NOTE:** Available in v1.194.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new AliCloud.Ga.BasicAccelerator("default", new()
    ///     {
    ///         AutoPay = true,
    ///         AutoUseCoupon = "true",
    ///         BandwidthBillingType = "BandwidthPackage",
    ///         BasicAcceleratorName = "tf-example-value",
    ///         Description = "tf-example-value",
    ///         Duration = 1,
    ///         PricingCycle = "Month",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Global Accelerator (GA) Basic Accelerator can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:ga/basicAccelerator:BasicAccelerator example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ga/basicAccelerator:BasicAccelerator")]
    public partial class BasicAccelerator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to enable automatic payment. Default value: `false`. Valid values:
        /// </summary>
        [Output("autoPay")]
        public Output<bool?> AutoPay { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
        /// </summary>
        [Output("autoRenew")]
        public Output<bool?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// The auto-renewal period. Unit: months. Valid values: `1` to `12`. Default value: `1`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
        /// </summary>
        [Output("autoRenewDuration")]
        public Output<int?> AutoRenewDuration { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
        /// </summary>
        [Output("autoUseCoupon")]
        public Output<string?> AutoUseCoupon { get; private set; } = null!;

        /// <summary>
        /// The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
        /// </summary>
        [Output("bandwidthBillingType")]
        public Output<string?> BandwidthBillingType { get; private set; } = null!;

        /// <summary>
        /// The name of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Output("basicAcceleratorName")]
        public Output<string?> BasicAcceleratorName { get; private set; } = null!;

        /// <summary>
        /// The description of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The subscription duration. Default value: `1`.
        /// * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
        /// * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
        /// </summary>
        [Output("duration")]
        public Output<int?> Duration { get; private set; } = null!;

        /// <summary>
        /// The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
        /// </summary>
        [Output("pricingCycle")]
        public Output<string?> PricingCycle { get; private set; } = null!;

        /// <summary>
        /// The status of the Basic Accelerator instance.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a BasicAccelerator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BasicAccelerator(string name, BasicAcceleratorArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:ga/basicAccelerator:BasicAccelerator", name, args ?? new BasicAcceleratorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BasicAccelerator(string name, Input<string> id, BasicAcceleratorState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ga/basicAccelerator:BasicAccelerator", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BasicAccelerator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BasicAccelerator Get(string name, Input<string> id, BasicAcceleratorState? state = null, CustomResourceOptions? options = null)
        {
            return new BasicAccelerator(name, id, state, options);
        }
    }

    public sealed class BasicAcceleratorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable automatic payment. Default value: `false`. Valid values:
        /// </summary>
        [Input("autoPay")]
        public Input<bool>? AutoPay { get; set; }

        /// <summary>
        /// Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The auto-renewal period. Unit: months. Valid values: `1` to `12`. Default value: `1`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
        /// </summary>
        [Input("autoRenewDuration")]
        public Input<int>? AutoRenewDuration { get; set; }

        /// <summary>
        /// Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
        /// </summary>
        [Input("autoUseCoupon")]
        public Input<string>? AutoUseCoupon { get; set; }

        /// <summary>
        /// The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
        /// </summary>
        [Input("bandwidthBillingType")]
        public Input<string>? BandwidthBillingType { get; set; }

        /// <summary>
        /// The name of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Input("basicAcceleratorName")]
        public Input<string>? BasicAcceleratorName { get; set; }

        /// <summary>
        /// The description of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The subscription duration. Default value: `1`.
        /// * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
        /// * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        public BasicAcceleratorArgs()
        {
        }
        public static new BasicAcceleratorArgs Empty => new BasicAcceleratorArgs();
    }

    public sealed class BasicAcceleratorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable automatic payment. Default value: `false`. Valid values:
        /// </summary>
        [Input("autoPay")]
        public Input<bool>? AutoPay { get; set; }

        /// <summary>
        /// Specifies whether to enable auto-renewal for the GA Basic Accelerator instance. Default value: `false`. Valid values:
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The auto-renewal period. Unit: months. Valid values: `1` to `12`. Default value: `1`. **NOTE:** This parameter is required only if `auto_renew` is set to `true`.
        /// </summary>
        [Input("autoRenewDuration")]
        public Input<int>? AutoRenewDuration { get; set; }

        /// <summary>
        /// Specifies whether to automatically pay bills by using coupons. Default value: `false`. **NOTE:** This parameter is required only if `auto_pay` is set to `true`.
        /// </summary>
        [Input("autoUseCoupon")]
        public Input<string>? AutoUseCoupon { get; set; }

        /// <summary>
        /// The bandwidth billing method. Valid values: `BandwidthPackage`, `CDT`, `CDT95`.
        /// </summary>
        [Input("bandwidthBillingType")]
        public Input<string>? BandwidthBillingType { get; set; }

        /// <summary>
        /// The name of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Input("basicAcceleratorName")]
        public Input<string>? BasicAcceleratorName { get; set; }

        /// <summary>
        /// The description of the Global Accelerator Basic Accelerator instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The subscription duration. Default value: `1`.
        /// * If the `pricing_cycle` parameter is set to `Month`, the valid values for the `duration` parameter are `1` to `9`.
        /// * If the `pricing_cycle` parameter is set to `Year`, the valid values for the `duration` parameter are `1` to `3`.
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// The billing cycle. Default value: `Month`. Valid values: `Month`, `Year`.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// The status of the Basic Accelerator instance.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public BasicAcceleratorState()
        {
        }
        public static new BasicAcceleratorState Empty => new BasicAcceleratorState();
    }
}
