// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nas
{
    /// <summary>
    /// Provides a File Storage (NAS) File System resource.
    /// 
    /// File System Instance.
    /// 
    /// For information about File Storage (NAS) File System and how to use it, see [What is File System](https://www.alibabacloud.com/help/en/nas/developer-reference/api-nas-2017-06-26-createfilesystem).
    /// 
    /// &gt; **NOTE:** Available since v1.33.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.Nas.GetZones.Invoke(new()
    ///     {
    ///         FileSystemType = "standard",
    ///     });
    /// 
    ///     var defaultFileSystem = new AliCloud.Nas.FileSystem("default", new()
    ///     {
    ///         ProtocolType = "NFS",
    ///         StorageType = "Capacity",
    ///         Description = name,
    ///         EncryptType = 1,
    ///         FileSystemType = "standard",
    ///         RecycleBin = new AliCloud.Nas.Inputs.FileSystemRecycleBinArgs
    ///         {
    ///             Status = "Enable",
    ///             ReservedDays = 10,
    ///         },
    ///         NfsAcl = new AliCloud.Nas.Inputs.FileSystemNfsAclArgs
    ///         {
    ///             Enabled = true,
    ///         },
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.ZoneId)),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// File Storage (NAS) File System can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:nas/fileSystem:FileSystem example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:nas/fileSystem:FileSystem")]
    public partial class FileSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// File system capacity.
        /// 
        /// Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
        /// 
        /// For optional values, please refer to the actual specifications on the purchase page:
        /// -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
        /// -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
        /// -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
        /// -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
        /// </summary>
        [Output("capacity")]
        public Output<int> Capacity { get; private set; } = null!;

        /// <summary>
        /// CreateTime
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// File system description.
        /// 
        /// Restrictions:
        /// - 2~128 English or Chinese characters in length.
        /// - Must start with upper and lower case letters or Chinese, and cannot start with'http: // 'and'https.
        /// - Can contain numbers, colons (:), underscores (_), or dashes (-).
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether the file system is encrypted.
        /// 
        /// Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
        /// 
        /// Value:
        /// - 0 (default): not encrypted.
        /// - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
        /// - 2: User management key. You can manage keys only when FileSystemType = extreme.
        /// </summary>
        [Output("encryptType")]
        public Output<int> EncryptType { get; private set; } = null!;

        /// <summary>
        /// File system type.
        /// 
        /// Value:
        /// - standard (default): Universal NAS
        /// - extreme: extreme NAS
        /// - cpfs: file storage CPFS
        /// </summary>
        [Output("fileSystemType")]
        public Output<string> FileSystemType { get; private set; } = null!;

        /// <summary>
        /// String of keytab file content encrypted by base64
        /// </summary>
        [Output("keytab")]
        public Output<string?> Keytab { get; private set; } = null!;

        /// <summary>
        /// String of the keytab file content encrypted by MD5
        /// </summary>
        [Output("keytabMd5")]
        public Output<string?> KeytabMd5 { get; private set; } = null!;

        /// <summary>
        /// The ID of the KMS key.
        /// This parameter is required only when EncryptType = 2.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// NFS ACL See `nfs_acl` below.
        /// </summary>
        [Output("nfsAcl")]
        public Output<Outputs.FileSystemNfsAcl> NfsAcl { get; private set; } = null!;

        /// <summary>
        /// Option. See `options` below.
        /// </summary>
        [Output("options")]
        public Output<Outputs.FileSystemOptions> Options { get; private set; } = null!;

        /// <summary>
        /// File transfer protocol type.
        /// - When FileSystemType = standard, the values are NFS and SMB.
        /// - When FileSystemType = extreme, the value is NFS.
        /// - When FileSystemType = cpfs, the value is cpfs.
        /// </summary>
        [Output("protocolType")]
        public Output<string> ProtocolType { get; private set; } = null!;

        /// <summary>
        /// Recycle Bin See `recycle_bin` below.
        /// </summary>
        [Output("recycleBin")]
        public Output<Outputs.FileSystemRecycleBin> RecycleBin { get; private set; } = null!;

        /// <summary>
        /// RegionId
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// SMB ACL See `smb_acl` below.
        /// </summary>
        [Output("smbAcl")]
        public Output<Outputs.FileSystemSmbAcl> SmbAcl { get; private set; } = null!;

        /// <summary>
        /// Only extreme NAS is supported.
        /// 
        /// &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
        /// </summary>
        [Output("snapshotId")]
        public Output<string?> SnapshotId { get; private set; } = null!;

        /// <summary>
        /// File system status. Includes:(such as creating a mount point) can only be performed when the file system is in the Running state.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The storage type.
        /// - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
        /// - When FileSystemType = extreme, the value is standard or advance.
        /// - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
        /// </summary>
        [Output("storageType")]
        public Output<string> StorageType { get; private set; } = null!;

        /// <summary>
        /// Label information collection.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC network.
        /// This parameter must be configured when FileSystemType = cpfs.
        /// When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
        /// </summary>
        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;

        /// <summary>
        /// The ID of the switch.
        /// This parameter must be configured when FileSystemType = cpfs.
        /// When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
        /// </summary>
        [Output("vswitchId")]
        public Output<string?> VswitchId { get; private set; } = null!;

        /// <summary>
        /// The zone ID.
        /// 
        /// The usable area refers to the physical area where power and network are independent of each other in the same area.
        /// 
        /// When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
        /// 
        /// &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
        /// 
        /// &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a FileSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileSystem(string name, FileSystemArgs args, CustomResourceOptions? options = null)
            : base("alicloud:nas/fileSystem:FileSystem", name, args ?? new FileSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileSystem(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:nas/fileSystem:FileSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileSystem Get(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new FileSystem(name, id, state, options);
        }
    }

    public sealed class FileSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// File system capacity.
        /// 
        /// Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
        /// 
        /// For optional values, please refer to the actual specifications on the purchase page:
        /// -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
        /// -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
        /// -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
        /// -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
        /// </summary>
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// File system description.
        /// 
        /// Restrictions:
        /// - 2~128 English or Chinese characters in length.
        /// - Must start with upper and lower case letters or Chinese, and cannot start with'http: // 'and'https.
        /// - Can contain numbers, colons (:), underscores (_), or dashes (-).
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether the file system is encrypted.
        /// 
        /// Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
        /// 
        /// Value:
        /// - 0 (default): not encrypted.
        /// - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
        /// - 2: User management key. You can manage keys only when FileSystemType = extreme.
        /// </summary>
        [Input("encryptType")]
        public Input<int>? EncryptType { get; set; }

        /// <summary>
        /// File system type.
        /// 
        /// Value:
        /// - standard (default): Universal NAS
        /// - extreme: extreme NAS
        /// - cpfs: file storage CPFS
        /// </summary>
        [Input("fileSystemType")]
        public Input<string>? FileSystemType { get; set; }

        /// <summary>
        /// String of keytab file content encrypted by base64
        /// </summary>
        [Input("keytab")]
        public Input<string>? Keytab { get; set; }

        /// <summary>
        /// String of the keytab file content encrypted by MD5
        /// </summary>
        [Input("keytabMd5")]
        public Input<string>? KeytabMd5 { get; set; }

        /// <summary>
        /// The ID of the KMS key.
        /// This parameter is required only when EncryptType = 2.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// NFS ACL See `nfs_acl` below.
        /// </summary>
        [Input("nfsAcl")]
        public Input<Inputs.FileSystemNfsAclArgs>? NfsAcl { get; set; }

        /// <summary>
        /// Option. See `options` below.
        /// </summary>
        [Input("options")]
        public Input<Inputs.FileSystemOptionsArgs>? Options { get; set; }

        /// <summary>
        /// File transfer protocol type.
        /// - When FileSystemType = standard, the values are NFS and SMB.
        /// - When FileSystemType = extreme, the value is NFS.
        /// - When FileSystemType = cpfs, the value is cpfs.
        /// </summary>
        [Input("protocolType", required: true)]
        public Input<string> ProtocolType { get; set; } = null!;

        /// <summary>
        /// Recycle Bin See `recycle_bin` below.
        /// </summary>
        [Input("recycleBin")]
        public Input<Inputs.FileSystemRecycleBinArgs>? RecycleBin { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// SMB ACL See `smb_acl` below.
        /// </summary>
        [Input("smbAcl")]
        public Input<Inputs.FileSystemSmbAclArgs>? SmbAcl { get; set; }

        /// <summary>
        /// Only extreme NAS is supported.
        /// 
        /// &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// The storage type.
        /// - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
        /// - When FileSystemType = extreme, the value is standard or advance.
        /// - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
        /// </summary>
        [Input("storageType", required: true)]
        public Input<string> StorageType { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Label information collection.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the VPC network.
        /// This parameter must be configured when FileSystemType = cpfs.
        /// When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The ID of the switch.
        /// This parameter must be configured when FileSystemType = cpfs.
        /// When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
        /// </summary>
        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        /// <summary>
        /// The zone ID.
        /// 
        /// The usable area refers to the physical area where power and network are independent of each other in the same area.
        /// 
        /// When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
        /// 
        /// &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
        /// 
        /// &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public FileSystemArgs()
        {
        }
        public static new FileSystemArgs Empty => new FileSystemArgs();
    }

    public sealed class FileSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// File system capacity.
        /// 
        /// Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
        /// 
        /// For optional values, please refer to the actual specifications on the purchase page:
        /// -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
        /// -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
        /// -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
        /// -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
        /// </summary>
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// CreateTime
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// File system description.
        /// 
        /// Restrictions:
        /// - 2~128 English or Chinese characters in length.
        /// - Must start with upper and lower case letters or Chinese, and cannot start with'http: // 'and'https.
        /// - Can contain numbers, colons (:), underscores (_), or dashes (-).
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether the file system is encrypted.
        /// 
        /// Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
        /// 
        /// Value:
        /// - 0 (default): not encrypted.
        /// - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
        /// - 2: User management key. You can manage keys only when FileSystemType = extreme.
        /// </summary>
        [Input("encryptType")]
        public Input<int>? EncryptType { get; set; }

        /// <summary>
        /// File system type.
        /// 
        /// Value:
        /// - standard (default): Universal NAS
        /// - extreme: extreme NAS
        /// - cpfs: file storage CPFS
        /// </summary>
        [Input("fileSystemType")]
        public Input<string>? FileSystemType { get; set; }

        /// <summary>
        /// String of keytab file content encrypted by base64
        /// </summary>
        [Input("keytab")]
        public Input<string>? Keytab { get; set; }

        /// <summary>
        /// String of the keytab file content encrypted by MD5
        /// </summary>
        [Input("keytabMd5")]
        public Input<string>? KeytabMd5 { get; set; }

        /// <summary>
        /// The ID of the KMS key.
        /// This parameter is required only when EncryptType = 2.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// NFS ACL See `nfs_acl` below.
        /// </summary>
        [Input("nfsAcl")]
        public Input<Inputs.FileSystemNfsAclGetArgs>? NfsAcl { get; set; }

        /// <summary>
        /// Option. See `options` below.
        /// </summary>
        [Input("options")]
        public Input<Inputs.FileSystemOptionsGetArgs>? Options { get; set; }

        /// <summary>
        /// File transfer protocol type.
        /// - When FileSystemType = standard, the values are NFS and SMB.
        /// - When FileSystemType = extreme, the value is NFS.
        /// - When FileSystemType = cpfs, the value is cpfs.
        /// </summary>
        [Input("protocolType")]
        public Input<string>? ProtocolType { get; set; }

        /// <summary>
        /// Recycle Bin See `recycle_bin` below.
        /// </summary>
        [Input("recycleBin")]
        public Input<Inputs.FileSystemRecycleBinGetArgs>? RecycleBin { get; set; }

        /// <summary>
        /// RegionId
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// SMB ACL See `smb_acl` below.
        /// </summary>
        [Input("smbAcl")]
        public Input<Inputs.FileSystemSmbAclGetArgs>? SmbAcl { get; set; }

        /// <summary>
        /// Only extreme NAS is supported.
        /// 
        /// &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// File system status. Includes:(such as creating a mount point) can only be performed when the file system is in the Running state.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The storage type.
        /// - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
        /// - When FileSystemType = extreme, the value is standard or advance.
        /// - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Label information collection.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the VPC network.
        /// This parameter must be configured when FileSystemType = cpfs.
        /// When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The ID of the switch.
        /// This parameter must be configured when FileSystemType = cpfs.
        /// When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
        /// </summary>
        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        /// <summary>
        /// The zone ID.
        /// 
        /// The usable area refers to the physical area where power and network are independent of each other in the same area.
        /// 
        /// When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
        /// 
        /// &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
        /// 
        /// &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public FileSystemState()
        {
        }
        public static new FileSystemState Empty => new FileSystemState();
    }
}
