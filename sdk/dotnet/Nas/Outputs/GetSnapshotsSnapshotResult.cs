// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nas.Outputs
{

    [OutputType]
    public sealed class GetSnapshotsSnapshotResult
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The type of the encryption.
        /// </summary>
        public readonly int EncryptType;
        /// <summary>
        /// The ID of the Snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The progress of the snapshot creation. The value of this parameter is expressed as a percentage.
        /// </summary>
        public readonly string Progress;
        /// <summary>
        /// The remaining time that is required to create the snapshot. Unit: seconds.
        /// </summary>
        public readonly int RemainTime;
        /// <summary>
        /// The retention period of the automatic snapshot. Unit: days.
        /// </summary>
        public readonly int RetentionDays;
        /// <summary>
        /// The ID of the resource.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        public readonly string SnapshotName;
        /// <summary>
        /// The ID of the source file system.
        /// </summary>
        public readonly string SourceFileSystemId;
        /// <summary>
        /// The capacity of the source file system. Unit: GiB.
        /// </summary>
        public readonly string SourceFileSystemSize;
        /// <summary>
        /// The version of the source file system.
        /// </summary>
        public readonly string SourceFileSystemVersion;
        /// <summary>
        /// The status of the snapshot.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetSnapshotsSnapshotResult(
            string createTime,

            string description,

            int encryptType,

            string id,

            string progress,

            int remainTime,

            int retentionDays,

            string snapshotId,

            string snapshotName,

            string sourceFileSystemId,

            string sourceFileSystemSize,

            string sourceFileSystemVersion,

            string status)
        {
            CreateTime = createTime;
            Description = description;
            EncryptType = encryptType;
            Id = id;
            Progress = progress;
            RemainTime = remainTime;
            RetentionDays = retentionDays;
            SnapshotId = snapshotId;
            SnapshotName = snapshotName;
            SourceFileSystemId = sourceFileSystemId;
            SourceFileSystemSize = sourceFileSystemSize;
            SourceFileSystemVersion = sourceFileSystemVersion;
            Status = status;
        }
    }
}
