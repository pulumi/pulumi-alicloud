// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.DataWorks
{
    /// <summary>
    /// Provides a Data Works Data Source Shared Rule resource.
    /// 
    /// Data source sharing rule, which expresses A data source, from space A to space B (A user).
    /// 
    /// For information about Data Works Data Source Shared Rule and how to use it, see [What is Data Source Shared Rule](https://www.alibabacloud.com/help/en/).
    /// 
    /// &gt; **NOTE:** Available since v1.237.0.
    /// 
    /// ## Import
    /// 
    /// Data Works Data Source Shared Rule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule example &lt;data_source_id&gt;:&lt;data_source_shared_rule_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule")]
    public partial class DataSourceSharedRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the data source sharing rule.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the data source, that is, the unique identifier of the data source.
        /// </summary>
        [Output("dataSourceId")]
        public Output<int> DataSourceId { get; private set; } = null!;

        /// <summary>
        /// The data source sharing rule ID, that is, the unique identifier of the data source sharing rule.
        /// </summary>
        [Output("dataSourceSharedRuleId")]
        public Output<string> DataSourceSharedRuleId { get; private set; } = null!;

        /// <summary>
        /// The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
        /// </summary>
        [Output("envType")]
        public Output<string> EnvType { get; private set; } = null!;

        /// <summary>
        /// The target user of the data source permission policy, which is null to share to the project.
        /// </summary>
        [Output("sharedUser")]
        public Output<string?> SharedUser { get; private set; } = null!;

        /// <summary>
        /// The ID of the project to which the data source is shared.
        /// </summary>
        [Output("targetProjectId")]
        public Output<int> TargetProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a DataSourceSharedRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataSourceSharedRule(string name, DataSourceSharedRuleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule", name, args ?? new DataSourceSharedRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataSourceSharedRule(string name, Input<string> id, DataSourceSharedRuleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataSourceSharedRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataSourceSharedRule Get(string name, Input<string> id, DataSourceSharedRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new DataSourceSharedRule(name, id, state, options);
        }
    }

    public sealed class DataSourceSharedRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the data source, that is, the unique identifier of the data source.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public Input<int> DataSourceId { get; set; } = null!;

        /// <summary>
        /// The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
        /// </summary>
        [Input("envType", required: true)]
        public Input<string> EnvType { get; set; } = null!;

        /// <summary>
        /// The target user of the data source permission policy, which is null to share to the project.
        /// </summary>
        [Input("sharedUser")]
        public Input<string>? SharedUser { get; set; }

        /// <summary>
        /// The ID of the project to which the data source is shared.
        /// </summary>
        [Input("targetProjectId", required: true)]
        public Input<int> TargetProjectId { get; set; } = null!;

        public DataSourceSharedRuleArgs()
        {
        }
        public static new DataSourceSharedRuleArgs Empty => new DataSourceSharedRuleArgs();
    }

    public sealed class DataSourceSharedRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the data source sharing rule.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the data source, that is, the unique identifier of the data source.
        /// </summary>
        [Input("dataSourceId")]
        public Input<int>? DataSourceId { get; set; }

        /// <summary>
        /// The data source sharing rule ID, that is, the unique identifier of the data source sharing rule.
        /// </summary>
        [Input("dataSourceSharedRuleId")]
        public Input<string>? DataSourceSharedRuleId { get; set; }

        /// <summary>
        /// The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
        /// </summary>
        [Input("envType")]
        public Input<string>? EnvType { get; set; }

        /// <summary>
        /// The target user of the data source permission policy, which is null to share to the project.
        /// </summary>
        [Input("sharedUser")]
        public Input<string>? SharedUser { get; set; }

        /// <summary>
        /// The ID of the project to which the data source is shared.
        /// </summary>
        [Input("targetProjectId")]
        public Input<int>? TargetProjectId { get; set; }

        public DataSourceSharedRuleState()
        {
        }
        public static new DataSourceSharedRuleState Empty => new DataSourceSharedRuleState();
    }
}
