// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.DataWorks
{
    /// <summary>
    /// Provides a Data Works Di Job resource.
    /// 
    /// Data Integration Tasks.
    /// 
    /// For information about Data Works Di Job and how to use it, see [What is Di Job](https://www.alibabacloud.com/help/en/dataworks/developer-reference/api-dataworks-public-2024-05-18-createdijob).
    /// 
    /// &gt; **NOTE:** Available since v1.241.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform_example";
    ///     var defaultMMHL8U = new AliCloud.DataWorks.Project("defaultMMHL8U", new()
    ///     {
    ///         ProjectName = name,
    ///         DisplayName = name,
    ///         Description = name,
    ///         PaiTaskEnabled = true,
    ///     });
    /// 
    ///     var @default = new AliCloud.DataWorks.DiJob("default", new()
    ///     {
    ///         Description = name,
    ///         ProjectId = defaultMMHL8U.Id,
    ///         JobName = "zhenyuan_example_case",
    ///         MigrationType = "api_FullAndRealtimeIncremental",
    ///         SourceDataSourceSettings = new[]
    ///         {
    ///             new AliCloud.DataWorks.Inputs.DiJobSourceDataSourceSettingArgs
    ///             {
    ///                 DataSourceName = "dw_mysql",
    ///                 DataSourceProperties = new AliCloud.DataWorks.Inputs.DiJobSourceDataSourceSettingDataSourcePropertiesArgs
    ///                 {
    ///                     Encoding = "utf-8",
    ///                     Timezone = "Asia/Shanghai",
    ///                 },
    ///             },
    ///         },
    ///         DestinationDataSourceType = "Hologres",
    ///         TableMappings = new[]
    ///         {
    ///             new AliCloud.DataWorks.Inputs.DiJobTableMappingArgs
    ///             {
    ///                 SourceObjectSelectionRules = new[]
    ///                 {
    ///                     new AliCloud.DataWorks.Inputs.DiJobTableMappingSourceObjectSelectionRuleArgs
    ///                     {
    ///                         Action = "Include",
    ///                         Expression = "dw_mysql",
    ///                         ExpressionType = "Exact",
    ///                         ObjectType = "Datasource",
    ///                     },
    ///                     new AliCloud.DataWorks.Inputs.DiJobTableMappingSourceObjectSelectionRuleArgs
    ///                     {
    ///                         Action = "Include",
    ///                         Expression = "example_db1",
    ///                         ExpressionType = "Exact",
    ///                         ObjectType = "Database",
    ///                     },
    ///                     new AliCloud.DataWorks.Inputs.DiJobTableMappingSourceObjectSelectionRuleArgs
    ///                     {
    ///                         Action = "Include",
    ///                         Expression = "lsc_example01",
    ///                         ExpressionType = "Exact",
    ///                         ObjectType = "Table",
    ///                     },
    ///                 },
    ///                 TransformationRules = new[]
    ///                 {
    ///                     new AliCloud.DataWorks.Inputs.DiJobTableMappingTransformationRuleArgs
    ///                     {
    ///                         RuleName = "my_table_rename_rule",
    ///                         RuleActionType = "Rename",
    ///                         RuleTargetType = "Table",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         SourceDataSourceType = "MySQL",
    ///         ResourceSettings = new AliCloud.DataWorks.Inputs.DiJobResourceSettingsArgs
    ///         {
    ///             OfflineResourceSettings = new AliCloud.DataWorks.Inputs.DiJobResourceSettingsOfflineResourceSettingsArgs
    ///             {
    ///                 RequestedCu = 2,
    ///                 ResourceGroupIdentifier = "S_res_group_524257424564736_1716799673667",
    ///             },
    ///             RealtimeResourceSettings = new AliCloud.DataWorks.Inputs.DiJobResourceSettingsRealtimeResourceSettingsArgs
    ///             {
    ///                 RequestedCu = 2,
    ///                 ResourceGroupIdentifier = "S_res_group_524257424564736_1716799673667",
    ///             },
    ///             ScheduleResourceSettings = new AliCloud.DataWorks.Inputs.DiJobResourceSettingsScheduleResourceSettingsArgs
    ///             {
    ///                 RequestedCu = 2,
    ///                 ResourceGroupIdentifier = "S_res_group_524257424564736_1716799673667",
    ///             },
    ///         },
    ///         TransformationRules = new[]
    ///         {
    ///             new AliCloud.DataWorks.Inputs.DiJobTransformationRuleArgs
    ///             {
    ///                 RuleActionType = "Rename",
    ///                 RuleExpression = "{\"expression\":\"table2\"}",
    ///                 RuleName = "my_table_rename_rule",
    ///                 RuleTargetType = "Table",
    ///             },
    ///         },
    ///         DestinationDataSourceSettings = new[]
    ///         {
    ///             new AliCloud.DataWorks.Inputs.DiJobDestinationDataSourceSettingArgs
    ///             {
    ///                 DataSourceName = "dw_example_holo",
    ///             },
    ///         },
    ///         JobSettings = new AliCloud.DataWorks.Inputs.DiJobJobSettingsArgs
    ///         {
    ///             ColumnDataTypeSettings = new[]
    ///             {
    ///                 new AliCloud.DataWorks.Inputs.DiJobJobSettingsColumnDataTypeSettingArgs
    ///                 {
    ///                     DestinationDataType = "bigint",
    ///                     SourceDataType = "longtext",
    ///                 },
    ///             },
    ///             DdlHandlingSettings = new[]
    ///             {
    ///                 new AliCloud.DataWorks.Inputs.DiJobJobSettingsDdlHandlingSettingArgs
    ///                 {
    ///                     Action = "Ignore",
    ///                     Type = "CreateTable",
    ///                 },
    ///             },
    ///             RuntimeSettings = new[]
    ///             {
    ///                 new AliCloud.DataWorks.Inputs.DiJobJobSettingsRuntimeSettingArgs
    ///                 {
    ///                     Name = "runtime.realtime.concurrent",
    ///                     Value = "1",
    ///                 },
    ///             },
    ///             ChannelSettings = "1",
    ///             CycleScheduleSettings = new AliCloud.DataWorks.Inputs.DiJobJobSettingsCycleScheduleSettingsArgs
    ///             {
    ///                 CycleMigrationType = "2",
    ///                 ScheduleParameters = "3",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Data Works Di Job can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:dataworks/diJob:DiJob example &lt;project_id&gt;:&lt;di_job_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:dataworks/diJob:DiJob")]
    public partial class DiJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the integration task
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Destination data source See `DestinationDataSourceSettings` below.
        /// </summary>
        [Output("destinationDataSourceSettings")]
        public Output<ImmutableArray<Outputs.DiJobDestinationDataSourceSetting>> DestinationDataSourceSettings { get; private set; } = null!;

        /// <summary>
        /// The type of the target data source. Enumerated values: Hologres and Hive.
        /// </summary>
        [Output("destinationDataSourceType")]
        public Output<string> DestinationDataSourceType { get; private set; } = null!;

        /// <summary>
        /// Integration Task Id
        /// </summary>
        [Output("diJobId")]
        public Output<int> DiJobId { get; private set; } = null!;

        /// <summary>
        /// Task Name.
        /// </summary>
        [Output("jobName")]
        public Output<string> JobName { get; private set; } = null!;

        /// <summary>
        /// The dimension settings of the synchronization task, including the DDL processing policy, the source and destination column data type mapping policy, and the task runtime parameters. See `JobSettings` below.
        /// </summary>
        [Output("jobSettings")]
        public Output<Outputs.DiJobJobSettings?> JobSettings { get; private set; } = null!;

        /// <summary>
        /// Synchronization type, optional enumeration values are:
        /// 
        /// Fulllandrealtimeincremental (full and real-time incremental)
        /// 
        /// RealtimeIncremental
        /// 
        /// Full
        /// 
        /// Offflineincremental
        /// 
        /// FullAndOfflineIncremental (full amount + offline increment)
        /// </summary>
        [Output("migrationType")]
        public Output<string> MigrationType { get; private set; } = null!;

        /// <summary>
        /// Project Id
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Resource Group Properties See `ResourceSettings` below.
        /// </summary>
        [Output("resourceSettings")]
        public Output<Outputs.DiJobResourceSettings> ResourceSettings { get; private set; } = null!;

        /// <summary>
        /// Source data source setting List See `SourceDataSourceSettings` below.
        /// </summary>
        [Output("sourceDataSourceSettings")]
        public Output<ImmutableArray<Outputs.DiJobSourceDataSourceSetting>> SourceDataSourceSettings { get; private set; } = null!;

        /// <summary>
        /// The type of the source data source. The enumerated value is MySQL.
        /// </summary>
        [Output("sourceDataSourceType")]
        public Output<string> SourceDataSourceType { get; private set; } = null!;

        /// <summary>
        /// Synchronize object transformation mapping list See `TableMappings` below.
        /// </summary>
        [Output("tableMappings")]
        public Output<ImmutableArray<Outputs.DiJobTableMapping>> TableMappings { get; private set; } = null!;

        /// <summary>
        /// Definition list of synchronization object conversion rules See `TransformationRules` below.
        /// </summary>
        [Output("transformationRules")]
        public Output<ImmutableArray<Outputs.DiJobTransformationRule>> TransformationRules { get; private set; } = null!;


        /// <summary>
        /// Create a DiJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiJob(string name, DiJobArgs args, CustomResourceOptions? options = null)
            : base("alicloud:dataworks/diJob:DiJob", name, args ?? new DiJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiJob(string name, Input<string> id, DiJobState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:dataworks/diJob:DiJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiJob Get(string name, Input<string> id, DiJobState? state = null, CustomResourceOptions? options = null)
        {
            return new DiJob(name, id, state, options);
        }
    }

    public sealed class DiJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the integration task
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationDataSourceSettings", required: true)]
        private InputList<Inputs.DiJobDestinationDataSourceSettingArgs>? _destinationDataSourceSettings;

        /// <summary>
        /// Destination data source See `DestinationDataSourceSettings` below.
        /// </summary>
        public InputList<Inputs.DiJobDestinationDataSourceSettingArgs> DestinationDataSourceSettings
        {
            get => _destinationDataSourceSettings ?? (_destinationDataSourceSettings = new InputList<Inputs.DiJobDestinationDataSourceSettingArgs>());
            set => _destinationDataSourceSettings = value;
        }

        /// <summary>
        /// The type of the target data source. Enumerated values: Hologres and Hive.
        /// </summary>
        [Input("destinationDataSourceType", required: true)]
        public Input<string> DestinationDataSourceType { get; set; } = null!;

        /// <summary>
        /// Task Name.
        /// </summary>
        [Input("jobName", required: true)]
        public Input<string> JobName { get; set; } = null!;

        /// <summary>
        /// The dimension settings of the synchronization task, including the DDL processing policy, the source and destination column data type mapping policy, and the task runtime parameters. See `JobSettings` below.
        /// </summary>
        [Input("jobSettings")]
        public Input<Inputs.DiJobJobSettingsArgs>? JobSettings { get; set; }

        /// <summary>
        /// Synchronization type, optional enumeration values are:
        /// 
        /// Fulllandrealtimeincremental (full and real-time incremental)
        /// 
        /// RealtimeIncremental
        /// 
        /// Full
        /// 
        /// Offflineincremental
        /// 
        /// FullAndOfflineIncremental (full amount + offline increment)
        /// </summary>
        [Input("migrationType", required: true)]
        public Input<string> MigrationType { get; set; } = null!;

        /// <summary>
        /// Project Id
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Resource Group Properties See `ResourceSettings` below.
        /// </summary>
        [Input("resourceSettings", required: true)]
        public Input<Inputs.DiJobResourceSettingsArgs> ResourceSettings { get; set; } = null!;

        [Input("sourceDataSourceSettings", required: true)]
        private InputList<Inputs.DiJobSourceDataSourceSettingArgs>? _sourceDataSourceSettings;

        /// <summary>
        /// Source data source setting List See `SourceDataSourceSettings` below.
        /// </summary>
        public InputList<Inputs.DiJobSourceDataSourceSettingArgs> SourceDataSourceSettings
        {
            get => _sourceDataSourceSettings ?? (_sourceDataSourceSettings = new InputList<Inputs.DiJobSourceDataSourceSettingArgs>());
            set => _sourceDataSourceSettings = value;
        }

        /// <summary>
        /// The type of the source data source. The enumerated value is MySQL.
        /// </summary>
        [Input("sourceDataSourceType", required: true)]
        public Input<string> SourceDataSourceType { get; set; } = null!;

        [Input("tableMappings", required: true)]
        private InputList<Inputs.DiJobTableMappingArgs>? _tableMappings;

        /// <summary>
        /// Synchronize object transformation mapping list See `TableMappings` below.
        /// </summary>
        public InputList<Inputs.DiJobTableMappingArgs> TableMappings
        {
            get => _tableMappings ?? (_tableMappings = new InputList<Inputs.DiJobTableMappingArgs>());
            set => _tableMappings = value;
        }

        [Input("transformationRules")]
        private InputList<Inputs.DiJobTransformationRuleArgs>? _transformationRules;

        /// <summary>
        /// Definition list of synchronization object conversion rules See `TransformationRules` below.
        /// </summary>
        public InputList<Inputs.DiJobTransformationRuleArgs> TransformationRules
        {
            get => _transformationRules ?? (_transformationRules = new InputList<Inputs.DiJobTransformationRuleArgs>());
            set => _transformationRules = value;
        }

        public DiJobArgs()
        {
        }
        public static new DiJobArgs Empty => new DiJobArgs();
    }

    public sealed class DiJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the integration task
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationDataSourceSettings")]
        private InputList<Inputs.DiJobDestinationDataSourceSettingGetArgs>? _destinationDataSourceSettings;

        /// <summary>
        /// Destination data source See `DestinationDataSourceSettings` below.
        /// </summary>
        public InputList<Inputs.DiJobDestinationDataSourceSettingGetArgs> DestinationDataSourceSettings
        {
            get => _destinationDataSourceSettings ?? (_destinationDataSourceSettings = new InputList<Inputs.DiJobDestinationDataSourceSettingGetArgs>());
            set => _destinationDataSourceSettings = value;
        }

        /// <summary>
        /// The type of the target data source. Enumerated values: Hologres and Hive.
        /// </summary>
        [Input("destinationDataSourceType")]
        public Input<string>? DestinationDataSourceType { get; set; }

        /// <summary>
        /// Integration Task Id
        /// </summary>
        [Input("diJobId")]
        public Input<int>? DiJobId { get; set; }

        /// <summary>
        /// Task Name.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// The dimension settings of the synchronization task, including the DDL processing policy, the source and destination column data type mapping policy, and the task runtime parameters. See `JobSettings` below.
        /// </summary>
        [Input("jobSettings")]
        public Input<Inputs.DiJobJobSettingsGetArgs>? JobSettings { get; set; }

        /// <summary>
        /// Synchronization type, optional enumeration values are:
        /// 
        /// Fulllandrealtimeincremental (full and real-time incremental)
        /// 
        /// RealtimeIncremental
        /// 
        /// Full
        /// 
        /// Offflineincremental
        /// 
        /// FullAndOfflineIncremental (full amount + offline increment)
        /// </summary>
        [Input("migrationType")]
        public Input<string>? MigrationType { get; set; }

        /// <summary>
        /// Project Id
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Resource Group Properties See `ResourceSettings` below.
        /// </summary>
        [Input("resourceSettings")]
        public Input<Inputs.DiJobResourceSettingsGetArgs>? ResourceSettings { get; set; }

        [Input("sourceDataSourceSettings")]
        private InputList<Inputs.DiJobSourceDataSourceSettingGetArgs>? _sourceDataSourceSettings;

        /// <summary>
        /// Source data source setting List See `SourceDataSourceSettings` below.
        /// </summary>
        public InputList<Inputs.DiJobSourceDataSourceSettingGetArgs> SourceDataSourceSettings
        {
            get => _sourceDataSourceSettings ?? (_sourceDataSourceSettings = new InputList<Inputs.DiJobSourceDataSourceSettingGetArgs>());
            set => _sourceDataSourceSettings = value;
        }

        /// <summary>
        /// The type of the source data source. The enumerated value is MySQL.
        /// </summary>
        [Input("sourceDataSourceType")]
        public Input<string>? SourceDataSourceType { get; set; }

        [Input("tableMappings")]
        private InputList<Inputs.DiJobTableMappingGetArgs>? _tableMappings;

        /// <summary>
        /// Synchronize object transformation mapping list See `TableMappings` below.
        /// </summary>
        public InputList<Inputs.DiJobTableMappingGetArgs> TableMappings
        {
            get => _tableMappings ?? (_tableMappings = new InputList<Inputs.DiJobTableMappingGetArgs>());
            set => _tableMappings = value;
        }

        [Input("transformationRules")]
        private InputList<Inputs.DiJobTransformationRuleGetArgs>? _transformationRules;

        /// <summary>
        /// Definition list of synchronization object conversion rules See `TransformationRules` below.
        /// </summary>
        public InputList<Inputs.DiJobTransformationRuleGetArgs> TransformationRules
        {
            get => _transformationRules ?? (_transformationRules = new InputList<Inputs.DiJobTransformationRuleGetArgs>());
            set => _transformationRules = value;
        }

        public DiJobState()
        {
        }
        public static new DiJobState Empty => new DiJobState();
    }
}
