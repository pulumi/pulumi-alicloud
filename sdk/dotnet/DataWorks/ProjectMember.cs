// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.DataWorks
{
    /// <summary>
    /// Provides a Data Works Project Member resource.
    /// 
    /// For information about Data Works Project Member and how to use it, see [What is Project Member](https://www.alibabacloud.com/help/en/dataworks/developer-reference/api-dataworks-public-2024-05-18-createprojectmember).
    /// 
    /// &gt; **NOTE:** Available since v1.237.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var adminCode = config.Get("adminCode") ?? "role_project_admin";
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var randint = new Random.Index.Integer("randint", new()
    ///     {
    ///         Max = 999,
    ///         Min = 1,
    ///     });
    /// 
    ///     var defaultKCTrB2 = new AliCloud.Ram.User("defaultKCTrB2", new()
    ///     {
    ///         DisplayName = $"{name}{randint.Id}",
    ///         Name = $"{name}{randint.Id}",
    ///     });
    /// 
    ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultQeRfvU = new AliCloud.DataWorks.Project("defaultQeRfvU", new()
    ///     {
    ///         Status = "Available",
    ///         Description = "tf_desc",
    ///         ProjectName = $"{name}{randint.Id}",
    ///         PaiTaskEnabled = false,
    ///         DisplayName = "tf_new_api_display",
    ///         DevRoleDisabled = true,
    ///         DevEnvironmentEnabled = false,
    ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0])),
    ///     });
    /// 
    ///     var defaultProjectMember = new AliCloud.DataWorks.ProjectMember("default", new()
    ///     {
    ///         UserId = defaultKCTrB2.Id,
    ///         ProjectId = defaultQeRfvU.Id,
    ///         Roles = new[]
    ///         {
    ///             new AliCloud.DataWorks.Inputs.ProjectMemberRoleArgs
    ///             {
    ///                 Code = adminCode,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Data Works Project Member can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:dataworks/projectMember:ProjectMember example &lt;project_id&gt;:&lt;user_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:dataworks/projectMember:ProjectMember")]
    public partial class ProjectMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Project ID
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// List of roles owned by members. See `roles` below.
        /// </summary>
        [Output("roles")]
        public Output<ImmutableArray<Outputs.ProjectMemberRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// The status of the user in project
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The user ID of the member.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectMember(string name, ProjectMemberArgs args, CustomResourceOptions? options = null)
            : base("alicloud:dataworks/projectMember:ProjectMember", name, args ?? new ProjectMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectMember(string name, Input<string> id, ProjectMemberState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:dataworks/projectMember:ProjectMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectMember Get(string name, Input<string> id, ProjectMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectMember(name, id, state, options);
        }
    }

    public sealed class ProjectMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Project ID
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        [Input("roles")]
        private InputList<Inputs.ProjectMemberRoleArgs>? _roles;

        /// <summary>
        /// List of roles owned by members. See `roles` below.
        /// </summary>
        public InputList<Inputs.ProjectMemberRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectMemberRoleArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The user ID of the member.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public ProjectMemberArgs()
        {
        }
        public static new ProjectMemberArgs Empty => new ProjectMemberArgs();
    }

    public sealed class ProjectMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Project ID
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("roles")]
        private InputList<Inputs.ProjectMemberRoleGetArgs>? _roles;

        /// <summary>
        /// List of roles owned by members. See `roles` below.
        /// </summary>
        public InputList<Inputs.ProjectMemberRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectMemberRoleGetArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The status of the user in project
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The user ID of the member.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public ProjectMemberState()
        {
        }
        public static new ProjectMemberState Empty => new ProjectMemberState();
    }
}
