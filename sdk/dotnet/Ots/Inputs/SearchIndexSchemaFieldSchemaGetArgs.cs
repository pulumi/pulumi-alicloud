// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ots.Inputs
{

    public sealed class SearchIndexSchemaFieldSchemaGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the type of the analyzer that you want to use. If fieldType is set to Text, you can configure this parameter. Otherwise, the default analyzer type single-word tokenization is used.
        /// </summary>
        [Input("analyzer")]
        public Input<string>? Analyzer { get; set; }

        /// <summary>
        /// Specifies whether to enable sorting and aggregation. Type: Boolean. Sorting can be enabled only for fields for which enable_sort_and_agg is set to true.
        /// </summary>
        [Input("enableSortAndAgg")]
        public Input<bool>? EnableSortAndAgg { get; set; }

        /// <summary>
        /// The name of the field that is used to sort data. only required if sorter_type is FieldSort.
        /// </summary>
        [Input("fieldName", required: true)]
        public Input<string> FieldName { get; set; } = null!;

        /// <summary>
        /// Specifies the type of the field. Use FieldType.XXX to set the type.
        /// </summary>
        [Input("fieldType", required: true)]
        public Input<string> FieldType { get; set; } = null!;

        /// <summary>
        /// Specifies whether to enable indexing for the column. Type: Boolean.
        /// </summary>
        [Input("index")]
        public Input<bool>? Index { get; set; }

        /// <summary>
        /// Specifies whether the value is an array. Type: Boolean.
        /// </summary>
        [Input("isArray")]
        public Input<bool>? IsArray { get; set; }

        /// <summary>
        /// Specifies whether to store the value of the field in the search index. Type: Boolean. If you set store to true, you can read the value of the field from the search index without querying the data table. This improves query performance.
        /// </summary>
        [Input("store")]
        public Input<bool>? Store { get; set; }

        public SearchIndexSchemaFieldSchemaGetArgs()
        {
        }
        public static new SearchIndexSchemaFieldSchemaGetArgs Empty => new SearchIndexSchemaFieldSchemaGetArgs();
    }
}
