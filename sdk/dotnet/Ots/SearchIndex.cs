// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ots
{
    /// <summary>
    /// Provides an OTS search index resource.
    /// 
    /// For information about OTS search index and how to use it, see [Search index overview](https://www.alibabacloud.com/help/en/tablestore/latest/search-index-overview).
    /// 
    /// &gt; **NOTE:** Available in v1.187.0+.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraformtest";
    ///     var instance1 = new AliCloud.Ots.Instance("instance1", new()
    ///     {
    ///         Description = name,
    ///         AccessedBy = "Any",
    ///         Tags = 
    ///         {
    ///             { "Created", "TF" },
    ///             { "For", "acceptance test" },
    ///         },
    ///     });
    /// 
    ///     var table1 = new AliCloud.Ots.Table("table1", new()
    ///     {
    ///         InstanceName = instance1.Name,
    ///         TableName = name,
    ///         PrimaryKeys = new[]
    ///         {
    ///             new AliCloud.Ots.Inputs.TablePrimaryKeyArgs
    ///             {
    ///                 Name = "pk1",
    ///                 Type = "Integer",
    ///             },
    ///             new AliCloud.Ots.Inputs.TablePrimaryKeyArgs
    ///             {
    ///                 Name = "pk2",
    ///                 Type = "String",
    ///             },
    ///         },
    ///         DefinedColumns = new[]
    ///         {
    ///             new AliCloud.Ots.Inputs.TableDefinedColumnArgs
    ///             {
    ///                 Name = "col1",
    ///                 Type = "String",
    ///             },
    ///             new AliCloud.Ots.Inputs.TableDefinedColumnArgs
    ///             {
    ///                 Name = "col2",
    ///                 Type = "Integer",
    ///             },
    ///         },
    ///         TimeToLive = -1,
    ///         MaxVersion = 1,
    ///         DeviationCellVersionInSec = "1",
    ///     });
    /// 
    ///     var @default = new AliCloud.Ots.SearchIndex("default", new()
    ///     {
    ///         InstanceName = instance1.Name,
    ///         TableName = table1.TableName,
    ///         IndexName = name,
    ///         TimeToLive = -1,
    ///         Schemas = new[]
    ///         {
    ///             new AliCloud.Ots.Inputs.SearchIndexSchemaArgs
    ///             {
    ///                 FieldSchemas = new[]
    ///                 {
    ///                     new AliCloud.Ots.Inputs.SearchIndexSchemaFieldSchemaArgs
    ///                     {
    ///                         FieldName = "col1",
    ///                         FieldType = "Text",
    ///                         IsArray = false,
    ///                         Index = true,
    ///                         Analyzer = "Split",
    ///                         Store = true,
    ///                     },
    ///                     new AliCloud.Ots.Inputs.SearchIndexSchemaFieldSchemaArgs
    ///                     {
    ///                         FieldName = "col2",
    ///                         FieldType = "Long",
    ///                         EnableSortAndAgg = true,
    ///                     },
    ///                     new AliCloud.Ots.Inputs.SearchIndexSchemaFieldSchemaArgs
    ///                     {
    ///                         FieldName = "pk1",
    ///                         FieldType = "Long",
    ///                     },
    ///                     new AliCloud.Ots.Inputs.SearchIndexSchemaFieldSchemaArgs
    ///                     {
    ///                         FieldName = "pk2",
    ///                         FieldType = "Text",
    ///                     },
    ///                 },
    ///                 IndexSettings = new[]
    ///                 {
    ///                     new AliCloud.Ots.Inputs.SearchIndexSchemaIndexSettingArgs
    ///                     {
    ///                         RoutingFields = new[]
    ///                         {
    ///                             "pk1",
    ///                             "pk2",
    ///                         },
    ///                     },
    ///                 },
    ///                 IndexSorts = new[]
    ///                 {
    ///                     new AliCloud.Ots.Inputs.SearchIndexSchemaIndexSortArgs
    ///                     {
    ///                         Sorters = new[]
    ///                         {
    ///                             new AliCloud.Ots.Inputs.SearchIndexSchemaIndexSortSorterArgs
    ///                             {
    ///                                 SorterType = "PrimaryKeySort",
    ///                                 Order = "Asc",
    ///                             },
    ///                             new AliCloud.Ots.Inputs.SearchIndexSchemaIndexSortSorterArgs
    ///                             {
    ///                                 SorterType = "FieldSort",
    ///                                 Order = "Desc",
    ///                                 FieldName = "col2",
    ///                                 Mode = "Max",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OTS search index can be imported using id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:ots/searchIndex:SearchIndex index1 &lt;instance_name&gt;:&lt;table_name&gt;:&lt;index_name&gt;:&lt;index_type&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ots/searchIndex:SearchIndex")]
    public partial class SearchIndex : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The search index create time.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The timestamp for sync phase.
        /// </summary>
        [Output("currentSyncTimestamp")]
        public Output<int> CurrentSyncTimestamp { get; private set; } = null!;

        /// <summary>
        /// The index id of the search index which could not be changed.
        /// </summary>
        [Output("indexId")]
        public Output<string> IndexId { get; private set; } = null!;

        /// <summary>
        /// The index name of the OTS Table. If changed, a new index would be created.
        /// </summary>
        [Output("indexName")]
        public Output<string> IndexName { get; private set; } = null!;

        /// <summary>
        /// The name of the OTS instance in which table will located.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// The schema of the search index. If changed, a new index would be created.
        /// </summary>
        [Output("schemas")]
        public Output<ImmutableArray<Outputs.SearchIndexSchema>> Schemas { get; private set; } = null!;

        /// <summary>
        /// The search index sync phase. possible values: `Full`, `Incr`.
        /// </summary>
        [Output("syncPhase")]
        public Output<string> SyncPhase { get; private set; } = null!;

        /// <summary>
        /// The name of the OTS table. If changed, a new table would be created.
        /// </summary>
        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;

        /// <summary>
        /// The index type of the OTS Table. Specifies the retention period of data in the search index. Unit: seconds. Default value: -1.
        /// If the retention period exceeds the TTL value, OTS automatically deletes expired data.
        /// </summary>
        [Output("timeToLive")]
        public Output<int?> TimeToLive { get; private set; } = null!;


        /// <summary>
        /// Create a SearchIndex resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SearchIndex(string name, SearchIndexArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ots/searchIndex:SearchIndex", name, args ?? new SearchIndexArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SearchIndex(string name, Input<string> id, SearchIndexState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ots/searchIndex:SearchIndex", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SearchIndex resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SearchIndex Get(string name, Input<string> id, SearchIndexState? state = null, CustomResourceOptions? options = null)
        {
            return new SearchIndex(name, id, state, options);
        }
    }

    public sealed class SearchIndexArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The index name of the OTS Table. If changed, a new index would be created.
        /// </summary>
        [Input("indexName", required: true)]
        public Input<string> IndexName { get; set; } = null!;

        /// <summary>
        /// The name of the OTS instance in which table will located.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        [Input("schemas", required: true)]
        private InputList<Inputs.SearchIndexSchemaArgs>? _schemas;

        /// <summary>
        /// The schema of the search index. If changed, a new index would be created.
        /// </summary>
        public InputList<Inputs.SearchIndexSchemaArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.SearchIndexSchemaArgs>());
            set => _schemas = value;
        }

        /// <summary>
        /// The name of the OTS table. If changed, a new table would be created.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        /// <summary>
        /// The index type of the OTS Table. Specifies the retention period of data in the search index. Unit: seconds. Default value: -1.
        /// If the retention period exceeds the TTL value, OTS automatically deletes expired data.
        /// </summary>
        [Input("timeToLive")]
        public Input<int>? TimeToLive { get; set; }

        public SearchIndexArgs()
        {
        }
        public static new SearchIndexArgs Empty => new SearchIndexArgs();
    }

    public sealed class SearchIndexState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The search index create time.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// The timestamp for sync phase.
        /// </summary>
        [Input("currentSyncTimestamp")]
        public Input<int>? CurrentSyncTimestamp { get; set; }

        /// <summary>
        /// The index id of the search index which could not be changed.
        /// </summary>
        [Input("indexId")]
        public Input<string>? IndexId { get; set; }

        /// <summary>
        /// The index name of the OTS Table. If changed, a new index would be created.
        /// </summary>
        [Input("indexName")]
        public Input<string>? IndexName { get; set; }

        /// <summary>
        /// The name of the OTS instance in which table will located.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        [Input("schemas")]
        private InputList<Inputs.SearchIndexSchemaGetArgs>? _schemas;

        /// <summary>
        /// The schema of the search index. If changed, a new index would be created.
        /// </summary>
        public InputList<Inputs.SearchIndexSchemaGetArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.SearchIndexSchemaGetArgs>());
            set => _schemas = value;
        }

        /// <summary>
        /// The search index sync phase. possible values: `Full`, `Incr`.
        /// </summary>
        [Input("syncPhase")]
        public Input<string>? SyncPhase { get; set; }

        /// <summary>
        /// The name of the OTS table. If changed, a new table would be created.
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        /// <summary>
        /// The index type of the OTS Table. Specifies the retention period of data in the search index. Unit: seconds. Default value: -1.
        /// If the retention period exceeds the TTL value, OTS automatically deletes expired data.
        /// </summary>
        [Input("timeToLive")]
        public Input<int>? TimeToLive { get; set; }

        public SearchIndexState()
        {
        }
        public static new SearchIndexState Empty => new SearchIndexState();
    }
}
