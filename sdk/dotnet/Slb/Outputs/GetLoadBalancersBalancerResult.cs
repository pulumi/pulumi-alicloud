// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Slb.Outputs
{

    [OutputType]
    public sealed class GetLoadBalancersBalancerResult
    {
        /// <summary>
        /// Service address of the SLBs.
        /// </summary>
        public readonly string Address;
        public readonly string AddressIpVersion;
        public readonly string AddressType;
        public readonly int AutoReleaseTime;
        public readonly ImmutableArray<Outputs.GetLoadBalancersBalancerBackendServerResult> BackendServers;
        public readonly int Bandwidth;
        public readonly int CreateTimeStamp;
        public readonly string DeleteProtection;
        public readonly string EndTime;
        public readonly int EndTimeStamp;
        /// <summary>
        /// ID of the SLB.
        /// </summary>
        public readonly string Id;
        public readonly string InternetChargeType;
        public readonly ImmutableArray<Outputs.GetLoadBalancersBalancerListenerPortsAndProtocalResult> ListenerPortsAndProtocals;
        public readonly ImmutableArray<Outputs.GetLoadBalancersBalancerListenerPortsAndProtocolResult> ListenerPortsAndProtocols;
        public readonly string LoadBalancerId;
        public readonly string LoadBalancerName;
        public readonly string LoadBalancerSpec;
        public readonly string MasterZoneId;
        public readonly string ModificationProtectionReason;
        public readonly string ModificationProtectionStatus;
        /// <summary>
        /// Network type of the SLBs. Valid values: `vpc` and `classic`.
        /// </summary>
        public readonly string NetworkType;
        public readonly string PaymentType;
        public readonly string RegionIdAlias;
        public readonly string RenewalCycUnit;
        public readonly int RenewalDuration;
        public readonly string RenewalStatus;
        /// <summary>
        /// The Id of resource group which SLB belongs.
        /// </summary>
        public readonly string ResourceGroupId;
        public readonly string SlaveZoneId;
        /// <summary>
        /// SLB current status. Possible values: `inactive`, `active` and `locked`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var taggedInstances = AliCloud.Slb.GetLoadBalancers.Invoke(new()
        ///     {
        ///         Tags = 
        ///         {
        ///             { "tagKey1", "tagValue1" },
        ///             { "tagKey2", "tagValue2" },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// ID of the VPC linked to the SLBs.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// ID of the VSwitch linked to the SLBs.
        /// </summary>
        public readonly string VswitchId;

        [OutputConstructor]
        private GetLoadBalancersBalancerResult(
            string address,

            string addressIpVersion,

            string addressType,

            int autoReleaseTime,

            ImmutableArray<Outputs.GetLoadBalancersBalancerBackendServerResult> backendServers,

            int bandwidth,

            int createTimeStamp,

            string deleteProtection,

            string endTime,

            int endTimeStamp,

            string id,

            string internetChargeType,

            ImmutableArray<Outputs.GetLoadBalancersBalancerListenerPortsAndProtocalResult> listenerPortsAndProtocals,

            ImmutableArray<Outputs.GetLoadBalancersBalancerListenerPortsAndProtocolResult> listenerPortsAndProtocols,

            string loadBalancerId,

            string loadBalancerName,

            string loadBalancerSpec,

            string masterZoneId,

            string modificationProtectionReason,

            string modificationProtectionStatus,

            string networkType,

            string paymentType,

            string regionIdAlias,

            string renewalCycUnit,

            int renewalDuration,

            string renewalStatus,

            string resourceGroupId,

            string slaveZoneId,

            string status,

            ImmutableDictionary<string, object> tags,

            string vpcId,

            string vswitchId)
        {
            Address = address;
            AddressIpVersion = addressIpVersion;
            AddressType = addressType;
            AutoReleaseTime = autoReleaseTime;
            BackendServers = backendServers;
            Bandwidth = bandwidth;
            CreateTimeStamp = createTimeStamp;
            DeleteProtection = deleteProtection;
            EndTime = endTime;
            EndTimeStamp = endTimeStamp;
            Id = id;
            InternetChargeType = internetChargeType;
            ListenerPortsAndProtocals = listenerPortsAndProtocals;
            ListenerPortsAndProtocols = listenerPortsAndProtocols;
            LoadBalancerId = loadBalancerId;
            LoadBalancerName = loadBalancerName;
            LoadBalancerSpec = loadBalancerSpec;
            MasterZoneId = masterZoneId;
            ModificationProtectionReason = modificationProtectionReason;
            ModificationProtectionStatus = modificationProtectionStatus;
            NetworkType = networkType;
            PaymentType = paymentType;
            RegionIdAlias = regionIdAlias;
            RenewalCycUnit = renewalCycUnit;
            RenewalDuration = renewalDuration;
            RenewalStatus = renewalStatus;
            ResourceGroupId = resourceGroupId;
            SlaveZoneId = slaveZoneId;
            Status = status;
            Tags = tags;
            VpcId = vpcId;
            VswitchId = vswitchId;
        }
    }
}
