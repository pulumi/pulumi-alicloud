// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Tag
{
    /// <summary>
    /// Provides a Tag Policy Attachment resource to attaches a policy to an object. After you attach a tag policy to an object.
    /// For information about Tag Policy Attachment and how to use it,
    /// see [What is Policy Attachment](https://www.alibabacloud.com/help/en/resource-management/latest/attach-policy).
    /// 
    /// &gt; **NOTE:** Available since v1.204.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var @default = AliCloud.GetAccount.Invoke();
    /// 
    ///     var examplePolicy = new AliCloud.Tag.Policy("examplePolicy", new()
    ///     {
    ///         PolicyName = name,
    ///         PolicyDesc = name,
    ///         UserType = "USER",
    ///         PolicyContent = @"		{""tags"":{""CostCenter"":{""tag_value"":{""@@assign"":[""Beijing"",""Shanghai""]},""tag_key"":{""@@assign"":""CostCenter""}}}}
    /// ",
    ///     });
    /// 
    ///     var examplePolicyAttachment = new AliCloud.Tag.PolicyAttachment("examplePolicyAttachment", new()
    ///     {
    ///         PolicyId = examplePolicy.Id,
    ///         TargetId = @default.Apply(@default =&gt; @default.Apply(getAccountResult =&gt; getAccountResult.Id)),
    ///         TargetType = "USER",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Tag Policy Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:tag/policyAttachment:PolicyAttachment example &lt;policy_id&gt;:&lt;target_id&gt;:&lt;target_type&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:tag/policyAttachment:PolicyAttachment")]
    public partial class PolicyAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the tag policy.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The ID of the object.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        /// <summary>
        /// The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
        /// </summary>
        [Output("targetType")]
        public Output<string> TargetType { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyAttachment(string name, PolicyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:tag/policyAttachment:PolicyAttachment", name, args ?? new PolicyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyAttachment(string name, Input<string> id, PolicyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:tag/policyAttachment:PolicyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyAttachment Get(string name, Input<string> id, PolicyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyAttachment(name, id, state, options);
        }
    }

    public sealed class PolicyAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the tag policy.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        /// <summary>
        /// The ID of the object.
        /// </summary>
        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        /// <summary>
        /// The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        public PolicyAttachmentArgs()
        {
        }
        public static new PolicyAttachmentArgs Empty => new PolicyAttachmentArgs();
    }

    public sealed class PolicyAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the tag policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The ID of the object.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        /// <summary>
        /// The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        public PolicyAttachmentState()
        {
        }
        public static new PolicyAttachmentState Empty => new PolicyAttachmentState();
    }
}
