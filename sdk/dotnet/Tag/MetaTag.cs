// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Tag
{
    /// <summary>
    /// Provides a Tag Meta Tag resource.
    /// 
    /// For information about Tag Meta Tag and how to use it,
    /// see [What is Meta Tag](https://www.alibabacloud.com/help/en/resource-management/latest/createtags).
    /// 
    /// &gt; **NOTE:** Available since v1.209.0.
    /// 
    /// &gt; **NOTE:** Meta Tag Only Support `cn-hangzhou` Region
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AliCloud.Tag.MetaTag("example", new()
    ///     {
    ///         Key = "Name1",
    ///         Values = new[]
    ///         {
    ///             "Desc2",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Tag Meta Tag can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:tag/metaTag:MetaTag example &lt;regionId&gt;:&lt;key&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:tag/metaTag:MetaTag")]
    public partial class MetaTag : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The key of the tag meta tag. key must be 1 to 128 characters in length.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// The values of the tag meta tag.
        /// </summary>
        [Output("values")]
        public Output<ImmutableArray<string>> Values { get; private set; } = null!;


        /// <summary>
        /// Create a MetaTag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetaTag(string name, MetaTagArgs args, CustomResourceOptions? options = null)
            : base("alicloud:tag/metaTag:MetaTag", name, args ?? new MetaTagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetaTag(string name, Input<string> id, MetaTagState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:tag/metaTag:MetaTag", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetaTag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetaTag Get(string name, Input<string> id, MetaTagState? state = null, CustomResourceOptions? options = null)
        {
            return new MetaTag(name, id, state, options);
        }
    }

    public sealed class MetaTagArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The key of the tag meta tag. key must be 1 to 128 characters in length.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("values", required: true)]
        private InputList<string>? _values;

        /// <summary>
        /// The values of the tag meta tag.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public MetaTagArgs()
        {
        }
        public static new MetaTagArgs Empty => new MetaTagArgs();
    }

    public sealed class MetaTagState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The key of the tag meta tag. key must be 1 to 128 characters in length.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("values")]
        private InputList<string>? _values;

        /// <summary>
        /// The values of the tag meta tag.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public MetaTagState()
        {
        }
        public static new MetaTagState Empty => new MetaTagState();
    }
}
