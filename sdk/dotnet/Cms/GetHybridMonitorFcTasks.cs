// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms
{
    public static class GetHybridMonitorFcTasks
    {
        /// <summary>
        /// This data source provides the Cms Hybrid Monitor Fc Tasks of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.179.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Cms.GetHybridMonitorFcTasks.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_value",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cmsHybridMonitorFcTaskId1"] = ids.Apply(getHybridMonitorFcTasksResult =&gt; getHybridMonitorFcTasksResult.Tasks[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetHybridMonitorFcTasksResult> InvokeAsync(GetHybridMonitorFcTasksArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHybridMonitorFcTasksResult>("alicloud:cms/getHybridMonitorFcTasks:getHybridMonitorFcTasks", args ?? new GetHybridMonitorFcTasksArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Cms Hybrid Monitor Fc Tasks of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.179.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Cms.GetHybridMonitorFcTasks.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_value",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["cmsHybridMonitorFcTaskId1"] = ids.Apply(getHybridMonitorFcTasksResult =&gt; getHybridMonitorFcTasksResult.Tasks[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetHybridMonitorFcTasksResult> Invoke(GetHybridMonitorFcTasksInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHybridMonitorFcTasksResult>("alicloud:cms/getHybridMonitorFcTasks:getHybridMonitorFcTasks", args ?? new GetHybridMonitorFcTasksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHybridMonitorFcTasksArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Hybrid Monitor Fc Task IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The index warehouse where the host belongs.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        [Input("pageSize")]
        public int? PageSize { get; set; }

        public GetHybridMonitorFcTasksArgs()
        {
        }
        public static new GetHybridMonitorFcTasksArgs Empty => new GetHybridMonitorFcTasksArgs();
    }

    public sealed class GetHybridMonitorFcTasksInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Hybrid Monitor Fc Task IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The index warehouse where the host belongs.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        public GetHybridMonitorFcTasksInvokeArgs()
        {
        }
        public static new GetHybridMonitorFcTasksInvokeArgs Empty => new GetHybridMonitorFcTasksInvokeArgs();
    }


    [OutputType]
    public sealed class GetHybridMonitorFcTasksResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? Namespace;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;
        public readonly ImmutableArray<Outputs.GetHybridMonitorFcTasksTaskResult> Tasks;

        [OutputConstructor]
        private GetHybridMonitorFcTasksResult(
            string id,

            ImmutableArray<string> ids,

            string? @namespace,

            string? outputFile,

            int? pageNumber,

            int? pageSize,

            ImmutableArray<Outputs.GetHybridMonitorFcTasksTaskResult> tasks)
        {
            Id = id;
            Ids = ids;
            Namespace = @namespace;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
            Tasks = tasks;
        }
    }
}
