// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms.Inputs
{

    public sealed class AlarmCompositeExpressionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The relationship between the trigger conditions for multiple metrics. Valid values: `&amp;&amp;`, `||`.
        /// </summary>
        [Input("expressionListJoin")]
        public Input<string>? ExpressionListJoin { get; set; }

        [Input("expressionLists")]
        private InputList<Inputs.AlarmCompositeExpressionExpressionListArgs>? _expressionLists;

        /// <summary>
        /// The trigger conditions that are created in standard mode. See `ExpressionList` below.
        /// </summary>
        public InputList<Inputs.AlarmCompositeExpressionExpressionListArgs> ExpressionLists
        {
            get => _expressionLists ?? (_expressionLists = new InputList<Inputs.AlarmCompositeExpressionExpressionListArgs>());
            set => _expressionLists = value;
        }

        /// <summary>
        /// The trigger conditions that are created by using expressions.
        /// </summary>
        [Input("expressionRaw")]
        public Input<string>? ExpressionRaw { get; set; }

        /// <summary>
        /// The level of the alert. Valid values: `CRITICAL`, `WARN`, `INFO`.
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// The number of consecutive triggers.
        /// </summary>
        [Input("times")]
        public Input<int>? Times { get; set; }

        public AlarmCompositeExpressionArgs()
        {
        }
        public static new AlarmCompositeExpressionArgs Empty => new AlarmCompositeExpressionArgs();
    }
}
