// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms
{
    public static class GetSiteMonitors
    {
        /// <summary>
        /// This data source provides Cloud Monitor Service Site Monitor available to the user.[What is Site Monitor](https://www.alibabacloud.com/help/en/cms/developer-reference/api-cms-2019-01-01-createsitemonitor)
        /// 
        /// &gt; **NOTE:** Available since v1.224.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf_example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var defaultSiteMonitor = new AliCloud.Cms.SiteMonitor("default", new()
        ///     {
        ///         Address = "http://www.alibabacloud.com",
        ///         TaskName = $"terraform-example-{defaultInteger.Result}",
        ///         TaskType = "HTTP",
        ///         Interval = 5,
        ///         IspCities = new[]
        ///         {
        ///             new AliCloud.Cms.Inputs.SiteMonitorIspCityArgs
        ///             {
        ///                 City = "546",
        ///                 Isp = "465",
        ///             },
        ///         },
        ///         OptionsJson = @"{
        ///     ""http_method"": ""get"",
        ///     ""waitTime_after_completion"": null,
        ///     ""ipv6_task"": false,
        ///     ""diagnosis_ping"": false,
        ///     ""diagnosis_mtr"": false,
        ///     ""assertions"": [
        ///         {
        ///             ""operator"": ""lessThan"",
        ///             ""type"": ""response_time"",
        ///             ""target"": 1000
        ///         }
        ///     ],
        ///     ""time_out"": 30000
        /// }
        /// ",
        ///     });
        /// 
        ///     var @default = AliCloud.Cms.GetSiteMonitors.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultSiteMonitor.Id,
        ///         },
        ///         TaskType = "HTTP",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudCmsSiteMonitorExampleId"] = @default.Apply(@default =&gt; @default.Apply(getSiteMonitorsResult =&gt; getSiteMonitorsResult.Monitors[0]?.TaskId)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSiteMonitorsResult> InvokeAsync(GetSiteMonitorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSiteMonitorsResult>("alicloud:cms/getSiteMonitors:getSiteMonitors", args ?? new GetSiteMonitorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Cloud Monitor Service Site Monitor available to the user.[What is Site Monitor](https://www.alibabacloud.com/help/en/cms/developer-reference/api-cms-2019-01-01-createsitemonitor)
        /// 
        /// &gt; **NOTE:** Available since v1.224.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf_example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var defaultSiteMonitor = new AliCloud.Cms.SiteMonitor("default", new()
        ///     {
        ///         Address = "http://www.alibabacloud.com",
        ///         TaskName = $"terraform-example-{defaultInteger.Result}",
        ///         TaskType = "HTTP",
        ///         Interval = 5,
        ///         IspCities = new[]
        ///         {
        ///             new AliCloud.Cms.Inputs.SiteMonitorIspCityArgs
        ///             {
        ///                 City = "546",
        ///                 Isp = "465",
        ///             },
        ///         },
        ///         OptionsJson = @"{
        ///     ""http_method"": ""get"",
        ///     ""waitTime_after_completion"": null,
        ///     ""ipv6_task"": false,
        ///     ""diagnosis_ping"": false,
        ///     ""diagnosis_mtr"": false,
        ///     ""assertions"": [
        ///         {
        ///             ""operator"": ""lessThan"",
        ///             ""type"": ""response_time"",
        ///             ""target"": 1000
        ///         }
        ///     ],
        ///     ""time_out"": 30000
        /// }
        /// ",
        ///     });
        /// 
        ///     var @default = AliCloud.Cms.GetSiteMonitors.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultSiteMonitor.Id,
        ///         },
        ///         TaskType = "HTTP",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudCmsSiteMonitorExampleId"] = @default.Apply(@default =&gt; @default.Apply(getSiteMonitorsResult =&gt; getSiteMonitorsResult.Monitors[0]?.TaskId)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSiteMonitorsResult> Invoke(GetSiteMonitorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSiteMonitorsResult>("alicloud:cms/getSiteMonitors:getSiteMonitors", args ?? new GetSiteMonitorsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Cloud Monitor Service Site Monitor available to the user.[What is Site Monitor](https://www.alibabacloud.com/help/en/cms/developer-reference/api-cms-2019-01-01-createsitemonitor)
        /// 
        /// &gt; **NOTE:** Available since v1.224.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf_example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var defaultSiteMonitor = new AliCloud.Cms.SiteMonitor("default", new()
        ///     {
        ///         Address = "http://www.alibabacloud.com",
        ///         TaskName = $"terraform-example-{defaultInteger.Result}",
        ///         TaskType = "HTTP",
        ///         Interval = 5,
        ///         IspCities = new[]
        ///         {
        ///             new AliCloud.Cms.Inputs.SiteMonitorIspCityArgs
        ///             {
        ///                 City = "546",
        ///                 Isp = "465",
        ///             },
        ///         },
        ///         OptionsJson = @"{
        ///     ""http_method"": ""get"",
        ///     ""waitTime_after_completion"": null,
        ///     ""ipv6_task"": false,
        ///     ""diagnosis_ping"": false,
        ///     ""diagnosis_mtr"": false,
        ///     ""assertions"": [
        ///         {
        ///             ""operator"": ""lessThan"",
        ///             ""type"": ""response_time"",
        ///             ""target"": 1000
        ///         }
        ///     ],
        ///     ""time_out"": 30000
        /// }
        /// ",
        ///     });
        /// 
        ///     var @default = AliCloud.Cms.GetSiteMonitors.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultSiteMonitor.Id,
        ///         },
        ///         TaskType = "HTTP",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudCmsSiteMonitorExampleId"] = @default.Apply(@default =&gt; @default.Apply(getSiteMonitorsResult =&gt; getSiteMonitorsResult.Monitors[0]?.TaskId)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSiteMonitorsResult> Invoke(GetSiteMonitorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSiteMonitorsResult>("alicloud:cms/getSiteMonitors:getSiteMonitors", args ?? new GetSiteMonitorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSiteMonitorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Site Monitor IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Task ID.
        /// </summary>
        [Input("taskId")]
        public string? TaskId { get; set; }

        /// <summary>
        /// Task Type.
        /// </summary>
        [Input("taskType")]
        public string? TaskType { get; set; }

        public GetSiteMonitorsArgs()
        {
        }
        public static new GetSiteMonitorsArgs Empty => new GetSiteMonitorsArgs();
    }

    public sealed class GetSiteMonitorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Site Monitor IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Task ID.
        /// </summary>
        [Input("taskId")]
        public Input<string>? TaskId { get; set; }

        /// <summary>
        /// Task Type.
        /// </summary>
        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        public GetSiteMonitorsInvokeArgs()
        {
        }
        public static new GetSiteMonitorsInvokeArgs Empty => new GetSiteMonitorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSiteMonitorsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Site Monitor IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of Site Monitor Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSiteMonitorsMonitorResult> Monitors;
        public readonly string? OutputFile;
        /// <summary>
        /// Task Id.
        /// </summary>
        public readonly string? TaskId;
        /// <summary>
        /// Task Type.
        /// </summary>
        public readonly string? TaskType;

        [OutputConstructor]
        private GetSiteMonitorsResult(
            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetSiteMonitorsMonitorResult> monitors,

            string? outputFile,

            string? taskId,

            string? taskType)
        {
            Id = id;
            Ids = ids;
            Monitors = monitors;
            OutputFile = outputFile;
            TaskId = taskId;
            TaskType = taskType;
        }
    }
}
