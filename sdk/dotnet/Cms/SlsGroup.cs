// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms
{
    /// <summary>
    /// Provides a Cloud Monitor Service Sls Group resource.
    /// 
    /// For information about Cloud Monitor Service Sls Group and how to use it, see [What is Sls Group](https://www.alibabacloud.com/help/doc-detail/28608.htm).
    /// 
    /// &gt; **NOTE:** Available in v1.171.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = AliCloud.GetAccount.Invoke();
    /// 
    ///     var @default = new AliCloud.Cms.SlsGroup("default", new()
    ///     {
    ///         SlsGroupConfigs = new[]
    ///         {
    ///             new AliCloud.Cms.Inputs.SlsGroupSlsGroupConfigArgs
    ///             {
    ///                 SlsUserId = @this.Apply(@this =&gt; @this.Apply(getAccountResult =&gt; getAccountResult.Id)),
    ///                 SlsLogstore = "Logstore-ECS",
    ///                 SlsProject = "aliyun-project",
    ///                 SlsRegion = "cn-hangzhou",
    ///             },
    ///         },
    ///         SlsGroupDescription = @var.Name,
    ///         SlsGroupName = @var.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Monitor Service Sls Group can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:cms/slsGroup:SlsGroup example &lt;sls_group_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cms/slsGroup:SlsGroup")]
    public partial class SlsGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Config of the Sls Group. You can specify up to 25 Config. See the following `Block sls_group_config`.
        /// </summary>
        [Output("slsGroupConfigs")]
        public Output<ImmutableArray<Outputs.SlsGroupSlsGroupConfig>> SlsGroupConfigs { get; private set; } = null!;

        /// <summary>
        /// The Description of the Sls Group.
        /// </summary>
        [Output("slsGroupDescription")]
        public Output<string?> SlsGroupDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the resource. The name must be `2` to `32` characters in length, and can contain letters, digits and underscores (_). It must start with a letter.
        /// </summary>
        [Output("slsGroupName")]
        public Output<string> SlsGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a SlsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SlsGroup(string name, SlsGroupArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cms/slsGroup:SlsGroup", name, args ?? new SlsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SlsGroup(string name, Input<string> id, SlsGroupState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cms/slsGroup:SlsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SlsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SlsGroup Get(string name, Input<string> id, SlsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SlsGroup(name, id, state, options);
        }
    }

    public sealed class SlsGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("slsGroupConfigs", required: true)]
        private InputList<Inputs.SlsGroupSlsGroupConfigArgs>? _slsGroupConfigs;

        /// <summary>
        /// The Config of the Sls Group. You can specify up to 25 Config. See the following `Block sls_group_config`.
        /// </summary>
        public InputList<Inputs.SlsGroupSlsGroupConfigArgs> SlsGroupConfigs
        {
            get => _slsGroupConfigs ?? (_slsGroupConfigs = new InputList<Inputs.SlsGroupSlsGroupConfigArgs>());
            set => _slsGroupConfigs = value;
        }

        /// <summary>
        /// The Description of the Sls Group.
        /// </summary>
        [Input("slsGroupDescription")]
        public Input<string>? SlsGroupDescription { get; set; }

        /// <summary>
        /// The name of the resource. The name must be `2` to `32` characters in length, and can contain letters, digits and underscores (_). It must start with a letter.
        /// </summary>
        [Input("slsGroupName", required: true)]
        public Input<string> SlsGroupName { get; set; } = null!;

        public SlsGroupArgs()
        {
        }
        public static new SlsGroupArgs Empty => new SlsGroupArgs();
    }

    public sealed class SlsGroupState : global::Pulumi.ResourceArgs
    {
        [Input("slsGroupConfigs")]
        private InputList<Inputs.SlsGroupSlsGroupConfigGetArgs>? _slsGroupConfigs;

        /// <summary>
        /// The Config of the Sls Group. You can specify up to 25 Config. See the following `Block sls_group_config`.
        /// </summary>
        public InputList<Inputs.SlsGroupSlsGroupConfigGetArgs> SlsGroupConfigs
        {
            get => _slsGroupConfigs ?? (_slsGroupConfigs = new InputList<Inputs.SlsGroupSlsGroupConfigGetArgs>());
            set => _slsGroupConfigs = value;
        }

        /// <summary>
        /// The Description of the Sls Group.
        /// </summary>
        [Input("slsGroupDescription")]
        public Input<string>? SlsGroupDescription { get; set; }

        /// <summary>
        /// The name of the resource. The name must be `2` to `32` characters in length, and can contain letters, digits and underscores (_). It must start with a letter.
        /// </summary>
        [Input("slsGroupName")]
        public Input<string>? SlsGroupName { get; set; }

        public SlsGroupState()
        {
        }
        public static new SlsGroupState Empty => new SlsGroupState();
    }
}
