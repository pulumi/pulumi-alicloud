// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms
{
    /// <summary>
    /// Provides a Cloud Monitor Service Site Monitor resource.
    /// 
    /// Describes the SITE monitoring tasks created by the user.
    /// 
    /// For information about Cloud Monitor Service Site Monitor and how to use it, see [What is Site Monitor](https://next.api.alibabacloud.com/document/Cms/2019-01-01/CreateSiteMonitor).
    /// 
    /// &gt; **NOTE:** Available since v1.72.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var basic = new AliCloud.Cms.SiteMonitor("basic", new()
    ///     {
    ///         Address = "https://www.alibabacloud.com",
    ///         TaskName = name,
    ///         TaskType = "HTTP",
    ///         Interval = "5",
    ///         IspCities = new[]
    ///         {
    ///             new AliCloud.Cms.Inputs.SiteMonitorIspCityArgs
    ///             {
    ///                 Isp = "232",
    ///                 City = "641",
    ///                 Type = "IDC",
    ///             },
    ///         },
    ///         OptionJson = new AliCloud.Cms.Inputs.SiteMonitorOptionJsonArgs
    ///         {
    ///             ResponseContent = "example",
    ///             ExpectValue = "example",
    ///             Port = 81,
    ///             IsBaseEncode = true,
    ///             PingNum = 5,
    ///             MatchRule = 1,
    ///             FailureRate = "0.3",
    ///             RequestContent = "example",
    ///             Attempts = 4,
    ///             RequestFormat = "hex",
    ///             Password = "YourPassword123!",
    ///             DiagnosisPing = true,
    ///             ResponseFormat = "hex",
    ///             Cookie = "key2=value2",
    ///             PingPort = 443,
    ///             UserName = "example",
    ///             DnsMatchRule = "DNS_IN",
    ///             Timeout = 3000,
    ///             DnsServer = "223.6.6.6",
    ///             DiagnosisMtr = true,
    ///             Header = "key2:value2",
    ///             MinTlsVersion = "1.1",
    ///             PingType = "udp",
    ///             DnsType = "NS",
    ///             DnsHijackWhitelist = "DnsHijackWhitelist",
    ///             HttpMethod = "post",
    ///             Assertions = new[]
    ///             {
    ///                 new AliCloud.Cms.Inputs.SiteMonitorOptionJsonAssertionArgs
    ///                 {
    ///                     Operator = "lessThan",
    ///                     Target = "300",
    ///                     Type = "response_time",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Monitor Service Site Monitor can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cms/siteMonitor:SiteMonitor example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cms/siteMonitor:SiteMonitor")]
    public partial class SiteMonitor : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The URL or IP address monitored by the site monitoring task.
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
        /// </summary>
        [Output("agentGroup")]
        public Output<string> AgentGroup { get; private set; } = null!;

        /// <summary>
        /// Field `AlertIds` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Output("alertIds")]
        public Output<ImmutableArray<string>> AlertIds { get; private set; } = null!;

        /// <summary>
        /// (Deprecated since v1.262.0) Field `CreateTime` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `CustomSchedule` below.
        /// </summary>
        [Output("customSchedule")]
        public Output<Outputs.SiteMonitorCustomSchedule?> CustomSchedule { get; private set; } = null!;

        /// <summary>
        /// The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `Interval` can be set to `30`, `60`.
        /// </summary>
        [Output("interval")]
        public Output<string> Interval { get; private set; } = null!;

        /// <summary>
        /// The detection points in a JSON array. For example, `[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `IspCities` below.
        /// </summary>
        [Output("ispCities")]
        public Output<ImmutableArray<Outputs.SiteMonitorIspCity>> IspCities { get; private set; } = null!;

        /// <summary>
        /// The extended options of the protocol that is used by the site monitoring task. See `OptionJson` below.
        /// </summary>
        [Output("optionJson")]
        public Output<Outputs.SiteMonitorOptionJson> OptionJson { get; private set; } = null!;

        /// <summary>
        /// Field `OptionsJson` has been deprecated from provider version 1.262.0. New field `OptionJson` instead.
        /// </summary>
        [Output("optionsJson")]
        public Output<string> OptionsJson { get; private set; } = null!;

        /// <summary>
        /// The status of the site monitoring task. Valid values:
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
        /// </summary>
        [Output("taskName")]
        public Output<string> TaskName { get; private set; } = null!;

        /// <summary>
        /// (Deprecated since v1.262.0) Field `TaskState` has been deprecated from provider version 1.262.0. New field `Status` instead.
        /// </summary>
        [Output("taskState")]
        public Output<string> TaskState { get; private set; } = null!;

        /// <summary>
        /// The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
        /// </summary>
        [Output("taskType")]
        public Output<string> TaskType { get; private set; } = null!;

        /// <summary>
        /// (Deprecated since v1.262.0) Field `UpdateTime` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SiteMonitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SiteMonitor(string name, SiteMonitorArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cms/siteMonitor:SiteMonitor", name, args ?? new SiteMonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SiteMonitor(string name, Input<string> id, SiteMonitorState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cms/siteMonitor:SiteMonitor", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SiteMonitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SiteMonitor Get(string name, Input<string> id, SiteMonitorState? state = null, CustomResourceOptions? options = null)
        {
            return new SiteMonitor(name, id, state, options);
        }
    }

    public sealed class SiteMonitorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL or IP address monitored by the site monitoring task.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
        /// </summary>
        [Input("agentGroup")]
        public Input<string>? AgentGroup { get; set; }

        [Input("alertIds")]
        private InputList<string>? _alertIds;

        /// <summary>
        /// Field `AlertIds` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Obsolete(@"Field `AlertIds` has been deprecated from provider version 1.262.0.")]
        public InputList<string> AlertIds
        {
            get => _alertIds ?? (_alertIds = new InputList<string>());
            set => _alertIds = value;
        }

        /// <summary>
        /// Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `CustomSchedule` below.
        /// </summary>
        [Input("customSchedule")]
        public Input<Inputs.SiteMonitorCustomScheduleArgs>? CustomSchedule { get; set; }

        /// <summary>
        /// The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `Interval` can be set to `30`, `60`.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("ispCities")]
        private InputList<Inputs.SiteMonitorIspCityArgs>? _ispCities;

        /// <summary>
        /// The detection points in a JSON array. For example, `[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `IspCities` below.
        /// </summary>
        public InputList<Inputs.SiteMonitorIspCityArgs> IspCities
        {
            get => _ispCities ?? (_ispCities = new InputList<Inputs.SiteMonitorIspCityArgs>());
            set => _ispCities = value;
        }

        /// <summary>
        /// The extended options of the protocol that is used by the site monitoring task. See `OptionJson` below.
        /// </summary>
        [Input("optionJson")]
        public Input<Inputs.SiteMonitorOptionJsonArgs>? OptionJson { get; set; }

        /// <summary>
        /// Field `OptionsJson` has been deprecated from provider version 1.262.0. New field `OptionJson` instead.
        /// </summary>
        [Input("optionsJson")]
        public Input<string>? OptionsJson { get; set; }

        /// <summary>
        /// The status of the site monitoring task. Valid values:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
        /// </summary>
        [Input("taskName", required: true)]
        public Input<string> TaskName { get; set; } = null!;

        /// <summary>
        /// The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public SiteMonitorArgs()
        {
        }
        public static new SiteMonitorArgs Empty => new SiteMonitorArgs();
    }

    public sealed class SiteMonitorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL or IP address monitored by the site monitoring task.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
        /// </summary>
        [Input("agentGroup")]
        public Input<string>? AgentGroup { get; set; }

        [Input("alertIds")]
        private InputList<string>? _alertIds;

        /// <summary>
        /// Field `AlertIds` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Obsolete(@"Field `AlertIds` has been deprecated from provider version 1.262.0.")]
        public InputList<string> AlertIds
        {
            get => _alertIds ?? (_alertIds = new InputList<string>());
            set => _alertIds = value;
        }

        /// <summary>
        /// (Deprecated since v1.262.0) Field `CreateTime` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `CustomSchedule` below.
        /// </summary>
        [Input("customSchedule")]
        public Input<Inputs.SiteMonitorCustomScheduleGetArgs>? CustomSchedule { get; set; }

        /// <summary>
        /// The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `Interval` can be set to `30`, `60`.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("ispCities")]
        private InputList<Inputs.SiteMonitorIspCityGetArgs>? _ispCities;

        /// <summary>
        /// The detection points in a JSON array. For example, `[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `IspCities` below.
        /// </summary>
        public InputList<Inputs.SiteMonitorIspCityGetArgs> IspCities
        {
            get => _ispCities ?? (_ispCities = new InputList<Inputs.SiteMonitorIspCityGetArgs>());
            set => _ispCities = value;
        }

        /// <summary>
        /// The extended options of the protocol that is used by the site monitoring task. See `OptionJson` below.
        /// </summary>
        [Input("optionJson")]
        public Input<Inputs.SiteMonitorOptionJsonGetArgs>? OptionJson { get; set; }

        /// <summary>
        /// Field `OptionsJson` has been deprecated from provider version 1.262.0. New field `OptionJson` instead.
        /// </summary>
        [Input("optionsJson")]
        public Input<string>? OptionsJson { get; set; }

        /// <summary>
        /// The status of the site monitoring task. Valid values:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
        /// </summary>
        [Input("taskName")]
        public Input<string>? TaskName { get; set; }

        /// <summary>
        /// (Deprecated since v1.262.0) Field `TaskState` has been deprecated from provider version 1.262.0. New field `Status` instead.
        /// </summary>
        [Input("taskState")]
        public Input<string>? TaskState { get; set; }

        /// <summary>
        /// The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
        /// </summary>
        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// (Deprecated since v1.262.0) Field `UpdateTime` has been deprecated from provider version 1.262.0.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public SiteMonitorState()
        {
        }
        public static new SiteMonitorState Empty => new SiteMonitorState();
    }
}
