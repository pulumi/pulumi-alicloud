// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms.Outputs
{

    [OutputType]
    public sealed class SiteMonitorOptionJson
    {
        /// <summary>
        /// Assertion configuration group. See `Assertions` below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SiteMonitorOptionJsonAssertion> Assertions;
        /// <summary>
        /// Number of retries after DNS failed.
        /// </summary>
        public readonly int? Attempts;
        /// <summary>
        /// The Cookie that sends the HTTP request.
        /// </summary>
        public readonly string? Cookie;
        /// <summary>
        /// Whether to enable automatic MTR network diagnosis after a task failure. Value:
        /// - false: does not enable automatic MTR network diagnosis.
        /// - true to turn on automatic MTR network diagnostics.
        /// </summary>
        public readonly bool? DiagnosisMtr;
        /// <summary>
        /// Whether to enable the automatic PING network delay detection after the task fails. Value:
        /// - false: does not enable automatic PING network delay detection.
        /// - true: Enable automatic PING network delay detection.
        /// </summary>
        public readonly bool? DiagnosisPing;
        /// <summary>
        /// List of DNS hijacking configurations.
        /// </summary>
        public readonly string? DnsHijackWhitelist;
        /// <summary>
        /// Matching Rules for DNS. Value:
        /// - IN_DNS: The alias or IP address that is expected to be resolved is in the DNS response.
        /// - DNS_IN: All DNS responses appear in the alias or IP address that is expected to be resolved.
        /// - EQUAL: the DNS response is exactly the same as the alias or IP address that is expected to be resolved.
        /// - ANY:DNS response and the alias or IP address expected to be resolved have an intersection.
        /// </summary>
        public readonly string? DnsMatchRule;
        /// <summary>
        /// The IP address of the DNS server.
        /// 
        /// &gt; **NOTE:**  only applicable to DNS probe types.
        /// </summary>
        public readonly string? DnsServer;
        /// <summary>
        /// DNS resolution type. Only applicable to DNS probe types. Value:
        /// - A (default): specifies the IP address corresponding to the host name or domain name.
        /// - CNAME: maps multiple domain names to another domain name.
        /// - NS: specifies that the domain name is resolved by a DNS server.
        /// - MX: point domain name to a mail server address.
        /// - TXT: Description of host name or domain name. The text length is limited to 512 bytes, which is usually used as SPF(Sender Policy Framework) record, that is, anti-spam.
        /// </summary>
        public readonly string? DnsType;
        /// <summary>
        /// The alias or address to be resolved.
        /// 
        /// &gt; **NOTE:**  This parameter applies only to DNS probe types.
        /// </summary>
        public readonly string? ExpectValue;
        /// <summary>
        /// Packet loss rate.
        /// 
        /// &gt; **NOTE:**  This parameter only applies to PING probe types.
        /// </summary>
        public readonly string? FailureRate;
        /// <summary>
        /// HTTP request header.
        /// </summary>
        public readonly string? Header;
        /// <summary>
        /// HTTP request method. Value:
        /// - get
        /// - post
        /// - head
        /// </summary>
        public readonly string? HttpMethod;
        /// <summary>
        /// Whether the parameter' Password' is Base64 encoded.
        /// - true: Yes.
        /// - false: No.
        /// </summary>
        public readonly bool? IsBaseEncode;
        /// <summary>
        /// Whether alarm rules are included. Value:
        /// - 0: Yes.
        /// - 1: No.
        /// </summary>
        public readonly int? MatchRule;
        /// <summary>
        /// Minimum TLS version. By default, TLS1.2 and later versions are supported. TLS1.0 and 1.1 have been disabled. If they still need to be supported, the configuration can be changed.
        /// </summary>
        public readonly string? MinTlsVersion;
        /// <summary>
        /// The password of the SMTP, POP3, or FTP probe type.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// The heartbeat of the PING probe type.
        /// </summary>
        public readonly int? PingNum;
        /// <summary>
        /// PING the port. Applies to TCP PING.
        /// </summary>
        public readonly int? PingPort;
        /// <summary>
        /// The PING protocol type. Value:
        /// - icmp
        /// - tcp
        /// - udp
        /// </summary>
        public readonly string? PingType;
        /// <summary>
        /// Ports of TCP, UDP, SMTP, and POP3 probe types.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The request content of the HTTP probe type.
        /// </summary>
        public readonly string? RequestContent;
        /// <summary>
        /// HTTP request content format. Value:
        /// - hex: hexadecimal format.
        /// - text: text format.
        /// </summary>
        public readonly string? RequestFormat;
        /// <summary>
        /// Match the response content.
        /// </summary>
        public readonly string? ResponseContent;
        /// <summary>
        /// HTTP response content format. Value:
        /// - hex: hexadecimal format.
        /// - text: text format.
        /// </summary>
        public readonly string? ResponseFormat;
        /// <summary>
        /// Timeout time. Unit: milliseconds.
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// The username of FTP, SMTP, or pop3.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private SiteMonitorOptionJson(
            ImmutableArray<Outputs.SiteMonitorOptionJsonAssertion> assertions,

            int? attempts,

            string? cookie,

            bool? diagnosisMtr,

            bool? diagnosisPing,

            string? dnsHijackWhitelist,

            string? dnsMatchRule,

            string? dnsServer,

            string? dnsType,

            string? expectValue,

            string? failureRate,

            string? header,

            string? httpMethod,

            bool? isBaseEncode,

            int? matchRule,

            string? minTlsVersion,

            string? password,

            int? pingNum,

            int? pingPort,

            string? pingType,

            int? port,

            string? requestContent,

            string? requestFormat,

            string? responseContent,

            string? responseFormat,

            int? timeout,

            string? userName)
        {
            Assertions = assertions;
            Attempts = attempts;
            Cookie = cookie;
            DiagnosisMtr = diagnosisMtr;
            DiagnosisPing = diagnosisPing;
            DnsHijackWhitelist = dnsHijackWhitelist;
            DnsMatchRule = dnsMatchRule;
            DnsServer = dnsServer;
            DnsType = dnsType;
            ExpectValue = expectValue;
            FailureRate = failureRate;
            Header = header;
            HttpMethod = httpMethod;
            IsBaseEncode = isBaseEncode;
            MatchRule = matchRule;
            MinTlsVersion = minTlsVersion;
            Password = password;
            PingNum = pingNum;
            PingPort = pingPort;
            PingType = pingType;
            Port = port;
            RequestContent = requestContent;
            RequestFormat = requestFormat;
            ResponseContent = responseContent;
            ResponseFormat = responseFormat;
            Timeout = timeout;
            UserName = userName;
        }
    }
}
