// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cms.Outputs
{

    [OutputType]
    public sealed class HybridMonitorSlsTaskSlsProcessConfigStatistic
    {
        /// <summary>
        /// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
        /// </summary>
        public readonly string? Alias;
        /// <summary>
        /// The function that is used to aggregate log data within a statistical period. Valid values: `count`, `sum`, `avg`, `max`, `min`, `value`, `countps`, `sumps`, `distinct`, `distribution`, `percentile`.
        /// </summary>
        public readonly string? Function;
        /// <summary>
        /// The value of the function that is used to aggregate logs imported from Log Service.
        /// - If you set the `function` parameter to `distribution`, this parameter specifies the lower limit of the statistical interval. For example, if you want to calculate the number of HTTP requests whose status code is 2XX, set this parameter to 200.
        /// - If you set the `function` parameter to `percentile`, this parameter specifies the percentile at which the expected value is. For example, 0.5 specifies P50.
        /// </summary>
        public readonly string? ParameterOne;
        /// <summary>
        /// The value of the function that is used to aggregate logs imported from Log Service. **Note:** This parameter is required only if the `function` parameter is set to `distribution`. This parameter specifies the upper limit of the statistical interval.
        /// </summary>
        public readonly string? ParameterTwo;
        /// <summary>
        /// The name of the key that is used to filter logs imported from Log Service.
        /// </summary>
        public readonly string? SlsKeyName;

        [OutputConstructor]
        private HybridMonitorSlsTaskSlsProcessConfigStatistic(
            string? alias,

            string? function,

            string? parameterOne,

            string? parameterTwo,

            string? slsKeyName)
        {
            Alias = alias;
            Function = function;
            ParameterOne = parameterOne;
            ParameterTwo = parameterTwo;
            SlsKeyName = slsKeyName;
        }
    }
}
