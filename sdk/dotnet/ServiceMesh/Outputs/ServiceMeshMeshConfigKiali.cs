// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ServiceMesh.Outputs
{

    [OutputType]
    public sealed class ServiceMeshMeshConfigKiali
    {
        /// <summary>
        /// When the mesh topology is deployed in managed mode and integrated with CLB to provide external access, the external access address is automatically generated.
        /// </summary>
        public readonly string? AggregatedKialiAddress;
        /// <summary>
        /// The authentication strategy used when logging into the mesh topology. In data plane deployment mode, the mesh topology can use token, openid, or ramoauth authentication strategies; in managed mode, the mesh topology can use openid or ramoauth authentication strategies.
        /// </summary>
        public readonly string? AuthStrategy;
        /// <summary>
        /// When the mesh topology cannot automatically use the integrated ARMS Prometheus, you need to use this property to specify a custom Prometheus HTTP API Url. The corresponding Prometheus instance needs to have been configured to collect Istio metrics in the cluster within the service mesh.
        /// </summary>
        public readonly string? CustomPrometheusUrl;
        /// <summary>
        /// The login token provided when the mesh topology is deployed in data plane deployment mode. When the mesh topology authentication strategy is token, this token can be used to log in to the mesh topology service. The key of the property is the Kubernetes cluster id, and the value of the property is the login token of the mesh topology service in the cluster.
        /// </summary>
        public readonly string? DistributedKialiAccessTokens;
        /// <summary>
        /// When the mesh topology is deployed in data plane deployment mode and integrated with CLB to provide external access, the external access address is automatically generated. The key of the attribute is the Kubernetes cluster id, and the value is the external access address of the mesh topology service in the cluster.
        /// </summary>
        public readonly string? DistributedKialiAddresses;
        /// <summary>
        /// Enable CNI
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Whether to integrate CLB for mesh topology services to provide external access.
        /// </summary>
        public readonly bool? IntegrateClb;
        /// <summary>
        /// When the mesh topology automatically uses the integrated ARMS Prometheus, if the ARMS Prometheus instance in the cluster has token authentication enabled, you need to use this property to provide the corresponding authentication token for the mesh topology. The key of the property is the Kubernetes cluster id, and the value is the authentication token of the ARMS Prometheus instance corresponding to the cluster. (Service mesh instance version 1.15.3.113 or above is required)
        /// </summary>
        public readonly string? KialiArmsAuthTokens;
        /// <summary>
        /// Annotations for the Service corresponding to the mesh topology service. When the mesh topology service integrates CLB, annotations can be used to control the CLB specifications. The attribute type is map, the key is the Kubernetes cluster id, and the value is the mesh topology service annotation map under the corresponding Kubernetes cluster. When using the managed mode mesh topology, the key is the service mesh instance id. For annotation content, refer to [Configuring traditional load balancing CLB through Annotation](https://www.alibabacloud.com/help/en/ack/serverless-kubernetes/user-guide/use-annotations-to-configure-load-balancing).(Service mesh instance version 1.17.2.19 or above is required)
        /// </summary>
        public readonly string? KialiServiceAnnotations;
        /// <summary>
        /// When the mesh topology's authentication policy is openid, the configuration used when the mesh topology and OIDC application are connected. If the authentication policy is openid, this configuration must be provided. See `open_id_config` below.
        /// </summary>
        public readonly Outputs.ServiceMeshMeshConfigKialiOpenIdConfig? OpenIdConfig;
        /// <summary>
        /// When the authentication strategy of the mesh topology is ramoauth, the mesh topology will be connected to the RAM OAuth application to log in with the Alibaba Cloud account. In this case, this attribute must be provided to configure the connection with the RAM OAuth application. See `ram_oauth_config` below.
        /// </summary>
        public readonly Outputs.ServiceMeshMeshConfigKialiRamOauthConfig? RamOauthConfig;
        /// <summary>
        /// When you need to configure external access to the mesh topology through ASM gateway or other means, and access the mesh topology through a custom domain name or address, you need to specify this property. (The service mesh instance version must be 1.16.4.5 or above) See `server_config` below.
        /// </summary>
        public readonly Outputs.ServiceMeshMeshConfigKialiServerConfig? ServerConfig;
        /// <summary>
        /// Kiali service address
        /// </summary>
        public readonly string? Url;
        /// <summary>
        /// Whether the mesh topology automatically uses the integrated ARMS Prometheus. When the integrated ARMS Prometheus is automatically used, there is no need to specify the dependent Prometheus HTTP API Url.
        /// </summary>
        public readonly bool? UsePopulatedArmsPrometheus;

        [OutputConstructor]
        private ServiceMeshMeshConfigKiali(
            string? aggregatedKialiAddress,

            string? authStrategy,

            string? customPrometheusUrl,

            string? distributedKialiAccessTokens,

            string? distributedKialiAddresses,

            bool? enabled,

            bool? integrateClb,

            string? kialiArmsAuthTokens,

            string? kialiServiceAnnotations,

            Outputs.ServiceMeshMeshConfigKialiOpenIdConfig? openIdConfig,

            Outputs.ServiceMeshMeshConfigKialiRamOauthConfig? ramOauthConfig,

            Outputs.ServiceMeshMeshConfigKialiServerConfig? serverConfig,

            string? url,

            bool? usePopulatedArmsPrometheus)
        {
            AggregatedKialiAddress = aggregatedKialiAddress;
            AuthStrategy = authStrategy;
            CustomPrometheusUrl = customPrometheusUrl;
            DistributedKialiAccessTokens = distributedKialiAccessTokens;
            DistributedKialiAddresses = distributedKialiAddresses;
            Enabled = enabled;
            IntegrateClb = integrateClb;
            KialiArmsAuthTokens = kialiArmsAuthTokens;
            KialiServiceAnnotations = kialiServiceAnnotations;
            OpenIdConfig = openIdConfig;
            RamOauthConfig = ramOauthConfig;
            ServerConfig = serverConfig;
            Url = url;
            UsePopulatedArmsPrometheus = usePopulatedArmsPrometheus;
        }
    }
}
