// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ServiceMesh
{
    public static class GetExtensionProviders
    {
        /// <summary>
        /// This data source provides the Service Mesh Extension Providers of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.191.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.ServiceMesh.GetExtensionProviders.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///         ServiceMeshId = "example_service_mesh_id",
        ///         Type = "httpextauth",
        ///     });
        /// 
        ///     var nameRegex = AliCloud.ServiceMesh.GetExtensionProviders.Invoke(new()
        ///     {
        ///         NameRegex = "^my-ServiceMeshExtensionProvider",
        ///         ServiceMeshId = "example_service_mesh_id",
        ///         Type = "httpextauth",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceMeshExtensionProvidersId1"] = ids.Apply(getExtensionProvidersResult =&gt; getExtensionProvidersResult.Providers[0]?.Id),
        ///         ["serviceMeshExtensionProvidersId2"] = nameRegex.Apply(getExtensionProvidersResult =&gt; getExtensionProvidersResult.Providers[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetExtensionProvidersResult> InvokeAsync(GetExtensionProvidersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExtensionProvidersResult>("alicloud:servicemesh/getExtensionProviders:getExtensionProviders", args ?? new GetExtensionProvidersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Service Mesh Extension Providers of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.191.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.ServiceMesh.GetExtensionProviders.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///         ServiceMeshId = "example_service_mesh_id",
        ///         Type = "httpextauth",
        ///     });
        /// 
        ///     var nameRegex = AliCloud.ServiceMesh.GetExtensionProviders.Invoke(new()
        ///     {
        ///         NameRegex = "^my-ServiceMeshExtensionProvider",
        ///         ServiceMeshId = "example_service_mesh_id",
        ///         Type = "httpextauth",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["serviceMeshExtensionProvidersId1"] = ids.Apply(getExtensionProvidersResult =&gt; getExtensionProvidersResult.Providers[0]?.Id),
        ///         ["serviceMeshExtensionProvidersId2"] = nameRegex.Apply(getExtensionProvidersResult =&gt; getExtensionProvidersResult.Providers[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetExtensionProvidersResult> Invoke(GetExtensionProvidersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionProvidersResult>("alicloud:servicemesh/getExtensionProviders:getExtensionProviders", args ?? new GetExtensionProvidersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExtensionProvidersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Service Mesh Extension Provider IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Service Mesh Extension Provider name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of the Service Mesh.
        /// </summary>
        [Input("serviceMeshId", required: true)]
        public string ServiceMeshId { get; set; } = null!;

        /// <summary>
        /// The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetExtensionProvidersArgs()
        {
        }
        public static new GetExtensionProvidersArgs Empty => new GetExtensionProvidersArgs();
    }

    public sealed class GetExtensionProvidersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Service Mesh Extension Provider IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Service Mesh Extension Provider name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of the Service Mesh.
        /// </summary>
        [Input("serviceMeshId", required: true)]
        public Input<string> ServiceMeshId { get; set; } = null!;

        /// <summary>
        /// The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetExtensionProvidersInvokeArgs()
        {
        }
        public static new GetExtensionProvidersInvokeArgs Empty => new GetExtensionProvidersInvokeArgs();
    }


    [OutputType]
    public sealed class GetExtensionProvidersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Extension Provider names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of Service Mesh Extension Providers. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetExtensionProvidersProviderResult> Providers;
        /// <summary>
        /// The ID of the Service Mesh.
        /// </summary>
        public readonly string ServiceMeshId;
        /// <summary>
        /// The type of the Service Mesh Extension Provider.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExtensionProvidersResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<Outputs.GetExtensionProvidersProviderResult> providers,

            string serviceMeshId,

            string type)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Providers = providers;
            ServiceMeshId = serviceMeshId;
            Type = type;
        }
    }
}
