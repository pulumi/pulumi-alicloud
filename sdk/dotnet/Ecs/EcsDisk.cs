// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// ## Import
    /// 
    /// ECS Disk can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ecs/ecsDisk:EcsDisk example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/ecsDisk:EcsDisk")]
    public partial class EcsDisk : global::Pulumi.CustomResource
    {
        [Output("advancedFeatures")]
        public Output<string?> AdvancedFeatures { get; private set; } = null!;

        /// <summary>
        /// Field `availability_zone` has been deprecated from provider version 1.122.0. New field `zone_id` instead.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `bursting_enabled` is only valid when `category` is `cloud_auto`.
        /// </summary>
        [Output("burstingEnabled")]
        public Output<bool?> BurstingEnabled { get; private set; } = null!;

        /// <summary>
        /// The category of the data disk. Default value: `cloud_efficiency`. Valid Values: `cloud`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd`, `cloud_auto`, `cloud_essd_entry`, `elastic_ephemeral_disk_standard`, `elastic_ephemeral_disk_premium`.
        /// </summary>
        [Output("category")]
        public Output<string?> Category { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.237.0) The time when the disk was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
        /// </summary>
        [Output("deleteAutoSnapshot")]
        public Output<bool?> DeleteAutoSnapshot { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to release the disk along with its associated instance. Default value: `false`.
        /// </summary>
        [Output("deleteWithInstance")]
        public Output<bool> DeleteWithInstance { get; private set; } = null!;

        /// <summary>
        /// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
        /// </summary>
        [Output("diskName")]
        public Output<string> DiskName { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
        /// </summary>
        [Output("enableAutoSnapshot")]
        public Output<bool> EnableAutoSnapshot { get; private set; } = null!;

        [Output("encryptAlgorithm")]
        public Output<string?> EncryptAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
        /// </summary>
        [Output("encrypted")]
        public Output<bool> Encrypted { get; private set; } = null!;

        /// <summary>
        /// The ID of the instance to which the created subscription disk is automatically attached.
        /// * After you specify the instance ID, the specified `resource_group_id`, `tags`, and `kms_key_id` parameters are ignored.
        /// * One of the `zone_id` and `instance_id` must be set but can not be set at the same time.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kms_key_id` is only valid when `encrypted` is `true`.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multi_attach` can only be set to `Enabled` when `category` is set to `cloud_essd`.
        /// </summary>
        [Output("multiAttach")]
        public Output<string> MultiAttach { get; private set; } = null!;

        /// <summary>
        /// Field `name` has been deprecated from provider version 1.122.0. New field `disk_name` instead.
        /// 
        /// &gt; **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloud_efficiency` and `cloud_ssd` disk.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instance_id` is required.
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
        /// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
        /// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
        /// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
        /// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
        /// </summary>
        [Output("performanceLevel")]
        public Output<string> PerformanceLevel { get; private set; } = null!;

        /// <summary>
        /// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisioned_iops` is only valid when `category` is `cloud_auto`.
        /// </summary>
        [Output("provisionedIops")]
        public Output<int?> ProvisionedIops { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.237.0) The ID of the region to which the disk belongs.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group to which to add the disk.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The size of the disk. Unit: GiB. This parameter is required. Valid values:
        /// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
        /// - If `category` is set to `cloud_efficiency`. Valid values: `20` to `32768`.
        /// - If `category` is set to `cloud_ssd`. Valid values: `20` to `32768`.
        /// - If `category` is set to `cloud_auto`. Valid values: `1` to `65536`.
        /// - If `category` is set to `cloud_essd_entry`. Valid values: `10` to `32768`.
        /// - If `category` is set to `elastic_ephemeral_disk_standard`. Valid values: `64` to `8192`.
        /// - If `category` is set to `elastic_ephemeral_disk_premium`. Valid values: `64` to `8192`.
        /// - If `category` is set to `cloud_essd`, the valid values are related to `performance_level`. Valid values:
        /// - If `performance_level` is set to `PL0`. Valid values: `1` to `65536`.
        /// - If `performance_level` is set to `PL1`. Valid values: `20` to `65536`.
        /// - If `performance_level` is set to `PL2`. Valid values: `461` to `65536`.
        /// - If `performance_level` is set to `PL3`. Valid values: `1261` to `65536`.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshot_id` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshot_id` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
        /// </summary>
        [Output("snapshotId")]
        public Output<string> SnapshotId { get; private set; } = null!;

        /// <summary>
        /// The status of the disk.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The ID of the storage set.
        /// </summary>
        [Output("storageSetId")]
        public Output<string?> StorageSetId { get; private set; } = null!;

        /// <summary>
        /// The number of partitions in the storage set.
        /// </summary>
        [Output("storageSetPartitionNumber")]
        public Output<int?> StorageSetPartitionNumber { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// ID of the free zone to which the disk belongs. One of the `zone_id` and `instance_id` must be set but can not be set at the same time.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a EcsDisk resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EcsDisk(string name, EcsDiskArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/ecsDisk:EcsDisk", name, args ?? new EcsDiskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EcsDisk(string name, Input<string> id, EcsDiskState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/ecsDisk:EcsDisk", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EcsDisk resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EcsDisk Get(string name, Input<string> id, EcsDiskState? state = null, CustomResourceOptions? options = null)
        {
            return new EcsDisk(name, id, state, options);
        }
    }

    public sealed class EcsDiskArgs : global::Pulumi.ResourceArgs
    {
        [Input("advancedFeatures")]
        public Input<string>? AdvancedFeatures { get; set; }

        /// <summary>
        /// Field `availability_zone` has been deprecated from provider version 1.122.0. New field `zone_id` instead.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `bursting_enabled` is only valid when `category` is `cloud_auto`.
        /// </summary>
        [Input("burstingEnabled")]
        public Input<bool>? BurstingEnabled { get; set; }

        /// <summary>
        /// The category of the data disk. Default value: `cloud_efficiency`. Valid Values: `cloud`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd`, `cloud_auto`, `cloud_essd_entry`, `elastic_ephemeral_disk_standard`, `elastic_ephemeral_disk_premium`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
        /// </summary>
        [Input("deleteAutoSnapshot")]
        public Input<bool>? DeleteAutoSnapshot { get; set; }

        /// <summary>
        /// Specifies whether to release the disk along with its associated instance. Default value: `false`.
        /// </summary>
        [Input("deleteWithInstance")]
        public Input<bool>? DeleteWithInstance { get; set; }

        /// <summary>
        /// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
        /// </summary>
        [Input("diskName")]
        public Input<string>? DiskName { get; set; }

        /// <summary>
        /// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
        /// </summary>
        [Input("enableAutoSnapshot")]
        public Input<bool>? EnableAutoSnapshot { get; set; }

        [Input("encryptAlgorithm")]
        public Input<string>? EncryptAlgorithm { get; set; }

        /// <summary>
        /// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        /// <summary>
        /// The ID of the instance to which the created subscription disk is automatically attached.
        /// * After you specify the instance ID, the specified `resource_group_id`, `tags`, and `kms_key_id` parameters are ignored.
        /// * One of the `zone_id` and `instance_id` must be set but can not be set at the same time.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kms_key_id` is only valid when `encrypted` is `true`.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multi_attach` can only be set to `Enabled` when `category` is set to `cloud_essd`.
        /// </summary>
        [Input("multiAttach")]
        public Input<string>? MultiAttach { get; set; }

        /// <summary>
        /// Field `name` has been deprecated from provider version 1.122.0. New field `disk_name` instead.
        /// 
        /// &gt; **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloud_efficiency` and `cloud_ssd` disk.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instance_id` is required.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
        /// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
        /// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
        /// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
        /// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
        /// </summary>
        [Input("performanceLevel")]
        public Input<string>? PerformanceLevel { get; set; }

        /// <summary>
        /// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisioned_iops` is only valid when `category` is `cloud_auto`.
        /// </summary>
        [Input("provisionedIops")]
        public Input<int>? ProvisionedIops { get; set; }

        /// <summary>
        /// The ID of the resource group to which to add the disk.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The size of the disk. Unit: GiB. This parameter is required. Valid values:
        /// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
        /// - If `category` is set to `cloud_efficiency`. Valid values: `20` to `32768`.
        /// - If `category` is set to `cloud_ssd`. Valid values: `20` to `32768`.
        /// - If `category` is set to `cloud_auto`. Valid values: `1` to `65536`.
        /// - If `category` is set to `cloud_essd_entry`. Valid values: `10` to `32768`.
        /// - If `category` is set to `elastic_ephemeral_disk_standard`. Valid values: `64` to `8192`.
        /// - If `category` is set to `elastic_ephemeral_disk_premium`. Valid values: `64` to `8192`.
        /// - If `category` is set to `cloud_essd`, the valid values are related to `performance_level`. Valid values:
        /// - If `performance_level` is set to `PL0`. Valid values: `1` to `65536`.
        /// - If `performance_level` is set to `PL1`. Valid values: `20` to `65536`.
        /// - If `performance_level` is set to `PL2`. Valid values: `461` to `65536`.
        /// - If `performance_level` is set to `PL3`. Valid values: `1261` to `65536`.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshot_id` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshot_id` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// The ID of the storage set.
        /// </summary>
        [Input("storageSetId")]
        public Input<string>? StorageSetId { get; set; }

        /// <summary>
        /// The number of partitions in the storage set.
        /// </summary>
        [Input("storageSetPartitionNumber")]
        public Input<int>? StorageSetPartitionNumber { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// ID of the free zone to which the disk belongs. One of the `zone_id` and `instance_id` must be set but can not be set at the same time.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public EcsDiskArgs()
        {
        }
        public static new EcsDiskArgs Empty => new EcsDiskArgs();
    }

    public sealed class EcsDiskState : global::Pulumi.ResourceArgs
    {
        [Input("advancedFeatures")]
        public Input<string>? AdvancedFeatures { get; set; }

        /// <summary>
        /// Field `availability_zone` has been deprecated from provider version 1.122.0. New field `zone_id` instead.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `bursting_enabled` is only valid when `category` is `cloud_auto`.
        /// </summary>
        [Input("burstingEnabled")]
        public Input<bool>? BurstingEnabled { get; set; }

        /// <summary>
        /// The category of the data disk. Default value: `cloud_efficiency`. Valid Values: `cloud`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd`, `cloud_auto`, `cloud_essd_entry`, `elastic_ephemeral_disk_standard`, `elastic_ephemeral_disk_premium`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// (Available since v1.237.0) The time when the disk was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
        /// </summary>
        [Input("deleteAutoSnapshot")]
        public Input<bool>? DeleteAutoSnapshot { get; set; }

        /// <summary>
        /// Specifies whether to release the disk along with its associated instance. Default value: `false`.
        /// </summary>
        [Input("deleteWithInstance")]
        public Input<bool>? DeleteWithInstance { get; set; }

        /// <summary>
        /// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
        /// </summary>
        [Input("diskName")]
        public Input<string>? DiskName { get; set; }

        /// <summary>
        /// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
        /// </summary>
        [Input("enableAutoSnapshot")]
        public Input<bool>? EnableAutoSnapshot { get; set; }

        [Input("encryptAlgorithm")]
        public Input<string>? EncryptAlgorithm { get; set; }

        /// <summary>
        /// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        /// <summary>
        /// The ID of the instance to which the created subscription disk is automatically attached.
        /// * After you specify the instance ID, the specified `resource_group_id`, `tags`, and `kms_key_id` parameters are ignored.
        /// * One of the `zone_id` and `instance_id` must be set but can not be set at the same time.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kms_key_id` is only valid when `encrypted` is `true`.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multi_attach` can only be set to `Enabled` when `category` is set to `cloud_essd`.
        /// </summary>
        [Input("multiAttach")]
        public Input<string>? MultiAttach { get; set; }

        /// <summary>
        /// Field `name` has been deprecated from provider version 1.122.0. New field `disk_name` instead.
        /// 
        /// &gt; **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloud_efficiency` and `cloud_ssd` disk.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instance_id` is required.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
        /// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
        /// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
        /// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
        /// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
        /// </summary>
        [Input("performanceLevel")]
        public Input<string>? PerformanceLevel { get; set; }

        /// <summary>
        /// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisioned_iops` is only valid when `category` is `cloud_auto`.
        /// </summary>
        [Input("provisionedIops")]
        public Input<int>? ProvisionedIops { get; set; }

        /// <summary>
        /// (Available since v1.237.0) The ID of the region to which the disk belongs.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// The ID of the resource group to which to add the disk.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The size of the disk. Unit: GiB. This parameter is required. Valid values:
        /// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
        /// - If `category` is set to `cloud_efficiency`. Valid values: `20` to `32768`.
        /// - If `category` is set to `cloud_ssd`. Valid values: `20` to `32768`.
        /// - If `category` is set to `cloud_auto`. Valid values: `1` to `65536`.
        /// - If `category` is set to `cloud_essd_entry`. Valid values: `10` to `32768`.
        /// - If `category` is set to `elastic_ephemeral_disk_standard`. Valid values: `64` to `8192`.
        /// - If `category` is set to `elastic_ephemeral_disk_premium`. Valid values: `64` to `8192`.
        /// - If `category` is set to `cloud_essd`, the valid values are related to `performance_level`. Valid values:
        /// - If `performance_level` is set to `PL0`. Valid values: `1` to `65536`.
        /// - If `performance_level` is set to `PL1`. Valid values: `20` to `65536`.
        /// - If `performance_level` is set to `PL2`. Valid values: `461` to `65536`.
        /// - If `performance_level` is set to `PL3`. Valid values: `1261` to `65536`.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshot_id` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshot_id` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// The status of the disk.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The ID of the storage set.
        /// </summary>
        [Input("storageSetId")]
        public Input<string>? StorageSetId { get; set; }

        /// <summary>
        /// The number of partitions in the storage set.
        /// </summary>
        [Input("storageSetPartitionNumber")]
        public Input<int>? StorageSetPartitionNumber { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// ID of the free zone to which the disk belongs. One of the `zone_id` and `instance_id` must be set but can not be set at the same time.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public EcsDiskState()
        {
        }
        public static new EcsDiskState Empty => new EcsDiskState();
    }
}
