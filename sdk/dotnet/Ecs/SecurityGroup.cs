// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// Provides a Security Group resource.
    /// 
    /// For information about Security Group and how to use it, see [What is Security Group](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-createsecuritygroup).
    /// 
    /// &gt; **NOTE:** Available since v1.0.0.
    /// 
    /// &gt; **NOTE:** `alicloud.ecs.SecurityGroup` is used to build and manage a security group, and `alicloud.ecs.SecurityGroupRule` can define ingress or egress rules for it.
    /// 
    /// &gt; **NOTE:** From version 1.7.2, `alicloud.ecs.SecurityGroup` has supported to segregate different ECS instance in which the same security group.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         Description = "New security group",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Basic Usage for VPC
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpc = new AliCloud.Vpc.Network("vpc", new()
    ///     {
    ///         VpcName = "terraform-example",
    ///         CidrBlock = "10.1.0.0/21",
    ///     });
    /// 
    ///     var @group = new AliCloud.Ecs.SecurityGroup("group", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ## Module Support
    /// 
    /// You can use the existing security-group module
    /// to create a security group and add several rules one-click.
    /// 
    /// ## Import
    /// 
    /// Security Group can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:ecs/securityGroup:SecurityGroup example sg-abc123456
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/securityGroup:SecurityGroup")]
    public partial class SecurityGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The security group description. Defaults to null.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Field `inner_access` has been deprecated from provider version 1.55.3. New field `inner_access_policy` instead.
        /// 
        /// Combining security group rules, the policy can define multiple application scenario. Default to true. It is valid from version `1.7.2`.
        /// </summary>
        [Output("innerAccess")]
        public Output<bool> InnerAccess { get; private set; } = null!;

        /// <summary>
        /// The internal access control policy of the security group. Valid values: `Accept`, `Drop`.
        /// </summary>
        [Output("innerAccessPolicy")]
        public Output<string> InnerAccessPolicy { get; private set; } = null!;

        /// <summary>
        /// The name of the security group. Defaults to null.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group to which the security group belongs. **NOTE:** From version 1.115.0, `resource_group_id` can be modified.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string?> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The type of the security group. Valid values:
        /// </summary>
        [Output("securityGroupType")]
        public Output<string> SecurityGroupType { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroup(string name, SecurityGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/securityGroup:SecurityGroup", name, args ?? new SecurityGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroup(string name, Input<string> id, SecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/securityGroup:SecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroup Get(string name, Input<string> id, SecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGroup(name, id, state, options);
        }
    }

    public sealed class SecurityGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The security group description. Defaults to null.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Field `inner_access` has been deprecated from provider version 1.55.3. New field `inner_access_policy` instead.
        /// 
        /// Combining security group rules, the policy can define multiple application scenario. Default to true. It is valid from version `1.7.2`.
        /// </summary>
        [Input("innerAccess")]
        public Input<bool>? InnerAccess { get; set; }

        /// <summary>
        /// The internal access control policy of the security group. Valid values: `Accept`, `Drop`.
        /// </summary>
        [Input("innerAccessPolicy")]
        public Input<string>? InnerAccessPolicy { get; set; }

        /// <summary>
        /// The name of the security group. Defaults to null.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the resource group to which the security group belongs. **NOTE:** From version 1.115.0, `resource_group_id` can be modified.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The type of the security group. Valid values:
        /// </summary>
        [Input("securityGroupType")]
        public Input<string>? SecurityGroupType { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public SecurityGroupArgs()
        {
        }
        public static new SecurityGroupArgs Empty => new SecurityGroupArgs();
    }

    public sealed class SecurityGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The security group description. Defaults to null.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Field `inner_access` has been deprecated from provider version 1.55.3. New field `inner_access_policy` instead.
        /// 
        /// Combining security group rules, the policy can define multiple application scenario. Default to true. It is valid from version `1.7.2`.
        /// </summary>
        [Input("innerAccess")]
        public Input<bool>? InnerAccess { get; set; }

        /// <summary>
        /// The internal access control policy of the security group. Valid values: `Accept`, `Drop`.
        /// </summary>
        [Input("innerAccessPolicy")]
        public Input<string>? InnerAccessPolicy { get; set; }

        /// <summary>
        /// The name of the security group. Defaults to null.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the resource group to which the security group belongs. **NOTE:** From version 1.115.0, `resource_group_id` can be modified.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The type of the security group. Valid values:
        /// </summary>
        [Input("securityGroupType")]
        public Input<string>? SecurityGroupType { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the VPC.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public SecurityGroupState()
        {
        }
        public static new SecurityGroupState Empty => new SecurityGroupState();
    }
}
