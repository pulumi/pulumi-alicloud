// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs.Outputs
{

    [OutputType]
    public sealed class GetEcsImagePipelinePipelineResult
    {
        /// <summary>
        /// The IDs of Alibaba Cloud accounts to which the image was shared.
        /// </summary>
        public readonly ImmutableArray<string> AddAccounts;
        /// <summary>
        /// The source image.
        /// </summary>
        public readonly string BaseImage;
        /// <summary>
        /// The type of the source image.
        /// </summary>
        public readonly string BaseImageType;
        /// <summary>
        /// The content of the image template.
        /// </summary>
        public readonly string BuildContent;
        /// <summary>
        /// The time when the image template was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Indicates whether the intermediate instance was released when the image failed to be created.
        /// </summary>
        public readonly bool DeleteInstanceOnFailure;
        /// <summary>
        /// The description of the image template.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the Image Pipeline.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name prefix of the created image.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// The ID of the image template.
        /// </summary>
        public readonly string ImagePipelineId;
        /// <summary>
        /// The instance type of the intermediate instance.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The size of the outbound public bandwidth for the intermediate instance. Unit: `Mbit/s`.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// The name of the image template.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ID of the resource group to which the image template belongs.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// The system disk size of the intermediate instance. Unit: `GiB`.
        /// </summary>
        public readonly int SystemDiskSize;
        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The IDs of regions to which to distribute the created image.
        /// </summary>
        public readonly ImmutableArray<string> ToRegionIds;
        /// <summary>
        /// The vswitch id.
        /// </summary>
        public readonly string VswitchId;

        [OutputConstructor]
        private GetEcsImagePipelinePipelineResult(
            ImmutableArray<string> addAccounts,

            string baseImage,

            string baseImageType,

            string buildContent,

            string creationTime,

            bool deleteInstanceOnFailure,

            string description,

            string id,

            string imageName,

            string imagePipelineId,

            string instanceType,

            int internetMaxBandwidthOut,

            string name,

            string resourceGroupId,

            int systemDiskSize,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<string> toRegionIds,

            string vswitchId)
        {
            AddAccounts = addAccounts;
            BaseImage = baseImage;
            BaseImageType = baseImageType;
            BuildContent = buildContent;
            CreationTime = creationTime;
            DeleteInstanceOnFailure = deleteInstanceOnFailure;
            Description = description;
            Id = id;
            ImageName = imageName;
            ImagePipelineId = imagePipelineId;
            InstanceType = instanceType;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            Name = name;
            ResourceGroupId = resourceGroupId;
            SystemDiskSize = systemDiskSize;
            Tags = tags;
            ToRegionIds = toRegionIds;
            VswitchId = vswitchId;
        }
    }
}
