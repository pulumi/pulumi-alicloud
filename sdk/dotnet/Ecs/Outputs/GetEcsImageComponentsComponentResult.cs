// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs.Outputs
{

    [OutputType]
    public sealed class GetEcsImageComponentsComponentResult
    {
        /// <summary>
        /// The type of the image component.
        /// </summary>
        public readonly string ComponentType;
        /// <summary>
        /// The content of the image component.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// The time when the image component was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of the image component.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the Image Component.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the image component.
        /// </summary>
        public readonly string ImageComponentId;
        /// <summary>
        /// The name of the image component.
        /// </summary>
        public readonly string ImageComponentName;
        /// <summary>
        /// The type of the image component.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// The operating system type supported by the image component.
        /// </summary>
        public readonly string SystemType;
        /// <summary>
        /// List of label key-value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetEcsImageComponentsComponentResult(
            string componentType,

            string content,

            string createTime,

            string description,

            string id,

            string imageComponentId,

            string imageComponentName,

            string owner,

            string resourceGroupId,

            string systemType,

            ImmutableDictionary<string, string> tags)
        {
            ComponentType = componentType;
            Content = content;
            CreateTime = createTime;
            Description = description;
            Id = id;
            ImageComponentId = imageComponentId;
            ImageComponentName = imageComponentName;
            Owner = owner;
            ResourceGroupId = resourceGroupId;
            SystemType = systemType;
            Tags = tags;
        }
    }
}
