// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs.Outputs
{

    [OutputType]
    public sealed class GetEcsInvocationsInvocationResult
    {
        /// <summary>
        /// The Base64-encoded command content.
        /// </summary>
        public readonly string CommandContent;
        /// <summary>
        /// The ID of the command.
        /// </summary>
        public readonly string CommandId;
        /// <summary>
        /// The name of the command.
        /// </summary>
        public readonly string CommandName;
        /// <summary>
        /// The type of the command.
        /// </summary>
        public readonly string CommandType;
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The schedule on which the recurring execution of the command takes place. For information about the value specifications, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
        /// </summary>
        public readonly string Frequency;
        /// <summary>
        /// The ID of the Invocation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the Invocation.
        /// </summary>
        public readonly string InvocationId;
        /// <summary>
        /// The overall execution state of the command. The value of this parameter depends on the execution states on all the involved instances.
        /// </summary>
        public readonly string InvocationStatus;
        /// <summary>
        /// Execute target instance set type.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEcsInvocationsInvocationInvokeInstanceResult> InvokeInstances;
        /// <summary>
        /// The overall execution state of the command. **Note:** We recommend that you ignore this parameter and check the value of the `invocation_status` response parameter for the overall execution state.
        /// </summary>
        public readonly string InvokeStatus;
        /// <summary>
        /// The custom parameters in the command.
        /// </summary>
        public readonly string Parameters;
        /// <summary>
        /// Indicates the execution mode of the command.
        /// </summary>
        public readonly string RepeatMode;
        /// <summary>
        /// Indicates whether the commands are to be automatically run.
        /// </summary>
        public readonly bool Timed;
        /// <summary>
        /// The username that was used to run the command on the instance.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetEcsInvocationsInvocationResult(
            string commandContent,

            string commandId,

            string commandName,

            string commandType,

            string createTime,

            string frequency,

            string id,

            string invocationId,

            string invocationStatus,

            ImmutableArray<Outputs.GetEcsInvocationsInvocationInvokeInstanceResult> invokeInstances,

            string invokeStatus,

            string parameters,

            string repeatMode,

            bool timed,

            string username)
        {
            CommandContent = commandContent;
            CommandId = commandId;
            CommandName = commandName;
            CommandType = commandType;
            CreateTime = createTime;
            Frequency = frequency;
            Id = id;
            InvocationId = invocationId;
            InvocationStatus = invocationStatus;
            InvokeInstances = invokeInstances;
            InvokeStatus = invokeStatus;
            Parameters = parameters;
            RepeatMode = repeatMode;
            Timed = timed;
            Username = username;
        }
    }
}
