// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs.Outputs
{

    [OutputType]
    public sealed class GetSnapshotsSnapshotResult
    {
        public readonly string Category;
        /// <summary>
        /// Creation time. Time of creation. It is represented according to ISO8601, and UTC time is used. Format: YYYY-MM-DDThh:mmZ.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Description of the snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The specified disk ID.
        /// </summary>
        public readonly string DiskId;
        /// <summary>
        /// Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
        /// </summary>
        public readonly bool Encrypted;
        /// <summary>
        /// ID of the snapshot.
        /// </summary>
        public readonly string Id;
        public readonly bool InstantAccess;
        public readonly int InstantAccessRetentionDays;
        /// <summary>
        /// Name of the snapshot.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Product code on the image market place.
        /// </summary>
        public readonly string ProductCode;
        /// <summary>
        /// Progress of snapshot creation, presented in percentage.
        /// </summary>
        public readonly string Progress;
        /// <summary>
        /// The remaining time of a snapshot creation task, in seconds.
        /// </summary>
        public readonly int RemainTime;
        public readonly string ResourceGroupId;
        /// <summary>
        /// The number of days that an automatic snapshot retains in the console for your instance.
        /// </summary>
        public readonly int RetentionDays;
        public readonly string SnapshotId;
        public readonly string SnapshotName;
        public readonly string SnapshotSn;
        public readonly string SnapshotType;
        /// <summary>
        /// Source disk ID, which is retained after the source disk of the snapshot is deleted.
        /// </summary>
        public readonly string SourceDiskId;
        /// <summary>
        /// Size of the source disk, measured in GB.
        /// </summary>
        public readonly string SourceDiskSize;
        /// <summary>
        /// The type of source disk:
        /// * System: The snapshots are created for system disks.
        /// * Data: The snapshots are created for data disks.
        /// </summary>
        public readonly string SourceDiskType;
        public readonly string SourceStorageType;
        /// <summary>
        /// The specified snapshot status. Default value: `all`. Optional values:
        /// * progressing: The snapshots are being created.
        /// * accomplished: The snapshots are ready to use.
        /// * failed: The snapshot creation failed.
        /// * all: All status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A map of tags assigned to snapshots.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The snapshot category. Default value: `all`. Optional values:
        /// * auto: Auto snapshots.
        /// * user: Manual snapshots.
        /// * all: Auto and manual snapshots.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The usage of the snapshot:
        /// * image: The snapshots are used to create custom images.
        /// * disk: The snapshots are used to CreateDisk.
        /// * mage_disk: The snapshots are used to create custom images and data disks.
        /// * none: The snapshots are not used yet.
        /// </summary>
        public readonly string Usage;

        [OutputConstructor]
        private GetSnapshotsSnapshotResult(
            string category,

            string creationTime,

            string description,

            string diskId,

            bool encrypted,

            string id,

            bool instantAccess,

            int instantAccessRetentionDays,

            string name,

            string productCode,

            string progress,

            int remainTime,

            string resourceGroupId,

            int retentionDays,

            string snapshotId,

            string snapshotName,

            string snapshotSn,

            string snapshotType,

            string sourceDiskId,

            string sourceDiskSize,

            string sourceDiskType,

            string sourceStorageType,

            string status,

            ImmutableDictionary<string, string> tags,

            string type,

            string usage)
        {
            Category = category;
            CreationTime = creationTime;
            Description = description;
            DiskId = diskId;
            Encrypted = encrypted;
            Id = id;
            InstantAccess = instantAccess;
            InstantAccessRetentionDays = instantAccessRetentionDays;
            Name = name;
            ProductCode = productCode;
            Progress = progress;
            RemainTime = remainTime;
            ResourceGroupId = resourceGroupId;
            RetentionDays = retentionDays;
            SnapshotId = snapshotId;
            SnapshotName = snapshotName;
            SnapshotSn = snapshotSn;
            SnapshotType = snapshotType;
            SourceDiskId = sourceDiskId;
            SourceDiskSize = sourceDiskSize;
            SourceDiskType = sourceDiskType;
            SourceStorageType = sourceStorageType;
            Status = status;
            Tags = tags;
            Type = type;
            Usage = usage;
        }
    }
}
