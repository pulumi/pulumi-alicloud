// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs.Outputs
{

    [OutputType]
    public sealed class ImageDiskDeviceMapping
    {
        /// <summary>
        /// The device name of disk N in the custom image. Valid values:
        /// - For disks other than basic disks, such as standard SSDs, ultra disks, and enhanced SSDs (ESSDs), the valid values range from /dev/vda to /dev/vdz in alphabetical order.
        /// - For basic disks, the valid values range from /dev/xvda to /dev/xvdz in alphabetical order.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The type of disk N in the custom image. You can specify this parameter to create the system disk of the custom image from a data disk snapshot. If you do not specify this parameter, the disk type is determined by the corresponding snapshot. Valid values:
        /// - system: system disk. You can specify only one snapshot to use to create the system disk in the custom image.
        /// - data: data disk. You can specify up to 16 snapshots to use to create data disks in the custom image.
        /// </summary>
        public readonly string? DiskType;
        /// <summary>
        /// Image format.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// Import the bucket of the OSS to which the image belongs.
        /// </summary>
        public readonly string? ImportOssBucket;
        /// <summary>
        /// Import the object of the OSS to which the image file belongs.
        /// </summary>
        public readonly string? ImportOssObject;
        /// <summary>
        /// Copy the progress of the task.
        /// </summary>
        public readonly string? Progress;
        /// <summary>
        /// For an image being replicated, return the remaining time of the replication task, in seconds.
        /// </summary>
        public readonly int? RemainTime;
        /// <summary>
        /// The size of disk N in the custom image. Unit: GiB. The valid values and default value of DiskDeviceMapping.N.Size vary based on the value of DiskDeviceMapping.N.SnapshotId.
        /// - If no corresponding snapshot IDs are specified in the value of DiskDeviceMapping.N.SnapshotId, DiskDeviceMapping.N.Size has the following valid values and default values:
        /// *   For basic disks, the valid values range from 5 to 2000, and the default value is 5.
        /// *   For other disks, the valid values range from 20 to 32768, and the default value is 20.
        /// - If a corresponding snapshot ID is specified in the value of DiskDeviceMapping.N.SnapshotId, the value of DiskDeviceMapping.N.Size must be greater than or equal to the size of the specified snapshot. The default value of DiskDeviceMapping.N.Size is the size of the specified snapshot.
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// The ID of snapshot N to use to create the custom image. .
        /// </summary>
        public readonly string? SnapshotId;

        [OutputConstructor]
        private ImageDiskDeviceMapping(
            string? device,

            string? diskType,

            string? format,

            string? importOssBucket,

            string? importOssObject,

            string? progress,

            int? remainTime,

            int? size,

            string? snapshotId)
        {
            Device = device;
            DiskType = diskType;
            Format = format;
            ImportOssBucket = importOssBucket;
            ImportOssObject = importOssObject;
            Progress = progress;
            RemainTime = remainTime;
            Size = size;
            SnapshotId = snapshotId;
        }
    }
}
