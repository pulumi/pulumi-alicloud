// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    public static class GetEcsLaunchTemplates
    {
        /// <summary>
        /// This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.120.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(AliCloud.Ecs.GetEcsLaunchTemplates.InvokeAsync(new AliCloud.Ecs.GetEcsLaunchTemplatesArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "lt-bp1a469uxxxxxx",
        ///             },
        ///             NameRegex = "your_launch_name",
        ///         }));
        ///         this.FirstEcsLaunchTemplateId = example.Apply(example =&gt; example.Templates[0].Id);
        ///     }
        /// 
        ///     [Output("firstEcsLaunchTemplateId")]
        ///     public Output&lt;string&gt; FirstEcsLaunchTemplateId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEcsLaunchTemplatesResult> InvokeAsync(GetEcsLaunchTemplatesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEcsLaunchTemplatesResult>("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", args ?? new GetEcsLaunchTemplatesArgs(), options.WithVersion());
    }


    public sealed class GetEcsLaunchTemplatesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Launch Template IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Launch Template Name.
        /// </summary>
        [Input("launchTemplateName")]
        public string? LaunchTemplateName { get; set; }

        /// <summary>
        /// A regex string to filter results by Launch Template name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The template resource group id.
        /// </summary>
        [Input("templateResourceGroupId")]
        public string? TemplateResourceGroupId { get; set; }

        [Input("templateTags")]
        private Dictionary<string, object>? _templateTags;

        /// <summary>
        /// The template tags.
        /// </summary>
        public Dictionary<string, object> TemplateTags
        {
            get => _templateTags ?? (_templateTags = new Dictionary<string, object>());
            set => _templateTags = value;
        }

        public GetEcsLaunchTemplatesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEcsLaunchTemplatesResult
    {
        public readonly bool? EnableDetails;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? LaunchTemplateName;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly string? TemplateResourceGroupId;
        public readonly ImmutableDictionary<string, object>? TemplateTags;
        public readonly ImmutableArray<Outputs.GetEcsLaunchTemplatesTemplateResult> Templates;

        [OutputConstructor]
        private GetEcsLaunchTemplatesResult(
            bool? enableDetails,

            string id,

            ImmutableArray<string> ids,

            string? launchTemplateName,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? templateResourceGroupId,

            ImmutableDictionary<string, object>? templateTags,

            ImmutableArray<Outputs.GetEcsLaunchTemplatesTemplateResult> templates)
        {
            EnableDetails = enableDetails;
            Id = id;
            Ids = ids;
            LaunchTemplateName = launchTemplateName;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            TemplateResourceGroupId = templateResourceGroupId;
            TemplateTags = templateTags;
            Templates = templates;
        }
    }
}
