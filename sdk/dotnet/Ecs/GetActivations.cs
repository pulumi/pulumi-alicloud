// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    public static class GetActivations
    {
        /// <summary>
        /// This data source provides the Ecs Activations of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.177.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Ecs.GetActivations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ecsActivationId1"] = ids.Apply(getActivationsResult =&gt; getActivationsResult.Activations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetActivationsResult> InvokeAsync(GetActivationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActivationsResult>("alicloud:ecs/getActivations:getActivations", args ?? new GetActivationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Ecs Activations of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.177.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Ecs.GetActivations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["ecsActivationId1"] = ids.Apply(getActivationsResult =&gt; getActivationsResult.Activations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetActivationsResult> Invoke(GetActivationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActivationsResult>("alicloud:ecs/getActivations:getActivations", args ?? new GetActivationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActivationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Activation IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The default prefix of the instance name.
        /// </summary>
        [Input("instanceName")]
        public string? InstanceName { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        [Input("pageSize")]
        public int? PageSize { get; set; }

        public GetActivationsArgs()
        {
        }
        public static new GetActivationsArgs Empty => new GetActivationsArgs();
    }

    public sealed class GetActivationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Activation IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The default prefix of the instance name.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        public GetActivationsInvokeArgs()
        {
        }
        public static new GetActivationsInvokeArgs Empty => new GetActivationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetActivationsResult
    {
        public readonly ImmutableArray<Outputs.GetActivationsActivationResult> Activations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? InstanceName;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;
        public readonly int TotalCount;

        [OutputConstructor]
        private GetActivationsResult(
            ImmutableArray<Outputs.GetActivationsActivationResult> activations,

            string id,

            ImmutableArray<string> ids,

            string? instanceName,

            string? outputFile,

            int? pageNumber,

            int? pageSize,

            int totalCount)
        {
            Activations = activations;
            Id = id;
            Ids = ids;
            InstanceName = instanceName;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
            TotalCount = totalCount;
        }
    }
}
