// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// Provides a ECS Auto Snapshot Policy resource.
    /// 
    /// For information about ECS Auto Snapshot Policy and how to use it, see [What is Auto Snapshot Policy](https://www.alibabacloud.com/help/en/doc-detail/25527.htm).
    /// 
    /// &gt; **NOTE:** Available since v1.117.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AliCloud.Ecs.AutoSnapshotPolicy("example", new()
    ///     {
    ///         Name = "terraform-example",
    ///         RepeatWeekdays = new[]
    ///         {
    ///             "1",
    ///             "2",
    ///             "3",
    ///         },
    ///         RetentionDays = -1,
    ///         TimePoints = new[]
    ///         {
    ///             "1",
    ///             "22",
    ///             "23",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ECS Auto Snapshot Policy can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ecs/autoSnapshotPolicy:AutoSnapshotPolicy example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/autoSnapshotPolicy:AutoSnapshotPolicy")]
    public partial class AutoSnapshotPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
        /// </summary>
        [Output("autoSnapshotPolicyName")]
        public Output<string> AutoSnapshotPolicyName { get; private set; } = null!;

        /// <summary>
        /// The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
        /// - `-1`: The snapshot copy is retained until it is deleted.
        /// </summary>
        [Output("copiedSnapshotsRetentionDays")]
        public Output<int> CopiedSnapshotsRetentionDays { get; private set; } = null!;

        /// <summary>
        /// The encryption parameters for cross-region snapshot replication. See `copy_encryption_configuration` below.
        /// </summary>
        [Output("copyEncryptionConfiguration")]
        public Output<Outputs.AutoSnapshotPolicyCopyEncryptionConfiguration?> CopyEncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.236.0) The time when the automatic snapshot policy was created. The time follows the ISO 8601 standard in the yyyy-MM-ddThh:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
        /// </summary>
        [Output("enableCrossRegionCopy")]
        public Output<bool?> EnableCrossRegionCopy { get; private set; } = null!;

        /// <summary>
        /// . Field `name` has been deprecated from provider version 1.236.0. New field `auto_snapshot_policy_name` instead.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.236.0) The region ID of the automatic snapshot policy.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
        /// </summary>
        [Output("repeatWeekdays")]
        public Output<ImmutableArray<string>> RepeatWeekdays { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string?> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The retention period of the automatic snapshots. Unit: days. Valid values:
        /// - `-1`: Automatic snapshots are retained until they are deleted.
        /// </summary>
        [Output("retentionDays")]
        public Output<int> RetentionDays { get; private set; } = null!;

        /// <summary>
        /// The status of the automatic snapshot policy.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The destination region to which to copy the snapshot. You can specify only a single destination region.
        /// </summary>
        [Output("targetCopyRegions")]
        public Output<ImmutableArray<string>> TargetCopyRegions { get; private set; } = null!;

        /// <summary>
        /// The points in time of the day at which to create automatic snapshots.
        /// 
        /// The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
        /// 
        /// The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: ["0", "1", ... "23"].
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        [Output("timePoints")]
        public Output<ImmutableArray<string>> TimePoints { get; private set; } = null!;


        /// <summary>
        /// Create a AutoSnapshotPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutoSnapshotPolicy(string name, AutoSnapshotPolicyArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ecs/autoSnapshotPolicy:AutoSnapshotPolicy", name, args ?? new AutoSnapshotPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutoSnapshotPolicy(string name, Input<string> id, AutoSnapshotPolicyState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/autoSnapshotPolicy:AutoSnapshotPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutoSnapshotPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutoSnapshotPolicy Get(string name, Input<string> id, AutoSnapshotPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AutoSnapshotPolicy(name, id, state, options);
        }
    }

    public sealed class AutoSnapshotPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
        /// </summary>
        [Input("autoSnapshotPolicyName")]
        public Input<string>? AutoSnapshotPolicyName { get; set; }

        /// <summary>
        /// The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
        /// - `-1`: The snapshot copy is retained until it is deleted.
        /// </summary>
        [Input("copiedSnapshotsRetentionDays")]
        public Input<int>? CopiedSnapshotsRetentionDays { get; set; }

        /// <summary>
        /// The encryption parameters for cross-region snapshot replication. See `copy_encryption_configuration` below.
        /// </summary>
        [Input("copyEncryptionConfiguration")]
        public Input<Inputs.AutoSnapshotPolicyCopyEncryptionConfigurationArgs>? CopyEncryptionConfiguration { get; set; }

        /// <summary>
        /// Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
        /// </summary>
        [Input("enableCrossRegionCopy")]
        public Input<bool>? EnableCrossRegionCopy { get; set; }

        /// <summary>
        /// . Field `name` has been deprecated from provider version 1.236.0. New field `auto_snapshot_policy_name` instead.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("repeatWeekdays", required: true)]
        private InputList<string>? _repeatWeekdays;

        /// <summary>
        /// The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
        /// </summary>
        public InputList<string> RepeatWeekdays
        {
            get => _repeatWeekdays ?? (_repeatWeekdays = new InputList<string>());
            set => _repeatWeekdays = value;
        }

        /// <summary>
        /// The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The retention period of the automatic snapshots. Unit: days. Valid values:
        /// - `-1`: Automatic snapshots are retained until they are deleted.
        /// </summary>
        [Input("retentionDays", required: true)]
        public Input<int> RetentionDays { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetCopyRegions")]
        private InputList<string>? _targetCopyRegions;

        /// <summary>
        /// The destination region to which to copy the snapshot. You can specify only a single destination region.
        /// </summary>
        public InputList<string> TargetCopyRegions
        {
            get => _targetCopyRegions ?? (_targetCopyRegions = new InputList<string>());
            set => _targetCopyRegions = value;
        }

        [Input("timePoints", required: true)]
        private InputList<string>? _timePoints;

        /// <summary>
        /// The points in time of the day at which to create automatic snapshots.
        /// 
        /// The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
        /// 
        /// The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: ["0", "1", ... "23"].
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        public InputList<string> TimePoints
        {
            get => _timePoints ?? (_timePoints = new InputList<string>());
            set => _timePoints = value;
        }

        public AutoSnapshotPolicyArgs()
        {
        }
        public static new AutoSnapshotPolicyArgs Empty => new AutoSnapshotPolicyArgs();
    }

    public sealed class AutoSnapshotPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
        /// </summary>
        [Input("autoSnapshotPolicyName")]
        public Input<string>? AutoSnapshotPolicyName { get; set; }

        /// <summary>
        /// The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
        /// - `-1`: The snapshot copy is retained until it is deleted.
        /// </summary>
        [Input("copiedSnapshotsRetentionDays")]
        public Input<int>? CopiedSnapshotsRetentionDays { get; set; }

        /// <summary>
        /// The encryption parameters for cross-region snapshot replication. See `copy_encryption_configuration` below.
        /// </summary>
        [Input("copyEncryptionConfiguration")]
        public Input<Inputs.AutoSnapshotPolicyCopyEncryptionConfigurationGetArgs>? CopyEncryptionConfiguration { get; set; }

        /// <summary>
        /// (Available since v1.236.0) The time when the automatic snapshot policy was created. The time follows the ISO 8601 standard in the yyyy-MM-ddThh:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
        /// </summary>
        [Input("enableCrossRegionCopy")]
        public Input<bool>? EnableCrossRegionCopy { get; set; }

        /// <summary>
        /// . Field `name` has been deprecated from provider version 1.236.0. New field `auto_snapshot_policy_name` instead.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// (Available since v1.236.0) The region ID of the automatic snapshot policy.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        [Input("repeatWeekdays")]
        private InputList<string>? _repeatWeekdays;

        /// <summary>
        /// The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
        /// </summary>
        public InputList<string> RepeatWeekdays
        {
            get => _repeatWeekdays ?? (_repeatWeekdays = new InputList<string>());
            set => _repeatWeekdays = value;
        }

        /// <summary>
        /// The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The retention period of the automatic snapshots. Unit: days. Valid values:
        /// - `-1`: Automatic snapshots are retained until they are deleted.
        /// </summary>
        [Input("retentionDays")]
        public Input<int>? RetentionDays { get; set; }

        /// <summary>
        /// The status of the automatic snapshot policy.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetCopyRegions")]
        private InputList<string>? _targetCopyRegions;

        /// <summary>
        /// The destination region to which to copy the snapshot. You can specify only a single destination region.
        /// </summary>
        public InputList<string> TargetCopyRegions
        {
            get => _targetCopyRegions ?? (_targetCopyRegions = new InputList<string>());
            set => _targetCopyRegions = value;
        }

        [Input("timePoints")]
        private InputList<string>? _timePoints;

        /// <summary>
        /// The points in time of the day at which to create automatic snapshots.
        /// 
        /// The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
        /// 
        /// The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: ["0", "1", ... "23"].
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        public InputList<string> TimePoints
        {
            get => _timePoints ?? (_timePoints = new InputList<string>());
            set => _timePoints = value;
        }

        public AutoSnapshotPolicyState()
        {
        }
        public static new AutoSnapshotPolicyState Empty => new AutoSnapshotPolicyState();
    }
}
