// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// ## Import
    /// 
    /// ECS Image Pipeline Execution can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ecs/imagePipelineExecution:ImagePipelineExecution example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/imagePipelineExecution:ImagePipelineExecution")]
    public partial class ImagePipelineExecution : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when the image build task was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the image template.
        /// </summary>
        [Output("imagePipelineId")]
        public Output<string> ImagePipelineId { get; private set; } = null!;

        /// <summary>
        /// The status of the image build task. Valid values:
        /// - CANCELLED: canceled. The build process has been canceled.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ImagePipelineExecution resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImagePipelineExecution(string name, ImagePipelineExecutionArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ecs/imagePipelineExecution:ImagePipelineExecution", name, args ?? new ImagePipelineExecutionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImagePipelineExecution(string name, Input<string> id, ImagePipelineExecutionState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/imagePipelineExecution:ImagePipelineExecution", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImagePipelineExecution resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImagePipelineExecution Get(string name, Input<string> id, ImagePipelineExecutionState? state = null, CustomResourceOptions? options = null)
        {
            return new ImagePipelineExecution(name, id, state, options);
        }
    }

    public sealed class ImagePipelineExecutionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the image template.
        /// </summary>
        [Input("imagePipelineId", required: true)]
        public Input<string> ImagePipelineId { get; set; } = null!;

        /// <summary>
        /// The status of the image build task. Valid values:
        /// - CANCELLED: canceled. The build process has been canceled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ImagePipelineExecutionArgs()
        {
        }
        public static new ImagePipelineExecutionArgs Empty => new ImagePipelineExecutionArgs();
    }

    public sealed class ImagePipelineExecutionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the image build task was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the image template.
        /// </summary>
        [Input("imagePipelineId")]
        public Input<string>? ImagePipelineId { get; set; }

        /// <summary>
        /// The status of the image build task. Valid values:
        /// - CANCELLED: canceled. The build process has been canceled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ImagePipelineExecutionState()
        {
        }
        public static new ImagePipelineExecutionState Empty => new ImagePipelineExecutionState();
    }
}
