// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// Provides a ECS Ram Role Attachment resource.
    /// 
    /// Mount RAM role.
    /// 
    /// For information about ECS Ram Role Attachment and how to use it, see [What is Ram Role Attachment](https://next.api.alibabacloud.com/document/Ecs/2014-05-26/AttachInstanceRamRole).
    /// 
    /// &gt; **NOTE:** Available since v1.250.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableDiskCategory = "cloud_efficiency",
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var defaultGetImages = AliCloud.Ecs.GetImages.Invoke(new()
    ///     {
    ///         MostRecent = true,
    ///         Owners = "system",
    ///     });
    /// 
    ///     var defaultGetInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
    ///     {
    ///         AvailabilityZone = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
    ///     });
    /// 
    ///     var defaultInteger = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var defaultRole = new AliCloud.Ram.Role("default", new()
    ///     {
    ///         Name = $"{name}-{defaultInteger.Result}",
    ///         Document = @"\t\t{
    /// \t\t\t\""Statement\"": [
    /// \t\t\t\t{
    /// \t\t\t\t\t\""Action\"": \""sts:AssumeRole\"",
    /// \t\t\t\t\t\""Effect\"": \""Allow\"",
    /// \t\t\t\t\t\""Principal\"": {
    /// \t\t\t\t\t\t\""Service\"": [
    /// \t\t\t\t\t\t\t\""ecs.aliyuncs.com\""
    /// \t\t\t\t\t\t]
    /// \t\t\t\t\t}
    /// \t\t\t\t}
    /// \t\t  \t],
    /// \t\t\t\""Version\"": \""1\""
    /// \t\t}
    /// ",
    ///         Force = true,
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = $"{name}-{defaultInteger.Result}",
    ///         CidrBlock = "192.168.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
    ///     {
    ///         VswitchName = $"{name}-{defaultInteger.Result}",
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "192.168.192.0/24",
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Ecs.Instance("default", new()
    ///     {
    ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
    ///         InstanceType = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
    ///         SecurityGroups = new[]
    ///         {
    ///             defaultSecurityGroup,
    ///         }.Select(__item =&gt; __item.Id).ToList(),
    ///         InternetChargeType = "PayByTraffic",
    ///         InternetMaxBandwidthOut = 10,
    ///         AvailabilityZone = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.AvailabilityZones[0]),
    ///         InstanceChargeType = "PostPaid",
    ///         SystemDiskCategory = "cloud_efficiency",
    ///         VswitchId = defaultSwitch.Id,
    ///         InstanceName = $"{name}-{defaultInteger.Result}",
    ///     });
    /// 
    ///     var defaultRamRoleAttachment = new AliCloud.Ecs.RamRoleAttachment("default", new()
    ///     {
    ///         RamRoleName = defaultRole.Id,
    ///         InstanceId = defaultInstance.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ECS Ram Role Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ecs/ramRoleAttachment:RamRoleAttachment example &lt;instance_id&gt;:&lt;ram_role_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/ramRoleAttachment:RamRoleAttachment")]
    public partial class RamRoleAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The additional policy. When you attach an instance RAM role to instances, you can specify an additional policy to further limit the permissions of the role.
        /// </summary>
        [Output("policy")]
        public Output<string?> Policy { get; private set; } = null!;

        /// <summary>
        /// The name of the instance RAM role.
        /// </summary>
        [Output("ramRoleName")]
        public Output<string> RamRoleName { get; private set; } = null!;


        /// <summary>
        /// Create a RamRoleAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RamRoleAttachment(string name, RamRoleAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ecs/ramRoleAttachment:RamRoleAttachment", name, args ?? new RamRoleAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RamRoleAttachment(string name, Input<string> id, RamRoleAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/ramRoleAttachment:RamRoleAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RamRoleAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RamRoleAttachment Get(string name, Input<string> id, RamRoleAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new RamRoleAttachment(name, id, state, options);
        }
    }

    public sealed class RamRoleAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The additional policy. When you attach an instance RAM role to instances, you can specify an additional policy to further limit the permissions of the role.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// The name of the instance RAM role.
        /// </summary>
        [Input("ramRoleName", required: true)]
        public Input<string> RamRoleName { get; set; } = null!;

        public RamRoleAttachmentArgs()
        {
        }
        public static new RamRoleAttachmentArgs Empty => new RamRoleAttachmentArgs();
    }

    public sealed class RamRoleAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The additional policy. When you attach an instance RAM role to instances, you can specify an additional policy to further limit the permissions of the role.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// The name of the instance RAM role.
        /// </summary>
        [Input("ramRoleName")]
        public Input<string>? RamRoleName { get; set; }

        public RamRoleAttachmentState()
        {
        }
        public static new RamRoleAttachmentState Empty => new RamRoleAttachmentState();
    }
}
