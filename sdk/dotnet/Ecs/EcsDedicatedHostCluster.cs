// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// Provides a ECS Dedicated Host Cluster resource.
    /// 
    /// For information about ECS Dedicated Host Cluster and how to use it, see [What is Dedicated Host Cluster](https://www.alibabacloud.com/help/en/doc-detail/184667.html).
    /// 
    /// &gt; **NOTE:** Available in v1.146.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZones = AliCloud.GetZones.Invoke();
    /// 
    ///     var exampleEcsDedicatedHostCluster = new AliCloud.Ecs.EcsDedicatedHostCluster("exampleEcsDedicatedHostCluster", new()
    ///     {
    ///         DedicatedHostClusterName = "example_value",
    ///         Description = "example_value",
    ///         ZoneId = exampleZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         Tags = 
    ///         {
    ///             { "Create", "TF" },
    ///             { "For", "DDH_Cluster_Test" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ECS Dedicated Host Cluster can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:ecs/ecsDedicatedHostCluster:EcsDedicatedHostCluster example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/ecsDedicatedHostCluster:EcsDedicatedHostCluster")]
    public partial class EcsDedicatedHostCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the dedicated host cluster. The name must be `2` to `128` characters in length and can contain letters, digits, periods (.), underscores (_), and hyphens (-). It must start with a letter. It cannot contain `http://` or `https://`.
        /// </summary>
        [Output("dedicatedHostClusterName")]
        public Output<string?> DedicatedHostClusterName { get; private set; } = null!;

        /// <summary>
        /// The description of the dedicated host cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The dry run.
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the zone in which to create the dedicated host cluster.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a EcsDedicatedHostCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EcsDedicatedHostCluster(string name, EcsDedicatedHostClusterArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ecs/ecsDedicatedHostCluster:EcsDedicatedHostCluster", name, args ?? new EcsDedicatedHostClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EcsDedicatedHostCluster(string name, Input<string> id, EcsDedicatedHostClusterState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/ecsDedicatedHostCluster:EcsDedicatedHostCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EcsDedicatedHostCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EcsDedicatedHostCluster Get(string name, Input<string> id, EcsDedicatedHostClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new EcsDedicatedHostCluster(name, id, state, options);
        }
    }

    public sealed class EcsDedicatedHostClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the dedicated host cluster. The name must be `2` to `128` characters in length and can contain letters, digits, periods (.), underscores (_), and hyphens (-). It must start with a letter. It cannot contain `http://` or `https://`.
        /// </summary>
        [Input("dedicatedHostClusterName")]
        public Input<string>? DedicatedHostClusterName { get; set; }

        /// <summary>
        /// The description of the dedicated host cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The dry run.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the zone in which to create the dedicated host cluster.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public EcsDedicatedHostClusterArgs()
        {
        }
        public static new EcsDedicatedHostClusterArgs Empty => new EcsDedicatedHostClusterArgs();
    }

    public sealed class EcsDedicatedHostClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the dedicated host cluster. The name must be `2` to `128` characters in length and can contain letters, digits, periods (.), underscores (_), and hyphens (-). It must start with a letter. It cannot contain `http://` or `https://`.
        /// </summary>
        [Input("dedicatedHostClusterName")]
        public Input<string>? DedicatedHostClusterName { get; set; }

        /// <summary>
        /// The description of the dedicated host cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The dry run.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the zone in which to create the dedicated host cluster.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public EcsDedicatedHostClusterState()
        {
        }
        public static new EcsDedicatedHostClusterState Empty => new EcsDedicatedHostClusterState();
    }
}
