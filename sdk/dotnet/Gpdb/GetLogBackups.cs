// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb
{
    public static class GetLogBackups
    {
        /// <summary>
        /// This data source provides Gpdb Logbackup available to the user.[What is Log Backup](https://www.alibabacloud.com/help/en/)
        /// 
        /// &gt; **NOTE:** Available since v1.231.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.Gpdb.GetInstances.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetLogBackups = AliCloud.Gpdb.GetLogBackups.Invoke(new()
        ///     {
        ///         StartTime = "2022-12-12T02:00Z",
        ///         EndTime = "2024-12-12T02:00Z",
        ///         DbInstanceId = @default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0]),
        ///         Ids = new[]
        ///         {
        ///             @default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0]),
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudGpdbLogbackupExampleId"] = defaultGetLogBackups.Apply(getLogBackupsResult =&gt; getLogBackupsResult.Logbackups[0]?.DbInstanceId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetLogBackupsResult> InvokeAsync(GetLogBackupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogBackupsResult>("alicloud:gpdb/getLogBackups:getLogBackups", args ?? new GetLogBackupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Gpdb Logbackup available to the user.[What is Log Backup](https://www.alibabacloud.com/help/en/)
        /// 
        /// &gt; **NOTE:** Available since v1.231.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.Gpdb.GetInstances.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetLogBackups = AliCloud.Gpdb.GetLogBackups.Invoke(new()
        ///     {
        ///         StartTime = "2022-12-12T02:00Z",
        ///         EndTime = "2024-12-12T02:00Z",
        ///         DbInstanceId = @default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0]),
        ///         Ids = new[]
        ///         {
        ///             @default.Apply(getInstancesResult =&gt; getInstancesResult.Ids[0]),
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudGpdbLogbackupExampleId"] = defaultGetLogBackups.Apply(getLogBackupsResult =&gt; getLogBackupsResult.Logbackups[0]?.DbInstanceId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetLogBackupsResult> Invoke(GetLogBackupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogBackupsResult>("alicloud:gpdb/getLogBackups:getLogBackups", args ?? new GetLogBackupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogBackupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Master node of the instance.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public string DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The query end time, which must be greater than the query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
        /// </summary>
        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Logbackup IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Current page number.
        /// </summary>
        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        /// <summary>
        /// Number of records per page.
        /// </summary>
        [Input("pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// The query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
        /// </summary>
        [Input("startTime")]
        public string? StartTime { get; set; }

        public GetLogBackupsArgs()
        {
        }
        public static new GetLogBackupsArgs Empty => new GetLogBackupsArgs();
    }

    public sealed class GetLogBackupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Master node of the instance.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The query end time, which must be greater than the query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Logbackup IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Current page number.
        /// </summary>
        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        /// <summary>
        /// Number of records per page.
        /// </summary>
        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        /// <summary>
        /// The query start time. Format: yyyy-MM-ddTHH:mmZ(UTC time).
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public GetLogBackupsInvokeArgs()
        {
        }
        public static new GetLogBackupsInvokeArgs Empty => new GetLogBackupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogBackupsResult
    {
        /// <summary>
        /// The ID of the Master node of the instance.
        /// </summary>
        public readonly string DbInstanceId;
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Logbackup IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of Logbackup Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLogBackupsLogbackupResult> Logbackups;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;
        public readonly string? StartTime;

        [OutputConstructor]
        private GetLogBackupsResult(
            string dbInstanceId,

            string? endTime,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetLogBackupsLogbackupResult> logbackups,

            string? outputFile,

            int? pageNumber,

            int? pageSize,

            string? startTime)
        {
            DbInstanceId = dbInstanceId;
            EndTime = endTime;
            Id = id;
            Ids = ids;
            Logbackups = logbackups;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
            StartTime = startTime;
        }
    }
}
