// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb.Outputs
{

    [OutputType]
    public sealed class GetDataBackupsBackupResult
    {
        /// <summary>
        /// The backup end time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
        /// </summary>
        public readonly string BackupEndTime;
        /// <summary>
        /// The end time of the backup (local time).
        /// </summary>
        public readonly string BackupEndTimeLocal;
        /// <summary>
        /// Backup method. Value Description:-**Physical**: Physical backup.-**Snapshot**: the Snapshot backup.
        /// </summary>
        public readonly string BackupMethod;
        /// <summary>
        /// Backup mode.Full Backup Value Description:-**Automated**: The system is automatically backed up.-**Manual**: Manual backup.Recovery point value description:-**Automated**: The recovery point after a full backup.-**Manual**: The recovery point triggered manually by the user.-**Period**: The recovery point triggered periodically because of the backup policy.
        /// </summary>
        public readonly string BackupMode;
        /// <summary>
        /// The ID of the backup set.
        /// </summary>
        public readonly string BackupSetId;
        /// <summary>
        /// The size of the backup file. Unit: Byte.
        /// </summary>
        public readonly int BackupSize;
        /// <summary>
        /// The backup start time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
        /// </summary>
        public readonly string BackupStartTime;
        /// <summary>
        /// The start time of the backup (local time).
        /// </summary>
        public readonly string BackupStartTimeLocal;
        /// <summary>
        /// The name of the recovery point or full backup set.
        /// </summary>
        public readonly string BaksetName;
        /// <summary>
        /// -Full backup: Returns the timestamp of the consistent point in time.-Recoverable point: Returns the timestamp of the recoverable point in time.
        /// </summary>
        public readonly int ConsistentTime;
        /// <summary>
        /// The backup type. Value Description:-**DATA**: Full backup.-**RESTOREPOI**: Recoverable point.
        /// </summary>
        public readonly string DataType;
        /// <summary>
        /// The instance ID.
        /// </summary>
        public readonly string DbInstanceId;
        /// <summary>
        /// Backup set status. Value Description:-Success: The backup has been completed.-Failed: Backup Failed.If not, return all.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetDataBackupsBackupResult(
            string backupEndTime,

            string backupEndTimeLocal,

            string backupMethod,

            string backupMode,

            string backupSetId,

            int backupSize,

            string backupStartTime,

            string backupStartTimeLocal,

            string baksetName,

            int consistentTime,

            string dataType,

            string dbInstanceId,

            string status)
        {
            BackupEndTime = backupEndTime;
            BackupEndTimeLocal = backupEndTimeLocal;
            BackupMethod = backupMethod;
            BackupMode = backupMode;
            BackupSetId = backupSetId;
            BackupSize = backupSize;
            BackupStartTime = backupStartTime;
            BackupStartTimeLocal = backupStartTimeLocal;
            BaksetName = baksetName;
            ConsistentTime = consistentTime;
            DataType = dataType;
            DbInstanceId = dbInstanceId;
            Status = status;
        }
    }
}
