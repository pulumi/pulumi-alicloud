// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb
{
    /// <summary>
    /// Provides a GPDB Hadoop Data Source resource.
    /// 
    /// Hadoop DataSource Config.
    /// 
    /// For information about GPDB Hadoop Data Source and how to use it, see [What is Hadoop Data Source](https://www.alibabacloud.com/help/en/).
    /// 
    /// &gt; **NOTE:** Available since v1.230.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
    ///     {
    ///         NameRegex = "^default-NODELETING$",
    ///     });
    /// 
    ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
    ///     {
    ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///         ZoneId = "cn-beijing-h",
    ///     });
    /// 
    ///     var defaultEcsKeyPair = new AliCloud.Ecs.EcsKeyPair("default", new()
    ///     {
    ///         KeyPairName = name,
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         Name = name,
    ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///     });
    /// 
    ///     var defaultRole = new AliCloud.Ram.Role("default", new()
    ///     {
    ///         Name = name,
    ///         Document = @"    {
    ///         ""Statement"": [
    ///         {
    ///             ""Action"": ""sts:AssumeRole"",
    ///             ""Effect"": ""Allow"",
    ///             ""Principal"": {
    ///             ""Service"": [
    ///                 ""emr.aliyuncs.com"",
    ///                 ""ecs.aliyuncs.com""
    ///             ]
    ///             }
    ///         }
    ///         ],
    ///         ""Version"": ""1""
    ///     }
    /// ",
    ///         Description = "this is a role example.",
    ///         Force = true,
    ///     });
    /// 
    ///     var defaultGetResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
    ///     {
    ///         Status = "OK",
    ///     });
    /// 
    ///     var defaultGetKeys = AliCloud.Kms.GetKeys.Invoke(new()
    ///     {
    ///         Status = "Enabled",
    ///     });
    /// 
    ///     var defaultCluster = new AliCloud.Emrv2.Cluster("default", new()
    ///     {
    ///         NodeGroups = new[]
    ///         {
    ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
    ///             {
    ///                 VswitchIds = new[]
    ///                 {
    ///                     defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
    ///                 },
    ///                 InstanceTypes = new[]
    ///                 {
    ///                     "ecs.g6.xlarge",
    ///                 },
    ///                 NodeCount = 1,
    ///                 SpotInstanceRemedy = false,
    ///                 DataDisks = new[]
    ///                 {
    ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
    ///                     {
    ///                         Count = 3,
    ///                         Category = "cloud_essd",
    ///                         Size = 80,
    ///                         PerformanceLevel = "PL0",
    ///                     },
    ///                 },
    ///                 NodeGroupName = "emr-master",
    ///                 PaymentType = "PayAsYouGo",
    ///                 WithPublicIp = false,
    ///                 GracefulShutdown = false,
    ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
    ///                 {
    ///                     Category = "cloud_essd",
    ///                     Size = 80,
    ///                     PerformanceLevel = "PL0",
    ///                     Count = 1,
    ///                 },
    ///                 NodeGroupType = "MASTER",
    ///             },
    ///             new AliCloud.Emrv2.Inputs.ClusterNodeGroupArgs
    ///             {
    ///                 SpotInstanceRemedy = false,
    ///                 NodeGroupType = "CORE",
    ///                 VswitchIds = new[]
    ///                 {
    ///                     defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
    ///                 },
    ///                 NodeCount = 2,
    ///                 GracefulShutdown = false,
    ///                 SystemDisk = new AliCloud.Emrv2.Inputs.ClusterNodeGroupSystemDiskArgs
    ///                 {
    ///                     PerformanceLevel = "PL0",
    ///                     Count = 1,
    ///                     Category = "cloud_essd",
    ///                     Size = 80,
    ///                 },
    ///                 DataDisks = new[]
    ///                 {
    ///                     new AliCloud.Emrv2.Inputs.ClusterNodeGroupDataDiskArgs
    ///                     {
    ///                         Count = 3,
    ///                         PerformanceLevel = "PL0",
    ///                         Category = "cloud_essd",
    ///                         Size = 80,
    ///                     },
    ///                 },
    ///                 NodeGroupName = "emr-core",
    ///                 PaymentType = "PayAsYouGo",
    ///                 InstanceTypes = new[]
    ///                 {
    ///                     "ecs.g6.xlarge",
    ///                 },
    ///                 WithPublicIp = false,
    ///             },
    ///         },
    ///         DeployMode = "NORMAL",
    ///         Tags = 
    ///         {
    ///             { "Created", "TF" },
    ///             { "For", "example" },
    ///         },
    ///         ReleaseVersion = "EMR-5.10.0",
    ///         Applications = new[]
    ///         {
    ///             "HADOOP-COMMON",
    ///             "HDFS",
    ///             "YARN",
    ///         },
    ///         NodeAttributes = new[]
    ///         {
    ///             new AliCloud.Emrv2.Inputs.ClusterNodeAttributeArgs
    ///             {
    ///                 ZoneId = "cn-beijing-h",
    ///                 KeyPairName = defaultEcsKeyPair.Id,
    ///                 DataDiskEncrypted = true,
    ///                 DataDiskKmsKeyId = defaultGetKeys.Apply(getKeysResult =&gt; getKeysResult.Ids[0]),
    ///                 VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///                 RamRole = defaultRole.Name,
    ///                 SecurityGroupId = defaultSecurityGroup.Id,
    ///             },
    ///         },
    ///         ResourceGroupId = defaultGetResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0]),
    ///         ClusterName = name,
    ///         PaymentType = "PayAsYouGo",
    ///         ClusterType = "DATAFLOW",
    ///     });
    /// 
    ///     var defaultZoepvx = new AliCloud.Gpdb.Instance("defaultZoepvx", new()
    ///     {
    ///         InstanceSpec = "2C8G",
    ///         Description = name,
    ///         SegNodeNum = 2,
    ///         SegStorageType = "cloud_essd",
    ///         InstanceNetworkType = "VPC",
    ///         PaymentType = "PayAsYouGo",
    ///         SslEnabled = 0,
    ///         EngineVersion = "6.0",
    ///         ZoneId = "cn-beijing-h",
    ///         VswitchId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
    ///         StorageSize = 50,
    ///         MasterCu = 4,
    ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///         DbInstanceMode = "StorageElastic",
    ///         Engine = "gpdb",
    ///         DbInstanceCategory = "Basic",
    ///     });
    /// 
    ///     var defaultyOxz1K = new AliCloud.Gpdb.ExternalDataService("defaultyOxz1K", new()
    ///     {
    ///         ServiceName = name,
    ///         DbInstanceId = defaultZoepvx.Id,
    ///         ServiceDescription = name,
    ///         ServiceSpec = "8",
    ///     });
    /// 
    ///     var defaultHadoopDataSource = new AliCloud.Gpdb.HadoopDataSource("default", new()
    ///     {
    ///         HdfsConf = "aaa",
    ///         DataSourceName = defaultyOxz1K.ServiceName,
    ///         YarnConf = "aaa",
    ///         HiveConf = "aaa",
    ///         HadoopCreateType = "emr",
    ///         DataSourceDescription = name,
    ///         MapReduceConf = "aaa",
    ///         DataSourceType = "hive",
    ///         HadoopCoreConf = "aaa",
    ///         EmrInstanceId = defaultCluster.Id,
    ///         DbInstanceId = defaultZoepvx.Id,
    ///         HadoopHostsAddress = "aaa",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GPDB Hadoop Data Source can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:gpdb/hadoopDataSource:HadoopDataSource example &lt;db_instance_id&gt;:&lt;data_source_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:gpdb/hadoopDataSource:HadoopDataSource")]
    public partial class HadoopDataSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation time
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Data Source Description
        /// </summary>
        [Output("dataSourceDescription")]
        public Output<string?> DataSourceDescription { get; private set; } = null!;

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Output("dataSourceId")]
        public Output<int> DataSourceId { get; private set; } = null!;

        /// <summary>
        /// Data Source Name
        /// </summary>
        [Output("dataSourceName")]
        public Output<string?> DataSourceName { get; private set; } = null!;

        /// <summary>
        /// The type of the data source. Valid values:
        /// 
        /// *   mysql
        /// - postgresql
        /// 
        /// *   hdfs
        /// - hive
        /// </summary>
        [Output("dataSourceType")]
        public Output<string?> DataSourceType { get; private set; } = null!;

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Emr instance.
        /// </summary>
        [Output("emrInstanceId")]
        public Output<string?> EmrInstanceId { get; private set; } = null!;

        /// <summary>
        /// The string that specifies the content of the Hadoop core-site.xml file.
        /// </summary>
        [Output("hadoopCoreConf")]
        public Output<string?> HadoopCoreConf { get; private set; } = null!;

        /// <summary>
        /// The type of the external service. Valid values:
        /// - emr: E-MapReduce (EMR) Hadoop cluster.
        /// - selfCreate: self-managed Hadoop cluster.
        /// </summary>
        [Output("hadoopCreateType")]
        public Output<string?> HadoopCreateType { get; private set; } = null!;

        /// <summary>
        /// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
        /// </summary>
        [Output("hadoopHostsAddress")]
        public Output<string?> HadoopHostsAddress { get; private set; } = null!;

        /// <summary>
        /// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Output("hdfsConf")]
        public Output<string?> HdfsConf { get; private set; } = null!;

        /// <summary>
        /// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
        /// </summary>
        [Output("hiveConf")]
        public Output<string?> HiveConf { get; private set; } = null!;

        /// <summary>
        /// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Output("mapReduceConf")]
        public Output<string?> MapReduceConf { get; private set; } = null!;

        /// <summary>
        /// Data Source Status
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Output("yarnConf")]
        public Output<string?> YarnConf { get; private set; } = null!;


        /// <summary>
        /// Create a HadoopDataSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HadoopDataSource(string name, HadoopDataSourceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/hadoopDataSource:HadoopDataSource", name, args ?? new HadoopDataSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HadoopDataSource(string name, Input<string> id, HadoopDataSourceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/hadoopDataSource:HadoopDataSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HadoopDataSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HadoopDataSource Get(string name, Input<string> id, HadoopDataSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new HadoopDataSource(name, id, state, options);
        }
    }

    public sealed class HadoopDataSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data Source Description
        /// </summary>
        [Input("dataSourceDescription")]
        public Input<string>? DataSourceDescription { get; set; }

        /// <summary>
        /// Data Source Name
        /// </summary>
        [Input("dataSourceName")]
        public Input<string>? DataSourceName { get; set; }

        /// <summary>
        /// The type of the data source. Valid values:
        /// 
        /// *   mysql
        /// - postgresql
        /// 
        /// *   hdfs
        /// - hive
        /// </summary>
        [Input("dataSourceType")]
        public Input<string>? DataSourceType { get; set; }

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The ID of the Emr instance.
        /// </summary>
        [Input("emrInstanceId")]
        public Input<string>? EmrInstanceId { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop core-site.xml file.
        /// </summary>
        [Input("hadoopCoreConf")]
        public Input<string>? HadoopCoreConf { get; set; }

        /// <summary>
        /// The type of the external service. Valid values:
        /// - emr: E-MapReduce (EMR) Hadoop cluster.
        /// - selfCreate: self-managed Hadoop cluster.
        /// </summary>
        [Input("hadoopCreateType")]
        public Input<string>? HadoopCreateType { get; set; }

        /// <summary>
        /// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
        /// </summary>
        [Input("hadoopHostsAddress")]
        public Input<string>? HadoopHostsAddress { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Input("hdfsConf")]
        public Input<string>? HdfsConf { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
        /// </summary>
        [Input("hiveConf")]
        public Input<string>? HiveConf { get; set; }

        /// <summary>
        /// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Input("mapReduceConf")]
        public Input<string>? MapReduceConf { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Input("yarnConf")]
        public Input<string>? YarnConf { get; set; }

        public HadoopDataSourceArgs()
        {
        }
        public static new HadoopDataSourceArgs Empty => new HadoopDataSourceArgs();
    }

    public sealed class HadoopDataSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Data Source Description
        /// </summary>
        [Input("dataSourceDescription")]
        public Input<string>? DataSourceDescription { get; set; }

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Input("dataSourceId")]
        public Input<int>? DataSourceId { get; set; }

        /// <summary>
        /// Data Source Name
        /// </summary>
        [Input("dataSourceName")]
        public Input<string>? DataSourceName { get; set; }

        /// <summary>
        /// The type of the data source. Valid values:
        /// 
        /// *   mysql
        /// - postgresql
        /// 
        /// *   hdfs
        /// - hive
        /// </summary>
        [Input("dataSourceType")]
        public Input<string>? DataSourceType { get; set; }

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        /// <summary>
        /// The ID of the Emr instance.
        /// </summary>
        [Input("emrInstanceId")]
        public Input<string>? EmrInstanceId { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop core-site.xml file.
        /// </summary>
        [Input("hadoopCoreConf")]
        public Input<string>? HadoopCoreConf { get; set; }

        /// <summary>
        /// The type of the external service. Valid values:
        /// - emr: E-MapReduce (EMR) Hadoop cluster.
        /// - selfCreate: self-managed Hadoop cluster.
        /// </summary>
        [Input("hadoopCreateType")]
        public Input<string>? HadoopCreateType { get; set; }

        /// <summary>
        /// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
        /// </summary>
        [Input("hadoopHostsAddress")]
        public Input<string>? HadoopHostsAddress { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Input("hdfsConf")]
        public Input<string>? HdfsConf { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
        /// </summary>
        [Input("hiveConf")]
        public Input<string>? HiveConf { get; set; }

        /// <summary>
        /// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Input("mapReduceConf")]
        public Input<string>? MapReduceConf { get; set; }

        /// <summary>
        /// Data Source Status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
        /// </summary>
        [Input("yarnConf")]
        public Input<string>? YarnConf { get; set; }

        public HadoopDataSourceState()
        {
        }
        public static new HadoopDataSourceState Empty => new HadoopDataSourceState();
    }
}
