// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb
{
    /// <summary>
    /// Provides a GPDB Streaming Job resource.
    /// 
    /// Real-time data tasks.
    /// 
    /// For information about GPDB Streaming Job and how to use it, see [What is Streaming Job](https://www.alibabacloud.com/help/en/analyticdb/analyticdb-for-postgresql/developer-reference/api-gpdb-2016-05-03-createstreamingjob).
    /// 
    /// &gt; **NOTE:** Available since v1.231.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultTXqb15 = new AliCloud.Vpc.Network("defaultTXqb15", new()
    ///     {
    ///         CidrBlock = "192.168.0.0/16",
    ///     });
    /// 
    ///     var defaultaSWhbT = new AliCloud.Vpc.Switch("defaultaSWhbT", new()
    ///     {
    ///         VpcId = defaultTXqb15.Id,
    ///         ZoneId = "cn-beijing-h",
    ///         CidrBlock = "192.168.1.0/24",
    ///     });
    /// 
    ///     var defaulth2ghc1 = new AliCloud.Gpdb.Instance("defaulth2ghc1", new()
    ///     {
    ///         InstanceSpec = "2C8G",
    ///         Description = name,
    ///         SegNodeNum = 2,
    ///         SegStorageType = "cloud_essd",
    ///         InstanceNetworkType = "VPC",
    ///         DbInstanceCategory = "Basic",
    ///         PaymentType = "PayAsYouGo",
    ///         SslEnabled = 0,
    ///         EngineVersion = "6.0",
    ///         ZoneId = "cn-beijing-h",
    ///         VswitchId = defaultaSWhbT.Id,
    ///         StorageSize = 50,
    ///         MasterCu = 4,
    ///         VpcId = defaultTXqb15.Id,
    ///         DbInstanceMode = "StorageElastic",
    ///         Engine = "gpdb",
    ///     });
    /// 
    ///     var default2dUszY = new AliCloud.Gpdb.StreamingDataService("default2dUszY", new()
    ///     {
    ///         ServiceName = "example",
    ///         DbInstanceId = defaulth2ghc1.Id,
    ///         ServiceDescription = "example",
    ///         ServiceSpec = "8",
    ///     });
    /// 
    ///     var defaultcDQItu = new AliCloud.Gpdb.StreamingDataSource("defaultcDQItu", new()
    ///     {
    ///         DbInstanceId = defaulth2ghc1.Id,
    ///         DataSourceName = "example",
    ///         DataSourceConfig = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["brokers"] = "alikafka-post-cn-g4t3t4eod004-1-vpc.alikafka.aliyuncs.com:9092,alikafka-post-cn-g4t3t4eod004-2-vpc.alikafka.aliyuncs.com:9092,alikafka-post-cn-g4t3t4eod004-3-vpc.alikafka.aliyuncs.com:9092",
    ///             ["delimiter"] = "|",
    ///             ["format"] = "delimited",
    ///             ["topic"] = "ziyuan_example",
    ///         }),
    ///         DataSourceType = "kafka",
    ///         DataSourceDescription = "example",
    ///         ServiceId = default2dUszY.ServiceId,
    ///     });
    /// 
    ///     var @default = new AliCloud.Gpdb.StreamingJob("default", new()
    ///     {
    ///         Account = "example_001",
    ///         DestSchema = "public",
    ///         Mode = "professional",
    ///         JobName = "example-kafka",
    ///         JobDescription = "example-kafka",
    ///         DestDatabase = "adb_sampledata_tpch",
    ///         DbInstanceId = defaulth2ghc1.Id,
    ///         DestTable = "customer",
    ///         DataSourceId = defaultcDQItu.DataSourceId,
    ///         Password = "example_001",
    ///         JobConfig = @"ATABASE: adb_sampledata_tpch
    /// USER: example_001
    /// PASSWORD: example_001
    /// HOST: gp-2zean69451zsjj139-master.gpdb.rds.aliyuncs.com
    /// PORT: 5432
    /// KAFKA:
    ///   INPUT:
    ///     SOURCE:
    ///       BROKERS: alikafka-post-cn-3mp3t4ekq004-1-vpc.alikafka.aliyuncs.com:9092
    ///       TOPIC: ziyuan_example
    ///       FALLBACK_OFFSET: LATEST
    ///     KEY:
    ///       COLUMNS:
    ///       - NAME: c_custkey
    ///         TYPE: int
    ///       FORMAT: delimited
    ///       DELIMITED_OPTION:
    ///         DELIMITER: \\'|\\'
    ///     VALUE:
    ///       COLUMNS:
    ///       - NAME: c_comment
    ///         TYPE: varchar
    ///       FORMAT: delimited
    ///       DELIMITED_OPTION:
    ///         DELIMITER: \\'|\\'
    ///     ERROR_LIMIT: 10
    ///   OUTPUT:
    ///     SCHEMA: public
    ///     TABLE: customer
    ///     MODE: MERGE
    ///     MATCH_COLUMNS:
    ///     - c_custkey
    ///     ORDER_COLUMNS:
    ///     - c_custkey
    ///     UPDATE_COLUMNS:
    ///     - c_custkey
    ///     MAPPING:
    ///     - NAME: c_custkey
    ///       EXPRESSION: c_custkey
    ///   COMMIT:
    ///     MAX_ROW: 1000
    ///     MINIMAL_INTERVAL: 1000
    ///     CONSISTENCY: ATLEAST
    ///   POLL:
    ///     BATCHSIZE: 1000
    ///     TIMEOUT: 1000
    ///   PROPERTIES:
    ///     group.id: ziyuan_example_01
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GPDB Streaming Job can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:gpdb/streamingJob:StreamingJob example &lt;db_instance_id&gt;:&lt;job_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:gpdb/streamingJob:StreamingJob")]
    public partial class StreamingJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the database account.
        /// </summary>
        [Output("account")]
        public Output<string?> Account { get; private set; } = null!;

        /// <summary>
        /// The delivery guarantee setting.
        /// 
        /// Valid values:
        /// 
        /// - ATLEAST
        /// - EXACTLY
        /// </summary>
        [Output("consistency")]
        public Output<string?> Consistency { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Output("dataSourceId")]
        public Output<string> DataSourceId { get; private set; } = null!;

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// Target Field
        /// </summary>
        [Output("destColumns")]
        public Output<ImmutableArray<string>> DestColumns { get; private set; } = null!;

        /// <summary>
        /// The name of the destination database.
        /// </summary>
        [Output("destDatabase")]
        public Output<string?> DestDatabase { get; private set; } = null!;

        /// <summary>
        /// Target Schema
        /// </summary>
        [Output("destSchema")]
        public Output<string?> DestSchema { get; private set; } = null!;

        /// <summary>
        /// The name of the destination table.
        /// </summary>
        [Output("destTable")]
        public Output<string?> DestTable { get; private set; } = null!;

        /// <summary>
        /// The number of allowed error rows. Write failures occur when Kafka data does not match the destination table in AnalyticDB for PostgreSQL. If the specified value is exceeded, the job fails.
        /// </summary>
        [Output("errorLimitCount")]
        public Output<int?> ErrorLimitCount { get; private set; } = null!;

        /// <summary>
        /// Automatic offset reset
        /// </summary>
        [Output("fallbackOffset")]
        public Output<string?> FallbackOffset { get; private set; } = null!;

        /// <summary>
        /// Group Name
        /// </summary>
        [Output("groupName")]
        public Output<string?> GroupName { get; private set; } = null!;

        /// <summary>
        /// The YAML configuration file of the job. This parameter must be specified when Mode is set to professional.
        /// </summary>
        [Output("jobConfig")]
        public Output<string?> JobConfig { get; private set; } = null!;

        /// <summary>
        /// The description of the job.
        /// </summary>
        [Output("jobDescription")]
        public Output<string?> JobDescription { get; private set; } = null!;

        /// <summary>
        /// The job ID.
        /// </summary>
        [Output("jobId")]
        public Output<string> JobId { get; private set; } = null!;

        /// <summary>
        /// The name of the job.
        /// </summary>
        [Output("jobName")]
        public Output<string> JobName { get; private set; } = null!;

        /// <summary>
        /// Match Field
        /// </summary>
        [Output("matchColumns")]
        public Output<ImmutableArray<string>> MatchColumns { get; private set; } = null!;

        /// <summary>
        /// The configuration mode. Valid values:
        /// 
        /// 1.  basic: In basic mode, you must configure the configuration parameters.
        /// 
        /// 2.  professional: In professional mode, you can submit a YAML configuration file.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The password of the database account.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// Source Field
        /// </summary>
        [Output("srcColumns")]
        public Output<ImmutableArray<string>> SrcColumns { get; private set; } = null!;

        /// <summary>
        /// Service status, value:
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to test the real-time job. Valid values:
        /// 
        /// - true
        /// - false
        /// 
        /// Default value: false.
        /// </summary>
        [Output("tryRun")]
        public Output<bool?> TryRun { get; private set; } = null!;

        /// <summary>
        /// Update Field
        /// </summary>
        [Output("updateColumns")]
        public Output<ImmutableArray<string>> UpdateColumns { get; private set; } = null!;

        /// <summary>
        /// The write mode.
        /// 
        /// Valid values:
        /// 
        /// - insert
        /// - update
        /// - merge
        /// </summary>
        [Output("writeMode")]
        public Output<string?> WriteMode { get; private set; } = null!;


        /// <summary>
        /// Create a StreamingJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StreamingJob(string name, StreamingJobArgs args, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/streamingJob:StreamingJob", name, args ?? new StreamingJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StreamingJob(string name, Input<string> id, StreamingJobState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/streamingJob:StreamingJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StreamingJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StreamingJob Get(string name, Input<string> id, StreamingJobState? state = null, CustomResourceOptions? options = null)
        {
            return new StreamingJob(name, id, state, options);
        }
    }

    public sealed class StreamingJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database account.
        /// </summary>
        [Input("account")]
        public Input<string>? Account { get; set; }

        /// <summary>
        /// The delivery guarantee setting.
        /// 
        /// Valid values:
        /// 
        /// - ATLEAST
        /// - EXACTLY
        /// </summary>
        [Input("consistency")]
        public Input<string>? Consistency { get; set; }

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public Input<string> DataSourceId { get; set; } = null!;

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        [Input("destColumns")]
        private InputList<string>? _destColumns;

        /// <summary>
        /// Target Field
        /// </summary>
        public InputList<string> DestColumns
        {
            get => _destColumns ?? (_destColumns = new InputList<string>());
            set => _destColumns = value;
        }

        /// <summary>
        /// The name of the destination database.
        /// </summary>
        [Input("destDatabase")]
        public Input<string>? DestDatabase { get; set; }

        /// <summary>
        /// Target Schema
        /// </summary>
        [Input("destSchema")]
        public Input<string>? DestSchema { get; set; }

        /// <summary>
        /// The name of the destination table.
        /// </summary>
        [Input("destTable")]
        public Input<string>? DestTable { get; set; }

        /// <summary>
        /// The number of allowed error rows. Write failures occur when Kafka data does not match the destination table in AnalyticDB for PostgreSQL. If the specified value is exceeded, the job fails.
        /// </summary>
        [Input("errorLimitCount")]
        public Input<int>? ErrorLimitCount { get; set; }

        /// <summary>
        /// Automatic offset reset
        /// </summary>
        [Input("fallbackOffset")]
        public Input<string>? FallbackOffset { get; set; }

        /// <summary>
        /// Group Name
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The YAML configuration file of the job. This parameter must be specified when Mode is set to professional.
        /// </summary>
        [Input("jobConfig")]
        public Input<string>? JobConfig { get; set; }

        /// <summary>
        /// The description of the job.
        /// </summary>
        [Input("jobDescription")]
        public Input<string>? JobDescription { get; set; }

        /// <summary>
        /// The name of the job.
        /// </summary>
        [Input("jobName", required: true)]
        public Input<string> JobName { get; set; } = null!;

        [Input("matchColumns")]
        private InputList<string>? _matchColumns;

        /// <summary>
        /// Match Field
        /// </summary>
        public InputList<string> MatchColumns
        {
            get => _matchColumns ?? (_matchColumns = new InputList<string>());
            set => _matchColumns = value;
        }

        /// <summary>
        /// The configuration mode. Valid values:
        /// 
        /// 1.  basic: In basic mode, you must configure the configuration parameters.
        /// 
        /// 2.  professional: In professional mode, you can submit a YAML configuration file.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The password of the database account.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("srcColumns")]
        private InputList<string>? _srcColumns;

        /// <summary>
        /// Source Field
        /// </summary>
        public InputList<string> SrcColumns
        {
            get => _srcColumns ?? (_srcColumns = new InputList<string>());
            set => _srcColumns = value;
        }

        /// <summary>
        /// Specifies whether to test the real-time job. Valid values:
        /// 
        /// - true
        /// - false
        /// 
        /// Default value: false.
        /// </summary>
        [Input("tryRun")]
        public Input<bool>? TryRun { get; set; }

        [Input("updateColumns")]
        private InputList<string>? _updateColumns;

        /// <summary>
        /// Update Field
        /// </summary>
        public InputList<string> UpdateColumns
        {
            get => _updateColumns ?? (_updateColumns = new InputList<string>());
            set => _updateColumns = value;
        }

        /// <summary>
        /// The write mode.
        /// 
        /// Valid values:
        /// 
        /// - insert
        /// - update
        /// - merge
        /// </summary>
        [Input("writeMode")]
        public Input<string>? WriteMode { get; set; }

        public StreamingJobArgs()
        {
        }
        public static new StreamingJobArgs Empty => new StreamingJobArgs();
    }

    public sealed class StreamingJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database account.
        /// </summary>
        [Input("account")]
        public Input<string>? Account { get; set; }

        /// <summary>
        /// The delivery guarantee setting.
        /// 
        /// Valid values:
        /// 
        /// - ATLEAST
        /// - EXACTLY
        /// </summary>
        [Input("consistency")]
        public Input<string>? Consistency { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        [Input("destColumns")]
        private InputList<string>? _destColumns;

        /// <summary>
        /// Target Field
        /// </summary>
        public InputList<string> DestColumns
        {
            get => _destColumns ?? (_destColumns = new InputList<string>());
            set => _destColumns = value;
        }

        /// <summary>
        /// The name of the destination database.
        /// </summary>
        [Input("destDatabase")]
        public Input<string>? DestDatabase { get; set; }

        /// <summary>
        /// Target Schema
        /// </summary>
        [Input("destSchema")]
        public Input<string>? DestSchema { get; set; }

        /// <summary>
        /// The name of the destination table.
        /// </summary>
        [Input("destTable")]
        public Input<string>? DestTable { get; set; }

        /// <summary>
        /// The number of allowed error rows. Write failures occur when Kafka data does not match the destination table in AnalyticDB for PostgreSQL. If the specified value is exceeded, the job fails.
        /// </summary>
        [Input("errorLimitCount")]
        public Input<int>? ErrorLimitCount { get; set; }

        /// <summary>
        /// Automatic offset reset
        /// </summary>
        [Input("fallbackOffset")]
        public Input<string>? FallbackOffset { get; set; }

        /// <summary>
        /// Group Name
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The YAML configuration file of the job. This parameter must be specified when Mode is set to professional.
        /// </summary>
        [Input("jobConfig")]
        public Input<string>? JobConfig { get; set; }

        /// <summary>
        /// The description of the job.
        /// </summary>
        [Input("jobDescription")]
        public Input<string>? JobDescription { get; set; }

        /// <summary>
        /// The job ID.
        /// </summary>
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        /// <summary>
        /// The name of the job.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        [Input("matchColumns")]
        private InputList<string>? _matchColumns;

        /// <summary>
        /// Match Field
        /// </summary>
        public InputList<string> MatchColumns
        {
            get => _matchColumns ?? (_matchColumns = new InputList<string>());
            set => _matchColumns = value;
        }

        /// <summary>
        /// The configuration mode. Valid values:
        /// 
        /// 1.  basic: In basic mode, you must configure the configuration parameters.
        /// 
        /// 2.  professional: In professional mode, you can submit a YAML configuration file.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The password of the database account.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("srcColumns")]
        private InputList<string>? _srcColumns;

        /// <summary>
        /// Source Field
        /// </summary>
        public InputList<string> SrcColumns
        {
            get => _srcColumns ?? (_srcColumns = new InputList<string>());
            set => _srcColumns = value;
        }

        /// <summary>
        /// Service status, value:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specifies whether to test the real-time job. Valid values:
        /// 
        /// - true
        /// - false
        /// 
        /// Default value: false.
        /// </summary>
        [Input("tryRun")]
        public Input<bool>? TryRun { get; set; }

        [Input("updateColumns")]
        private InputList<string>? _updateColumns;

        /// <summary>
        /// Update Field
        /// </summary>
        public InputList<string> UpdateColumns
        {
            get => _updateColumns ?? (_updateColumns = new InputList<string>());
            set => _updateColumns = value;
        }

        /// <summary>
        /// The write mode.
        /// 
        /// Valid values:
        /// 
        /// - insert
        /// - update
        /// - merge
        /// </summary>
        [Input("writeMode")]
        public Input<string>? WriteMode { get; set; }

        public StreamingJobState()
        {
        }
        public static new StreamingJobState Empty => new StreamingJobState();
    }
}
