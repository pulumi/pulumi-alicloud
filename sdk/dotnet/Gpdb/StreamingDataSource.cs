// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb
{
    /// <summary>
    /// Provides a GPDB Streaming Data Source resource.
    /// 
    /// Real-time data source.
    /// 
    /// For information about GPDB Streaming Data Source and how to use it, see [What is Streaming Data Source](https://www.alibabacloud.com/help/en/analyticdb/analyticdb-for-postgresql/developer-reference/api-gpdb-2016-05-03-createstreamingdatasource).
    /// 
    /// &gt; **NOTE:** Available since v1.227.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var kafka_config_modify = config.Get("kafka-config-modify") ?? @"{
    ///     ""brokers"": ""alikafka-post-cn-g4t3t4eod004-1-vpc.alikafka.aliyuncs.com:9092,alikafka-post-cn-g4t3t4eod004-2-vpc.alikafka.aliyuncs.com:9092,alikafka-post-cn-g4t3t4eod004-3-vpc.alikafka.aliyuncs.com:9092"",
    ///     ""delimiter"": ""#"",
    ///     ""format"": ""delimited"",
    ///     ""topic"": ""ziyuan_example""
    /// }
    /// ";
    ///     var kafka_config = config.Get("kafka-config") ?? @"{
    ///     ""brokers"": ""alikafka-post-cn-g4t3t4eod004-1-vpc.alikafka.aliyuncs.com:9092,alikafka-post-cn-g4t3t4eod004-2-vpc.alikafka.aliyuncs.com:9092,alikafka-post-cn-g4t3t4eod004-3-vpc.alikafka.aliyuncs.com:9092"",
    ///     ""delimiter"": ""|"",
    ///     ""format"": ""delimited"",
    ///     ""topic"": ""ziyuan_example""
    /// }
    /// ";
    ///     var @default = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var defaultDfkYOR = new AliCloud.Vpc.Network("defaultDfkYOR", new()
    ///     {
    ///         CidrBlock = "192.168.0.0/16",
    ///     });
    /// 
    ///     var default59ZqyD = new AliCloud.Vpc.Switch("default59ZqyD", new()
    ///     {
    ///         VpcId = defaultDfkYOR.Id,
    ///         ZoneId = "cn-beijing-h",
    ///         CidrBlock = "192.168.1.0/24",
    ///     });
    /// 
    ///     var default7mX6ld = new AliCloud.Gpdb.Instance("default7mX6ld", new()
    ///     {
    ///         InstanceSpec = "2C8G",
    ///         Description = name,
    ///         SegNodeNum = 2,
    ///         SegStorageType = "cloud_essd",
    ///         InstanceNetworkType = "VPC",
    ///         DbInstanceCategory = "Basic",
    ///         PaymentType = "PayAsYouGo",
    ///         SslEnabled = 0,
    ///         EngineVersion = "6.0",
    ///         ZoneId = "cn-beijing-h",
    ///         VswitchId = default59ZqyD.Id,
    ///         StorageSize = 50,
    ///         MasterCu = 4,
    ///         VpcId = defaultDfkYOR.Id,
    ///         DbInstanceMode = "StorageElastic",
    ///         Engine = "gpdb",
    ///     });
    /// 
    ///     var defaultwruvdv = new AliCloud.Gpdb.StreamingDataService("defaultwruvdv", new()
    ///     {
    ///         ServiceName = "example",
    ///         DbInstanceId = default7mX6ld.Id,
    ///         ServiceDescription = "example",
    ///         ServiceSpec = "8",
    ///     });
    /// 
    ///     var defaultStreamingDataSource = new AliCloud.Gpdb.StreamingDataSource("default", new()
    ///     {
    ///         DbInstanceId = default7mX6ld.Id,
    ///         DataSourceName = "example-kafka3",
    ///         DataSourceConfig = kafka_config,
    ///         DataSourceType = "kafka",
    ///         DataSourceDescription = "example-kafka",
    ///         ServiceId = defaultwruvdv.ServiceId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GPDB Streaming Data Source can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:gpdb/streamingDataSource:StreamingDataSource example &lt;db_instance_id&gt;:&lt;data_source_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:gpdb/streamingDataSource:StreamingDataSource")]
    public partial class StreamingDataSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation time
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The configurations of the data source.
        /// </summary>
        [Output("dataSourceConfig")]
        public Output<string> DataSourceConfig { get; private set; } = null!;

        /// <summary>
        /// The description of the data source.
        /// </summary>
        [Output("dataSourceDescription")]
        public Output<string?> DataSourceDescription { get; private set; } = null!;

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Output("dataSourceId")]
        public Output<string> DataSourceId { get; private set; } = null!;

        /// <summary>
        /// Data Source Name
        /// </summary>
        [Output("dataSourceName")]
        public Output<string> DataSourceName { get; private set; } = null!;

        /// <summary>
        /// Data Source Type
        /// </summary>
        [Output("dataSourceType")]
        public Output<string> DataSourceType { get; private set; } = null!;

        /// <summary>
        /// The instance ID.
        /// 
        /// &gt; **NOTE:**   You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/196830.html) operation to query the information about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// The real-time data service ID.
        /// </summary>
        [Output("serviceId")]
        public Output<int> ServiceId { get; private set; } = null!;

        /// <summary>
        /// Service Status:
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a StreamingDataSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StreamingDataSource(string name, StreamingDataSourceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/streamingDataSource:StreamingDataSource", name, args ?? new StreamingDataSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StreamingDataSource(string name, Input<string> id, StreamingDataSourceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/streamingDataSource:StreamingDataSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StreamingDataSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StreamingDataSource Get(string name, Input<string> id, StreamingDataSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new StreamingDataSource(name, id, state, options);
        }
    }

    public sealed class StreamingDataSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configurations of the data source.
        /// </summary>
        [Input("dataSourceConfig", required: true)]
        public Input<string> DataSourceConfig { get; set; } = null!;

        /// <summary>
        /// The description of the data source.
        /// </summary>
        [Input("dataSourceDescription")]
        public Input<string>? DataSourceDescription { get; set; }

        /// <summary>
        /// Data Source Name
        /// </summary>
        [Input("dataSourceName", required: true)]
        public Input<string> DataSourceName { get; set; } = null!;

        /// <summary>
        /// Data Source Type
        /// </summary>
        [Input("dataSourceType", required: true)]
        public Input<string> DataSourceType { get; set; } = null!;

        /// <summary>
        /// The instance ID.
        /// 
        /// &gt; **NOTE:**   You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/196830.html) operation to query the information about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The real-time data service ID.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<int> ServiceId { get; set; } = null!;

        public StreamingDataSourceArgs()
        {
        }
        public static new StreamingDataSourceArgs Empty => new StreamingDataSourceArgs();
    }

    public sealed class StreamingDataSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The configurations of the data source.
        /// </summary>
        [Input("dataSourceConfig")]
        public Input<string>? DataSourceConfig { get; set; }

        /// <summary>
        /// The description of the data source.
        /// </summary>
        [Input("dataSourceDescription")]
        public Input<string>? DataSourceDescription { get; set; }

        /// <summary>
        /// The data source ID.
        /// </summary>
        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        /// <summary>
        /// Data Source Name
        /// </summary>
        [Input("dataSourceName")]
        public Input<string>? DataSourceName { get; set; }

        /// <summary>
        /// Data Source Type
        /// </summary>
        [Input("dataSourceType")]
        public Input<string>? DataSourceType { get; set; }

        /// <summary>
        /// The instance ID.
        /// 
        /// &gt; **NOTE:**   You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/196830.html) operation to query the information about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        /// <summary>
        /// The real-time data service ID.
        /// </summary>
        [Input("serviceId")]
        public Input<int>? ServiceId { get; set; }

        /// <summary>
        /// Service Status:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public StreamingDataSourceState()
        {
        }
        public static new StreamingDataSourceState Empty => new StreamingDataSourceState();
    }
}
