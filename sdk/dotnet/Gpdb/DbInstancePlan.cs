// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb
{
    /// <summary>
    /// Provides a AnalyticDB for PostgreSQL (GPDB) DB Instance Plan resource.
    /// 
    /// For information about AnalyticDB for PostgreSQL (GPDB) DB Instance Plan and how to use it, see [What is DB Instance Plan](https://www.alibabacloud.com/help/en/analyticdb-for-postgresql/developer-reference/api-gpdb-2016-05-03-createdbinstanceplan).
    /// 
    /// &gt; **NOTE:** Available since v1.189.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var @default = AliCloud.Gpdb.GetZones.Invoke();
    /// 
    ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
    ///     {
    ///         NameRegex = "^default-NODELETING$",
    ///     });
    /// 
    ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
    ///     {
    ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Ids[0]),
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Gpdb.Instance("default", new()
    ///     {
    ///         DbInstanceCategory = "HighAvailability",
    ///         DbInstanceClass = "gpdb.group.segsdx1",
    ///         DbInstanceMode = "StorageElastic",
    ///         Description = name,
    ///         Engine = "gpdb",
    ///         EngineVersion = "6.0",
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Ids[0])),
    ///         InstanceNetworkType = "VPC",
    ///         InstanceSpec = "2C16G",
    ///         MasterNodeNum = 1,
    ///         PaymentType = "PayAsYouGo",
    ///         PrivateIpAddress = "1.1.1.1",
    ///         SegStorageType = "cloud_essd",
    ///         SegNodeNum = 4,
    ///         StorageSize = 50,
    ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///         VswitchId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
    ///         IpWhitelists = new[]
    ///         {
    ///             new AliCloud.Gpdb.Inputs.InstanceIpWhitelistArgs
    ///             {
    ///                 SecurityIpList = "127.0.0.1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var defaultDbInstancePlan = new AliCloud.Gpdb.DbInstancePlan("default", new()
    ///     {
    ///         DbInstancePlanName = name,
    ///         PlanDesc = name,
    ///         PlanType = "PauseResume",
    ///         PlanScheduleType = "Regular",
    ///         PlanConfigs = new[]
    ///         {
    ///             new AliCloud.Gpdb.Inputs.DbInstancePlanPlanConfigArgs
    ///             {
    ///                 Resume = new AliCloud.Gpdb.Inputs.DbInstancePlanPlanConfigResumeArgs
    ///                 {
    ///                     PlanCronTime = "0 0 0 1/1 * ? ",
    ///                 },
    ///                 Pause = new AliCloud.Gpdb.Inputs.DbInstancePlanPlanConfigPauseArgs
    ///                 {
    ///                     PlanCronTime = "0 0 10 1/1 * ? ",
    ///                 },
    ///             },
    ///         },
    ///         DbInstanceId = defaultInstance.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GPDB DB Instance Plan can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:gpdb/dbInstancePlan:DbInstancePlan example &lt;db_instance_id&gt;:&lt;plan_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:gpdb/dbInstancePlan:DbInstancePlan")]
    public partial class DbInstancePlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the GPDB instance.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// The name of the Plan.
        /// </summary>
        [Output("dbInstancePlanName")]
        public Output<string> DbInstancePlanName { get; private set; } = null!;

        /// <summary>
        /// The execution information of the plan. See `plan_config` below.
        /// </summary>
        [Output("planConfigs")]
        public Output<ImmutableArray<Outputs.DbInstancePlanPlanConfig>> PlanConfigs { get; private set; } = null!;

        /// <summary>
        /// The description of the Plan.
        /// </summary>
        [Output("planDesc")]
        public Output<string?> PlanDesc { get; private set; } = null!;

        /// <summary>
        /// The end time of the Plan.
        /// </summary>
        [Output("planEndDate")]
        public Output<string?> PlanEndDate { get; private set; } = null!;

        /// <summary>
        /// The ID of the plan.
        /// </summary>
        [Output("planId")]
        public Output<string> PlanId { get; private set; } = null!;

        /// <summary>
        /// The execution mode of the plan. Valid values: `Postpone`, `Regular`.
        /// </summary>
        [Output("planScheduleType")]
        public Output<string> PlanScheduleType { get; private set; } = null!;

        /// <summary>
        /// The start time of the Plan.
        /// </summary>
        [Output("planStartDate")]
        public Output<string> PlanStartDate { get; private set; } = null!;

        /// <summary>
        /// The type of the Plan. Valid values: `PauseResume`, `Resize`.
        /// </summary>
        [Output("planType")]
        public Output<string> PlanType { get; private set; } = null!;

        /// <summary>
        /// The Status of the Plan. Valid values: `active`, `cancel`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a DbInstancePlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbInstancePlan(string name, DbInstancePlanArgs args, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/dbInstancePlan:DbInstancePlan", name, args ?? new DbInstancePlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbInstancePlan(string name, Input<string> id, DbInstancePlanState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:gpdb/dbInstancePlan:DbInstancePlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbInstancePlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbInstancePlan Get(string name, Input<string> id, DbInstancePlanState? state = null, CustomResourceOptions? options = null)
        {
            return new DbInstancePlan(name, id, state, options);
        }
    }

    public sealed class DbInstancePlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the GPDB instance.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The name of the Plan.
        /// </summary>
        [Input("dbInstancePlanName", required: true)]
        public Input<string> DbInstancePlanName { get; set; } = null!;

        [Input("planConfigs", required: true)]
        private InputList<Inputs.DbInstancePlanPlanConfigArgs>? _planConfigs;

        /// <summary>
        /// The execution information of the plan. See `plan_config` below.
        /// </summary>
        public InputList<Inputs.DbInstancePlanPlanConfigArgs> PlanConfigs
        {
            get => _planConfigs ?? (_planConfigs = new InputList<Inputs.DbInstancePlanPlanConfigArgs>());
            set => _planConfigs = value;
        }

        /// <summary>
        /// The description of the Plan.
        /// </summary>
        [Input("planDesc")]
        public Input<string>? PlanDesc { get; set; }

        /// <summary>
        /// The end time of the Plan.
        /// </summary>
        [Input("planEndDate")]
        public Input<string>? PlanEndDate { get; set; }

        /// <summary>
        /// The execution mode of the plan. Valid values: `Postpone`, `Regular`.
        /// </summary>
        [Input("planScheduleType", required: true)]
        public Input<string> PlanScheduleType { get; set; } = null!;

        /// <summary>
        /// The start time of the Plan.
        /// </summary>
        [Input("planStartDate")]
        public Input<string>? PlanStartDate { get; set; }

        /// <summary>
        /// The type of the Plan. Valid values: `PauseResume`, `Resize`.
        /// </summary>
        [Input("planType", required: true)]
        public Input<string> PlanType { get; set; } = null!;

        /// <summary>
        /// The Status of the Plan. Valid values: `active`, `cancel`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public DbInstancePlanArgs()
        {
        }
        public static new DbInstancePlanArgs Empty => new DbInstancePlanArgs();
    }

    public sealed class DbInstancePlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the GPDB instance.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        /// <summary>
        /// The name of the Plan.
        /// </summary>
        [Input("dbInstancePlanName")]
        public Input<string>? DbInstancePlanName { get; set; }

        [Input("planConfigs")]
        private InputList<Inputs.DbInstancePlanPlanConfigGetArgs>? _planConfigs;

        /// <summary>
        /// The execution information of the plan. See `plan_config` below.
        /// </summary>
        public InputList<Inputs.DbInstancePlanPlanConfigGetArgs> PlanConfigs
        {
            get => _planConfigs ?? (_planConfigs = new InputList<Inputs.DbInstancePlanPlanConfigGetArgs>());
            set => _planConfigs = value;
        }

        /// <summary>
        /// The description of the Plan.
        /// </summary>
        [Input("planDesc")]
        public Input<string>? PlanDesc { get; set; }

        /// <summary>
        /// The end time of the Plan.
        /// </summary>
        [Input("planEndDate")]
        public Input<string>? PlanEndDate { get; set; }

        /// <summary>
        /// The ID of the plan.
        /// </summary>
        [Input("planId")]
        public Input<string>? PlanId { get; set; }

        /// <summary>
        /// The execution mode of the plan. Valid values: `Postpone`, `Regular`.
        /// </summary>
        [Input("planScheduleType")]
        public Input<string>? PlanScheduleType { get; set; }

        /// <summary>
        /// The start time of the Plan.
        /// </summary>
        [Input("planStartDate")]
        public Input<string>? PlanStartDate { get; set; }

        /// <summary>
        /// The type of the Plan. Valid values: `PauseResume`, `Resize`.
        /// </summary>
        [Input("planType")]
        public Input<string>? PlanType { get; set; }

        /// <summary>
        /// The Status of the Plan. Valid values: `active`, `cancel`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public DbInstancePlanState()
        {
        }
        public static new DbInstancePlanState Empty => new DbInstancePlanState();
    }
}
