// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Pai
{
    /// <summary>
    /// Provides a PAI Workspace Workspace resource.
    /// 
    /// For information about PAI Workspace Workspace and how to use it, see [What is Workspace](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateWorkspace).
    /// 
    /// &gt; **NOTE:** Available since v1.233.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform_example";
    ///     var @default = new AliCloud.Pai.WorkspaceWorkspace("default", new()
    ///     {
    ///         Description = name,
    ///         WorkspaceName = name,
    ///         DisplayName = name,
    ///         EnvTypes = new[]
    ///         {
    ///             "prod",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PAI Workspace Workspace can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:pai/workspaceWorkspace:WorkspaceWorkspace example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:pai/workspaceWorkspace:WorkspaceWorkspace")]
    public partial class WorkspaceWorkspace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UTC time when the workspace is created. The time format is ISO8601.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Workspace description, no more than 80 characters.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// It is recommended that you name the workspace based on the business attribute to identify the purpose of the workspace. If not configured, the default value is the workspace name.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Environments contained in the workspace:
        /// - Simple mode only production environment (prod).
        /// - Standard mode includes development environment (dev) and production environment (prod).
        /// </summary>
        [Output("envTypes")]
        public Output<ImmutableArray<string>> EnvTypes { get; private set; } = null!;

        /// <summary>
        /// Workspace state, possible values:
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The workspace name. The format is as follows:
        /// - 3 to 23 characters in length and can contain letters, underscores, or numbers.
        /// - Must start with a large or small letter.
        /// - Unique in the current region.
        /// </summary>
        [Output("workspaceName")]
        public Output<string> WorkspaceName { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceWorkspace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceWorkspace(string name, WorkspaceWorkspaceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:pai/workspaceWorkspace:WorkspaceWorkspace", name, args ?? new WorkspaceWorkspaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceWorkspace(string name, Input<string> id, WorkspaceWorkspaceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:pai/workspaceWorkspace:WorkspaceWorkspace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceWorkspace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceWorkspace Get(string name, Input<string> id, WorkspaceWorkspaceState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceWorkspace(name, id, state, options);
        }
    }

    public sealed class WorkspaceWorkspaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Workspace description, no more than 80 characters.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// It is recommended that you name the workspace based on the business attribute to identify the purpose of the workspace. If not configured, the default value is the workspace name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("envTypes", required: true)]
        private InputList<string>? _envTypes;

        /// <summary>
        /// Environments contained in the workspace:
        /// - Simple mode only production environment (prod).
        /// - Standard mode includes development environment (dev) and production environment (prod).
        /// </summary>
        public InputList<string> EnvTypes
        {
            get => _envTypes ?? (_envTypes = new InputList<string>());
            set => _envTypes = value;
        }

        /// <summary>
        /// The workspace name. The format is as follows:
        /// - 3 to 23 characters in length and can contain letters, underscores, or numbers.
        /// - Must start with a large or small letter.
        /// - Unique in the current region.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public WorkspaceWorkspaceArgs()
        {
        }
        public static new WorkspaceWorkspaceArgs Empty => new WorkspaceWorkspaceArgs();
    }

    public sealed class WorkspaceWorkspaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UTC time when the workspace is created. The time format is ISO8601.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Workspace description, no more than 80 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// It is recommended that you name the workspace based on the business attribute to identify the purpose of the workspace. If not configured, the default value is the workspace name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("envTypes")]
        private InputList<string>? _envTypes;

        /// <summary>
        /// Environments contained in the workspace:
        /// - Simple mode only production environment (prod).
        /// - Standard mode includes development environment (dev) and production environment (prod).
        /// </summary>
        public InputList<string> EnvTypes
        {
            get => _envTypes ?? (_envTypes = new InputList<string>());
            set => _envTypes = value;
        }

        /// <summary>
        /// Workspace state, possible values:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The workspace name. The format is as follows:
        /// - 3 to 23 characters in length and can contain letters, underscores, or numbers.
        /// - Must start with a large or small letter.
        /// - Unique in the current region.
        /// </summary>
        [Input("workspaceName")]
        public Input<string>? WorkspaceName { get; set; }

        public WorkspaceWorkspaceState()
        {
        }
        public static new WorkspaceWorkspaceState Empty => new WorkspaceWorkspaceState();
    }
}
