// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Pai
{
    /// <summary>
    /// Provides a PAI Workspace Code Source resource.
    /// 
    /// For information about PAI Workspace Code Source and how to use it, see [What is Code Source](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateCodeSource).
    /// 
    /// &gt; **NOTE:** Available since v1.236.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform_example";
    ///     var defaultgklBnM = new AliCloud.Pai.WorkspaceWorkspace("defaultgklBnM", new()
    ///     {
    ///         Description = "for-pop-example",
    ///         DisplayName = "CodeSourceTest_1732796227",
    ///         WorkspaceName = name,
    ///         EnvTypes = new[]
    ///         {
    ///             "prod",
    ///         },
    ///     });
    /// 
    ///     var @default = new AliCloud.Pai.WorkspaceCodeSource("default", new()
    ///     {
    ///         MountPath = "/mnt/code/dir_01/",
    ///         CodeRepo = "https://github.com/mattn/go-sqlite3.git",
    ///         Description = "desc-01",
    ///         CodeRepoAccessToken = "token-01",
    ///         Accessibility = "PRIVATE",
    ///         DisplayName = "codesource-example-01",
    ///         WorkspaceId = defaultgklBnM.Id,
    ///         CodeBranch = "master",
    ///         CodeRepoUserName = "user-01",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PAI Workspace Code Source can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:pai/workspaceCodeSource:WorkspaceCodeSource example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:pai/workspaceCodeSource:WorkspaceCodeSource")]
    public partial class WorkspaceCodeSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Visibility of the code configuration, possible values:
        /// - PRIVATE: In this workspace, it is only visible to you and the administrator.
        /// - PUBLIC: In this workspace, it is visible to everyone.
        /// </summary>
        [Output("accessibility")]
        public Output<string> Accessibility { get; private set; } = null!;

        /// <summary>
        /// Code repository branch.
        /// </summary>
        [Output("codeBranch")]
        public Output<string?> CodeBranch { get; private set; } = null!;

        /// <summary>
        /// The code CommitId.
        /// </summary>
        [Output("codeCommit")]
        public Output<string?> CodeCommit { get; private set; } = null!;

        /// <summary>
        /// Code repository address.
        /// </summary>
        [Output("codeRepo")]
        public Output<string> CodeRepo { get; private set; } = null!;

        /// <summary>
        /// The Token used to access the code repository.
        /// </summary>
        [Output("codeRepoAccessToken")]
        public Output<string?> CodeRepoAccessToken { get; private set; } = null!;

        /// <summary>
        /// The user name of the code repository.
        /// </summary>
        [Output("codeRepoUserName")]
        public Output<string?> CodeRepoUserName { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// A detailed description of the code configuration.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Code source configuration name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The local Mount Directory of the code.
        /// </summary>
        [Output("mountPath")]
        public Output<string> MountPath { get; private set; } = null!;

        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceCodeSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceCodeSource(string name, WorkspaceCodeSourceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:pai/workspaceCodeSource:WorkspaceCodeSource", name, args ?? new WorkspaceCodeSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceCodeSource(string name, Input<string> id, WorkspaceCodeSourceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:pai/workspaceCodeSource:WorkspaceCodeSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceCodeSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceCodeSource Get(string name, Input<string> id, WorkspaceCodeSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceCodeSource(name, id, state, options);
        }
    }

    public sealed class WorkspaceCodeSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Visibility of the code configuration, possible values:
        /// - PRIVATE: In this workspace, it is only visible to you and the administrator.
        /// - PUBLIC: In this workspace, it is visible to everyone.
        /// </summary>
        [Input("accessibility", required: true)]
        public Input<string> Accessibility { get; set; } = null!;

        /// <summary>
        /// Code repository branch.
        /// </summary>
        [Input("codeBranch")]
        public Input<string>? CodeBranch { get; set; }

        /// <summary>
        /// The code CommitId.
        /// </summary>
        [Input("codeCommit")]
        public Input<string>? CodeCommit { get; set; }

        /// <summary>
        /// Code repository address.
        /// </summary>
        [Input("codeRepo", required: true)]
        public Input<string> CodeRepo { get; set; } = null!;

        /// <summary>
        /// The Token used to access the code repository.
        /// </summary>
        [Input("codeRepoAccessToken")]
        public Input<string>? CodeRepoAccessToken { get; set; }

        /// <summary>
        /// The user name of the code repository.
        /// </summary>
        [Input("codeRepoUserName")]
        public Input<string>? CodeRepoUserName { get; set; }

        /// <summary>
        /// A detailed description of the code configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Code source configuration name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The local Mount Directory of the code.
        /// </summary>
        [Input("mountPath", required: true)]
        public Input<string> MountPath { get; set; } = null!;

        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceCodeSourceArgs()
        {
        }
        public static new WorkspaceCodeSourceArgs Empty => new WorkspaceCodeSourceArgs();
    }

    public sealed class WorkspaceCodeSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Visibility of the code configuration, possible values:
        /// - PRIVATE: In this workspace, it is only visible to you and the administrator.
        /// - PUBLIC: In this workspace, it is visible to everyone.
        /// </summary>
        [Input("accessibility")]
        public Input<string>? Accessibility { get; set; }

        /// <summary>
        /// Code repository branch.
        /// </summary>
        [Input("codeBranch")]
        public Input<string>? CodeBranch { get; set; }

        /// <summary>
        /// The code CommitId.
        /// </summary>
        [Input("codeCommit")]
        public Input<string>? CodeCommit { get; set; }

        /// <summary>
        /// Code repository address.
        /// </summary>
        [Input("codeRepo")]
        public Input<string>? CodeRepo { get; set; }

        /// <summary>
        /// The Token used to access the code repository.
        /// </summary>
        [Input("codeRepoAccessToken")]
        public Input<string>? CodeRepoAccessToken { get; set; }

        /// <summary>
        /// The user name of the code repository.
        /// </summary>
        [Input("codeRepoUserName")]
        public Input<string>? CodeRepoUserName { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// A detailed description of the code configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Code source configuration name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The local Mount Directory of the code.
        /// </summary>
        [Input("mountPath")]
        public Input<string>? MountPath { get; set; }

        /// <summary>
        /// The ID of the workspace.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceCodeSourceState()
        {
        }
        public static new WorkspaceCodeSourceState Empty => new WorkspaceCodeSourceState();
    }
}
