// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Pai
{
    /// <summary>
    /// Provides a PAI Workspace User Config resource.
    /// 
    /// For information about PAI Workspace User Config and how to use it, see [What is User Config](https://www.alibabacloud.com/help/en/pai/developer-reference/api-aiworkspace-2021-02-04-setuserconfigs).
    /// 
    /// &gt; **NOTE:** Available since v1.250.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform_example";
    ///     var @default = new AliCloud.Pai.WorkspaceUserConfig("default", new()
    ///     {
    ///         CategoryName = "DataPrivacyConfig",
    ///         ConfigKey = "customizePAIAssumedRole",
    ///         ConfigValue = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PAI Workspace User Config can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:pai/workspaceUserConfig:WorkspaceUserConfig example &lt;category_name&gt;:&lt;config_key&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:pai/workspaceUserConfig:WorkspaceUserConfig")]
    public partial class WorkspaceUserConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The category. Valid values: `DataPrivacyConfig`.
        /// </summary>
        [Output("categoryName")]
        public Output<string> CategoryName { get; private set; } = null!;

        /// <summary>
        /// The key of the configuration.
        /// </summary>
        [Output("configKey")]
        public Output<string> ConfigKey { get; private set; } = null!;

        /// <summary>
        /// The value of the configuration.
        /// </summary>
        [Output("configValue")]
        public Output<string> ConfigValue { get; private set; } = null!;

        /// <summary>
        /// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceUserConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceUserConfig(string name, WorkspaceUserConfigArgs args, CustomResourceOptions? options = null)
            : base("alicloud:pai/workspaceUserConfig:WorkspaceUserConfig", name, args ?? new WorkspaceUserConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceUserConfig(string name, Input<string> id, WorkspaceUserConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:pai/workspaceUserConfig:WorkspaceUserConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceUserConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceUserConfig Get(string name, Input<string> id, WorkspaceUserConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceUserConfig(name, id, state, options);
        }
    }

    public sealed class WorkspaceUserConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The category. Valid values: `DataPrivacyConfig`.
        /// </summary>
        [Input("categoryName", required: true)]
        public Input<string> CategoryName { get; set; } = null!;

        /// <summary>
        /// The key of the configuration.
        /// </summary>
        [Input("configKey", required: true)]
        public Input<string> ConfigKey { get; set; } = null!;

        /// <summary>
        /// The value of the configuration.
        /// </summary>
        [Input("configValue", required: true)]
        public Input<string> ConfigValue { get; set; } = null!;

        /// <summary>
        /// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public WorkspaceUserConfigArgs()
        {
        }
        public static new WorkspaceUserConfigArgs Empty => new WorkspaceUserConfigArgs();
    }

    public sealed class WorkspaceUserConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The category. Valid values: `DataPrivacyConfig`.
        /// </summary>
        [Input("categoryName")]
        public Input<string>? CategoryName { get; set; }

        /// <summary>
        /// The key of the configuration.
        /// </summary>
        [Input("configKey")]
        public Input<string>? ConfigKey { get; set; }

        /// <summary>
        /// The value of the configuration.
        /// </summary>
        [Input("configValue")]
        public Input<string>? ConfigValue { get; set; }

        /// <summary>
        /// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public WorkspaceUserConfigState()
        {
        }
        public static new WorkspaceUserConfigState Empty => new WorkspaceUserConfigState();
    }
}
