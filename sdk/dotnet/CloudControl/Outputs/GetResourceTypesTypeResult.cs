// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudControl.Outputs
{

    [OutputType]
    public sealed class GetResourceTypesTypeResult
    {
        /// <summary>
        /// Create an operation private parameter collection. The attributes are not returned in the resource query operation, but the parameters are required in the creation operation.
        /// </summary>
        public readonly ImmutableArray<string> CreateOnlyProperties;
        /// <summary>
        /// Delete operation private parameter collection. The attribute is not returned in the resource query operation, but the parameter is required in the delete operation.
        /// </summary>
        public readonly ImmutableArray<string> DeleteOnlyProperties;
        /// <summary>
        /// A collection of attributes that can be used as the filter parameter during the list operation.
        /// </summary>
        public readonly ImmutableArray<string> FilterProperties;
        /// <summary>
        /// Query operation private parameter collection. The attribute is not returned in the resource query operation, but the input parameter is required in the query operation.
        /// </summary>
        public readonly ImmutableArray<string> GetOnlyProperties;
        /// <summary>
        /// The collection of properties returned by the query.
        /// </summary>
        public readonly ImmutableArray<string> GetResponseProperties;
        /// <summary>
        /// Supported resource operation information (including RAM permissions).
        /// </summary>
        public readonly Outputs.GetResourceTypesTypeHandlersResult Handlers;
        /// <summary>
        /// The ID of the resource supplied above.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Basic information about the resource type.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourceTypesTypeInfoResult> Infos;
        /// <summary>
        /// Enumerate the operation private parameter collection. The attributes are not returned in the resource query operation, but the parameters that need to be passed in the enumeration operation.
        /// </summary>
        public readonly ImmutableArray<string> ListOnlyProperties;
        /// <summary>
        /// Enumerates the returned property collection.
        /// </summary>
        public readonly ImmutableArray<string> ListResponseProperties;
        /// <summary>
        /// Resource ID
        /// </summary>
        public readonly string PrimaryIdentifier;
        /// <summary>
        /// Product Code.
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Resource attribute definition, where key is the attribute name and value is the attribute details.
        /// </summary>
        public readonly string Properties;
        /// <summary>
        /// A collection of public attributes, which are the basic attributes of the resource. Non-Operation private parameters.
        /// </summary>
        public readonly ImmutableArray<string> PublicProperties;
        /// <summary>
        /// A set of read-only parameters. It is returned only in the list or get Operation. It is not used as an input parameter during creation and change.
        /// </summary>
        public readonly ImmutableArray<string> ReadOnlyProperties;
        /// <summary>
        /// Resource creation required parameter collection.
        /// </summary>
        public readonly ImmutableArray<string> Requireds;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// A collection of sensitive attributes, such as passwords.
        /// </summary>
        public readonly ImmutableArray<string> SensitiveInfoProperties;
        /// <summary>
        /// Update operation private parameter collection. The attributes are not returned in the resource query operation, but the parameters are required in the update operation.
        /// </summary>
        public readonly ImmutableArray<string> UpdateOnlyProperties;
        /// <summary>
        /// A collection of properties that can be modified.
        /// </summary>
        public readonly ImmutableArray<string> UpdateTypeProperties;

        [OutputConstructor]
        private GetResourceTypesTypeResult(
            ImmutableArray<string> createOnlyProperties,

            ImmutableArray<string> deleteOnlyProperties,

            ImmutableArray<string> filterProperties,

            ImmutableArray<string> getOnlyProperties,

            ImmutableArray<string> getResponseProperties,

            Outputs.GetResourceTypesTypeHandlersResult handlers,

            string id,

            ImmutableArray<Outputs.GetResourceTypesTypeInfoResult> infos,

            ImmutableArray<string> listOnlyProperties,

            ImmutableArray<string> listResponseProperties,

            string primaryIdentifier,

            string product,

            string properties,

            ImmutableArray<string> publicProperties,

            ImmutableArray<string> readOnlyProperties,

            ImmutableArray<string> requireds,

            string resourceType,

            ImmutableArray<string> sensitiveInfoProperties,

            ImmutableArray<string> updateOnlyProperties,

            ImmutableArray<string> updateTypeProperties)
        {
            CreateOnlyProperties = createOnlyProperties;
            DeleteOnlyProperties = deleteOnlyProperties;
            FilterProperties = filterProperties;
            GetOnlyProperties = getOnlyProperties;
            GetResponseProperties = getResponseProperties;
            Handlers = handlers;
            Id = id;
            Infos = infos;
            ListOnlyProperties = listOnlyProperties;
            ListResponseProperties = listResponseProperties;
            PrimaryIdentifier = primaryIdentifier;
            Product = product;
            Properties = properties;
            PublicProperties = publicProperties;
            ReadOnlyProperties = readOnlyProperties;
            Requireds = requireds;
            ResourceType = resourceType;
            SensitiveInfoProperties = sensitiveInfoProperties;
            UpdateOnlyProperties = updateOnlyProperties;
            UpdateTypeProperties = updateTypeProperties;
        }
    }
}
