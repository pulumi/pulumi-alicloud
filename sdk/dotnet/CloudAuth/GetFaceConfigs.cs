// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudAuth
{
    public static class GetFaceConfigs
    {
        /// <summary>
        /// This data source provides the Cloudauth Face Configs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.137.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultFaceConfig = new AliCloud.CloudAuth.FaceConfig("defaultFaceConfig", new AliCloud.CloudAuth.FaceConfigArgs
        ///         {
        ///             BizName = "example-value",
        ///             BizType = "example-value",
        ///         });
        ///         var defaultFaceConfigs = AliCloud.CloudAuth.GetFaceConfigs.Invoke(new AliCloud.CloudAuth.GetFaceConfigsInvokeArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 defaultFaceConfig.Id,
        ///             },
        ///             NameRegex = defaultFaceConfig.BizName,
        ///         });
        ///         this.FaceConfig = defaultFaceConfigs.Apply(defaultFaceConfigs =&gt; defaultFaceConfigs.Configs?[0]);
        ///     }
        /// 
        ///     [Output("faceConfig")]
        ///     public Output&lt;string&gt; FaceConfig { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFaceConfigsResult> InvokeAsync(GetFaceConfigsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFaceConfigsResult>("alicloud:cloudauth/getFaceConfigs:getFaceConfigs", args ?? new GetFaceConfigsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Cloudauth Face Configs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.137.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultFaceConfig = new AliCloud.CloudAuth.FaceConfig("defaultFaceConfig", new AliCloud.CloudAuth.FaceConfigArgs
        ///         {
        ///             BizName = "example-value",
        ///             BizType = "example-value",
        ///         });
        ///         var defaultFaceConfigs = AliCloud.CloudAuth.GetFaceConfigs.Invoke(new AliCloud.CloudAuth.GetFaceConfigsInvokeArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 defaultFaceConfig.Id,
        ///             },
        ///             NameRegex = defaultFaceConfig.BizName,
        ///         });
        ///         this.FaceConfig = defaultFaceConfigs.Apply(defaultFaceConfigs =&gt; defaultFaceConfigs.Configs?[0]);
        ///     }
        /// 
        ///     [Output("faceConfig")]
        ///     public Output&lt;string&gt; FaceConfig { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFaceConfigsResult> Invoke(GetFaceConfigsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFaceConfigsResult>("alicloud:cloudauth/getFaceConfigs:getFaceConfigs", args ?? new GetFaceConfigsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFaceConfigsArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Face Config IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by biz_name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetFaceConfigsArgs()
        {
        }
    }

    public sealed class GetFaceConfigsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Face Config IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by biz_name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetFaceConfigsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFaceConfigsResult
    {
        public readonly ImmutableArray<Outputs.GetFaceConfigsConfigResult> Configs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetFaceConfigsResult(
            ImmutableArray<Outputs.GetFaceConfigsConfigResult> configs,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile)
        {
            Configs = configs;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
        }
    }
}
