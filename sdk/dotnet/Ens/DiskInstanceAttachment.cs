// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ens
{
    /// <summary>
    /// Provides a ENS Disk Instance Attachment resource. Disk instance mount.
    /// 
    /// For information about ENS Disk Instance Attachment and how to use it, see [What is Disk Instance Attachment](https://www.alibabacloud.com/help/en/).
    /// 
    /// &gt; **NOTE:** Available since v1.216.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultDisk = new AliCloud.Ens.Disk("defaultDisk", new()
    ///     {
    ///         Size = 20,
    ///         EnsRegionId = "cn-chenzhou-telecom_unicom_cmcc",
    ///         PaymentType = "PayAsYouGo",
    ///         Category = "cloud_efficiency",
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Ens.Instance("defaultInstance", new()
    ///     {
    ///         SystemDisk = new AliCloud.Ens.Inputs.InstanceSystemDiskArgs
    ///         {
    ///             Size = 20,
    ///         },
    ///         ImageId = "centos_6_08_64_20G_alibase_20171208",
    ///         PaymentType = "Subscription",
    ///         InstanceType = "ens.sn1.stiny",
    ///         Password = "12345678ABCabc",
    ///         Amount = 1,
    ///         InternetMaxBandwidthOut = 10,
    ///         UniqueSuffix = true,
    ///         PublicIpIdentification = true,
    ///         EnsRegionId = "cn-chenzhou-telecom_unicom_cmcc",
    ///         ScheduleAreaLevel = "Region",
    ///         PeriodUnit = "Month",
    ///         Period = 1,
    ///     });
    /// 
    ///     var defaultDiskInstanceAttachment = new AliCloud.Ens.DiskInstanceAttachment("defaultDiskInstanceAttachment", new()
    ///     {
    ///         InstanceId = defaultInstance.Id,
    ///         DeleteWithInstance = "false",
    ///         DiskId = defaultDisk.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ENS Disk Instance Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ens/diskInstanceAttachment:DiskInstanceAttachment example &lt;disk_id&gt;:&lt;instance_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ens/diskInstanceAttachment:DiskInstanceAttachment")]
    public partial class DiskInstanceAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the cloud disk to be mounted is released with the instance  Value: true: When the instance is released, the cloud disk is released together with the instance. false: When the instance is released, the cloud disk is retained and is not released together with the instance. Empty means false by default.
        /// </summary>
        [Output("deleteWithInstance")]
        public Output<string?> DeleteWithInstance { get; private set; } = null!;

        /// <summary>
        /// The ID of the cloud disk to be mounted. The Cloud Disk (DiskId) and the instance (InstanceId) must be on the same node.
        /// </summary>
        [Output("diskId")]
        public Output<string> DiskId { get; private set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;


        /// <summary>
        /// Create a DiskInstanceAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiskInstanceAttachment(string name, DiskInstanceAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ens/diskInstanceAttachment:DiskInstanceAttachment", name, args ?? new DiskInstanceAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiskInstanceAttachment(string name, Input<string> id, DiskInstanceAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ens/diskInstanceAttachment:DiskInstanceAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiskInstanceAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiskInstanceAttachment Get(string name, Input<string> id, DiskInstanceAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new DiskInstanceAttachment(name, id, state, options);
        }
    }

    public sealed class DiskInstanceAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the cloud disk to be mounted is released with the instance  Value: true: When the instance is released, the cloud disk is released together with the instance. false: When the instance is released, the cloud disk is retained and is not released together with the instance. Empty means false by default.
        /// </summary>
        [Input("deleteWithInstance")]
        public Input<string>? DeleteWithInstance { get; set; }

        /// <summary>
        /// The ID of the cloud disk to be mounted. The Cloud Disk (DiskId) and the instance (InstanceId) must be on the same node.
        /// </summary>
        [Input("diskId", required: true)]
        public Input<string> DiskId { get; set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public DiskInstanceAttachmentArgs()
        {
        }
        public static new DiskInstanceAttachmentArgs Empty => new DiskInstanceAttachmentArgs();
    }

    public sealed class DiskInstanceAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the cloud disk to be mounted is released with the instance  Value: true: When the instance is released, the cloud disk is released together with the instance. false: When the instance is released, the cloud disk is retained and is not released together with the instance. Empty means false by default.
        /// </summary>
        [Input("deleteWithInstance")]
        public Input<string>? DeleteWithInstance { get; set; }

        /// <summary>
        /// The ID of the cloud disk to be mounted. The Cloud Disk (DiskId) and the instance (InstanceId) must be on the same node.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        public DiskInstanceAttachmentState()
        {
        }
        public static new DiskInstanceAttachmentState Empty => new DiskInstanceAttachmentState();
    }
}
