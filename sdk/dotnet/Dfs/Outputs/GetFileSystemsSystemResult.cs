// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dfs.Outputs
{

    [OutputType]
    public sealed class GetFileSystemsSystemResult
    {
        /// <summary>
        /// The creation time of the File system.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of the File system.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the File System.
        /// </summary>
        public readonly string FileSystemId;
        /// <summary>
        /// The name of the File system.
        /// </summary>
        public readonly string FileSystemName;
        /// <summary>
        /// The ID of the File System.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of Mount points.
        /// </summary>
        public readonly int MountPointCount;
        /// <summary>
        /// The number of directories.
        /// </summary>
        public readonly int NumberOfDirectories;
        /// <summary>
        /// The number of files.
        /// </summary>
        public readonly int NumberOfFiles;
        /// <summary>
        /// The protocol type. Valid values: `HDFS`.
        /// </summary>
        public readonly string ProtocolType;
        /// <summary>
        /// The preset throughput of the File system. Valid values: `1` to `1024`, Unit: MB/s.
        /// </summary>
        public readonly int ProvisionedThroughputInMiBps;
        /// <summary>
        /// The capacity budget of the File system.
        /// </summary>
        public readonly int SpaceCapacity;
        /// <summary>
        /// Storage package Id.
        /// </summary>
        public readonly string StoragePackageId;
        /// <summary>
        /// The storage specifications of the File system. Valid values: `PERFORMANCE`, `STANDARD`.
        /// </summary>
        public readonly string StorageType;
        /// <summary>
        /// The throughput mode of the File system. Valid values: `Provisioned`, `Standard`.
        /// </summary>
        public readonly string ThroughputMode;
        /// <summary>
        /// The used space of the File system.
        /// </summary>
        public readonly double UsedSpaceSize;
        /// <summary>
        /// The zone ID of the File system.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetFileSystemsSystemResult(
            string createTime,

            string description,

            string fileSystemId,

            string fileSystemName,

            string id,

            int mountPointCount,

            int numberOfDirectories,

            int numberOfFiles,

            string protocolType,

            int provisionedThroughputInMiBps,

            int spaceCapacity,

            string storagePackageId,

            string storageType,

            string throughputMode,

            double usedSpaceSize,

            string zoneId)
        {
            CreateTime = createTime;
            Description = description;
            FileSystemId = fileSystemId;
            FileSystemName = fileSystemName;
            Id = id;
            MountPointCount = mountPointCount;
            NumberOfDirectories = numberOfDirectories;
            NumberOfFiles = numberOfFiles;
            ProtocolType = protocolType;
            ProvisionedThroughputInMiBps = provisionedThroughputInMiBps;
            SpaceCapacity = spaceCapacity;
            StoragePackageId = storagePackageId;
            StorageType = storageType;
            ThroughputMode = throughputMode;
            UsedSpaceSize = usedSpaceSize;
            ZoneId = zoneId;
        }
    }
}
