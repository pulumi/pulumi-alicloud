// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dms.Outputs
{

    [OutputType]
    public sealed class GetEnterpriseDatabasesDatabaseResult
    {
        /// <summary>
        /// The name of the Database Directory.&gt; PG Series databases will display the database name.
        /// </summary>
        public readonly string CatalogName;
        /// <summary>
        /// The ID of the physical library.
        /// </summary>
        public readonly string DatabaseId;
        /// <summary>
        /// Database type.
        /// </summary>
        public readonly string DbType;
        /// <summary>
        /// The DBA user ID of the target database.
        /// </summary>
        public readonly string DbaId;
        /// <summary>
        /// The DBA nickname of the target Library.
        /// </summary>
        public readonly string DbaName;
        /// <summary>
        /// Database encoding.
        /// </summary>
        public readonly string Encoding;
        /// <summary>
        /// The environment type of the database.
        /// </summary>
        public readonly string EnvType;
        /// <summary>
        /// The database connection address.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The Database ID, same value as `DatabaseId`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The instance ID of the target database.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Library Owner User ID list.
        /// </summary>
        public readonly ImmutableArray<string> OwnerIdLists;
        /// <summary>
        /// Library Owner nickname list.
        /// </summary>
        public readonly ImmutableArray<string> OwnerNameLists;
        /// <summary>
        /// The connection port of the database.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The name of the database.&gt; PG Series databases will display schema names.
        /// </summary>
        public readonly string SchemaName;
        /// <summary>
        /// Library search name.
        /// </summary>
        public readonly string SearchName;
        /// <summary>
        /// Database SID.&gt; only Oracle Database Display.
        /// </summary>
        public readonly string Sid;
        /// <summary>
        /// Library status, value description:-**NORMAL**: NORMAL-**DISABLE**: Disabled-**OFFLINE**: OFFLINE-**NOT_EXIST**: does not exist
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetEnterpriseDatabasesDatabaseResult(
            string catalogName,

            string databaseId,

            string dbType,

            string dbaId,

            string dbaName,

            string encoding,

            string envType,

            string host,

            string id,

            string instanceId,

            ImmutableArray<string> ownerIdLists,

            ImmutableArray<string> ownerNameLists,

            int port,

            string schemaName,

            string searchName,

            string sid,

            string state)
        {
            CatalogName = catalogName;
            DatabaseId = databaseId;
            DbType = dbType;
            DbaId = dbaId;
            DbaName = dbaName;
            Encoding = encoding;
            EnvType = envType;
            Host = host;
            Id = id;
            InstanceId = instanceId;
            OwnerIdLists = ownerIdLists;
            OwnerNameLists = ownerNameLists;
            Port = port;
            SchemaName = schemaName;
            SearchName = searchName;
            Sid = sid;
            State = state;
        }
    }
}
