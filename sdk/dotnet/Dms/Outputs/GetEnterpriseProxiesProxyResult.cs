// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dms.Outputs
{

    [OutputType]
    public sealed class GetEnterpriseProxiesProxyResult
    {
        /// <summary>
        /// The ID of the user who enabled the secure access proxy feature.
        /// </summary>
        public readonly string CreatorId;
        /// <summary>
        /// The nickname of the user who enabled the secure access proxy feature.
        /// </summary>
        public readonly string CreatorName;
        /// <summary>
        /// The port that was used by HTTPS clients to connect to the database instance.
        /// </summary>
        public readonly int HttpsPort;
        /// <summary>
        /// The ID of the Proxy.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the database instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Indicates whether the internal endpoint is enabled. Default value: true.
        /// </summary>
        public readonly bool PrivateEnable;
        /// <summary>
        /// The internal endpoint.
        /// </summary>
        public readonly string PrivateHost;
        /// <summary>
        /// Database protocol connection port number.
        /// </summary>
        public readonly int ProtocolPort;
        /// <summary>
        /// Database protocol type, for example, MYSQL.
        /// </summary>
        public readonly string ProtocolType;
        /// <summary>
        /// The ID of the secure access proxy.
        /// </summary>
        public readonly string ProxyId;
        /// <summary>
        /// Indicates whether the public endpoint is enabled.
        /// </summary>
        public readonly bool PublicEnable;
        /// <summary>
        /// The public endpoint. A public endpoint is returned no matter whether the public endpoint is enabled or disabled. **Note:** When the public network address is in the **true** state, the returned public network address is a valid address with DNS resolution capability. When the public address is in the **false** state, the returned Public address is an invalid address without DNS resolution.
        /// </summary>
        public readonly string PublicHost;

        [OutputConstructor]
        private GetEnterpriseProxiesProxyResult(
            string creatorId,

            string creatorName,

            int httpsPort,

            string id,

            string instanceId,

            bool privateEnable,

            string privateHost,

            int protocolPort,

            string protocolType,

            string proxyId,

            bool publicEnable,

            string publicHost)
        {
            CreatorId = creatorId;
            CreatorName = creatorName;
            HttpsPort = httpsPort;
            Id = id;
            InstanceId = instanceId;
            PrivateEnable = privateEnable;
            PrivateHost = privateHost;
            ProtocolPort = protocolPort;
            ProtocolType = protocolType;
            ProxyId = proxyId;
            PublicEnable = publicEnable;
            PublicHost = publicHost;
        }
    }
}
