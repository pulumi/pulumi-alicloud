// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dms.Outputs
{

    [OutputType]
    public sealed class GetEnterpriseLogicDatabasesDatabaseResult
    {
        /// <summary>
        /// Logical Library alias.
        /// </summary>
        public readonly string Alias;
        /// <summary>
        /// Sub-Database ID.
        /// </summary>
        public readonly ImmutableArray<string> DatabaseIds;
        /// <summary>
        /// Database type.
        /// </summary>
        public readonly string DbType;
        /// <summary>
        /// Environment type, return value is as follows:-product: production environment-dev: development environment-pre: Advance Environment-test: test environment-sit:SIT environment-uat:UAT environment-pet: Pressure measurement environment-stag:STAG environment
        /// </summary>
        public readonly string EnvType;
        /// <summary>
        /// Logic Database ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether it is a logical Library, the return value is true.
        /// </summary>
        public readonly bool Logic;
        /// <summary>
        /// The ID of the logical Library.
        /// </summary>
        public readonly string LogicDatabaseId;
        /// <summary>
        /// The user ID list of the logical library Owner.
        /// </summary>
        public readonly ImmutableArray<string> OwnerIdLists;
        /// <summary>
        /// The nickname list of the logical library Owner.
        /// </summary>
        public readonly ImmutableArray<string> OwnerNameLists;
        /// <summary>
        /// Logical Library name.
        /// </summary>
        public readonly string SchemaName;
        /// <summary>
        /// Logical library search name.
        /// </summary>
        public readonly string SearchName;

        [OutputConstructor]
        private GetEnterpriseLogicDatabasesDatabaseResult(
            string alias,

            ImmutableArray<string> databaseIds,

            string dbType,

            string envType,

            string id,

            bool logic,

            string logicDatabaseId,

            ImmutableArray<string> ownerIdLists,

            ImmutableArray<string> ownerNameLists,

            string schemaName,

            string searchName)
        {
            Alias = alias;
            DatabaseIds = databaseIds;
            DbType = dbType;
            EnvType = envType;
            Id = id;
            Logic = logic;
            LogicDatabaseId = logicDatabaseId;
            OwnerIdLists = ownerIdLists;
            OwnerNameLists = ownerNameLists;
            SchemaName = schemaName;
            SearchName = searchName;
        }
    }
}
