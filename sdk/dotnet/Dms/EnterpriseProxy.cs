// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dms
{
    /// <summary>
    /// Provides a DMS Enterprise Proxy resource.
    /// 
    /// For information about DMS Enterprise Proxy and how to use it, see [What is Proxy](https://next.api.alibabacloud.com/document/dms-enterprise/2018-11-01/CreateProxy).
    /// 
    /// &gt; **NOTE:** Available since v1.188.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var current = AliCloud.GetAccount.Invoke();
    /// 
    ///     var defaultRegions = AliCloud.GetRegions.Invoke(new()
    ///     {
    ///         Current = true,
    ///     });
    /// 
    ///     var defaultUserTenants = AliCloud.Dms.GetUserTenants.Invoke(new()
    ///     {
    ///         Status = "ACTIVE",
    ///     });
    /// 
    ///     var defaultZones = AliCloud.Rds.GetZones.Invoke(new()
    ///     {
    ///         Engine = "MySQL",
    ///         EngineVersion = "8.0",
    ///         InstanceChargeType = "PostPaid",
    ///         Category = "HighAvailability",
    ///         DbInstanceStorageType = "cloud_essd",
    ///     });
    /// 
    ///     var defaultInstanceClasses = AliCloud.Rds.GetInstanceClasses.Invoke(new()
    ///     {
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         Engine = "MySQL",
    ///         EngineVersion = "8.0",
    ///         Category = "HighAvailability",
    ///         DbInstanceStorageType = "cloud_essd",
    ///         InstanceChargeType = "PostPaid",
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("defaultNetwork", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "10.4.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("defaultSwitch", new()
    ///     {
    ///         VswitchName = name,
    ///         CidrBlock = "10.4.0.0/24",
    ///         VpcId = defaultNetwork.Id,
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Rds.Instance("defaultInstance", new()
    ///     {
    ///         Engine = "MySQL",
    ///         EngineVersion = "8.0",
    ///         DbInstanceStorageType = "cloud_essd",
    ///         InstanceType = defaultInstanceClasses.Apply(getInstanceClassesResult =&gt; getInstanceClassesResult.InstanceClasses[0]?.InstanceClass),
    ///         InstanceStorage = defaultInstanceClasses.Apply(getInstanceClassesResult =&gt; getInstanceClassesResult.InstanceClasses[0]?.StorageRange?.Min),
    ///         VswitchId = defaultSwitch.Id,
    ///         InstanceName = name,
    ///         SecurityIps = new[]
    ///         {
    ///             "100.104.5.0/24",
    ///             "192.168.0.6",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Created", "TF" },
    ///             { "For", "example" },
    ///         },
    ///     });
    /// 
    ///     var defaultAccount = new AliCloud.Rds.Account("defaultAccount", new()
    ///     {
    ///         DbInstanceId = defaultInstance.Id,
    ///         AccountName = "tfexamplename",
    ///         AccountPassword = "Example12345",
    ///         AccountType = "Normal",
    ///     });
    /// 
    ///     var defaultEnterpriseInstance = new AliCloud.Dms.EnterpriseInstance("defaultEnterpriseInstance", new()
    ///     {
    ///         Tid = defaultUserTenants.Apply(getUserTenantsResult =&gt; getUserTenantsResult.Ids[0]),
    ///         InstanceType = "MySQL",
    ///         InstanceSource = "RDS",
    ///         NetworkType = "VPC",
    ///         EnvType = "dev",
    ///         Host = defaultInstance.ConnectionString,
    ///         Port = 3306,
    ///         DatabaseUser = defaultAccount.AccountName,
    ///         DatabasePassword = defaultAccount.AccountPassword,
    ///         InstanceName = name,
    ///         DbaUid = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///         SafeRule = "自由操作",
    ///         QueryTimeout = 60,
    ///         ExportTimeout = 600,
    ///         EcsRegion = defaultRegions.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///     });
    /// 
    ///     var defaultEnterpriseProxy = new AliCloud.Dms.EnterpriseProxy("defaultEnterpriseProxy", new()
    ///     {
    ///         InstanceId = defaultEnterpriseInstance.InstanceId,
    ///         Password = "Example12345",
    ///         Username = "tfexamplename",
    ///         Tid = defaultUserTenants.Apply(getUserTenantsResult =&gt; getUserTenantsResult.Ids[0]),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DMS Enterprise Proxy can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:dms/enterpriseProxy:EnterpriseProxy example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:dms/enterpriseProxy:EnterpriseProxy")]
    public partial class EnterpriseProxy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the database instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The password of the database account.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The ID of the tenant.
        /// </summary>
        [Output("tid")]
        public Output<string?> Tid { get; private set; } = null!;

        /// <summary>
        /// The username of the database account.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a EnterpriseProxy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnterpriseProxy(string name, EnterpriseProxyArgs args, CustomResourceOptions? options = null)
            : base("alicloud:dms/enterpriseProxy:EnterpriseProxy", name, args ?? new EnterpriseProxyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnterpriseProxy(string name, Input<string> id, EnterpriseProxyState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:dms/enterpriseProxy:EnterpriseProxy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                    "username",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnterpriseProxy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnterpriseProxy Get(string name, Input<string> id, EnterpriseProxyState? state = null, CustomResourceOptions? options = null)
        {
            return new EnterpriseProxy(name, id, state, options);
        }
    }

    public sealed class EnterpriseProxyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the database instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password of the database account.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ID of the tenant.
        /// </summary>
        [Input("tid")]
        public Input<string>? Tid { get; set; }

        [Input("username", required: true)]
        private Input<string>? _username;

        /// <summary>
        /// The username of the database account.
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public EnterpriseProxyArgs()
        {
        }
        public static new EnterpriseProxyArgs Empty => new EnterpriseProxyArgs();
    }

    public sealed class EnterpriseProxyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the database instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password of the database account.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ID of the tenant.
        /// </summary>
        [Input("tid")]
        public Input<string>? Tid { get; set; }

        [Input("username")]
        private Input<string>? _username;

        /// <summary>
        /// The username of the database account.
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public EnterpriseProxyState()
        {
        }
        public static new EnterpriseProxyState Empty => new EnterpriseProxyState();
    }
}
