// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cddc
{
    /// <summary>
    /// ## Import
    /// 
    /// CDDC Dedicated Propre Host can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost example &lt;dedicated_host_group_id&gt;:&lt;ecs_instance_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost")]
    public partial class DedicatedPropreHost : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to pay automatically when the host is created.
        /// </summary>
        [Output("autoPay")]
        public Output<bool?> AutoPay { get; private set; } = null!;

        /// <summary>
        /// Whether to enable automatic renewal. Valid values:
        /// - **true**: On
        /// - **false** (default): Off
        /// </summary>
        [Output("autoRenew")]
        public Output<string?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// You have a dedicated cluster ID.
        /// </summary>
        [Output("dedicatedHostGroupId")]
        public Output<string> DedicatedHostGroupId { get; private set; } = null!;

        /// <summary>
        /// ECS specifications. See `ecs_class_list` below.
        /// </summary>
        [Output("ecsClassLists")]
        public Output<ImmutableArray<Outputs.DedicatedPropreHostEcsClassList>> EcsClassLists { get; private set; } = null!;

        /// <summary>
        /// The ID of the cloud server deployment set.
        /// </summary>
        [Output("ecsDeploymentSetId")]
        public Output<string?> EcsDeploymentSetId { get; private set; } = null!;

        /// <summary>
        /// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
        /// </summary>
        [Output("ecsHostName")]
        public Output<string?> EcsHostName { get; private set; } = null!;

        /// <summary>
        /// ECS instance ID.
        /// </summary>
        [Output("ecsInstanceId")]
        public Output<string> EcsInstanceId { get; private set; } = null!;

        /// <summary>
        /// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
        /// </summary>
        [Output("ecsInstanceName")]
        public Output<string?> EcsInstanceName { get; private set; } = null!;

        /// <summary>
        /// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
        /// - **true**: added.
        /// - **false** (default): Do not add.
        /// When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix name_suffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
        /// </summary>
        [Output("ecsUniqueSuffix")]
        public Output<string?> EcsUniqueSuffix { get; private set; } = null!;

        /// <summary>
        /// The ID of the zone.
        /// </summary>
        [Output("ecsZoneId")]
        public Output<string> EcsZoneId { get; private set; } = null!;

        /// <summary>
        /// Database type, value:
        /// - **alisql**
        /// - **tair**
        /// - **mssql**
        /// Must be consistent with the parent resource cluster engine attributes.
        /// </summary>
        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        /// <summary>
        /// The ID of the custom image.
        /// &gt; **NOTE:**  If you need to use the default image, you do not need to fill it in.
        /// </summary>
        [Output("imageId")]
        public Output<string?> ImageId { get; private set; } = null!;

        /// <summary>
        /// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
        /// </summary>
        [Output("internetChargeType")]
        public Output<string?> InternetChargeType { get; private set; } = null!;

        /// <summary>
        /// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
        /// </summary>
        [Output("internetMaxBandwidthOut")]
        public Output<int?> InternetMaxBandwidthOut { get; private set; } = null!;

        /// <summary>
        /// The key pair name.
        /// </summary>
        [Output("keyPairName")]
        public Output<string?> KeyPairName { get; private set; } = null!;

        /// <summary>
        /// Host login password, which can be set later. The password must meet the following requirements:
        /// - Length is 8~30 characters.
        /// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
        /// - Special symbol '()\' ~! @#$%^&amp; *-_+ =|{}[]:;',.? /'
        /// &gt; **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
        /// </summary>
        [Output("osPassword")]
        public Output<string?> OsPassword { get; private set; } = null!;

        /// <summary>
        /// Whether to use the default password of the image.
        /// - **false**: (default)Do not use
        /// - **true**: Use
        /// &gt; **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
        /// </summary>
        [Output("passwordInherit")]
        public Output<string?> PasswordInherit { get; private set; } = null!;

        /// <summary>
        /// The Payment type. Currently, only **Subscription** is supported.
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// Duration of purchase.
        /// </summary>
        [Output("period")]
        public Output<string?> Period { get; private set; } = null!;

        /// <summary>
        /// The subscription type. Currently, only **Monthly** (subscription) is supported.
        /// </summary>
        [Output("periodType")]
        public Output<string?> PeriodType { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        /// <summary>
        /// Host tag information.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// User-defined script data. The maximum size of the original data is 16kB.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;

        /// <summary>
        /// Whether custom data is encoded in Base64 format.
        /// </summary>
        [Output("userDataEncoded")]
        public Output<bool?> UserDataEncoded { get; private set; } = null!;

        /// <summary>
        /// VPCID of the VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// The ID of the virtual switch.
        /// </summary>
        [Output("vswitchId")]
        public Output<string> VswitchId { get; private set; } = null!;


        /// <summary>
        /// Create a DedicatedPropreHost resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DedicatedPropreHost(string name, DedicatedPropreHostArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost", name, args ?? new DedicatedPropreHostArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DedicatedPropreHost(string name, Input<string> id, DedicatedPropreHostState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DedicatedPropreHost resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DedicatedPropreHost Get(string name, Input<string> id, DedicatedPropreHostState? state = null, CustomResourceOptions? options = null)
        {
            return new DedicatedPropreHost(name, id, state, options);
        }
    }

    public sealed class DedicatedPropreHostArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to pay automatically when the host is created.
        /// </summary>
        [Input("autoPay")]
        public Input<bool>? AutoPay { get; set; }

        /// <summary>
        /// Whether to enable automatic renewal. Valid values:
        /// - **true**: On
        /// - **false** (default): Off
        /// </summary>
        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        /// <summary>
        /// You have a dedicated cluster ID.
        /// </summary>
        [Input("dedicatedHostGroupId")]
        public Input<string>? DedicatedHostGroupId { get; set; }

        [Input("ecsClassLists", required: true)]
        private InputList<Inputs.DedicatedPropreHostEcsClassListArgs>? _ecsClassLists;

        /// <summary>
        /// ECS specifications. See `ecs_class_list` below.
        /// </summary>
        public InputList<Inputs.DedicatedPropreHostEcsClassListArgs> EcsClassLists
        {
            get => _ecsClassLists ?? (_ecsClassLists = new InputList<Inputs.DedicatedPropreHostEcsClassListArgs>());
            set => _ecsClassLists = value;
        }

        /// <summary>
        /// The ID of the cloud server deployment set.
        /// </summary>
        [Input("ecsDeploymentSetId")]
        public Input<string>? EcsDeploymentSetId { get; set; }

        /// <summary>
        /// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
        /// </summary>
        [Input("ecsHostName")]
        public Input<string>? EcsHostName { get; set; }

        /// <summary>
        /// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
        /// </summary>
        [Input("ecsInstanceName")]
        public Input<string>? EcsInstanceName { get; set; }

        /// <summary>
        /// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
        /// - **true**: added.
        /// - **false** (default): Do not add.
        /// When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix name_suffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
        /// </summary>
        [Input("ecsUniqueSuffix")]
        public Input<string>? EcsUniqueSuffix { get; set; }

        /// <summary>
        /// The ID of the zone.
        /// </summary>
        [Input("ecsZoneId", required: true)]
        public Input<string> EcsZoneId { get; set; } = null!;

        /// <summary>
        /// Database type, value:
        /// - **alisql**
        /// - **tair**
        /// - **mssql**
        /// Must be consistent with the parent resource cluster engine attributes.
        /// </summary>
        [Input("engine", required: true)]
        public Input<string> Engine { get; set; } = null!;

        /// <summary>
        /// The ID of the custom image.
        /// &gt; **NOTE:**  If you need to use the default image, you do not need to fill it in.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// The key pair name.
        /// </summary>
        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        /// <summary>
        /// Host login password, which can be set later. The password must meet the following requirements:
        /// - Length is 8~30 characters.
        /// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
        /// - Special symbol '()\' ~! @#$%^&amp; *-_+ =|{}[]:;',.? /'
        /// &gt; **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
        /// </summary>
        [Input("osPassword")]
        public Input<string>? OsPassword { get; set; }

        /// <summary>
        /// Whether to use the default password of the image.
        /// - **false**: (default)Do not use
        /// - **true**: Use
        /// &gt; **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
        /// </summary>
        [Input("passwordInherit")]
        public Input<string>? PasswordInherit { get; set; }

        /// <summary>
        /// The Payment type. Currently, only **Subscription** is supported.
        /// </summary>
        [Input("paymentType", required: true)]
        public Input<string> PaymentType { get; set; } = null!;

        /// <summary>
        /// Duration of purchase.
        /// </summary>
        [Input("period")]
        public Input<string>? Period { get; set; }

        /// <summary>
        /// The subscription type. Currently, only **Monthly** (subscription) is supported.
        /// </summary>
        [Input("periodType")]
        public Input<string>? PeriodType { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Host tag information.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// User-defined script data. The maximum size of the original data is 16kB.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Whether custom data is encoded in Base64 format.
        /// </summary>
        [Input("userDataEncoded")]
        public Input<bool>? UserDataEncoded { get; set; }

        /// <summary>
        /// VPCID of the VPC.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// The ID of the virtual switch.
        /// </summary>
        [Input("vswitchId", required: true)]
        public Input<string> VswitchId { get; set; } = null!;

        public DedicatedPropreHostArgs()
        {
        }
        public static new DedicatedPropreHostArgs Empty => new DedicatedPropreHostArgs();
    }

    public sealed class DedicatedPropreHostState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to pay automatically when the host is created.
        /// </summary>
        [Input("autoPay")]
        public Input<bool>? AutoPay { get; set; }

        /// <summary>
        /// Whether to enable automatic renewal. Valid values:
        /// - **true**: On
        /// - **false** (default): Off
        /// </summary>
        [Input("autoRenew")]
        public Input<string>? AutoRenew { get; set; }

        /// <summary>
        /// You have a dedicated cluster ID.
        /// </summary>
        [Input("dedicatedHostGroupId")]
        public Input<string>? DedicatedHostGroupId { get; set; }

        [Input("ecsClassLists")]
        private InputList<Inputs.DedicatedPropreHostEcsClassListGetArgs>? _ecsClassLists;

        /// <summary>
        /// ECS specifications. See `ecs_class_list` below.
        /// </summary>
        public InputList<Inputs.DedicatedPropreHostEcsClassListGetArgs> EcsClassLists
        {
            get => _ecsClassLists ?? (_ecsClassLists = new InputList<Inputs.DedicatedPropreHostEcsClassListGetArgs>());
            set => _ecsClassLists = value;
        }

        /// <summary>
        /// The ID of the cloud server deployment set.
        /// </summary>
        [Input("ecsDeploymentSetId")]
        public Input<string>? EcsDeploymentSetId { get; set; }

        /// <summary>
        /// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
        /// </summary>
        [Input("ecsHostName")]
        public Input<string>? EcsHostName { get; set; }

        /// <summary>
        /// ECS instance ID.
        /// </summary>
        [Input("ecsInstanceId")]
        public Input<string>? EcsInstanceId { get; set; }

        /// <summary>
        /// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
        /// </summary>
        [Input("ecsInstanceName")]
        public Input<string>? EcsInstanceName { get; set; }

        /// <summary>
        /// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
        /// - **true**: added.
        /// - **false** (default): Do not add.
        /// When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix name_suffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
        /// </summary>
        [Input("ecsUniqueSuffix")]
        public Input<string>? EcsUniqueSuffix { get; set; }

        /// <summary>
        /// The ID of the zone.
        /// </summary>
        [Input("ecsZoneId")]
        public Input<string>? EcsZoneId { get; set; }

        /// <summary>
        /// Database type, value:
        /// - **alisql**
        /// - **tair**
        /// - **mssql**
        /// Must be consistent with the parent resource cluster engine attributes.
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// The ID of the custom image.
        /// &gt; **NOTE:**  If you need to use the default image, you do not need to fill it in.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// The key pair name.
        /// </summary>
        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        /// <summary>
        /// Host login password, which can be set later. The password must meet the following requirements:
        /// - Length is 8~30 characters.
        /// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
        /// - Special symbol '()\' ~! @#$%^&amp; *-_+ =|{}[]:;',.? /'
        /// &gt; **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
        /// </summary>
        [Input("osPassword")]
        public Input<string>? OsPassword { get; set; }

        /// <summary>
        /// Whether to use the default password of the image.
        /// - **false**: (default)Do not use
        /// - **true**: Use
        /// &gt; **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
        /// </summary>
        [Input("passwordInherit")]
        public Input<string>? PasswordInherit { get; set; }

        /// <summary>
        /// The Payment type. Currently, only **Subscription** is supported.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Duration of purchase.
        /// </summary>
        [Input("period")]
        public Input<string>? Period { get; set; }

        /// <summary>
        /// The subscription type. Currently, only **Monthly** (subscription) is supported.
        /// </summary>
        [Input("periodType")]
        public Input<string>? PeriodType { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Host tag information.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// User-defined script data. The maximum size of the original data is 16kB.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Whether custom data is encoded in Base64 format.
        /// </summary>
        [Input("userDataEncoded")]
        public Input<bool>? UserDataEncoded { get; set; }

        /// <summary>
        /// VPCID of the VPC.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The ID of the virtual switch.
        /// </summary>
        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        public DedicatedPropreHostState()
        {
        }
        public static new DedicatedPropreHostState Empty => new DedicatedPropreHostState();
    }
}
