// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cddc.Outputs
{

    [OutputType]
    public sealed class GetDedicatedHostsHostResult
    {
        /// <summary>
        /// Specifies whether instances can be created on the host. Valid values: `1` or `0`. `1`: Instances can be created on the host. `0`: Instances cannot be created on the host.
        /// </summary>
        public readonly string AllocationStatus;
        /// <summary>
        /// The ID of the bastion host with which the host is associated.
        /// </summary>
        public readonly string BastionInstanceId;
        /// <summary>
        /// The numeric value of the CPU over commit ratio of the dedicated cluster.
        /// </summary>
        public readonly string CpuAllocationRatio;
        /// <summary>
        /// The number of CPU cores used by the host.
        /// </summary>
        public readonly string CpuUsed;
        /// <summary>
        /// The time when the host was created. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The ID of the dedicated cluster in which the host is created.
        /// </summary>
        public readonly string DedicatedHostGroupId;
        /// <summary>
        /// The ID of the host.
        /// </summary>
        public readonly string DedicatedHostId;
        /// <summary>
        /// The disk usage in percentage.
        /// </summary>
        public readonly string DiskAllocationRatio;
        /// <summary>
        /// The Elastic Compute Service (ECS) instance type.
        /// </summary>
        public readonly string EcsClassCode;
        /// <summary>
        /// The time when the host expires. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// The type of the database engine that is used by the host.
        /// </summary>
        public readonly string Engine;
        /// <summary>
        /// The time when the host expires. The time follows the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time is displayed in UTC.
        /// </summary>
        public readonly string ExpiredTime;
        /// <summary>
        /// The instance type of the host.
        /// </summary>
        public readonly string HostClass;
        /// <summary>
        /// The number of CPU cores specified for the host. Unit: `core`.
        /// </summary>
        public readonly string HostCpu;
        /// <summary>
        /// The memory of the host. Unit: `GB`.
        /// </summary>
        public readonly string HostMem;
        /// <summary>
        /// The name of the host.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// The total storage capacity of the host. Unit: `GB`.
        /// </summary>
        public readonly string HostStorage;
        /// <summary>
        /// The storage type of the host.
        /// </summary>
        public readonly string HostType;
        /// <summary>
        /// The ID of the Dedicated Host. The value formats as `&lt;dedicated_host_group_id&gt;:&lt;dedicated_host_id&gt;`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The image type of the host.
        /// </summary>
        public readonly string ImageCategory;
        /// <summary>
        /// The IP address of the host.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// The memory usage in percentage.
        /// </summary>
        public readonly string MemAllocationRatio;
        /// <summary>
        /// The amount of memory used by the host. Unit: `GB`.
        /// </summary>
        public readonly string MemoryUsed;
        /// <summary>
        /// Indicates whether you have the OS permissions on the host. Valid values: `0`: You do not have the OS permissions on the host. `1`: You have the OS permissions on the host.
        /// </summary>
        public readonly string OpenPermission;
        /// <summary>
        /// The state of the host.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The storage usage of the host. Unit: `GB`.
        /// </summary>
        public readonly string StorageUsed;
        /// <summary>
        /// The tag of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The ID of the virtual private cloud (VPC) to which the host is connected.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The ID of the vSwitch.
        /// </summary>
        public readonly string VswitchId;
        /// <summary>
        /// The zone ID of the host.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetDedicatedHostsHostResult(
            string allocationStatus,

            string bastionInstanceId,

            string cpuAllocationRatio,

            string cpuUsed,

            string createTime,

            string dedicatedHostGroupId,

            string dedicatedHostId,

            string diskAllocationRatio,

            string ecsClassCode,

            string endTime,

            string engine,

            string expiredTime,

            string hostClass,

            string hostCpu,

            string hostMem,

            string hostName,

            string hostStorage,

            string hostType,

            string id,

            string imageCategory,

            string ipAddress,

            string memAllocationRatio,

            string memoryUsed,

            string openPermission,

            string status,

            string storageUsed,

            ImmutableDictionary<string, string> tags,

            string vpcId,

            string vswitchId,

            string zoneId)
        {
            AllocationStatus = allocationStatus;
            BastionInstanceId = bastionInstanceId;
            CpuAllocationRatio = cpuAllocationRatio;
            CpuUsed = cpuUsed;
            CreateTime = createTime;
            DedicatedHostGroupId = dedicatedHostGroupId;
            DedicatedHostId = dedicatedHostId;
            DiskAllocationRatio = diskAllocationRatio;
            EcsClassCode = ecsClassCode;
            EndTime = endTime;
            Engine = engine;
            ExpiredTime = expiredTime;
            HostClass = hostClass;
            HostCpu = hostCpu;
            HostMem = hostMem;
            HostName = hostName;
            HostStorage = hostStorage;
            HostType = hostType;
            Id = id;
            ImageCategory = imageCategory;
            IpAddress = ipAddress;
            MemAllocationRatio = memAllocationRatio;
            MemoryUsed = memoryUsed;
            OpenPermission = openPermission;
            Status = status;
            StorageUsed = storageUsed;
            Tags = tags;
            VpcId = vpcId;
            VswitchId = vswitchId;
            ZoneId = zoneId;
        }
    }
}
