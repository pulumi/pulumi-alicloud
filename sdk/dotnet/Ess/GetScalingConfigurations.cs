// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess
{
    public static class GetScalingConfigurations
    {
        /// <summary>
        /// This data source provides available scaling configuration resources. 
        /// 
        /// &gt; **NOTE:** Available since v1.240.0
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var myName = $"{name}-{defaultInteger.Result}";
        /// 
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableDiskCategory = "cloud_efficiency",
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultGetInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
        ///     {
        ///         AvailabilityZone = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///         CpuCoreCount = 2,
        ///         MemorySize = 4,
        ///     });
        /// 
        ///     var defaultGetImages = AliCloud.Ecs.GetImages.Invoke(new()
        ///     {
        ///         NameRegex = "^ubuntu_18.*64",
        ///         MostRecent = true,
        ///         Owners = "system",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = myName,
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///         VswitchName = myName,
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         SecurityGroupName = myName,
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultSecurityGroupRule = new AliCloud.Ecs.SecurityGroupRule("default", new()
        ///     {
        ///         Type = "ingress",
        ///         IpProtocol = "tcp",
        ///         NicType = "intranet",
        ///         Policy = "accept",
        ///         PortRange = "22/22",
        ///         Priority = 1,
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         CidrIp = "172.16.0.0/24",
        ///     });
        /// 
        ///     var defaultScalingGroup = new AliCloud.Ess.ScalingGroup("default", new()
        ///     {
        ///         MinSize = 1,
        ///         MaxSize = 1,
        ///         ScalingGroupName = myName,
        ///         RemovalPolicies = new[]
        ///         {
        ///             "OldestInstance",
        ///             "NewestInstance",
        ///         },
        ///         VswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///     });
        /// 
        ///     var defaultScalingConfiguration = new AliCloud.Ess.ScalingConfiguration("default", new()
        ///     {
        ///         ScalingGroupId = defaultScalingGroup.Id,
        ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
        ///         InstanceType = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         ForceDelete = true,
        ///         Active = true,
        ///         ScalingConfigurationName = "scaling_configuration_name",
        ///     });
        /// 
        ///     var scalingconfigurationsDs = AliCloud.Ess.GetScalingConfigurations.Invoke(new()
        ///     {
        ///         ScalingGroupId = defaultScalingGroup.Id,
        ///         Ids = new[]
        ///         {
        ///             defaultScalingConfiguration.Id,
        ///         },
        ///         NameRegex = "scaling_configuration_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstScalingConfiguration"] = scalingconfigurationsDs.Apply(getScalingConfigurationsResult =&gt; getScalingConfigurationsResult.Configurations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetScalingConfigurationsResult> InvokeAsync(GetScalingConfigurationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScalingConfigurationsResult>("alicloud:ess/getScalingConfigurations:getScalingConfigurations", args ?? new GetScalingConfigurationsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides available scaling configuration resources. 
        /// 
        /// &gt; **NOTE:** Available since v1.240.0
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var myName = $"{name}-{defaultInteger.Result}";
        /// 
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableDiskCategory = "cloud_efficiency",
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultGetInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
        ///     {
        ///         AvailabilityZone = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///         CpuCoreCount = 2,
        ///         MemorySize = 4,
        ///     });
        /// 
        ///     var defaultGetImages = AliCloud.Ecs.GetImages.Invoke(new()
        ///     {
        ///         NameRegex = "^ubuntu_18.*64",
        ///         MostRecent = true,
        ///         Owners = "system",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = myName,
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///         VswitchName = myName,
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         SecurityGroupName = myName,
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultSecurityGroupRule = new AliCloud.Ecs.SecurityGroupRule("default", new()
        ///     {
        ///         Type = "ingress",
        ///         IpProtocol = "tcp",
        ///         NicType = "intranet",
        ///         Policy = "accept",
        ///         PortRange = "22/22",
        ///         Priority = 1,
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         CidrIp = "172.16.0.0/24",
        ///     });
        /// 
        ///     var defaultScalingGroup = new AliCloud.Ess.ScalingGroup("default", new()
        ///     {
        ///         MinSize = 1,
        ///         MaxSize = 1,
        ///         ScalingGroupName = myName,
        ///         RemovalPolicies = new[]
        ///         {
        ///             "OldestInstance",
        ///             "NewestInstance",
        ///         },
        ///         VswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///     });
        /// 
        ///     var defaultScalingConfiguration = new AliCloud.Ess.ScalingConfiguration("default", new()
        ///     {
        ///         ScalingGroupId = defaultScalingGroup.Id,
        ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
        ///         InstanceType = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         ForceDelete = true,
        ///         Active = true,
        ///         ScalingConfigurationName = "scaling_configuration_name",
        ///     });
        /// 
        ///     var scalingconfigurationsDs = AliCloud.Ess.GetScalingConfigurations.Invoke(new()
        ///     {
        ///         ScalingGroupId = defaultScalingGroup.Id,
        ///         Ids = new[]
        ///         {
        ///             defaultScalingConfiguration.Id,
        ///         },
        ///         NameRegex = "scaling_configuration_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstScalingConfiguration"] = scalingconfigurationsDs.Apply(getScalingConfigurationsResult =&gt; getScalingConfigurationsResult.Configurations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetScalingConfigurationsResult> Invoke(GetScalingConfigurationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScalingConfigurationsResult>("alicloud:ess/getScalingConfigurations:getScalingConfigurations", args ?? new GetScalingConfigurationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides available scaling configuration resources. 
        /// 
        /// &gt; **NOTE:** Available since v1.240.0
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var myName = $"{name}-{defaultInteger.Result}";
        /// 
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableDiskCategory = "cloud_efficiency",
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultGetInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
        ///     {
        ///         AvailabilityZone = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///         CpuCoreCount = 2,
        ///         MemorySize = 4,
        ///     });
        /// 
        ///     var defaultGetImages = AliCloud.Ecs.GetImages.Invoke(new()
        ///     {
        ///         NameRegex = "^ubuntu_18.*64",
        ///         MostRecent = true,
        ///         Owners = "system",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = myName,
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///         VswitchName = myName,
        ///     });
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
        ///     {
        ///         SecurityGroupName = myName,
        ///         VpcId = defaultNetwork.Id,
        ///     });
        /// 
        ///     var defaultSecurityGroupRule = new AliCloud.Ecs.SecurityGroupRule("default", new()
        ///     {
        ///         Type = "ingress",
        ///         IpProtocol = "tcp",
        ///         NicType = "intranet",
        ///         Policy = "accept",
        ///         PortRange = "22/22",
        ///         Priority = 1,
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         CidrIp = "172.16.0.0/24",
        ///     });
        /// 
        ///     var defaultScalingGroup = new AliCloud.Ess.ScalingGroup("default", new()
        ///     {
        ///         MinSize = 1,
        ///         MaxSize = 1,
        ///         ScalingGroupName = myName,
        ///         RemovalPolicies = new[]
        ///         {
        ///             "OldestInstance",
        ///             "NewestInstance",
        ///         },
        ///         VswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///     });
        /// 
        ///     var defaultScalingConfiguration = new AliCloud.Ess.ScalingConfiguration("default", new()
        ///     {
        ///         ScalingGroupId = defaultScalingGroup.Id,
        ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
        ///         InstanceType = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         ForceDelete = true,
        ///         Active = true,
        ///         ScalingConfigurationName = "scaling_configuration_name",
        ///     });
        /// 
        ///     var scalingconfigurationsDs = AliCloud.Ess.GetScalingConfigurations.Invoke(new()
        ///     {
        ///         ScalingGroupId = defaultScalingGroup.Id,
        ///         Ids = new[]
        ///         {
        ///             defaultScalingConfiguration.Id,
        ///         },
        ///         NameRegex = "scaling_configuration_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstScalingConfiguration"] = scalingconfigurationsDs.Apply(getScalingConfigurationsResult =&gt; getScalingConfigurationsResult.Configurations[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetScalingConfigurationsResult> Invoke(GetScalingConfigurationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetScalingConfigurationsResult>("alicloud:ess/getScalingConfigurations:getScalingConfigurations", args ?? new GetScalingConfigurationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalingConfigurationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of scaling configuration IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting scaling configurations by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Scaling group id the scaling configurations belong to.
        /// </summary>
        [Input("scalingGroupId")]
        public string? ScalingGroupId { get; set; }

        public GetScalingConfigurationsArgs()
        {
        }
        public static new GetScalingConfigurationsArgs Empty => new GetScalingConfigurationsArgs();
    }

    public sealed class GetScalingConfigurationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of scaling configuration IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting scaling configurations by name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Scaling group id the scaling configurations belong to.
        /// </summary>
        [Input("scalingGroupId")]
        public Input<string>? ScalingGroupId { get; set; }

        public GetScalingConfigurationsInvokeArgs()
        {
        }
        public static new GetScalingConfigurationsInvokeArgs Empty => new GetScalingConfigurationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetScalingConfigurationsResult
    {
        /// <summary>
        /// A list of scaling rules. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingConfigurationsConfigurationResult> Configurations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of scaling configuration ids.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of scaling configuration names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// ID of the scaling group.
        /// </summary>
        public readonly string? ScalingGroupId;

        [OutputConstructor]
        private GetScalingConfigurationsResult(
            ImmutableArray<Outputs.GetScalingConfigurationsConfigurationResult> configurations,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? scalingGroupId)
        {
            Configurations = configurations;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            ScalingGroupId = scalingGroupId;
        }
    }
}
