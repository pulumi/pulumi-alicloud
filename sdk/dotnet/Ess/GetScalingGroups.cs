// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess
{
    public static class GetScalingGroups
    {
        /// <summary>
        /// This data source provides available scaling group resources. 
        /// 
        /// &gt; **NOTE:** Available since v1.39.0
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var myName = $"{name}-{defaultInteger.Result}";
        /// 
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableDiskCategory = "cloud_efficiency",
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = myName,
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///         VswitchName = myName,
        ///     });
        /// 
        ///     var defaultScalingGroup = new AliCloud.Ess.ScalingGroup("default", new()
        ///     {
        ///         MinSize = 1,
        ///         MaxSize = 1,
        ///         ScalingGroupName = myName,
        ///         RemovalPolicies = new[]
        ///         {
        ///             "OldestInstance",
        ///             "NewestInstance",
        ///         },
        ///         VswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///     });
        /// 
        ///     var scalinggroupsDs = AliCloud.Ess.GetScalingGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultScalingGroup.Id,
        ///         },
        ///         NameRegex = myName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstScalingGroup"] = scalinggroupsDs.Apply(getScalingGroupsResult =&gt; getScalingGroupsResult.Groups[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetScalingGroupsResult> InvokeAsync(GetScalingGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScalingGroupsResult>("alicloud:ess/getScalingGroups:getScalingGroups", args ?? new GetScalingGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides available scaling group resources. 
        /// 
        /// &gt; **NOTE:** Available since v1.39.0
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var myName = $"{name}-{defaultInteger.Result}";
        /// 
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableDiskCategory = "cloud_efficiency",
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = myName,
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///         VswitchName = myName,
        ///     });
        /// 
        ///     var defaultScalingGroup = new AliCloud.Ess.ScalingGroup("default", new()
        ///     {
        ///         MinSize = 1,
        ///         MaxSize = 1,
        ///         ScalingGroupName = myName,
        ///         RemovalPolicies = new[]
        ///         {
        ///             "OldestInstance",
        ///             "NewestInstance",
        ///         },
        ///         VswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///     });
        /// 
        ///     var scalinggroupsDs = AliCloud.Ess.GetScalingGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultScalingGroup.Id,
        ///         },
        ///         NameRegex = myName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstScalingGroup"] = scalinggroupsDs.Apply(getScalingGroupsResult =&gt; getScalingGroupsResult.Groups[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetScalingGroupsResult> Invoke(GetScalingGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScalingGroupsResult>("alicloud:ess/getScalingGroups:getScalingGroups", args ?? new GetScalingGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides available scaling group resources. 
        /// 
        /// &gt; **NOTE:** Available since v1.39.0
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var myName = $"{name}-{defaultInteger.Result}";
        /// 
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableDiskCategory = "cloud_efficiency",
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = myName,
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VpcId = defaultNetwork.Id,
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///         VswitchName = myName,
        ///     });
        /// 
        ///     var defaultScalingGroup = new AliCloud.Ess.ScalingGroup("default", new()
        ///     {
        ///         MinSize = 1,
        ///         MaxSize = 1,
        ///         ScalingGroupName = myName,
        ///         RemovalPolicies = new[]
        ///         {
        ///             "OldestInstance",
        ///             "NewestInstance",
        ///         },
        ///         VswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///     });
        /// 
        ///     var scalinggroupsDs = AliCloud.Ess.GetScalingGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultScalingGroup.Id,
        ///         },
        ///         NameRegex = myName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstScalingGroup"] = scalinggroupsDs.Apply(getScalingGroupsResult =&gt; getScalingGroupsResult.Groups[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetScalingGroupsResult> Invoke(GetScalingGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetScalingGroupsResult>("alicloud:ess/getScalingGroups:getScalingGroups", args ?? new GetScalingGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalingGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of scaling group IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting scaling groups by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetScalingGroupsArgs()
        {
        }
        public static new GetScalingGroupsArgs Empty => new GetScalingGroupsArgs();
    }

    public sealed class GetScalingGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of scaling group IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting scaling groups by name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetScalingGroupsInvokeArgs()
        {
        }
        public static new GetScalingGroupsInvokeArgs Empty => new GetScalingGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetScalingGroupsResult
    {
        /// <summary>
        /// A list of scaling groups. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingGroupsGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of scaling group ids.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of scaling group names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetScalingGroupsResult(
            ImmutableArray<Outputs.GetScalingGroupsGroupResult> groups,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile)
        {
            Groups = groups;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
        }
    }
}
