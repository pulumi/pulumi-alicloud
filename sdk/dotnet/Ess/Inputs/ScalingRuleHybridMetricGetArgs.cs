// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess.Inputs
{

    public sealed class ScalingRuleHybridMetricGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("dimensions")]
        private InputList<Inputs.ScalingRuleHybridMetricDimensionGetArgs>? _dimensions;

        /// <summary>
        /// The structure of volumeMounts.
        /// See `dimensions` below for details.
        /// </summary>
        public InputList<Inputs.ScalingRuleHybridMetricDimensionGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<Inputs.ScalingRuleHybridMetricDimensionGetArgs>());
            set => _dimensions = value;
        }

        /// <summary>
        /// The metric expression that consists of multiple Hybrid Cloud Monitoring metrics. It calculates a result used to trigger scaling events. The expression must comply with the Reverse Polish Notation (RPN) specification, and the operators can only be + - Ã— /.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// The reference ID of the metric in the metric expression.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Hybrid Cloud Monitoring metric.
        /// </summary>
        [Input("metricName")]
        public Input<string>? MetricName { get; set; }

        /// <summary>
        /// The statistical method of the metric value. Valid values: Average, Minimum, Maximum.
        /// </summary>
        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        public ScalingRuleHybridMetricGetArgs()
        {
        }
        public static new ScalingRuleHybridMetricGetArgs Empty => new ScalingRuleHybridMetricGetArgs();
    }
}
