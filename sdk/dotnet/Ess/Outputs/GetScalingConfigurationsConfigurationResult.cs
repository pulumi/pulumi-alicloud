// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess.Outputs
{

    [OutputType]
    public sealed class GetScalingConfigurationsConfigurationResult
    {
        /// <summary>
        /// Creation time of the scaling configuration.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Performance mode of the t5 burstable instance.
        /// </summary>
        public readonly string CreditSpecification;
        /// <summary>
        /// Data disks of the scaling configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingConfigurationsConfigurationDataDiskResult> DataDisks;
        /// <summary>
        /// (Optional,Available since v1.143.0) Hostname of an ECS instance.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// ID of the scaling rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Image ID of the scaling configuration.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// (Optional,Available since v1.143.0) InstanceName of an ECS instance.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// (Optional, Available since v1.240.0) intelligent configuration mode. In this mode, you only need to specify the number of vCPUs, memory size, instance family, and maximum price. The system selects an instance type that is provided at the lowest price based on your configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode helps reduce the failures of scale-out activities caused by insufficient inventory of instance types.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingConfigurationsConfigurationInstancePatternInfoResult> InstancePatternInfos;
        /// <summary>
        /// Resource type of an ECS instance.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// Internet charge type of the scaling configuration.
        /// </summary>
        public readonly string InternetChargeType;
        /// <summary>
        /// Internet max bandwidth in of the scaling configuration.
        /// </summary>
        public readonly int InternetMaxBandwidthIn;
        /// <summary>
        /// Internet max bandwidth of the scaling configuration.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// Lifecycle state of the scaling configuration.
        /// </summary>
        public readonly string LifecycleState;
        /// <summary>
        /// Name of the scaling configuration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Scaling group id the scaling configurations belong to.
        /// </summary>
        public readonly string ScalingGroupId;
        /// <summary>
        /// Security group ID of the scaling configuration.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// (Optional, Available since v1.151.0) The maximum price hourly for instance types.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingConfigurationsConfigurationSpotPriceLimitResult> SpotPriceLimits;
        /// <summary>
        /// (Optional, Available since v1.151.0) The spot strategy for a Pay-As-You-Go instance.
        /// </summary>
        public readonly string SpotStrategy;
        /// <summary>
        /// System disk category of the scaling configuration.
        /// </summary>
        public readonly string SystemDiskCategory;
        /// <summary>
        /// The performance level of the ESSD used as the system disk.
        /// </summary>
        public readonly string SystemDiskPerformanceLevel;
        /// <summary>
        /// System disk size of the scaling configuration.
        /// </summary>
        public readonly int SystemDiskSize;

        [OutputConstructor]
        private GetScalingConfigurationsConfigurationResult(
            string creationTime,

            string creditSpecification,

            ImmutableArray<Outputs.GetScalingConfigurationsConfigurationDataDiskResult> dataDisks,

            string hostName,

            string id,

            string imageId,

            string instanceName,

            ImmutableArray<Outputs.GetScalingConfigurationsConfigurationInstancePatternInfoResult> instancePatternInfos,

            string instanceType,

            string internetChargeType,

            int internetMaxBandwidthIn,

            int internetMaxBandwidthOut,

            string lifecycleState,

            string name,

            string scalingGroupId,

            string securityGroupId,

            ImmutableArray<Outputs.GetScalingConfigurationsConfigurationSpotPriceLimitResult> spotPriceLimits,

            string spotStrategy,

            string systemDiskCategory,

            string systemDiskPerformanceLevel,

            int systemDiskSize)
        {
            CreationTime = creationTime;
            CreditSpecification = creditSpecification;
            DataDisks = dataDisks;
            HostName = hostName;
            Id = id;
            ImageId = imageId;
            InstanceName = instanceName;
            InstancePatternInfos = instancePatternInfos;
            InstanceType = instanceType;
            InternetChargeType = internetChargeType;
            InternetMaxBandwidthIn = internetMaxBandwidthIn;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            LifecycleState = lifecycleState;
            Name = name;
            ScalingGroupId = scalingGroupId;
            SecurityGroupId = securityGroupId;
            SpotPriceLimits = spotPriceLimits;
            SpotStrategy = spotStrategy;
            SystemDiskCategory = systemDiskCategory;
            SystemDiskPerformanceLevel = systemDiskPerformanceLevel;
            SystemDiskSize = systemDiskSize;
        }
    }
}
