// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess.Outputs
{

    [OutputType]
    public sealed class GetScheduledTasksTaskResult
    {
        /// <summary>
        /// Description of the scheduled task.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID of the scheduled task id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The time period during which a failed scheduled task is retried.
        /// </summary>
        public readonly int LaunchExpirationTime;
        /// <summary>
        /// The time at which the scheduled task is triggered.
        /// </summary>
        public readonly string LaunchTime;
        public readonly int MaxValue;
        public readonly int MinValue;
        /// <summary>
        /// Name of the scheduled task name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the end time after which the scheduled task is no longer repeated.
        /// </summary>
        public readonly string RecurrenceEndTime;
        /// <summary>
        /// Specifies the recurrence type of the scheduled task.
        /// </summary>
        public readonly string RecurrenceType;
        /// <summary>
        /// Specifies how often a scheduled task recurs.
        /// </summary>
        public readonly string RecurrenceValue;
        /// <summary>
        /// The operation to be performed when a scheduled task is triggered.
        /// </summary>
        public readonly string ScheduledAction;
        public readonly bool TaskEnabled;

        [OutputConstructor]
        private GetScheduledTasksTaskResult(
            string description,

            string id,

            int launchExpirationTime,

            string launchTime,

            int maxValue,

            int minValue,

            string name,

            string recurrenceEndTime,

            string recurrenceType,

            string recurrenceValue,

            string scheduledAction,

            bool taskEnabled)
        {
            Description = description;
            Id = id;
            LaunchExpirationTime = launchExpirationTime;
            LaunchTime = launchTime;
            MaxValue = maxValue;
            MinValue = minValue;
            Name = name;
            RecurrenceEndTime = recurrenceEndTime;
            RecurrenceType = recurrenceType;
            RecurrenceValue = recurrenceValue;
            ScheduledAction = scheduledAction;
            TaskEnabled = taskEnabled;
        }
    }
}
