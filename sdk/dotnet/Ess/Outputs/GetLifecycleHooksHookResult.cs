// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess.Outputs
{

    [OutputType]
    public sealed class GetLifecycleHooksHookResult
    {
        /// <summary>
        /// Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses.
        /// </summary>
        public readonly string DefaultResult;
        /// <summary>
        /// Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the default_result parameter.
        /// </summary>
        public readonly int HeartbeatTimeout;
        /// <summary>
        /// ID of the lifecycle hook.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Type of Scaling activity attached to lifecycle hook.
        /// </summary>
        public readonly string LifecycleTransition;
        /// <summary>
        /// Name of the lifecycle hook.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Arn of notification target.
        /// </summary>
        public readonly string NotificationArn;
        /// <summary>
        /// Additional information that you want to include when Auto Scaling sends a message to the notification target.
        /// </summary>
        public readonly string NotificationMetadata;
        /// <summary>
        /// Scaling group id the lifecycle hooks belong to.
        /// </summary>
        public readonly string ScalingGroupId;

        [OutputConstructor]
        private GetLifecycleHooksHookResult(
            string defaultResult,

            int heartbeatTimeout,

            string id,

            string lifecycleTransition,

            string name,

            string notificationArn,

            string notificationMetadata,

            string scalingGroupId)
        {
            DefaultResult = defaultResult;
            HeartbeatTimeout = heartbeatTimeout;
            Id = id;
            LifecycleTransition = lifecycleTransition;
            Name = name;
            NotificationArn = notificationArn;
            NotificationMetadata = notificationMetadata;
            ScalingGroupId = scalingGroupId;
        }
    }
}
