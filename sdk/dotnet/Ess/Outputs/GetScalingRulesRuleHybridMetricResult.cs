// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess.Outputs
{

    [OutputType]
    public sealed class GetScalingRulesRuleHybridMetricResult
    {
        /// <summary>
        /// (Available since v1.250.0) The metric dimensions. You can use this parameter to specify the monitored resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingRulesRuleHybridMetricDimensionResult> Dimensions;
        /// <summary>
        /// (Available since v1.250.0) The metric expression that consists of multiple Hybrid Cloud Monitoring metrics. It calculates a result used to trigger scaling events. The expression is written in Reverse Polish Notation (RPN) format and includes only the following operators: +, -, *, /.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// (Available since v1.250.0) The reference ID of the metric in the metric expression.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Available since v1.250.0) The name of the Hybrid Cloud Monitoring metric.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// (Available since v1.250.0) The statistical method of the metric data.
        /// </summary>
        public readonly string Statistic;

        [OutputConstructor]
        private GetScalingRulesRuleHybridMetricResult(
            ImmutableArray<Outputs.GetScalingRulesRuleHybridMetricDimensionResult> dimensions,

            string expression,

            string id,

            string metricName,

            string statistic)
        {
            Dimensions = dimensions;
            Expression = expression;
            Id = id;
            MetricName = metricName;
            Statistic = statistic;
        }
    }
}
