// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.PolarDB
{
    /// <summary>
    /// Provides an PolarDB zonal cluster resource. An PolarDB zonal cluster is an isolated database
    /// environment in the cloud. An PolarDB zonal cluster can contain multiple user-created
    /// databases.
    /// 
    /// &gt; **NOTE:** Available since v1.66.0.
    /// 
    /// ## Example Usage
    /// 
    /// Create a PolarDB MySQL zonal cluster
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     // The advanced configuration for all nodes in the cluster except for the RW node, including db_node_class, hot_replica_mode, and imci_switch properties.
    ///     var dbClusterNodesConfigs = config.GetObject&lt;Dictionary&lt;string, DbClusterNodesConfigs&gt;&gt;("dbClusterNodesConfigs") ?? 
    ///     {
    ///         { "db_node_1", 
    ///         {
    ///             { "dbNodeClass", "polar.mysql.x4.medium.c" },
    ///             { "dbNodeRole", "Writer" },
    ///             { "hotReplicaMode", null },
    ///             { "imciSwitch", null },
    ///         } },
    ///         { "db_node_2", 
    ///         {
    ///             { "dbNodeClass", "polar.mysql.x4.medium.c" },
    ///             { "dbNodeRole", "Reader" },
    ///             { "hotReplicaMode", null },
    ///             { "imciSwitch", null },
    ///         } },
    ///     };
    ///     var @default = new AliCloud.Ens.Network("default", new()
    ///     {
    ///         NetworkName = "terraform-example",
    ///         Description = "LoadBalancerNetworkDescription_test",
    ///         CidrBlock = "192.168.2.0/24",
    ///         EnsRegionId = "tr-Istanbul-1",
    ///     });
    /// 
    ///     var defaultVswitch = new AliCloud.Ens.Vswitch("default", new()
    ///     {
    ///         Description = "LoadBalancerVSwitchDescription_test",
    ///         CidrBlock = "192.168.2.0/24",
    ///         VswitchName = "terraform-example",
    ///         EnsRegionId = "tr-Istanbul-1",
    ///         NetworkId = @default.Id,
    ///     });
    /// 
    ///     var defaultZonalDbCluster = new AliCloud.PolarDB.ZonalDbCluster("default", new()
    ///     {
    ///         DbNodeClass = "polar.mysql.x4.medium.c",
    ///         Description = "terraform-example",
    ///         EnsRegionId = "tr-Istanbul-1",
    ///         VpcId = @default.Id,
    ///         VswitchId = defaultVswitch.Id,
    ///         DbClusterNodesConfigs = dbClusterNodesConfigs.Select(pair =&gt; new { pair.Key, pair.Value }).ToDictionary(item =&gt; {
    ///             var node = item.Key;
    ///             return node;
    ///         }, item =&gt; {
    ///             var config = item.Value;
    ///             return JsonSerializer.Serialize(.ToDictionary(item =&gt; {
    ///                 var k = item.Key;
    ///                 return k;
    ///             }, item =&gt; {
    ///                 var v = item.Value;
    ///                 return v;
    ///             }));
    ///         }),
    ///     });
    /// 
    /// });
    /// 
    /// public class DbClusterNodesConfigs
    /// {
    ///     public string dbNodeClass { get; set; }
    ///     public string dbNodeRole { get; set; }
    ///     public string hotReplicaMode { get; set; }
    ///     public string imciSwitch { get; set; }
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// PolarDB zonal cluster can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:polardb/zonalDbCluster:ZonalDbCluster example pc-abc12345678
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:polardb/zonalDbCluster:ZonalDbCluster")]
    public partial class ZonalDbCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Auto-renewal period of an cluster, in the unit of the month. It is valid when PayType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
        /// </summary>
        [Output("autoRenewPeriod")]
        public Output<int?> AutoRenewPeriod { get; private set; } = null!;

        /// <summary>
        /// PolarDB zonal cluster latest version.
        /// </summary>
        [Output("clusterLatestVersion")]
        public Output<string> ClusterLatestVersion { get; private set; } = null!;

        /// <summary>
        /// current DB Cluster revision Version.
        /// </summary>
        [Output("clusterVersion")]
        public Output<string> ClusterVersion { get; private set; } = null!;

        /// <summary>
        /// PolarDB zonal cluster creation time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The edition of the PolarDB service. Valid values are `SENormal`.
        /// </summary>
        [Output("creationCategory")]
        public Output<string> CreationCategory { get; private set; } = null!;

        /// <summary>
        /// Cache of the relationship between node key and node ID for PolarDB zonal Cluster
        /// </summary>
        [Output("dbClusterNodesAttributes")]
        public Output<ImmutableDictionary<string, string>> DbClusterNodesAttributes { get; private set; } = null!;

        /// <summary>
        /// Map of node needs to be created after DB cluster was launched.
        /// </summary>
        [Output("dbClusterNodesConfigs")]
        public Output<ImmutableDictionary<string, string>> DbClusterNodesConfigs { get; private set; } = null!;

        /// <summary>
        /// Cache of node ID for PolarDB zonal Cluster
        /// </summary>
        [Output("dbClusterNodesIds")]
        public Output<ImmutableDictionary<string, string>> DbClusterNodesIds { get; private set; } = null!;

        /// <summary>
        /// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `DbType` is MySQL and `DbVersion` is 8.0.
        /// </summary>
        [Output("dbMinorVersion")]
        public Output<string?> DbMinorVersion { get; private set; } = null!;

        /// <summary>
        /// The DbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
        /// </summary>
        [Output("dbNodeClass")]
        public Output<string> DbNodeClass { get; private set; } = null!;

        /// <summary>
        /// Database type. Value options: MySQL, Oracle, PostgreSQL.
        /// </summary>
        [Output("dbType")]
        public Output<string?> DbType { get; private set; } = null!;

        /// <summary>
        /// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
        /// </summary>
        [Output("dbVersion")]
        public Output<string?> DbVersion { get; private set; } = null!;

        /// <summary>
        /// The description of cluster.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The Zone to launch the DB cluster.
        /// </summary>
        [Output("ensRegionId")]
        public Output<string> EnsRegionId { get; private set; } = null!;

        /// <summary>
        /// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
        /// </summary>
        [Output("payType")]
        public Output<string?> PayType { get; private set; } = null!;

        /// <summary>
        /// PolarDB zonal cluster region
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
        /// </summary>
        [Output("renewalStatus")]
        public Output<string?> RenewalStatus { get; private set; } = null!;

        /// <summary>
        /// The billing method of the storage. Valid values `Prepaid`.
        /// </summary>
        [Output("storagePayType")]
        public Output<string> StoragePayType { get; private set; } = null!;

        /// <summary>
        /// Storage space charged by space (monthly package). Unit: GB.
        /// &gt; **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when PayType are `PrePaid` ,`PostPaid`.
        /// </summary>
        [Output("storageSpace")]
        public Output<int?> StorageSpace { get; private set; } = null!;

        /// <summary>
        /// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
        /// </summary>
        [Output("storageType")]
        public Output<string?> StorageType { get; private set; } = null!;

        /// <summary>
        /// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
        /// </summary>
        [Output("targetMinorVersion")]
        public Output<string?> TargetMinorVersion { get; private set; } = null!;

        /// <summary>
        /// The duration that you will buy DB cluster (in month). It is valid when PayType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
        /// &gt; **NOTE:** The attribute `Period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
        /// </summary>
        [Output("usedTime")]
        public Output<int?> UsedTime { get; private set; } = null!;

        /// <summary>
        /// The id of the ENS VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// The ENS virtual switch ID to launch DB instances in one VPC.
        /// </summary>
        [Output("vswitchId")]
        public Output<string> VswitchId { get; private set; } = null!;


        /// <summary>
        /// Create a ZonalDbCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZonalDbCluster(string name, ZonalDbClusterArgs args, CustomResourceOptions? options = null)
            : base("alicloud:polardb/zonalDbCluster:ZonalDbCluster", name, args ?? new ZonalDbClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZonalDbCluster(string name, Input<string> id, ZonalDbClusterState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:polardb/zonalDbCluster:ZonalDbCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZonalDbCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZonalDbCluster Get(string name, Input<string> id, ZonalDbClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new ZonalDbCluster(name, id, state, options);
        }
    }

    public sealed class ZonalDbClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auto-renewal period of an cluster, in the unit of the month. It is valid when PayType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
        /// </summary>
        [Input("autoRenewPeriod")]
        public Input<int>? AutoRenewPeriod { get; set; }

        /// <summary>
        /// current DB Cluster revision Version.
        /// </summary>
        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        /// <summary>
        /// The edition of the PolarDB service. Valid values are `SENormal`.
        /// </summary>
        [Input("creationCategory")]
        public Input<string>? CreationCategory { get; set; }

        [Input("dbClusterNodesConfigs", required: true)]
        private InputMap<string>? _dbClusterNodesConfigs;

        /// <summary>
        /// Map of node needs to be created after DB cluster was launched.
        /// </summary>
        public InputMap<string> DbClusterNodesConfigs
        {
            get => _dbClusterNodesConfigs ?? (_dbClusterNodesConfigs = new InputMap<string>());
            set => _dbClusterNodesConfigs = value;
        }

        /// <summary>
        /// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `DbType` is MySQL and `DbVersion` is 8.0.
        /// </summary>
        [Input("dbMinorVersion")]
        public Input<string>? DbMinorVersion { get; set; }

        /// <summary>
        /// The DbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
        /// </summary>
        [Input("dbNodeClass", required: true)]
        public Input<string> DbNodeClass { get; set; } = null!;

        /// <summary>
        /// Database type. Value options: MySQL, Oracle, PostgreSQL.
        /// </summary>
        [Input("dbType")]
        public Input<string>? DbType { get; set; }

        /// <summary>
        /// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        /// <summary>
        /// The description of cluster.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Zone to launch the DB cluster.
        /// </summary>
        [Input("ensRegionId", required: true)]
        public Input<string> EnsRegionId { get; set; } = null!;

        /// <summary>
        /// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
        /// </summary>
        [Input("payType")]
        public Input<string>? PayType { get; set; }

        /// <summary>
        /// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
        /// </summary>
        [Input("renewalStatus")]
        public Input<string>? RenewalStatus { get; set; }

        /// <summary>
        /// Storage space charged by space (monthly package). Unit: GB.
        /// &gt; **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when PayType are `PrePaid` ,`PostPaid`.
        /// </summary>
        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        /// <summary>
        /// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        /// <summary>
        /// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
        /// </summary>
        [Input("targetMinorVersion")]
        public Input<string>? TargetMinorVersion { get; set; }

        /// <summary>
        /// The duration that you will buy DB cluster (in month). It is valid when PayType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
        /// &gt; **NOTE:** The attribute `Period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
        /// </summary>
        [Input("usedTime")]
        public Input<int>? UsedTime { get; set; }

        /// <summary>
        /// The id of the ENS VPC.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// The ENS virtual switch ID to launch DB instances in one VPC.
        /// </summary>
        [Input("vswitchId", required: true)]
        public Input<string> VswitchId { get; set; } = null!;

        public ZonalDbClusterArgs()
        {
        }
        public static new ZonalDbClusterArgs Empty => new ZonalDbClusterArgs();
    }

    public sealed class ZonalDbClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auto-renewal period of an cluster, in the unit of the month. It is valid when PayType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
        /// </summary>
        [Input("autoRenewPeriod")]
        public Input<int>? AutoRenewPeriod { get; set; }

        /// <summary>
        /// PolarDB zonal cluster latest version.
        /// </summary>
        [Input("clusterLatestVersion")]
        public Input<string>? ClusterLatestVersion { get; set; }

        /// <summary>
        /// current DB Cluster revision Version.
        /// </summary>
        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        /// <summary>
        /// PolarDB zonal cluster creation time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The edition of the PolarDB service. Valid values are `SENormal`.
        /// </summary>
        [Input("creationCategory")]
        public Input<string>? CreationCategory { get; set; }

        [Input("dbClusterNodesAttributes")]
        private InputMap<string>? _dbClusterNodesAttributes;

        /// <summary>
        /// Cache of the relationship between node key and node ID for PolarDB zonal Cluster
        /// </summary>
        public InputMap<string> DbClusterNodesAttributes
        {
            get => _dbClusterNodesAttributes ?? (_dbClusterNodesAttributes = new InputMap<string>());
            set => _dbClusterNodesAttributes = value;
        }

        [Input("dbClusterNodesConfigs")]
        private InputMap<string>? _dbClusterNodesConfigs;

        /// <summary>
        /// Map of node needs to be created after DB cluster was launched.
        /// </summary>
        public InputMap<string> DbClusterNodesConfigs
        {
            get => _dbClusterNodesConfigs ?? (_dbClusterNodesConfigs = new InputMap<string>());
            set => _dbClusterNodesConfigs = value;
        }

        [Input("dbClusterNodesIds")]
        private InputMap<string>? _dbClusterNodesIds;

        /// <summary>
        /// Cache of node ID for PolarDB zonal Cluster
        /// </summary>
        public InputMap<string> DbClusterNodesIds
        {
            get => _dbClusterNodesIds ?? (_dbClusterNodesIds = new InputMap<string>());
            set => _dbClusterNodesIds = value;
        }

        /// <summary>
        /// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `DbType` is MySQL and `DbVersion` is 8.0.
        /// </summary>
        [Input("dbMinorVersion")]
        public Input<string>? DbMinorVersion { get; set; }

        /// <summary>
        /// The DbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
        /// </summary>
        [Input("dbNodeClass")]
        public Input<string>? DbNodeClass { get; set; }

        /// <summary>
        /// Database type. Value options: MySQL, Oracle, PostgreSQL.
        /// </summary>
        [Input("dbType")]
        public Input<string>? DbType { get; set; }

        /// <summary>
        /// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        /// <summary>
        /// The description of cluster.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Zone to launch the DB cluster.
        /// </summary>
        [Input("ensRegionId")]
        public Input<string>? EnsRegionId { get; set; }

        /// <summary>
        /// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
        /// </summary>
        [Input("payType")]
        public Input<string>? PayType { get; set; }

        /// <summary>
        /// PolarDB zonal cluster region
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
        /// </summary>
        [Input("renewalStatus")]
        public Input<string>? RenewalStatus { get; set; }

        /// <summary>
        /// The billing method of the storage. Valid values `Prepaid`.
        /// </summary>
        [Input("storagePayType")]
        public Input<string>? StoragePayType { get; set; }

        /// <summary>
        /// Storage space charged by space (monthly package). Unit: GB.
        /// &gt; **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when PayType are `PrePaid` ,`PostPaid`.
        /// </summary>
        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        /// <summary>
        /// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        /// <summary>
        /// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
        /// </summary>
        [Input("targetMinorVersion")]
        public Input<string>? TargetMinorVersion { get; set; }

        /// <summary>
        /// The duration that you will buy DB cluster (in month). It is valid when PayType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
        /// &gt; **NOTE:** The attribute `Period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
        /// </summary>
        [Input("usedTime")]
        public Input<int>? UsedTime { get; set; }

        /// <summary>
        /// The id of the ENS VPC.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The ENS virtual switch ID to launch DB instances in one VPC.
        /// </summary>
        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        public ZonalDbClusterState()
        {
        }
        public static new ZonalDbClusterState Empty => new ZonalDbClusterState();
    }
}
