// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.PolarDB
{
    public static class GetParameterGroups
    {
        /// <summary>
        /// This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.183.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.PolarDB.GetParameterGroups.Invoke(new()
        ///     {
        ///         DbType = "MySQL",
        ///         DbVersion = "8.0",
        ///     });
        /// 
        ///     var ids = AliCloud.PolarDB.GetParameterGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             @default.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.Id),
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.PolarDB.GetParameterGroups.Invoke(new()
        ///     {
        ///         NameRegex = @default.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.ParameterGroupName),
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["polardbParameterGroupId1"] = ids.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.Id),
        ///         ["polardbParameterGroupId2"] = nameRegex.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetParameterGroupsResult> InvokeAsync(GetParameterGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterGroupsResult>("alicloud:polardb/getParameterGroups:getParameterGroups", args ?? new GetParameterGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.183.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.PolarDB.GetParameterGroups.Invoke(new()
        ///     {
        ///         DbType = "MySQL",
        ///         DbVersion = "8.0",
        ///     });
        /// 
        ///     var ids = AliCloud.PolarDB.GetParameterGroups.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             @default.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.Id),
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.PolarDB.GetParameterGroups.Invoke(new()
        ///     {
        ///         NameRegex = @default.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.ParameterGroupName),
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["polardbParameterGroupId1"] = ids.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.Id),
        ///         ["polardbParameterGroupId2"] = nameRegex.Apply(getParameterGroupsResult =&gt; getParameterGroupsResult.Groups[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetParameterGroupsResult> Invoke(GetParameterGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterGroupsResult>("alicloud:polardb/getParameterGroups:getParameterGroups", args ?? new GetParameterGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of the database engine. Only `MySQL` is supported.
        /// </summary>
        [Input("dbType")]
        public string? DbType { get; set; }

        /// <summary>
        /// The version number of the database engine. Valid values: `5.6`, `5.7`, `8.0`.
        /// </summary>
        [Input("dbVersion")]
        public string? DbVersion { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Parameter Group IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Parameter Group name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetParameterGroupsArgs()
        {
        }
        public static new GetParameterGroupsArgs Empty => new GetParameterGroupsArgs();
    }

    public sealed class GetParameterGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of the database engine. Only `MySQL` is supported.
        /// </summary>
        [Input("dbType")]
        public Input<string>? DbType { get; set; }

        /// <summary>
        /// The version number of the database engine. Valid values: `5.6`, `5.7`, `8.0`.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Parameter Group IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Parameter Group name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetParameterGroupsInvokeArgs()
        {
        }
        public static new GetParameterGroupsInvokeArgs Empty => new GetParameterGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterGroupsResult
    {
        /// <summary>
        /// The type of the database engine.
        /// </summary>
        public readonly string? DbType;
        /// <summary>
        /// The version number of the database engine.
        /// </summary>
        public readonly string? DbVersion;
        /// <summary>
        /// A list of PolarDB Parameter Groups. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetParameterGroupsGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Parameter Group names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetParameterGroupsResult(
            string? dbType,

            string? dbVersion,

            ImmutableArray<Outputs.GetParameterGroupsGroupResult> groups,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile)
        {
            DbType = dbType;
            DbVersion = dbVersion;
            Groups = groups;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
        }
    }
}
