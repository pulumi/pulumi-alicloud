// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.PolarDB
{
    /// <summary>
    /// Provides a PolarDB Zonal account resource and used to manage databases.
    /// 
    /// &gt; **NOTE:** Available since v1.262.0.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     // The advanced configuration for all nodes in the cluster except for the RW node, including db_node_class, hot_replica_mode, and imci_switch properties.
    ///     var dbClusterNodesConfigs = config.GetObject&lt;Dictionary&lt;string, DbClusterNodesConfigs&gt;&gt;("dbClusterNodesConfigs") ?? 
    ///     {
    ///         { "db_node_1", 
    ///         {
    ///             { "dbNodeClass", "polar.mysql.x4.medium.c" },
    ///             { "dbNodeRole", "Writer" },
    ///             { "hotReplicaMode", null },
    ///             { "imciSwitch", null },
    ///         } },
    ///     };
    ///     var @default = new AliCloud.Ens.Network("default", new()
    ///     {
    ///         NetworkName = "terraform-example",
    ///         Description = "LoadBalancerNetworkDescription_test",
    ///         CidrBlock = "192.168.2.0/24",
    ///         EnsRegionId = "tr-Istanbul-1",
    ///     });
    /// 
    ///     var defaultVswitch = new AliCloud.Ens.Vswitch("default", new()
    ///     {
    ///         Description = "LoadBalancerVSwitchDescription_test",
    ///         CidrBlock = "192.168.2.0/24",
    ///         VswitchName = "terraform-example",
    ///         EnsRegionId = "tr-Istanbul-1",
    ///         NetworkId = @default.Id,
    ///     });
    /// 
    ///     var defaultZonalDbCluster = new AliCloud.PolarDB.ZonalDbCluster("default", new()
    ///     {
    ///         DbNodeClass = "polar.mysql.x4.medium.c",
    ///         Description = "terraform-example",
    ///         EnsRegionId = "tr-Istanbul-1",
    ///         VpcId = @default.Id,
    ///         VswitchId = defaultVswitch.Id,
    ///         DbClusterNodesConfigs = dbClusterNodesConfigs.Select(pair =&gt; new { pair.Key, pair.Value }).ToDictionary(item =&gt; {
    ///             var node = item.Key;
    ///             return node;
    ///         }, item =&gt; {
    ///             var config = item.Value;
    ///             return JsonSerializer.Serialize(.ToDictionary(item =&gt; {
    ///                 var k = item.Key;
    ///                 return k;
    ///             }, item =&gt; {
    ///                 var v = item.Value;
    ///                 return v;
    ///             }));
    ///         }),
    ///     });
    /// 
    ///     var defaultZonalAccount = new AliCloud.PolarDB.ZonalAccount("default", new()
    ///     {
    ///         DbClusterId = defaultZonalDbCluster.Id,
    ///         AccountName = "terraform_example",
    ///         AccountPassword = "Example1234",
    ///     });
    /// 
    /// });
    /// 
    /// public class DbClusterNodesConfigs
    /// {
    ///     public string dbNodeClass { get; set; }
    ///     public string dbNodeRole { get; set; }
    ///     public string hotReplicaMode { get; set; }
    ///     public string imciSwitch { get; set; }
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// PolarDB Zonal account can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:polardb/zonalAccount:ZonalAccount example "pc-12345:tf_account"
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:polardb/zonalAccount:ZonalAccount")]
    public partial class ZonalAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
        /// </summary>
        [Output("accountDescription")]
        public Output<string?> AccountDescription { get; private set; } = null!;

        /// <summary>
        /// Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
        /// </summary>
        [Output("accountName")]
        public Output<string> AccountName { get; private set; } = null!;

        /// <summary>
        /// Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
        /// </summary>
        [Output("accountPassword")]
        public Output<string> AccountPassword { get; private set; } = null!;

        /// <summary>
        /// Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
        /// </summary>
        [Output("accountType")]
        public Output<string> AccountType { get; private set; } = null!;

        /// <summary>
        /// The Id of cluster in which account belongs.
        /// </summary>
        [Output("dbClusterId")]
        public Output<string> DbClusterId { get; private set; } = null!;


        /// <summary>
        /// Create a ZonalAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZonalAccount(string name, ZonalAccountArgs args, CustomResourceOptions? options = null)
            : base("alicloud:polardb/zonalAccount:ZonalAccount", name, args ?? new ZonalAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZonalAccount(string name, Input<string> id, ZonalAccountState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:polardb/zonalAccount:ZonalAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "accountPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZonalAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZonalAccount Get(string name, Input<string> id, ZonalAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new ZonalAccount(name, id, state, options);
        }
    }

    public sealed class ZonalAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
        /// </summary>
        [Input("accountDescription")]
        public Input<string>? AccountDescription { get; set; }

        /// <summary>
        /// Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        [Input("accountPassword")]
        private Input<string>? _accountPassword;

        /// <summary>
        /// Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
        /// </summary>
        public Input<string>? AccountPassword
        {
            get => _accountPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
        /// </summary>
        [Input("accountType")]
        public Input<string>? AccountType { get; set; }

        /// <summary>
        /// The Id of cluster in which account belongs.
        /// </summary>
        [Input("dbClusterId", required: true)]
        public Input<string> DbClusterId { get; set; } = null!;

        public ZonalAccountArgs()
        {
        }
        public static new ZonalAccountArgs Empty => new ZonalAccountArgs();
    }

    public sealed class ZonalAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
        /// </summary>
        [Input("accountDescription")]
        public Input<string>? AccountDescription { get; set; }

        /// <summary>
        /// Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        [Input("accountPassword")]
        private Input<string>? _accountPassword;

        /// <summary>
        /// Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
        /// </summary>
        public Input<string>? AccountPassword
        {
            get => _accountPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
        /// </summary>
        [Input("accountType")]
        public Input<string>? AccountType { get; set; }

        /// <summary>
        /// The Id of cluster in which account belongs.
        /// </summary>
        [Input("dbClusterId")]
        public Input<string>? DbClusterId { get; set; }

        public ZonalAccountState()
        {
        }
        public static new ZonalAccountState Empty => new ZonalAccountState();
    }
}
