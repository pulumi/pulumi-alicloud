// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ebs.Outputs
{

    [OutputType]
    public sealed class GetDiskReplicaGroupsGroupResult
    {
        /// <summary>
        /// The description of the consistent replication group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the region to which the disaster recovery site belongs.
        /// </summary>
        public readonly string DestinationRegionId;
        /// <summary>
        /// The ID of the zone to which the disaster recovery site belongs.
        /// </summary>
        public readonly string DestinationZoneId;
        /// <summary>
        /// Consistent replication group name.
        /// </summary>
        public readonly string GroupName;
        /// <summary>
        /// The ID of the Disk Replica Group.
        /// </summary>
        public readonly string Id;
        public readonly string LastRecoverPoint;
        /// <summary>
        /// The initial source region of the replication group.
        /// </summary>
        public readonly string PrimaryRegion;
        /// <summary>
        /// The initial source available area of the replication group.
        /// </summary>
        public readonly string PrimaryZone;
        /// <summary>
        /// The ID of the consistent replication group.
        /// </summary>
        public readonly string ReplicaGroupId;
        /// <summary>
        /// The recovery point objective (RPO) of the replication pair-consistent group.
        /// </summary>
        public readonly int Rpo;
        /// <summary>
        /// Site information sources for replication pairs and consistent replication groups.
        /// </summary>
        public readonly string Site;
        /// <summary>
        /// The ID of the region to which the production site belongs.
        /// </summary>
        public readonly string SourceRegionId;
        /// <summary>
        /// The ID of the zone to which the production site belongs.
        /// </summary>
        public readonly string SourceZoneId;
        /// <summary>
        /// The initial destination region of the replication group.
        /// </summary>
        public readonly string StandbyRegion;
        /// <summary>
        /// The initial destination zone of the replication group.
        /// </summary>
        public readonly string StandbyZone;
        /// <summary>
        /// The status of the consistent replication group. Possible values:
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetDiskReplicaGroupsGroupResult(
            string description,

            string destinationRegionId,

            string destinationZoneId,

            string groupName,

            string id,

            string lastRecoverPoint,

            string primaryRegion,

            string primaryZone,

            string replicaGroupId,

            int rpo,

            string site,

            string sourceRegionId,

            string sourceZoneId,

            string standbyRegion,

            string standbyZone,

            string status)
        {
            Description = description;
            DestinationRegionId = destinationRegionId;
            DestinationZoneId = destinationZoneId;
            GroupName = groupName;
            Id = id;
            LastRecoverPoint = lastRecoverPoint;
            PrimaryRegion = primaryRegion;
            PrimaryZone = primaryZone;
            ReplicaGroupId = replicaGroupId;
            Rpo = rpo;
            Site = site;
            SourceRegionId = sourceRegionId;
            SourceZoneId = sourceZoneId;
            StandbyRegion = standbyRegion;
            StandbyZone = standbyZone;
            Status = status;
        }
    }
}
