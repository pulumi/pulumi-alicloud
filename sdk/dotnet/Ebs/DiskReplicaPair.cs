// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ebs
{
    /// <summary>
    /// Provides a Elastic Block Storage(EBS) Disk Replica Pair resource.
    /// 
    /// For information about Elastic Block Storage(EBS) Disk Replica Pair and how to use it, see [What is Disk Replica Pair](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ebs-2021-07-30-creatediskreplicapair).
    /// 
    /// &gt; **NOTE:** Available since v1.196.0.
    /// 
    /// ## Import
    /// 
    /// Elastic Block Storage(EBS) Disk Replica Pair can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:ebs/diskReplicaPair:DiskReplicaPair example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ebs/diskReplicaPair:DiskReplicaPair")]
    public partial class DiskReplicaPair : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
        /// - 10240 Kbps: equal to 10 Mbps.
        /// - 20480 Kbps: equal to 20 Mbps.
        /// - 51200 Kbps: equal to 50 Mbps.
        /// - 102400 Kbps: equal to 100 Mbps.
        /// 
        /// Default value: 10240.
        /// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
        /// </summary>
        [Output("bandwidth")]
        public Output<int?> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the standby disk.
        /// </summary>
        [Output("destinationDiskId")]
        public Output<string> DestinationDiskId { get; private set; } = null!;

        /// <summary>
        /// The ID of the region to which the disaster recovery site belongs.
        /// </summary>
        [Output("destinationRegionId")]
        public Output<string> DestinationRegionId { get; private set; } = null!;

        /// <summary>
        /// The ID of the zone to which the disaster recovery site belongs.
        /// </summary>
        [Output("destinationZoneId")]
        public Output<string> DestinationZoneId { get; private set; } = null!;

        /// <summary>
        /// The ID of the primary disk.
        /// </summary>
        [Output("diskId")]
        public Output<string> DiskId { get; private set; } = null!;

        /// <summary>
        /// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
        /// </summary>
        [Output("diskReplicaPairName")]
        public Output<string> DiskReplicaPairName { get; private set; } = null!;

        /// <summary>
        /// Whether to synchronize immediately. Value range:
        /// - true: Start data synchronization immediately.
        /// - false: Data Synchronization starts after the RPO time period.
        /// 
        /// Default value: false.
        /// </summary>
        [Output("oneShot")]
        public Output<bool?> OneShot { get; private set; } = null!;

        /// <summary>
        /// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
        /// </summary>
        [Output("pairName")]
        public Output<string> PairName { get; private set; } = null!;

        /// <summary>
        /// The payment type of the resource
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
        /// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
        /// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// The unit of the purchase time of the asynchronous replication relationship. Value range:
        /// - Week: Week.
        /// - Month: Month.
        /// 
        /// Default value: Month.
        /// </summary>
        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        /// <summary>
        /// The region ID  of the resource
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
        /// </summary>
        [Output("reverseReplicate")]
        public Output<bool?> ReverseReplicate { get; private set; } = null!;

        /// <summary>
        /// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
        /// </summary>
        [Output("rpo")]
        public Output<int> Rpo { get; private set; } = null!;

        /// <summary>
        /// The ID of the zone to which the production site belongs.
        /// </summary>
        [Output("sourceZoneId")]
        public Output<string> SourceZoneId { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tag of the resource
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DiskReplicaPair resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiskReplicaPair(string name, DiskReplicaPairArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ebs/diskReplicaPair:DiskReplicaPair", name, args ?? new DiskReplicaPairArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiskReplicaPair(string name, Input<string> id, DiskReplicaPairState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ebs/diskReplicaPair:DiskReplicaPair", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiskReplicaPair resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiskReplicaPair Get(string name, Input<string> id, DiskReplicaPairState? state = null, CustomResourceOptions? options = null)
        {
            return new DiskReplicaPair(name, id, state, options);
        }
    }

    public sealed class DiskReplicaPairArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
        /// - 10240 Kbps: equal to 10 Mbps.
        /// - 20480 Kbps: equal to 20 Mbps.
        /// - 51200 Kbps: equal to 50 Mbps.
        /// - 102400 Kbps: equal to 100 Mbps.
        /// 
        /// Default value: 10240.
        /// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the standby disk.
        /// </summary>
        [Input("destinationDiskId", required: true)]
        public Input<string> DestinationDiskId { get; set; } = null!;

        /// <summary>
        /// The ID of the region to which the disaster recovery site belongs.
        /// </summary>
        [Input("destinationRegionId", required: true)]
        public Input<string> DestinationRegionId { get; set; } = null!;

        /// <summary>
        /// The ID of the zone to which the disaster recovery site belongs.
        /// </summary>
        [Input("destinationZoneId", required: true)]
        public Input<string> DestinationZoneId { get; set; } = null!;

        /// <summary>
        /// The ID of the primary disk.
        /// </summary>
        [Input("diskId", required: true)]
        public Input<string> DiskId { get; set; } = null!;

        /// <summary>
        /// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
        /// </summary>
        [Input("diskReplicaPairName")]
        public Input<string>? DiskReplicaPairName { get; set; }

        /// <summary>
        /// Whether to synchronize immediately. Value range:
        /// - true: Start data synchronization immediately.
        /// - false: Data Synchronization starts after the RPO time period.
        /// 
        /// Default value: false.
        /// </summary>
        [Input("oneShot")]
        public Input<bool>? OneShot { get; set; }

        /// <summary>
        /// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
        /// </summary>
        [Input("pairName")]
        public Input<string>? PairName { get; set; }

        /// <summary>
        /// The payment type of the resource
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
        /// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
        /// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The unit of the purchase time of the asynchronous replication relationship. Value range:
        /// - Week: Week.
        /// - Month: Month.
        /// 
        /// Default value: Month.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
        /// </summary>
        [Input("reverseReplicate")]
        public Input<bool>? ReverseReplicate { get; set; }

        /// <summary>
        /// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
        /// </summary>
        [Input("rpo")]
        public Input<int>? Rpo { get; set; }

        /// <summary>
        /// The ID of the zone to which the production site belongs.
        /// </summary>
        [Input("sourceZoneId", required: true)]
        public Input<string> SourceZoneId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DiskReplicaPairArgs()
        {
        }
        public static new DiskReplicaPairArgs Empty => new DiskReplicaPairArgs();
    }

    public sealed class DiskReplicaPairState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
        /// - 10240 Kbps: equal to 10 Mbps.
        /// - 20480 Kbps: equal to 20 Mbps.
        /// - 51200 Kbps: equal to 50 Mbps.
        /// - 102400 Kbps: equal to 100 Mbps.
        /// 
        /// Default value: 10240.
        /// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the standby disk.
        /// </summary>
        [Input("destinationDiskId")]
        public Input<string>? DestinationDiskId { get; set; }

        /// <summary>
        /// The ID of the region to which the disaster recovery site belongs.
        /// </summary>
        [Input("destinationRegionId")]
        public Input<string>? DestinationRegionId { get; set; }

        /// <summary>
        /// The ID of the zone to which the disaster recovery site belongs.
        /// </summary>
        [Input("destinationZoneId")]
        public Input<string>? DestinationZoneId { get; set; }

        /// <summary>
        /// The ID of the primary disk.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
        /// </summary>
        [Input("diskReplicaPairName")]
        public Input<string>? DiskReplicaPairName { get; set; }

        /// <summary>
        /// Whether to synchronize immediately. Value range:
        /// - true: Start data synchronization immediately.
        /// - false: Data Synchronization starts after the RPO time period.
        /// 
        /// Default value: false.
        /// </summary>
        [Input("oneShot")]
        public Input<bool>? OneShot { get; set; }

        /// <summary>
        /// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
        /// </summary>
        [Input("pairName")]
        public Input<string>? PairName { get; set; }

        /// <summary>
        /// The payment type of the resource
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
        /// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
        /// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The unit of the purchase time of the asynchronous replication relationship. Value range:
        /// - Week: Week.
        /// - Month: Month.
        /// 
        /// Default value: Month.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// The region ID  of the resource
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
        /// </summary>
        [Input("reverseReplicate")]
        public Input<bool>? ReverseReplicate { get; set; }

        /// <summary>
        /// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
        /// </summary>
        [Input("rpo")]
        public Input<int>? Rpo { get; set; }

        /// <summary>
        /// The ID of the zone to which the production site belongs.
        /// </summary>
        [Input("sourceZoneId")]
        public Input<string>? SourceZoneId { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DiskReplicaPairState()
        {
        }
        public static new DiskReplicaPairState Empty => new DiskReplicaPairState();
    }
}
