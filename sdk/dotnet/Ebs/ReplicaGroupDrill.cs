// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ebs
{
    /// <summary>
    /// Provides a EBS Replica Group Drill resource.
    /// 
    /// For information about EBS Replica Group Drill and how to use it, see [What is Replica Group Drill](https://www.alibabacloud.com/help/en/).
    /// 
    /// &gt; **NOTE:** Available since v1.215.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.Ebs.ReplicaGroupDrill("default", new()
    ///     {
    ///         GroupId = "pg-m1H9aaOUIGsDUwgZ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// EBS Replica Group Drill can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:ebs/replicaGroupDrill:ReplicaGroupDrill example &lt;group_id&gt;:&lt;replica_group_drill_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ebs/replicaGroupDrill:ReplicaGroupDrill")]
    public partial class ReplicaGroupDrill : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the replication group. You can use the describediskreplicaggroups interface to query the asynchronous replication group list to obtain the value of the replication group ID input parameter.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The first ID of the resource.
        /// </summary>
        [Output("replicaGroupDrillId")]
        public Output<string> ReplicaGroupDrillId { get; private set; } = null!;

        /// <summary>
        /// Walkthrough status. _failed: Execution failed._failed: Cleanup failed.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ReplicaGroupDrill resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReplicaGroupDrill(string name, ReplicaGroupDrillArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ebs/replicaGroupDrill:ReplicaGroupDrill", name, args ?? new ReplicaGroupDrillArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReplicaGroupDrill(string name, Input<string> id, ReplicaGroupDrillState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ebs/replicaGroupDrill:ReplicaGroupDrill", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReplicaGroupDrill resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReplicaGroupDrill Get(string name, Input<string> id, ReplicaGroupDrillState? state = null, CustomResourceOptions? options = null)
        {
            return new ReplicaGroupDrill(name, id, state, options);
        }
    }

    public sealed class ReplicaGroupDrillArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the replication group. You can use the describediskreplicaggroups interface to query the asynchronous replication group list to obtain the value of the replication group ID input parameter.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        public ReplicaGroupDrillArgs()
        {
        }
        public static new ReplicaGroupDrillArgs Empty => new ReplicaGroupDrillArgs();
    }

    public sealed class ReplicaGroupDrillState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the replication group. You can use the describediskreplicaggroups interface to query the asynchronous replication group list to obtain the value of the replication group ID input parameter.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The first ID of the resource.
        /// </summary>
        [Input("replicaGroupDrillId")]
        public Input<string>? ReplicaGroupDrillId { get; set; }

        /// <summary>
        /// Walkthrough status. _failed: Execution failed._failed: Cleanup failed.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ReplicaGroupDrillState()
        {
        }
        public static new ReplicaGroupDrillState Empty => new ReplicaGroupDrillState();
    }
}
