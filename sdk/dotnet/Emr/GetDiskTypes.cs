// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emr
{
    public static class GetDiskTypes
    {
        /// <summary>
        /// The `alicloud.emr.getDiskTypes` data source provides a collection of data disk and 
        /// system disk types available in Alibaba Cloud account when create a emr cluster.
        /// 
        /// &gt; **NOTE:** Available in 1.60.0+
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @default = Output.Create(AliCloud.Emr.GetDiskTypes.InvokeAsync(new AliCloud.Emr.GetDiskTypesArgs
        ///         {
        ///             ClusterType = "HADOOP",
        ///             DestinationResource = "DataDisk",
        ///             InstanceChargeType = "PostPaid",
        ///             InstanceType = "ecs.g5.xlarge",
        ///             ZoneId = "cn-huhehaote-a",
        ///         }));
        ///         this.DataDiskType = @default.Apply(@default =&gt; @default.Types?[0]?.Value);
        ///     }
        /// 
        ///     [Output("dataDiskType")]
        ///     public Output&lt;string&gt; DataDiskType { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDiskTypesResult> InvokeAsync(GetDiskTypesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDiskTypesResult>("alicloud:emr/getDiskTypes:getDiskTypes", args ?? new GetDiskTypesArgs(), options.WithDefaults());

        /// <summary>
        /// The `alicloud.emr.getDiskTypes` data source provides a collection of data disk and 
        /// system disk types available in Alibaba Cloud account when create a emr cluster.
        /// 
        /// &gt; **NOTE:** Available in 1.60.0+
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @default = Output.Create(AliCloud.Emr.GetDiskTypes.InvokeAsync(new AliCloud.Emr.GetDiskTypesArgs
        ///         {
        ///             ClusterType = "HADOOP",
        ///             DestinationResource = "DataDisk",
        ///             InstanceChargeType = "PostPaid",
        ///             InstanceType = "ecs.g5.xlarge",
        ///             ZoneId = "cn-huhehaote-a",
        ///         }));
        ///         this.DataDiskType = @default.Apply(@default =&gt; @default.Types?[0]?.Value);
        ///     }
        /// 
        ///     [Output("dataDiskType")]
        ///     public Output&lt;string&gt; DataDiskType { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDiskTypesResult> Invoke(GetDiskTypesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDiskTypesResult>("alicloud:emr/getDiskTypes:getDiskTypes", args ?? new GetDiskTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiskTypesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster type of the emr cluster instance. Possible values: `HADOOP`, `KAFKA`, `ZOOKEEPER`, `DRUID`.
        /// </summary>
        [Input("clusterType", required: true)]
        public string ClusterType { get; set; } = null!;

        /// <summary>
        /// The destination resource of emr cluster instance
        /// </summary>
        [Input("destinationResource", required: true)]
        public string DestinationResource { get; set; } = null!;

        /// <summary>
        /// Filter the results by charge type. Valid values: `PrePaid` and `PostPaid`. Default to `PostPaid`.
        /// </summary>
        [Input("instanceChargeType", required: true)]
        public string InstanceChargeType { get; set; } = null!;

        /// <summary>
        /// The ecs instance type of create emr cluster instance.
        /// </summary>
        [Input("instanceType", required: true)]
        public string InstanceType { get; set; } = null!;

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The Zone to create emr cluster instance.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetDiskTypesArgs()
        {
        }
    }

    public sealed class GetDiskTypesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster type of the emr cluster instance. Possible values: `HADOOP`, `KAFKA`, `ZOOKEEPER`, `DRUID`.
        /// </summary>
        [Input("clusterType", required: true)]
        public Input<string> ClusterType { get; set; } = null!;

        /// <summary>
        /// The destination resource of emr cluster instance
        /// </summary>
        [Input("destinationResource", required: true)]
        public Input<string> DestinationResource { get; set; } = null!;

        /// <summary>
        /// Filter the results by charge type. Valid values: `PrePaid` and `PostPaid`. Default to `PostPaid`.
        /// </summary>
        [Input("instanceChargeType", required: true)]
        public Input<string> InstanceChargeType { get; set; } = null!;

        /// <summary>
        /// The ecs instance type of create emr cluster instance.
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The Zone to create emr cluster instance.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetDiskTypesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDiskTypesResult
    {
        public readonly string ClusterType;
        public readonly string DestinationResource;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of data disk and system disk type IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string InstanceChargeType;
        public readonly string InstanceType;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of emr instance types. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiskTypesTypeResult> Types;
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetDiskTypesResult(
            string clusterType,

            string destinationResource,

            string id,

            ImmutableArray<string> ids,

            string instanceChargeType,

            string instanceType,

            string? outputFile,

            ImmutableArray<Outputs.GetDiskTypesTypeResult> types,

            string? zoneId)
        {
            ClusterType = clusterType;
            DestinationResource = destinationResource;
            Id = id;
            Ids = ids;
            InstanceChargeType = instanceChargeType;
            InstanceType = instanceType;
            OutputFile = outputFile;
            Types = types;
            ZoneId = zoneId;
        }
    }
}
