// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Eci.Outputs
{

    [OutputType]
    public sealed class GetImageCachesCachResult
    {
        /// <summary>
        /// The id of container group.
        /// </summary>
        public readonly string ContainerGroupId;
        /// <summary>
        /// Image cache pulls image event information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageCachesCachEventResult> Events;
        /// <summary>
        /// The time of expired.
        /// </summary>
        public readonly string ExpireDateTime;
        /// <summary>
        /// The ID of the ECI Image Cache.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The id of the ECI Image Cache.
        /// </summary>
        public readonly string ImageCacheId;
        /// <summary>
        /// The name of ECI Image Cache.
        /// </summary>
        public readonly string ImageCacheName;
        /// <summary>
        /// The list of cached images.
        /// </summary>
        public readonly ImmutableArray<string> Images;
        /// <summary>
        /// The progress of ECI Image Cache.
        /// </summary>
        public readonly string Progress;
        /// <summary>
        /// The id of snapshot.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The status of ECI Image Cache.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetImageCachesCachResult(
            string containerGroupId,

            ImmutableArray<Outputs.GetImageCachesCachEventResult> events,

            string expireDateTime,

            string id,

            string imageCacheId,

            string imageCacheName,

            ImmutableArray<string> images,

            string progress,

            string snapshotId,

            string status)
        {
            ContainerGroupId = containerGroupId;
            Events = events;
            ExpireDateTime = expireDateTime;
            Id = id;
            ImageCacheId = imageCacheId;
            ImageCacheName = imageCacheName;
            Images = images;
            Progress = progress;
            SnapshotId = snapshotId;
            Status = status;
        }
    }
}
