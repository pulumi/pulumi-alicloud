// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudStorageGateway
{
    /// <summary>
    /// Provides a Cloud Storage Gateway Gateway Cache Disk resource.
    /// 
    /// For information about Cloud Storage Gateway Gateway Cache Disk and how to use it, see [What is Gateway Cache Disk](https://www.alibabacloud.com/help/en/cloud-storage-gateway/latest/creategatewaycachedisk).
    /// 
    /// &gt; **NOTE:** Available since v1.144.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var defaultUuid = new Random.Index.Uuid("default");
    /// 
    ///     var defaultStorageBundle = new AliCloud.CloudStorageGateway.StorageBundle("default", new()
    ///     {
    ///         StorageBundleName = Std.Replace.Invoke(new()
    ///         {
    ///             Text = defaultUuid.Result,
    ///             Search = "-",
    ///             Replace = "",
    ///         }).Apply(invoke =&gt; Std.Substr.Invoke(new()
    ///         {
    ///             Input = $"tf-example-{invoke.Result}",
    ///             Offset = 0,
    ///             Length = 16,
    ///         })).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "172.16.0.0/12",
    ///     });
    /// 
    ///     var @default = AliCloud.CloudStorageGateway.GetStocks.Invoke(new()
    ///     {
    ///         GatewayClass = "Standard",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "172.16.0.0/21",
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getStocksResult =&gt; getStocksResult.Stocks[0]?.ZoneId)),
    ///         VswitchName = name,
    ///     });
    /// 
    ///     var defaultGateway = new AliCloud.CloudStorageGateway.Gateway("default", new()
    ///     {
    ///         GatewayName = name,
    ///         Description = name,
    ///         GatewayClass = "Standard",
    ///         Type = "File",
    ///         PaymentType = "PayAsYouGo",
    ///         VswitchId = defaultSwitch.Id,
    ///         ReleaseAfterExpiration = true,
    ///         PublicNetworkBandwidth = 40,
    ///         StorageBundleId = defaultStorageBundle.Id,
    ///         Location = "Cloud",
    ///     });
    /// 
    ///     var defaultGatewayCacheDisk = new AliCloud.CloudStorageGateway.GatewayCacheDisk("default", new()
    ///     {
    ///         CacheDiskCategory = "cloud_efficiency",
    ///         GatewayId = defaultGateway.Id,
    ///         CacheDiskSizeInGb = 50,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Storage Gateway Gateway Cache Disk can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudstoragegateway/gatewayCacheDisk:GatewayCacheDisk example &lt;gateway_id&gt;:&lt;cache_id&gt;:&lt;local_file_path&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudstoragegateway/gatewayCacheDisk:GatewayCacheDisk")]
    public partial class GatewayCacheDisk : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The type of the cache disk. Valid values: `cloud_efficiency`, `cloud_ssd`, `cloud_essd`. **NOTE:** From version 1.227.0, `cache_disk_category` can be set to `cloud_essd`.
        /// </summary>
        [Output("cacheDiskCategory")]
        public Output<string> CacheDiskCategory { get; private set; } = null!;

        /// <summary>
        /// The capacity of the cache disk.
        /// </summary>
        [Output("cacheDiskSizeInGb")]
        public Output<int> CacheDiskSizeInGb { get; private set; } = null!;

        /// <summary>
        /// The ID of the cache disk.
        /// </summary>
        [Output("cacheId")]
        public Output<string> CacheId { get; private set; } = null!;

        /// <summary>
        /// The ID of the gateway.
        /// </summary>
        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        /// <summary>
        /// The path of the cache disk.
        /// </summary>
        [Output("localFilePath")]
        public Output<string> LocalFilePath { get; private set; } = null!;

        /// <summary>
        /// The performance level (PL) of the Enterprise SSD (ESSD). Valid values: `PL1`, `PL2`, `PL3`. **NOTE:** If `cache_disk_category` is set to `cloud_essd`, `performance_level` is required.
        /// </summary>
        [Output("performanceLevel")]
        public Output<string?> PerformanceLevel { get; private set; } = null!;

        /// <summary>
        /// The status of the Gateway Cache Disk.
        /// </summary>
        [Output("status")]
        public Output<int> Status { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayCacheDisk resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayCacheDisk(string name, GatewayCacheDiskArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cloudstoragegateway/gatewayCacheDisk:GatewayCacheDisk", name, args ?? new GatewayCacheDiskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayCacheDisk(string name, Input<string> id, GatewayCacheDiskState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudstoragegateway/gatewayCacheDisk:GatewayCacheDisk", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayCacheDisk resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayCacheDisk Get(string name, Input<string> id, GatewayCacheDiskState? state = null, CustomResourceOptions? options = null)
        {
            return new GatewayCacheDisk(name, id, state, options);
        }
    }

    public sealed class GatewayCacheDiskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of the cache disk. Valid values: `cloud_efficiency`, `cloud_ssd`, `cloud_essd`. **NOTE:** From version 1.227.0, `cache_disk_category` can be set to `cloud_essd`.
        /// </summary>
        [Input("cacheDiskCategory")]
        public Input<string>? CacheDiskCategory { get; set; }

        /// <summary>
        /// The capacity of the cache disk.
        /// </summary>
        [Input("cacheDiskSizeInGb", required: true)]
        public Input<int> CacheDiskSizeInGb { get; set; } = null!;

        /// <summary>
        /// The ID of the gateway.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        /// <summary>
        /// The performance level (PL) of the Enterprise SSD (ESSD). Valid values: `PL1`, `PL2`, `PL3`. **NOTE:** If `cache_disk_category` is set to `cloud_essd`, `performance_level` is required.
        /// </summary>
        [Input("performanceLevel")]
        public Input<string>? PerformanceLevel { get; set; }

        public GatewayCacheDiskArgs()
        {
        }
        public static new GatewayCacheDiskArgs Empty => new GatewayCacheDiskArgs();
    }

    public sealed class GatewayCacheDiskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of the cache disk. Valid values: `cloud_efficiency`, `cloud_ssd`, `cloud_essd`. **NOTE:** From version 1.227.0, `cache_disk_category` can be set to `cloud_essd`.
        /// </summary>
        [Input("cacheDiskCategory")]
        public Input<string>? CacheDiskCategory { get; set; }

        /// <summary>
        /// The capacity of the cache disk.
        /// </summary>
        [Input("cacheDiskSizeInGb")]
        public Input<int>? CacheDiskSizeInGb { get; set; }

        /// <summary>
        /// The ID of the cache disk.
        /// </summary>
        [Input("cacheId")]
        public Input<string>? CacheId { get; set; }

        /// <summary>
        /// The ID of the gateway.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// The path of the cache disk.
        /// </summary>
        [Input("localFilePath")]
        public Input<string>? LocalFilePath { get; set; }

        /// <summary>
        /// The performance level (PL) of the Enterprise SSD (ESSD). Valid values: `PL1`, `PL2`, `PL3`. **NOTE:** If `cache_disk_category` is set to `cloud_essd`, `performance_level` is required.
        /// </summary>
        [Input("performanceLevel")]
        public Input<string>? PerformanceLevel { get; set; }

        /// <summary>
        /// The status of the Gateway Cache Disk.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        public GatewayCacheDiskState()
        {
        }
        public static new GatewayCacheDiskState Empty => new GatewayCacheDiskState();
    }
}
