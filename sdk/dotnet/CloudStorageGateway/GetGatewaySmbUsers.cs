// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudStorageGateway
{
    public static class GetGatewaySmbUsers
    {
        /// <summary>
        /// This data source provides the Cloud Storage Gateway Gateway SMB Users of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.142.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultNetworks = Output.Create(AliCloud.Vpc.GetNetworks.InvokeAsync(new AliCloud.Vpc.GetNetworksArgs
        ///         {
        ///             NameRegex = "default-NODELETING",
        ///         }));
        ///         var defaultSwitches = defaultNetworks.Apply(defaultNetworks =&gt; Output.Create(AliCloud.Vpc.GetSwitches.InvokeAsync(new AliCloud.Vpc.GetSwitchesArgs
        ///         {
        ///             VpcId = defaultNetworks.Ids?[0],
        ///         })));
        ///         var example = new AliCloud.CloudStorageGateway.StorageBundle("example", new AliCloud.CloudStorageGateway.StorageBundleArgs
        ///         {
        ///             StorageBundleName = "example_value",
        ///         });
        ///         var defaultGateway = new AliCloud.CloudStorageGateway.Gateway("defaultGateway", new AliCloud.CloudStorageGateway.GatewayArgs
        ///         {
        ///             Description = "tf-acctestDesalone",
        ///             GatewayClass = "Standard",
        ///             Type = "File",
        ///             PaymentType = "PayAsYouGo",
        ///             VswitchId = defaultSwitches.Apply(defaultSwitches =&gt; defaultSwitches.Ids?[0]),
        ///             ReleaseAfterExpiration = false,
        ///             PublicNetworkBandwidth = 40,
        ///             StorageBundleId = example.Id,
        ///             Location = "Cloud",
        ///             GatewayName = "example_value",
        ///         });
        ///         var defaultGatewaySmbUser = new AliCloud.CloudStorageGateway.GatewaySmbUser("defaultGatewaySmbUser", new AliCloud.CloudStorageGateway.GatewaySmbUserArgs
        ///         {
        ///             Username = "your_username",
        ///             Password = "password",
        ///             GatewayId = defaultGateway.Id,
        ///         });
        ///         var ids = AliCloud.CloudStorageGateway.GetGatewaySmbUsers.Invoke(new AliCloud.CloudStorageGateway.GetGatewaySmbUsersInvokeArgs
        ///         {
        ///             GatewayId = defaultGateway.Id,
        ///             Ids = 
        ///             {
        ///                 defaultGatewaySmbUser.Id,
        ///             },
        ///         });
        ///         this.CloudStorageGatewayGatewaySmbUserId1 = ids.Apply(ids =&gt; ids.Users?[0]?.Id);
        ///     }
        /// 
        ///     [Output("cloudStorageGatewayGatewaySmbUserId1")]
        ///     public Output&lt;string&gt; CloudStorageGatewayGatewaySmbUserId1 { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGatewaySmbUsersResult> InvokeAsync(GetGatewaySmbUsersArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGatewaySmbUsersResult>("alicloud:cloudstoragegateway/getGatewaySmbUsers:getGatewaySmbUsers", args ?? new GetGatewaySmbUsersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Cloud Storage Gateway Gateway SMB Users of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.142.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultNetworks = Output.Create(AliCloud.Vpc.GetNetworks.InvokeAsync(new AliCloud.Vpc.GetNetworksArgs
        ///         {
        ///             NameRegex = "default-NODELETING",
        ///         }));
        ///         var defaultSwitches = defaultNetworks.Apply(defaultNetworks =&gt; Output.Create(AliCloud.Vpc.GetSwitches.InvokeAsync(new AliCloud.Vpc.GetSwitchesArgs
        ///         {
        ///             VpcId = defaultNetworks.Ids?[0],
        ///         })));
        ///         var example = new AliCloud.CloudStorageGateway.StorageBundle("example", new AliCloud.CloudStorageGateway.StorageBundleArgs
        ///         {
        ///             StorageBundleName = "example_value",
        ///         });
        ///         var defaultGateway = new AliCloud.CloudStorageGateway.Gateway("defaultGateway", new AliCloud.CloudStorageGateway.GatewayArgs
        ///         {
        ///             Description = "tf-acctestDesalone",
        ///             GatewayClass = "Standard",
        ///             Type = "File",
        ///             PaymentType = "PayAsYouGo",
        ///             VswitchId = defaultSwitches.Apply(defaultSwitches =&gt; defaultSwitches.Ids?[0]),
        ///             ReleaseAfterExpiration = false,
        ///             PublicNetworkBandwidth = 40,
        ///             StorageBundleId = example.Id,
        ///             Location = "Cloud",
        ///             GatewayName = "example_value",
        ///         });
        ///         var defaultGatewaySmbUser = new AliCloud.CloudStorageGateway.GatewaySmbUser("defaultGatewaySmbUser", new AliCloud.CloudStorageGateway.GatewaySmbUserArgs
        ///         {
        ///             Username = "your_username",
        ///             Password = "password",
        ///             GatewayId = defaultGateway.Id,
        ///         });
        ///         var ids = AliCloud.CloudStorageGateway.GetGatewaySmbUsers.Invoke(new AliCloud.CloudStorageGateway.GetGatewaySmbUsersInvokeArgs
        ///         {
        ///             GatewayId = defaultGateway.Id,
        ///             Ids = 
        ///             {
        ///                 defaultGatewaySmbUser.Id,
        ///             },
        ///         });
        ///         this.CloudStorageGatewayGatewaySmbUserId1 = ids.Apply(ids =&gt; ids.Users?[0]?.Id);
        ///     }
        /// 
        ///     [Output("cloudStorageGatewayGatewaySmbUserId1")]
        ///     public Output&lt;string&gt; CloudStorageGatewayGatewaySmbUserId1 { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGatewaySmbUsersResult> Invoke(GetGatewaySmbUsersInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGatewaySmbUsersResult>("alicloud:cloudstoragegateway/getGatewaySmbUsers:getGatewaySmbUsers", args ?? new GetGatewaySmbUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewaySmbUsersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Gateway ID.
        /// </summary>
        [Input("gatewayId", required: true)]
        public string GatewayId { get; set; } = null!;

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Gateway SMB User IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Gateway SMB username.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetGatewaySmbUsersArgs()
        {
        }
    }

    public sealed class GetGatewaySmbUsersInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Gateway ID.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Gateway SMB User IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Gateway SMB username.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetGatewaySmbUsersInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGatewaySmbUsersResult
    {
        public readonly string GatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        public readonly ImmutableArray<Outputs.GetGatewaySmbUsersUserResult> Users;

        [OutputConstructor]
        private GetGatewaySmbUsersResult(
            string gatewayId,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetGatewaySmbUsersUserResult> users)
        {
            GatewayId = gatewayId;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Users = users;
        }
    }
}
