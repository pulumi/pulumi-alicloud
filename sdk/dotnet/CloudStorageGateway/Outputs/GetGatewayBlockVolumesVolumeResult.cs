// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CloudStorageGateway.Outputs
{

    [OutputType]
    public sealed class GetGatewayBlockVolumesVolumeResult
    {
        /// <summary>
        /// The IP ADDRESS.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// The Block volume set mode to cache mode. Valid values: `Cache`, `WriteThrough`.
        /// </summary>
        public readonly string CacheMode;
        /// <summary>
        /// Whether to enable iSCSI access of CHAP authentication, which currently supports both CHAP inbound authentication.  Default value: `False`.
        /// </summary>
        public readonly bool ChapEnabled;
        /// <summary>
        /// The Inbound CHAP user.**NOTE:** When the `ChapEnabled` is  `True` is,The `ChapInPassword` is valid.
        /// </summary>
        public readonly string ChapInUser;
        /// <summary>
        /// The Block volume storage allocation unit.  Valid values: `8192`, `16384`, `32768`, `65536`, `131072`. Default value: `32768`. Unit: `Byte`.
        /// </summary>
        public readonly int ChunkSize;
        /// <summary>
        /// The cache disk ID.
        /// </summary>
        public readonly string DiskId;
        /// <summary>
        /// The cache disk type.
        /// </summary>
        public readonly string DiskType;
        /// <summary>
        /// Whether to enable Volume.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The Block volume name.  The name must be 1 to 32 characters in length, and can contain lowercase letters, numbers.
        /// </summary>
        public readonly string GatewayBlockVolumeName;
        /// <summary>
        /// The Gateway ID.
        /// </summary>
        public readonly string GatewayId;
        /// <summary>
        /// The ID of the Gateway Block Volume. The value formats as `&lt;gateway_id&gt;:&lt;index_id&gt;`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the index.
        /// </summary>
        public readonly string IndexId;
        /// <summary>
        /// CThe Cache disk to local path. **NOTE:**  When the `CacheMode` is  `Cache` is,The `ChapInPassword` is valid.
        /// </summary>
        public readonly string LocalPath;
        /// <summary>
        /// The Lun identifier.
        /// </summary>
        public readonly int LunId;
        /// <summary>
        /// The name of the OSS Bucket.
        /// </summary>
        public readonly string OssBucketName;
        /// <summary>
        /// Whether to enable SSL access your OSS Buckets. Default value: `True`.
        /// </summary>
        public readonly bool OssBucketSsl;
        /// <summary>
        /// The endpoint of the OSS Bucket.
        /// </summary>
        public readonly string OssEndpoint;
        /// <summary>
        /// The Port.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The Protocol.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The Volume size.
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// The Buffer status.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The status of volume.
        /// </summary>
        public readonly int Status;
        /// <summary>
        /// The target.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// The total amount of downloaded data. Unit: `B`.
        /// </summary>
        public readonly int TotalDownload;
        /// <summary>
        /// The total amount of uploaded data. Unit: `B`.
        /// </summary>
        public readonly int TotalUpload;
        public readonly int VolumeState;

        [OutputConstructor]
        private GetGatewayBlockVolumesVolumeResult(
            string address,

            string cacheMode,

            bool chapEnabled,

            string chapInUser,

            int chunkSize,

            string diskId,

            string diskType,

            bool enabled,

            string gatewayBlockVolumeName,

            string gatewayId,

            string id,

            string indexId,

            string localPath,

            int lunId,

            string ossBucketName,

            bool ossBucketSsl,

            string ossEndpoint,

            int port,

            string protocol,

            int size,

            string state,

            int status,

            string target,

            int totalDownload,

            int totalUpload,

            int volumeState)
        {
            Address = address;
            CacheMode = cacheMode;
            ChapEnabled = chapEnabled;
            ChapInUser = chapInUser;
            ChunkSize = chunkSize;
            DiskId = diskId;
            DiskType = diskType;
            Enabled = enabled;
            GatewayBlockVolumeName = gatewayBlockVolumeName;
            GatewayId = gatewayId;
            Id = id;
            IndexId = indexId;
            LocalPath = localPath;
            LunId = lunId;
            OssBucketName = ossBucketName;
            OssBucketSsl = ossBucketSsl;
            OssEndpoint = ossEndpoint;
            Port = port;
            Protocol = protocol;
            Size = size;
            State = state;
            Status = status;
            Target = target;
            TotalDownload = totalDownload;
            TotalUpload = totalUpload;
            VolumeState = volumeState;
        }
    }
}
