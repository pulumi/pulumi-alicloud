// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ehpc.Outputs
{

    [OutputType]
    public sealed class GetClustersClusterResult
    {
        /// <summary>
        /// The server type of the account.
        /// </summary>
        public readonly string AccountType;
        public readonly ImmutableArray<Outputs.GetClustersClusterApplicationResult> Applications;
        /// <summary>
        /// The version number of the client used by the cluster.
        /// </summary>
        public readonly string ClientVersion;
        public readonly string ClusterId;
        public readonly string ClusterName;
        public readonly int ComputeCount;
        public readonly string ComputeInstanceType;
        public readonly string CreateTime;
        public readonly string DeployMode;
        public readonly string Description;
        public readonly bool HaEnable;
        public readonly string Id;
        public readonly string ImageId;
        public readonly string ImageOwnerAlias;
        public readonly int LoginCount;
        public readonly string LoginInstanceType;
        public readonly int ManagerCount;
        public readonly string ManagerInstanceType;
        public readonly string OsTag;
        public readonly ImmutableArray<Outputs.GetClustersClusterPostInstallScriptResult> PostInstallScripts;
        public readonly string RemoteDirectory;
        public readonly string SccClusterId;
        public readonly string SchedulerType;
        public readonly string SecurityGroupId;
        /// <summary>
        /// The status of the resource. Valid values:
        /// </summary>
        public readonly string Status;
        public readonly string VolumeId;
        public readonly string VolumeMountpoint;
        public readonly string VolumeProtocol;
        public readonly string VolumeType;
        public readonly string VpcId;
        public readonly string VswitchId;
        public readonly string ZoneId;

        [OutputConstructor]
        private GetClustersClusterResult(
            string accountType,

            ImmutableArray<Outputs.GetClustersClusterApplicationResult> applications,

            string clientVersion,

            string clusterId,

            string clusterName,

            int computeCount,

            string computeInstanceType,

            string createTime,

            string deployMode,

            string description,

            bool haEnable,

            string id,

            string imageId,

            string imageOwnerAlias,

            int loginCount,

            string loginInstanceType,

            int managerCount,

            string managerInstanceType,

            string osTag,

            ImmutableArray<Outputs.GetClustersClusterPostInstallScriptResult> postInstallScripts,

            string remoteDirectory,

            string sccClusterId,

            string schedulerType,

            string securityGroupId,

            string status,

            string volumeId,

            string volumeMountpoint,

            string volumeProtocol,

            string volumeType,

            string vpcId,

            string vswitchId,

            string zoneId)
        {
            AccountType = accountType;
            Applications = applications;
            ClientVersion = clientVersion;
            ClusterId = clusterId;
            ClusterName = clusterName;
            ComputeCount = computeCount;
            ComputeInstanceType = computeInstanceType;
            CreateTime = createTime;
            DeployMode = deployMode;
            Description = description;
            HaEnable = haEnable;
            Id = id;
            ImageId = imageId;
            ImageOwnerAlias = imageOwnerAlias;
            LoginCount = loginCount;
            LoginInstanceType = loginInstanceType;
            ManagerCount = managerCount;
            ManagerInstanceType = managerInstanceType;
            OsTag = osTag;
            PostInstallScripts = postInstallScripts;
            RemoteDirectory = remoteDirectory;
            SccClusterId = sccClusterId;
            SchedulerType = schedulerType;
            SecurityGroupId = securityGroupId;
            Status = status;
            VolumeId = volumeId;
            VolumeMountpoint = volumeMountpoint;
            VolumeProtocol = volumeProtocol;
            VolumeType = volumeType;
            VpcId = vpcId;
            VswitchId = vswitchId;
            ZoneId = zoneId;
        }
    }
}
