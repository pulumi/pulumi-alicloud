// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cassandra.Outputs
{

    [OutputType]
    public sealed class GetClustersClusterResult
    {
        /// <summary>
        /// The ID of the Cassandra cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The name of the Cassandra cluster.
        /// </summary>
        public readonly string ClusterName;
        public readonly string CreatedTime;
        /// <summary>
        /// The count of data centers
        /// </summary>
        public readonly int DataCenterCount;
        /// <summary>
        /// The expire time of the cluster.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// The ID of the Cassandra cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The lock mode of the cluster.
        /// </summary>
        public readonly string LockMode;
        /// <summary>
        /// The major version of the cluster.
        /// </summary>
        public readonly string MajorVersion;
        /// <summary>
        /// The minor version of the cluster.
        /// </summary>
        public readonly string MinorVersion;
        /// <summary>
        /// Billing method. Value options are `Subscription` for Pay-As-You-Go and `PayAsYouGo` for yearly or monthly subscription.
        /// </summary>
        public readonly string PayType;
        /// <summary>
        /// Status of the cluster.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetClustersClusterResult(
            string clusterId,

            string clusterName,

            string createdTime,

            int dataCenterCount,

            string expireTime,

            string id,

            string lockMode,

            string majorVersion,

            string minorVersion,

            string payType,

            string status,

            ImmutableDictionary<string, string>? tags)
        {
            ClusterId = clusterId;
            ClusterName = clusterName;
            CreatedTime = createdTime;
            DataCenterCount = dataCenterCount;
            ExpireTime = expireTime;
            Id = id;
            LockMode = lockMode;
            MajorVersion = majorVersion;
            MinorVersion = minorVersion;
            PayType = payType;
            Status = status;
            Tags = tags;
        }
    }
}
