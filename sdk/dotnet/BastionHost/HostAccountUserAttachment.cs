// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.BastionHost
{
    /// <summary>
    /// Provides a Bastion Host Host Account Attachment resource to add list host accounts into one user.
    /// 
    /// &gt; **NOTE:** Available since v1.135.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var defaultZones = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var defaultNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
    ///     {
    ///         NameRegex = "^default-NODELETING$",
    ///         CidrBlock = "10.4.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
    ///     {
    ///         CidrBlock = "10.4.0.0/24",
    ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new()
    ///     {
    ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.BastionHost.Instance("defaultInstance", new()
    ///     {
    ///         Description = name,
    ///         LicenseCode = "bhah_ent_50_asset",
    ///         PlanCode = "cloudbastion",
    ///         Storage = "5",
    ///         Bandwidth = "5",
    ///         Period = 1,
    ///         VswitchId = defaultSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
    ///         SecurityGroupIds = new[]
    ///         {
    ///             defaultSecurityGroup.Id,
    ///         },
    ///     });
    /// 
    ///     var defaultHost = new AliCloud.BastionHost.Host("defaultHost", new()
    ///     {
    ///         InstanceId = defaultInstance.Id,
    ///         HostName = name,
    ///         ActiveAddressType = "Private",
    ///         HostPrivateAddress = "172.16.0.10",
    ///         OsType = "Linux",
    ///         Source = "Local",
    ///     });
    /// 
    ///     var defaultHostAccount = new AliCloud.BastionHost.HostAccount("defaultHostAccount", new()
    ///     {
    ///         HostAccountName = name,
    ///         HostId = defaultHost.HostId,
    ///         InstanceId = defaultHost.InstanceId,
    ///         ProtocolName = "SSH",
    ///         Password = "YourPassword12345",
    ///     });
    /// 
    ///     var localUser = new AliCloud.BastionHost.User("localUser", new()
    ///     {
    ///         InstanceId = defaultInstance.Id,
    ///         MobileCountryCode = "CN",
    ///         Mobile = "13312345678",
    ///         Password = "YourPassword-123",
    ///         Source = "Local",
    ///         UserName = $"{name}_local_user",
    ///     });
    /// 
    ///     var defaultHostAccountUserAttachment = new AliCloud.BastionHost.HostAccountUserAttachment("defaultHostAccountUserAttachment", new()
    ///     {
    ///         InstanceId = defaultHost.InstanceId,
    ///         UserId = localUser.UserId,
    ///         HostId = defaultHost.HostId,
    ///         HostAccountIds = new[]
    ///         {
    ///             defaultHostAccount.HostAccountId,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Bastion Host Host Account can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment example &lt;instance_id&gt;:&lt;user_id&gt;:&lt;host_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment")]
    public partial class HostAccountUserAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list IDs of the host account.
        /// </summary>
        [Output("hostAccountIds")]
        public Output<ImmutableArray<string>> HostAccountIds { get; private set; } = null!;

        /// <summary>
        /// The ID of the host.
        /// </summary>
        [Output("hostId")]
        public Output<string> HostId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a HostAccountUserAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostAccountUserAttachment(string name, HostAccountUserAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment", name, args ?? new HostAccountUserAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostAccountUserAttachment(string name, Input<string> id, HostAccountUserAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostAccountUserAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostAccountUserAttachment Get(string name, Input<string> id, HostAccountUserAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new HostAccountUserAttachment(name, id, state, options);
        }
    }

    public sealed class HostAccountUserAttachmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("hostAccountIds", required: true)]
        private InputList<string>? _hostAccountIds;

        /// <summary>
        /// A list IDs of the host account.
        /// </summary>
        public InputList<string> HostAccountIds
        {
            get => _hostAccountIds ?? (_hostAccountIds = new InputList<string>());
            set => _hostAccountIds = value;
        }

        /// <summary>
        /// The ID of the host.
        /// </summary>
        [Input("hostId", required: true)]
        public Input<string> HostId { get; set; } = null!;

        /// <summary>
        /// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public HostAccountUserAttachmentArgs()
        {
        }
        public static new HostAccountUserAttachmentArgs Empty => new HostAccountUserAttachmentArgs();
    }

    public sealed class HostAccountUserAttachmentState : global::Pulumi.ResourceArgs
    {
        [Input("hostAccountIds")]
        private InputList<string>? _hostAccountIds;

        /// <summary>
        /// A list IDs of the host account.
        /// </summary>
        public InputList<string> HostAccountIds
        {
            get => _hostAccountIds ?? (_hostAccountIds = new InputList<string>());
            set => _hostAccountIds = value;
        }

        /// <summary>
        /// The ID of the host.
        /// </summary>
        [Input("hostId")]
        public Input<string>? HostId { get; set; }

        /// <summary>
        /// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public HostAccountUserAttachmentState()
        {
        }
        public static new HostAccountUserAttachmentState Empty => new HostAccountUserAttachmentState();
    }
}
