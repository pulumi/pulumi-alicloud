// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Message
{
    public static class GetServiceTopics
    {
        /// <summary>
        /// This data source provides the Message Notification Service Topics of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.188.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Message.GetServiceTopics.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var name = AliCloud.Message.GetServiceTopics.Invoke(new()
        ///     {
        ///         TopicName = "tf-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["topicId1"] = ids.Apply(getServiceTopicsResult =&gt; getServiceTopicsResult.Topics[0]?.Id),
        ///         ["topicId2"] = name.Apply(getServiceTopicsResult =&gt; getServiceTopicsResult.Topics[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceTopicsResult> InvokeAsync(GetServiceTopicsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceTopicsResult>("alicloud:message/getServiceTopics:getServiceTopics", args ?? new GetServiceTopicsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Message Notification Service Topics of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.188.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Message.GetServiceTopics.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var name = AliCloud.Message.GetServiceTopics.Invoke(new()
        ///     {
        ///         TopicName = "tf-example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["topicId1"] = ids.Apply(getServiceTopicsResult =&gt; getServiceTopicsResult.Topics[0]?.Id),
        ///         ["topicId2"] = name.Apply(getServiceTopicsResult =&gt; getServiceTopicsResult.Topics[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceTopicsResult> Invoke(GetServiceTopicsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceTopicsResult>("alicloud:message/getServiceTopics:getServiceTopics", args ?? new GetServiceTopicsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceTopicsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Topic IDs. Its element value is same as Topic Name.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Topic name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        [Input("pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// The name of the topic.
        /// </summary>
        [Input("topicName")]
        public string? TopicName { get; set; }

        public GetServiceTopicsArgs()
        {
        }
        public static new GetServiceTopicsArgs Empty => new GetServiceTopicsArgs();
    }

    public sealed class GetServiceTopicsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Topic IDs. Its element value is same as Topic Name.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Topic name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        /// <summary>
        /// The name of the topic.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public GetServiceTopicsInvokeArgs()
        {
        }
        public static new GetServiceTopicsInvokeArgs Empty => new GetServiceTopicsInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceTopicsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Topic names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;
        /// <summary>
        /// The name of the topic.
        /// </summary>
        public readonly string? TopicName;
        /// <summary>
        /// A list of Topics. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceTopicsTopicResult> Topics;

        [OutputConstructor]
        private GetServiceTopicsResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            int? pageNumber,

            int? pageSize,

            string? topicName,

            ImmutableArray<Outputs.GetServiceTopicsTopicResult> topics)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
            TopicName = topicName;
            Topics = topics;
        }
    }
}
