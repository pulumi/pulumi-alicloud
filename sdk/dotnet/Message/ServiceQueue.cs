// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Message
{
    /// <summary>
    /// Provides a Message Notification Service Queue resource.
    /// 
    /// For information about Message Notification Service Queue and how to use it, see [What is Queue](https://www.alibabacloud.com/help/en/message-service/latest/createqueue).
    /// 
    /// &gt; **NOTE:** Available in v1.188.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var queue = new AliCloud.Message.ServiceQueue("queue", new()
    ///     {
    ///         DelaySeconds = 60478,
    ///         LoggingEnabled = true,
    ///         MaximumMessageSize = 12357,
    ///         MessageRetentionPeriod = 256000,
    ///         PollingWaitSeconds = 3,
    ///         QueueName = "tf-example-value",
    ///         VisibilityTimeout = 30,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Message Notification Service Queue can be imported using the id or queue_name, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:message/serviceQueue:ServiceQueue example &lt;queue_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:message/serviceQueue:ServiceQueue")]
    public partial class ServiceQueue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The delay period after which a message sent to the queue can be consumed. Unit: seconds. Valid values: 0-604800 seconds. Default value: 0.
        /// </summary>
        [Output("delaySeconds")]
        public Output<int> DelaySeconds { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable the log management feature. Default value: false. Valid values:
        /// </summary>
        [Output("loggingEnabled")]
        public Output<bool?> LoggingEnabled { get; private set; } = null!;

        /// <summary>
        /// The maximum size of a message body that can be sent to the queue. Unit: bytes. Valid value range: 1024-65536. Default value: 65536.
        /// </summary>
        [Output("maximumMessageSize")]
        public Output<int> MaximumMessageSize { get; private set; } = null!;

        /// <summary>
        /// The maximum period for which a message can be retained in the queue. After the specified period, the message is deleted no matter whether the message is consumed. Unit: seconds. Valid values: 60-604800. Default value: 345600.
        /// </summary>
        [Output("messageRetentionPeriod")]
        public Output<int> MessageRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The maximum period for which a ReceiveMessage request waits if no message is available in the queue. Unit: seconds. Valid values: 0-30. Default value: 0.
        /// </summary>
        [Output("pollingWaitSeconds")]
        public Output<int> PollingWaitSeconds { get; private set; } = null!;

        /// <summary>
        /// Two queues on a single account in the same region cannot have the same name. A queue name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 120 characters.
        /// </summary>
        [Output("queueName")]
        public Output<string> QueueName { get; private set; } = null!;

        /// <summary>
        /// The invisibility period for which the received message remains the Inactive state. Unit: seconds. Valid values: 1-43200. Default value: 30.
        /// </summary>
        [Output("visibilityTimeout")]
        public Output<int> VisibilityTimeout { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceQueue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceQueue(string name, ServiceQueueArgs args, CustomResourceOptions? options = null)
            : base("alicloud:message/serviceQueue:ServiceQueue", name, args ?? new ServiceQueueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceQueue(string name, Input<string> id, ServiceQueueState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:message/serviceQueue:ServiceQueue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceQueue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceQueue Get(string name, Input<string> id, ServiceQueueState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceQueue(name, id, state, options);
        }
    }

    public sealed class ServiceQueueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The delay period after which a message sent to the queue can be consumed. Unit: seconds. Valid values: 0-604800 seconds. Default value: 0.
        /// </summary>
        [Input("delaySeconds")]
        public Input<int>? DelaySeconds { get; set; }

        /// <summary>
        /// Specifies whether to enable the log management feature. Default value: false. Valid values:
        /// </summary>
        [Input("loggingEnabled")]
        public Input<bool>? LoggingEnabled { get; set; }

        /// <summary>
        /// The maximum size of a message body that can be sent to the queue. Unit: bytes. Valid value range: 1024-65536. Default value: 65536.
        /// </summary>
        [Input("maximumMessageSize")]
        public Input<int>? MaximumMessageSize { get; set; }

        /// <summary>
        /// The maximum period for which a message can be retained in the queue. After the specified period, the message is deleted no matter whether the message is consumed. Unit: seconds. Valid values: 60-604800. Default value: 345600.
        /// </summary>
        [Input("messageRetentionPeriod")]
        public Input<int>? MessageRetentionPeriod { get; set; }

        /// <summary>
        /// The maximum period for which a ReceiveMessage request waits if no message is available in the queue. Unit: seconds. Valid values: 0-30. Default value: 0.
        /// </summary>
        [Input("pollingWaitSeconds")]
        public Input<int>? PollingWaitSeconds { get; set; }

        /// <summary>
        /// Two queues on a single account in the same region cannot have the same name. A queue name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 120 characters.
        /// </summary>
        [Input("queueName", required: true)]
        public Input<string> QueueName { get; set; } = null!;

        /// <summary>
        /// The invisibility period for which the received message remains the Inactive state. Unit: seconds. Valid values: 1-43200. Default value: 30.
        /// </summary>
        [Input("visibilityTimeout")]
        public Input<int>? VisibilityTimeout { get; set; }

        public ServiceQueueArgs()
        {
        }
        public static new ServiceQueueArgs Empty => new ServiceQueueArgs();
    }

    public sealed class ServiceQueueState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The delay period after which a message sent to the queue can be consumed. Unit: seconds. Valid values: 0-604800 seconds. Default value: 0.
        /// </summary>
        [Input("delaySeconds")]
        public Input<int>? DelaySeconds { get; set; }

        /// <summary>
        /// Specifies whether to enable the log management feature. Default value: false. Valid values:
        /// </summary>
        [Input("loggingEnabled")]
        public Input<bool>? LoggingEnabled { get; set; }

        /// <summary>
        /// The maximum size of a message body that can be sent to the queue. Unit: bytes. Valid value range: 1024-65536. Default value: 65536.
        /// </summary>
        [Input("maximumMessageSize")]
        public Input<int>? MaximumMessageSize { get; set; }

        /// <summary>
        /// The maximum period for which a message can be retained in the queue. After the specified period, the message is deleted no matter whether the message is consumed. Unit: seconds. Valid values: 60-604800. Default value: 345600.
        /// </summary>
        [Input("messageRetentionPeriod")]
        public Input<int>? MessageRetentionPeriod { get; set; }

        /// <summary>
        /// The maximum period for which a ReceiveMessage request waits if no message is available in the queue. Unit: seconds. Valid values: 0-30. Default value: 0.
        /// </summary>
        [Input("pollingWaitSeconds")]
        public Input<int>? PollingWaitSeconds { get; set; }

        /// <summary>
        /// Two queues on a single account in the same region cannot have the same name. A queue name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 120 characters.
        /// </summary>
        [Input("queueName")]
        public Input<string>? QueueName { get; set; }

        /// <summary>
        /// The invisibility period for which the received message remains the Inactive state. Unit: seconds. Valid values: 1-43200. Default value: 30.
        /// </summary>
        [Input("visibilityTimeout")]
        public Input<int>? VisibilityTimeout { get; set; }

        public ServiceQueueState()
        {
        }
        public static new ServiceQueueState Empty => new ServiceQueueState();
    }
}
