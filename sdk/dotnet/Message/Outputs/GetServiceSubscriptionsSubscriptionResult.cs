// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Message.Outputs
{

    [OutputType]
    public sealed class GetServiceSubscriptionsSubscriptionResult
    {
        /// <summary>
        /// The time when the subscription was created. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.
        /// </summary>
        public readonly int CreateTime;
        /// <summary>
        /// The endpoint to which the messages are pushed.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The tag that is used to filter messages. Only the messages that are attached with the specified tag can be pushed.
        /// </summary>
        public readonly string FilterTag;
        /// <summary>
        /// The id of the Subscription.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The time when the subscription was last modified. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.
        /// </summary>
        public readonly int LastModifyTime;
        /// <summary>
        /// The content format of the messages that are pushed to the endpoint.
        /// </summary>
        public readonly string NotifyContentFormat;
        /// <summary>
        /// The retry policy that is applied if an error occurs when MNS pushes messages to the endpoint.
        /// </summary>
        public readonly string NotifyStrategy;
        /// <summary>
        /// The name of the subscription.
        /// </summary>
        public readonly string SubscriptionName;
        /// <summary>
        /// The url of the subscription.
        /// </summary>
        public readonly string SubscriptionUrl;
        /// <summary>
        /// The name of the topic.
        /// </summary>
        public readonly string TopicName;
        /// <summary>
        /// The account ID of the topic owner.
        /// </summary>
        public readonly string TopicOwner;

        [OutputConstructor]
        private GetServiceSubscriptionsSubscriptionResult(
            int createTime,

            string endpoint,

            string filterTag,

            string id,

            int lastModifyTime,

            string notifyContentFormat,

            string notifyStrategy,

            string subscriptionName,

            string subscriptionUrl,

            string topicName,

            string topicOwner)
        {
            CreateTime = createTime;
            Endpoint = endpoint;
            FilterTag = filterTag;
            Id = id;
            LastModifyTime = lastModifyTime;
            NotifyContentFormat = notifyContentFormat;
            NotifyStrategy = notifyStrategy;
            SubscriptionName = subscriptionName;
            SubscriptionUrl = subscriptionUrl;
            TopicName = topicName;
            TopicOwner = topicOwner;
        }
    }
}
