// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cfg
{
    /// <summary>
    /// Provides a Config Remediation resource.
    /// 
    /// For information about Config Remediation and how to use it, see [What is Remediation](https://www.alibabacloud.com/help/en/cloud-config/latest/api-config-2020-09-07-createremediation).
    /// 
    /// &gt; **NOTE:** Available since v1.204.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example-oss";
    ///     var defaultRegions = AliCloud.GetRegions.Invoke(new()
    ///     {
    ///         Current = true,
    ///     });
    /// 
    ///     var defaultBucket = new AliCloud.Oss.Bucket("defaultBucket", new()
    ///     {
    ///         BucketName = name,
    ///         Acl = "public-read",
    ///         Tags = 
    ///         {
    ///             { "For", "example" },
    ///         },
    ///     });
    /// 
    ///     var defaultRule = new AliCloud.Cfg.Rule("defaultRule", new()
    ///     {
    ///         Description = "If the ACL policy of the OSS bucket denies read access from the Internet, the configuration is considered compliant.",
    ///         SourceOwner = "ALIYUN",
    ///         SourceIdentifier = "oss-bucket-public-read-prohibited",
    ///         RiskLevel = 1,
    ///         TagKeyScope = "For",
    ///         TagValueScope = "example",
    ///         RegionIdsScope = defaultRegions.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///         ConfigRuleTriggerTypes = "ConfigurationItemChangeNotification",
    ///         ResourceTypesScopes = new[]
    ///         {
    ///             "ACS::OSS::Bucket",
    ///         },
    ///         RuleName = "oss-bucket-public-read-prohibited",
    ///     });
    /// 
    ///     var defaultRemediation = new AliCloud.Cfg.Remediation("defaultRemediation", new()
    ///     {
    ///         ConfigRuleId = defaultRule.ConfigRuleId,
    ///         RemediationTemplateId = "ACS-OSS-PutBucketAcl",
    ///         RemediationSourceType = "ALIYUN",
    ///         InvokeType = "MANUAL_EXECUTION",
    ///         Params = Output.Tuple(defaultBucket.BucketName, defaultRegions).Apply(values =&gt;
    ///         {
    ///             var bucket = values.Item1;
    ///             var defaultRegions = values.Item2;
    ///             return $"{{\"bucketName\": \"{bucket}\", \"regionId\": \"{defaultRegions.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id)}\", \"permissionName\": \"private\"}}";
    ///         }),
    ///         RemediationType = "OOS",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Config Remediation can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cfg/remediation:Remediation example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cfg/remediation:Remediation")]
    public partial class Remediation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Rule ID.
        /// </summary>
        [Output("configRuleId")]
        public Output<string> ConfigRuleId { get; private set; } = null!;

        /// <summary>
        /// Execution type, valid values: `Manual`, `Automatic`.
        /// </summary>
        [Output("invokeType")]
        public Output<string> InvokeType { get; private set; } = null!;

        /// <summary>
        /// Remediation parameter.
        /// </summary>
        [Output("params")]
        public Output<string> Params { get; private set; } = null!;

        /// <summary>
        /// Remediation ID.
        /// </summary>
        [Output("remediationId")]
        public Output<string> RemediationId { get; private set; } = null!;

        /// <summary>
        /// Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
        /// </summary>
        [Output("remediationSourceType")]
        public Output<string> RemediationSourceType { get; private set; } = null!;

        /// <summary>
        /// Remediation template ID.
        /// </summary>
        [Output("remediationTemplateId")]
        public Output<string> RemediationTemplateId { get; private set; } = null!;

        /// <summary>
        /// Remediation type, valid values: `OOS`, `FC`.
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        [Output("remediationType")]
        public Output<string> RemediationType { get; private set; } = null!;


        /// <summary>
        /// Create a Remediation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Remediation(string name, RemediationArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cfg/remediation:Remediation", name, args ?? new RemediationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Remediation(string name, Input<string> id, RemediationState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cfg/remediation:Remediation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Remediation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Remediation Get(string name, Input<string> id, RemediationState? state = null, CustomResourceOptions? options = null)
        {
            return new Remediation(name, id, state, options);
        }
    }

    public sealed class RemediationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rule ID.
        /// </summary>
        [Input("configRuleId", required: true)]
        public Input<string> ConfigRuleId { get; set; } = null!;

        /// <summary>
        /// Execution type, valid values: `Manual`, `Automatic`.
        /// </summary>
        [Input("invokeType", required: true)]
        public Input<string> InvokeType { get; set; } = null!;

        /// <summary>
        /// Remediation parameter.
        /// </summary>
        [Input("params", required: true)]
        public Input<string> Params { get; set; } = null!;

        /// <summary>
        /// Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
        /// </summary>
        [Input("remediationSourceType")]
        public Input<string>? RemediationSourceType { get; set; }

        /// <summary>
        /// Remediation template ID.
        /// </summary>
        [Input("remediationTemplateId", required: true)]
        public Input<string> RemediationTemplateId { get; set; } = null!;

        /// <summary>
        /// Remediation type, valid values: `OOS`, `FC`.
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        [Input("remediationType", required: true)]
        public Input<string> RemediationType { get; set; } = null!;

        public RemediationArgs()
        {
        }
        public static new RemediationArgs Empty => new RemediationArgs();
    }

    public sealed class RemediationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rule ID.
        /// </summary>
        [Input("configRuleId")]
        public Input<string>? ConfigRuleId { get; set; }

        /// <summary>
        /// Execution type, valid values: `Manual`, `Automatic`.
        /// </summary>
        [Input("invokeType")]
        public Input<string>? InvokeType { get; set; }

        /// <summary>
        /// Remediation parameter.
        /// </summary>
        [Input("params")]
        public Input<string>? Params { get; set; }

        /// <summary>
        /// Remediation ID.
        /// </summary>
        [Input("remediationId")]
        public Input<string>? RemediationId { get; set; }

        /// <summary>
        /// Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
        /// </summary>
        [Input("remediationSourceType")]
        public Input<string>? RemediationSourceType { get; set; }

        /// <summary>
        /// Remediation template ID.
        /// </summary>
        [Input("remediationTemplateId")]
        public Input<string>? RemediationTemplateId { get; set; }

        /// <summary>
        /// Remediation type, valid values: `OOS`, `FC`.
        /// 
        /// The following arguments will be discarded. Please use new fields as soon as possible:
        /// </summary>
        [Input("remediationType")]
        public Input<string>? RemediationType { get; set; }

        public RemediationState()
        {
        }
        public static new RemediationState Empty => new RemediationState();
    }
}
