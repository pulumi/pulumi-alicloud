// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cfg.Outputs
{

    [OutputType]
    public sealed class GetAggregateDeliveriesDeliveryResult
    {
        /// <summary>
        /// The Aliyun User Id.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The ID of the Aggregator.
        /// </summary>
        public readonly string AggregatorId;
        /// <summary>
        /// Open or close delivery configuration change history.
        /// </summary>
        public readonly bool ConfigurationItemChangeNotification;
        /// <summary>
        /// Open or close timed snapshot of shipping resources.
        /// </summary>
        public readonly bool ConfigurationSnapshot;
        /// <summary>
        /// The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
        /// </summary>
        public readonly string DeliveryChannelAssumeRoleArn;
        /// <summary>
        /// The rule attached to the delivery method.
        /// </summary>
        public readonly string DeliveryChannelCondition;
        /// <summary>
        /// The ID of the delivery method.
        /// </summary>
        public readonly string DeliveryChannelId;
        /// <summary>
        /// The name of the delivery method.
        /// </summary>
        public readonly string DeliveryChannelName;
        /// <summary>
        /// The ARN of the delivery destination.
        /// </summary>
        public readonly string DeliveryChannelTargetArn;
        /// <summary>
        /// The type of the delivery method.
        /// </summary>
        public readonly string DeliveryChannelType;
        /// <summary>
        /// The description of the delivery method.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the Aggregate Delivery.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Open or close non-compliance events of delivery resources.
        /// </summary>
        public readonly bool NonCompliantNotification;
        /// <summary>
        /// The oss ARN of the delivery channel when the value data oversized limit.
        /// </summary>
        public readonly string OversizedDataOssTargetArn;
        /// <summary>
        /// The status of the delivery method. Valid values: `0`: The delivery method is disabled. `1`: The delivery destination is enabled.
        /// </summary>
        public readonly int Status;

        [OutputConstructor]
        private GetAggregateDeliveriesDeliveryResult(
            string accountId,

            string aggregatorId,

            bool configurationItemChangeNotification,

            bool configurationSnapshot,

            string deliveryChannelAssumeRoleArn,

            string deliveryChannelCondition,

            string deliveryChannelId,

            string deliveryChannelName,

            string deliveryChannelTargetArn,

            string deliveryChannelType,

            string description,

            string id,

            bool nonCompliantNotification,

            string oversizedDataOssTargetArn,

            int status)
        {
            AccountId = accountId;
            AggregatorId = aggregatorId;
            ConfigurationItemChangeNotification = configurationItemChangeNotification;
            ConfigurationSnapshot = configurationSnapshot;
            DeliveryChannelAssumeRoleArn = deliveryChannelAssumeRoleArn;
            DeliveryChannelCondition = deliveryChannelCondition;
            DeliveryChannelId = deliveryChannelId;
            DeliveryChannelName = deliveryChannelName;
            DeliveryChannelTargetArn = deliveryChannelTargetArn;
            DeliveryChannelType = deliveryChannelType;
            Description = description;
            Id = id;
            NonCompliantNotification = nonCompliantNotification;
            OversizedDataOssTargetArn = oversizedDataOssTargetArn;
            Status = status;
        }
    }
}
