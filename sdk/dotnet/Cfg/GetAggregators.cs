// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cfg
{
    public static class GetAggregators
    {
        /// <summary>
        /// This data source provides the Config Aggregators of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.124.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(AliCloud.Cfg.GetAggregators.InvokeAsync(new AliCloud.Cfg.GetAggregatorsArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "ca-3ce2626622af0005****",
        ///             },
        ///             NameRegex = "the_resource_name",
        ///         }));
        ///         this.FirstConfigAggregatorId = example.Apply(example =&gt; example.Aggregators?[0]?.Id);
        ///     }
        /// 
        ///     [Output("firstConfigAggregatorId")]
        ///     public Output&lt;string&gt; FirstConfigAggregatorId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAggregatorsResult> InvokeAsync(GetAggregatorsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAggregatorsResult>("alicloud:cfg/getAggregators:getAggregators", args ?? new GetAggregatorsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Config Aggregators of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.124.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(AliCloud.Cfg.GetAggregators.InvokeAsync(new AliCloud.Cfg.GetAggregatorsArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "ca-3ce2626622af0005****",
        ///             },
        ///             NameRegex = "the_resource_name",
        ///         }));
        ///         this.FirstConfigAggregatorId = example.Apply(example =&gt; example.Aggregators?[0]?.Id);
        ///     }
        /// 
        ///     [Output("firstConfigAggregatorId")]
        ///     public Output&lt;string&gt; FirstConfigAggregatorId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAggregatorsResult> Invoke(GetAggregatorsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAggregatorsResult>("alicloud:cfg/getAggregators:getAggregators", args ?? new GetAggregatorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAggregatorsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of aggregator ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by aggregator name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of the resource. Valid Values:  `0`: creating `1`: normal `2`: deleting.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetAggregatorsArgs()
        {
        }
    }

    public sealed class GetAggregatorsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public Input<bool>? EnableDetails { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of aggregator ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by aggregator name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of the resource. Valid Values:  `0`: creating `1`: normal `2`: deleting.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetAggregatorsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAggregatorsResult
    {
        /// <summary>
        /// A list of config aggregators. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAggregatorsAggregatorResult> Aggregators;
        public readonly bool? EnableDetails;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Aggregator names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// The status of the resource.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetAggregatorsResult(
            ImmutableArray<Outputs.GetAggregatorsAggregatorResult> aggregators,

            bool? enableDetails,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? status)
        {
            Aggregators = aggregators;
            EnableDetails = enableDetails;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Status = status;
        }
    }
}
