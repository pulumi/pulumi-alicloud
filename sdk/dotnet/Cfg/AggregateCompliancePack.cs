// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cfg
{
    /// <summary>
    /// Provides a Cloud Config Aggregate Compliance Pack resource.
    /// 
    /// For information about Cloud Config Aggregate Compliance Pack and how to use it, see [What is Aggregate Compliance Pack](https://www.alibabacloud.com/help/en/cloud-config/latest/api-config-2020-09-07-createaggregatecompliancepack).
    /// 
    /// &gt; **NOTE:** Available since v1.124.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform_example";
    ///     var defaultAccounts = AliCloud.ResourceManager.GetAccounts.Invoke(new()
    ///     {
    ///         Status = "CreateSuccess",
    ///     });
    /// 
    ///     var defaultAggregator = new AliCloud.Cfg.Aggregator("defaultAggregator", new()
    ///     {
    ///         AggregatorAccounts = new[]
    ///         {
    ///             new AliCloud.Cfg.Inputs.AggregatorAggregatorAccountArgs
    ///             {
    ///                 AccountId = defaultAccounts.Apply(getAccountsResult =&gt; getAccountsResult.Accounts[0]?.AccountId),
    ///                 AccountName = defaultAccounts.Apply(getAccountsResult =&gt; getAccountsResult.Accounts[0]?.DisplayName),
    ///                 AccountType = "ResourceDirectory",
    ///             },
    ///         },
    ///         AggregatorName = name,
    ///         Description = name,
    ///         AggregatorType = "CUSTOM",
    ///     });
    /// 
    ///     var defaultAggregateConfigRule = new AliCloud.Cfg.AggregateConfigRule("defaultAggregateConfigRule", new()
    ///     {
    ///         AggregateConfigRuleName = "contains-tag",
    ///         AggregatorId = defaultAggregator.Id,
    ///         ConfigRuleTriggerTypes = "ConfigurationItemChangeNotification",
    ///         SourceOwner = "ALIYUN",
    ///         SourceIdentifier = "contains-tag",
    ///         RiskLevel = 1,
    ///         ResourceTypesScopes = new[]
    ///         {
    ///             "ACS::ECS::Instance",
    ///         },
    ///         InputParameters = 
    ///         {
    ///             { "key", "example" },
    ///             { "value", "example" },
    ///         },
    ///     });
    /// 
    ///     var defaultAggregateCompliancePack = new AliCloud.Cfg.AggregateCompliancePack("defaultAggregateCompliancePack", new()
    ///     {
    ///         AggregateCompliancePackName = name,
    ///         AggregatorId = defaultAggregator.Id,
    ///         Description = name,
    ///         RiskLevel = 1,
    ///         ConfigRuleIds = new[]
    ///         {
    ///             new AliCloud.Cfg.Inputs.AggregateCompliancePackConfigRuleIdArgs
    ///             {
    ///                 ConfigRuleId = defaultAggregateConfigRule.ConfigRuleId,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Config Aggregate Compliance Pack can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:cfg/aggregateCompliancePack:AggregateCompliancePack example &lt;aggregator_id&gt;:&lt;aggregator_compliance_pack_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cfg/aggregateCompliancePack:AggregateCompliancePack")]
    public partial class AggregateCompliancePack : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of compliance package name. **NOTE:** the `aggregate_compliance_pack_name` supports modification since V1.145.0.
        /// </summary>
        [Output("aggregateCompliancePackName")]
        public Output<string> AggregateCompliancePackName { get; private set; } = null!;

        /// <summary>
        /// The ID of aggregator.
        /// </summary>
        [Output("aggregatorId")]
        public Output<string> AggregatorId { get; private set; } = null!;

        /// <summary>
        /// The Template ID of compliance package.
        /// </summary>
        [Output("compliancePackTemplateId")]
        public Output<string?> CompliancePackTemplateId { get; private set; } = null!;

        /// <summary>
        /// A list of Config Rule IDs. See `config_rule_ids` below.
        /// </summary>
        [Output("configRuleIds")]
        public Output<ImmutableArray<Outputs.AggregateCompliancePackConfigRuleId>> ConfigRuleIds { get; private set; } = null!;

        /// <summary>
        /// A list of Config Rules. See `config_rules` below.
        /// </summary>
        [Output("configRules")]
        public Output<ImmutableArray<Outputs.AggregateCompliancePackConfigRule>> ConfigRules { get; private set; } = null!;

        /// <summary>
        /// The description of compliance package.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The Risk Level. Valid values: `1`: critical `2`: warning `3`: info.
        /// </summary>
        [Output("riskLevel")]
        public Output<int> RiskLevel { get; private set; } = null!;

        /// <summary>
        /// The status of the resource. The valid values: `CREATING`, `ACTIVE`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a AggregateCompliancePack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AggregateCompliancePack(string name, AggregateCompliancePackArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cfg/aggregateCompliancePack:AggregateCompliancePack", name, args ?? new AggregateCompliancePackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AggregateCompliancePack(string name, Input<string> id, AggregateCompliancePackState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cfg/aggregateCompliancePack:AggregateCompliancePack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AggregateCompliancePack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AggregateCompliancePack Get(string name, Input<string> id, AggregateCompliancePackState? state = null, CustomResourceOptions? options = null)
        {
            return new AggregateCompliancePack(name, id, state, options);
        }
    }

    public sealed class AggregateCompliancePackArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of compliance package name. **NOTE:** the `aggregate_compliance_pack_name` supports modification since V1.145.0.
        /// </summary>
        [Input("aggregateCompliancePackName", required: true)]
        public Input<string> AggregateCompliancePackName { get; set; } = null!;

        /// <summary>
        /// The ID of aggregator.
        /// </summary>
        [Input("aggregatorId", required: true)]
        public Input<string> AggregatorId { get; set; } = null!;

        /// <summary>
        /// The Template ID of compliance package.
        /// </summary>
        [Input("compliancePackTemplateId")]
        public Input<string>? CompliancePackTemplateId { get; set; }

        [Input("configRuleIds")]
        private InputList<Inputs.AggregateCompliancePackConfigRuleIdArgs>? _configRuleIds;

        /// <summary>
        /// A list of Config Rule IDs. See `config_rule_ids` below.
        /// </summary>
        public InputList<Inputs.AggregateCompliancePackConfigRuleIdArgs> ConfigRuleIds
        {
            get => _configRuleIds ?? (_configRuleIds = new InputList<Inputs.AggregateCompliancePackConfigRuleIdArgs>());
            set => _configRuleIds = value;
        }

        [Input("configRules")]
        private InputList<Inputs.AggregateCompliancePackConfigRuleArgs>? _configRules;

        /// <summary>
        /// A list of Config Rules. See `config_rules` below.
        /// </summary>
        [Obsolete(@"Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.")]
        public InputList<Inputs.AggregateCompliancePackConfigRuleArgs> ConfigRules
        {
            get => _configRules ?? (_configRules = new InputList<Inputs.AggregateCompliancePackConfigRuleArgs>());
            set => _configRules = value;
        }

        /// <summary>
        /// The description of compliance package.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The Risk Level. Valid values: `1`: critical `2`: warning `3`: info.
        /// </summary>
        [Input("riskLevel", required: true)]
        public Input<int> RiskLevel { get; set; } = null!;

        public AggregateCompliancePackArgs()
        {
        }
        public static new AggregateCompliancePackArgs Empty => new AggregateCompliancePackArgs();
    }

    public sealed class AggregateCompliancePackState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of compliance package name. **NOTE:** the `aggregate_compliance_pack_name` supports modification since V1.145.0.
        /// </summary>
        [Input("aggregateCompliancePackName")]
        public Input<string>? AggregateCompliancePackName { get; set; }

        /// <summary>
        /// The ID of aggregator.
        /// </summary>
        [Input("aggregatorId")]
        public Input<string>? AggregatorId { get; set; }

        /// <summary>
        /// The Template ID of compliance package.
        /// </summary>
        [Input("compliancePackTemplateId")]
        public Input<string>? CompliancePackTemplateId { get; set; }

        [Input("configRuleIds")]
        private InputList<Inputs.AggregateCompliancePackConfigRuleIdGetArgs>? _configRuleIds;

        /// <summary>
        /// A list of Config Rule IDs. See `config_rule_ids` below.
        /// </summary>
        public InputList<Inputs.AggregateCompliancePackConfigRuleIdGetArgs> ConfigRuleIds
        {
            get => _configRuleIds ?? (_configRuleIds = new InputList<Inputs.AggregateCompliancePackConfigRuleIdGetArgs>());
            set => _configRuleIds = value;
        }

        [Input("configRules")]
        private InputList<Inputs.AggregateCompliancePackConfigRuleGetArgs>? _configRules;

        /// <summary>
        /// A list of Config Rules. See `config_rules` below.
        /// </summary>
        [Obsolete(@"Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.")]
        public InputList<Inputs.AggregateCompliancePackConfigRuleGetArgs> ConfigRules
        {
            get => _configRules ?? (_configRules = new InputList<Inputs.AggregateCompliancePackConfigRuleGetArgs>());
            set => _configRules = value;
        }

        /// <summary>
        /// The description of compliance package.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Risk Level. Valid values: `1`: critical `2`: warning `3`: info.
        /// </summary>
        [Input("riskLevel")]
        public Input<int>? RiskLevel { get; set; }

        /// <summary>
        /// The status of the resource. The valid values: `CREATING`, `ACTIVE`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public AggregateCompliancePackState()
        {
        }
        public static new AggregateCompliancePackState Empty => new AggregateCompliancePackState();
    }
}
