// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Mns.Outputs
{

    [OutputType]
    public sealed class GetTopicSubscriptionsSubscriptionResult
    {
        /// <summary>
        /// Describe the terminal address of the message received in this subscription.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// A string to filter resulting messages of the topic by their message tag.
        /// </summary>
        public readonly string FilterTag;
        /// <summary>
        /// The ID of the topic subscription. The value is set to `Name`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the subscription.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The NotifyContentFormat attribute of Subscription. This attribute specifies the content format of the messages pushed to users.
        /// </summary>
        public readonly string NotifyContentFormat;
        /// <summary>
        /// The NotifyStrategy attribute of Subscription. This attribute specifies the retry strategy when message sending fails.
        /// </summary>
        public readonly string NotifyStrategy;
        /// <summary>
        /// Two topics on a single account in the same region cannot have the same name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 256 characters.
        /// </summary>
        public readonly string TopicName;

        [OutputConstructor]
        private GetTopicSubscriptionsSubscriptionResult(
            string endpoint,

            string filterTag,

            string id,

            string name,

            string notifyContentFormat,

            string notifyStrategy,

            string topicName)
        {
            Endpoint = endpoint;
            FilterTag = filterTag;
            Id = id;
            Name = name;
            NotifyContentFormat = notifyContentFormat;
            NotifyStrategy = notifyStrategy;
            TopicName = topicName;
        }
    }
}
