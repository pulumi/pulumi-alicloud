// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cdn
{
    public static class GetBlockedRegions
    {
        /// <summary>
        /// This data source provides the Cdn blocked regions.
        /// 
        /// &gt; **NOTE:** Available in v1.173.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.Cdn.GetBlockedRegions.Invoke(new()
        ///     {
        ///         Language = "zh",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBlockedRegionsResult> InvokeAsync(GetBlockedRegionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBlockedRegionsResult>("alicloud:cdn/getBlockedRegions:getBlockedRegions", args ?? new GetBlockedRegionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Cdn blocked regions.
        /// 
        /// &gt; **NOTE:** Available in v1.173.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.Cdn.GetBlockedRegions.Invoke(new()
        ///     {
        ///         Language = "zh",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBlockedRegionsResult> Invoke(GetBlockedRegionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBlockedRegionsResult>("alicloud:cdn/getBlockedRegions:getBlockedRegions", args ?? new GetBlockedRegionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlockedRegionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The language. Valid values: `zh`, `en`, `jp`.
        /// </summary>
        [Input("language", required: true)]
        public string Language { get; set; } = null!;

        public GetBlockedRegionsArgs()
        {
        }
        public static new GetBlockedRegionsArgs Empty => new GetBlockedRegionsArgs();
    }

    public sealed class GetBlockedRegionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The language. Valid values: `zh`, `en`, `jp`.
        /// </summary>
        [Input("language", required: true)]
        public Input<string> Language { get; set; } = null!;

        public GetBlockedRegionsInvokeArgs()
        {
        }
        public static new GetBlockedRegionsInvokeArgs Empty => new GetBlockedRegionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBlockedRegionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Language;
        public readonly ImmutableArray<Outputs.GetBlockedRegionsRegionResult> Regions;

        [OutputConstructor]
        private GetBlockedRegionsResult(
            string id,

            string language,

            ImmutableArray<Outputs.GetBlockedRegionsRegionResult> regions)
        {
            Id = id;
            Language = language;
            Regions = regions;
        }
    }
}
