// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms.Outputs
{

    [OutputType]
    public sealed class SyntheticTaskMonitorConfFileDownload
    {
        public readonly int? ConnectionTimeout;
        public readonly ImmutableDictionary<string, object>? CustomHeaderContent;
        public readonly int? DownloadKernel;
        public readonly int? IgnoreCertificateAuthError;
        public readonly int? IgnoreCertificateCanceledError;
        public readonly int? IgnoreCertificateOutOfDateError;
        public readonly int? IgnoreCertificateStatusError;
        public readonly int? IgnoreCertificateUntrustworthyError;
        public readonly int? IgnoreCertificateUsingError;
        public readonly int? IgnoreInvalidHostError;
        public readonly int? MonitorTimeout;
        public readonly int? QuickProtocol;
        public readonly int? Redirection;
        public readonly string TargetUrl;
        public readonly int? TransmissionSize;
        public readonly string? ValidateKeywords;
        public readonly int? VerifyWay;
        public readonly string? WhiteList;

        [OutputConstructor]
        private SyntheticTaskMonitorConfFileDownload(
            int? connectionTimeout,

            ImmutableDictionary<string, object>? customHeaderContent,

            int? downloadKernel,

            int? ignoreCertificateAuthError,

            int? ignoreCertificateCanceledError,

            int? ignoreCertificateOutOfDateError,

            int? ignoreCertificateStatusError,

            int? ignoreCertificateUntrustworthyError,

            int? ignoreCertificateUsingError,

            int? ignoreInvalidHostError,

            int? monitorTimeout,

            int? quickProtocol,

            int? redirection,

            string targetUrl,

            int? transmissionSize,

            string? validateKeywords,

            int? verifyWay,

            string? whiteList)
        {
            ConnectionTimeout = connectionTimeout;
            CustomHeaderContent = customHeaderContent;
            DownloadKernel = downloadKernel;
            IgnoreCertificateAuthError = ignoreCertificateAuthError;
            IgnoreCertificateCanceledError = ignoreCertificateCanceledError;
            IgnoreCertificateOutOfDateError = ignoreCertificateOutOfDateError;
            IgnoreCertificateStatusError = ignoreCertificateStatusError;
            IgnoreCertificateUntrustworthyError = ignoreCertificateUntrustworthyError;
            IgnoreCertificateUsingError = ignoreCertificateUsingError;
            IgnoreInvalidHostError = ignoreInvalidHostError;
            MonitorTimeout = monitorTimeout;
            QuickProtocol = quickProtocol;
            Redirection = redirection;
            TargetUrl = targetUrl;
            TransmissionSize = transmissionSize;
            ValidateKeywords = validateKeywords;
            VerifyWay = verifyWay;
            WhiteList = whiteList;
        }
    }
}
