// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms.Outputs
{

    [OutputType]
    public sealed class GetEnvironmentsEnvironmentResult
    {
        /// <summary>
        /// The ID of the resource bound to the environment instance.
        /// </summary>
        public readonly string BindResourceId;
        /// <summary>
        /// The resource type.
        /// </summary>
        public readonly string BindResourceType;
        /// <summary>
        /// The CIDR block that is bound to the VPC.
        /// </summary>
        public readonly string BindVpcCidr;
        /// <summary>
        /// The ID of the environment instance.
        /// </summary>
        public readonly string EnvironmentId;
        /// <summary>
        /// The name of the environment instance.
        /// </summary>
        public readonly string EnvironmentName;
        /// <summary>
        /// The environment type. Valid values: `CS`, `ECS`, `Cloud`.
        /// </summary>
        public readonly string EnvironmentType;
        /// <summary>
        /// The unique ID of the Grafana data source.
        /// </summary>
        public readonly string GrafanaDatasourceUid;
        /// <summary>
        /// The unique ID of the Grafana directory.
        /// </summary>
        public readonly string GrafanaFolderUid;
        /// <summary>
        /// The ID of the environment instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether agents or exporters are managed.
        /// </summary>
        public readonly string ManagedType;
        /// <summary>
        /// The ID of the Prometheus instance.
        /// </summary>
        public readonly string PrometheusInstanceId;
        /// <summary>
        /// The region ID.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The user ID.
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetEnvironmentsEnvironmentResult(
            string bindResourceId,

            string bindResourceType,

            string bindVpcCidr,

            string environmentId,

            string environmentName,

            string environmentType,

            string grafanaDatasourceUid,

            string grafanaFolderUid,

            string id,

            string managedType,

            string prometheusInstanceId,

            string regionId,

            string resourceGroupId,

            ImmutableDictionary<string, string> tags,

            string userId)
        {
            BindResourceId = bindResourceId;
            BindResourceType = bindResourceType;
            BindVpcCidr = bindVpcCidr;
            EnvironmentId = environmentId;
            EnvironmentName = environmentName;
            EnvironmentType = environmentType;
            GrafanaDatasourceUid = grafanaDatasourceUid;
            GrafanaFolderUid = grafanaFolderUid;
            Id = id;
            ManagedType = managedType;
            PrometheusInstanceId = prometheusInstanceId;
            RegionId = regionId;
            ResourceGroupId = resourceGroupId;
            Tags = tags;
            UserId = userId;
        }
    }
}
