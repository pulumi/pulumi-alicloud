// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    public static class GetPrometheus
    {
        /// <summary>
        /// This data source provides the Arms Prometheus of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.214.0.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf-example";
        ///     var defaultNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "default-NODELETING",
        ///     });
        /// 
        ///     var defaultSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke();
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new()
        ///     {
        ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultPrometheus = new AliCloud.Arms.Prometheus("defaultPrometheus", new()
        ///     {
        ///         ClusterType = "ecs",
        ///         GrafanaInstanceId = "free",
        ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         VswitchId = defaultSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         ClusterName = $"{name}-{defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0])}",
        ///         ResourceGroupId = defaultResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Groups[1]?.Id),
        ///         Tags = 
        ///         {
        ///             { "Created", "TF" },
        ///             { "For", "Prometheus" },
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Arms.GetPrometheus.Invoke(new()
        ///     {
        ///         NameRegex = defaultPrometheus.ClusterName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsPrometheusId"] = nameRegex.Apply(getPrometheusResult =&gt; getPrometheusResult.Prometheis[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPrometheusResult> InvokeAsync(GetPrometheusArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrometheusResult>("alicloud:arms/getPrometheus:getPrometheus", args ?? new GetPrometheusArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Arms Prometheus of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.214.0.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "tf-example";
        ///     var defaultNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "default-NODELETING",
        ///     });
        /// 
        ///     var defaultSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke();
        /// 
        ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new()
        ///     {
        ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///     });
        /// 
        ///     var defaultPrometheus = new AliCloud.Arms.Prometheus("defaultPrometheus", new()
        ///     {
        ///         ClusterType = "ecs",
        ///         GrafanaInstanceId = "free",
        ///         VpcId = defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         VswitchId = defaultSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Ids[0]),
        ///         SecurityGroupId = defaultSecurityGroup.Id,
        ///         ClusterName = $"{name}-{defaultNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0])}",
        ///         ResourceGroupId = defaultResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Groups[1]?.Id),
        ///         Tags = 
        ///         {
        ///             { "Created", "TF" },
        ///             { "For", "Prometheus" },
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Arms.GetPrometheus.Invoke(new()
        ///     {
        ///         NameRegex = defaultPrometheus.ClusterName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsPrometheusId"] = nameRegex.Apply(getPrometheusResult =&gt; getPrometheusResult.Prometheis[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPrometheusResult> Invoke(GetPrometheusInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrometheusResult>("alicloud:arms/getPrometheus:getPrometheus", args ?? new GetPrometheusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrometheusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether to query details about the instance.
        /// </summary>
        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Prometheus IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Prometheus name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public string? ResourceGroupId { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetPrometheusArgs()
        {
        }
        public static new GetPrometheusArgs Empty => new GetPrometheusArgs();
    }

    public sealed class GetPrometheusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether to query details about the instance.
        /// </summary>
        [Input("enableDetails")]
        public Input<bool>? EnableDetails { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Prometheus IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Prometheus name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GetPrometheusInvokeArgs()
        {
        }
        public static new GetPrometheusInvokeArgs Empty => new GetPrometheusInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrometheusResult
    {
        public readonly bool? EnableDetails;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Prometheus names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of Prometheus. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrometheusPrometheiResult> Prometheis;
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string? ResourceGroupId;
        /// <summary>
        /// The tag of the Prometheus.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private GetPrometheusResult(
            bool? enableDetails,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<Outputs.GetPrometheusPrometheiResult> prometheis,

            string? resourceGroupId,

            ImmutableDictionary<string, object>? tags)
        {
            EnableDetails = enableDetails;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Prometheis = prometheis;
            ResourceGroupId = resourceGroupId;
            Tags = tags;
        }
    }
}
