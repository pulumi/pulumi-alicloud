// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    /// <summary>
    /// Provides a Application Real-Time Monitoring Service (ARMS) Integration Exporter resource.
    /// 
    /// For information about Application Real-Time Monitoring Service (ARMS) Integration Exporter and how to use it, see [What is Integration Exporter](https://www.alibabacloud.com/help/en/arms/developer-reference/api-arms-2019-08-08-addprometheusintegration).
    /// 
    /// &gt; **NOTE:** Available since v1.203.0.
    /// 
    /// ## Import
    /// 
    /// Application Real-Time Monitoring Service (ARMS) Integration Exporter can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:arms/integrationExporter:IntegrationExporter example &lt;cluster_id&gt;:&lt;integration_type&gt;:&lt;instance_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:arms/integrationExporter:IntegrationExporter")]
    public partial class IntegrationExporter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Prometheus instance.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Integration Exporter instance.
        /// </summary>
        [Output("instanceId")]
        public Output<int> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The type of prometheus integration.
        /// </summary>
        [Output("integrationType")]
        public Output<string> IntegrationType { get; private set; } = null!;

        /// <summary>
        /// Exporter configuration parameter json string.
        /// </summary>
        [Output("param")]
        public Output<string> Param { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationExporter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationExporter(string name, IntegrationExporterArgs args, CustomResourceOptions? options = null)
            : base("alicloud:arms/integrationExporter:IntegrationExporter", name, args ?? new IntegrationExporterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationExporter(string name, Input<string> id, IntegrationExporterState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:arms/integrationExporter:IntegrationExporter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationExporter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationExporter Get(string name, Input<string> id, IntegrationExporterState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationExporter(name, id, state, options);
        }
    }

    public sealed class IntegrationExporterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Prometheus instance.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The type of prometheus integration.
        /// </summary>
        [Input("integrationType", required: true)]
        public Input<string> IntegrationType { get; set; } = null!;

        /// <summary>
        /// Exporter configuration parameter json string.
        /// </summary>
        [Input("param", required: true)]
        public Input<string> Param { get; set; } = null!;

        public IntegrationExporterArgs()
        {
        }
        public static new IntegrationExporterArgs Empty => new IntegrationExporterArgs();
    }

    public sealed class IntegrationExporterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Prometheus instance.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The ID of the Integration Exporter instance.
        /// </summary>
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        /// <summary>
        /// The type of prometheus integration.
        /// </summary>
        [Input("integrationType")]
        public Input<string>? IntegrationType { get; set; }

        /// <summary>
        /// Exporter configuration parameter json string.
        /// </summary>
        [Input("param")]
        public Input<string>? Param { get; set; }

        public IntegrationExporterState()
        {
        }
        public static new IntegrationExporterState Empty => new IntegrationExporterState();
    }
}
