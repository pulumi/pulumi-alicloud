// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    /// <summary>
    /// Provides a ARMS Env Pod Monitor resource. PodMonitor for the arms environment.
    /// 
    /// For information about ARMS Env Pod Monitor and how to use it, see [What is Env Pod Monitor](https://www.alibabacloud.com/help/en/arms/developer-reference/api-arms-2019-08-08-createenvpodmonitor).
    /// 
    /// &gt; **NOTE:** Available since v1.212.0.
    /// 
    /// ## Import
    /// 
    /// ARMS Env Pod Monitor can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:arms/envPodMonitor:EnvPodMonitor example &lt;environment_id&gt;:&lt;namespace&gt;:&lt;env_pod_monitor_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:arms/envPodMonitor:EnvPodMonitor")]
    public partial class EnvPodMonitor : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Language environment, default is Chinese zh | en.
        /// </summary>
        [Output("aliyunLang")]
        public Output<string?> AliyunLang { get; private set; } = null!;

        /// <summary>
        /// Yaml configuration string.
        /// </summary>
        [Output("configYaml")]
        public Output<string> ConfigYaml { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("envPodMonitorName")]
        public Output<string> EnvPodMonitorName { get; private set; } = null!;

        /// <summary>
        /// Environment id.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// Resource namespace.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// PodMonitor status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a EnvPodMonitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvPodMonitor(string name, EnvPodMonitorArgs args, CustomResourceOptions? options = null)
            : base("alicloud:arms/envPodMonitor:EnvPodMonitor", name, args ?? new EnvPodMonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvPodMonitor(string name, Input<string> id, EnvPodMonitorState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:arms/envPodMonitor:EnvPodMonitor", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvPodMonitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvPodMonitor Get(string name, Input<string> id, EnvPodMonitorState? state = null, CustomResourceOptions? options = null)
        {
            return new EnvPodMonitor(name, id, state, options);
        }
    }

    public sealed class EnvPodMonitorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Language environment, default is Chinese zh | en.
        /// </summary>
        [Input("aliyunLang")]
        public Input<string>? AliyunLang { get; set; }

        /// <summary>
        /// Yaml configuration string.
        /// </summary>
        [Input("configYaml", required: true)]
        public Input<string> ConfigYaml { get; set; } = null!;

        /// <summary>
        /// Environment id.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        public EnvPodMonitorArgs()
        {
        }
        public static new EnvPodMonitorArgs Empty => new EnvPodMonitorArgs();
    }

    public sealed class EnvPodMonitorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Language environment, default is Chinese zh | en.
        /// </summary>
        [Input("aliyunLang")]
        public Input<string>? AliyunLang { get; set; }

        /// <summary>
        /// Yaml configuration string.
        /// </summary>
        [Input("configYaml")]
        public Input<string>? ConfigYaml { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("envPodMonitorName")]
        public Input<string>? EnvPodMonitorName { get; set; }

        /// <summary>
        /// Environment id.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// Resource namespace.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// PodMonitor status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public EnvPodMonitorState()
        {
        }
        public static new EnvPodMonitorState Empty => new EnvPodMonitorState();
    }
}
