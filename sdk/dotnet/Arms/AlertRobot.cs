// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    /// <summary>
    /// Provides a Application Real-Time Monitoring Service (ARMS) Alert Robot resource.
    /// 
    /// For information about Application Real-Time Monitoring Service (ARMS) Alert Robot and how to use it, see [What is Alert Robot](https://next.api.alibabacloud.com/document/ARMS/2019-08-08/CreateOrUpdateIMRobot).
    /// 
    /// &gt; **NOTE:** Available since v1.237.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var wechat = new AliCloud.Arms.AlertRobot("wechat", new()
    ///     {
    ///         AlertRobotName = "example_wechat",
    ///         RobotType = "wechat",
    ///         RobotAddr = "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23",
    ///         DailyNoc = true,
    ///         DailyNocTime = "09:30,17:00",
    ///     });
    /// 
    ///     var dingding = new AliCloud.Arms.AlertRobot("dingding", new()
    ///     {
    ///         AlertRobotName = "example_dingding",
    ///         RobotType = "dingding",
    ///         RobotAddr = "https://oapi.dingtalk.com/robot/send?access_token=1c704e23",
    ///         DailyNoc = true,
    ///         DailyNocTime = "09:30,17:00",
    ///     });
    /// 
    ///     var feishu = new AliCloud.Arms.AlertRobot("feishu", new()
    ///     {
    ///         AlertRobotName = "example_feishu",
    ///         RobotType = "feishu",
    ///         RobotAddr = "https://open.feishu.cn/open-apis/bot/v2/hook/a48efa01",
    ///         DailyNoc = true,
    ///         DailyNocTime = "09:30,17:00",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Application Real-Time Monitoring Service (ARMS) Alert Robot can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:arms/alertRobot:AlertRobot example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:arms/alertRobot:AlertRobot")]
    public partial class AlertRobot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("alertRobotName")]
        public Output<string> AlertRobotName { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the alert robot receives daily notifications. Valid values: `True`: receives daily notifications. `False`: does not receive daily notifications, default to `False`.
        /// </summary>
        [Output("dailyNoc")]
        public Output<bool?> DailyNoc { get; private set; } = null!;

        /// <summary>
        /// The time of the daily notification.
        /// </summary>
        [Output("dailyNocTime")]
        public Output<string?> DailyNocTime { get; private set; } = null!;

        /// <summary>
        /// The webhook url of the robot.
        /// </summary>
        [Output("robotAddr")]
        public Output<string> RobotAddr { get; private set; } = null!;

        /// <summary>
        /// The type of the robot, Valid values: `Wechat`, `Dingding`, `Feishu`.
        /// </summary>
        [Output("robotType")]
        public Output<string> RobotType { get; private set; } = null!;


        /// <summary>
        /// Create a AlertRobot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertRobot(string name, AlertRobotArgs args, CustomResourceOptions? options = null)
            : base("alicloud:arms/alertRobot:AlertRobot", name, args ?? new AlertRobotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertRobot(string name, Input<string> id, AlertRobotState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:arms/alertRobot:AlertRobot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertRobot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertRobot Get(string name, Input<string> id, AlertRobotState? state = null, CustomResourceOptions? options = null)
        {
            return new AlertRobot(name, id, state, options);
        }
    }

    public sealed class AlertRobotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("alertRobotName", required: true)]
        public Input<string> AlertRobotName { get; set; } = null!;

        /// <summary>
        /// Specifies whether the alert robot receives daily notifications. Valid values: `True`: receives daily notifications. `False`: does not receive daily notifications, default to `False`.
        /// </summary>
        [Input("dailyNoc")]
        public Input<bool>? DailyNoc { get; set; }

        /// <summary>
        /// The time of the daily notification.
        /// </summary>
        [Input("dailyNocTime")]
        public Input<string>? DailyNocTime { get; set; }

        /// <summary>
        /// The webhook url of the robot.
        /// </summary>
        [Input("robotAddr", required: true)]
        public Input<string> RobotAddr { get; set; } = null!;

        /// <summary>
        /// The type of the robot, Valid values: `Wechat`, `Dingding`, `Feishu`.
        /// </summary>
        [Input("robotType", required: true)]
        public Input<string> RobotType { get; set; } = null!;

        public AlertRobotArgs()
        {
        }
        public static new AlertRobotArgs Empty => new AlertRobotArgs();
    }

    public sealed class AlertRobotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("alertRobotName")]
        public Input<string>? AlertRobotName { get; set; }

        /// <summary>
        /// Specifies whether the alert robot receives daily notifications. Valid values: `True`: receives daily notifications. `False`: does not receive daily notifications, default to `False`.
        /// </summary>
        [Input("dailyNoc")]
        public Input<bool>? DailyNoc { get; set; }

        /// <summary>
        /// The time of the daily notification.
        /// </summary>
        [Input("dailyNocTime")]
        public Input<string>? DailyNocTime { get; set; }

        /// <summary>
        /// The webhook url of the robot.
        /// </summary>
        [Input("robotAddr")]
        public Input<string>? RobotAddr { get; set; }

        /// <summary>
        /// The type of the robot, Valid values: `Wechat`, `Dingding`, `Feishu`.
        /// </summary>
        [Input("robotType")]
        public Input<string>? RobotType { get; set; }

        public AlertRobotState()
        {
        }
        public static new AlertRobotState Empty => new AlertRobotState();
    }
}
