// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    public static class GetDispatchRules
    {
        /// <summary>
        /// This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.136.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = new AliCloud.Arms.AlertContact("default", new()
        ///     {
        ///         AlertContactName = "example_value",
        ///         Email = "example_value@aaa.com",
        ///     });
        /// 
        ///     var defaultAlertContactGroup = new AliCloud.Arms.AlertContactGroup("default", new()
        ///     {
        ///         AlertContactGroupName = "example_value",
        ///         ContactIds = new[]
        ///         {
        ///             @default.Id,
        ///         },
        ///     });
        /// 
        ///     var defaultDispatchRule = new AliCloud.Arms.DispatchRule("default", new()
        ///     {
        ///         DispatchRuleName = "example_value",
        ///         DispatchType = "CREATE_ALERT",
        ///         GroupRules = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleGroupRuleArgs
        ///             {
        ///                 GroupWaitTime = 5,
        ///                 GroupInterval = 15,
        ///                 RepeatInterval = 100,
        ///                 GroupingFields = new[]
        ///                 {
        ///                     "alertname",
        ///                 },
        ///             },
        ///         },
        ///         LabelMatchExpressionGrids = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridArgs
        ///             {
        ///                 LabelMatchExpressionGroups = new[]
        ///                 {
        ///                     new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs
        ///                     {
        ///                         LabelMatchExpressions = new[]
        ///                         {
        ///                             new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs
        ///                             {
        ///                                 Key = "_aliyun_arms_involvedObject_kind",
        ///                                 Value = "app",
        ///                                 Operator = "eq",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         NotifyRules = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleArgs
        ///             {
        ///                 NotifyObjects = new[]
        ///                 {
        ///                     new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleNotifyObjectArgs
        ///                     {
        ///                         NotifyObjectId = @default.Id,
        ///                         NotifyType = "ARMS_CONTACT",
        ///                         Name = "example_value",
        ///                     },
        ///                     new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleNotifyObjectArgs
        ///                     {
        ///                         NotifyObjectId = defaultAlertContactGroup.Id,
        ///                         NotifyType = "ARMS_CONTACT_GROUP",
        ///                         Name = "example_value",
        ///                     },
        ///                 },
        ///                 NotifyChannels = new[]
        ///                 {
        ///                     "dingTalk",
        ///                     "wechat",
        ///                 },
        ///                 NotifyStartTime = "10:00",
        ///                 NotifyEndTime = "23:00",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.Arms.GetDispatchRules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultDispatchRule.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsDispatchRuleId1"] = ids.Apply(getDispatchRulesResult =&gt; getDispatchRulesResult.Rules[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetDispatchRulesResult> InvokeAsync(GetDispatchRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDispatchRulesResult>("alicloud:arms/getDispatchRules:getDispatchRules", args ?? new GetDispatchRulesArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.136.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = new AliCloud.Arms.AlertContact("default", new()
        ///     {
        ///         AlertContactName = "example_value",
        ///         Email = "example_value@aaa.com",
        ///     });
        /// 
        ///     var defaultAlertContactGroup = new AliCloud.Arms.AlertContactGroup("default", new()
        ///     {
        ///         AlertContactGroupName = "example_value",
        ///         ContactIds = new[]
        ///         {
        ///             @default.Id,
        ///         },
        ///     });
        /// 
        ///     var defaultDispatchRule = new AliCloud.Arms.DispatchRule("default", new()
        ///     {
        ///         DispatchRuleName = "example_value",
        ///         DispatchType = "CREATE_ALERT",
        ///         GroupRules = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleGroupRuleArgs
        ///             {
        ///                 GroupWaitTime = 5,
        ///                 GroupInterval = 15,
        ///                 RepeatInterval = 100,
        ///                 GroupingFields = new[]
        ///                 {
        ///                     "alertname",
        ///                 },
        ///             },
        ///         },
        ///         LabelMatchExpressionGrids = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridArgs
        ///             {
        ///                 LabelMatchExpressionGroups = new[]
        ///                 {
        ///                     new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs
        ///                     {
        ///                         LabelMatchExpressions = new[]
        ///                         {
        ///                             new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs
        ///                             {
        ///                                 Key = "_aliyun_arms_involvedObject_kind",
        ///                                 Value = "app",
        ///                                 Operator = "eq",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         NotifyRules = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleArgs
        ///             {
        ///                 NotifyObjects = new[]
        ///                 {
        ///                     new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleNotifyObjectArgs
        ///                     {
        ///                         NotifyObjectId = @default.Id,
        ///                         NotifyType = "ARMS_CONTACT",
        ///                         Name = "example_value",
        ///                     },
        ///                     new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleNotifyObjectArgs
        ///                     {
        ///                         NotifyObjectId = defaultAlertContactGroup.Id,
        ///                         NotifyType = "ARMS_CONTACT_GROUP",
        ///                         Name = "example_value",
        ///                     },
        ///                 },
        ///                 NotifyChannels = new[]
        ///                 {
        ///                     "dingTalk",
        ///                     "wechat",
        ///                 },
        ///                 NotifyStartTime = "10:00",
        ///                 NotifyEndTime = "23:00",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.Arms.GetDispatchRules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultDispatchRule.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsDispatchRuleId1"] = ids.Apply(getDispatchRulesResult =&gt; getDispatchRulesResult.Rules[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDispatchRulesResult> Invoke(GetDispatchRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDispatchRulesResult>("alicloud:arms/getDispatchRules:getDispatchRules", args ?? new GetDispatchRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.136.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = new AliCloud.Arms.AlertContact("default", new()
        ///     {
        ///         AlertContactName = "example_value",
        ///         Email = "example_value@aaa.com",
        ///     });
        /// 
        ///     var defaultAlertContactGroup = new AliCloud.Arms.AlertContactGroup("default", new()
        ///     {
        ///         AlertContactGroupName = "example_value",
        ///         ContactIds = new[]
        ///         {
        ///             @default.Id,
        ///         },
        ///     });
        /// 
        ///     var defaultDispatchRule = new AliCloud.Arms.DispatchRule("default", new()
        ///     {
        ///         DispatchRuleName = "example_value",
        ///         DispatchType = "CREATE_ALERT",
        ///         GroupRules = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleGroupRuleArgs
        ///             {
        ///                 GroupWaitTime = 5,
        ///                 GroupInterval = 15,
        ///                 RepeatInterval = 100,
        ///                 GroupingFields = new[]
        ///                 {
        ///                     "alertname",
        ///                 },
        ///             },
        ///         },
        ///         LabelMatchExpressionGrids = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridArgs
        ///             {
        ///                 LabelMatchExpressionGroups = new[]
        ///                 {
        ///                     new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs
        ///                     {
        ///                         LabelMatchExpressions = new[]
        ///                         {
        ///                             new AliCloud.Arms.Inputs.DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs
        ///                             {
        ///                                 Key = "_aliyun_arms_involvedObject_kind",
        ///                                 Value = "app",
        ///                                 Operator = "eq",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         NotifyRules = new[]
        ///         {
        ///             new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleArgs
        ///             {
        ///                 NotifyObjects = new[]
        ///                 {
        ///                     new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleNotifyObjectArgs
        ///                     {
        ///                         NotifyObjectId = @default.Id,
        ///                         NotifyType = "ARMS_CONTACT",
        ///                         Name = "example_value",
        ///                     },
        ///                     new AliCloud.Arms.Inputs.DispatchRuleNotifyRuleNotifyObjectArgs
        ///                     {
        ///                         NotifyObjectId = defaultAlertContactGroup.Id,
        ///                         NotifyType = "ARMS_CONTACT_GROUP",
        ///                         Name = "example_value",
        ///                     },
        ///                 },
        ///                 NotifyChannels = new[]
        ///                 {
        ///                     "dingTalk",
        ///                     "wechat",
        ///                 },
        ///                 NotifyStartTime = "10:00",
        ///                 NotifyEndTime = "23:00",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.Arms.GetDispatchRules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultDispatchRule.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsDispatchRuleId1"] = ids.Apply(getDispatchRulesResult =&gt; getDispatchRulesResult.Rules[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDispatchRulesResult> Invoke(GetDispatchRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDispatchRulesResult>("alicloud:arms/getDispatchRules:getDispatchRules", args ?? new GetDispatchRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDispatchRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the dispatch rule.
        /// </summary>
        [Input("dispatchRuleName")]
        public string? DispatchRuleName { get; set; }

        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of dispatch rule id.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Dispatch Rule name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetDispatchRulesArgs()
        {
        }
        public static new GetDispatchRulesArgs Empty => new GetDispatchRulesArgs();
    }

    public sealed class GetDispatchRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the dispatch rule.
        /// </summary>
        [Input("dispatchRuleName")]
        public Input<string>? DispatchRuleName { get; set; }

        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public Input<bool>? EnableDetails { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of dispatch rule id.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Dispatch Rule name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetDispatchRulesInvokeArgs()
        {
        }
        public static new GetDispatchRulesInvokeArgs Empty => new GetDispatchRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDispatchRulesResult
    {
        /// <summary>
        /// The name of the dispatch rule.
        /// </summary>
        public readonly string? DispatchRuleName;
        public readonly bool? EnableDetails;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Dispatch Rule names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of Arms Dispatch Rules. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDispatchRulesRuleResult> Rules;

        [OutputConstructor]
        private GetDispatchRulesResult(
            string? dispatchRuleName,

            bool? enableDetails,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<Outputs.GetDispatchRulesRuleResult> rules)
        {
            DispatchRuleName = dispatchRuleName;
            EnableDetails = enableDetails;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Rules = rules;
        }
    }
}
