// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms.Inputs
{

    public sealed class SyntheticTaskMonitorConfGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// HTTP(S) task configuration information. See `api_http` below.
        /// </summary>
        [Input("apiHttp")]
        public Input<Inputs.SyntheticTaskMonitorConfApiHttpGetArgs>? ApiHttp { get; set; }

        /// <summary>
        /// File download type task configuration. See `file_download` below.
        /// </summary>
        [Input("fileDownload")]
        public Input<Inputs.SyntheticTaskMonitorConfFileDownloadGetArgs>? FileDownload { get; set; }

        /// <summary>
        /// The configuration parameters of the DNS dial test. Required when TaskType is 3. See `net_dns` below.
        /// </summary>
        [Input("netDns")]
        public Input<Inputs.SyntheticTaskMonitorConfNetDnsGetArgs>? NetDns { get; set; }

        /// <summary>
        /// ICMP dialing configuration parameters. Required when TaskType is 1. See `net_icmp` below.
        /// </summary>
        [Input("netIcmp")]
        public Input<Inputs.SyntheticTaskMonitorConfNetIcmpGetArgs>? NetIcmp { get; set; }

        /// <summary>
        /// The configuration parameters of TCP dial test. Required when TaskType is 2. See `net_tcp` below.
        /// </summary>
        [Input("netTcp")]
        public Input<Inputs.SyntheticTaskMonitorConfNetTcpGetArgs>? NetTcp { get; set; }

        /// <summary>
        /// Streaming Media Dial Test Configuration. See `stream` below.
        /// </summary>
        [Input("stream")]
        public Input<Inputs.SyntheticTaskMonitorConfStreamGetArgs>? Stream { get; set; }

        /// <summary>
        /// Website speed measurement type task configuration. See `website` below.
        /// </summary>
        [Input("website")]
        public Input<Inputs.SyntheticTaskMonitorConfWebsiteGetArgs>? Website { get; set; }

        public SyntheticTaskMonitorConfGetArgs()
        {
        }
        public static new SyntheticTaskMonitorConfGetArgs Empty => new SyntheticTaskMonitorConfGetArgs();
    }
}
