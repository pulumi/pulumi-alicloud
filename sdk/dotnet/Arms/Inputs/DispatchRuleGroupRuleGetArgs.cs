// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms.Inputs
{

    public sealed class DispatchRuleGroupRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the group rule.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        /// <summary>
        /// The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler.
        /// </summary>
        [Input("groupInterval", required: true)]
        public Input<int> GroupInterval { get; set; } = null!;

        /// <summary>
        /// The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler.
        /// </summary>
        [Input("groupWaitTime", required: true)]
        public Input<int> GroupWaitTime { get; set; } = null!;

        [Input("groupingFields", required: true)]
        private InputList<string>? _groupingFields;

        /// <summary>
        /// The fields that are used to group events. Events with the same field content are assigned to a group. Alerts with the same specified grouping field are sent to the handler in separate notifications.
        /// </summary>
        public InputList<string> GroupingFields
        {
            get => _groupingFields ?? (_groupingFields = new InputList<string>());
            set => _groupingFields = value;
        }

        /// <summary>
        /// The silence period of repeated alerts. All alerts are repeatedly sent at specified intervals until the alerts are cleared. The minimum value is 61. Default to 600.
        /// </summary>
        [Input("repeatInterval")]
        public Input<int>? RepeatInterval { get; set; }

        public DispatchRuleGroupRuleGetArgs()
        {
        }
        public static new DispatchRuleGroupRuleGetArgs Empty => new DispatchRuleGroupRuleGetArgs();
    }
}
