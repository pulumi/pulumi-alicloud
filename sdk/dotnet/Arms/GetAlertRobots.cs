// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    public static class GetAlertRobots
    {
        /// <summary>
        /// This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.237.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = new AliCloud.Arms.AlertRobot("default", new()
        ///     {
        ///         AlertRobotName = "my-AlertRobot",
        ///         RobotType = "wechat",
        ///         RobotAddr = "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23",
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Arms.GetAlertRobots.Invoke(new()
        ///     {
        ///         AlertRobotName = @default.AlertRobotName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsAlertRobotId"] = nameRegex.Apply(getAlertRobotsResult =&gt; getAlertRobotsResult.Robots[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlertRobotsResult> InvokeAsync(GetAlertRobotsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertRobotsResult>("alicloud:arms/getAlertRobots:getAlertRobots", args ?? new GetAlertRobotsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.237.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = new AliCloud.Arms.AlertRobot("default", new()
        ///     {
        ///         AlertRobotName = "my-AlertRobot",
        ///         RobotType = "wechat",
        ///         RobotAddr = "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23",
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Arms.GetAlertRobots.Invoke(new()
        ///     {
        ///         AlertRobotName = @default.AlertRobotName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsAlertRobotId"] = nameRegex.Apply(getAlertRobotsResult =&gt; getAlertRobotsResult.Robots[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlertRobotsResult> Invoke(GetAlertRobotsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertRobotsResult>("alicloud:arms/getAlertRobots:getAlertRobots", args ?? new GetAlertRobotsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.237.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = new AliCloud.Arms.AlertRobot("default", new()
        ///     {
        ///         AlertRobotName = "my-AlertRobot",
        ///         RobotType = "wechat",
        ///         RobotAddr = "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23",
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Arms.GetAlertRobots.Invoke(new()
        ///     {
        ///         AlertRobotName = @default.AlertRobotName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsAlertRobotId"] = nameRegex.Apply(getAlertRobotsResult =&gt; getAlertRobotsResult.Robots[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlertRobotsResult> Invoke(GetAlertRobotsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertRobotsResult>("alicloud:arms/getAlertRobots:getAlertRobots", args ?? new GetAlertRobotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertRobotsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The robot name.
        /// </summary>
        [Input("alertRobotName")]
        public string? AlertRobotName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Alert Robot IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Alert Robot name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The robot type.
        /// </summary>
        [Input("robotType")]
        public string? RobotType { get; set; }

        public GetAlertRobotsArgs()
        {
        }
        public static new GetAlertRobotsArgs Empty => new GetAlertRobotsArgs();
    }

    public sealed class GetAlertRobotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The robot name.
        /// </summary>
        [Input("alertRobotName")]
        public Input<string>? AlertRobotName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Alert Robot IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Alert Robot name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The robot type.
        /// </summary>
        [Input("robotType")]
        public Input<string>? RobotType { get; set; }

        public GetAlertRobotsInvokeArgs()
        {
        }
        public static new GetAlertRobotsInvokeArgs Empty => new GetAlertRobotsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertRobotsResult
    {
        public readonly string? AlertRobotName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Alert Robot IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Alert Robot names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// The type of the robot.
        /// </summary>
        public readonly string? RobotType;
        /// <summary>
        /// A list of Arms Alert Robots. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRobotsRobotResult> Robots;

        [OutputConstructor]
        private GetAlertRobotsResult(
            string? alertRobotName,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? robotType,

            ImmutableArray<Outputs.GetAlertRobotsRobotResult> robots)
        {
            AlertRobotName = alertRobotName;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            RobotType = robotType;
            Robots = robots;
        }
    }
}
