// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Arms
{
    public static class GetEnvironments
    {
        /// <summary>
        /// This data source provides the ARMS Environments of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.258.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
        ///     {
        ///         Status = "OK",
        ///     });
        /// 
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var defaultEnvironment = new AliCloud.Arms.Environment("default", new()
        ///     {
        ///         BindResourceId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         EnvironmentSubType = "ECS",
        ///         EnvironmentType = "ECS",
        ///         EnvironmentName = $"{name}-{defaultInteger.Result}",
        ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[1])),
        ///         Tags = 
        ///         {
        ///             { "Created", "TF" },
        ///             { "For", "Environment" },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.Arms.GetEnvironments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultEnvironment.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsEnvironmentsId0"] = ids.Apply(getEnvironmentsResult =&gt; getEnvironmentsResult.Environments[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetEnvironmentsResult> InvokeAsync(GetEnvironmentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentsResult>("alicloud:arms/getEnvironments:getEnvironments", args ?? new GetEnvironmentsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the ARMS Environments of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.258.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
        ///     {
        ///         Status = "OK",
        ///     });
        /// 
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var defaultEnvironment = new AliCloud.Arms.Environment("default", new()
        ///     {
        ///         BindResourceId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         EnvironmentSubType = "ECS",
        ///         EnvironmentType = "ECS",
        ///         EnvironmentName = $"{name}-{defaultInteger.Result}",
        ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[1])),
        ///         Tags = 
        ///         {
        ///             { "Created", "TF" },
        ///             { "For", "Environment" },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.Arms.GetEnvironments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultEnvironment.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsEnvironmentsId0"] = ids.Apply(getEnvironmentsResult =&gt; getEnvironmentsResult.Environments[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentsResult> Invoke(GetEnvironmentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentsResult>("alicloud:arms/getEnvironments:getEnvironments", args ?? new GetEnvironmentsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the ARMS Environments of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.258.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Random = Pulumi.Random;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
        ///     {
        ///         Status = "OK",
        ///     });
        /// 
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultInteger = new Random.Index.Integer("default", new()
        ///     {
        ///         Min = 10000,
        ///         Max = 99999,
        ///     });
        /// 
        ///     var defaultEnvironment = new AliCloud.Arms.Environment("default", new()
        ///     {
        ///         BindResourceId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         EnvironmentSubType = "ECS",
        ///         EnvironmentType = "ECS",
        ///         EnvironmentName = $"{name}-{defaultInteger.Result}",
        ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[1])),
        ///         Tags = 
        ///         {
        ///             { "Created", "TF" },
        ///             { "For", "Environment" },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.Arms.GetEnvironments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultEnvironment.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["armsEnvironmentsId0"] = ids.Apply(getEnvironmentsResult =&gt; getEnvironmentsResult.Environments[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentsResult> Invoke(GetEnvironmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentsResult>("alicloud:arms/getEnvironments:getEnvironments", args ?? new GetEnvironmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The environment type. Valid values: `CS`, `ECS`, `Cloud`.
        /// </summary>
        [Input("environmentType")]
        public string? EnvironmentType { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of ARMS Environment IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by ARMS Environment name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public string? ResourceGroupId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetEnvironmentsArgs()
        {
        }
        public static new GetEnvironmentsArgs Empty => new GetEnvironmentsArgs();
    }

    public sealed class GetEnvironmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The environment type. Valid values: `CS`, `ECS`, `Cloud`.
        /// </summary>
        [Input("environmentType")]
        public Input<string>? EnvironmentType { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of ARMS Environment IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by ARMS Environment name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetEnvironmentsInvokeArgs()
        {
        }
        public static new GetEnvironmentsInvokeArgs Empty => new GetEnvironmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentsResult
    {
        /// <summary>
        /// The type of the environment instance.
        /// </summary>
        public readonly string? EnvironmentType;
        /// <summary>
        /// A list of ARMS Environments. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEnvironmentsEnvironmentResult> Environments;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of ARMS Environment names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string? ResourceGroupId;
        /// <summary>
        /// The tags of the environment resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetEnvironmentsResult(
            string? environmentType,

            ImmutableArray<Outputs.GetEnvironmentsEnvironmentResult> environments,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? resourceGroupId,

            ImmutableDictionary<string, string>? tags)
        {
            EnvironmentType = environmentType;
            Environments = environments;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            ResourceGroupId = resourceGroupId;
            Tags = tags;
        }
    }
}
