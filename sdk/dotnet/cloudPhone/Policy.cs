// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.cloudPhone
{
    /// <summary>
    /// Provides a Cloud Phone Policy resource.
    /// 
    /// Cloud phone policy.
    /// 
    /// For information about Cloud Phone Policy and how to use it, see [What is Policy](https://next.api.alibabacloud.com/document/eds-aic/2023-09-30/CreatePolicyGroup).
    /// 
    /// &gt; **NOTE:** Available since v1.243.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.CloudPhone.Policy("default", new()
    ///     {
    ///         PolicyGroupName = "NewPolicyName",
    ///         ResolutionWidth = 720,
    ///         LockResolution = "on",
    ///         CameraRedirect = "on",
    ///         ResolutionHeight = 1280,
    ///         Clipboard = "read",
    ///         NetRedirectPolicy = new AliCloud.cloudPhone.Inputs.PolicyNetRedirectPolicyArgs
    ///         {
    ///             NetRedirect = "on",
    ///             CustomProxy = "on",
    ///             ProxyType = "socks5",
    ///             HostAddr = "192.168.12.13",
    ///             Port = "8888",
    ///             ProxyUserName = "user1",
    ///             ProxyPassword = "123456",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Phone Policy can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:cloudphone/policy:Policy example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cloudphone/policy:Policy")]
    public partial class Policy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to turn on local camera redirection.
        /// </summary>
        [Output("cameraRedirect")]
        public Output<string> CameraRedirect { get; private set; } = null!;

        /// <summary>
        /// Clipboard permissions.
        /// </summary>
        [Output("clipboard")]
        public Output<string> Clipboard { get; private set; } = null!;

        /// <summary>
        /// Whether to lock the resolution.
        /// </summary>
        [Output("lockResolution")]
        public Output<string> LockResolution { get; private set; } = null!;

        /// <summary>
        /// Network redirection. See `net_redirect_policy` below.
        /// </summary>
        [Output("netRedirectPolicy")]
        public Output<Outputs.PolicyNetRedirectPolicy> NetRedirectPolicy { get; private set; } = null!;

        /// <summary>
        /// The policy name.
        /// </summary>
        [Output("policyGroupName")]
        public Output<string> PolicyGroupName { get; private set; } = null!;

        /// <summary>
        /// The height of the resolution. Unit: Pixels.
        /// </summary>
        [Output("resolutionHeight")]
        public Output<int> ResolutionHeight { get; private set; } = null!;

        /// <summary>
        /// The width of the resolution. Unit: Pixels.
        /// </summary>
        [Output("resolutionWidth")]
        public Output<int> ResolutionWidth { get; private set; } = null!;


        /// <summary>
        /// Create a Policy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Policy(string name, PolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudphone/policy:Policy", name, args ?? new PolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Policy(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cloudphone/policy:Policy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Policy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Policy Get(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new Policy(name, id, state, options);
        }
    }

    public sealed class PolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to turn on local camera redirection.
        /// </summary>
        [Input("cameraRedirect")]
        public Input<string>? CameraRedirect { get; set; }

        /// <summary>
        /// Clipboard permissions.
        /// </summary>
        [Input("clipboard")]
        public Input<string>? Clipboard { get; set; }

        /// <summary>
        /// Whether to lock the resolution.
        /// </summary>
        [Input("lockResolution")]
        public Input<string>? LockResolution { get; set; }

        /// <summary>
        /// Network redirection. See `net_redirect_policy` below.
        /// </summary>
        [Input("netRedirectPolicy")]
        public Input<Inputs.PolicyNetRedirectPolicyArgs>? NetRedirectPolicy { get; set; }

        /// <summary>
        /// The policy name.
        /// </summary>
        [Input("policyGroupName")]
        public Input<string>? PolicyGroupName { get; set; }

        /// <summary>
        /// The height of the resolution. Unit: Pixels.
        /// </summary>
        [Input("resolutionHeight")]
        public Input<int>? ResolutionHeight { get; set; }

        /// <summary>
        /// The width of the resolution. Unit: Pixels.
        /// </summary>
        [Input("resolutionWidth")]
        public Input<int>? ResolutionWidth { get; set; }

        public PolicyArgs()
        {
        }
        public static new PolicyArgs Empty => new PolicyArgs();
    }

    public sealed class PolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to turn on local camera redirection.
        /// </summary>
        [Input("cameraRedirect")]
        public Input<string>? CameraRedirect { get; set; }

        /// <summary>
        /// Clipboard permissions.
        /// </summary>
        [Input("clipboard")]
        public Input<string>? Clipboard { get; set; }

        /// <summary>
        /// Whether to lock the resolution.
        /// </summary>
        [Input("lockResolution")]
        public Input<string>? LockResolution { get; set; }

        /// <summary>
        /// Network redirection. See `net_redirect_policy` below.
        /// </summary>
        [Input("netRedirectPolicy")]
        public Input<Inputs.PolicyNetRedirectPolicyGetArgs>? NetRedirectPolicy { get; set; }

        /// <summary>
        /// The policy name.
        /// </summary>
        [Input("policyGroupName")]
        public Input<string>? PolicyGroupName { get; set; }

        /// <summary>
        /// The height of the resolution. Unit: Pixels.
        /// </summary>
        [Input("resolutionHeight")]
        public Input<int>? ResolutionHeight { get; set; }

        /// <summary>
        /// The width of the resolution. Unit: Pixels.
        /// </summary>
        [Input("resolutionWidth")]
        public Input<int>? ResolutionWidth { get; set; }

        public PolicyState()
        {
        }
        public static new PolicyState Empty => new PolicyState();
    }
}
