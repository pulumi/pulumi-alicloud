// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect
{
    /// <summary>
    /// Provides a Express Connect Physical Connection resource.
    /// 
    /// For information about Express Connect Physical Connection and how to use it, see [What is Physical Connection](https://www.alibabacloud.com/help/en/express-connect/developer-reference/api-vpc-2016-04-28-createphysicalconnection-efficiency-channels).
    /// 
    /// &gt; **NOTE:** Available since v1.132.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var domestic = new AliCloud.ExpressConnect.PhysicalConnection("domestic", new()
    ///     {
    ///         AccessPointId = "ap-cn-hangzhou-yh-B",
    ///         LineOperator = "CT",
    ///         PeerLocation = "example_value",
    ///         PhysicalConnectionName = "example_value",
    ///         Type = "VPC",
    ///         Description = "my domestic connection",
    ///         PortType = "1000Base-LX",
    ///         Bandwidth = "100",
    ///     });
    /// 
    ///     var international = new AliCloud.ExpressConnect.PhysicalConnection("international", new()
    ///     {
    ///         AccessPointId = "ap-sg-singpore-A",
    ///         LineOperator = "Other",
    ///         PeerLocation = "example_value",
    ///         PhysicalConnectionName = "example_value",
    ///         Type = "VPC",
    ///         Description = "my domestic connection",
    ///         PortType = "1000Base-LX",
    ///         Bandwidth = "100",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Express Connect Physical Connection can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:expressconnect/physicalConnection:PhysicalConnection example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:expressconnect/physicalConnection:PhysicalConnection")]
    public partial class PhysicalConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access point ID of the Express Connect circuit.
        /// </summary>
        [Output("accessPointId")]
        public Output<string> AccessPointId { get; private set; } = null!;

        /// <summary>
        /// The maximum bandwidth of the hosted connection.
        /// </summary>
        [Output("bandwidth")]
        public Output<string> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The circuit code of the Express Connect circuit.
        /// </summary>
        [Output("circuitCode")]
        public Output<string?> CircuitCode { get; private set; } = null!;

        /// <summary>
        /// The description of the Express Connect circuit.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The connectivity provider of the Express Connect circuit. Valid values:
        /// - `CT`: China Telecom.
        /// - `CU`: China Unicom.
        /// - `CM`: China Mobile.
        /// - `CO`: Other connectivity providers in the Chinese mainland.
        /// - `Equinix`: Equinix.
        /// - `Other`: Other connectivity providers outside the Chinese mainland.
        /// </summary>
        [Output("lineOperator")]
        public Output<string> LineOperator { get; private set; } = null!;

        /// <summary>
        /// The ID of the order that is placed. **Note:** `order_id` takes effect only if `status` is set to `Enabled`.
        /// </summary>
        [Output("orderId")]
        public Output<string> OrderId { get; private set; } = null!;

        /// <summary>
        /// The geographical location of the data center.
        /// </summary>
        [Output("peerLocation")]
        public Output<string> PeerLocation { get; private set; } = null!;

        /// <summary>
        /// The subscription duration. Valid values:
        /// - If `pricing_cycle` is set to `Month`. Valid values: `1` to `9`.
        /// - If `pricing_cycle` is set to `Year`. Valid values: `1` to `5`.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// The name of the Express Connect circuit.
        /// </summary>
        [Output("physicalConnectionName")]
        public Output<string?> PhysicalConnectionName { get; private set; } = null!;

        /// <summary>
        /// The port type of the Express Connect circuit. Valid values:
        /// - `100Base-T`: 100 Mbit/s copper Ethernet port.
        /// - `1000Base-T`: 1000 Mbit/s copper Ethernet port.
        /// - `1000Base-LX`: 1000 Mbit/s single-mode optical port (10 km).
        /// - `10GBase-T`: 10000 Mbit/s copper Ethernet port.
        /// - `10GBase-LR`: 10000 Mbit/s single-mode optical port (10 km).
        /// - `40GBase-LR`: 40000 Mbit/s single-mode optical port.
        /// - `100GBase-LR`: 100000 Mbit/s single-mode optical port.
        /// &gt; **NOTE:** From version 1.185.0, `port_type` can be set to `40GBase-LR`, `100GBase-LR`. From version 1.230.1, `port_type` cannot be modified.
        /// </summary>
        [Output("portType")]
        public Output<string?> PortType { get; private set; } = null!;

        /// <summary>
        /// The billing cycle of the subscription. Default value: `Month`. Valid values: `Month`, `Year`.
        /// &gt; **NOTE:** `period` and `pricing_cycle` are valid only when `status` is set to `Enabled`.
        /// </summary>
        [Output("pricingCycle")]
        public Output<string?> PricingCycle { get; private set; } = null!;

        /// <summary>
        /// The ID of the redundant Express Connect circuit. **NOTE:** From version 1.230.1, `redundant_physical_connection_id` cannot be modified.
        /// </summary>
        [Output("redundantPhysicalConnectionId")]
        public Output<string?> RedundantPhysicalConnectionId { get; private set; } = null!;

        /// <summary>
        /// The status of the Express Connect circuit. Valid values: `Confirmed`, `Enabled`, `Canceled`, `Terminated`. **NOTE:** From version 1.230.1, `status` can be set to `Confirmed`. If you want to set `status` to `Enabled`, `period` must be set.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The type of Express Connect circuit. Default value: `VPC`. Valid values: `VPC`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PhysicalConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PhysicalConnection(string name, PhysicalConnectionArgs args, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/physicalConnection:PhysicalConnection", name, args ?? new PhysicalConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PhysicalConnection(string name, Input<string> id, PhysicalConnectionState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/physicalConnection:PhysicalConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PhysicalConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PhysicalConnection Get(string name, Input<string> id, PhysicalConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new PhysicalConnection(name, id, state, options);
        }
    }

    public sealed class PhysicalConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access point ID of the Express Connect circuit.
        /// </summary>
        [Input("accessPointId", required: true)]
        public Input<string> AccessPointId { get; set; } = null!;

        /// <summary>
        /// The maximum bandwidth of the hosted connection.
        /// </summary>
        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        /// <summary>
        /// The circuit code of the Express Connect circuit.
        /// </summary>
        [Input("circuitCode")]
        public Input<string>? CircuitCode { get; set; }

        /// <summary>
        /// The description of the Express Connect circuit.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The connectivity provider of the Express Connect circuit. Valid values:
        /// - `CT`: China Telecom.
        /// - `CU`: China Unicom.
        /// - `CM`: China Mobile.
        /// - `CO`: Other connectivity providers in the Chinese mainland.
        /// - `Equinix`: Equinix.
        /// - `Other`: Other connectivity providers outside the Chinese mainland.
        /// </summary>
        [Input("lineOperator", required: true)]
        public Input<string> LineOperator { get; set; } = null!;

        /// <summary>
        /// The geographical location of the data center.
        /// </summary>
        [Input("peerLocation")]
        public Input<string>? PeerLocation { get; set; }

        /// <summary>
        /// The subscription duration. Valid values:
        /// - If `pricing_cycle` is set to `Month`. Valid values: `1` to `9`.
        /// - If `pricing_cycle` is set to `Year`. Valid values: `1` to `5`.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The name of the Express Connect circuit.
        /// </summary>
        [Input("physicalConnectionName")]
        public Input<string>? PhysicalConnectionName { get; set; }

        /// <summary>
        /// The port type of the Express Connect circuit. Valid values:
        /// - `100Base-T`: 100 Mbit/s copper Ethernet port.
        /// - `1000Base-T`: 1000 Mbit/s copper Ethernet port.
        /// - `1000Base-LX`: 1000 Mbit/s single-mode optical port (10 km).
        /// - `10GBase-T`: 10000 Mbit/s copper Ethernet port.
        /// - `10GBase-LR`: 10000 Mbit/s single-mode optical port (10 km).
        /// - `40GBase-LR`: 40000 Mbit/s single-mode optical port.
        /// - `100GBase-LR`: 100000 Mbit/s single-mode optical port.
        /// &gt; **NOTE:** From version 1.185.0, `port_type` can be set to `40GBase-LR`, `100GBase-LR`. From version 1.230.1, `port_type` cannot be modified.
        /// </summary>
        [Input("portType")]
        public Input<string>? PortType { get; set; }

        /// <summary>
        /// The billing cycle of the subscription. Default value: `Month`. Valid values: `Month`, `Year`.
        /// &gt; **NOTE:** `period` and `pricing_cycle` are valid only when `status` is set to `Enabled`.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// The ID of the redundant Express Connect circuit. **NOTE:** From version 1.230.1, `redundant_physical_connection_id` cannot be modified.
        /// </summary>
        [Input("redundantPhysicalConnectionId")]
        public Input<string>? RedundantPhysicalConnectionId { get; set; }

        /// <summary>
        /// The status of the Express Connect circuit. Valid values: `Confirmed`, `Enabled`, `Canceled`, `Terminated`. **NOTE:** From version 1.230.1, `status` can be set to `Confirmed`. If you want to set `status` to `Enabled`, `period` must be set.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The type of Express Connect circuit. Default value: `VPC`. Valid values: `VPC`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public PhysicalConnectionArgs()
        {
        }
        public static new PhysicalConnectionArgs Empty => new PhysicalConnectionArgs();
    }

    public sealed class PhysicalConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access point ID of the Express Connect circuit.
        /// </summary>
        [Input("accessPointId")]
        public Input<string>? AccessPointId { get; set; }

        /// <summary>
        /// The maximum bandwidth of the hosted connection.
        /// </summary>
        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        /// <summary>
        /// The circuit code of the Express Connect circuit.
        /// </summary>
        [Input("circuitCode")]
        public Input<string>? CircuitCode { get; set; }

        /// <summary>
        /// The description of the Express Connect circuit.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The connectivity provider of the Express Connect circuit. Valid values:
        /// - `CT`: China Telecom.
        /// - `CU`: China Unicom.
        /// - `CM`: China Mobile.
        /// - `CO`: Other connectivity providers in the Chinese mainland.
        /// - `Equinix`: Equinix.
        /// - `Other`: Other connectivity providers outside the Chinese mainland.
        /// </summary>
        [Input("lineOperator")]
        public Input<string>? LineOperator { get; set; }

        /// <summary>
        /// The ID of the order that is placed. **Note:** `order_id` takes effect only if `status` is set to `Enabled`.
        /// </summary>
        [Input("orderId")]
        public Input<string>? OrderId { get; set; }

        /// <summary>
        /// The geographical location of the data center.
        /// </summary>
        [Input("peerLocation")]
        public Input<string>? PeerLocation { get; set; }

        /// <summary>
        /// The subscription duration. Valid values:
        /// - If `pricing_cycle` is set to `Month`. Valid values: `1` to `9`.
        /// - If `pricing_cycle` is set to `Year`. Valid values: `1` to `5`.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The name of the Express Connect circuit.
        /// </summary>
        [Input("physicalConnectionName")]
        public Input<string>? PhysicalConnectionName { get; set; }

        /// <summary>
        /// The port type of the Express Connect circuit. Valid values:
        /// - `100Base-T`: 100 Mbit/s copper Ethernet port.
        /// - `1000Base-T`: 1000 Mbit/s copper Ethernet port.
        /// - `1000Base-LX`: 1000 Mbit/s single-mode optical port (10 km).
        /// - `10GBase-T`: 10000 Mbit/s copper Ethernet port.
        /// - `10GBase-LR`: 10000 Mbit/s single-mode optical port (10 km).
        /// - `40GBase-LR`: 40000 Mbit/s single-mode optical port.
        /// - `100GBase-LR`: 100000 Mbit/s single-mode optical port.
        /// &gt; **NOTE:** From version 1.185.0, `port_type` can be set to `40GBase-LR`, `100GBase-LR`. From version 1.230.1, `port_type` cannot be modified.
        /// </summary>
        [Input("portType")]
        public Input<string>? PortType { get; set; }

        /// <summary>
        /// The billing cycle of the subscription. Default value: `Month`. Valid values: `Month`, `Year`.
        /// &gt; **NOTE:** `period` and `pricing_cycle` are valid only when `status` is set to `Enabled`.
        /// </summary>
        [Input("pricingCycle")]
        public Input<string>? PricingCycle { get; set; }

        /// <summary>
        /// The ID of the redundant Express Connect circuit. **NOTE:** From version 1.230.1, `redundant_physical_connection_id` cannot be modified.
        /// </summary>
        [Input("redundantPhysicalConnectionId")]
        public Input<string>? RedundantPhysicalConnectionId { get; set; }

        /// <summary>
        /// The status of the Express Connect circuit. Valid values: `Confirmed`, `Enabled`, `Canceled`, `Terminated`. **NOTE:** From version 1.230.1, `status` can be set to `Confirmed`. If you want to set `status` to `Enabled`, `period` must be set.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The type of Express Connect circuit. Default value: `VPC`. Valid values: `VPC`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public PhysicalConnectionState()
        {
        }
        public static new PhysicalConnectionState Empty => new PhysicalConnectionState();
    }
}
