// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect
{
    /// <summary>
    /// Provides a Express Connect Traffic Qos Queue resource.
    /// 
    /// Express Connect Traffic QoS Queue.
    /// 
    /// For information about Express Connect Traffic Qos Queue and how to use it, see [What is Traffic Qos Queue](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQosQueue).
    /// 
    /// &gt; **NOTE:** Available since v1.224.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
    ///     {
    ///         NameRegex = "preserved-NODELETING",
    ///     });
    /// 
    ///     var createQos = new AliCloud.ExpressConnect.TrafficQos("createQos", new()
    ///     {
    ///         QosName = name,
    ///         QosDescription = "terraform-example",
    ///     });
    /// 
    ///     var associateQos = new AliCloud.ExpressConnect.TrafficQosAssociation("associateQos", new()
    ///     {
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Ids[1])),
    ///         QosId = createQos.Id,
    ///         InstanceType = "PHYSICALCONNECTION",
    ///     });
    /// 
    ///     var createQosQueue = new AliCloud.ExpressConnect.TrafficQosQueue("createQosQueue", new()
    ///     {
    ///         QosId = createQos.Id,
    ///         BandwidthPercent = "60",
    ///         QueueDescription = "terraform-example",
    ///         QueueName = name,
    ///         QueueType = "Medium",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Express Connect Traffic Qos Queue can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:expressconnect/trafficQosQueue:TrafficQosQueue example &lt;qos_id&gt;:&lt;queue_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:expressconnect/trafficQosQueue:TrafficQosQueue")]
    public partial class TrafficQosQueue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// QoS queue bandwidth percentage.
        /// 
        /// - When the QoS queue type is `Medium`, this field must be entered. Valid values: 1 to 100.
        /// - When the QoS queue type is `Default`, this field is "-".
        /// </summary>
        [Output("bandwidthPercent")]
        public Output<string> BandwidthPercent { get; private set; } = null!;

        /// <summary>
        /// The ID of the QoS policy.
        /// </summary>
        [Output("qosId")]
        public Output<string> QosId { get; private set; } = null!;

        /// <summary>
        /// The description of the QoS queue.
        /// The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Output("queueDescription")]
        public Output<string?> QueueDescription { get; private set; } = null!;

        /// <summary>
        /// The ID of the QoS queue.
        /// </summary>
        [Output("queueId")]
        public Output<string> QueueId { get; private set; } = null!;

        /// <summary>
        /// The name of the QoS queue.
        /// The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Output("queueName")]
        public Output<string?> QueueName { get; private set; } = null!;

        /// <summary>
        /// QoS queue type, value:
        /// - `High`: High priority queue.
        /// - `Medium`: Normal priority queue.
        /// - `Default`: the Default priority queue.
        /// 
        /// &gt; **NOTE:**  Default priority queue cannot be created.
        /// </summary>
        [Output("queueType")]
        public Output<string> QueueType { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficQosQueue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficQosQueue(string name, TrafficQosQueueArgs args, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/trafficQosQueue:TrafficQosQueue", name, args ?? new TrafficQosQueueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficQosQueue(string name, Input<string> id, TrafficQosQueueState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/trafficQosQueue:TrafficQosQueue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficQosQueue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficQosQueue Get(string name, Input<string> id, TrafficQosQueueState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficQosQueue(name, id, state, options);
        }
    }

    public sealed class TrafficQosQueueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// QoS queue bandwidth percentage.
        /// 
        /// - When the QoS queue type is `Medium`, this field must be entered. Valid values: 1 to 100.
        /// - When the QoS queue type is `Default`, this field is "-".
        /// </summary>
        [Input("bandwidthPercent")]
        public Input<string>? BandwidthPercent { get; set; }

        /// <summary>
        /// The ID of the QoS policy.
        /// </summary>
        [Input("qosId", required: true)]
        public Input<string> QosId { get; set; } = null!;

        /// <summary>
        /// The description of the QoS queue.
        /// The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("queueDescription")]
        public Input<string>? QueueDescription { get; set; }

        /// <summary>
        /// The name of the QoS queue.
        /// The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("queueName")]
        public Input<string>? QueueName { get; set; }

        /// <summary>
        /// QoS queue type, value:
        /// - `High`: High priority queue.
        /// - `Medium`: Normal priority queue.
        /// - `Default`: the Default priority queue.
        /// 
        /// &gt; **NOTE:**  Default priority queue cannot be created.
        /// </summary>
        [Input("queueType", required: true)]
        public Input<string> QueueType { get; set; } = null!;

        public TrafficQosQueueArgs()
        {
        }
        public static new TrafficQosQueueArgs Empty => new TrafficQosQueueArgs();
    }

    public sealed class TrafficQosQueueState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// QoS queue bandwidth percentage.
        /// 
        /// - When the QoS queue type is `Medium`, this field must be entered. Valid values: 1 to 100.
        /// - When the QoS queue type is `Default`, this field is "-".
        /// </summary>
        [Input("bandwidthPercent")]
        public Input<string>? BandwidthPercent { get; set; }

        /// <summary>
        /// The ID of the QoS policy.
        /// </summary>
        [Input("qosId")]
        public Input<string>? QosId { get; set; }

        /// <summary>
        /// The description of the QoS queue.
        /// The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("queueDescription")]
        public Input<string>? QueueDescription { get; set; }

        /// <summary>
        /// The ID of the QoS queue.
        /// </summary>
        [Input("queueId")]
        public Input<string>? QueueId { get; set; }

        /// <summary>
        /// The name of the QoS queue.
        /// The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("queueName")]
        public Input<string>? QueueName { get; set; }

        /// <summary>
        /// QoS queue type, value:
        /// - `High`: High priority queue.
        /// - `Medium`: Normal priority queue.
        /// - `Default`: the Default priority queue.
        /// 
        /// &gt; **NOTE:**  Default priority queue cannot be created.
        /// </summary>
        [Input("queueType")]
        public Input<string>? QueueType { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public TrafficQosQueueState()
        {
        }
        public static new TrafficQosQueueState Empty => new TrafficQosQueueState();
    }
}
