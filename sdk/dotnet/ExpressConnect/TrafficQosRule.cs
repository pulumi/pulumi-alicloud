// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect
{
    /// <summary>
    /// Provides a Express Connect Traffic Qos Rule resource. Express Connect Traffic QoS Rule.
    /// 
    /// For information about Express Connect Traffic Qos Rule and how to use it, see [What is Traffic Qos Rule](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQosRule).
    /// 
    /// &gt; **NOTE:** Available since v1.224.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
    ///     {
    ///         NameRegex = "preserved-NODELETING",
    ///     });
    /// 
    ///     var createQos = new AliCloud.ExpressConnect.TrafficQos("createQos", new()
    ///     {
    ///         QosName = name,
    ///         QosDescription = "terraform-example",
    ///     });
    /// 
    ///     var associateQos = new AliCloud.ExpressConnect.TrafficQosAssociation("associateQos", new()
    ///     {
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Ids[1])),
    ///         QosId = createQos.Id,
    ///         InstanceType = "PHYSICALCONNECTION",
    ///     });
    /// 
    ///     var createQosQueue = new AliCloud.ExpressConnect.TrafficQosQueue("createQosQueue", new()
    ///     {
    ///         QosId = createQos.Id,
    ///         BandwidthPercent = "60",
    ///         QueueDescription = "terraform-example",
    ///         QueueName = name,
    ///         QueueType = "Medium",
    ///     });
    /// 
    ///     var defaultTrafficQosRule = new AliCloud.ExpressConnect.TrafficQosRule("default", new()
    ///     {
    ///         RuleDescription = "terraform-example",
    ///         Priority = 1,
    ///         Protocol = "ALL",
    ///         SrcPortRange = "-1/-1",
    ///         DstIpv6Cidr = "2001:db8:1234:5678::/64",
    ///         SrcIpv6Cidr = "2001:db8:1234:5678::/64",
    ///         DstPortRange = "-1/-1",
    ///         RemarkingDscp = -1,
    ///         QueueId = createQosQueue.QueueId,
    ///         QosId = createQos.Id,
    ///         MatchDscp = -1,
    ///         RuleName = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Express Connect Traffic Qos Rule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:expressconnect/trafficQosRule:TrafficQosRule example &lt;qos_id&gt;:&lt;queue_id&gt;:&lt;rule_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:expressconnect/trafficQosRule:TrafficQosRule")]
    public partial class TrafficQosRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The traffic of the QoS rule matches the Destination IPv4 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
        /// </summary>
        [Output("dstCidr")]
        public Output<string?> DstCidr { get; private set; } = null!;

        /// <summary>
        /// The QoS rule traffic matches the Destination IPv6 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
        /// </summary>
        [Output("dstIpv6Cidr")]
        public Output<string?> DstIpv6Cidr { get; private set; } = null!;

        /// <summary>
        /// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
        /// - **ALL**:-1/-1, not editable.
        /// - **ICMP(IPv4)**:-1/-1, non-editable.
        /// - **ICMPv6(IPv6)**:-1/-1, non-editable.
        /// - **TCP**:-1/-1, editable.
        /// - **UDP**:-1/-1, editable.
        /// - **GRE**:-1/-1, not editable.
        /// - **SSH**:22/22, not editable.
        /// - **Telnet**:23/23, not editable.
        /// - **HTTP**:80/80, non-editable.
        /// - **HTTPS**:443/443, which cannot be edited.
        /// - **MS SQL**:1443/1443, which cannot be edited.
        /// - **Oracle**:1521/1521, non-editable.
        /// - **MySql**:3306/3306, non-editable.
        /// - **RDP**:3389/3389, non-editable.
        /// - **PostgreSQL**:5432/5432, non-editable.
        /// - **Redis**:6379/6379, non-editable.
        /// </summary>
        [Output("dstPortRange")]
        public Output<string> DstPortRange { get; private set; } = null!;

        /// <summary>
        /// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
        /// </summary>
        [Output("matchDscp")]
        public Output<int> MatchDscp { get; private set; } = null!;

        /// <summary>
        /// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// QoS rule protocol type, value:
        /// - **ALL**
        /// - **ICMP(IPv4)**
        /// - **ICMPv6(IPv6)* *
        /// - **TCP**
        /// - **UDP**
        /// - **GRE**
        /// - **SSH**
        /// - **Telnet**
        /// - **HTTP**
        /// - **HTTPS**
        /// - **MS SQL**
        /// - **Oracle**
        /// - **MySql**
        /// - **RDP**
        /// - **PostgreSQL**
        /// - **Redis**.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The QoS policy ID.
        /// </summary>
        [Output("qosId")]
        public Output<string> QosId { get; private set; } = null!;

        /// <summary>
        /// The QoS queue ID.
        /// </summary>
        [Output("queueId")]
        public Output<string> QueueId { get; private set; } = null!;

        /// <summary>
        /// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
        /// </summary>
        [Output("remarkingDscp")]
        public Output<int> RemarkingDscp { get; private set; } = null!;

        /// <summary>
        /// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Output("ruleDescription")]
        public Output<string?> RuleDescription { get; private set; } = null!;

        /// <summary>
        /// The ID of the QoS rule.
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;

        /// <summary>
        /// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Output("ruleName")]
        public Output<string?> RuleName { get; private set; } = null!;

        /// <summary>
        /// The QoS rule traffic matches the source IPv4 CIDR block.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
        /// </summary>
        [Output("srcCidr")]
        public Output<string?> SrcCidr { get; private set; } = null!;

        /// <summary>
        /// The QoS rule traffic matches the source IPv6 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
        /// </summary>
        [Output("srcIpv6Cidr")]
        public Output<string?> SrcIpv6Cidr { get; private set; } = null!;

        /// <summary>
        /// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
        /// </summary>
        [Output("srcPortRange")]
        public Output<string> SrcPortRange { get; private set; } = null!;

        /// <summary>
        /// The status of the QoS rule. Value:
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficQosRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficQosRule(string name, TrafficQosRuleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/trafficQosRule:TrafficQosRule", name, args ?? new TrafficQosRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficQosRule(string name, Input<string> id, TrafficQosRuleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/trafficQosRule:TrafficQosRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficQosRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficQosRule Get(string name, Input<string> id, TrafficQosRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficQosRule(name, id, state, options);
        }
    }

    public sealed class TrafficQosRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The traffic of the QoS rule matches the Destination IPv4 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
        /// </summary>
        [Input("dstCidr")]
        public Input<string>? DstCidr { get; set; }

        /// <summary>
        /// The QoS rule traffic matches the Destination IPv6 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
        /// </summary>
        [Input("dstIpv6Cidr")]
        public Input<string>? DstIpv6Cidr { get; set; }

        /// <summary>
        /// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
        /// - **ALL**:-1/-1, not editable.
        /// - **ICMP(IPv4)**:-1/-1, non-editable.
        /// - **ICMPv6(IPv6)**:-1/-1, non-editable.
        /// - **TCP**:-1/-1, editable.
        /// - **UDP**:-1/-1, editable.
        /// - **GRE**:-1/-1, not editable.
        /// - **SSH**:22/22, not editable.
        /// - **Telnet**:23/23, not editable.
        /// - **HTTP**:80/80, non-editable.
        /// - **HTTPS**:443/443, which cannot be edited.
        /// - **MS SQL**:1443/1443, which cannot be edited.
        /// - **Oracle**:1521/1521, non-editable.
        /// - **MySql**:3306/3306, non-editable.
        /// - **RDP**:3389/3389, non-editable.
        /// - **PostgreSQL**:5432/5432, non-editable.
        /// - **Redis**:6379/6379, non-editable.
        /// </summary>
        [Input("dstPortRange")]
        public Input<string>? DstPortRange { get; set; }

        /// <summary>
        /// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
        /// </summary>
        [Input("matchDscp")]
        public Input<int>? MatchDscp { get; set; }

        /// <summary>
        /// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// QoS rule protocol type, value:
        /// - **ALL**
        /// - **ICMP(IPv4)**
        /// - **ICMPv6(IPv6)* *
        /// - **TCP**
        /// - **UDP**
        /// - **GRE**
        /// - **SSH**
        /// - **Telnet**
        /// - **HTTP**
        /// - **HTTPS**
        /// - **MS SQL**
        /// - **Oracle**
        /// - **MySql**
        /// - **RDP**
        /// - **PostgreSQL**
        /// - **Redis**.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The QoS policy ID.
        /// </summary>
        [Input("qosId", required: true)]
        public Input<string> QosId { get; set; } = null!;

        /// <summary>
        /// The QoS queue ID.
        /// </summary>
        [Input("queueId", required: true)]
        public Input<string> QueueId { get; set; } = null!;

        /// <summary>
        /// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
        /// </summary>
        [Input("remarkingDscp")]
        public Input<int>? RemarkingDscp { get; set; }

        /// <summary>
        /// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("ruleDescription")]
        public Input<string>? RuleDescription { get; set; }

        /// <summary>
        /// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The QoS rule traffic matches the source IPv4 CIDR block.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
        /// </summary>
        [Input("srcCidr")]
        public Input<string>? SrcCidr { get; set; }

        /// <summary>
        /// The QoS rule traffic matches the source IPv6 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
        /// </summary>
        [Input("srcIpv6Cidr")]
        public Input<string>? SrcIpv6Cidr { get; set; }

        /// <summary>
        /// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
        /// </summary>
        [Input("srcPortRange")]
        public Input<string>? SrcPortRange { get; set; }

        public TrafficQosRuleArgs()
        {
        }
        public static new TrafficQosRuleArgs Empty => new TrafficQosRuleArgs();
    }

    public sealed class TrafficQosRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The traffic of the QoS rule matches the Destination IPv4 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
        /// </summary>
        [Input("dstCidr")]
        public Input<string>? DstCidr { get; set; }

        /// <summary>
        /// The QoS rule traffic matches the Destination IPv6 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
        /// </summary>
        [Input("dstIpv6Cidr")]
        public Input<string>? DstIpv6Cidr { get; set; }

        /// <summary>
        /// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
        /// - **ALL**:-1/-1, not editable.
        /// - **ICMP(IPv4)**:-1/-1, non-editable.
        /// - **ICMPv6(IPv6)**:-1/-1, non-editable.
        /// - **TCP**:-1/-1, editable.
        /// - **UDP**:-1/-1, editable.
        /// - **GRE**:-1/-1, not editable.
        /// - **SSH**:22/22, not editable.
        /// - **Telnet**:23/23, not editable.
        /// - **HTTP**:80/80, non-editable.
        /// - **HTTPS**:443/443, which cannot be edited.
        /// - **MS SQL**:1443/1443, which cannot be edited.
        /// - **Oracle**:1521/1521, non-editable.
        /// - **MySql**:3306/3306, non-editable.
        /// - **RDP**:3389/3389, non-editable.
        /// - **PostgreSQL**:5432/5432, non-editable.
        /// - **Redis**:6379/6379, non-editable.
        /// </summary>
        [Input("dstPortRange")]
        public Input<string>? DstPortRange { get; set; }

        /// <summary>
        /// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
        /// </summary>
        [Input("matchDscp")]
        public Input<int>? MatchDscp { get; set; }

        /// <summary>
        /// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// QoS rule protocol type, value:
        /// - **ALL**
        /// - **ICMP(IPv4)**
        /// - **ICMPv6(IPv6)* *
        /// - **TCP**
        /// - **UDP**
        /// - **GRE**
        /// - **SSH**
        /// - **Telnet**
        /// - **HTTP**
        /// - **HTTPS**
        /// - **MS SQL**
        /// - **Oracle**
        /// - **MySql**
        /// - **RDP**
        /// - **PostgreSQL**
        /// - **Redis**.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The QoS policy ID.
        /// </summary>
        [Input("qosId")]
        public Input<string>? QosId { get; set; }

        /// <summary>
        /// The QoS queue ID.
        /// </summary>
        [Input("queueId")]
        public Input<string>? QueueId { get; set; }

        /// <summary>
        /// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
        /// </summary>
        [Input("remarkingDscp")]
        public Input<int>? RemarkingDscp { get; set; }

        /// <summary>
        /// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("ruleDescription")]
        public Input<string>? RuleDescription { get; set; }

        /// <summary>
        /// The ID of the QoS rule.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The QoS rule traffic matches the source IPv4 CIDR block.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
        /// </summary>
        [Input("srcCidr")]
        public Input<string>? SrcCidr { get; set; }

        /// <summary>
        /// The QoS rule traffic matches the source IPv6 network segment.
        /// &gt; **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
        /// </summary>
        [Input("srcIpv6Cidr")]
        public Input<string>? SrcIpv6Cidr { get; set; }

        /// <summary>
        /// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
        /// </summary>
        [Input("srcPortRange")]
        public Input<string>? SrcPortRange { get; set; }

        /// <summary>
        /// The status of the QoS rule. Value:
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public TrafficQosRuleState()
        {
        }
        public static new TrafficQosRuleState Empty => new TrafficQosRuleState();
    }
}
