// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect
{
    /// <summary>
    /// Provides a Express Connect Ec Failover Test Job resource. Express Connect Failover Test Job.
    /// 
    /// For information about Express Connect Ec Failover Test Job and how to use it, see [What is Ec Failover Test Job](https://www.alibabacloud.com/help/zh/express-connect/developer-reference/api-vpc-2016-04-28-createfailovertestjob-efficiency-channels).
    /// 
    /// &gt; **NOTE:** Available since v1.215.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultPhysicalConnections = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
    ///     {
    ///         NameRegex = "preserved-NODELETING",
    ///     });
    /// 
    ///     var defaultEcFailoverTestJob = new AliCloud.ExpressConnect.EcFailoverTestJob("defaultEcFailoverTestJob", new()
    ///     {
    ///         Description = name,
    ///         JobType = "StartNow",
    ///         ResourceIds = new[]
    ///         {
    ///             defaultPhysicalConnections.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Ids[0]),
    ///             defaultPhysicalConnections.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Ids[1]),
    ///             defaultPhysicalConnections.Apply(getPhysicalConnectionsResult =&gt; getPhysicalConnectionsResult.Ids[2]),
    ///         },
    ///         JobDuration = 1,
    ///         ResourceType = "PHYSICALCONNECTION",
    ///         EcFailoverTestJobName = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Express Connect Ec Failover Test Job can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob")]
    public partial class EcFailoverTestJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Job description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Job name.
        /// </summary>
        [Output("ecFailoverTestJobName")]
        public Output<string?> EcFailoverTestJobName { get; private set; } = null!;

        /// <summary>
        /// Job duration.
        /// </summary>
        [Output("jobDuration")]
        public Output<int> JobDuration { get; private set; } = null!;

        /// <summary>
        /// Job type.
        /// </summary>
        [Output("jobType")]
        public Output<string> JobType { get; private set; } = null!;

        /// <summary>
        /// Resource id list.
        /// </summary>
        [Output("resourceIds")]
        public Output<ImmutableArray<string>> ResourceIds { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a EcFailoverTestJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EcFailoverTestJob(string name, EcFailoverTestJobArgs args, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob", name, args ?? new EcFailoverTestJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EcFailoverTestJob(string name, Input<string> id, EcFailoverTestJobState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EcFailoverTestJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EcFailoverTestJob Get(string name, Input<string> id, EcFailoverTestJobState? state = null, CustomResourceOptions? options = null)
        {
            return new EcFailoverTestJob(name, id, state, options);
        }
    }

    public sealed class EcFailoverTestJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Job description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Job name.
        /// </summary>
        [Input("ecFailoverTestJobName")]
        public Input<string>? EcFailoverTestJobName { get; set; }

        /// <summary>
        /// Job duration.
        /// </summary>
        [Input("jobDuration", required: true)]
        public Input<int> JobDuration { get; set; } = null!;

        /// <summary>
        /// Job type.
        /// </summary>
        [Input("jobType", required: true)]
        public Input<string> JobType { get; set; } = null!;

        [Input("resourceIds", required: true)]
        private InputList<string>? _resourceIds;

        /// <summary>
        /// Resource id list.
        /// </summary>
        public InputList<string> ResourceIds
        {
            get => _resourceIds ?? (_resourceIds = new InputList<string>());
            set => _resourceIds = value;
        }

        /// <summary>
        /// Resource type.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public EcFailoverTestJobArgs()
        {
        }
        public static new EcFailoverTestJobArgs Empty => new EcFailoverTestJobArgs();
    }

    public sealed class EcFailoverTestJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Job description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Job name.
        /// </summary>
        [Input("ecFailoverTestJobName")]
        public Input<string>? EcFailoverTestJobName { get; set; }

        /// <summary>
        /// Job duration.
        /// </summary>
        [Input("jobDuration")]
        public Input<int>? JobDuration { get; set; }

        /// <summary>
        /// Job type.
        /// </summary>
        [Input("jobType")]
        public Input<string>? JobType { get; set; }

        [Input("resourceIds")]
        private InputList<string>? _resourceIds;

        /// <summary>
        /// Resource id list.
        /// </summary>
        public InputList<string> ResourceIds
        {
            get => _resourceIds ?? (_resourceIds = new InputList<string>());
            set => _resourceIds = value;
        }

        /// <summary>
        /// Resource type.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public EcFailoverTestJobState()
        {
        }
        public static new EcFailoverTestJobState Empty => new EcFailoverTestJobState();
    }
}
