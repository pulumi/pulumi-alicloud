// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect
{
    /// <summary>
    /// Provides a Express Connect Traffic Qos resource. Express Connect Traffic QoS Policy.
    /// 
    /// For information about Express Connect Traffic Qos and how to use it, see [What is Traffic Qos](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQos).
    /// 
    /// &gt; **NOTE:** Available since v1.224.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.ExpressConnect.GetPhysicalConnections.Invoke(new()
    ///     {
    ///         NameRegex = "preserved-NODELETING",
    ///     });
    /// 
    ///     var createQos = new AliCloud.ExpressConnect.TrafficQos("createQos", new()
    ///     {
    ///         QosName = name,
    ///         QosDescription = "terraform-example",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Express Connect Traffic Qos can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:expressconnect/trafficQos:TrafficQos example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:expressconnect/trafficQos:TrafficQos")]
    public partial class TrafficQos : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the QoS policy.  The length is **0** to **256** characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Output("qosDescription")]
        public Output<string?> QosDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the QoS policy.  The length is **0** to **128** characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Output("qosName")]
        public Output<string?> QosName { get; private set; } = null!;

        /// <summary>
        /// The status of the QoS policy. Value:
        /// &gt; **NOTE:**  QoS in the configuration state will restrict the creation, update, and deletion of most QoS policies, QoS queues, and QoS rules.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficQos resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficQos(string name, TrafficQosArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/trafficQos:TrafficQos", name, args ?? new TrafficQosArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficQos(string name, Input<string> id, TrafficQosState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:expressconnect/trafficQos:TrafficQos", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficQos resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficQos Get(string name, Input<string> id, TrafficQosState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficQos(name, id, state, options);
        }
    }

    public sealed class TrafficQosArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the QoS policy.  The length is **0** to **256** characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("qosDescription")]
        public Input<string>? QosDescription { get; set; }

        /// <summary>
        /// The name of the QoS policy.  The length is **0** to **128** characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("qosName")]
        public Input<string>? QosName { get; set; }

        public TrafficQosArgs()
        {
        }
        public static new TrafficQosArgs Empty => new TrafficQosArgs();
    }

    public sealed class TrafficQosState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the QoS policy.  The length is **0** to **256** characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("qosDescription")]
        public Input<string>? QosDescription { get; set; }

        /// <summary>
        /// The name of the QoS policy.  The length is **0** to **128** characters and cannot start with 'http:// 'or 'https.
        /// </summary>
        [Input("qosName")]
        public Input<string>? QosName { get; set; }

        /// <summary>
        /// The status of the QoS policy. Value:
        /// &gt; **NOTE:**  QoS in the configuration state will restrict the creation, update, and deletion of most QoS policies, QoS queues, and QoS rules.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public TrafficQosState()
        {
        }
        public static new TrafficQosState Empty => new TrafficQosState();
    }
}
