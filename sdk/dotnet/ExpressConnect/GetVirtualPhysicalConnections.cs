// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect
{
    public static class GetVirtualPhysicalConnections
    {
        /// <summary>
        /// This data source provides Express Connect Virtual Physical Connection available to the user.
        /// 
        /// &gt; **NOTE:** Available in 1.196.0+
        /// 
        /// ## Example Usage
        /// </summary>
        public static Task<GetVirtualPhysicalConnectionsResult> InvokeAsync(GetVirtualPhysicalConnectionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualPhysicalConnectionsResult>("alicloud:expressconnect/getVirtualPhysicalConnections:getVirtualPhysicalConnections", args ?? new GetVirtualPhysicalConnectionsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Express Connect Virtual Physical Connection available to the user.
        /// 
        /// &gt; **NOTE:** Available in 1.196.0+
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetVirtualPhysicalConnectionsResult> Invoke(GetVirtualPhysicalConnectionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualPhysicalConnectionsResult>("alicloud:expressconnect/getVirtualPhysicalConnections:getVirtualPhysicalConnections", args ?? new GetVirtualPhysicalConnectionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Express Connect Virtual Physical Connection available to the user.
        /// 
        /// &gt; **NOTE:** Available in 1.196.0+
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetVirtualPhysicalConnectionsResult> Invoke(GetVirtualPhysicalConnectionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualPhysicalConnectionsResult>("alicloud:expressconnect/getVirtualPhysicalConnections:getVirtualPhysicalConnections", args ?? new GetVirtualPhysicalConnectionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualPhysicalConnectionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The commercial status of the physical line. Value:
        /// - **Normal**: activated.
        /// - **Financialized**: Arrears locked.
        /// - **SecurityLocked**: locked for security reasons.
        /// </summary>
        [Input("businessStatus")]
        public string? BusinessStatus { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Virtual Physical Connection IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("isConfirmed")]
        public bool? IsConfirmed { get; set; }

        /// <summary>
        /// A regex string to filter results by Group Metric Rule name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of the instance of the physical connection.
        /// </summary>
        [Input("parentPhysicalConnectionId")]
        public string? ParentPhysicalConnectionId { get; set; }

        [Input("virtualPhysicalConnectionIds")]
        private List<string>? _virtualPhysicalConnectionIds;

        /// <summary>
        /// The ID of the hosted connection. You can specify multiple hosted connection IDs.
        /// </summary>
        public List<string> VirtualPhysicalConnectionIds
        {
            get => _virtualPhysicalConnectionIds ?? (_virtualPhysicalConnectionIds = new List<string>());
            set => _virtualPhysicalConnectionIds = value;
        }

        /// <summary>
        /// The business status of the shared line. Value:
        /// - **Confirmed**: The shared line has been Confirmed to receive.
        /// - **UnConfirmed**: The shared line has not been confirmed to be received.
        /// - **Deleted**: The shared line has been Deleted.
        /// </summary>
        [Input("virtualPhysicalConnectionStatus")]
        public string? VirtualPhysicalConnectionStatus { get; set; }

        [Input("vlanIds")]
        private List<int>? _vlanIds;

        /// <summary>
        /// The VLAN ID of the hosted connection. You can specify multiple VLAN IDs.
        /// </summary>
        public List<int> VlanIds
        {
            get => _vlanIds ?? (_vlanIds = new List<int>());
            set => _vlanIds = value;
        }

        /// <summary>
        /// The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
        /// </summary>
        [Input("vpconnAliUid")]
        public string? VpconnAliUid { get; set; }

        public GetVirtualPhysicalConnectionsArgs()
        {
        }
        public static new GetVirtualPhysicalConnectionsArgs Empty => new GetVirtualPhysicalConnectionsArgs();
    }

    public sealed class GetVirtualPhysicalConnectionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The commercial status of the physical line. Value:
        /// - **Normal**: activated.
        /// - **Financialized**: Arrears locked.
        /// - **SecurityLocked**: locked for security reasons.
        /// </summary>
        [Input("businessStatus")]
        public Input<string>? BusinessStatus { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Virtual Physical Connection IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("isConfirmed")]
        public Input<bool>? IsConfirmed { get; set; }

        /// <summary>
        /// A regex string to filter results by Group Metric Rule name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of the instance of the physical connection.
        /// </summary>
        [Input("parentPhysicalConnectionId")]
        public Input<string>? ParentPhysicalConnectionId { get; set; }

        [Input("virtualPhysicalConnectionIds")]
        private InputList<string>? _virtualPhysicalConnectionIds;

        /// <summary>
        /// The ID of the hosted connection. You can specify multiple hosted connection IDs.
        /// </summary>
        public InputList<string> VirtualPhysicalConnectionIds
        {
            get => _virtualPhysicalConnectionIds ?? (_virtualPhysicalConnectionIds = new InputList<string>());
            set => _virtualPhysicalConnectionIds = value;
        }

        /// <summary>
        /// The business status of the shared line. Value:
        /// - **Confirmed**: The shared line has been Confirmed to receive.
        /// - **UnConfirmed**: The shared line has not been confirmed to be received.
        /// - **Deleted**: The shared line has been Deleted.
        /// </summary>
        [Input("virtualPhysicalConnectionStatus")]
        public Input<string>? VirtualPhysicalConnectionStatus { get; set; }

        [Input("vlanIds")]
        private InputList<int>? _vlanIds;

        /// <summary>
        /// The VLAN ID of the hosted connection. You can specify multiple VLAN IDs.
        /// </summary>
        public InputList<int> VlanIds
        {
            get => _vlanIds ?? (_vlanIds = new InputList<int>());
            set => _vlanIds = value;
        }

        /// <summary>
        /// The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
        /// </summary>
        [Input("vpconnAliUid")]
        public Input<string>? VpconnAliUid { get; set; }

        public GetVirtualPhysicalConnectionsInvokeArgs()
        {
        }
        public static new GetVirtualPhysicalConnectionsInvokeArgs Empty => new GetVirtualPhysicalConnectionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualPhysicalConnectionsResult
    {
        /// <summary>
        /// The commercial status of the physical line. Value:-**Normal**: activated.-**Financialized**: Arrears locked.-**SecurityLocked**: locked for security reasons.
        /// </summary>
        public readonly string? BusinessStatus;
        /// <summary>
        /// A list of Virtual Physical Connection Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVirtualPhysicalConnectionsConnectionResult> Connections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Virtual Physical Connection IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly bool? IsConfirmed;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of name of Virtual Physical Connections.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// The ID of the instance of the physical connection.
        /// </summary>
        public readonly string? ParentPhysicalConnectionId;
        public readonly ImmutableArray<string> VirtualPhysicalConnectionIds;
        /// <summary>
        /// The business status of the shared line. Value:-**Confirmed**: The shared line has been Confirmed to receive.-**UnConfirmed**: The shared line has not been confirmed to be received.-**Deleted**: The shared line has been Deleted.
        /// </summary>
        public readonly string? VirtualPhysicalConnectionStatus;
        public readonly ImmutableArray<int> VlanIds;
        /// <summary>
        /// The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
        /// </summary>
        public readonly string? VpconnAliUid;

        [OutputConstructor]
        private GetVirtualPhysicalConnectionsResult(
            string? businessStatus,

            ImmutableArray<Outputs.GetVirtualPhysicalConnectionsConnectionResult> connections,

            string id,

            ImmutableArray<string> ids,

            bool? isConfirmed,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? parentPhysicalConnectionId,

            ImmutableArray<string> virtualPhysicalConnectionIds,

            string? virtualPhysicalConnectionStatus,

            ImmutableArray<int> vlanIds,

            string? vpconnAliUid)
        {
            BusinessStatus = businessStatus;
            Connections = connections;
            Id = id;
            Ids = ids;
            IsConfirmed = isConfirmed;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            ParentPhysicalConnectionId = parentPhysicalConnectionId;
            VirtualPhysicalConnectionIds = virtualPhysicalConnectionIds;
            VirtualPhysicalConnectionStatus = virtualPhysicalConnectionStatus;
            VlanIds = vlanIds;
            VpconnAliUid = vpconnAliUid;
        }
    }
}
