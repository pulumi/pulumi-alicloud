// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ExpressConnect.Outputs
{

    [OutputType]
    public sealed class GetVbrPconnAssociationsAssociationResult
    {
        /// <summary>
        /// The circuit code provided by the operator for the physical connection.
        /// </summary>
        public readonly string CircuitCode;
        /// <summary>
        /// Whether IPv6 is enabled.
        /// </summary>
        public readonly bool EnableIpv6;
        /// <summary>
        /// The ID of the Vbr Pconn Association.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Alibaba cloud IP address of the VBR instance.
        /// </summary>
        public readonly string LocalGatewayIp;
        /// <summary>
        /// The IPv6 address on the Alibaba Cloud side of the VBR instance.
        /// </summary>
        public readonly string LocalIpv6GatewayIp;
        /// <summary>
        /// The client IP address of the VBR instance.
        /// </summary>
        public readonly string PeerGatewayIp;
        /// <summary>
        /// The IPv6 address of the client side of the VBR instance.
        /// </summary>
        public readonly string PeerIpv6GatewayIp;
        /// <summary>
        /// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
        /// </summary>
        public readonly string PeeringIpv6SubnetMask;
        /// <summary>
        /// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
        /// </summary>
        public readonly string PeeringSubnetMask;
        /// <summary>
        /// The ID of the leased line instance.
        /// </summary>
        public readonly string PhysicalConnectionId;
        /// <summary>
        /// The status of the resource
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The ID of the VBR instance.
        /// </summary>
        public readonly string VbrId;
        /// <summary>
        /// VLAN ID of the VBR.
        /// </summary>
        public readonly int VlanId;

        [OutputConstructor]
        private GetVbrPconnAssociationsAssociationResult(
            string circuitCode,

            bool enableIpv6,

            string id,

            string localGatewayIp,

            string localIpv6GatewayIp,

            string peerGatewayIp,

            string peerIpv6GatewayIp,

            string peeringIpv6SubnetMask,

            string peeringSubnetMask,

            string physicalConnectionId,

            string status,

            string vbrId,

            int vlanId)
        {
            CircuitCode = circuitCode;
            EnableIpv6 = enableIpv6;
            Id = id;
            LocalGatewayIp = localGatewayIp;
            LocalIpv6GatewayIp = localIpv6GatewayIp;
            PeerGatewayIp = peerGatewayIp;
            PeerIpv6GatewayIp = peerIpv6GatewayIp;
            PeeringIpv6SubnetMask = peeringIpv6SubnetMask;
            PeeringSubnetMask = peeringSubnetMask;
            PhysicalConnectionId = physicalConnectionId;
            Status = status;
            VbrId = vbrId;
            VlanId = vlanId;
        }
    }
}
