// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Hbase.Outputs
{

    [OutputType]
    public sealed class GetInstanceTypesCoreInstanceTypeResult
    {
        /// <summary>
        /// Name of the category, single or cluster.
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// Cpu size of the instance type.
        /// </summary>
        public readonly int CpuSize;
        /// <summary>
        /// The engine name, `Singlehbase`, `Hbase`, `Hbaseue`, `Bds`.
        /// </summary>
        public readonly string Engine;
        /// <summary>
        /// The hbase instance type of create hbase cluster instance.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// Max count of the core instance nodes.
        /// </summary>
        public readonly int MaxCoreCount;
        /// <summary>
        /// Mem size of the instance type.
        /// </summary>
        public readonly int MemSize;
        /// <summary>
        /// Name of the storage type.
        /// </summary>
        public readonly string StorageType;
        /// <summary>
        /// The engine version, singlehbase/hbase=1.1/2.0, bds=1.0.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// Name of zone id.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetInstanceTypesCoreInstanceTypeResult(
            string category,

            int cpuSize,

            string engine,

            string instanceType,

            int maxCoreCount,

            int memSize,

            string storageType,

            string version,

            string zone)
        {
            Category = category;
            CpuSize = cpuSize;
            Engine = engine;
            InstanceType = instanceType;
            MaxCoreCount = maxCoreCount;
            MemSize = memSize;
            StorageType = storageType;
            Version = version;
            Zone = zone;
        }
    }
}
