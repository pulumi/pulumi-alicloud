// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Log
{
    /// <summary>
    /// Using this resource can init SLS Alert resources automatically.
    /// 
    /// For information about SLS Alert and how to use it, see [SLS Alert Overview](https://www.alibabacloud.com/help/en/doc-detail/209202.html)
    /// 
    /// &gt; **NOTE:** Available since v1.219.0.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleUser = new AliCloud.Log.AlertResource("example_user", new()
    ///     {
    ///         Type = "user",
    ///         Lang = "cn",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Log alert resource can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:log/alertResource:AlertResource example alert_resource:project:tf-project
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:log/alertResource:AlertResource")]
    public partial class AlertResource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The lang of alert center resource when type is user.
        /// </summary>
        [Output("lang")]
        public Output<string?> Lang { get; private set; } = null!;

        /// <summary>
        /// The project of alert resource when type is project.
        /// </summary>
        [Output("project")]
        public Output<string?> Project { get; private set; } = null!;

        /// <summary>
        /// The type of alert resources, must be user or project, 'user' for init aliyuncloud account's alert center resource, including project named sls-alert-{uid}-{region} and some dashboards; 'project' for init project's alert resource, including logstore named internal-alert-history and alert dashboard.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AlertResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertResource(string name, AlertResourceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:log/alertResource:AlertResource", name, args ?? new AlertResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertResource(string name, Input<string> id, AlertResourceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:log/alertResource:AlertResource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertResource Get(string name, Input<string> id, AlertResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new AlertResource(name, id, state, options);
        }
    }

    public sealed class AlertResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The lang of alert center resource when type is user.
        /// </summary>
        [Input("lang")]
        public Input<string>? Lang { get; set; }

        /// <summary>
        /// The project of alert resource when type is project.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The type of alert resources, must be user or project, 'user' for init aliyuncloud account's alert center resource, including project named sls-alert-{uid}-{region} and some dashboards; 'project' for init project's alert resource, including logstore named internal-alert-history and alert dashboard.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AlertResourceArgs()
        {
        }
        public static new AlertResourceArgs Empty => new AlertResourceArgs();
    }

    public sealed class AlertResourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The lang of alert center resource when type is user.
        /// </summary>
        [Input("lang")]
        public Input<string>? Lang { get; set; }

        /// <summary>
        /// The project of alert resource when type is project.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The type of alert resources, must be user or project, 'user' for init aliyuncloud account's alert center resource, including project named sls-alert-{uid}-{region} and some dashboards; 'project' for init project's alert resource, including logstore named internal-alert-history and alert dashboard.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AlertResourceState()
        {
        }
        public static new AlertResourceState Empty => new AlertResourceState();
    }
}
