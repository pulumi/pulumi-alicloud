// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Log
{
    /// <summary>
    /// ## Import
    /// 
    /// Logtial config can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:log/logTailConfig:LogTailConfig example tf-log:tf-log-store:tf-log-config
    /// ```
    /// </summary>
    public partial class LogTailConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
        /// </summary>
        [Output("inputDetail")]
        public Output<string> InputDetail { get; private set; } = null!;

        /// <summary>
        /// The input type. Currently only two types of files and plugin are supported.
        /// </summary>
        [Output("inputType")]
        public Output<string> InputType { get; private set; } = null!;

        /// <summary>
        /// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
        /// </summary>
        [Output("logSample")]
        public Output<string?> LogSample { get; private set; } = null!;

        /// <summary>
        /// The log store name to the query index belongs.
        /// </summary>
        [Output("logstore")]
        public Output<string> Logstore { get; private set; } = null!;

        /// <summary>
        /// The Logtail configuration name, which is unique in the same project.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The output type. Currently, only LogService is supported.
        /// </summary>
        [Output("outputType")]
        public Output<string> OutputType { get; private set; } = null!;

        /// <summary>
        /// The project name to the log store belongs.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a LogTailConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogTailConfig(string name, LogTailConfigArgs args, CustomResourceOptions? options = null)
            : base("alicloud:log/logTailConfig:LogTailConfig", name, args ?? new LogTailConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogTailConfig(string name, Input<string> id, LogTailConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:log/logTailConfig:LogTailConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogTailConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogTailConfig Get(string name, Input<string> id, LogTailConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new LogTailConfig(name, id, state, options);
        }
    }

    public sealed class LogTailConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
        /// </summary>
        [Input("inputDetail", required: true)]
        public Input<string> InputDetail { get; set; } = null!;

        /// <summary>
        /// The input type. Currently only two types of files and plugin are supported.
        /// </summary>
        [Input("inputType", required: true)]
        public Input<string> InputType { get; set; } = null!;

        /// <summary>
        /// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
        /// </summary>
        [Input("logSample")]
        public Input<string>? LogSample { get; set; }

        /// <summary>
        /// The log store name to the query index belongs.
        /// </summary>
        [Input("logstore", required: true)]
        public Input<string> Logstore { get; set; } = null!;

        /// <summary>
        /// The Logtail configuration name, which is unique in the same project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The output type. Currently, only LogService is supported.
        /// </summary>
        [Input("outputType", required: true)]
        public Input<string> OutputType { get; set; } = null!;

        /// <summary>
        /// The project name to the log store belongs.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public LogTailConfigArgs()
        {
        }
    }

    public sealed class LogTailConfigState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
        /// </summary>
        [Input("inputDetail")]
        public Input<string>? InputDetail { get; set; }

        /// <summary>
        /// The input type. Currently only two types of files and plugin are supported.
        /// </summary>
        [Input("inputType")]
        public Input<string>? InputType { get; set; }

        /// <summary>
        /// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
        /// </summary>
        [Input("logSample")]
        public Input<string>? LogSample { get; set; }

        /// <summary>
        /// The log store name to the query index belongs.
        /// </summary>
        [Input("logstore")]
        public Input<string>? Logstore { get; set; }

        /// <summary>
        /// The Logtail configuration name, which is unique in the same project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The output type. Currently, only LogService is supported.
        /// </summary>
        [Input("outputType")]
        public Input<string>? OutputType { get; set; }

        /// <summary>
        /// The project name to the log store belongs.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public LogTailConfigState()
        {
        }
    }
}
