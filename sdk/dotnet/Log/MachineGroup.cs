// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Log
{
    /// <summary>
    /// ## Import
    /// 
    /// Log machine group can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:log/machineGroup:MachineGroup example tf-log:tf-machine-group
    /// ```
    /// </summary>
    public partial class MachineGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The specific machine identification, which can be an IP address or user-defined identity.
        /// </summary>
        [Output("identifyLists")]
        public Output<ImmutableArray<string>> IdentifyLists { get; private set; } = null!;

        /// <summary>
        /// The machine identification type, including IP and user-defined identity. Valid values are "ip" and "userdefined". Default to "ip".
        /// </summary>
        [Output("identifyType")]
        public Output<string?> IdentifyType { get; private set; } = null!;

        /// <summary>
        /// The machine group name, which is unique in the same project.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project name to the machine group belongs.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The topic of a machine group.
        /// </summary>
        [Output("topic")]
        public Output<string?> Topic { get; private set; } = null!;


        /// <summary>
        /// Create a MachineGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MachineGroup(string name, MachineGroupArgs args, CustomResourceOptions? options = null)
            : base("alicloud:log/machineGroup:MachineGroup", name, args ?? new MachineGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MachineGroup(string name, Input<string> id, MachineGroupState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:log/machineGroup:MachineGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MachineGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MachineGroup Get(string name, Input<string> id, MachineGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new MachineGroup(name, id, state, options);
        }
    }

    public sealed class MachineGroupArgs : Pulumi.ResourceArgs
    {
        [Input("identifyLists", required: true)]
        private InputList<string>? _identifyLists;

        /// <summary>
        /// The specific machine identification, which can be an IP address or user-defined identity.
        /// </summary>
        public InputList<string> IdentifyLists
        {
            get => _identifyLists ?? (_identifyLists = new InputList<string>());
            set => _identifyLists = value;
        }

        /// <summary>
        /// The machine identification type, including IP and user-defined identity. Valid values are "ip" and "userdefined". Default to "ip".
        /// </summary>
        [Input("identifyType")]
        public Input<string>? IdentifyType { get; set; }

        /// <summary>
        /// The machine group name, which is unique in the same project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project name to the machine group belongs.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The topic of a machine group.
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        public MachineGroupArgs()
        {
        }
    }

    public sealed class MachineGroupState : Pulumi.ResourceArgs
    {
        [Input("identifyLists")]
        private InputList<string>? _identifyLists;

        /// <summary>
        /// The specific machine identification, which can be an IP address or user-defined identity.
        /// </summary>
        public InputList<string> IdentifyLists
        {
            get => _identifyLists ?? (_identifyLists = new InputList<string>());
            set => _identifyLists = value;
        }

        /// <summary>
        /// The machine identification type, including IP and user-defined identity. Valid values are "ip" and "userdefined". Default to "ip".
        /// </summary>
        [Input("identifyType")]
        public Input<string>? IdentifyType { get; set; }

        /// <summary>
        /// The machine group name, which is unique in the same project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project name to the machine group belongs.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The topic of a machine group.
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        public MachineGroupState()
        {
        }
    }
}
