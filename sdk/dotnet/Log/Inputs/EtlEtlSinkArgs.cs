// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Log.Inputs
{

    public sealed class EtlEtlSinkArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessKeyId")]
        private Input<string>? _accessKeyId;

        /// <summary>
        /// Delivery target logstore access key id.
        /// </summary>
        public Input<string>? AccessKeyId
        {
            get => _accessKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessKeySecret")]
        private Input<string>? _accessKeySecret;

        /// <summary>
        /// Delivery target logstore access key secret.
        /// </summary>
        public Input<string>? AccessKeySecret
        {
            get => _accessKeySecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKeySecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("datasets")]
        private InputList<string>? _datasets;

        /// <summary>
        /// LogETL datasets.
        /// 
        /// &gt; **Note:** `FromTime` and `ToTime` no modification allowed after successful creation.
        /// </summary>
        public InputList<string> Datasets
        {
            get => _datasets ?? (_datasets = new InputList<string>());
            set => _datasets = value;
        }

        /// <summary>
        /// Delivery target logstore region.
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// An KMS encrypts access key id used to a log etl job. If the `AccessKeyId` is filled in, this field will be ignored.
        /// </summary>
        [Input("kmsEncryptedAccessKeyId")]
        public Input<string>? KmsEncryptedAccessKeyId { get; set; }

        /// <summary>
        /// An KMS encrypts access key secret used to a log etl job. If the `AccessKeySecret` is filled in, this field will be ignored.
        /// </summary>
        [Input("kmsEncryptedAccessKeySecret")]
        public Input<string>? KmsEncryptedAccessKeySecret { get; set; }

        /// <summary>
        /// Delivery target logstore.
        /// </summary>
        [Input("logstore", required: true)]
        public Input<string> Logstore { get; set; } = null!;

        /// <summary>
        /// Delivery target name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The project where the target logstore is delivered.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// Sts role info under delivery target logstore. `RoleArn` and `(access_key_id, access_key_secret)` fill in at most one. If you do not fill in both, then you must fill in `(kms_encrypted_access_key_id, kms_encrypted_access_key_secret)` to use KMS to get the key pair.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// ETL sinks type, the default value is AliyunLOG.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EtlEtlSinkArgs()
        {
        }
        public static new EtlEtlSinkArgs Empty => new EtlEtlSinkArgs();
    }
}
