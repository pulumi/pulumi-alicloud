// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Video Processing resource.
    /// 
    /// For information about ESA Video Processing and how to use it, see [What is Video Processing](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateVideoProcessing).
    /// 
    /// &gt; **NOTE:** Available since v1.251.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///     });
    /// 
    ///     var defaultSite = new AliCloud.Esa.Site("default", new()
    ///     {
    ///         SiteName = "chenxin0116.site",
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.InstanceId)),
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///     });
    /// 
    ///     var defaultVideoProcessing = new AliCloud.Esa.VideoProcessing("default", new()
    ///     {
    ///         VideoSeekEnable = "on",
    ///         RuleEnable = "on",
    ///         Mp4SeekEnd = "end",
    ///         FlvSeekStart = "start",
    ///         Rule = "(http.host eq \"video.example.com\")",
    ///         FlvVideoSeekMode = "by_byte",
    ///         Mp4SeekStart = "start",
    ///         FlvSeekEnd = "end",
    ///         SiteId = defaultSite.Id,
    ///         Sequence = 1,
    ///         SiteVersion = 0,
    ///         RuleName = "example",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Video Processing can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/videoProcessing:VideoProcessing example &lt;site_id&gt;:&lt;config_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/videoProcessing:VideoProcessing")]
    public partial class VideoProcessing : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Config Id
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Custom FLV end parameters.
        /// </summary>
        [Output("flvSeekEnd")]
        public Output<string?> FlvSeekEnd { get; private set; } = null!;

        /// <summary>
        /// Custom FLV start parameters.
        /// </summary>
        [Output("flvSeekStart")]
        public Output<string?> FlvSeekStart { get; private set; } = null!;

        /// <summary>
        /// FLV drag mode. Value range:
        /// </summary>
        [Output("flvVideoSeekMode")]
        public Output<string?> FlvVideoSeekMode { get; private set; } = null!;

        /// <summary>
        /// Custom mp4 end parameters.
        /// </summary>
        [Output("mp4SeekEnd")]
        public Output<string?> Mp4SeekEnd { get; private set; } = null!;

        /// <summary>
        /// Custom mp4 start parameters.
        /// </summary>
        [Output("mp4SeekStart")]
        public Output<string?> Mp4SeekStart { get; private set; } = null!;

        /// <summary>
        /// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
        /// - Match all incoming requests: value set to true
        /// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
        /// </summary>
        [Output("rule")]
        public Output<string?> Rule { get; private set; } = null!;

        /// <summary>
        /// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
        /// </summary>
        [Output("ruleEnable")]
        public Output<string?> RuleEnable { get; private set; } = null!;

        /// <summary>
        /// Rule name. When adding global configuration, this parameter does not need to be set.
        /// </summary>
        [Output("ruleName")]
        public Output<string?> RuleName { get; private set; } = null!;

        /// <summary>
        /// Order of rule execution. The smaller the value, the higher the priority for execution.
        /// </summary>
        [Output("sequence")]
        public Output<int?> Sequence { get; private set; } = null!;

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;

        /// <summary>
        /// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
        /// </summary>
        [Output("siteVersion")]
        public Output<int?> SiteVersion { get; private set; } = null!;

        /// <summary>
        /// Drag and drop the play function switch. Value range:
        /// </summary>
        [Output("videoSeekEnable")]
        public Output<string?> VideoSeekEnable { get; private set; } = null!;


        /// <summary>
        /// Create a VideoProcessing resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VideoProcessing(string name, VideoProcessingArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/videoProcessing:VideoProcessing", name, args ?? new VideoProcessingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VideoProcessing(string name, Input<string> id, VideoProcessingState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/videoProcessing:VideoProcessing", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VideoProcessing resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VideoProcessing Get(string name, Input<string> id, VideoProcessingState? state = null, CustomResourceOptions? options = null)
        {
            return new VideoProcessing(name, id, state, options);
        }
    }

    public sealed class VideoProcessingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom FLV end parameters.
        /// </summary>
        [Input("flvSeekEnd")]
        public Input<string>? FlvSeekEnd { get; set; }

        /// <summary>
        /// Custom FLV start parameters.
        /// </summary>
        [Input("flvSeekStart")]
        public Input<string>? FlvSeekStart { get; set; }

        /// <summary>
        /// FLV drag mode. Value range:
        /// </summary>
        [Input("flvVideoSeekMode")]
        public Input<string>? FlvVideoSeekMode { get; set; }

        /// <summary>
        /// Custom mp4 end parameters.
        /// </summary>
        [Input("mp4SeekEnd")]
        public Input<string>? Mp4SeekEnd { get; set; }

        /// <summary>
        /// Custom mp4 start parameters.
        /// </summary>
        [Input("mp4SeekStart")]
        public Input<string>? Mp4SeekStart { get; set; }

        /// <summary>
        /// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
        /// - Match all incoming requests: value set to true
        /// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
        /// </summary>
        [Input("ruleEnable")]
        public Input<string>? RuleEnable { get; set; }

        /// <summary>
        /// Rule name. When adding global configuration, this parameter does not need to be set.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Order of rule execution. The smaller the value, the higher the priority for execution.
        /// </summary>
        [Input("sequence")]
        public Input<int>? Sequence { get; set; }

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        /// <summary>
        /// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
        /// </summary>
        [Input("siteVersion")]
        public Input<int>? SiteVersion { get; set; }

        /// <summary>
        /// Drag and drop the play function switch. Value range:
        /// </summary>
        [Input("videoSeekEnable")]
        public Input<string>? VideoSeekEnable { get; set; }

        public VideoProcessingArgs()
        {
        }
        public static new VideoProcessingArgs Empty => new VideoProcessingArgs();
    }

    public sealed class VideoProcessingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Config Id
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// Custom FLV end parameters.
        /// </summary>
        [Input("flvSeekEnd")]
        public Input<string>? FlvSeekEnd { get; set; }

        /// <summary>
        /// Custom FLV start parameters.
        /// </summary>
        [Input("flvSeekStart")]
        public Input<string>? FlvSeekStart { get; set; }

        /// <summary>
        /// FLV drag mode. Value range:
        /// </summary>
        [Input("flvVideoSeekMode")]
        public Input<string>? FlvVideoSeekMode { get; set; }

        /// <summary>
        /// Custom mp4 end parameters.
        /// </summary>
        [Input("mp4SeekEnd")]
        public Input<string>? Mp4SeekEnd { get; set; }

        /// <summary>
        /// Custom mp4 start parameters.
        /// </summary>
        [Input("mp4SeekStart")]
        public Input<string>? Mp4SeekStart { get; set; }

        /// <summary>
        /// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
        /// - Match all incoming requests: value set to true
        /// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
        /// </summary>
        [Input("ruleEnable")]
        public Input<string>? RuleEnable { get; set; }

        /// <summary>
        /// Rule name. When adding global configuration, this parameter does not need to be set.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Order of rule execution. The smaller the value, the higher the priority for execution.
        /// </summary>
        [Input("sequence")]
        public Input<int>? Sequence { get; set; }

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
        /// </summary>
        [Input("siteVersion")]
        public Input<int>? SiteVersion { get; set; }

        /// <summary>
        /// Drag and drop the play function switch. Value range:
        /// </summary>
        [Input("videoSeekEnable")]
        public Input<string>? VideoSeekEnable { get; set; }

        public VideoProcessingState()
        {
        }
        public static new VideoProcessingState Empty => new VideoProcessingState();
    }
}
