// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Origin Client Certificate resource.
    /// 
    /// For information about ESA Origin Client Certificate and how to use it, see [What is Origin Client Certificate](https://next.api.alibabacloud.com/document/ESA/2024-09-10/UploadOriginClientCertificate).
    /// 
    /// &gt; **NOTE:** Available since v1.255.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///     });
    /// 
    ///     var resourceSiteOriginClientCertificateExample = new AliCloud.Esa.Site("resource_Site_OriginClientCertificate_example", new()
    ///     {
    ///         SiteName = "chenxin0116.site",
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.InstanceId)),
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///     });
    /// 
    ///     var defaultOriginClientCertificate = new AliCloud.Esa.OriginClientCertificate("default", new()
    ///     {
    ///         SiteId = resourceSiteOriginClientCertificateExample.Id,
    ///         PrivateKey = @"-----BEGIN RSA PRIVATE KEY-----
    /// MIICXAIBAAKBgQC+7dgpkQifIqzOU6KNkFRjZtMZOoN7/ihNf/BrYcPhLQSkcPOf
    /// UsTP/qvH0u965GnYFiAoK3uWGQo9aCBuoawRFKNBa9ZpJVyVbamBWTBQ/Fxsforq
    /// 9jJNR7OWA3fxvDxgwyEkv0qsnh1zaOkjyUlxFYwDiFxZ1/RHAj/SABCubQIDAQAB
    /// AoGADiobBUprN1MdOtldj98LQ6yXMKH0qzg5yTYaofzIyWXLmF+A02sSitO77sEp
    /// Xxae+5b4n8JKEuKcrd2RumNoHmN47iLQ0M2eodjUQ96kzm5Esq6nln62/NF5KLuK
    /// JDw63nTsg6K0O+gQZv4SYjZAL3cswSmeQmvmcoNgArfcaoECQQDgYy6S91ZIUsLx
    /// 6BB3tW+x7APYnvKysYbcKUEP8AutZSo4hdMfPQkOD0LwP5dWsrNippDWjNDiPZmt
    /// VKuZDoDdAkEA2dPxy1eQeJsRYTZmTWIuh3UY9xlL3G9skcSOM4LbFidroHWW9UDJ
    /// JDSSEMH2+/4quYTdPr28cj7RCjqL0brC0QJABXDCL1QJ5oUDLwRWaeCfTawQR89K
    /// ySRexbXGWxGR5uleBbLQ9J/xOUMLd3HDRJnemZS6TElrwyCFOlukMXjVjQJBALr5
    /// QC0opmu/vzVQepOl2QaQrrM7VXCLfAfLTbxNcD0d7TY4eTFfQMgBD/euZpB65LWF
    /// pFs8hcsSvGApTObjhmECQEydB1zzjU6kH171XlXCtRFnbORu2IB7rMsDP2CBPHyR
    /// tYBjBNVHIUGcmrMVFX4LeMuvvmUyzwfgLmLchHxbDP8=
    /// -----END RSA PRIVATE KEY-----
    /// ",
    ///         Hostnames = new[]
    ///         {
    ///             "www.example1.com",
    ///             "www.example2.com",
    ///             "www.example3.com",
    ///         },
    ///         OriginClientCertificateName = "exampleCertificate",
    ///         Certificate = @"-----BEGIN CERTIFICATE-----
    /// MIICQTCCAaoCCQCFfdyqahygLzANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJj
    /// bjEQMA4GA1UECAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwI
    /// YWxpY2xvdWQxEDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwHhcNMjAw
    /// ODA2MTAwMDAyWhcNMzAwODA0MTAwMDAyWjBlMQswCQYDVQQGEwJjbjEQMA4GA1UE
    /// CAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwIYWxpY2xvdWQx
    /// EDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwgZ8wDQYJKoZIhvcNAQEB
    /// BQADgY0AMIGJAoGBAL7t2CmRCJ8irM5Too2QVGNm0xk6g3v+KE1/8Gthw+EtBKRw
    /// 859SxM/+q8fS73rkadgWICgre5YZCj1oIG6hrBEUo0Fr1mklXJVtqYFZMFD8XGx+
    /// iur2Mk1Hs5YDd/G8PGDDISS/SqyeHXNo6SPJSXEVjAOIXFnX9EcCP9IAEK5tAgMB
    /// AAEwDQYJKoZIhvcNAQEFBQADgYEAavYdM9s5jLFP9/ZPCrsRuRsjSJpe5y9VZL+1
    /// +Ebbw16V0xMYaqODyFH1meLRW/A4xUs15Ny2vLYOW15Mriif7Sixty3HUedBFa4l
    /// y6/gQ+mBEeZYzMaTTFgyzEZDMsfZxwV9GKfhOzAmK3jZ2LDpHIhnlJN4WwVf0lME
    /// pCPDN7g=
    /// -----END CERTIFICATE-----
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Origin Client Certificate can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/originClientCertificate:OriginClientCertificate example &lt;site_id&gt;:&lt;origin_client_certificate_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/originClientCertificate:OriginClientCertificate")]
    public partial class OriginClientCertificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The certificate content.
        /// </summary>
        [Output("certificate")]
        public Output<string> Certificate { get; private set; } = null!;

        /// <summary>
        /// The time when the certificate was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The domain names to associate.
        /// </summary>
        [Output("hostnames")]
        public Output<ImmutableArray<string>> Hostnames { get; private set; } = null!;

        /// <summary>
        /// The certificate ID.
        /// </summary>
        [Output("originClientCertificateId")]
        public Output<string> OriginClientCertificateId { get; private set; } = null!;

        /// <summary>
        /// The certificate name.
        /// </summary>
        [Output("originClientCertificateName")]
        public Output<string?> OriginClientCertificateName { get; private set; } = null!;

        /// <summary>
        /// The private key of the certificate.
        /// </summary>
        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// Site ID.
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;

        /// <summary>
        /// The status of the certificate.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a OriginClientCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OriginClientCertificate(string name, OriginClientCertificateArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/originClientCertificate:OriginClientCertificate", name, args ?? new OriginClientCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OriginClientCertificate(string name, Input<string> id, OriginClientCertificateState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/originClientCertificate:OriginClientCertificate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "privateKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OriginClientCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OriginClientCertificate Get(string name, Input<string> id, OriginClientCertificateState? state = null, CustomResourceOptions? options = null)
        {
            return new OriginClientCertificate(name, id, state, options);
        }
    }

    public sealed class OriginClientCertificateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The certificate content.
        /// </summary>
        [Input("certificate", required: true)]
        public Input<string> Certificate { get; set; } = null!;

        [Input("hostnames")]
        private InputList<string>? _hostnames;

        /// <summary>
        /// The domain names to associate.
        /// </summary>
        public InputList<string> Hostnames
        {
            get => _hostnames ?? (_hostnames = new InputList<string>());
            set => _hostnames = value;
        }

        /// <summary>
        /// The certificate name.
        /// </summary>
        [Input("originClientCertificateName")]
        public Input<string>? OriginClientCertificateName { get; set; }

        [Input("privateKey", required: true)]
        private Input<string>? _privateKey;

        /// <summary>
        /// The private key of the certificate.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Site ID.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        public OriginClientCertificateArgs()
        {
        }
        public static new OriginClientCertificateArgs Empty => new OriginClientCertificateArgs();
    }

    public sealed class OriginClientCertificateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The certificate content.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// The time when the certificate was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("hostnames")]
        private InputList<string>? _hostnames;

        /// <summary>
        /// The domain names to associate.
        /// </summary>
        public InputList<string> Hostnames
        {
            get => _hostnames ?? (_hostnames = new InputList<string>());
            set => _hostnames = value;
        }

        /// <summary>
        /// The certificate ID.
        /// </summary>
        [Input("originClientCertificateId")]
        public Input<string>? OriginClientCertificateId { get; set; }

        /// <summary>
        /// The certificate name.
        /// </summary>
        [Input("originClientCertificateName")]
        public Input<string>? OriginClientCertificateName { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// The private key of the certificate.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Site ID.
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// The status of the certificate.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public OriginClientCertificateState()
        {
        }
        public static new OriginClientCertificateState Empty => new OriginClientCertificateState();
    }
}
