// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Waiting Room Event resource.
    /// 
    /// For information about ESA Waiting Room Event and how to use it, see [What is Waiting Room Event](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateWaitingRoomEvent).
    /// 
    /// &gt; **NOTE:** Available since v1.244.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///     });
    /// 
    ///     var defaultSite = new AliCloud.Esa.Site("default", new()
    ///     {
    ///         SiteName = "chenxin0116.site",
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.InstanceId)),
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///     });
    /// 
    ///     var defaultWaitingRoom = new AliCloud.Esa.WaitingRoom("default", new()
    ///     {
    ///         Status = "off",
    ///         SiteId = defaultSite.Id,
    ///         JsonResponseEnable = "off",
    ///         Description = "example",
    ///         WaitingRoomType = "default",
    ///         DisableSessionRenewalEnable = "off",
    ///         CookieName = "__aliwaitingroom_example",
    ///         WaitingRoomName = "waitingroom_example",
    ///         QueueAllEnable = "off",
    ///         QueuingStatusCode = "200",
    ///         CustomPageHtml = "",
    ///         NewUsersPerMinute = "200",
    ///         SessionDuration = "5",
    ///         Language = "zhcn",
    ///         TotalActiveUsers = "300",
    ///         QueuingMethod = "fifo",
    ///         HostNameAndPaths = new[]
    ///         {
    ///             new AliCloud.Esa.Inputs.WaitingRoomHostNameAndPathArgs
    ///             {
    ///                 Domain = "sub_domain.com",
    ///                 Path = "/example",
    ///                 Subdomain = "example_sub_domain.com.",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var defaultWaitingRoomEvent = new AliCloud.Esa.WaitingRoomEvent("default", new()
    ///     {
    ///         WaitingRoomId = defaultWaitingRoom.WaitingRoomId,
    ///         EndTime = "1719863200",
    ///         WaitingRoomEventName = "WaitingRoomEvent_example",
    ///         PreQueueStartTime = "",
    ///         RandomPreQueueEnable = "off",
    ///         JsonResponseEnable = "off",
    ///         SiteId = defaultSite.Id,
    ///         PreQueueEnable = "off",
    ///         Description = "example",
    ///         NewUsersPerMinute = "200",
    ///         QueuingStatusCode = "200",
    ///         CustomPageHtml = "",
    ///         Language = "zhcn",
    ///         TotalActiveUsers = "300",
    ///         WaitingRoomType = "default",
    ///         StartTime = "1719763200",
    ///         Status = "off",
    ///         DisableSessionRenewalEnable = "off",
    ///         QueuingMethod = "fifo",
    ///         SessionDuration = "5",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Waiting Room Event can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/waitingRoomEvent:WaitingRoomEvent example &lt;site_id&gt;:&lt;waiting_room_id&gt;:&lt;waiting_room_event_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/waitingRoomEvent:WaitingRoomEvent")]
    public partial class WaitingRoomEvent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User-defined waiting room page content, when the waiting room type is custom type, you need to enter. The incoming content needs to be base64 encoded.
        /// </summary>
        [Output("customPageHtml")]
        public Output<string?> CustomPageHtml { get; private set; } = null!;

        /// <summary>
        /// Waiting room description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Disable session renewal. Value:
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Output("disableSessionRenewalEnable")]
        public Output<string?> DisableSessionRenewalEnable { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the end time of the event.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// JSON response switch. Value:
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Output("jsonResponseEnable")]
        public Output<string?> JsonResponseEnable { get; private set; } = null!;

        /// <summary>
        /// Default language setting. Values include:
        /// -'enus': English.
        /// -'zhcn': Simplified Chinese.
        /// -'zhhk': Traditional Chinese.
        /// </summary>
        [Output("language")]
        public Output<string?> Language { get; private set; } = null!;

        /// <summary>
        /// Number of new users per minute.
        /// </summary>
        [Output("newUsersPerMinute")]
        public Output<string> NewUsersPerMinute { get; private set; } = null!;

        /// <summary>
        /// Pre-queue switch.
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Output("preQueueEnable")]
        public Output<string?> PreQueueEnable { get; private set; } = null!;

        /// <summary>
        /// Pre-queue start time.
        /// </summary>
        [Output("preQueueStartTime")]
        public Output<string?> PreQueueStartTime { get; private set; } = null!;

        /// <summary>
        /// Way of queuing. Value:
        /// -'random': random.
        /// -'fifo': first in, first out.
        /// -'passthrough ': through.
        /// -'reject-all': reject all.
        /// </summary>
        [Output("queuingMethod")]
        public Output<string> QueuingMethod { get; private set; } = null!;

        /// <summary>
        /// Waiting room status code. Value:
        /// -'200'
        /// -'202'
        /// -'429'
        /// </summary>
        [Output("queuingStatusCode")]
        public Output<string> QueuingStatusCode { get; private set; } = null!;

        /// <summary>
        /// Random queue switch.
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Output("randomPreQueueEnable")]
        public Output<string?> RandomPreQueueEnable { get; private set; } = null!;

        /// <summary>
        /// User session duration in minutes.
        /// </summary>
        [Output("sessionDuration")]
        public Output<string> SessionDuration { get; private set; } = null!;

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the event start time.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// Enabled status. Value:
        /// -'on': Enable waiting room events
        /// -'off': Disable waiting room events
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Total number of active users.
        /// </summary>
        [Output("totalActiveUsers")]
        public Output<string> TotalActiveUsers { get; private set; } = null!;

        /// <summary>
        /// The waiting room event ID, which can be obtained by calling the [ListWaitingRoomEvents](https://help.aliyun.com/document_detail/2850279.html) operation.
        /// </summary>
        [Output("waitingRoomEventId")]
        public Output<int> WaitingRoomEventId { get; private set; } = null!;

        /// <summary>
        /// Event name, custom event description.
        /// </summary>
        [Output("waitingRoomEventName")]
        public Output<string> WaitingRoomEventName { get; private set; } = null!;

        /// <summary>
        /// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
        /// </summary>
        [Output("waitingRoomId")]
        public Output<string> WaitingRoomId { get; private set; } = null!;

        /// <summary>
        /// Waiting room type. The following types are supported:
        /// -'default': the default type.
        /// -'custom': custom type.
        /// </summary>
        [Output("waitingRoomType")]
        public Output<string> WaitingRoomType { get; private set; } = null!;


        /// <summary>
        /// Create a WaitingRoomEvent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WaitingRoomEvent(string name, WaitingRoomEventArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/waitingRoomEvent:WaitingRoomEvent", name, args ?? new WaitingRoomEventArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WaitingRoomEvent(string name, Input<string> id, WaitingRoomEventState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/waitingRoomEvent:WaitingRoomEvent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WaitingRoomEvent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WaitingRoomEvent Get(string name, Input<string> id, WaitingRoomEventState? state = null, CustomResourceOptions? options = null)
        {
            return new WaitingRoomEvent(name, id, state, options);
        }
    }

    public sealed class WaitingRoomEventArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-defined waiting room page content, when the waiting room type is custom type, you need to enter. The incoming content needs to be base64 encoded.
        /// </summary>
        [Input("customPageHtml")]
        public Input<string>? CustomPageHtml { get; set; }

        /// <summary>
        /// Waiting room description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Disable session renewal. Value:
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("disableSessionRenewalEnable")]
        public Input<string>? DisableSessionRenewalEnable { get; set; }

        /// <summary>
        /// The timestamp of the end time of the event.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// JSON response switch. Value:
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("jsonResponseEnable")]
        public Input<string>? JsonResponseEnable { get; set; }

        /// <summary>
        /// Default language setting. Values include:
        /// -'enus': English.
        /// -'zhcn': Simplified Chinese.
        /// -'zhhk': Traditional Chinese.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        /// <summary>
        /// Number of new users per minute.
        /// </summary>
        [Input("newUsersPerMinute", required: true)]
        public Input<string> NewUsersPerMinute { get; set; } = null!;

        /// <summary>
        /// Pre-queue switch.
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("preQueueEnable")]
        public Input<string>? PreQueueEnable { get; set; }

        /// <summary>
        /// Pre-queue start time.
        /// </summary>
        [Input("preQueueStartTime")]
        public Input<string>? PreQueueStartTime { get; set; }

        /// <summary>
        /// Way of queuing. Value:
        /// -'random': random.
        /// -'fifo': first in, first out.
        /// -'passthrough ': through.
        /// -'reject-all': reject all.
        /// </summary>
        [Input("queuingMethod", required: true)]
        public Input<string> QueuingMethod { get; set; } = null!;

        /// <summary>
        /// Waiting room status code. Value:
        /// -'200'
        /// -'202'
        /// -'429'
        /// </summary>
        [Input("queuingStatusCode", required: true)]
        public Input<string> QueuingStatusCode { get; set; } = null!;

        /// <summary>
        /// Random queue switch.
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("randomPreQueueEnable")]
        public Input<string>? RandomPreQueueEnable { get; set; }

        /// <summary>
        /// User session duration in minutes.
        /// </summary>
        [Input("sessionDuration", required: true)]
        public Input<string> SessionDuration { get; set; } = null!;

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        /// <summary>
        /// The timestamp of the event start time.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        /// <summary>
        /// Enabled status. Value:
        /// -'on': Enable waiting room events
        /// -'off': Disable waiting room events
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// Total number of active users.
        /// </summary>
        [Input("totalActiveUsers", required: true)]
        public Input<string> TotalActiveUsers { get; set; } = null!;

        /// <summary>
        /// Event name, custom event description.
        /// </summary>
        [Input("waitingRoomEventName", required: true)]
        public Input<string> WaitingRoomEventName { get; set; } = null!;

        /// <summary>
        /// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
        /// </summary>
        [Input("waitingRoomId")]
        public Input<string>? WaitingRoomId { get; set; }

        /// <summary>
        /// Waiting room type. The following types are supported:
        /// -'default': the default type.
        /// -'custom': custom type.
        /// </summary>
        [Input("waitingRoomType", required: true)]
        public Input<string> WaitingRoomType { get; set; } = null!;

        public WaitingRoomEventArgs()
        {
        }
        public static new WaitingRoomEventArgs Empty => new WaitingRoomEventArgs();
    }

    public sealed class WaitingRoomEventState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-defined waiting room page content, when the waiting room type is custom type, you need to enter. The incoming content needs to be base64 encoded.
        /// </summary>
        [Input("customPageHtml")]
        public Input<string>? CustomPageHtml { get; set; }

        /// <summary>
        /// Waiting room description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Disable session renewal. Value:
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("disableSessionRenewalEnable")]
        public Input<string>? DisableSessionRenewalEnable { get; set; }

        /// <summary>
        /// The timestamp of the end time of the event.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// JSON response switch. Value:
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("jsonResponseEnable")]
        public Input<string>? JsonResponseEnable { get; set; }

        /// <summary>
        /// Default language setting. Values include:
        /// -'enus': English.
        /// -'zhcn': Simplified Chinese.
        /// -'zhhk': Traditional Chinese.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        /// <summary>
        /// Number of new users per minute.
        /// </summary>
        [Input("newUsersPerMinute")]
        public Input<string>? NewUsersPerMinute { get; set; }

        /// <summary>
        /// Pre-queue switch.
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("preQueueEnable")]
        public Input<string>? PreQueueEnable { get; set; }

        /// <summary>
        /// Pre-queue start time.
        /// </summary>
        [Input("preQueueStartTime")]
        public Input<string>? PreQueueStartTime { get; set; }

        /// <summary>
        /// Way of queuing. Value:
        /// -'random': random.
        /// -'fifo': first in, first out.
        /// -'passthrough ': through.
        /// -'reject-all': reject all.
        /// </summary>
        [Input("queuingMethod")]
        public Input<string>? QueuingMethod { get; set; }

        /// <summary>
        /// Waiting room status code. Value:
        /// -'200'
        /// -'202'
        /// -'429'
        /// </summary>
        [Input("queuingStatusCode")]
        public Input<string>? QueuingStatusCode { get; set; }

        /// <summary>
        /// Random queue switch.
        /// -'on': open.
        /// -'off': closed.
        /// </summary>
        [Input("randomPreQueueEnable")]
        public Input<string>? RandomPreQueueEnable { get; set; }

        /// <summary>
        /// User session duration in minutes.
        /// </summary>
        [Input("sessionDuration")]
        public Input<string>? SessionDuration { get; set; }

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// The timestamp of the event start time.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Enabled status. Value:
        /// -'on': Enable waiting room events
        /// -'off': Disable waiting room events
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Total number of active users.
        /// </summary>
        [Input("totalActiveUsers")]
        public Input<string>? TotalActiveUsers { get; set; }

        /// <summary>
        /// The waiting room event ID, which can be obtained by calling the [ListWaitingRoomEvents](https://help.aliyun.com/document_detail/2850279.html) operation.
        /// </summary>
        [Input("waitingRoomEventId")]
        public Input<int>? WaitingRoomEventId { get; set; }

        /// <summary>
        /// Event name, custom event description.
        /// </summary>
        [Input("waitingRoomEventName")]
        public Input<string>? WaitingRoomEventName { get; set; }

        /// <summary>
        /// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
        /// </summary>
        [Input("waitingRoomId")]
        public Input<string>? WaitingRoomId { get; set; }

        /// <summary>
        /// Waiting room type. The following types are supported:
        /// -'default': the default type.
        /// -'custom': custom type.
        /// </summary>
        [Input("waitingRoomType")]
        public Input<string>? WaitingRoomType { get; set; }

        public WaitingRoomEventState()
        {
        }
        public static new WaitingRoomEventState Empty => new WaitingRoomEventState();
    }
}
