// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Https Basic Configuration resource.
    /// 
    /// For information about ESA Https Basic Configuration and how to use it, see [What is Https Basic Configuration](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateHttpsBasicConfiguration).
    /// 
    /// &gt; **NOTE:** Available since v1.243.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var example = new AliCloud.Esa.RatePlanInstance("example", new()
    ///     {
    ///         Type = "NS",
    ///         AutoRenew = false,
    ///         Period = 1,
    ///         PaymentType = "Subscription",
    ///         Coverage = "overseas",
    ///         AutoPay = true,
    ///         PlanName = "high",
    ///     });
    /// 
    ///     var @default = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var resourceHttpBasicConfigurationSetExample = new AliCloud.Esa.Site("resource_HttpBasicConfiguration_set_example", new()
    ///     {
    ///         SiteName = $"gositecdn-{@default.Result}.cn",
    ///         InstanceId = example.Id,
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///     });
    /// 
    ///     var defaultHttpsBasicConfiguration = new AliCloud.Esa.HttpsBasicConfiguration("default", new()
    ///     {
    ///         Https = "on",
    ///         Rule = "true",
    ///         RuleName = "example2",
    ///         SiteId = resourceHttpBasicConfigurationSetExample.Id,
    ///         RuleEnable = "on",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Https Basic Configuration can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration example &lt;site_id&gt;:&lt;config_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration")]
    public partial class HttpsBasicConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom cipher suite, indicating the specific encryption algorithm selected when CiphersuiteGroup is set to custom.
        /// </summary>
        [Output("ciphersuite")]
        public Output<string?> Ciphersuite { get; private set; } = null!;

        /// <summary>
        /// Cipher suite group. Default is all cipher suites. Possible values:
        /// - all: All cipher suites.
        /// - strict: Strong cipher suites.
        /// - custom: Custom cipher suites.
        /// </summary>
        [Output("ciphersuiteGroup")]
        public Output<string?> CiphersuiteGroup { get; private set; } = null!;

        /// <summary>
        /// ConfigId of the configuration, which can be obtained by calling the [ListHttpsBasicConfigurations](https://www.alibabacloud.com/help/en/doc-detail/2867470.html) interface.
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Indicates whether HTTP2 is enabled. Default is on. Possible values:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Output("http2")]
        public Output<string?> Http2 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable HTTP3, which is enabled by default. The value can be:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Output("http3")]
        public Output<string?> Http3 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable HTTPS. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Output("https")]
        public Output<string?> Https { get; private set; } = null!;

        /// <summary>
        /// Indicates whether OCSP is enabled. Default is off. Possible values:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Output("ocspStapling")]
        public Output<string?> OcspStapling { get; private set; } = null!;

        /// <summary>
        /// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
        /// -  Match all incoming requests: value set to true
        /// -  Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
        /// </summary>
        [Output("rule")]
        public Output<string?> Rule { get; private set; } = null!;

        /// <summary>
        /// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
        /// - on: open.
        /// - off: close.
        /// </summary>
        [Output("ruleEnable")]
        public Output<string?> RuleEnable { get; private set; } = null!;

        /// <summary>
        /// Rule name. When adding global configuration, this parameter does not need to be set.
        /// </summary>
        [Output("ruleName")]
        public Output<string?> RuleName { get; private set; } = null!;

        /// <summary>
        /// Site ID, which can be obtained by calling the [ListSites](https://next.api.alibabacloud.com/document/ESA/2024-09-10/ListSites) interface.
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;

        /// <summary>
        /// Whether to enable TLS1.0. Default is disabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Output("tls10")]
        public Output<string?> Tls10 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable TLS1.1. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Output("tls11")]
        public Output<string?> Tls11 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable TLS1.2. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Output("tls12")]
        public Output<string?> Tls12 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable TLS1.3. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Output("tls13")]
        public Output<string?> Tls13 { get; private set; } = null!;


        /// <summary>
        /// Create a HttpsBasicConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HttpsBasicConfiguration(string name, HttpsBasicConfigurationArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration", name, args ?? new HttpsBasicConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HttpsBasicConfiguration(string name, Input<string> id, HttpsBasicConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HttpsBasicConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HttpsBasicConfiguration Get(string name, Input<string> id, HttpsBasicConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new HttpsBasicConfiguration(name, id, state, options);
        }
    }

    public sealed class HttpsBasicConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom cipher suite, indicating the specific encryption algorithm selected when CiphersuiteGroup is set to custom.
        /// </summary>
        [Input("ciphersuite")]
        public Input<string>? Ciphersuite { get; set; }

        /// <summary>
        /// Cipher suite group. Default is all cipher suites. Possible values:
        /// - all: All cipher suites.
        /// - strict: Strong cipher suites.
        /// - custom: Custom cipher suites.
        /// </summary>
        [Input("ciphersuiteGroup")]
        public Input<string>? CiphersuiteGroup { get; set; }

        /// <summary>
        /// Indicates whether HTTP2 is enabled. Default is on. Possible values:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Input("http2")]
        public Input<string>? Http2 { get; set; }

        /// <summary>
        /// Whether to enable HTTP3, which is enabled by default. The value can be:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Input("http3")]
        public Input<string>? Http3 { get; set; }

        /// <summary>
        /// Whether to enable HTTPS. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("https")]
        public Input<string>? Https { get; set; }

        /// <summary>
        /// Indicates whether OCSP is enabled. Default is off. Possible values:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Input("ocspStapling")]
        public Input<string>? OcspStapling { get; set; }

        /// <summary>
        /// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
        /// -  Match all incoming requests: value set to true
        /// -  Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
        /// - on: open.
        /// - off: close.
        /// </summary>
        [Input("ruleEnable")]
        public Input<string>? RuleEnable { get; set; }

        /// <summary>
        /// Rule name. When adding global configuration, this parameter does not need to be set.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Site ID, which can be obtained by calling the [ListSites](https://next.api.alibabacloud.com/document/ESA/2024-09-10/ListSites) interface.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        /// <summary>
        /// Whether to enable TLS1.0. Default is disabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls10")]
        public Input<string>? Tls10 { get; set; }

        /// <summary>
        /// Whether to enable TLS1.1. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls11")]
        public Input<string>? Tls11 { get; set; }

        /// <summary>
        /// Whether to enable TLS1.2. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls12")]
        public Input<string>? Tls12 { get; set; }

        /// <summary>
        /// Whether to enable TLS1.3. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls13")]
        public Input<string>? Tls13 { get; set; }

        public HttpsBasicConfigurationArgs()
        {
        }
        public static new HttpsBasicConfigurationArgs Empty => new HttpsBasicConfigurationArgs();
    }

    public sealed class HttpsBasicConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom cipher suite, indicating the specific encryption algorithm selected when CiphersuiteGroup is set to custom.
        /// </summary>
        [Input("ciphersuite")]
        public Input<string>? Ciphersuite { get; set; }

        /// <summary>
        /// Cipher suite group. Default is all cipher suites. Possible values:
        /// - all: All cipher suites.
        /// - strict: Strong cipher suites.
        /// - custom: Custom cipher suites.
        /// </summary>
        [Input("ciphersuiteGroup")]
        public Input<string>? CiphersuiteGroup { get; set; }

        /// <summary>
        /// ConfigId of the configuration, which can be obtained by calling the [ListHttpsBasicConfigurations](https://www.alibabacloud.com/help/en/doc-detail/2867470.html) interface.
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// Indicates whether HTTP2 is enabled. Default is on. Possible values:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Input("http2")]
        public Input<string>? Http2 { get; set; }

        /// <summary>
        /// Whether to enable HTTP3, which is enabled by default. The value can be:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Input("http3")]
        public Input<string>? Http3 { get; set; }

        /// <summary>
        /// Whether to enable HTTPS. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("https")]
        public Input<string>? Https { get; set; }

        /// <summary>
        /// Indicates whether OCSP is enabled. Default is off. Possible values:
        /// - on: Enabled.
        /// - off: Disabled.
        /// </summary>
        [Input("ocspStapling")]
        public Input<string>? OcspStapling { get; set; }

        /// <summary>
        /// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
        /// -  Match all incoming requests: value set to true
        /// -  Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
        /// - on: open.
        /// - off: close.
        /// </summary>
        [Input("ruleEnable")]
        public Input<string>? RuleEnable { get; set; }

        /// <summary>
        /// Rule name. When adding global configuration, this parameter does not need to be set.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Site ID, which can be obtained by calling the [ListSites](https://next.api.alibabacloud.com/document/ESA/2024-09-10/ListSites) interface.
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// Whether to enable TLS1.0. Default is disabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls10")]
        public Input<string>? Tls10 { get; set; }

        /// <summary>
        /// Whether to enable TLS1.1. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls11")]
        public Input<string>? Tls11 { get; set; }

        /// <summary>
        /// Whether to enable TLS1.2. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls12")]
        public Input<string>? Tls12 { get; set; }

        /// <summary>
        /// Whether to enable TLS1.3. Default is enabled. Possible values:
        /// - on: Enable.
        /// - off: Disable.
        /// </summary>
        [Input("tls13")]
        public Input<string>? Tls13 { get; set; }

        public HttpsBasicConfigurationState()
        {
        }
        public static new HttpsBasicConfigurationState Empty => new HttpsBasicConfigurationState();
    }
}
