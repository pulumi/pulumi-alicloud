// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Custom Scene Policy resource.
    /// 
    /// For information about ESA Custom Scene Policy and how to use it, see [What is Custom Scene Policy](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateCustomScenePolicy).
    /// 
    /// &gt; **NOTE:** Available since v1.253.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "bcd58610.com";
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///     });
    /// 
    ///     var defaultSite = new AliCloud.Esa.Site("default", new()
    ///     {
    ///         SiteName = name,
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.InstanceId)),
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///         VersionManagement = true,
    ///     });
    /// 
    ///     var defaultCustomScenePolicy = new AliCloud.Esa.CustomScenePolicy("default", new()
    ///     {
    ///         EndTime = "2025-08-07T17:00:00Z",
    ///         CreateTime = "2025-07-07T17:00:00Z",
    ///         SiteIds = defaultSite.Id,
    ///         Template = "promotion",
    ///         CustomScenePolicyName = "example-policy",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Custom Scene Policy can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/customScenePolicy:CustomScenePolicy example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/customScenePolicy:CustomScenePolicy")]
    public partial class CustomScenePolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when the policy takes effect.
        /// The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The policy name.
        /// </summary>
        [Output("customScenePolicyName")]
        public Output<string> CustomScenePolicyName { get; private set; } = null!;

        /// <summary>
        /// The time when the policy expires.
        /// The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// The IDs of websites associated.
        /// </summary>
        [Output("siteIds")]
        public Output<string> SiteIds { get; private set; } = null!;

        /// <summary>
        /// Policy effective status. Valid values: `Disabled`, `Running`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The name of the policy template. Valid value:
        /// </summary>
        [Output("template")]
        public Output<string> Template { get; private set; } = null!;


        /// <summary>
        /// Create a CustomScenePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomScenePolicy(string name, CustomScenePolicyArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/customScenePolicy:CustomScenePolicy", name, args ?? new CustomScenePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomScenePolicy(string name, Input<string> id, CustomScenePolicyState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/customScenePolicy:CustomScenePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomScenePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomScenePolicy Get(string name, Input<string> id, CustomScenePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomScenePolicy(name, id, state, options);
        }
    }

    public sealed class CustomScenePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the policy takes effect.
        /// The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("createTime", required: true)]
        public Input<string> CreateTime { get; set; } = null!;

        /// <summary>
        /// The policy name.
        /// </summary>
        [Input("customScenePolicyName", required: true)]
        public Input<string> CustomScenePolicyName { get; set; } = null!;

        /// <summary>
        /// The time when the policy expires.
        /// The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// The IDs of websites associated.
        /// </summary>
        [Input("siteIds", required: true)]
        public Input<string> SiteIds { get; set; } = null!;

        /// <summary>
        /// Policy effective status. Valid values: `Disabled`, `Running`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the policy template. Valid value:
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        public CustomScenePolicyArgs()
        {
        }
        public static new CustomScenePolicyArgs Empty => new CustomScenePolicyArgs();
    }

    public sealed class CustomScenePolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the policy takes effect.
        /// The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The policy name.
        /// </summary>
        [Input("customScenePolicyName")]
        public Input<string>? CustomScenePolicyName { get; set; }

        /// <summary>
        /// The time when the policy expires.
        /// The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The IDs of websites associated.
        /// </summary>
        [Input("siteIds")]
        public Input<string>? SiteIds { get; set; }

        /// <summary>
        /// Policy effective status. Valid values: `Disabled`, `Running`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the policy template. Valid value:
        /// </summary>
        [Input("template")]
        public Input<string>? Template { get; set; }

        public CustomScenePolicyState()
        {
        }
        public static new CustomScenePolicyState Empty => new CustomScenePolicyState();
    }
}
