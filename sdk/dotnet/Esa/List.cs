// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA List resource.
    /// 
    /// For information about ESA List and how to use it, see [What is List](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/user-guide/grouping).
    /// 
    /// &gt; **NOTE:** Available since v1.242.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.Esa.List("default", new()
    ///     {
    ///         Description = "resource example ip list",
    ///         Kind = "ip",
    ///         Items = new[]
    ///         {
    ///             "10.1.1.1",
    ///             "10.1.1.2",
    ///             "10.1.1.3",
    ///         },
    ///         Name = "resource_example_ip_list",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA List can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/list:List example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/list:List")]
    public partial class List : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the custom list.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The items in the custom list, which are displayed as an array.
        /// </summary>
        [Output("items")]
        public Output<ImmutableArray<string>> Items { get; private set; } = null!;

        /// <summary>
        /// The type of the custom list.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// The name of the custom list.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a List resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public List(string name, ListArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/list:List", name, args ?? new ListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private List(string name, Input<string> id, ListState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/list:List", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing List resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static List Get(string name, Input<string> id, ListState? state = null, CustomResourceOptions? options = null)
        {
            return new List(name, id, state, options);
        }
    }

    public sealed class ListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the custom list.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("items")]
        private InputList<string>? _items;

        /// <summary>
        /// The items in the custom list, which are displayed as an array.
        /// </summary>
        public InputList<string> Items
        {
            get => _items ?? (_items = new InputList<string>());
            set => _items = value;
        }

        /// <summary>
        /// The type of the custom list.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The name of the custom list.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ListArgs()
        {
        }
        public static new ListArgs Empty => new ListArgs();
    }

    public sealed class ListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the custom list.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("items")]
        private InputList<string>? _items;

        /// <summary>
        /// The items in the custom list, which are displayed as an array.
        /// </summary>
        public InputList<string> Items
        {
            get => _items ?? (_items = new InputList<string>());
            set => _items = value;
        }

        /// <summary>
        /// The type of the custom list.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The name of the custom list.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ListState()
        {
        }
        public static new ListState Empty => new ListState();
    }
}
