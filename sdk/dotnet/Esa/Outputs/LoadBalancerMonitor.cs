// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa.Outputs
{

    [OutputType]
    public sealed class LoadBalancerMonitor
    {
        /// <summary>
        /// The number of consecutive failed health checks before the backend is considered down, for example, 5.
        /// </summary>
        public readonly int? ConsecutiveDown;
        /// <summary>
        /// The number of consecutive successful probes required to consider the target as up, e.g., 3.
        /// </summary>
        public readonly int? ConsecutiveUp;
        /// <summary>
        /// Expected status code, such as 200,202, successful HTTP response.
        /// </summary>
        public readonly string? ExpectedCodes;
        /// <summary>
        /// Whether to follow the redirect.
        /// </summary>
        public readonly bool? FollowRedirects;
        /// <summary>
        /// The HTTP headers to be included in the health check request.
        /// </summary>
        public readonly string? Header;
        /// <summary>
        /// The monitoring interval, such as 60 seconds, checks the frequency.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// Monitor request methods, such as GET, methods in the HTTP protocol.
        /// </summary>
        public readonly string? Method;
        /// <summary>
        /// Probe Point Region, default to Global
        /// - `Global`: Global.
        /// - `ChineseMainland`: Chinese mainland.
        /// - `OutsideChineseMainland`: Global (excluding the Chinese mainland).
        /// </summary>
        public readonly string? MonitoringRegion;
        /// <summary>
        /// The monitor checks the path, such as/healthcheck, the HTTP request path.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// The target port.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The timeout for the health check, in seconds. The value range is 1-10.
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// The type of monitor protocol, such as HTTP, used for health checks. When the value is off, it indicates that no check is performed.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private LoadBalancerMonitor(
            int? consecutiveDown,

            int? consecutiveUp,

            string? expectedCodes,

            bool? followRedirects,

            string? header,

            int? interval,

            string? method,

            string? monitoringRegion,

            string? path,

            int? port,

            int? timeout,

            string? type)
        {
            ConsecutiveDown = consecutiveDown;
            ConsecutiveUp = consecutiveUp;
            ExpectedCodes = expectedCodes;
            FollowRedirects = followRedirects;
            Header = header;
            Interval = interval;
            Method = method;
            MonitoringRegion = monitoringRegion;
            Path = path;
            Port = port;
            Timeout = timeout;
            Type = type;
        }
    }
}
