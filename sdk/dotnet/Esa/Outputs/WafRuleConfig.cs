// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa.Outputs
{

    [OutputType]
    public sealed class WafRuleConfig
    {
        /// <summary>
        /// The action performed on requests that match the managed rule.
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Extended action configurations, including custom responses and bypass settings. See `Actions` below.
        /// </summary>
        public readonly Outputs.WafRuleConfigActions? Actions;
        /// <summary>
        /// Security mechanism to prevent apps from being repackaged. See `AppPackage` below.
        /// </summary>
        public readonly Outputs.WafRuleConfigAppPackage? AppPackage;
        /// <summary>
        /// Mobile app SDK-related configurations. See `AppSdk` below.
        /// </summary>
        public readonly Outputs.WafRuleConfigAppSdk? AppSdk;
        /// <summary>
        /// The match expression used to evaluate incoming requests.
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// The ID of the custom error page, which can be obtained by calling the ListPages operation.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// The ID of the managed rule group (deprecated).
        /// </summary>
        public readonly int? ManagedGroupId;
        /// <summary>
        /// The name of the managed list applied to this rule.
        /// </summary>
        public readonly string? ManagedList;
        /// <summary>
        /// The managed rulesets referenced by this rule and their configurations. See `ManagedRulesets` below.
        /// </summary>
        public readonly ImmutableArray<Outputs.WafRuleConfigManagedRuleset> ManagedRulesets;
        /// <summary>
        /// The package name of an authorized application.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Additional notes about this rule.
        /// </summary>
        public readonly string? Notes;
        /// <summary>
        /// Configuration of the rate limiting rule. See `RateLimit` below.
        /// </summary>
        public readonly Outputs.WafRuleConfigRateLimit? RateLimit;
        /// <summary>
        /// The overall security protection level of WAF. See `SecurityLevel` below.
        /// </summary>
        public readonly Outputs.WafRuleConfigSecurityLevel? SecurityLevel;
        /// <summary>
        /// Configuration items for token verification mechanisms.
        /// </summary>
        public readonly ImmutableArray<string> Sigchls;
        /// <summary>
        /// The status of the managed rule: whether it is enabled or disabled.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Configuration for the time schedule when the rule takes effect. See `Timer` below.
        /// </summary>
        public readonly Outputs.WafRuleConfigTimer? Timer;
        /// <summary>
        /// The type category of the WAF rule.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The value of the custom signature field used for validation.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private WafRuleConfig(
            string? action,

            Outputs.WafRuleConfigActions? actions,

            Outputs.WafRuleConfigAppPackage? appPackage,

            Outputs.WafRuleConfigAppSdk? appSdk,

            string? expression,

            int? id,

            int? managedGroupId,

            string? managedList,

            ImmutableArray<Outputs.WafRuleConfigManagedRuleset> managedRulesets,

            string? name,

            string? notes,

            Outputs.WafRuleConfigRateLimit? rateLimit,

            Outputs.WafRuleConfigSecurityLevel? securityLevel,

            ImmutableArray<string> sigchls,

            string? status,

            Outputs.WafRuleConfigTimer? timer,

            string? type,

            string? value)
        {
            Action = action;
            Actions = actions;
            AppPackage = appPackage;
            AppSdk = appSdk;
            Expression = expression;
            Id = id;
            ManagedGroupId = managedGroupId;
            ManagedList = managedList;
            ManagedRulesets = managedRulesets;
            Name = name;
            Notes = notes;
            RateLimit = rateLimit;
            SecurityLevel = securityLevel;
            Sigchls = sigchls;
            Status = status;
            Timer = timer;
            Type = type;
            Value = value;
        }
    }
}
