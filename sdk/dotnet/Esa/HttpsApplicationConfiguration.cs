// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Https Application Configuration resource.
    /// 
    /// For information about ESA Https Application Configuration and how to use it, see [What is Https Application Configuration](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateHttpsApplicationConfiguration).
    /// 
    /// &gt; **NOTE:** Available since v1.244.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///     });
    /// 
    ///     var defaultSite = new AliCloud.Esa.Site("default", new()
    ///     {
    ///         SiteName = "httpsapplicationconfiguration.example.com",
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.InstanceId)),
    ///         Coverage = "domestic",
    ///         AccessType = "NS",
    ///     });
    /// 
    ///     var defaultHttpsApplicationConfiguration = new AliCloud.Esa.HttpsApplicationConfiguration("default", new()
    ///     {
    ///         HstsMaxAge = "31536000",
    ///         AltSvcClear = "off",
    ///         Rule = "http.host eq \"video.example.com\"",
    ///         HttpsForce = "off",
    ///         AltSvcMa = "86400",
    ///         Hsts = "off",
    ///         RuleName = "rule_example",
    ///         RuleEnable = "off",
    ///         SiteId = defaultSite.Id,
    ///         AltSvcPersist = "off",
    ///         HstsPreload = "off",
    ///         HstsIncludeSubdomains = "off",
    ///         AltSvc = "off",
    ///         HttpsForceCode = "301",
    ///         SiteVersion = 0,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Https Application Configuration can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration example &lt;site_id&gt;:&lt;config_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration")]
    public partial class HttpsApplicationConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Function switch, default off. Value range:
        /// </summary>
        [Output("altSvc")]
        public Output<string?> AltSvc { get; private set; } = null!;

        /// <summary>
        /// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
        /// </summary>
        [Output("altSvcClear")]
        public Output<string?> AltSvcClear { get; private set; } = null!;

        /// <summary>
        /// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
        /// </summary>
        [Output("altSvcMa")]
        public Output<string?> AltSvcMa { get; private set; } = null!;

        /// <summary>
        /// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
        /// </summary>
        [Output("altSvcPersist")]
        public Output<string?> AltSvcPersist { get; private set; } = null!;

        /// <summary>
        /// Config Id
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Whether to enable HSTS. It is disabled by default. Value range:
        /// </summary>
        [Output("hsts")]
        public Output<string?> Hsts { get; private set; } = null!;

        /// <summary>
        /// Whether to include subdomains in HSTS is disabled by default. Value range:
        /// </summary>
        [Output("hstsIncludeSubdomains")]
        public Output<string?> HstsIncludeSubdomains { get; private set; } = null!;

        /// <summary>
        /// The expiration time of HSTS, in seconds.
        /// </summary>
        [Output("hstsMaxAge")]
        public Output<string?> HstsMaxAge { get; private set; } = null!;

        /// <summary>
        /// Whether to enable HSTS preloading. It is disabled by default. Value range:
        /// </summary>
        [Output("hstsPreload")]
        public Output<string?> HstsPreload { get; private set; } = null!;

        /// <summary>
        /// Whether to enable forced HTTPS. It is disabled by default. Value range:
        /// </summary>
        [Output("httpsForce")]
        public Output<string?> HttpsForce { get; private set; } = null!;

        /// <summary>
        /// Forced HTTPS jump status code, value range:
        /// </summary>
        [Output("httpsForceCode")]
        public Output<string?> HttpsForceCode { get; private set; } = null!;

        /// <summary>
        /// Rule Content.
        /// </summary>
        [Output("rule")]
        public Output<string?> Rule { get; private set; } = null!;

        /// <summary>
        /// Rule switch. Value range:
        /// </summary>
        [Output("ruleEnable")]
        public Output<string?> RuleEnable { get; private set; } = null!;

        /// <summary>
        /// Rule name, you can find out the rule whose rule name is the passed field.
        /// </summary>
        [Output("ruleName")]
        public Output<string?> RuleName { get; private set; } = null!;

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;

        /// <summary>
        /// The version of the website configurations.
        /// </summary>
        [Output("siteVersion")]
        public Output<int?> SiteVersion { get; private set; } = null!;


        /// <summary>
        /// Create a HttpsApplicationConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HttpsApplicationConfiguration(string name, HttpsApplicationConfigurationArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration", name, args ?? new HttpsApplicationConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HttpsApplicationConfiguration(string name, Input<string> id, HttpsApplicationConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HttpsApplicationConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HttpsApplicationConfiguration Get(string name, Input<string> id, HttpsApplicationConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new HttpsApplicationConfiguration(name, id, state, options);
        }
    }

    public sealed class HttpsApplicationConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Function switch, default off. Value range:
        /// </summary>
        [Input("altSvc")]
        public Input<string>? AltSvc { get; set; }

        /// <summary>
        /// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
        /// </summary>
        [Input("altSvcClear")]
        public Input<string>? AltSvcClear { get; set; }

        /// <summary>
        /// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
        /// </summary>
        [Input("altSvcMa")]
        public Input<string>? AltSvcMa { get; set; }

        /// <summary>
        /// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
        /// </summary>
        [Input("altSvcPersist")]
        public Input<string>? AltSvcPersist { get; set; }

        /// <summary>
        /// Whether to enable HSTS. It is disabled by default. Value range:
        /// </summary>
        [Input("hsts")]
        public Input<string>? Hsts { get; set; }

        /// <summary>
        /// Whether to include subdomains in HSTS is disabled by default. Value range:
        /// </summary>
        [Input("hstsIncludeSubdomains")]
        public Input<string>? HstsIncludeSubdomains { get; set; }

        /// <summary>
        /// The expiration time of HSTS, in seconds.
        /// </summary>
        [Input("hstsMaxAge")]
        public Input<string>? HstsMaxAge { get; set; }

        /// <summary>
        /// Whether to enable HSTS preloading. It is disabled by default. Value range:
        /// </summary>
        [Input("hstsPreload")]
        public Input<string>? HstsPreload { get; set; }

        /// <summary>
        /// Whether to enable forced HTTPS. It is disabled by default. Value range:
        /// </summary>
        [Input("httpsForce")]
        public Input<string>? HttpsForce { get; set; }

        /// <summary>
        /// Forced HTTPS jump status code, value range:
        /// </summary>
        [Input("httpsForceCode")]
        public Input<string>? HttpsForceCode { get; set; }

        /// <summary>
        /// Rule Content.
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule switch. Value range:
        /// </summary>
        [Input("ruleEnable")]
        public Input<string>? RuleEnable { get; set; }

        /// <summary>
        /// Rule name, you can find out the rule whose rule name is the passed field.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        /// <summary>
        /// The version of the website configurations.
        /// </summary>
        [Input("siteVersion")]
        public Input<int>? SiteVersion { get; set; }

        public HttpsApplicationConfigurationArgs()
        {
        }
        public static new HttpsApplicationConfigurationArgs Empty => new HttpsApplicationConfigurationArgs();
    }

    public sealed class HttpsApplicationConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Function switch, default off. Value range:
        /// </summary>
        [Input("altSvc")]
        public Input<string>? AltSvc { get; set; }

        /// <summary>
        /// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
        /// </summary>
        [Input("altSvcClear")]
        public Input<string>? AltSvcClear { get; set; }

        /// <summary>
        /// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
        /// </summary>
        [Input("altSvcMa")]
        public Input<string>? AltSvcMa { get; set; }

        /// <summary>
        /// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
        /// </summary>
        [Input("altSvcPersist")]
        public Input<string>? AltSvcPersist { get; set; }

        /// <summary>
        /// Config Id
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// Whether to enable HSTS. It is disabled by default. Value range:
        /// </summary>
        [Input("hsts")]
        public Input<string>? Hsts { get; set; }

        /// <summary>
        /// Whether to include subdomains in HSTS is disabled by default. Value range:
        /// </summary>
        [Input("hstsIncludeSubdomains")]
        public Input<string>? HstsIncludeSubdomains { get; set; }

        /// <summary>
        /// The expiration time of HSTS, in seconds.
        /// </summary>
        [Input("hstsMaxAge")]
        public Input<string>? HstsMaxAge { get; set; }

        /// <summary>
        /// Whether to enable HSTS preloading. It is disabled by default. Value range:
        /// </summary>
        [Input("hstsPreload")]
        public Input<string>? HstsPreload { get; set; }

        /// <summary>
        /// Whether to enable forced HTTPS. It is disabled by default. Value range:
        /// </summary>
        [Input("httpsForce")]
        public Input<string>? HttpsForce { get; set; }

        /// <summary>
        /// Forced HTTPS jump status code, value range:
        /// </summary>
        [Input("httpsForceCode")]
        public Input<string>? HttpsForceCode { get; set; }

        /// <summary>
        /// Rule Content.
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule switch. Value range:
        /// </summary>
        [Input("ruleEnable")]
        public Input<string>? RuleEnable { get; set; }

        /// <summary>
        /// Rule name, you can find out the rule whose rule name is the passed field.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The site ID, which can be obtained by calling the ListSites API.
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// The version of the website configurations.
        /// </summary>
        [Input("siteVersion")]
        public Input<int>? SiteVersion { get; set; }

        public HttpsApplicationConfigurationState()
        {
        }
        public static new HttpsApplicationConfigurationState Empty => new HttpsApplicationConfigurationState();
    }
}
