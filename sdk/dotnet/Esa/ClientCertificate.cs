// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Client Certificate resource.
    /// 
    /// For information about ESA Client Certificate and how to use it, see [What is Client Certificate](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateClientCertificate).
    /// 
    /// &gt; **NOTE:** Available since v1.244.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///         SiteName = "gositecdn.cn",
    ///     });
    /// 
    ///     var defaultClientCertificate = new AliCloud.Esa.ClientCertificate("default", new()
    ///     {
    ///         SiteId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.Id)),
    ///         PkeyType = "RSA",
    ///         ValidityDays = "365",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Client Certificate can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/clientCertificate:ClientCertificate example &lt;site_id&gt;:&lt;client_cert_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/clientCertificate:ClientCertificate")]
    public partial class ClientCertificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ClientCertificate Id
        /// </summary>
        [Output("clientCertId")]
        public Output<string> ClientCertId { get; private set; } = null!;

        /// <summary>
        /// The time when the certificate was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Certificate signing request content.
        /// </summary>
        [Output("csr")]
        public Output<string?> Csr { get; private set; } = null!;

        /// <summary>
        /// The private key algorithm type.
        /// </summary>
        [Output("pkeyType")]
        public Output<string?> PkeyType { get; private set; } = null!;

        /// <summary>
        /// Site Id
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;

        /// <summary>
        /// The certificate status. Valid values: `revoked`, `active`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Certificate validity period.
        /// </summary>
        [Output("validityDays")]
        public Output<string> ValidityDays { get; private set; } = null!;


        /// <summary>
        /// Create a ClientCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClientCertificate(string name, ClientCertificateArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/clientCertificate:ClientCertificate", name, args ?? new ClientCertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClientCertificate(string name, Input<string> id, ClientCertificateState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/clientCertificate:ClientCertificate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClientCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClientCertificate Get(string name, Input<string> id, ClientCertificateState? state = null, CustomResourceOptions? options = null)
        {
            return new ClientCertificate(name, id, state, options);
        }
    }

    public sealed class ClientCertificateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Certificate signing request content.
        /// </summary>
        [Input("csr")]
        public Input<string>? Csr { get; set; }

        /// <summary>
        /// The private key algorithm type.
        /// </summary>
        [Input("pkeyType")]
        public Input<string>? PkeyType { get; set; }

        /// <summary>
        /// Site Id
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        /// <summary>
        /// The certificate status. Valid values: `revoked`, `active`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Certificate validity period.
        /// </summary>
        [Input("validityDays", required: true)]
        public Input<string> ValidityDays { get; set; } = null!;

        public ClientCertificateArgs()
        {
        }
        public static new ClientCertificateArgs Empty => new ClientCertificateArgs();
    }

    public sealed class ClientCertificateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ClientCertificate Id
        /// </summary>
        [Input("clientCertId")]
        public Input<string>? ClientCertId { get; set; }

        /// <summary>
        /// The time when the certificate was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Certificate signing request content.
        /// </summary>
        [Input("csr")]
        public Input<string>? Csr { get; set; }

        /// <summary>
        /// The private key algorithm type.
        /// </summary>
        [Input("pkeyType")]
        public Input<string>? PkeyType { get; set; }

        /// <summary>
        /// Site Id
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// The certificate status. Valid values: `revoked`, `active`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Certificate validity period.
        /// </summary>
        [Input("validityDays")]
        public Input<string>? ValidityDays { get; set; }

        public ClientCertificateState()
        {
        }
        public static new ClientCertificateState Empty => new ClientCertificateState();
    }
}
