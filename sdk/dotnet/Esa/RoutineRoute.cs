// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Routine Route resource.
    /// 
    /// For information about ESA Routine Route and how to use it, see [What is Routine Route](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateRoutineRoute).
    /// 
    /// &gt; **NOTE:** Available since v1.251.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.Esa.GetSites.Invoke(new()
    ///     {
    ///         PlanSubscribeType = "enterpriseplan",
    ///     });
    /// 
    ///     var defaultSite = new AliCloud.Esa.Site("default", new()
    ///     {
    ///         SiteName = "chenxin0116.site",
    ///         InstanceId = @default.Apply(@default =&gt; @default.Apply(getSitesResult =&gt; getSitesResult.Sites[0]?.InstanceId)),
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///     });
    /// 
    ///     var defaultRoutine = new AliCloud.Esa.Routine("default", new()
    ///     {
    ///         Description = "example-routine2",
    ///         Name = "example-routine2",
    ///     });
    /// 
    ///     var defaultRoutineRoute = new AliCloud.Esa.RoutineRoute("default", new()
    ///     {
    ///         RouteEnable = "on",
    ///         Rule = "(http.host eq \"video.example1.com\")",
    ///         Sequence = 1,
    ///         RoutineName = defaultRoutine.Name,
    ///         SiteId = defaultSite.Id,
    ///         Bypass = "off",
    ///         RouteName = "example_routine",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Routine Route can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/routineRoute:RoutineRoute example &lt;site_id&gt;:&lt;routine_name&gt;:&lt;config_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/routineRoute:RoutineRoute")]
    public partial class RoutineRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Bypass mode. Value range:
        /// - on: Open
        /// - off: off
        /// </summary>
        [Output("bypass")]
        public Output<string?> Bypass { get; private set; } = null!;

        /// <summary>
        /// Config Id
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Routing switch. Value range:
        /// - on: Open
        /// - off: off
        /// </summary>
        [Output("routeEnable")]
        public Output<string?> RouteEnable { get; private set; } = null!;

        /// <summary>
        /// The route name.
        /// </summary>
        [Output("routeName")]
        public Output<string?> RouteName { get; private set; } = null!;

        /// <summary>
        /// The edge function Routine name.
        /// </summary>
        [Output("routineName")]
        public Output<string> RoutineName { get; private set; } = null!;

        /// <summary>
        /// The rule content.
        /// </summary>
        [Output("rule")]
        public Output<string?> Rule { get; private set; } = null!;

        /// <summary>
        /// Rule execution order.
        /// </summary>
        [Output("sequence")]
        public Output<int?> Sequence { get; private set; } = null!;

        /// <summary>
        /// Site Id
        /// </summary>
        [Output("siteId")]
        public Output<int> SiteId { get; private set; } = null!;


        /// <summary>
        /// Create a RoutineRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoutineRoute(string name, RoutineRouteArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/routineRoute:RoutineRoute", name, args ?? new RoutineRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoutineRoute(string name, Input<string> id, RoutineRouteState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/routineRoute:RoutineRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoutineRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoutineRoute Get(string name, Input<string> id, RoutineRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new RoutineRoute(name, id, state, options);
        }
    }

    public sealed class RoutineRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bypass mode. Value range:
        /// - on: Open
        /// - off: off
        /// </summary>
        [Input("bypass")]
        public Input<string>? Bypass { get; set; }

        /// <summary>
        /// Routing switch. Value range:
        /// - on: Open
        /// - off: off
        /// </summary>
        [Input("routeEnable")]
        public Input<string>? RouteEnable { get; set; }

        /// <summary>
        /// The route name.
        /// </summary>
        [Input("routeName")]
        public Input<string>? RouteName { get; set; }

        /// <summary>
        /// The edge function Routine name.
        /// </summary>
        [Input("routineName", required: true)]
        public Input<string> RoutineName { get; set; } = null!;

        /// <summary>
        /// The rule content.
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule execution order.
        /// </summary>
        [Input("sequence")]
        public Input<int>? Sequence { get; set; }

        /// <summary>
        /// Site Id
        /// </summary>
        [Input("siteId", required: true)]
        public Input<int> SiteId { get; set; } = null!;

        public RoutineRouteArgs()
        {
        }
        public static new RoutineRouteArgs Empty => new RoutineRouteArgs();
    }

    public sealed class RoutineRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bypass mode. Value range:
        /// - on: Open
        /// - off: off
        /// </summary>
        [Input("bypass")]
        public Input<string>? Bypass { get; set; }

        /// <summary>
        /// Config Id
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// Routing switch. Value range:
        /// - on: Open
        /// - off: off
        /// </summary>
        [Input("routeEnable")]
        public Input<string>? RouteEnable { get; set; }

        /// <summary>
        /// The route name.
        /// </summary>
        [Input("routeName")]
        public Input<string>? RouteName { get; set; }

        /// <summary>
        /// The edge function Routine name.
        /// </summary>
        [Input("routineName")]
        public Input<string>? RoutineName { get; set; }

        /// <summary>
        /// The rule content.
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule execution order.
        /// </summary>
        [Input("sequence")]
        public Input<int>? Sequence { get; set; }

        /// <summary>
        /// Site Id
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        public RoutineRouteState()
        {
        }
        public static new RoutineRouteState Empty => new RoutineRouteState();
    }
}
