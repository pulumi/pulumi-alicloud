// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Site resource.
    /// 
    /// For information about ESA Site and how to use it, see [What is Site](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/user-guide/site-management).
    /// 
    /// &gt; **NOTE:** Available since v1.234.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultIEoDfU = new AliCloud.Esa.RatePlanInstance("defaultIEoDfU", new()
    ///     {
    ///         Type = "NS",
    ///         AutoRenew = true,
    ///         Period = 1,
    ///         PaymentType = "Subscription",
    ///         Coverage = "overseas",
    ///         AutoPay = true,
    ///         PlanName = "basic",
    ///     });
    /// 
    ///     var defaultInteger = new Random.Index.Integer("default", new()
    ///     {
    ///         Min = 10000,
    ///         Max = 99999,
    ///     });
    /// 
    ///     var defaultSite = new AliCloud.Esa.Site("default", new()
    ///     {
    ///         SiteName = $"bcd{defaultInteger.Result}.com",
    ///         Coverage = "overseas",
    ///         AccessType = "NS",
    ///         InstanceId = defaultIEoDfU.Id,
    ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0])),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Site can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/site:Site example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/site:Site")]
    public partial class Site : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The DNS setup. Valid values:
        /// - `NS`
        /// - `CNAME`
        /// </summary>
        [Output("accessType")]
        public Output<string?> AccessType { get; private set; } = null!;

        /// <summary>
        /// Add visitor geolocation header. Value range:
        /// </summary>
        [Output("addClientGeolocationHeader")]
        public Output<string?> AddClientGeolocationHeader { get; private set; } = null!;

        /// <summary>
        /// Add the "ali-real-client-ip" header containing the real client IP. Value range:
        /// </summary>
        [Output("addRealClientIpHeader")]
        public Output<string?> AddRealClientIpHeader { get; private set; } = null!;

        /// <summary>
        /// Multi-level cache architecture mode. Possible values:
        /// </summary>
        [Output("cacheArchitectureMode")]
        public Output<string> CacheArchitectureMode { get; private set; } = null!;

        /// <summary>
        /// The service location. Valid values:
        /// </summary>
        [Output("coverage")]
        public Output<string?> Coverage { get; private set; } = null!;

        /// <summary>
        /// The time when the website was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the associated package instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable IPv6. Valid values:
        /// </summary>
        [Output("ipv6Enable")]
        public Output<string> Ipv6Enable { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The website name.
        /// </summary>
        [Output("siteName")]
        public Output<string> SiteName { get; private set; } = null!;

        /// <summary>
        /// The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
        /// </summary>
        [Output("siteVersion")]
        public Output<int?> SiteVersion { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Site resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Site(string name, SiteArgs args, CustomResourceOptions? options = null)
            : base("alicloud:esa/site:Site", name, args ?? new SiteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Site(string name, Input<string> id, SiteState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/site:Site", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Site resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Site Get(string name, Input<string> id, SiteState? state = null, CustomResourceOptions? options = null)
        {
            return new Site(name, id, state, options);
        }
    }

    public sealed class SiteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DNS setup. Valid values:
        /// - `NS`
        /// - `CNAME`
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// Add visitor geolocation header. Value range:
        /// </summary>
        [Input("addClientGeolocationHeader")]
        public Input<string>? AddClientGeolocationHeader { get; set; }

        /// <summary>
        /// Add the "ali-real-client-ip" header containing the real client IP. Value range:
        /// </summary>
        [Input("addRealClientIpHeader")]
        public Input<string>? AddRealClientIpHeader { get; set; }

        /// <summary>
        /// Multi-level cache architecture mode. Possible values:
        /// </summary>
        [Input("cacheArchitectureMode")]
        public Input<string>? CacheArchitectureMode { get; set; }

        /// <summary>
        /// The service location. Valid values:
        /// </summary>
        [Input("coverage")]
        public Input<string>? Coverage { get; set; }

        /// <summary>
        /// The ID of the associated package instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Specifies whether to enable IPv6. Valid values:
        /// </summary>
        [Input("ipv6Enable")]
        public Input<string>? Ipv6Enable { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The website name.
        /// </summary>
        [Input("siteName", required: true)]
        public Input<string> SiteName { get; set; } = null!;

        /// <summary>
        /// The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
        /// </summary>
        [Input("siteVersion")]
        public Input<int>? SiteVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SiteArgs()
        {
        }
        public static new SiteArgs Empty => new SiteArgs();
    }

    public sealed class SiteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DNS setup. Valid values:
        /// - `NS`
        /// - `CNAME`
        /// </summary>
        [Input("accessType")]
        public Input<string>? AccessType { get; set; }

        /// <summary>
        /// Add visitor geolocation header. Value range:
        /// </summary>
        [Input("addClientGeolocationHeader")]
        public Input<string>? AddClientGeolocationHeader { get; set; }

        /// <summary>
        /// Add the "ali-real-client-ip" header containing the real client IP. Value range:
        /// </summary>
        [Input("addRealClientIpHeader")]
        public Input<string>? AddRealClientIpHeader { get; set; }

        /// <summary>
        /// Multi-level cache architecture mode. Possible values:
        /// </summary>
        [Input("cacheArchitectureMode")]
        public Input<string>? CacheArchitectureMode { get; set; }

        /// <summary>
        /// The service location. Valid values:
        /// </summary>
        [Input("coverage")]
        public Input<string>? Coverage { get; set; }

        /// <summary>
        /// The time when the website was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the associated package instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Specifies whether to enable IPv6. Valid values:
        /// </summary>
        [Input("ipv6Enable")]
        public Input<string>? Ipv6Enable { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The website name.
        /// </summary>
        [Input("siteName")]
        public Input<string>? SiteName { get; set; }

        /// <summary>
        /// The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
        /// </summary>
        [Input("siteVersion")]
        public Input<int>? SiteVersion { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SiteState()
        {
        }
        public static new SiteState Empty => new SiteState();
    }
}
