// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa
{
    /// <summary>
    /// Provides a ESA Rate Plan Instance resource.
    /// 
    /// For information about ESA Rate Plan Instance and how to use it, see [What is Rate Plan Instance](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/product-overview/query-package-information).
    /// 
    /// &gt; **NOTE:** Available since v1.234.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = new AliCloud.Esa.RatePlanInstance("default", new()
    ///     {
    ///         Type = "NS",
    ///         AutoRenew = true,
    ///         Period = 1,
    ///         PaymentType = "Subscription",
    ///         Coverage = "overseas",
    ///         PlanName = "basic",
    ///         AutoPay = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESA Rate Plan Instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:esa/ratePlanInstance:RatePlanInstance example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:esa/ratePlanInstance:RatePlanInstance")]
    public partial class RatePlanInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to enable auto payment.
        /// </summary>
        [Output("autoPay")]
        public Output<bool?> AutoPay { get; private set; } = null!;

        /// <summary>
        /// Auto-renewal:
        /// </summary>
        [Output("autoRenew")]
        public Output<bool?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
        /// </summary>
        [Output("coverage")]
        public Output<string?> Coverage { get; private set; } = null!;

        /// <summary>
        /// The time when the plan was purchased.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The plan instance status.
        /// - `Renewing`: renewing
        /// </summary>
        [Output("instanceStatus")]
        public Output<string> InstanceStatus { get; private set; } = null!;

        /// <summary>
        /// The payment type of the resource. Valid values:
        /// - `Subscription`: subscription.
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// Subscription period (in months).
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// Package name.Value range:
        /// </summary>
        [Output("planName")]
        public Output<string?> PlanName { get; private set; } = null!;

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The DNS setup option for the website. Valid values:
        /// - `NS`
        /// - `CNAME`
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RatePlanInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RatePlanInstance(string name, RatePlanInstanceArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/ratePlanInstance:RatePlanInstance", name, args ?? new RatePlanInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RatePlanInstance(string name, Input<string> id, RatePlanInstanceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:esa/ratePlanInstance:RatePlanInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RatePlanInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RatePlanInstance Get(string name, Input<string> id, RatePlanInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new RatePlanInstance(name, id, state, options);
        }
    }

    public sealed class RatePlanInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable auto payment.
        /// </summary>
        [Input("autoPay")]
        public Input<bool>? AutoPay { get; set; }

        /// <summary>
        /// Auto-renewal:
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
        /// </summary>
        [Input("coverage")]
        public Input<string>? Coverage { get; set; }

        /// <summary>
        /// The payment type of the resource. Valid values:
        /// - `Subscription`: subscription.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Subscription period (in months).
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// Package name.Value range:
        /// </summary>
        [Input("planName")]
        public Input<string>? PlanName { get; set; }

        /// <summary>
        /// The DNS setup option for the website. Valid values:
        /// - `NS`
        /// - `CNAME`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RatePlanInstanceArgs()
        {
        }
        public static new RatePlanInstanceArgs Empty => new RatePlanInstanceArgs();
    }

    public sealed class RatePlanInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable auto payment.
        /// </summary>
        [Input("autoPay")]
        public Input<bool>? AutoPay { get; set; }

        /// <summary>
        /// Auto-renewal:
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
        /// </summary>
        [Input("coverage")]
        public Input<string>? Coverage { get; set; }

        /// <summary>
        /// The time when the plan was purchased.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The plan instance status.
        /// - `Renewing`: renewing
        /// </summary>
        [Input("instanceStatus")]
        public Input<string>? InstanceStatus { get; set; }

        /// <summary>
        /// The payment type of the resource. Valid values:
        /// - `Subscription`: subscription.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Subscription period (in months).
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// Package name.Value range:
        /// </summary>
        [Input("planName")]
        public Input<string>? PlanName { get; set; }

        /// <summary>
        /// The status of the resource.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The DNS setup option for the website. Valid values:
        /// - `NS`
        /// - `CNAME`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RatePlanInstanceState()
        {
        }
        public static new RatePlanInstanceState Empty => new RatePlanInstanceState();
    }
}
