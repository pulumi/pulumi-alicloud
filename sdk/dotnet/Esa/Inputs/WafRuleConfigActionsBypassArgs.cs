// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa.Inputs
{

    public sealed class WafRuleConfigActionsBypassArgs : global::Pulumi.ResourceArgs
    {
        [Input("customRules")]
        private InputList<int>? _customRules;

        /// <summary>
        /// The IDs of custom rules to skip.
        /// </summary>
        public InputList<int> CustomRules
        {
            get => _customRules ?? (_customRules = new InputList<int>());
            set => _customRules = value;
        }

        [Input("regularRules")]
        private InputList<int>? _regularRules;

        /// <summary>
        /// The IDs of specific managed rules to skip.
        /// </summary>
        public InputList<int> RegularRules
        {
            get => _regularRules ?? (_regularRules = new InputList<int>());
            set => _regularRules = value;
        }

        [Input("regularTypes")]
        private InputList<string>? _regularTypes;

        /// <summary>
        /// The types of managed rules to skip.
        /// </summary>
        public InputList<string> RegularTypes
        {
            get => _regularTypes ?? (_regularTypes = new InputList<string>());
            set => _regularTypes = value;
        }

        /// <summary>
        /// The scope that is skipped when requests match conditions defined in the whitelist rule.
        /// </summary>
        [Input("skip")]
        public Input<string>? Skip { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The rule categories that are skipped when requests match conditions defined in the whitelist rule.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public WafRuleConfigActionsBypassArgs()
        {
        }
        public static new WafRuleConfigActionsBypassArgs Empty => new WafRuleConfigActionsBypassArgs();
    }
}
