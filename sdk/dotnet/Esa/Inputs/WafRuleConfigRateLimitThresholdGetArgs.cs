// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa.Inputs
{

    public sealed class WafRuleConfigRateLimitThresholdGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of distinct managed rules that can be triggered.
        /// </summary>
        [Input("distinctManagedRules")]
        public Input<int>? DistinctManagedRules { get; set; }

        /// <summary>
        /// The maximum number of times that managed rules can be triggered.
        /// </summary>
        [Input("managedRulesBlocked")]
        public Input<int>? ManagedRulesBlocked { get; set; }

        /// <summary>
        /// The maximum number of allowed requests within a time interval.
        /// </summary>
        [Input("request")]
        public Input<int>? Request { get; set; }

        /// <summary>
        /// Limits on the frequency of returning specific HTTP status codes. See `ResponseStatus` below.
        /// </summary>
        [Input("responseStatus")]
        public Input<Inputs.WafRuleConfigRateLimitThresholdResponseStatusGetArgs>? ResponseStatus { get; set; }

        /// <summary>
        /// The maximum allowed traffic within a time interval (deprecated).
        /// </summary>
        [Input("traffic")]
        public Input<string>? Traffic { get; set; }

        public WafRuleConfigRateLimitThresholdGetArgs()
        {
        }
        public static new WafRuleConfigRateLimitThresholdGetArgs Empty => new WafRuleConfigRateLimitThresholdGetArgs();
    }
}
