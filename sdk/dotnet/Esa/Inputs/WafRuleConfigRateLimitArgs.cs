// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa.Inputs
{

    public sealed class WafRuleConfigRateLimitArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The statistical dimensions to which the rate limiting rule applies. See `Characteristics` below.
        /// </summary>
        [Input("characteristics")]
        public Input<Inputs.WafRuleConfigRateLimitCharacteristicsArgs>? Characteristics { get; set; }

        /// <summary>
        /// The statistical interval.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// Indicates whether the rule applies to requests that hit the cache.
        /// </summary>
        [Input("onHit")]
        public Input<bool>? OnHit { get; set; }

        /// <summary>
        /// Threshold settings for the rate limiting rule. See `Threshold` below.
        /// </summary>
        [Input("threshold")]
        public Input<Inputs.WafRuleConfigRateLimitThresholdArgs>? Threshold { get; set; }

        /// <summary>
        /// The timeout period for creating the stack used in rate limiting.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        public WafRuleConfigRateLimitArgs()
        {
        }
        public static new WafRuleConfigRateLimitArgs Empty => new WafRuleConfigRateLimitArgs();
    }
}
