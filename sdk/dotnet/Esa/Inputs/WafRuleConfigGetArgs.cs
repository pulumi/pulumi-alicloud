// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Esa.Inputs
{

    public sealed class WafRuleConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action performed on requests that match the managed rule.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Extended action configurations, including custom responses and bypass settings. See `Actions` below.
        /// </summary>
        [Input("actions")]
        public Input<Inputs.WafRuleConfigActionsGetArgs>? Actions { get; set; }

        /// <summary>
        /// Security mechanism to prevent apps from being repackaged. See `AppPackage` below.
        /// </summary>
        [Input("appPackage")]
        public Input<Inputs.WafRuleConfigAppPackageGetArgs>? AppPackage { get; set; }

        /// <summary>
        /// Mobile app SDK-related configurations. See `AppSdk` below.
        /// </summary>
        [Input("appSdk")]
        public Input<Inputs.WafRuleConfigAppSdkGetArgs>? AppSdk { get; set; }

        /// <summary>
        /// The match expression used to evaluate incoming requests.
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// The ID of the custom error page, which can be obtained by calling the ListPages operation.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The ID of the managed rule group (deprecated).
        /// </summary>
        [Input("managedGroupId")]
        public Input<int>? ManagedGroupId { get; set; }

        /// <summary>
        /// The name of the managed list applied to this rule.
        /// </summary>
        [Input("managedList")]
        public Input<string>? ManagedList { get; set; }

        [Input("managedRulesets")]
        private InputList<Inputs.WafRuleConfigManagedRulesetGetArgs>? _managedRulesets;

        /// <summary>
        /// The managed rulesets referenced by this rule and their configurations. See `ManagedRulesets` below.
        /// </summary>
        public InputList<Inputs.WafRuleConfigManagedRulesetGetArgs> ManagedRulesets
        {
            get => _managedRulesets ?? (_managedRulesets = new InputList<Inputs.WafRuleConfigManagedRulesetGetArgs>());
            set => _managedRulesets = value;
        }

        /// <summary>
        /// The package name of an authorized application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Additional notes about this rule.
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        /// <summary>
        /// Configuration of the rate limiting rule. See `RateLimit` below.
        /// </summary>
        [Input("rateLimit")]
        public Input<Inputs.WafRuleConfigRateLimitGetArgs>? RateLimit { get; set; }

        /// <summary>
        /// The overall security protection level of WAF. See `SecurityLevel` below.
        /// </summary>
        [Input("securityLevel")]
        public Input<Inputs.WafRuleConfigSecurityLevelGetArgs>? SecurityLevel { get; set; }

        [Input("sigchls")]
        private InputList<string>? _sigchls;

        /// <summary>
        /// Configuration items for token verification mechanisms.
        /// </summary>
        public InputList<string> Sigchls
        {
            get => _sigchls ?? (_sigchls = new InputList<string>());
            set => _sigchls = value;
        }

        /// <summary>
        /// The status of the managed rule: whether it is enabled or disabled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Configuration for the time schedule when the rule takes effect. See `Timer` below.
        /// </summary>
        [Input("timer")]
        public Input<Inputs.WafRuleConfigTimerGetArgs>? Timer { get; set; }

        /// <summary>
        /// The type category of the WAF rule.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The value of the custom signature field used for validation.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public WafRuleConfigGetArgs()
        {
        }
        public static new WafRuleConfigGetArgs Empty => new WafRuleConfigGetArgs();
    }
}
