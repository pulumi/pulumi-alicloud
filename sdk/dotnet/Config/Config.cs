// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.AliCloud
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("alicloud");

        private static readonly __Value<string?> _accessKey = new __Value<string?>(() => __config.Get("accessKey"));
        /// <summary>
        /// The access key for API operations. You can retrieve this from the 'Security Management' section of the Alibaba Cloud
        /// console.
        /// </summary>
        public static string? AccessKey
        {
            get => _accessKey.Get();
            set => _accessKey.Set(value);
        }

        private static readonly __Value<string?> _accountId = new __Value<string?>(() => __config.Get("accountId"));
        /// <summary>
        /// The account ID for some service API operations. You can retrieve this from the 'Security Settings' section of the
        /// Alibaba Cloud console.
        /// </summary>
        public static string? AccountId
        {
            get => _accountId.Get();
            set => _accountId.Set(value);
        }

        private static readonly __Value<Pulumi.AliCloud.Config.Types.AssumeRole?> _assumeRole = new __Value<Pulumi.AliCloud.Config.Types.AssumeRole?>(() => __config.GetObject<Pulumi.AliCloud.Config.Types.AssumeRole>("assumeRole"));
        public static Pulumi.AliCloud.Config.Types.AssumeRole? AssumeRole
        {
            get => _assumeRole.Get();
            set => _assumeRole.Set(value);
        }

        private static readonly __Value<int?> _clientConnectTimeout = new __Value<int?>(() => __config.GetInt32("clientConnectTimeout"));
        /// <summary>
        /// The maximum timeout of the client connection server.
        /// </summary>
        public static int? ClientConnectTimeout
        {
            get => _clientConnectTimeout.Get();
            set => _clientConnectTimeout.Set(value);
        }

        private static readonly __Value<int?> _clientReadTimeout = new __Value<int?>(() => __config.GetInt32("clientReadTimeout"));
        /// <summary>
        /// The maximum timeout of the client read request.
        /// </summary>
        public static int? ClientReadTimeout
        {
            get => _clientReadTimeout.Get();
            set => _clientReadTimeout.Set(value);
        }

        private static readonly __Value<string?> _configurationSource = new __Value<string?>(() => __config.Get("configurationSource"));
        public static string? ConfigurationSource
        {
            get => _configurationSource.Get();
            set => _configurationSource.Set(value);
        }

        private static readonly __Value<string?> _credentialsUri = new __Value<string?>(() => __config.Get("credentialsUri"));
        /// <summary>
        /// The URI of sidecar credentials service.
        /// </summary>
        public static string? CredentialsUri
        {
            get => _credentialsUri.Get();
            set => _credentialsUri.Set(value);
        }

        private static readonly __Value<string?> _ecsRoleName = new __Value<string?>(() => __config.Get("ecsRoleName") ?? Utilities.GetEnv("ALICLOUD_ECS_ROLE_NAME"));
        /// <summary>
        /// The RAM Role Name attached on a ECS instance for API operations. You can retrieve this from the 'Access Control' section
        /// of the Alibaba Cloud console.
        /// </summary>
        public static string? EcsRoleName
        {
            get => _ecsRoleName.Get();
            set => _ecsRoleName.Set(value);
        }

        private static readonly __Value<ImmutableArray<Pulumi.AliCloud.Config.Types.Endpoints>> _endpoints = new __Value<ImmutableArray<Pulumi.AliCloud.Config.Types.Endpoints>>(() => __config.GetObject<ImmutableArray<Pulumi.AliCloud.Config.Types.Endpoints>>("endpoints"));
        public static ImmutableArray<Pulumi.AliCloud.Config.Types.Endpoints> Endpoints
        {
            get => _endpoints.Get();
            set => _endpoints.Set(value);
        }

        private static readonly __Value<string?> _fc = new __Value<string?>(() => __config.Get("fc"));
        public static string? Fc
        {
            get => _fc.Get();
            set => _fc.Set(value);
        }

        private static readonly __Value<string?> _logEndpoint = new __Value<string?>(() => __config.Get("logEndpoint"));
        public static string? LogEndpoint
        {
            get => _logEndpoint.Get();
            set => _logEndpoint.Set(value);
        }

        private static readonly __Value<int?> _maxRetryTimeout = new __Value<int?>(() => __config.GetInt32("maxRetryTimeout"));
        /// <summary>
        /// The maximum retry timeout of the request.
        /// </summary>
        public static int? MaxRetryTimeout
        {
            get => _maxRetryTimeout.Get();
            set => _maxRetryTimeout.Set(value);
        }

        private static readonly __Value<string?> _mnsEndpoint = new __Value<string?>(() => __config.Get("mnsEndpoint"));
        public static string? MnsEndpoint
        {
            get => _mnsEndpoint.Get();
            set => _mnsEndpoint.Set(value);
        }

        private static readonly __Value<string?> _otsInstanceName = new __Value<string?>(() => __config.Get("otsInstanceName"));
        public static string? OtsInstanceName
        {
            get => _otsInstanceName.Get();
            set => _otsInstanceName.Set(value);
        }

        private static readonly __Value<string?> _profile = new __Value<string?>(() => __config.Get("profile") ?? Utilities.GetEnv("ALICLOUD_PROFILE"));
        /// <summary>
        /// The profile for API operations. If not set, the default profile created with `aliyun configure` will be used.
        /// </summary>
        public static string? Profile
        {
            get => _profile.Get();
            set => _profile.Set(value);
        }

        private static readonly __Value<string?> _protocol = new __Value<string?>(() => __config.Get("protocol"));
        public static string? Protocol
        {
            get => _protocol.Get();
            set => _protocol.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region") ?? Utilities.GetEnv("ALICLOUD_REGION"));
        /// <summary>
        /// The region where Alibaba Cloud operations will take place. Examples are cn-beijing, cn-hangzhou, eu-central-1, etc.
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<string?> _secretKey = new __Value<string?>(() => __config.Get("secretKey"));
        /// <summary>
        /// The secret key for API operations. You can retrieve this from the 'Security Management' section of the Alibaba Cloud
        /// console.
        /// </summary>
        public static string? SecretKey
        {
            get => _secretKey.Get();
            set => _secretKey.Set(value);
        }

        private static readonly __Value<string?> _secureTransport = new __Value<string?>(() => __config.Get("secureTransport"));
        /// <summary>
        /// The security transport for the assume role invoking.
        /// </summary>
        public static string? SecureTransport
        {
            get => _secureTransport.Get();
            set => _secureTransport.Set(value);
        }

        private static readonly __Value<string?> _securityToken = new __Value<string?>(() => __config.Get("securityToken"));
        /// <summary>
        /// security token. A security token is only required if you are using Security Token Service.
        /// </summary>
        public static string? SecurityToken
        {
            get => _securityToken.Get();
            set => _securityToken.Set(value);
        }

        private static readonly __Value<string?> _securityTransport = new __Value<string?>(() => __config.Get("securityTransport"));
        public static string? SecurityTransport
        {
            get => _securityTransport.Get();
            set => _securityTransport.Set(value);
        }

        private static readonly __Value<string?> _sharedCredentialsFile = new __Value<string?>(() => __config.Get("sharedCredentialsFile"));
        /// <summary>
        /// The path to the shared credentials file. If not set this defaults to ~/.aliyun/config.json
        /// </summary>
        public static string? SharedCredentialsFile
        {
            get => _sharedCredentialsFile.Get();
            set => _sharedCredentialsFile.Set(value);
        }

        private static readonly __Value<Pulumi.AliCloud.Config.Types.SignVersion?> _signVersion = new __Value<Pulumi.AliCloud.Config.Types.SignVersion?>(() => __config.GetObject<Pulumi.AliCloud.Config.Types.SignVersion>("signVersion"));
        public static Pulumi.AliCloud.Config.Types.SignVersion? SignVersion
        {
            get => _signVersion.Get();
            set => _signVersion.Set(value);
        }

        private static readonly __Value<bool?> _skipRegionValidation = new __Value<bool?>(() => __config.GetBoolean("skipRegionValidation"));
        /// <summary>
        /// Skip static validation of region ID. Used by users of alternative AlibabaCloud-like APIs or users w/ access to regions
        /// that are not public (yet).
        /// </summary>
        public static bool? SkipRegionValidation
        {
            get => _skipRegionValidation.Get();
            set => _skipRegionValidation.Set(value);
        }

        private static readonly __Value<string?> _sourceIp = new __Value<string?>(() => __config.Get("sourceIp"));
        /// <summary>
        /// The source ip for the assume role invoking.
        /// </summary>
        public static string? SourceIp
        {
            get => _sourceIp.Get();
            set => _sourceIp.Set(value);
        }

        public static class Types
        {

             public class AssumeRole
             {
                public string? ExternalId { get; set; } = null!;
            /// <summary>
            /// The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the, role that is being assumed.
            /// </summary>
                public string? Policy { get; set; } = null!;
            /// <summary>
            /// The ARN of a RAM role to assume prior to making API calls.
            /// </summary>
                public string RoleArn { get; set; }
            /// <summary>
            /// The time after which the established session for assuming role expires. Valid value range: [900-3600] seconds. Default to 0 (in this case Alicloud use own default value).
            /// </summary>
                public int? SessionExpiration { get; set; }
                public string? SessionName { get; set; } = null!;
            }

             public class Endpoints
             {
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom acr endpoints.
            /// </summary>
                public string? Acr { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Actiontrail endpoints.
            /// </summary>
                public string? Actiontrail { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom AnalyticDB endpoints.
            /// </summary>
                public string? Adb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alb endpoints.
            /// </summary>
                public string? Alb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidfs endpoints.
            /// </summary>
                public string? Alidfs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidns endpoints.
            /// </summary>
                public string? Alidns { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ALIKAFKA endpoints.
            /// </summary>
                public string? Alikafka { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Api Gateway endpoints.
            /// </summary>
                public string? Apigateway { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom arms endpoints.
            /// </summary>
                public string? Arms { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bastionhost endpoints.
            /// </summary>
                public string? Bastionhost { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom beebot endpoints.
            /// </summary>
                public string? Beebot { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bpstudio endpoints.
            /// </summary>
                public string? Bpstudio { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom brain_industrial endpoints.
            /// </summary>
                public string? BrainIndustrial { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BSSOPENAPI endpoints.
            /// </summary>
                public string? Bssopenapi { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CAS endpoints.
            /// </summary>
                public string? Cas { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cassandra endpoints.
            /// </summary>
                public string? Cassandra { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbn endpoints.
            /// </summary>
                public string? Cbn { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbs endpoints.
            /// </summary>
                public string? Cbs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cddc endpoints.
            /// </summary>
                public string? Cddc { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CDN endpoints.
            /// </summary>
                public string? Cdn { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cds endpoints.
            /// </summary>
                public string? Cds { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom clickhouse endpoints.
            /// </summary>
                public string? Clickhouse { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudauth endpoints.
            /// </summary>
                public string? Cloudauth { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfirewall endpoints.
            /// </summary>
                public string? Cloudfirewall { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfw endpoints.
            /// </summary>
                public string? Cloudfw { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudphone endpoints.
            /// </summary>
                public string? Cloudphone { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudsso endpoints.
            /// </summary>
                public string? Cloudsso { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Cloud Monitor endpoints.
            /// </summary>
                public string? Cms { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom computenest endpoints.
            /// </summary>
                public string? Computenest { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom config endpoints.
            /// </summary>
                public string? Config { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Registry endpoints.
            /// </summary>
                public string? Cr { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Service endpoints.
            /// </summary>
                public string? Cs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom das endpoints.
            /// </summary>
                public string? Das { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Datahub endpoints.
            /// </summary>
                public string? Datahub { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dataworkspublic endpoints.
            /// </summary>
                public string? Dataworkspublic { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dbfs endpoints.
            /// </summary>
                public string? Dbfs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dcdn endpoints.
            /// </summary>
                public string? Dcdn { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ddosbasic endpoints.
            /// </summary>
                public string? Ddosbasic { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSBGP endpoints.
            /// </summary>
                public string? Ddosbgp { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSCOO endpoints.
            /// </summary>
                public string? Ddoscoo { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MongoDB endpoints.
            /// </summary>
                public string? Dds { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom devopsrdc endpoints.
            /// </summary>
                public string? Devopsrdc { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dg endpoints.
            /// </summary>
                public string? Dg { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dm endpoints.
            /// </summary>
                public string? Dm { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dms_enterprise endpoints.
            /// </summary>
                public string? DmsEnterprise { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsenterprise endpoints.
            /// </summary>
                public string? Dmsenterprise { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DNS endpoints.
            /// </summary>
                public string? Dns { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DRDS endpoints.
            /// </summary>
                public string? Drds { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dts endpoints.
            /// </summary>
                public string? Dts { get; set; } = null!;
                public string? Dysms { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eais endpoints.
            /// </summary>
                public string? Eais { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ebs endpoints.
            /// </summary>
                public string? Ebs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eci endpoints.
            /// </summary>
                public string? Eci { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ECS endpoints.
            /// </summary>
                public string? Ecs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edas endpoints.
            /// </summary>
                public string? Edas { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edasschedulerx endpoints.
            /// </summary>
                public string? Edasschedulerx { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edsuser endpoints.
            /// </summary>
                public string? Edsuser { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eflo endpoints.
            /// </summary>
                public string? Eflo { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehpc endpoints.
            /// </summary>
                public string? Ehpc { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehs endpoints.
            /// </summary>
                public string? Ehs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eipanycast endpoints.
            /// </summary>
                public string? Eipanycast { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Elasticsearch endpoints.
            /// </summary>
                public string? Elasticsearch { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom EMR endpoints.
            /// </summary>
                public string? Emr { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ens endpoints.
            /// </summary>
                public string? Ens { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Autoscaling endpoints.
            /// </summary>
                public string? Ess { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eventbridge_share endpoints.
            /// </summary>
                public string? Eventbridge { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Function Computing endpoints.
            /// </summary>
                public string? Fc { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom fnf endpoints.
            /// </summary>
                public string? Fnf { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ga endpoints.
            /// </summary>
                public string? Ga { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gaplus endpoints.
            /// </summary>
                public string? Gaplus { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gds endpoints.
            /// </summary>
                public string? Gds { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom GPDB endpoints.
            /// </summary>
                public string? Gpdb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gwsecd endpoints.
            /// </summary>
                public string? Gwsecd { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hbr endpoints.
            /// </summary>
                public string? Hbr { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hcs_sgw endpoints.
            /// </summary>
                public string? HcsSgw { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hitsdb endpoints.
            /// </summary>
                public string? Hitsdb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imm endpoints.
            /// </summary>
                public string? Imm { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imp endpoints.
            /// </summary>
                public string? Imp { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ims endpoints.
            /// </summary>
                public string? Ims { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom iot endpoints.
            /// </summary>
                public string? Iot { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom KMS endpoints.
            /// </summary>
                public string? Kms { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom R-KVStore endpoints.
            /// </summary>
                public string? Kvstore { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Location Service endpoints.
            /// </summary>
                public string? Location { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Log Service endpoints.
            /// </summary>
                public string? Log { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Market Place endpoints.
            /// </summary>
                public string? Market { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MaxCompute endpoints.
            /// </summary>
                public string? Maxcompute { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mhub endpoints.
            /// </summary>
                public string? Mhub { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MNS endpoints.
            /// </summary>
                public string? Mns { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mscopensubscription endpoints.
            /// </summary>
                public string? Mscopensubscription { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mse endpoints.
            /// </summary>
                public string? Mse { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom NAS endpoints.
            /// </summary>
                public string? Nas { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom nlb endpoints.
            /// </summary>
                public string? Nlb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oceanbase endpoints.
            /// </summary>
                public string? Oceanbase { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ONS endpoints.
            /// </summary>
                public string? Ons { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom onsproxy endpoints.
            /// </summary>
                public string? Onsproxy { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oos endpoints.
            /// </summary>
                public string? Oos { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom opensearch endpoints.
            /// </summary>
                public string? Opensearch { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom OSS endpoints.
            /// </summary>
                public string? Oss { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Table Store endpoints.
            /// </summary>
                public string? Ots { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom PolarDB endpoints.
            /// </summary>
                public string? Polardb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom privatelink endpoints.
            /// </summary>
                public string? Privatelink { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Private Zone endpoints.
            /// </summary>
                public string? Pvtz { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quickbi endpoints.
            /// </summary>
                public string? Quickbi { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quotas endpoints.
            /// </summary>
                public string? Quotas { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom r_kvstore endpoints.
            /// </summary>
                public string? RKvstore { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RAM endpoints.
            /// </summary>
                public string? Ram { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RDS endpoints.
            /// </summary>
                public string? Rds { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom redisa endpoints.
            /// </summary>
                public string? Redisa { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcemanager endpoints.
            /// </summary>
                public string? Resourcemanager { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcesharing endpoints.
            /// </summary>
                public string? Resourcesharing { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ros endpoints.
            /// </summary>
                public string? Ros { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sas endpoints.
            /// </summary>
                public string? Sas { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom scdn endpoints.
            /// </summary>
                public string? Scdn { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sddp endpoints.
            /// </summary>
                public string? Sddp { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom serverless endpoints.
            /// </summary>
                public string? Serverless { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom servicemesh endpoints.
            /// </summary>
                public string? Servicemesh { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sgw endpoints.
            /// </summary>
                public string? Sgw { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom SLB endpoints.
            /// </summary>
                public string? Slb { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom smartag endpoints.
            /// </summary>
                public string? Smartag { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom srvcatalog endpoints.
            /// </summary>
                public string? Srvcatalog { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom STS endpoints.
            /// </summary>
                public string? Sts { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom swas endpoints.
            /// </summary>
                public string? Swas { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom tag endpoints.
            /// </summary>
                public string? Tag { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vod endpoints.
            /// </summary>
                public string? Vod { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom VPC and VPN endpoints.
            /// </summary>
                public string? Vpc { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vpcpeer endpoints.
            /// </summary>
                public string? Vpcpeer { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vs endpoints.
            /// </summary>
                public string? Vs { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom waf endpoints.
            /// </summary>
                public string? Waf { get; set; } = null!;
            /// <summary>
            /// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom waf_openapi endpoints.
            /// </summary>
                public string? WafOpenapi { get; set; } = null!;
            }

             public class SignVersion
             {
                public string? Oss { get; set; } = null!;
                public string? Sls { get; set; } = null!;
            }
        }
    }
}
