// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CR
{
    /// <summary>
    /// Provides a CR Chart Repository resource.
    /// 
    /// For information about CR Chart Repository and how to use it, see [What is Chart Repository](https://www.alibabacloud.com/help/doc-detail/145318.htm).
    /// 
    /// &gt; **NOTE:** Available in v1.149.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultRegistryEnterpriseInstance = new AliCloud.CR.RegistryEnterpriseInstance("defaultRegistryEnterpriseInstance", new()
    ///     {
    ///         PaymentType = "Subscription",
    ///         Period = 1,
    ///         InstanceType = "Advanced",
    ///         InstanceName = "name",
    ///     });
    /// 
    ///     var defaultChartNamespace = new AliCloud.CR.ChartNamespace("defaultChartNamespace", new()
    ///     {
    ///         InstanceId = defaultRegistryEnterpriseInstance.Id,
    ///         NamespaceName = "name",
    ///     });
    /// 
    ///     var defaultChartRepository = new AliCloud.CR.ChartRepository("defaultChartRepository", new()
    ///     {
    ///         RepoNamespaceName = defaultChartNamespace.NamespaceName,
    ///         InstanceId = local.Instance,
    ///         RepoName = "repo_name",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CR Chart Repository can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:cr/chartRepository:ChartRepository example &lt;instance_id&gt;:&lt;repo_namespace_name&gt;:&lt;repo_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:cr/chartRepository:ChartRepository")]
    public partial class ChartRepository : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Container Registry instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The name of the repository that you want to create.
        /// </summary>
        [Output("repoName")]
        public Output<string> RepoName { get; private set; } = null!;

        /// <summary>
        /// The namespace to which the repository belongs.
        /// </summary>
        [Output("repoNamespaceName")]
        public Output<string> RepoNamespaceName { get; private set; } = null!;

        /// <summary>
        /// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
        /// </summary>
        [Output("repoType")]
        public Output<string> RepoType { get; private set; } = null!;

        /// <summary>
        /// The summary about the repository.
        /// </summary>
        [Output("summary")]
        public Output<string?> Summary { get; private set; } = null!;


        /// <summary>
        /// Create a ChartRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ChartRepository(string name, ChartRepositoryArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cr/chartRepository:ChartRepository", name, args ?? new ChartRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ChartRepository(string name, Input<string> id, ChartRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cr/chartRepository:ChartRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ChartRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ChartRepository Get(string name, Input<string> id, ChartRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new ChartRepository(name, id, state, options);
        }
    }

    public sealed class ChartRepositoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Container Registry instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The name of the repository that you want to create.
        /// </summary>
        [Input("repoName", required: true)]
        public Input<string> RepoName { get; set; } = null!;

        /// <summary>
        /// The namespace to which the repository belongs.
        /// </summary>
        [Input("repoNamespaceName", required: true)]
        public Input<string> RepoNamespaceName { get; set; } = null!;

        /// <summary>
        /// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
        /// </summary>
        [Input("repoType")]
        public Input<string>? RepoType { get; set; }

        /// <summary>
        /// The summary about the repository.
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        public ChartRepositoryArgs()
        {
        }
        public static new ChartRepositoryArgs Empty => new ChartRepositoryArgs();
    }

    public sealed class ChartRepositoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Container Registry instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The name of the repository that you want to create.
        /// </summary>
        [Input("repoName")]
        public Input<string>? RepoName { get; set; }

        /// <summary>
        /// The namespace to which the repository belongs.
        /// </summary>
        [Input("repoNamespaceName")]
        public Input<string>? RepoNamespaceName { get; set; }

        /// <summary>
        /// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
        /// </summary>
        [Input("repoType")]
        public Input<string>? RepoType { get; set; }

        /// <summary>
        /// The summary about the repository.
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        public ChartRepositoryState()
        {
        }
        public static new ChartRepositoryState Empty => new ChartRepositoryState();
    }
}
