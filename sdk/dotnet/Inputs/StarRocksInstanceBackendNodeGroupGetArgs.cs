// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Inputs
{

    public sealed class StarRocksInstanceBackendNodeGroupGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
        /// </summary>
        [Input("cu")]
        public Input<int>? Cu { get; set; }

        /// <summary>
        /// The number of disks.
        /// </summary>
        [Input("diskNumber")]
        public Input<int>? DiskNumber { get; set; }

        /// <summary>
        /// Local SSD instance specifications.
        /// </summary>
        [Input("localStorageInstanceType")]
        public Input<string>? LocalStorageInstanceType { get; set; }

        /// <summary>
        /// Resident node number of node group.
        /// </summary>
        [Input("residentNodeNumber")]
        public Input<int>? ResidentNodeNumber { get; set; }

        /// <summary>
        /// Compute group specification types include the following:
        /// - standard
        /// - localSSD
        /// - bigData
        /// - ramEnhanced
        /// - networkEnhanced
        /// </summary>
        [Input("specType")]
        public Input<string>? SpecType { get; set; }

        /// <summary>
        /// Performance levels of cloud disks include the following values:
        /// - pl0: Maximum random read/write IOPS per disk is 10,000.
        /// - pl1: Maximum random read/write IOPS per disk is 50,000.
        /// - pl2: Maximum random read/write IOPS per disk is 100,000.
        /// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
        /// </summary>
        [Input("storagePerformanceLevel")]
        public Input<string>? StoragePerformanceLevel { get; set; }

        /// <summary>
        /// Storage size, measured in GiB.
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        /// <summary>
        /// Zone ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public StarRocksInstanceBackendNodeGroupGetArgs()
        {
        }
        public static new StarRocksInstanceBackendNodeGroupGetArgs Empty => new StarRocksInstanceBackendNodeGroupGetArgs();
    }
}
