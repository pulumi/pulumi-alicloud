// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.FC
{
    [AliCloudResourceType("alicloud:fc/service:Service")]
    public partial class Service : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("internetAccess")]
        public Output<bool?> InternetAccess { get; private set; } = null!;

        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        [Output("logConfig")]
        public Output<Outputs.ServiceLogConfig?> LogConfig { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namePrefix")]
        public Output<string?> NamePrefix { get; private set; } = null!;

        [Output("nasConfig")]
        public Output<Outputs.ServiceNasConfig?> NasConfig { get; private set; } = null!;

        [Output("publish")]
        public Output<bool?> Publish { get; private set; } = null!;

        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;

        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tracingConfig")]
        public Output<Outputs.ServiceTracingConfig?> TracingConfig { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        [Output("vpcConfig")]
        public Output<Outputs.ServiceVpcConfig?> VpcConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Service resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Service(string name, ServiceArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:fc/service:Service", name, args ?? new ServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Service(string name, Input<string> id, ServiceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:fc/service:Service", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Service resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Service Get(string name, Input<string> id, ServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new Service(name, id, state, options);
        }
    }

    public sealed class ServiceArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("internetAccess")]
        public Input<bool>? InternetAccess { get; set; }

        [Input("logConfig")]
        public Input<Inputs.ServiceLogConfigArgs>? LogConfig { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("nasConfig")]
        public Input<Inputs.ServiceNasConfigArgs>? NasConfig { get; set; }

        [Input("publish")]
        public Input<bool>? Publish { get; set; }

        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tracingConfig")]
        public Input<Inputs.ServiceTracingConfigArgs>? TracingConfig { get; set; }

        [Input("vpcConfig")]
        public Input<Inputs.ServiceVpcConfigArgs>? VpcConfig { get; set; }

        public ServiceArgs()
        {
        }
        public static new ServiceArgs Empty => new ServiceArgs();
    }

    public sealed class ServiceState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("internetAccess")]
        public Input<bool>? InternetAccess { get; set; }

        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        [Input("logConfig")]
        public Input<Inputs.ServiceLogConfigGetArgs>? LogConfig { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("nasConfig")]
        public Input<Inputs.ServiceNasConfigGetArgs>? NasConfig { get; set; }

        [Input("publish")]
        public Input<bool>? Publish { get; set; }

        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tracingConfig")]
        public Input<Inputs.ServiceTracingConfigGetArgs>? TracingConfig { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("vpcConfig")]
        public Input<Inputs.ServiceVpcConfigGetArgs>? VpcConfig { get; set; }

        public ServiceState()
        {
        }
        public static new ServiceState Empty => new ServiceState();
    }
}
