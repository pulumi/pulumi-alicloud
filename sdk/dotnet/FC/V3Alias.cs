// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.FC
{
    /// <summary>
    /// Provides a FCV3 Alias resource.
    /// 
    /// Alias for functions.
    /// 
    /// For information about FCV3 Alias and how to use it, see [What is Alias](https://www.alibabacloud.com/help/en/functioncompute/developer-reference/api-fc-2023-03-30-createalias).
    /// 
    /// &gt; **NOTE:** Available since v1.228.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var functionName = config.Get("functionName") ?? "flask-3xdg";
    ///     var @default = new AliCloud.FC.V3Alias("default", new()
    ///     {
    ///         VersionId = "1",
    ///         FunctionName = functionName,
    ///         Description = "create alias",
    ///         AliasName = name,
    ///         AdditionalVersionWeight = 
    ///         {
    ///             { "2", 0.5 },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// FCV3 Alias can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:fc/v3Alias:V3Alias example &lt;function_name&gt;:&lt;alias_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:fc/v3Alias:V3Alias")]
    public partial class V3Alias : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Grayscale version
        /// </summary>
        [Output("additionalVersionWeight")]
        public Output<ImmutableDictionary<string, double>?> AdditionalVersionWeight { get; private set; } = null!;

        /// <summary>
        /// Function Alias
        /// </summary>
        [Output("aliasName")]
        public Output<string> AliasName { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Function Name
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// The version that the alias points
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a V3Alias resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public V3Alias(string name, V3AliasArgs args, CustomResourceOptions? options = null)
            : base("alicloud:fc/v3Alias:V3Alias", name, args ?? new V3AliasArgs(), MakeResourceOptions(options, ""))
        {
        }

        private V3Alias(string name, Input<string> id, V3AliasState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:fc/v3Alias:V3Alias", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing V3Alias resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static V3Alias Get(string name, Input<string> id, V3AliasState? state = null, CustomResourceOptions? options = null)
        {
            return new V3Alias(name, id, state, options);
        }
    }

    public sealed class V3AliasArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalVersionWeight")]
        private InputMap<double>? _additionalVersionWeight;

        /// <summary>
        /// Grayscale version
        /// </summary>
        public InputMap<double> AdditionalVersionWeight
        {
            get => _additionalVersionWeight ?? (_additionalVersionWeight = new InputMap<double>());
            set => _additionalVersionWeight = value;
        }

        /// <summary>
        /// Function Alias
        /// </summary>
        [Input("aliasName")]
        public Input<string>? AliasName { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Function Name
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        /// <summary>
        /// The version that the alias points
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public V3AliasArgs()
        {
        }
        public static new V3AliasArgs Empty => new V3AliasArgs();
    }

    public sealed class V3AliasState : global::Pulumi.ResourceArgs
    {
        [Input("additionalVersionWeight")]
        private InputMap<double>? _additionalVersionWeight;

        /// <summary>
        /// Grayscale version
        /// </summary>
        public InputMap<double> AdditionalVersionWeight
        {
            get => _additionalVersionWeight ?? (_additionalVersionWeight = new InputMap<double>());
            set => _additionalVersionWeight = value;
        }

        /// <summary>
        /// Function Alias
        /// </summary>
        [Input("aliasName")]
        public Input<string>? AliasName { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Function Name
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// The version that the alias points
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public V3AliasState()
        {
        }
        public static new V3AliasState Empty => new V3AliasState();
    }
}
