// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.FC
{
    /// <summary>
    /// Provides a FCV3 Async Invoke Config resource.
    /// 
    /// Function Asynchronous Configuration.
    /// 
    /// For information about FCV3 Async Invoke Config and how to use it, see [What is Async Invoke Config](https://www.alibabacloud.com/help/en/functioncompute/developer-reference/api-fc-2023-03-30-getasyncinvokeconfig).
    /// 
    /// &gt; **NOTE:** Available since v1.228.0.
    /// 
    /// ## Import
    /// 
    /// FCV3 Async Invoke Config can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig")]
    public partial class V3AsyncInvokeConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to enable an asynchronous task
        /// </summary>
        [Output("asyncTask")]
        public Output<bool?> AsyncTask { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Target Configuration See `destination_config` below.
        /// </summary>
        [Output("destinationConfig")]
        public Output<Outputs.V3AsyncInvokeConfigDestinationConfig?> DestinationConfig { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.234.0) Function resource identification
        /// </summary>
        [Output("functionArn")]
        public Output<string> FunctionArn { get; private set; } = null!;

        /// <summary>
        /// Function Name
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.234.0) Last modification time
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// Event maximum survival time
        /// </summary>
        [Output("maxAsyncEventAgeInSeconds")]
        public Output<int?> MaxAsyncEventAgeInSeconds { get; private set; } = null!;

        /// <summary>
        /// Number of Asynchronous call retries
        /// </summary>
        [Output("maxAsyncRetryAttempts")]
        public Output<int?> MaxAsyncRetryAttempts { get; private set; } = null!;

        /// <summary>
        /// Function version or alias
        /// </summary>
        [Output("qualifier")]
        public Output<string?> Qualifier { get; private set; } = null!;


        /// <summary>
        /// Create a V3AsyncInvokeConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public V3AsyncInvokeConfig(string name, V3AsyncInvokeConfigArgs args, CustomResourceOptions? options = null)
            : base("alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig", name, args ?? new V3AsyncInvokeConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private V3AsyncInvokeConfig(string name, Input<string> id, V3AsyncInvokeConfigState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing V3AsyncInvokeConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static V3AsyncInvokeConfig Get(string name, Input<string> id, V3AsyncInvokeConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new V3AsyncInvokeConfig(name, id, state, options);
        }
    }

    public sealed class V3AsyncInvokeConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable an asynchronous task
        /// </summary>
        [Input("asyncTask")]
        public Input<bool>? AsyncTask { get; set; }

        /// <summary>
        /// Target Configuration See `destination_config` below.
        /// </summary>
        [Input("destinationConfig")]
        public Input<Inputs.V3AsyncInvokeConfigDestinationConfigArgs>? DestinationConfig { get; set; }

        /// <summary>
        /// Function Name
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        /// <summary>
        /// Event maximum survival time
        /// </summary>
        [Input("maxAsyncEventAgeInSeconds")]
        public Input<int>? MaxAsyncEventAgeInSeconds { get; set; }

        /// <summary>
        /// Number of Asynchronous call retries
        /// </summary>
        [Input("maxAsyncRetryAttempts")]
        public Input<int>? MaxAsyncRetryAttempts { get; set; }

        /// <summary>
        /// Function version or alias
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        public V3AsyncInvokeConfigArgs()
        {
        }
        public static new V3AsyncInvokeConfigArgs Empty => new V3AsyncInvokeConfigArgs();
    }

    public sealed class V3AsyncInvokeConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable an asynchronous task
        /// </summary>
        [Input("asyncTask")]
        public Input<bool>? AsyncTask { get; set; }

        /// <summary>
        /// The creation time of the resource
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Target Configuration See `destination_config` below.
        /// </summary>
        [Input("destinationConfig")]
        public Input<Inputs.V3AsyncInvokeConfigDestinationConfigGetArgs>? DestinationConfig { get; set; }

        /// <summary>
        /// (Available since v1.234.0) Function resource identification
        /// </summary>
        [Input("functionArn")]
        public Input<string>? FunctionArn { get; set; }

        /// <summary>
        /// Function Name
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// (Available since v1.234.0) Last modification time
        /// </summary>
        [Input("lastModifiedTime")]
        public Input<string>? LastModifiedTime { get; set; }

        /// <summary>
        /// Event maximum survival time
        /// </summary>
        [Input("maxAsyncEventAgeInSeconds")]
        public Input<int>? MaxAsyncEventAgeInSeconds { get; set; }

        /// <summary>
        /// Number of Asynchronous call retries
        /// </summary>
        [Input("maxAsyncRetryAttempts")]
        public Input<int>? MaxAsyncRetryAttempts { get; set; }

        /// <summary>
        /// Function version or alias
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        public V3AsyncInvokeConfigState()
        {
        }
        public static new V3AsyncInvokeConfigState Empty => new V3AsyncInvokeConfigState();
    }
}
