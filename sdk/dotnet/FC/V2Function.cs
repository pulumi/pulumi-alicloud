// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.FC
{
    [AliCloudResourceType("alicloud:fc/v2Function:V2Function")]
    public partial class V2Function : global::Pulumi.CustomResource
    {
        [Output("caPort")]
        public Output<int> CaPort { get; private set; } = null!;

        [Output("code")]
        public Output<Outputs.V2FunctionCode?> Code { get; private set; } = null!;

        [Output("codeChecksum")]
        public Output<string> CodeChecksum { get; private set; } = null!;

        [Output("cpu")]
        public Output<double?> Cpu { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("customContainerConfig")]
        public Output<Outputs.V2FunctionCustomContainerConfig?> CustomContainerConfig { get; private set; } = null!;

        [Output("customDns")]
        public Output<Outputs.V2FunctionCustomDns?> CustomDns { get; private set; } = null!;

        [Output("customHealthCheckConfig")]
        public Output<Outputs.V2FunctionCustomHealthCheckConfig?> CustomHealthCheckConfig { get; private set; } = null!;

        [Output("customRuntimeConfig")]
        public Output<Outputs.V2FunctionCustomRuntimeConfig?> CustomRuntimeConfig { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("diskSize")]
        public Output<int?> DiskSize { get; private set; } = null!;

        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        [Output("functionArn")]
        public Output<string> FunctionArn { get; private set; } = null!;

        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        [Output("gpuMemorySize")]
        public Output<int?> GpuMemorySize { get; private set; } = null!;

        [Output("handler")]
        public Output<string> Handler { get; private set; } = null!;

        [Output("initializationTimeout")]
        public Output<int> InitializationTimeout { get; private set; } = null!;

        [Output("initializer")]
        public Output<string?> Initializer { get; private set; } = null!;

        [Output("instanceConcurrency")]
        public Output<int> InstanceConcurrency { get; private set; } = null!;

        [Output("instanceLifecycleConfig")]
        public Output<Outputs.V2FunctionInstanceLifecycleConfig?> InstanceLifecycleConfig { get; private set; } = null!;

        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        [Output("layers")]
        public Output<ImmutableArray<string>> Layers { get; private set; } = null!;

        [Output("memorySize")]
        public Output<int> MemorySize { get; private set; } = null!;

        [Output("runtime")]
        public Output<string> Runtime { get; private set; } = null!;

        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;


        /// <summary>
        /// Create a V2Function resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public V2Function(string name, V2FunctionArgs args, CustomResourceOptions? options = null)
            : base("alicloud:fc/v2Function:V2Function", name, args ?? new V2FunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private V2Function(string name, Input<string> id, V2FunctionState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:fc/v2Function:V2Function", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing V2Function resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static V2Function Get(string name, Input<string> id, V2FunctionState? state = null, CustomResourceOptions? options = null)
        {
            return new V2Function(name, id, state, options);
        }
    }

    public sealed class V2FunctionArgs : global::Pulumi.ResourceArgs
    {
        [Input("caPort")]
        public Input<int>? CaPort { get; set; }

        [Input("code")]
        public Input<Inputs.V2FunctionCodeArgs>? Code { get; set; }

        [Input("codeChecksum")]
        public Input<string>? CodeChecksum { get; set; }

        [Input("cpu")]
        public Input<double>? Cpu { get; set; }

        [Input("customContainerConfig")]
        public Input<Inputs.V2FunctionCustomContainerConfigArgs>? CustomContainerConfig { get; set; }

        [Input("customDns")]
        public Input<Inputs.V2FunctionCustomDnsArgs>? CustomDns { get; set; }

        [Input("customHealthCheckConfig")]
        public Input<Inputs.V2FunctionCustomHealthCheckConfigArgs>? CustomHealthCheckConfig { get; set; }

        [Input("customRuntimeConfig")]
        public Input<Inputs.V2FunctionCustomRuntimeConfigArgs>? CustomRuntimeConfig { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        [Input("gpuMemorySize")]
        public Input<int>? GpuMemorySize { get; set; }

        [Input("handler", required: true)]
        public Input<string> Handler { get; set; } = null!;

        [Input("initializationTimeout")]
        public Input<int>? InitializationTimeout { get; set; }

        [Input("initializer")]
        public Input<string>? Initializer { get; set; }

        [Input("instanceConcurrency")]
        public Input<int>? InstanceConcurrency { get; set; }

        [Input("instanceLifecycleConfig")]
        public Input<Inputs.V2FunctionInstanceLifecycleConfigArgs>? InstanceLifecycleConfig { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("layers")]
        private InputList<string>? _layers;
        public InputList<string> Layers
        {
            get => _layers ?? (_layers = new InputList<string>());
            set => _layers = value;
        }

        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("runtime", required: true)]
        public Input<string> Runtime { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public V2FunctionArgs()
        {
        }
        public static new V2FunctionArgs Empty => new V2FunctionArgs();
    }

    public sealed class V2FunctionState : global::Pulumi.ResourceArgs
    {
        [Input("caPort")]
        public Input<int>? CaPort { get; set; }

        [Input("code")]
        public Input<Inputs.V2FunctionCodeGetArgs>? Code { get; set; }

        [Input("codeChecksum")]
        public Input<string>? CodeChecksum { get; set; }

        [Input("cpu")]
        public Input<double>? Cpu { get; set; }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("customContainerConfig")]
        public Input<Inputs.V2FunctionCustomContainerConfigGetArgs>? CustomContainerConfig { get; set; }

        [Input("customDns")]
        public Input<Inputs.V2FunctionCustomDnsGetArgs>? CustomDns { get; set; }

        [Input("customHealthCheckConfig")]
        public Input<Inputs.V2FunctionCustomHealthCheckConfigGetArgs>? CustomHealthCheckConfig { get; set; }

        [Input("customRuntimeConfig")]
        public Input<Inputs.V2FunctionCustomRuntimeConfigGetArgs>? CustomRuntimeConfig { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("functionArn")]
        public Input<string>? FunctionArn { get; set; }

        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        [Input("gpuMemorySize")]
        public Input<int>? GpuMemorySize { get; set; }

        [Input("handler")]
        public Input<string>? Handler { get; set; }

        [Input("initializationTimeout")]
        public Input<int>? InitializationTimeout { get; set; }

        [Input("initializer")]
        public Input<string>? Initializer { get; set; }

        [Input("instanceConcurrency")]
        public Input<int>? InstanceConcurrency { get; set; }

        [Input("instanceLifecycleConfig")]
        public Input<Inputs.V2FunctionInstanceLifecycleConfigGetArgs>? InstanceLifecycleConfig { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("layers")]
        private InputList<string>? _layers;
        public InputList<string> Layers
        {
            get => _layers ?? (_layers = new InputList<string>());
            set => _layers = value;
        }

        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("runtime")]
        public Input<string>? Runtime { get; set; }

        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public V2FunctionState()
        {
        }
        public static new V2FunctionState Empty => new V2FunctionState();
    }
}
