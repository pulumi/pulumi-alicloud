// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ApiGateway.Inputs
{

    public sealed class ApiFcServiceConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
        /// </summary>
        [Input("arnRole", required: true)]
        public Input<string> ArnRole { get; set; } = null!;

        /// <summary>
        /// The base url of function compute service. Required if `function_type` is `HttpTrigger`.
        /// </summary>
        [Input("functionBaseUrl")]
        public Input<string>? FunctionBaseUrl { get; set; }

        /// <summary>
        /// The function name of function compute service. Required if `function_type` is `FCEvent`.
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// The type of function compute service. Supports values of `FCEvent`,`HttpTrigger`. Default value: `FCEvent`.
        /// </summary>
        [Input("functionType")]
        public Input<string>? FunctionType { get; set; }

        /// <summary>
        /// The function compute version of function compute service. Supports values of `2.0`, `3.0`. Default value: `2.0`.
        /// </summary>
        [Input("functionVersion")]
        public Input<string>? FunctionVersion { get; set; }

        /// <summary>
        /// The http method of function compute service. Required if `function_type` is `HttpTrigger`.
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        /// <summary>
        /// Whether to filter path in `function_base_url`. Optional if `function_type` is `HttpTrigger`.
        /// </summary>
        [Input("onlyBusinessPath")]
        public Input<bool>? OnlyBusinessPath { get; set; }

        /// <summary>
        /// The path of function compute service. Required if `function_type` is `HttpTrigger`.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The qualifier of function name of compute service.
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        /// <summary>
        /// The region that the function compute service belongs to.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The service name of function compute service. Required if `function_type` is `FCEvent` and `function_version` is `2.0`.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Backend service time-out time; unit: millisecond.
        /// </summary>
        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        public ApiFcServiceConfigGetArgs()
        {
        }
        public static new ApiFcServiceConfigGetArgs Empty => new ApiFcServiceConfigGetArgs();
    }
}
