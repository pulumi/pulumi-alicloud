// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ApiGateway
{
    public static class GetModels
    {
        /// <summary>
        /// This data source provides the Api Gateway Models of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.187.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.ApiGateway.GetModels.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///         GroupId = "example_group_id",
        ///     });
        /// 
        ///     var groupId = AliCloud.ApiGateway.GetModels.Invoke(new()
        ///     {
        ///         GroupId = "example_group_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["apiGatewayModelId1"] = ids.Apply(getModelsResult =&gt; getModelsResult.Models[0]?.Id),
        ///         ["apiGatewayModelId2"] = groupId.Apply(getModelsResult =&gt; getModelsResult.Models[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetModelsResult> InvokeAsync(GetModelsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelsResult>("alicloud:apigateway/getModels:getModels", args ?? new GetModelsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Api Gateway Models of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.187.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.ApiGateway.GetModels.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///         GroupId = "example_group_id",
        ///     });
        /// 
        ///     var groupId = AliCloud.ApiGateway.GetModels.Invoke(new()
        ///     {
        ///         GroupId = "example_group_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["apiGatewayModelId1"] = ids.Apply(getModelsResult =&gt; getModelsResult.Models[0]?.Id),
        ///         ["apiGatewayModelId2"] = groupId.Apply(getModelsResult =&gt; getModelsResult.Models[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetModelsResult> Invoke(GetModelsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelsResult>("alicloud:apigateway/getModels:getModels", args ?? new GetModelsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the api group.
        /// </summary>
        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Model IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the Model.
        /// </summary>
        [Input("modelName")]
        public string? ModelName { get; set; }

        /// <summary>
        /// A regex string to filter results by Model name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("pageNumber")]
        public int? PageNumber { get; set; }

        [Input("pageSize")]
        public int? PageSize { get; set; }

        public GetModelsArgs()
        {
        }
        public static new GetModelsArgs Empty => new GetModelsArgs();
    }

    public sealed class GetModelsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the api group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Model IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the Model.
        /// </summary>
        [Input("modelName")]
        public Input<string>? ModelName { get; set; }

        /// <summary>
        /// A regex string to filter results by Model name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("pageNumber")]
        public Input<int>? PageNumber { get; set; }

        [Input("pageSize")]
        public Input<int>? PageSize { get; set; }

        public GetModelsInvokeArgs()
        {
        }
        public static new GetModelsInvokeArgs Empty => new GetModelsInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelsResult
    {
        /// <summary>
        /// The group of the model belongs to.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The name of the Model.
        /// </summary>
        public readonly string? ModelName;
        /// <summary>
        /// A list of Api Gateway Models. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelsModelResult> Models;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Model names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly int? PageNumber;
        public readonly int? PageSize;

        [OutputConstructor]
        private GetModelsResult(
            string groupId,

            string id,

            ImmutableArray<string> ids,

            string? modelName,

            ImmutableArray<Outputs.GetModelsModelResult> models,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            int? pageNumber,

            int? pageSize)
        {
            GroupId = groupId;
            Id = id;
            Ids = ids;
            ModelName = modelName;
            Models = models;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            PageNumber = pageNumber;
            PageSize = pageSize;
        }
    }
}
