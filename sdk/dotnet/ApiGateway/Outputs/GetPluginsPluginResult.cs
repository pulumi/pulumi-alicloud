// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ApiGateway.Outputs
{

    [OutputType]
    public sealed class GetPluginsPluginResult
    {
        /// <summary>
        /// The CreateTime of the resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of the plug-in, which cannot exceed 200 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the Plugin.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ModifiedTime of the resource.
        /// </summary>
        public readonly string ModifiedTime;
        /// <summary>
        /// The definition statement of the plug-in. Plug-in definition statements in the JSON and YAML formats are supported.
        /// </summary>
        public readonly string PluginData;
        /// <summary>
        /// The first ID of the resource.
        /// </summary>
        public readonly string PluginId;
        /// <summary>
        /// The name of the plug-in that you want to create.
        /// </summary>
        public readonly string PluginName;
        /// <summary>
        /// The type of the plug-in.
        /// </summary>
        public readonly string PluginType;
        /// <summary>
        /// The tag of the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetPluginsPluginResult(
            string createTime,

            string description,

            string id,

            string modifiedTime,

            string pluginData,

            string pluginId,

            string pluginName,

            string pluginType,

            ImmutableDictionary<string, string> tags)
        {
            CreateTime = createTime;
            Description = description;
            Id = id;
            ModifiedTime = modifiedTime;
            PluginData = pluginData;
            PluginId = pluginId;
            PluginName = pluginName;
            PluginType = pluginType;
            Tags = tags;
        }
    }
}
