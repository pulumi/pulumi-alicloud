// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ApiGateway
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform_example";
    ///     var example = new AliCloud.ApiGateway.Group("example", new()
    ///     {
    ///         Name = name,
    ///         Description = name,
    ///     });
    /// 
    ///     var exampleApi = new AliCloud.ApiGateway.Api("example", new()
    ///     {
    ///         GroupId = example.Id,
    ///         Name = name,
    ///         Description = name,
    ///         AuthType = "APP",
    ///         ForceNonceCheck = false,
    ///         RequestConfig = new AliCloud.ApiGateway.Inputs.ApiRequestConfigArgs
    ///         {
    ///             Protocol = "HTTP",
    ///             Method = "GET",
    ///             Path = "/example/path",
    ///             Mode = "MAPPING",
    ///         },
    ///         ServiceType = "HTTP",
    ///         HttpServiceConfig = new AliCloud.ApiGateway.Inputs.ApiHttpServiceConfigArgs
    ///         {
    ///             Address = "http://apigateway-backend.alicloudapi.com:8080",
    ///             Method = "GET",
    ///             Path = "/web/cloudapi",
    ///             Timeout = 12,
    ///             AoneName = "cloudapi-openapi",
    ///         },
    ///         RequestParameters = new[]
    ///         {
    ///             new AliCloud.ApiGateway.Inputs.ApiRequestParameterArgs
    ///             {
    ///                 Name = "example",
    ///                 Type = "STRING",
    ///                 Required = "OPTIONAL",
    ///                 In = "QUERY",
    ///                 InService = "QUERY",
    ///                 NameService = "exampleservice",
    ///             },
    ///         },
    ///         StageNames = new[]
    ///         {
    ///             "RELEASE",
    ///             "TEST",
    ///         },
    ///     });
    /// 
    ///     var examplePlugin = new AliCloud.ApiGateway.Plugin("example", new()
    ///     {
    ///         Description = "tf_example",
    ///         PluginName = "tf_example",
    ///         PluginData = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["allowOrigins"] = "api.foo.com",
    ///             ["allowMethods"] = "GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH",
    ///             ["allowHeaders"] = "Authorization,Accept,Accept-Ranges,Cache-Control,Range,Date,Content-Type,Content-Length,Content-MD5,User-Agent,X-Ca-Signature,X-Ca-Signature-Headers,X-Ca-Signature-Method,X-Ca-Key,X-Ca-Timestamp,X-Ca-Nonce,X-Ca-Stage,X-Ca-Request-Mode,x-ca-deviceid",
    ///             ["exposeHeaders"] = "Content-MD5,Server,Date,Latency,X-Ca-Request-Id,X-Ca-Error-Code,X-Ca-Error-Message",
    ///             ["maxAge"] = 172800,
    ///             ["allowCredentials"] = true,
    ///         }),
    ///         PluginType = "cors",
    ///     });
    /// 
    ///     var examplePluginAttachment = new AliCloud.ApiGateway.PluginAttachment("example", new()
    ///     {
    ///         ApiId = exampleApi.ApiId,
    ///         GroupId = example.Id,
    ///         PluginId = examplePlugin.Id,
    ///         StageName = "RELEASE",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [AliCloudResourceType("alicloud:apigateway/pluginAttachment:PluginAttachment")]
    public partial class PluginAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The api_id that plugin attaches to.
        /// </summary>
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        /// <summary>
        /// The group that the api belongs to.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The plugin that attaches to the api.
        /// </summary>
        [Output("pluginId")]
        public Output<string> PluginId { get; private set; } = null!;

        /// <summary>
        /// Stage that the plugin attaches to.
        /// </summary>
        [Output("stageName")]
        public Output<string> StageName { get; private set; } = null!;


        /// <summary>
        /// Create a PluginAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PluginAttachment(string name, PluginAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:apigateway/pluginAttachment:PluginAttachment", name, args ?? new PluginAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PluginAttachment(string name, Input<string> id, PluginAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:apigateway/pluginAttachment:PluginAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PluginAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PluginAttachment Get(string name, Input<string> id, PluginAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new PluginAttachment(name, id, state, options);
        }
    }

    public sealed class PluginAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The api_id that plugin attaches to.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// The group that the api belongs to.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The plugin that attaches to the api.
        /// </summary>
        [Input("pluginId", required: true)]
        public Input<string> PluginId { get; set; } = null!;

        /// <summary>
        /// Stage that the plugin attaches to.
        /// </summary>
        [Input("stageName", required: true)]
        public Input<string> StageName { get; set; } = null!;

        public PluginAttachmentArgs()
        {
        }
        public static new PluginAttachmentArgs Empty => new PluginAttachmentArgs();
    }

    public sealed class PluginAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The api_id that plugin attaches to.
        /// </summary>
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        /// <summary>
        /// The group that the api belongs to.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The plugin that attaches to the api.
        /// </summary>
        [Input("pluginId")]
        public Input<string>? PluginId { get; set; }

        /// <summary>
        /// Stage that the plugin attaches to.
        /// </summary>
        [Input("stageName")]
        public Input<string>? StageName { get; set; }

        public PluginAttachmentState()
        {
        }
        public static new PluginAttachmentState Empty => new PluginAttachmentState();
    }
}
