// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ApiGateway
{
    public static class GetApis
    {
        /// <summary>
        /// This data source provides the Api Gateway APIs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.22.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = new AliCloud.ApiGateway.Group("default", new()
        ///     {
        ///         Name = name,
        ///         Description = name,
        ///     });
        /// 
        ///     var defaultApi = new AliCloud.ApiGateway.Api("default", new()
        ///     {
        ///         GroupId = @default.Id,
        ///         Name = name,
        ///         Description = name,
        ///         AuthType = "APP",
        ///         ServiceType = "HTTP",
        ///         RequestConfig = new AliCloud.ApiGateway.Inputs.ApiRequestConfigArgs
        ///         {
        ///             Protocol = "HTTP",
        ///             Method = "GET",
        ///             Path = "/test/path",
        ///             Mode = "MAPPING",
        ///         },
        ///         HttpServiceConfig = new AliCloud.ApiGateway.Inputs.ApiHttpServiceConfigArgs
        ///         {
        ///             Address = "http://apigateway-backend.alicloudapi.com:8080",
        ///             Method = "GET",
        ///             Path = "/web/cloudapi",
        ///             Timeout = 20,
        ///             AoneName = "cloudapi-openapi",
        ///         },
        ///         RequestParameters = new[]
        ///         {
        ///             new AliCloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = name,
        ///                 Type = "STRING",
        ///                 Required = "OPTIONAL",
        ///                 In = "QUERY",
        ///                 InService = "QUERY",
        ///                 NameService = name,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.ApiGateway.GetApis.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultApi.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["apiGatewayApisId0"] = ids.Apply(getApisResult =&gt; getApisResult.Apis[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetApisResult> InvokeAsync(GetApisArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApisResult>("alicloud:apigateway/getApis:getApis", args ?? new GetApisArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Api Gateway APIs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.22.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = new AliCloud.ApiGateway.Group("default", new()
        ///     {
        ///         Name = name,
        ///         Description = name,
        ///     });
        /// 
        ///     var defaultApi = new AliCloud.ApiGateway.Api("default", new()
        ///     {
        ///         GroupId = @default.Id,
        ///         Name = name,
        ///         Description = name,
        ///         AuthType = "APP",
        ///         ServiceType = "HTTP",
        ///         RequestConfig = new AliCloud.ApiGateway.Inputs.ApiRequestConfigArgs
        ///         {
        ///             Protocol = "HTTP",
        ///             Method = "GET",
        ///             Path = "/test/path",
        ///             Mode = "MAPPING",
        ///         },
        ///         HttpServiceConfig = new AliCloud.ApiGateway.Inputs.ApiHttpServiceConfigArgs
        ///         {
        ///             Address = "http://apigateway-backend.alicloudapi.com:8080",
        ///             Method = "GET",
        ///             Path = "/web/cloudapi",
        ///             Timeout = 20,
        ///             AoneName = "cloudapi-openapi",
        ///         },
        ///         RequestParameters = new[]
        ///         {
        ///             new AliCloud.ApiGateway.Inputs.ApiRequestParameterArgs
        ///             {
        ///                 Name = name,
        ///                 Type = "STRING",
        ///                 Required = "OPTIONAL",
        ///                 In = "QUERY",
        ///                 InService = "QUERY",
        ///                 NameService = name,
        ///             },
        ///         },
        ///     });
        /// 
        ///     var ids = AliCloud.ApiGateway.GetApis.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultApi.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["apiGatewayApisId0"] = ids.Apply(getApisResult =&gt; getApisResult.Apis[0]?.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetApisResult> Invoke(GetApisInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApisResult>("alicloud:apigateway/getApis:getApis", args ?? new GetApisInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApisArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the API.
        /// </summary>
        [Input("apiId")]
        public string? ApiId { get; set; }

        /// <summary>
        /// The ID of the API group.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of API IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by API name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetApisArgs()
        {
        }
        public static new GetApisArgs Empty => new GetApisArgs();
    }

    public sealed class GetApisInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the API.
        /// </summary>
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        /// <summary>
        /// The ID of the API group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of API IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by API name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetApisInvokeArgs()
        {
        }
        public static new GetApisInvokeArgs Empty => new GetApisInvokeArgs();
    }


    [OutputType]
    public sealed class GetApisResult
    {
        /// <summary>
        /// (Available since v1.224.0) The ID of the API.
        /// </summary>
        public readonly string? ApiId;
        /// <summary>
        /// A list of APIs. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApisApiResult> Apis;
        /// <summary>
        /// The ID of the API group.
        /// </summary>
        public readonly string? GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of API names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetApisResult(
            string? apiId,

            ImmutableArray<Outputs.GetApisApiResult> apis,

            string? groupId,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile)
        {
            ApiId = apiId;
            Apis = apis;
            GroupId = groupId;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
        }
    }
}
