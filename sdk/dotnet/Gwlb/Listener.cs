// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gwlb
{
    /// <summary>
    /// Provides a GWLB Listener resource.
    /// 
    /// For information about GWLB Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/slb/gateway-based-load-balancing-gwlb/developer-reference/api-gwlb-2024-04-15-createlistener).
    /// 
    /// &gt; **NOTE:** Available since v1.234.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var zoneId1 = config.Get("zoneId1") ?? "cn-wulanchabu-b";
    ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/8",
    ///         VpcName = name,
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         ZoneId = zoneId1,
    ///         CidrBlock = "10.0.0.0/24",
    ///         VswitchName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s1",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var defaultLoadBalancer = new AliCloud.Gwlb.LoadBalancer("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         LoadBalancerName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s3",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///         ZoneMappings = new[]
    ///         {
    ///             new AliCloud.Gwlb.Inputs.LoadBalancerZoneMappingArgs
    ///             {
    ///                 VswitchId = defaultSwitch.Id,
    ///                 ZoneId = zoneId1,
    ///             },
    ///         },
    ///         AddressIpVersion = "Ipv4",
    ///     });
    /// 
    ///     var defaultServerGroup = new AliCloud.Gwlb.ServerGroup("default", new()
    ///     {
    ///         Protocol = "GENEVE",
    ///         ServerGroupName = "tfaccgwlb62413",
    ///         ServerGroupType = "Ip",
    ///         Servers = new[]
    ///         {
    ///             new AliCloud.Gwlb.Inputs.ServerGroupServerArgs
    ///             {
    ///                 ServerId = "10.0.0.1",
    ///                 ServerIp = "10.0.0.1",
    ///                 ServerType = "Ip",
    ///             },
    ///             new AliCloud.Gwlb.Inputs.ServerGroupServerArgs
    ///             {
    ///                 ServerId = "10.0.0.2",
    ///                 ServerIp = "10.0.0.2",
    ///                 ServerType = "Ip",
    ///             },
    ///             new AliCloud.Gwlb.Inputs.ServerGroupServerArgs
    ///             {
    ///                 ServerId = "10.0.0.3",
    ///                 ServerIp = "10.0.0.3",
    ///                 ServerType = "Ip",
    ///             },
    ///         },
    ///         ConnectionDrainConfig = new AliCloud.Gwlb.Inputs.ServerGroupConnectionDrainConfigArgs
    ///         {
    ///             ConnectionDrainEnabled = true,
    ///             ConnectionDrainTimeout = 1,
    ///         },
    ///         ResourceGroupId = @default.Apply(@default =&gt; @default.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0])),
    ///         DryRun = false,
    ///         HealthCheckConfig = new AliCloud.Gwlb.Inputs.ServerGroupHealthCheckConfigArgs
    ///         {
    ///             HealthCheckProtocol = "HTTP",
    ///             HealthCheckHttpCodes = new[]
    ///             {
    ///                 "http_2xx",
    ///                 "http_3xx",
    ///                 "http_4xx",
    ///             },
    ///             HealthCheckInterval = 10,
    ///             HealthCheckPath = "/health-check",
    ///             UnhealthyThreshold = 2,
    ///             HealthCheckConnectPort = 80,
    ///             HealthCheckConnectTimeout = 5,
    ///             HealthCheckDomain = "www.domain.com",
    ///             HealthCheckEnabled = true,
    ///             HealthyThreshold = 2,
    ///         },
    ///         VpcId = defaultNetwork.Id,
    ///         Scheduler = "5TCH",
    ///     });
    /// 
    ///     var defaultListener = new AliCloud.Gwlb.Listener("default", new()
    ///     {
    ///         ListenerDescription = "example-tf-lsn",
    ///         ServerGroupId = defaultServerGroup.Id,
    ///         LoadBalancerId = defaultLoadBalancer.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GWLB Listener can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:gwlb/listener:Listener example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:gwlb/listener:Listener")]
    public partial class Listener : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to perform a dry run, without performing the actual request. Valid values:
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// The description of the listener.
        /// 
        /// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
        /// </summary>
        [Output("listenerDescription")]
        public Output<string?> ListenerDescription { get; private set; } = null!;

        /// <summary>
        /// The GWLB instance ID.
        /// </summary>
        [Output("loadBalancerId")]
        public Output<string> LoadBalancerId { get; private set; } = null!;

        /// <summary>
        /// The region ID.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// The server group ID.
        /// </summary>
        [Output("serverGroupId")]
        public Output<string> ServerGroupId { get; private set; } = null!;

        /// <summary>
        /// The status of the listener.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tags. You can specify at most 20 tags in each call.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Listener resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Listener(string name, ListenerArgs args, CustomResourceOptions? options = null)
            : base("alicloud:gwlb/listener:Listener", name, args ?? new ListenerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Listener(string name, Input<string> id, ListenerState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:gwlb/listener:Listener", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Listener resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Listener Get(string name, Input<string> id, ListenerState? state = null, CustomResourceOptions? options = null)
        {
            return new Listener(name, id, state, options);
        }
    }

    public sealed class ListenerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to perform a dry run, without performing the actual request. Valid values:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The description of the listener.
        /// 
        /// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
        /// </summary>
        [Input("listenerDescription")]
        public Input<string>? ListenerDescription { get; set; }

        /// <summary>
        /// The GWLB instance ID.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public Input<string> LoadBalancerId { get; set; } = null!;

        /// <summary>
        /// The server group ID.
        /// </summary>
        [Input("serverGroupId", required: true)]
        public Input<string> ServerGroupId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags. You can specify at most 20 tags in each call.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ListenerArgs()
        {
        }
        public static new ListenerArgs Empty => new ListenerArgs();
    }

    public sealed class ListenerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to perform a dry run, without performing the actual request. Valid values:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The description of the listener.
        /// 
        /// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
        /// </summary>
        [Input("listenerDescription")]
        public Input<string>? ListenerDescription { get; set; }

        /// <summary>
        /// The GWLB instance ID.
        /// </summary>
        [Input("loadBalancerId")]
        public Input<string>? LoadBalancerId { get; set; }

        /// <summary>
        /// The region ID.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// The server group ID.
        /// </summary>
        [Input("serverGroupId")]
        public Input<string>? ServerGroupId { get; set; }

        /// <summary>
        /// The status of the listener.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags. You can specify at most 20 tags in each call.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ListenerState()
        {
        }
        public static new ListenerState Empty => new ListenerState();
    }
}
