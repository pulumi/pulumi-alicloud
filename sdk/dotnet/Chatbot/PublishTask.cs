// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Chatbot
{
    /// <summary>
    /// Provides a Chatbot Publish Task resource.
    /// 
    /// For information about Chatbot Publish Task and how to use it, see [What is Publish Task](https://help.aliyun.com/document_detail/433996.html).
    /// 
    /// &gt; **NOTE:** Available in v1.203.0+.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultAgents = AliCloud.Chatbot.GetAgents.Invoke();
    /// 
    ///     var defaultPublishTask = new AliCloud.Chatbot.PublishTask("defaultPublishTask", new()
    ///     {
    ///         BizType = "faq",
    ///         AgentKey = defaultAgents.Apply(getAgentsResult =&gt; getAgentsResult.Agents[0]?.AgentKey),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Chatbot Publish Task can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:chatbot/publishTask:PublishTask example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:chatbot/publishTask:PublishTask")]
    public partial class PublishTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The business space key. If you do not set it, the default business space is accessed. The key value is obtained on the business management page of the primary account.
        /// </summary>
        [Output("agentKey")]
        public Output<string> AgentKey { get; private set; } = null!;

        /// <summary>
        /// The type of the publishing unit. Please use the CreateInstancePublishTask API to publish the robot.
        /// </summary>
        [Output("bizType")]
        public Output<string> BizType { get; private set; } = null!;

        /// <summary>
        /// UTC time of task creation
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Additional release information. Currently supported: If the BizType is faq, enter the category Id in this field to indicate that only the knowledge under these categories is published.
        /// </summary>
        [Output("dataIdLists")]
        public Output<ImmutableArray<string>> DataIdLists { get; private set; } = null!;

        /// <summary>
        /// UTC time for task modification
        /// </summary>
        [Output("modifyTime")]
        public Output<string> ModifyTime { get; private set; } = null!;

        /// <summary>
        /// The status of the task.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a PublishTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublishTask(string name, PublishTaskArgs args, CustomResourceOptions? options = null)
            : base("alicloud:chatbot/publishTask:PublishTask", name, args ?? new PublishTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublishTask(string name, Input<string> id, PublishTaskState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:chatbot/publishTask:PublishTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublishTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublishTask Get(string name, Input<string> id, PublishTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new PublishTask(name, id, state, options);
        }
    }

    public sealed class PublishTaskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The business space key. If you do not set it, the default business space is accessed. The key value is obtained on the business management page of the primary account.
        /// </summary>
        [Input("agentKey")]
        public Input<string>? AgentKey { get; set; }

        /// <summary>
        /// The type of the publishing unit. Please use the CreateInstancePublishTask API to publish the robot.
        /// </summary>
        [Input("bizType", required: true)]
        public Input<string> BizType { get; set; } = null!;

        [Input("dataIdLists")]
        private InputList<string>? _dataIdLists;

        /// <summary>
        /// Additional release information. Currently supported: If the BizType is faq, enter the category Id in this field to indicate that only the knowledge under these categories is published.
        /// </summary>
        public InputList<string> DataIdLists
        {
            get => _dataIdLists ?? (_dataIdLists = new InputList<string>());
            set => _dataIdLists = value;
        }

        public PublishTaskArgs()
        {
        }
        public static new PublishTaskArgs Empty => new PublishTaskArgs();
    }

    public sealed class PublishTaskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The business space key. If you do not set it, the default business space is accessed. The key value is obtained on the business management page of the primary account.
        /// </summary>
        [Input("agentKey")]
        public Input<string>? AgentKey { get; set; }

        /// <summary>
        /// The type of the publishing unit. Please use the CreateInstancePublishTask API to publish the robot.
        /// </summary>
        [Input("bizType")]
        public Input<string>? BizType { get; set; }

        /// <summary>
        /// UTC time of task creation
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("dataIdLists")]
        private InputList<string>? _dataIdLists;

        /// <summary>
        /// Additional release information. Currently supported: If the BizType is faq, enter the category Id in this field to indicate that only the knowledge under these categories is published.
        /// </summary>
        public InputList<string> DataIdLists
        {
            get => _dataIdLists ?? (_dataIdLists = new InputList<string>());
            set => _dataIdLists = value;
        }

        /// <summary>
        /// UTC time for task modification
        /// </summary>
        [Input("modifyTime")]
        public Input<string>? ModifyTime { get; set; }

        /// <summary>
        /// The status of the task.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public PublishTaskState()
        {
        }
        public static new PublishTaskState Empty => new PublishTaskState();
    }
}
