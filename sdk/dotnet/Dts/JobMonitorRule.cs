// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Dts
{
    /// <summary>
    /// Provides a DTS Job Monitor Rule resource.
    /// 
    /// For information about DTS Job Monitor Rule and how to use it, see [What is Job Monitor Rule](https://www.alibabacloud.com/help/en/dts/developer-reference/api-createjobmonitorrule).
    /// 
    /// &gt; **NOTE:** Available since v1.134.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var example = AliCloud.GetRegions.Invoke(new()
    ///     {
    ///         Current = true,
    ///     });
    /// 
    ///     var exampleGetZones = AliCloud.Rds.GetZones.Invoke(new()
    ///     {
    ///         Engine = "MySQL",
    ///         EngineVersion = "8.0",
    ///         InstanceChargeType = "PostPaid",
    ///         Category = "Basic",
    ///         DbInstanceStorageType = "cloud_essd",
    ///     });
    /// 
    ///     var exampleGetInstanceClasses = AliCloud.Rds.GetInstanceClasses.Invoke(new()
    ///     {
    ///         ZoneId = exampleGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         Engine = "MySQL",
    ///         EngineVersion = "8.0",
    ///         InstanceChargeType = "PostPaid",
    ///         Category = "Basic",
    ///         DbInstanceStorageType = "cloud_essd",
    ///     });
    /// 
    ///     var exampleNetwork = new AliCloud.Vpc.Network("example", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var exampleSwitch = new AliCloud.Vpc.Switch("example", new()
    ///     {
    ///         VpcId = exampleNetwork.Id,
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = exampleGetZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VswitchName = name,
    ///     });
    /// 
    ///     var exampleSecurityGroup = new AliCloud.Ecs.SecurityGroup("example", new()
    ///     {
    ///         Name = name,
    ///         VpcId = exampleNetwork.Id,
    ///     });
    /// 
    ///     var exampleInstance = new List&lt;AliCloud.Rds.Instance&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         exampleInstance.Add(new AliCloud.Rds.Instance($"example-{range.Value}", new()
    ///         {
    ///             Engine = "MySQL",
    ///             EngineVersion = "8.0",
    ///             InstanceType = exampleGetInstanceClasses.Apply(getInstanceClassesResult =&gt; getInstanceClassesResult.InstanceClasses[0]?.InstanceClass),
    ///             InstanceStorage = exampleGetInstanceClasses.Apply(getInstanceClassesResult =&gt; getInstanceClassesResult.InstanceClasses[0]?.StorageRange?.Min),
    ///             InstanceChargeType = "Postpaid",
    ///             InstanceName = Std.Format.Invoke(new()
    ///             {
    ///                 Input = $"{name}_%d",
    ///                 Args = new[]
    ///                 {
    ///                     range.Value + 1,
    ///                 },
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///             VswitchId = exampleSwitch.Id,
    ///             MonitoringPeriod = 60,
    ///             DbInstanceStorageType = "cloud_essd",
    ///             SecurityGroupIds = new[]
    ///             {
    ///                 exampleSecurityGroup.Id,
    ///             },
    ///         }));
    ///     }
    ///     var exampleRdsAccount = new List&lt;AliCloud.Rds.RdsAccount&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         exampleRdsAccount.Add(new AliCloud.Rds.RdsAccount($"example-{range.Value}", new()
    ///         {
    ///             DbInstanceId = exampleInstance[range.Value].Id,
    ///             AccountName = Std.Format.Invoke(new()
    ///             {
    ///                 Input = "example_name_%d",
    ///                 Args = new[]
    ///                 {
    ///                     range.Value + 1,
    ///                 },
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///             AccountPassword = Std.Format.Invoke(new()
    ///             {
    ///                 Input = "example_password_%d",
    ///                 Args = new[]
    ///                 {
    ///                     range.Value + 1,
    ///                 },
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///         }));
    ///     }
    ///     var exampleDatabase = new List&lt;AliCloud.Rds.Database&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         exampleDatabase.Add(new AliCloud.Rds.Database($"example-{range.Value}", new()
    ///         {
    ///             InstanceId = exampleInstance[range.Value].Id,
    ///             Name = Std.Format.Invoke(new()
    ///             {
    ///                 Input = $"{name}_%d",
    ///                 Args = new[]
    ///                 {
    ///                     range.Value + 1,
    ///                 },
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///         }));
    ///     }
    ///     var exampleAccountPrivilege = new List&lt;AliCloud.Rds.AccountPrivilege&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         exampleAccountPrivilege.Add(new AliCloud.Rds.AccountPrivilege($"example-{range.Value}", new()
    ///         {
    ///             InstanceId = exampleInstance[range.Value].Id,
    ///             AccountName = exampleRdsAccount[range.Value].Name,
    ///             Privilege = "ReadWrite",
    ///             DbNames = new[]
    ///             {
    ///                 exampleDatabase[range.Value].Name,
    ///             },
    ///         }));
    ///     }
    ///     var exampleMigrationInstance = new AliCloud.Dts.MigrationInstance("example", new()
    ///     {
    ///         PaymentType = "PayAsYouGo",
    ///         SourceEndpointEngineName = "MySQL",
    ///         SourceEndpointRegion = example.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///         DestinationEndpointEngineName = "MySQL",
    ///         DestinationEndpointRegion = example.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///         InstanceClass = "small",
    ///         SyncArchitecture = "oneway",
    ///     });
    /// 
    ///     var exampleMigrationJob = new AliCloud.Dts.MigrationJob("example", new()
    ///     {
    ///         DtsInstanceId = exampleMigrationInstance.Id,
    ///         DtsJobName = name,
    ///         SourceEndpointInstanceType = "RDS",
    ///         SourceEndpointInstanceId = exampleAccountPrivilege[0].InstanceId,
    ///         SourceEndpointEngineName = "MySQL",
    ///         SourceEndpointRegion = example.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///         SourceEndpointUserName = exampleRdsAccount[0].AccountName,
    ///         SourceEndpointPassword = exampleRdsAccount[0].AccountPassword,
    ///         DestinationEndpointInstanceType = "RDS",
    ///         DestinationEndpointInstanceId = exampleAccountPrivilege[1].InstanceId,
    ///         DestinationEndpointEngineName = "MySQL",
    ///         DestinationEndpointRegion = example.Apply(getRegionsResult =&gt; getRegionsResult.Regions[0]?.Id),
    ///         DestinationEndpointUserName = exampleRdsAccount[1].AccountName,
    ///         DestinationEndpointPassword = exampleRdsAccount[1].AccountPassword,
    ///         DbList = Output.JsonSerialize(Output.Create(Output.Tuple(exampleDatabase[0].Name, exampleDatabase[1].Name).Apply(values =&gt;
    ///         {
    ///             var exampleDatabaseName = values.Item1;
    ///             var exampleDatabaseName1 = values.Item2;
    ///             return 
    ///             {
    ///                 { exampleDatabaseName, 
    ///                 {
    ///                     { "name", exampleDatabaseName1 },
    ///                     { "all", true },
    ///                 } },
    ///             };
    ///         }))),
    ///         StructureInitialization = true,
    ///         DataInitialization = true,
    ///         DataSynchronization = true,
    ///         Status = "Migrating",
    ///     });
    /// 
    ///     var exampleJobMonitorRule = new AliCloud.Dts.JobMonitorRule("example", new()
    ///     {
    ///         DtsJobId = exampleMigrationJob.Id,
    ///         Type = "delay",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DTS Job Monitor Rule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:dts/jobMonitorRule:JobMonitorRule example &lt;dts_job_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:dts/jobMonitorRule:JobMonitorRule")]
    public partial class JobMonitorRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Trigger delay alarm threshold, which is measured in seconds.
        /// </summary>
        [Output("delayRuleTime")]
        public Output<string> DelayRuleTime { get; private set; } = null!;

        /// <summary>
        /// Migration, synchronization or subscription task ID can be by calling the [DescribeDtsJobs] get.
        /// </summary>
        [Output("dtsJobId")]
        public Output<string> DtsJobId { get; private set; } = null!;

        /// <summary>
        /// The alarm is triggered after notification of the contact phone number, A plurality of phone numbers between them with a comma (,) to separate.
        /// </summary>
        [Output("phone")]
        public Output<string?> Phone { get; private set; } = null!;

        /// <summary>
        /// Whether to enable monitoring rules, valid values: `Y`, `N`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Monitoring rules of type, valid values: `Delay`, `Error`. **delay**: delay alarm. **error**: abnormal alarm.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a JobMonitorRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobMonitorRule(string name, JobMonitorRuleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:dts/jobMonitorRule:JobMonitorRule", name, args ?? new JobMonitorRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobMonitorRule(string name, Input<string> id, JobMonitorRuleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:dts/jobMonitorRule:JobMonitorRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobMonitorRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobMonitorRule Get(string name, Input<string> id, JobMonitorRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new JobMonitorRule(name, id, state, options);
        }
    }

    public sealed class JobMonitorRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Trigger delay alarm threshold, which is measured in seconds.
        /// </summary>
        [Input("delayRuleTime")]
        public Input<string>? DelayRuleTime { get; set; }

        /// <summary>
        /// Migration, synchronization or subscription task ID can be by calling the [DescribeDtsJobs] get.
        /// </summary>
        [Input("dtsJobId", required: true)]
        public Input<string> DtsJobId { get; set; } = null!;

        /// <summary>
        /// The alarm is triggered after notification of the contact phone number, A plurality of phone numbers between them with a comma (,) to separate.
        /// </summary>
        [Input("phone")]
        public Input<string>? Phone { get; set; }

        /// <summary>
        /// Whether to enable monitoring rules, valid values: `Y`, `N`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Monitoring rules of type, valid values: `Delay`, `Error`. **delay**: delay alarm. **error**: abnormal alarm.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public JobMonitorRuleArgs()
        {
        }
        public static new JobMonitorRuleArgs Empty => new JobMonitorRuleArgs();
    }

    public sealed class JobMonitorRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Trigger delay alarm threshold, which is measured in seconds.
        /// </summary>
        [Input("delayRuleTime")]
        public Input<string>? DelayRuleTime { get; set; }

        /// <summary>
        /// Migration, synchronization or subscription task ID can be by calling the [DescribeDtsJobs] get.
        /// </summary>
        [Input("dtsJobId")]
        public Input<string>? DtsJobId { get; set; }

        /// <summary>
        /// The alarm is triggered after notification of the contact phone number, A plurality of phone numbers between them with a comma (,) to separate.
        /// </summary>
        [Input("phone")]
        public Input<string>? Phone { get; set; }

        /// <summary>
        /// Whether to enable monitoring rules, valid values: `Y`, `N`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Monitoring rules of type, valid values: `Delay`, `Error`. **delay**: delay alarm. **error**: abnormal alarm.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public JobMonitorRuleState()
        {
        }
        public static new JobMonitorRuleState Empty => new JobMonitorRuleState();
    }
}
