// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Apig
{
    /// <summary>
    /// ## Import
    /// 
    /// APIG Gateway can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:apig/gateway:Gateway example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:apig/gateway:Gateway")]
    public partial class Gateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp. Unit: milliseconds.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("gatewayName")]
        public Output<string?> GatewayName { get; private set; } = null!;

        /// <summary>
        /// Log Configuration See `log_config` below.
        /// </summary>
        [Output("logConfig")]
        public Output<Outputs.GatewayLogConfig?> LogConfig { get; private set; } = null!;

        /// <summary>
        /// Network Access Configuration See `network_access_config` below.
        /// </summary>
        [Output("networkAccessConfig")]
        public Output<Outputs.GatewayNetworkAccessConfig?> NetworkAccessConfig { get; private set; } = null!;

        /// <summary>
        /// The payment type of the resource
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// Gateway instance specifications
        /// </summary>
        [Output("spec")]
        public Output<string?> Spec { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The VPC associated with the Gateway. See `vpc` below.
        /// </summary>
        [Output("vpc")]
        public Output<Outputs.GatewayVpc?> Vpc { get; private set; } = null!;

        /// <summary>
        /// The virtual switch associated with the Gateway. See `vswitch` below.
        /// </summary>
        [Output("vswitch")]
        public Output<Outputs.GatewayVswitch?> Vswitch { get; private set; } = null!;

        /// <summary>
        /// Availability Zone Configuration See `zone_config` below.
        /// </summary>
        [Output("zoneConfig")]
        public Output<Outputs.GatewayZoneConfig> ZoneConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Gateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Gateway(string name, GatewayArgs args, CustomResourceOptions? options = null)
            : base("alicloud:apig/gateway:Gateway", name, args ?? new GatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Gateway(string name, Input<string> id, GatewayState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:apig/gateway:Gateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Gateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Gateway Get(string name, Input<string> id, GatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new Gateway(name, id, state, options);
        }
    }

    public sealed class GatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("gatewayName")]
        public Input<string>? GatewayName { get; set; }

        /// <summary>
        /// Log Configuration See `log_config` below.
        /// </summary>
        [Input("logConfig")]
        public Input<Inputs.GatewayLogConfigArgs>? LogConfig { get; set; }

        /// <summary>
        /// Network Access Configuration See `network_access_config` below.
        /// </summary>
        [Input("networkAccessConfig")]
        public Input<Inputs.GatewayNetworkAccessConfigArgs>? NetworkAccessConfig { get; set; }

        /// <summary>
        /// The payment type of the resource
        /// </summary>
        [Input("paymentType", required: true)]
        public Input<string> PaymentType { get; set; } = null!;

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Gateway instance specifications
        /// </summary>
        [Input("spec")]
        public Input<string>? Spec { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC associated with the Gateway. See `vpc` below.
        /// </summary>
        [Input("vpc")]
        public Input<Inputs.GatewayVpcArgs>? Vpc { get; set; }

        /// <summary>
        /// The virtual switch associated with the Gateway. See `vswitch` below.
        /// </summary>
        [Input("vswitch")]
        public Input<Inputs.GatewayVswitchArgs>? Vswitch { get; set; }

        /// <summary>
        /// Availability Zone Configuration See `zone_config` below.
        /// </summary>
        [Input("zoneConfig", required: true)]
        public Input<Inputs.GatewayZoneConfigArgs> ZoneConfig { get; set; } = null!;

        public GatewayArgs()
        {
        }
        public static new GatewayArgs Empty => new GatewayArgs();
    }

    public sealed class GatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation timestamp. Unit: milliseconds.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("gatewayName")]
        public Input<string>? GatewayName { get; set; }

        /// <summary>
        /// Log Configuration See `log_config` below.
        /// </summary>
        [Input("logConfig")]
        public Input<Inputs.GatewayLogConfigGetArgs>? LogConfig { get; set; }

        /// <summary>
        /// Network Access Configuration See `network_access_config` below.
        /// </summary>
        [Input("networkAccessConfig")]
        public Input<Inputs.GatewayNetworkAccessConfigGetArgs>? NetworkAccessConfig { get; set; }

        /// <summary>
        /// The payment type of the resource
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Gateway instance specifications
        /// </summary>
        [Input("spec")]
        public Input<string>? Spec { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC associated with the Gateway. See `vpc` below.
        /// </summary>
        [Input("vpc")]
        public Input<Inputs.GatewayVpcGetArgs>? Vpc { get; set; }

        /// <summary>
        /// The virtual switch associated with the Gateway. See `vswitch` below.
        /// </summary>
        [Input("vswitch")]
        public Input<Inputs.GatewayVswitchGetArgs>? Vswitch { get; set; }

        /// <summary>
        /// Availability Zone Configuration See `zone_config` below.
        /// </summary>
        [Input("zoneConfig")]
        public Input<Inputs.GatewayZoneConfigGetArgs>? ZoneConfig { get; set; }

        public GatewayState()
        {
        }
        public static new GatewayState Empty => new GatewayState();
    }
}
