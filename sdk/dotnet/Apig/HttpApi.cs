// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Apig
{
    /// <summary>
    /// Provides a APIG Http Api resource.
    /// 
    /// For information about APIG Http Api and how to use it, see [What is Http Api](https://next.api.aliyun.com/api/APIG/2024-03-27/CreateHttpApi).
    /// 
    /// &gt; **NOTE:** Available since v1.240.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var protocol = config.Get("protocol") ?? "HTTP";
    ///     var protocolHttps = config.Get("protocolHttps") ?? "HTTPS";
    ///     var @default = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultHttpApi = new AliCloud.Apig.HttpApi("default", new()
    ///     {
    ///         HttpApiName = name,
    ///         Protocols = new[]
    ///         {
    ///             protocol,
    ///         },
    ///         BasePath = "/v1",
    ///         Description = "zhiwei_pop_examplecase",
    ///         Type = "Rest",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// APIG Http Api can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:apig/httpApi:HttpApi example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:apig/httpApi:HttpApi")]
    public partial class HttpApi : global::Pulumi.CustomResource
    {
        /// <summary>
        /// API path
        /// </summary>
        [Output("basePath")]
        public Output<string?> BasePath { get; private set; } = null!;

        /// <summary>
        /// Description of API
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("httpApiName")]
        public Output<string> HttpApiName { get; private set; } = null!;

        /// <summary>
        /// API protocol
        /// </summary>
        [Output("protocols")]
        public Output<ImmutableArray<string>> Protocols { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// API type
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a HttpApi resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HttpApi(string name, HttpApiArgs args, CustomResourceOptions? options = null)
            : base("alicloud:apig/httpApi:HttpApi", name, args ?? new HttpApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HttpApi(string name, Input<string> id, HttpApiState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:apig/httpApi:HttpApi", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HttpApi resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HttpApi Get(string name, Input<string> id, HttpApiState? state = null, CustomResourceOptions? options = null)
        {
            return new HttpApi(name, id, state, options);
        }
    }

    public sealed class HttpApiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API path
        /// </summary>
        [Input("basePath")]
        public Input<string>? BasePath { get; set; }

        /// <summary>
        /// Description of API
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("httpApiName", required: true)]
        public Input<string> HttpApiName { get; set; } = null!;

        [Input("protocols", required: true)]
        private InputList<string>? _protocols;

        /// <summary>
        /// API protocol
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// API type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public HttpApiArgs()
        {
        }
        public static new HttpApiArgs Empty => new HttpApiArgs();
    }

    public sealed class HttpApiState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API path
        /// </summary>
        [Input("basePath")]
        public Input<string>? BasePath { get; set; }

        /// <summary>
        /// Description of API
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("httpApiName")]
        public Input<string>? HttpApiName { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// API protocol
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// The ID of the resource group
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// API type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public HttpApiState()
        {
        }
        public static new HttpApiState Empty => new HttpApiState();
    }
}
