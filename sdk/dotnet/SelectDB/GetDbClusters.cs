// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.SelectDB
{
    public static class GetDbClusters
    {
        /// <summary>
        /// This data source provides the SelectDB DBCluster of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.229.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform_example";
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///     });
        /// 
        ///     var defaultDbInstance = new AliCloud.SelectDB.DbInstance("default", new()
        ///     {
        ///         DbInstanceClass = "selectdb.xlarge",
        ///         DbInstanceDescription = name,
        ///         CacheSize = 200,
        ///         PaymentType = "PayAsYouGo",
        ///         EngineMinorVersion = "3.0.12",
        ///         VpcId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.VpcId),
        ///         ZoneId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.ZoneId),
        ///         VswitchId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.Id),
        ///     });
        /// 
        ///     var defaultDbCluster = new AliCloud.SelectDB.DbCluster("default", new()
        ///     {
        ///         DbInstanceId = defaultDbInstance.Id,
        ///         DbClusterDescription = name,
        ///         DbClusterClass = "selectdb.2xlarge",
        ///         CacheSize = 400,
        ///         PaymentType = "PayAsYouGo",
        ///     });
        /// 
        ///     var defaultGetDbClusters = AliCloud.SelectDB.GetDbClusters.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultDbCluster.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dbCluster"] = defaultGetDbClusters.Apply(getDbClustersResult =&gt; getDbClustersResult.Ids[0]),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbClustersResult> InvokeAsync(GetDbClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbClustersResult>("alicloud:selectdb/getDbClusters:getDbClusters", args ?? new GetDbClustersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the SelectDB DBCluster of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.229.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform_example";
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///     });
        /// 
        ///     var defaultDbInstance = new AliCloud.SelectDB.DbInstance("default", new()
        ///     {
        ///         DbInstanceClass = "selectdb.xlarge",
        ///         DbInstanceDescription = name,
        ///         CacheSize = 200,
        ///         PaymentType = "PayAsYouGo",
        ///         EngineMinorVersion = "3.0.12",
        ///         VpcId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.VpcId),
        ///         ZoneId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.ZoneId),
        ///         VswitchId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.Id),
        ///     });
        /// 
        ///     var defaultDbCluster = new AliCloud.SelectDB.DbCluster("default", new()
        ///     {
        ///         DbInstanceId = defaultDbInstance.Id,
        ///         DbClusterDescription = name,
        ///         DbClusterClass = "selectdb.2xlarge",
        ///         CacheSize = 400,
        ///         PaymentType = "PayAsYouGo",
        ///     });
        /// 
        ///     var defaultGetDbClusters = AliCloud.SelectDB.GetDbClusters.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultDbCluster.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dbCluster"] = defaultGetDbClusters.Apply(getDbClustersResult =&gt; getDbClustersResult.Ids[0]),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbClustersResult> Invoke(GetDbClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbClustersResult>("alicloud:selectdb/getDbClusters:getDbClusters", args ?? new GetDbClustersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the SelectDB DBCluster of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.229.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform_example";
        ///     var defaultGetNetworks = AliCloud.Vpc.GetNetworks.Invoke(new()
        ///     {
        ///         NameRegex = "^default-NODELETING$",
        ///     });
        /// 
        ///     var defaultGetSwitches = AliCloud.Vpc.GetSwitches.Invoke(new()
        ///     {
        ///         VpcId = defaultGetNetworks.Apply(getNetworksResult =&gt; getNetworksResult.Ids[0]),
        ///         ZoneId = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///     });
        /// 
        ///     var defaultDbInstance = new AliCloud.SelectDB.DbInstance("default", new()
        ///     {
        ///         DbInstanceClass = "selectdb.xlarge",
        ///         DbInstanceDescription = name,
        ///         CacheSize = 200,
        ///         PaymentType = "PayAsYouGo",
        ///         EngineMinorVersion = "3.0.12",
        ///         VpcId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.VpcId),
        ///         ZoneId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.ZoneId),
        ///         VswitchId = defaultGetSwitches.Apply(getSwitchesResult =&gt; getSwitchesResult.Vswitches[0]?.Id),
        ///     });
        /// 
        ///     var defaultDbCluster = new AliCloud.SelectDB.DbCluster("default", new()
        ///     {
        ///         DbInstanceId = defaultDbInstance.Id,
        ///         DbClusterDescription = name,
        ///         DbClusterClass = "selectdb.2xlarge",
        ///         CacheSize = 400,
        ///         PaymentType = "PayAsYouGo",
        ///     });
        /// 
        ///     var defaultGetDbClusters = AliCloud.SelectDB.GetDbClusters.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             defaultDbCluster.Id,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dbCluster"] = defaultGetDbClusters.Apply(getDbClustersResult =&gt; getDbClustersResult.Ids[0]),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbClustersResult> Invoke(GetDbClustersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbClustersResult>("alicloud:selectdb/getDbClusters:getDbClusters", args ?? new GetDbClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of DBCluster IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetDbClustersArgs()
        {
        }
        public static new GetDbClustersArgs Empty => new GetDbClustersArgs();
    }

    public sealed class GetDbClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of DBCluster IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetDbClustersInvokeArgs()
        {
        }
        public static new GetDbClustersInvokeArgs Empty => new GetDbClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbClustersResult
    {
        /// <summary>
        /// A list of SelectDB DBClusters. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbClustersClusterResult> Clusters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetDbClustersResult(
            ImmutableArray<Outputs.GetDbClustersClusterResult> clusters,

            string id,

            ImmutableArray<string> ids,

            string? outputFile)
        {
            Clusters = clusters;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
        }
    }
}
