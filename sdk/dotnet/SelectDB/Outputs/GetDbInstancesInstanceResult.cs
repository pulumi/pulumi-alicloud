// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.SelectDB.Outputs
{

    [OutputType]
    public sealed class GetDbInstancesInstanceResult
    {
        /// <summary>
        /// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
        /// </summary>
        public readonly int CacheSizePostpaid;
        /// <summary>
        /// The sum of cache size for every `Subscription` clusters in DBInstance.
        /// </summary>
        public readonly int CacheSizePrepaid;
        /// <summary>
        /// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
        /// </summary>
        public readonly int ClusterCountPostpaid;
        /// <summary>
        /// The sum of cluster counts for `Subscription` clusters in DBInstance.
        /// </summary>
        public readonly int ClusterCountPrepaid;
        /// <summary>
        /// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
        /// </summary>
        public readonly int CpuPostpaid;
        /// <summary>
        /// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
        /// </summary>
        public readonly int CpuPrepaid;
        /// <summary>
        /// The DBInstance description.
        /// </summary>
        public readonly string DbInstanceDescription;
        /// <summary>
        /// The instance ID.
        /// </summary>
        public readonly string DbInstanceId;
        /// <summary>
        /// The Engine of the DBInstance.
        /// </summary>
        public readonly string Engine;
        /// <summary>
        /// The engine minor version of the DBInstance.
        /// </summary>
        public readonly string EngineMinorVersion;
        /// <summary>
        /// The engine version of the DBInstance.
        /// </summary>
        public readonly string EngineVersion;
        /// <summary>
        /// The time when DBInstance is created.
        /// </summary>
        public readonly string GmtCreated;
        /// <summary>
        /// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
        /// </summary>
        public readonly string GmtExpired;
        /// <summary>
        /// The time when DBInstance is modified.
        /// </summary>
        public readonly string GmtModified;
        public readonly string Id;
        /// <summary>
        /// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
        /// </summary>
        public readonly string LockMode;
        /// <summary>
        /// The reason why the instance is locked.
        /// </summary>
        public readonly string LockReason;
        /// <summary>
        /// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
        /// </summary>
        public readonly int MemoryPostpaid;
        /// <summary>
        /// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
        /// </summary>
        public readonly int MemoryPrepaid;
        /// <summary>
        /// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
        /// </summary>
        public readonly string PaymentType;
        /// <summary>
        /// The ID of region for DBInstance.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The status of the DBInstance. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The sub domain of DBInstance.
        /// </summary>
        public readonly string SubDomain;
        /// <summary>
        /// The ID of the VPC for DBInstance.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The ID of vswitch for DBInstance.
        /// </summary>
        public readonly string VswitchId;
        /// <summary>
        /// The ID of zone for DBInstance.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetDbInstancesInstanceResult(
            int cacheSizePostpaid,

            int cacheSizePrepaid,

            int clusterCountPostpaid,

            int clusterCountPrepaid,

            int cpuPostpaid,

            int cpuPrepaid,

            string dbInstanceDescription,

            string dbInstanceId,

            string engine,

            string engineMinorVersion,

            string engineVersion,

            string gmtCreated,

            string gmtExpired,

            string gmtModified,

            string id,

            string lockMode,

            string lockReason,

            int memoryPostpaid,

            int memoryPrepaid,

            string paymentType,

            string regionId,

            string status,

            string subDomain,

            string vpcId,

            string vswitchId,

            string zoneId)
        {
            CacheSizePostpaid = cacheSizePostpaid;
            CacheSizePrepaid = cacheSizePrepaid;
            ClusterCountPostpaid = clusterCountPostpaid;
            ClusterCountPrepaid = clusterCountPrepaid;
            CpuPostpaid = cpuPostpaid;
            CpuPrepaid = cpuPrepaid;
            DbInstanceDescription = dbInstanceDescription;
            DbInstanceId = dbInstanceId;
            Engine = engine;
            EngineMinorVersion = engineMinorVersion;
            EngineVersion = engineVersion;
            GmtCreated = gmtCreated;
            GmtExpired = gmtExpired;
            GmtModified = gmtModified;
            Id = id;
            LockMode = lockMode;
            LockReason = lockReason;
            MemoryPostpaid = memoryPostpaid;
            MemoryPrepaid = memoryPrepaid;
            PaymentType = paymentType;
            RegionId = regionId;
            Status = status;
            SubDomain = subDomain;
            VpcId = vpcId;
            VswitchId = vswitchId;
            ZoneId = zoneId;
        }
    }
}
