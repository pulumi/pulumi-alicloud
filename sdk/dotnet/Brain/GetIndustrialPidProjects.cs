// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Brain
{
    public static class GetIndustrialPidProjects
    {
        /// <summary>
        /// This data source provides the Brain Industrial Pid Projects of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.113.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.Brain.GetIndustrialPidProjects.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "3e74e684-cbb5-xxxx",
        ///         },
        ///         NameRegex = "tf-testAcc",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstBrainIndustrialPidProjectId"] = example.Apply(getIndustrialPidProjectsResult =&gt; getIndustrialPidProjectsResult.Projects[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIndustrialPidProjectsResult> InvokeAsync(GetIndustrialPidProjectsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIndustrialPidProjectsResult>("alicloud:brain/getIndustrialPidProjects:getIndustrialPidProjects", args ?? new GetIndustrialPidProjectsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Brain Industrial Pid Projects of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.113.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.Brain.GetIndustrialPidProjects.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "3e74e684-cbb5-xxxx",
        ///         },
        ///         NameRegex = "tf-testAcc",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstBrainIndustrialPidProjectId"] = example.Apply(getIndustrialPidProjectsResult =&gt; getIndustrialPidProjectsResult.Projects[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIndustrialPidProjectsResult> Invoke(GetIndustrialPidProjectsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIndustrialPidProjectsResult>("alicloud:brain/getIndustrialPidProjects:getIndustrialPidProjects", args ?? new GetIndustrialPidProjectsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIndustrialPidProjectsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Pid Project IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Pid Project name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of Pid Organization.
        /// </summary>
        [Input("pidOrganizationId")]
        public string? PidOrganizationId { get; set; }

        /// <summary>
        /// The name of Pid Project.
        /// </summary>
        [Input("pidProjectName")]
        public string? PidProjectName { get; set; }

        public GetIndustrialPidProjectsArgs()
        {
        }
        public static new GetIndustrialPidProjectsArgs Empty => new GetIndustrialPidProjectsArgs();
    }

    public sealed class GetIndustrialPidProjectsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Pid Project IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by Pid Project name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of Pid Organization.
        /// </summary>
        [Input("pidOrganizationId")]
        public Input<string>? PidOrganizationId { get; set; }

        /// <summary>
        /// The name of Pid Project.
        /// </summary>
        [Input("pidProjectName")]
        public Input<string>? PidProjectName { get; set; }

        public GetIndustrialPidProjectsInvokeArgs()
        {
        }
        public static new GetIndustrialPidProjectsInvokeArgs Empty => new GetIndustrialPidProjectsInvokeArgs();
    }


    [OutputType]
    public sealed class GetIndustrialPidProjectsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly string? PidOrganizationId;
        public readonly string? PidProjectName;
        public readonly ImmutableArray<Outputs.GetIndustrialPidProjectsProjectResult> Projects;

        [OutputConstructor]
        private GetIndustrialPidProjectsResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? pidOrganizationId,

            string? pidProjectName,

            ImmutableArray<Outputs.GetIndustrialPidProjectsProjectResult> projects)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            PidOrganizationId = pidOrganizationId;
            PidProjectName = pidProjectName;
            Projects = projects;
        }
    }
}
