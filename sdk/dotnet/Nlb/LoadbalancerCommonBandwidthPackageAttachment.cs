// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nlb
{
    /// <summary>
    /// Provides a NLB Loadbalancer Common Bandwidth Package Attachment resource. Bandwidth Package Operation.
    /// 
    /// For information about NLB Loadbalancer Common Bandwidth Package Attachment and how to use it, see [What is Loadbalancer Common Bandwidth Package Attachment](https://www.alibabacloud.com/help/en/server-load-balancer/latest/nlb-instances-change).
    /// 
    /// &gt; **NOTE:** Available since v1.209.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var defaultResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultZones = AliCloud.Nlb.GetZones.Invoke();
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("defaultNetwork", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "10.4.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("defaultSwitch", new()
    ///     {
    ///         VswitchName = name,
    ///         CidrBlock = "10.4.0.0/24",
    ///         VpcId = defaultNetwork.Id,
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///     });
    /// 
    ///     var default1 = new AliCloud.Vpc.Switch("default1", new()
    ///     {
    ///         VswitchName = name,
    ///         CidrBlock = "10.4.1.0/24",
    ///         VpcId = defaultNetwork.Id,
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[1]?.Id),
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultLoadBalancer = new AliCloud.Nlb.LoadBalancer("defaultLoadBalancer", new()
    ///     {
    ///         LoadBalancerName = name,
    ///         ResourceGroupId = defaultResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0]),
    ///         LoadBalancerType = "Network",
    ///         AddressType = "Internet",
    ///         AddressIpVersion = "Ipv4",
    ///         VpcId = defaultNetwork.Id,
    ///         Tags = 
    ///         {
    ///             { "Created", "TF" },
    ///             { "For", "example" },
    ///         },
    ///         ZoneMappings = new[]
    ///         {
    ///             new AliCloud.Nlb.Inputs.LoadBalancerZoneMappingArgs
    ///             {
    ///                 VswitchId = defaultSwitch.Id,
    ///                 ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///             },
    ///             new AliCloud.Nlb.Inputs.LoadBalancerZoneMappingArgs
    ///             {
    ///                 VswitchId = default1.Id,
    ///                 ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[1]?.Id),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var defaultCommonBandwithPackage = new AliCloud.Vpc.CommonBandwithPackage("defaultCommonBandwithPackage", new()
    ///     {
    ///         Bandwidth = "2",
    ///         InternetChargeType = "PayByBandwidth",
    ///         BandwidthPackageName = name,
    ///         Description = name,
    ///     });
    /// 
    ///     var defaultLoadbalancerCommonBandwidthPackageAttachment = new AliCloud.Nlb.LoadbalancerCommonBandwidthPackageAttachment("defaultLoadbalancerCommonBandwidthPackageAttachment", new()
    ///     {
    ///         BandwidthPackageId = defaultCommonBandwithPackage.Id,
    ///         LoadBalancerId = defaultLoadBalancer.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// NLB Loadbalancer Common Bandwidth Package Attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:nlb/loadbalancerCommonBandwidthPackageAttachment:LoadbalancerCommonBandwidthPackageAttachment example &lt;load_balancer_id&gt;:&lt;bandwidth_package_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:nlb/loadbalancerCommonBandwidthPackageAttachment:LoadbalancerCommonBandwidthPackageAttachment")]
    public partial class LoadbalancerCommonBandwidthPackageAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the bound shared bandwidth package.
        /// </summary>
        [Output("bandwidthPackageId")]
        public Output<string> BandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// The ID of the network-based server load balancer instance.
        /// </summary>
        [Output("loadBalancerId")]
        public Output<string> LoadBalancerId { get; private set; } = null!;

        /// <summary>
        /// Network-based load balancing instance status. Value:, indicating that the instance listener will no longer forward traffic.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a LoadbalancerCommonBandwidthPackageAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadbalancerCommonBandwidthPackageAttachment(string name, LoadbalancerCommonBandwidthPackageAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:nlb/loadbalancerCommonBandwidthPackageAttachment:LoadbalancerCommonBandwidthPackageAttachment", name, args ?? new LoadbalancerCommonBandwidthPackageAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadbalancerCommonBandwidthPackageAttachment(string name, Input<string> id, LoadbalancerCommonBandwidthPackageAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:nlb/loadbalancerCommonBandwidthPackageAttachment:LoadbalancerCommonBandwidthPackageAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadbalancerCommonBandwidthPackageAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadbalancerCommonBandwidthPackageAttachment Get(string name, Input<string> id, LoadbalancerCommonBandwidthPackageAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadbalancerCommonBandwidthPackageAttachment(name, id, state, options);
        }
    }

    public sealed class LoadbalancerCommonBandwidthPackageAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the bound shared bandwidth package.
        /// </summary>
        [Input("bandwidthPackageId", required: true)]
        public Input<string> BandwidthPackageId { get; set; } = null!;

        /// <summary>
        /// The ID of the network-based server load balancer instance.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public Input<string> LoadBalancerId { get; set; } = null!;

        public LoadbalancerCommonBandwidthPackageAttachmentArgs()
        {
        }
        public static new LoadbalancerCommonBandwidthPackageAttachmentArgs Empty => new LoadbalancerCommonBandwidthPackageAttachmentArgs();
    }

    public sealed class LoadbalancerCommonBandwidthPackageAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the bound shared bandwidth package.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// The ID of the network-based server load balancer instance.
        /// </summary>
        [Input("loadBalancerId")]
        public Input<string>? LoadBalancerId { get; set; }

        /// <summary>
        /// Network-based load balancing instance status. Value:, indicating that the instance listener will no longer forward traffic.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public LoadbalancerCommonBandwidthPackageAttachmentState()
        {
        }
        public static new LoadbalancerCommonBandwidthPackageAttachmentState Empty => new LoadbalancerCommonBandwidthPackageAttachmentState();
    }
}
