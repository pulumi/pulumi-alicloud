// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nlb.Outputs
{

    [OutputType]
    public sealed class GetServerGroupsGroupHealthCheckResult
    {
        /// <summary>
        /// The backend port that is used for health checks.
        /// </summary>
        public readonly int HealthCheckConnectPort;
        /// <summary>
        /// The maximum timeout period of a health check response.
        /// </summary>
        public readonly int HealthCheckConnectTimeout;
        /// <summary>
        /// The domain name that is used for health checks.
        /// </summary>
        public readonly string HealthCheckDomain;
        /// <summary>
        /// Specifies whether to enable health checks.
        /// </summary>
        public readonly bool HealthCheckEnabled;
        /// <summary>
        /// The HTTP status codes returned for health checks.
        /// </summary>
        public readonly ImmutableArray<string> HealthCheckHttpCodes;
        /// <summary>
        /// The interval between two consecutive health checks.
        /// </summary>
        public readonly int HealthCheckInterval;
        /// <summary>
        /// The protocol that is used for health checks.
        /// </summary>
        public readonly string HealthCheckType;
        /// <summary>
        /// The path to which health check requests are sent.
        /// </summary>
        public readonly string HealthCheckUrl;
        /// <summary>
        /// The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy.
        /// </summary>
        public readonly int HealthyThreshold;
        /// <summary>
        /// The HTTP method that is used for health checks.
        /// </summary>
        public readonly string HttpCheckMethod;
        /// <summary>
        /// The number of times that a healthy backend server must consecutively fail health checks before it is declared unhealthy.
        /// </summary>
        public readonly int UnhealthyThreshold;

        [OutputConstructor]
        private GetServerGroupsGroupHealthCheckResult(
            int healthCheckConnectPort,

            int healthCheckConnectTimeout,

            string healthCheckDomain,

            bool healthCheckEnabled,

            ImmutableArray<string> healthCheckHttpCodes,

            int healthCheckInterval,

            string healthCheckType,

            string healthCheckUrl,

            int healthyThreshold,

            string httpCheckMethod,

            int unhealthyThreshold)
        {
            HealthCheckConnectPort = healthCheckConnectPort;
            HealthCheckConnectTimeout = healthCheckConnectTimeout;
            HealthCheckDomain = healthCheckDomain;
            HealthCheckEnabled = healthCheckEnabled;
            HealthCheckHttpCodes = healthCheckHttpCodes;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckType = healthCheckType;
            HealthCheckUrl = healthCheckUrl;
            HealthyThreshold = healthyThreshold;
            HttpCheckMethod = httpCheckMethod;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
