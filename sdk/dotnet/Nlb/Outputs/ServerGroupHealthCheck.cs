// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nlb.Outputs
{

    [OutputType]
    public sealed class ServerGroupHealthCheck
    {
        /// <summary>
        /// The port of the backend server for health checks. Valid values: **0** ~ **65535**. **0** indicates that the port of the backend server is used for health check.
        /// </summary>
        public readonly int? HealthCheckConnectPort;
        /// <summary>
        /// Maximum timeout for health check responses. Unit: seconds. Valid values: **1** ~ **300**.
        /// </summary>
        public readonly int? HealthCheckConnectTimeout;
        /// <summary>
        /// The domain name used for health check. Valid values:
        /// - **$SERVER_IP**: uses the intranet IP of the backend server.
        /// - **domain**: Specify a specific domain name. The length is limited to 1 to 80 characters. Only lowercase letters, numbers, dashes (-), and half-width periods (.) can be used.
        /// &gt; **NOTE:**  This parameter takes effect only when **HealthCheckType** is **HTTP**.
        /// </summary>
        public readonly string? HealthCheckDomain;
        /// <summary>
        /// Whether to enable health check. Valid values:
        /// - **true**: on.
        /// - **false**: closed.
        /// </summary>
        public readonly bool? HealthCheckEnabled;
        /// <summary>
        /// Health status return code. Multiple status codes are separated by commas (,). Valid values: **http\_2xx**, **http\_3xx**, **http\_4xx**, and **http\_5xx**.
        /// &gt; **NOTE:**  This parameter takes effect only when **HealthCheckType** is **HTTP**.
        /// </summary>
        public readonly ImmutableArray<string> HealthCheckHttpCodes;
        /// <summary>
        /// Time interval of health examination. Unit: seconds.Valid values: **5** ~ **50**.
        /// </summary>
        public readonly int? HealthCheckInterval;
        /// <summary>
        /// Health check protocol. Valid values: **TCP** or **HTTP**.
        /// </summary>
        public readonly string? HealthCheckType;
        /// <summary>
        /// Health check path.
        /// &gt; **NOTE:**  This parameter takes effect only when **HealthCheckType** is **HTTP**.
        /// </summary>
        public readonly string? HealthCheckUrl;
        /// <summary>
        /// After the health check is successful, the health check status of the backend server is determined from **failed** to **successful * *.Valid values: **2** to **10 * *.
        /// </summary>
        public readonly int? HealthyThreshold;
        /// <summary>
        /// The health check method. Valid values: **GET** or **HEAD**.
        /// &gt; **NOTE:**  This parameter takes effect only when **HealthCheckType** is **HTTP**.
        /// </summary>
        public readonly string? HttpCheckMethod;
        /// <summary>
        /// After the health check fails for many times in a row, the health check status of the backend server is determined from **Success** to **Failure**. Valid values: **2** to **10**.
        /// </summary>
        public readonly int? UnhealthyThreshold;

        [OutputConstructor]
        private ServerGroupHealthCheck(
            int? healthCheckConnectPort,

            int? healthCheckConnectTimeout,

            string? healthCheckDomain,

            bool? healthCheckEnabled,

            ImmutableArray<string> healthCheckHttpCodes,

            int? healthCheckInterval,

            string? healthCheckType,

            string? healthCheckUrl,

            int? healthyThreshold,

            string? httpCheckMethod,

            int? unhealthyThreshold)
        {
            HealthCheckConnectPort = healthCheckConnectPort;
            HealthCheckConnectTimeout = healthCheckConnectTimeout;
            HealthCheckDomain = healthCheckDomain;
            HealthCheckEnabled = healthCheckEnabled;
            HealthCheckHttpCodes = healthCheckHttpCodes;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckType = healthCheckType;
            HealthCheckUrl = healthCheckUrl;
            HealthyThreshold = healthyThreshold;
            HttpCheckMethod = httpCheckMethod;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
