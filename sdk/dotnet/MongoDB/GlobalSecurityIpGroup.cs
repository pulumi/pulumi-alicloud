// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.MongoDB
{
    /// <summary>
    /// Provides a Mongodb Global Security IP Group resource.
    /// 
    /// Whitelist Template Resources.
    /// 
    /// For information about Mongodb Global Security IP Group and how to use it, see [What is Global Security IP Group](https://next.api.alibabacloud.com/document/Dds/2015-12-01/CreateGlobalSecurityIPGroup).
    /// 
    /// &gt; **NOTE:** Available since v1.257.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraformexample";
    ///     var @default = new AliCloud.MongoDB.GlobalSecurityIpGroup("default", new()
    ///     {
    ///         GlobalIgName = name,
    ///         GlobalSecurityIpList = "192.168.1.1,192.168.1.2,192.168.1.3",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Mongodb Global Security IP Group can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:mongodb/globalSecurityIpGroup:GlobalSecurityIpGroup example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:mongodb/globalSecurityIpGroup:GlobalSecurityIpGroup")]
    public partial class GlobalSecurityIpGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the IP whitelist template.
        /// </summary>
        [Output("globalIgName")]
        public Output<string> GlobalIgName { get; private set; } = null!;

        /// <summary>
        /// The IP address in the whitelist template.
        /// 
        /// &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
        /// </summary>
        [Output("globalSecurityIpList")]
        public Output<string> GlobalSecurityIpList { get; private set; } = null!;

        /// <summary>
        /// The region ID of the resource
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalSecurityIpGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalSecurityIpGroup(string name, GlobalSecurityIpGroupArgs args, CustomResourceOptions? options = null)
            : base("alicloud:mongodb/globalSecurityIpGroup:GlobalSecurityIpGroup", name, args ?? new GlobalSecurityIpGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalSecurityIpGroup(string name, Input<string> id, GlobalSecurityIpGroupState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:mongodb/globalSecurityIpGroup:GlobalSecurityIpGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalSecurityIpGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalSecurityIpGroup Get(string name, Input<string> id, GlobalSecurityIpGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalSecurityIpGroup(name, id, state, options);
        }
    }

    public sealed class GlobalSecurityIpGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the IP whitelist template.
        /// </summary>
        [Input("globalIgName", required: true)]
        public Input<string> GlobalIgName { get; set; } = null!;

        /// <summary>
        /// The IP address in the whitelist template.
        /// 
        /// &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
        /// </summary>
        [Input("globalSecurityIpList", required: true)]
        public Input<string> GlobalSecurityIpList { get; set; } = null!;

        public GlobalSecurityIpGroupArgs()
        {
        }
        public static new GlobalSecurityIpGroupArgs Empty => new GlobalSecurityIpGroupArgs();
    }

    public sealed class GlobalSecurityIpGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the IP whitelist template.
        /// </summary>
        [Input("globalIgName")]
        public Input<string>? GlobalIgName { get; set; }

        /// <summary>
        /// The IP address in the whitelist template.
        /// 
        /// &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
        /// </summary>
        [Input("globalSecurityIpList")]
        public Input<string>? GlobalSecurityIpList { get; set; }

        /// <summary>
        /// The region ID of the resource
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        public GlobalSecurityIpGroupState()
        {
        }
        public static new GlobalSecurityIpGroupState Empty => new GlobalSecurityIpGroupState();
    }
}
