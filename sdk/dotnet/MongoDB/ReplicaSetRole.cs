// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.MongoDB
{
    /// <summary>
    /// Provides an Alicloud MongoDB replica set role resource to modify the connection string of the replica set.
    /// 
    /// For information about how to modify connection string of MongoDB, see [Modify Connection String](https://alibabacloud.com/help/en/mongodb/user-guide/change-the-endpoint-and-port-of-an-instance).
    /// 
    /// &gt; **NOTE:** Available since v1.248.0.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var @default = AliCloud.MongoDB.GetZones.Invoke();
    /// 
    ///     var index = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones)).Length.Apply(length =&gt; length - 1);
    /// 
    ///     var zoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones)[index].Id);
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         CidrBlock = "10.0.0.0/8",
    ///         VpcName = name,
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         ZoneId = zoneId,
    ///         CidrBlock = "10.0.0.0/24",
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.MongoDB.Instance("default", new()
    ///     {
    ///         EngineVersion = "4.4",
    ///         StorageType = "cloud_essd1",
    ///         VswitchId = defaultSwitch.Id,
    ///         DbInstanceStorage = 20,
    ///         VpcId = defaultNetwork.Id,
    ///         DbInstanceClass = "mdb.shard.4x.large.d",
    ///         StorageEngine = "WiredTiger",
    ///         NetworkType = "VPC",
    ///         ZoneId = zoneId,
    ///     });
    /// 
    ///     var defaultPublicNetworkAddress = new AliCloud.MongoDB.PublicNetworkAddress("default", new()
    ///     {
    ///         DbInstanceId = defaultInstance.Id,
    ///     });
    /// 
    ///     // modify private network address.
    ///     var @private = new AliCloud.MongoDB.ReplicaSetRole("private", new()
    ///     {
    ///         DbInstanceId = defaultInstance.Id,
    ///         RoleId = defaultInstance.ReplicaSets.Apply(replicaSets =&gt; replicaSets[0].RoleId),
    ///         ConnectionPrefix = "test-tf-private-change",
    ///         ConnectionPort = 3718,
    ///         NetworkType = "VPC",
    ///     });
    /// 
    ///     // modify public network address.
    ///     var @public = new AliCloud.MongoDB.ReplicaSetRole("public", new()
    ///     {
    ///         DbInstanceId = defaultInstance.Id,
    ///         RoleId = defaultPublicNetworkAddress.ReplicaSets.Apply(replicaSets =&gt; replicaSets[0].RoleId),
    ///         ConnectionPrefix = "test-tf-public-0",
    ///         ConnectionPort = 3719,
    ///         NetworkType = "Public",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MongoDB replica set role can be imported using the id, e.g. Composed of instance ID, network type and role ID with format `&lt;db_instance_id&gt;:&lt;network_type&gt;:&lt;role_id&gt;`.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:mongodb/replicaSetRole:ReplicaSetRole example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:mongodb/replicaSetRole:ReplicaSetRole")]
    public partial class ReplicaSetRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The connection address of the role.
        /// </summary>
        [Output("connectionDomain")]
        public Output<string> ConnectionDomain { get; private set; } = null!;

        /// <summary>
        /// The port of the connection string, will be computed if not specified.`
        /// </summary>
        [Output("connectionPort")]
        public Output<int> ConnectionPort { get; private set; } = null!;

        /// <summary>
        /// The prefix of the connection string, will be computed if not specified.
        /// </summary>
        [Output("connectionPrefix")]
        public Output<string> ConnectionPrefix { get; private set; } = null!;

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Output("dbInstanceId")]
        public Output<string> DbInstanceId { get; private set; } = null!;

        /// <summary>
        /// The network type of the connection string. Valid values:
        /// - `VPC`: private network address.
        /// - `Public`: public network address.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// The role of the related connection string.
        /// </summary>
        [Output("replicaSetRole")]
        public Output<string> ReplicaSetRoleOfRelatedConnectionString { get; private set; } = null!;

        /// <summary>
        /// The role ID in the replica set.
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;


        /// <summary>
        /// Create a ReplicaSetRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReplicaSetRole(string name, ReplicaSetRoleArgs args, CustomResourceOptions? options = null)
            : base("alicloud:mongodb/replicaSetRole:ReplicaSetRole", name, args ?? new ReplicaSetRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReplicaSetRole(string name, Input<string> id, ReplicaSetRoleState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:mongodb/replicaSetRole:ReplicaSetRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReplicaSetRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReplicaSetRole Get(string name, Input<string> id, ReplicaSetRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new ReplicaSetRole(name, id, state, options);
        }
    }

    public sealed class ReplicaSetRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The port of the connection string, will be computed if not specified.`
        /// </summary>
        [Input("connectionPort")]
        public Input<int>? ConnectionPort { get; set; }

        /// <summary>
        /// The prefix of the connection string, will be computed if not specified.
        /// </summary>
        [Input("connectionPrefix")]
        public Input<string>? ConnectionPrefix { get; set; }

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Input("dbInstanceId", required: true)]
        public Input<string> DbInstanceId { get; set; } = null!;

        /// <summary>
        /// The network type of the connection string. Valid values:
        /// - `VPC`: private network address.
        /// - `Public`: public network address.
        /// </summary>
        [Input("networkType", required: true)]
        public Input<string> NetworkType { get; set; } = null!;

        /// <summary>
        /// The role ID in the replica set.
        /// </summary>
        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        public ReplicaSetRoleArgs()
        {
        }
        public static new ReplicaSetRoleArgs Empty => new ReplicaSetRoleArgs();
    }

    public sealed class ReplicaSetRoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The connection address of the role.
        /// </summary>
        [Input("connectionDomain")]
        public Input<string>? ConnectionDomain { get; set; }

        /// <summary>
        /// The port of the connection string, will be computed if not specified.`
        /// </summary>
        [Input("connectionPort")]
        public Input<int>? ConnectionPort { get; set; }

        /// <summary>
        /// The prefix of the connection string, will be computed if not specified.
        /// </summary>
        [Input("connectionPrefix")]
        public Input<string>? ConnectionPrefix { get; set; }

        /// <summary>
        /// The instance ID.
        /// </summary>
        [Input("dbInstanceId")]
        public Input<string>? DbInstanceId { get; set; }

        /// <summary>
        /// The network type of the connection string. Valid values:
        /// - `VPC`: private network address.
        /// - `Public`: public network address.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The role of the related connection string.
        /// </summary>
        [Input("replicaSetRole")]
        public Input<string>? ReplicaSetRoleOfRelatedConnectionString { get; set; }

        /// <summary>
        /// The role ID in the replica set.
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        public ReplicaSetRoleState()
        {
        }
        public static new ReplicaSetRoleState Empty => new ReplicaSetRoleState();
    }
}
