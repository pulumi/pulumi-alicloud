// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.MaxCompute
{
    /// <summary>
    /// ## Import
    /// 
    /// Max Compute Quota can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:maxcompute/quota:Quota example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:maxcompute/quota:Quota")]
    public partial class Quota : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
        /// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
        /// </summary>
        [Output("commodityCode")]
        public Output<string> CommodityCode { get; private set; } = null!;

        /// <summary>
        /// Define quota rules when creating quotas, for example:{"CU":50,"OrdTime":"1:Month","autoRenew":false}.
        /// CU (minimum quota resource size is 50)
        /// OrdTime 1:Month/Year (1 means quantity: Month/Year is the unit)
        /// autoRenew (whether to enable automatic renewal)
        /// If PaymentType is PayAsYouGo, you do not need to fill in
        /// </summary>
        [Output("commodityData")]
        public Output<string?> CommodityData { get; private set; } = null!;

        /// <summary>
        /// Quota partial nickname, supports English letters and numbers, up to 24 characters
        /// 
        /// &gt; **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
        /// </summary>
        [Output("partNickName")]
        public Output<string?> PartNickName { get; private set; } = null!;

        /// <summary>
        /// Payment type. Valid values: Subscription/PayAsYouGo
        /// 
        /// &gt; **NOTE:** -- PayAsYouGo only needs to be opened once per region
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// Secondary Quota list
        /// 
        /// &gt; **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
        /// See `SubQuotaInfoList` below.
        /// </summary>
        [Output("subQuotaInfoLists")]
        public Output<ImmutableArray<Outputs.QuotaSubQuotaInfoList>> SubQuotaInfoLists { get; private set; } = null!;


        /// <summary>
        /// Create a Quota resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Quota(string name, QuotaArgs args, CustomResourceOptions? options = null)
            : base("alicloud:maxcompute/quota:Quota", name, args ?? new QuotaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Quota(string name, Input<string> id, QuotaState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:maxcompute/quota:Quota", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Quota resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Quota Get(string name, Input<string> id, QuotaState? state = null, CustomResourceOptions? options = null)
        {
            return new Quota(name, id, state, options);
        }
    }

    public sealed class QuotaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
        /// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
        /// </summary>
        [Input("commodityCode", required: true)]
        public Input<string> CommodityCode { get; set; } = null!;

        /// <summary>
        /// Define quota rules when creating quotas, for example:{"CU":50,"OrdTime":"1:Month","autoRenew":false}.
        /// CU (minimum quota resource size is 50)
        /// OrdTime 1:Month/Year (1 means quantity: Month/Year is the unit)
        /// autoRenew (whether to enable automatic renewal)
        /// If PaymentType is PayAsYouGo, you do not need to fill in
        /// </summary>
        [Input("commodityData")]
        public Input<string>? CommodityData { get; set; }

        /// <summary>
        /// Quota partial nickname, supports English letters and numbers, up to 24 characters
        /// 
        /// &gt; **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
        /// </summary>
        [Input("partNickName")]
        public Input<string>? PartNickName { get; set; }

        /// <summary>
        /// Payment type. Valid values: Subscription/PayAsYouGo
        /// 
        /// &gt; **NOTE:** -- PayAsYouGo only needs to be opened once per region
        /// </summary>
        [Input("paymentType", required: true)]
        public Input<string> PaymentType { get; set; } = null!;

        [Input("subQuotaInfoLists")]
        private InputList<Inputs.QuotaSubQuotaInfoListArgs>? _subQuotaInfoLists;

        /// <summary>
        /// Secondary Quota list
        /// 
        /// &gt; **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
        /// See `SubQuotaInfoList` below.
        /// </summary>
        public InputList<Inputs.QuotaSubQuotaInfoListArgs> SubQuotaInfoLists
        {
            get => _subQuotaInfoLists ?? (_subQuotaInfoLists = new InputList<Inputs.QuotaSubQuotaInfoListArgs>());
            set => _subQuotaInfoLists = value;
        }

        public QuotaArgs()
        {
        }
        public static new QuotaArgs Empty => new QuotaArgs();
    }

    public sealed class QuotaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
        /// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
        /// </summary>
        [Input("commodityCode")]
        public Input<string>? CommodityCode { get; set; }

        /// <summary>
        /// Define quota rules when creating quotas, for example:{"CU":50,"OrdTime":"1:Month","autoRenew":false}.
        /// CU (minimum quota resource size is 50)
        /// OrdTime 1:Month/Year (1 means quantity: Month/Year is the unit)
        /// autoRenew (whether to enable automatic renewal)
        /// If PaymentType is PayAsYouGo, you do not need to fill in
        /// </summary>
        [Input("commodityData")]
        public Input<string>? CommodityData { get; set; }

        /// <summary>
        /// Quota partial nickname, supports English letters and numbers, up to 24 characters
        /// 
        /// &gt; **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
        /// </summary>
        [Input("partNickName")]
        public Input<string>? PartNickName { get; set; }

        /// <summary>
        /// Payment type. Valid values: Subscription/PayAsYouGo
        /// 
        /// &gt; **NOTE:** -- PayAsYouGo only needs to be opened once per region
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        [Input("subQuotaInfoLists")]
        private InputList<Inputs.QuotaSubQuotaInfoListGetArgs>? _subQuotaInfoLists;

        /// <summary>
        /// Secondary Quota list
        /// 
        /// &gt; **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
        /// See `SubQuotaInfoList` below.
        /// </summary>
        public InputList<Inputs.QuotaSubQuotaInfoListGetArgs> SubQuotaInfoLists
        {
            get => _subQuotaInfoLists ?? (_subQuotaInfoLists = new InputList<Inputs.QuotaSubQuotaInfoListGetArgs>());
            set => _subQuotaInfoLists = value;
        }

        public QuotaState()
        {
        }
        public static new QuotaState Empty => new QuotaState();
    }
}
