// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.MaxCompute
{
    /// <summary>
    /// Provides a Max Compute Quota Plan resource.
    /// 
    /// For information about Max Compute Quota Plan and how to use it, see [What is Quota Plan](https://www.alibabacloud.com/help/en/).
    /// 
    /// &gt; **NOTE:** Available since v1.242.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var elasticReservedCu = config.Get("elasticReservedCu") ?? "50";
    ///     var @default = new AliCloud.MaxCompute.QuotaPlan("default", new()
    ///     {
    ///         Nickname = "os_terrform_p",
    ///         Quota = new AliCloud.MaxCompute.Inputs.QuotaPlanQuotaArgs
    ///         {
    ///             Parameter = new AliCloud.MaxCompute.Inputs.QuotaPlanQuotaParameterArgs
    ///             {
    ///                 ElasticReservedCu = elasticReservedCu,
    ///             },
    ///             SubQuotaInfoLists = new[]
    ///             {
    ///                 new AliCloud.MaxCompute.Inputs.QuotaPlanQuotaSubQuotaInfoListArgs
    ///                 {
    ///                     NickName = "sub_quota",
    ///                     Parameter = new AliCloud.MaxCompute.Inputs.QuotaPlanQuotaSubQuotaInfoListParameterArgs
    ///                     {
    ///                         MinCu = 0,
    ///                         MaxCu = 20,
    ///                         ElasticReservedCu = elasticReservedCu,
    ///                     },
    ///                 },
    ///                 new AliCloud.MaxCompute.Inputs.QuotaPlanQuotaSubQuotaInfoListArgs
    ///                 {
    ///                     NickName = "os_terrform",
    ///                     Parameter = new AliCloud.MaxCompute.Inputs.QuotaPlanQuotaSubQuotaInfoListParameterArgs
    ///                     {
    ///                         MinCu = 50,
    ///                         MaxCu = 50,
    ///                         ElasticReservedCu = 0,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         PlanName = "quota_plan",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Max Compute Quota Plan can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:maxcompute/quotaPlan:QuotaPlan example &lt;nickname&gt;:&lt;plan_name&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:maxcompute/quotaPlan:QuotaPlan")]
    public partial class QuotaPlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to take effect immediately. “Valid values: true”  
        /// .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
        /// </summary>
        [Output("isEffective")]
        public Output<bool?> IsEffective { get; private set; } = null!;

        /// <summary>
        /// Quota Name
        /// </summary>
        [Output("nickname")]
        public Output<string> Nickname { get; private set; } = null!;

        /// <summary>
        /// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
        /// </summary>
        [Output("planName")]
        public Output<string> PlanName { get; private set; } = null!;

        /// <summary>
        /// Quota property See `quota` below.
        /// </summary>
        [Output("quota")]
        public Output<Outputs.QuotaPlanQuota?> Quota { get; private set; } = null!;


        /// <summary>
        /// Create a QuotaPlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QuotaPlan(string name, QuotaPlanArgs args, CustomResourceOptions? options = null)
            : base("alicloud:maxcompute/quotaPlan:QuotaPlan", name, args ?? new QuotaPlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QuotaPlan(string name, Input<string> id, QuotaPlanState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:maxcompute/quotaPlan:QuotaPlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QuotaPlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QuotaPlan Get(string name, Input<string> id, QuotaPlanState? state = null, CustomResourceOptions? options = null)
        {
            return new QuotaPlan(name, id, state, options);
        }
    }

    public sealed class QuotaPlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to take effect immediately. “Valid values: true”  
        /// .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
        /// </summary>
        [Input("isEffective")]
        public Input<bool>? IsEffective { get; set; }

        /// <summary>
        /// Quota Name
        /// </summary>
        [Input("nickname", required: true)]
        public Input<string> Nickname { get; set; } = null!;

        /// <summary>
        /// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
        /// </summary>
        [Input("planName", required: true)]
        public Input<string> PlanName { get; set; } = null!;

        /// <summary>
        /// Quota property See `quota` below.
        /// </summary>
        [Input("quota")]
        public Input<Inputs.QuotaPlanQuotaArgs>? Quota { get; set; }

        public QuotaPlanArgs()
        {
        }
        public static new QuotaPlanArgs Empty => new QuotaPlanArgs();
    }

    public sealed class QuotaPlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to take effect immediately. “Valid values: true”  
        /// .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
        /// </summary>
        [Input("isEffective")]
        public Input<bool>? IsEffective { get; set; }

        /// <summary>
        /// Quota Name
        /// </summary>
        [Input("nickname")]
        public Input<string>? Nickname { get; set; }

        /// <summary>
        /// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
        /// </summary>
        [Input("planName")]
        public Input<string>? PlanName { get; set; }

        /// <summary>
        /// Quota property See `quota` below.
        /// </summary>
        [Input("quota")]
        public Input<Inputs.QuotaPlanQuotaGetArgs>? Quota { get; set; }

        public QuotaPlanState()
        {
        }
        public static new QuotaPlanState Empty => new QuotaPlanState();
    }
}
