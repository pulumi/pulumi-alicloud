// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ServiceCatalog
{
    /// <summary>
    /// Provides a Service Catalog Principal Portfolio Association resource.
    /// 
    /// Principal portfolio association.
    /// 
    /// For information about Service Catalog Principal Portfolio Association and how to use it, see [What is Principal Portfolio Association](https://www.alibabacloud.com/help/en/service-catalog/developer-reference/api-servicecatalog-2021-09-01-associateprincipalwithportfolio).
    /// 
    /// &gt; **NOTE:** Available since v1.230.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultDaXVxI = new AliCloud.ServiceCatalog.Portfolio("defaultDaXVxI", new()
    ///     {
    ///         ProviderName = name,
    ///         Description = "desc",
    ///         PortfolioName = name,
    ///     });
    /// 
    ///     var default48JHf4 = new AliCloud.Ram.Role("default48JHf4", new()
    ///     {
    ///         Name = name,
    ///         Document = @"    {
    ///         ""Statement"": [
    ///         {
    ///             ""Action"": ""sts:AssumeRole"",
    ///             ""Effect"": ""Allow"",
    ///             ""Principal"": {
    ///             ""Service"": [
    ///                 ""emr.aliyuncs.com"",
    ///                 ""ecs.aliyuncs.com""
    ///             ]
    ///             }
    ///         }
    ///         ],
    ///         ""Version"": ""1""
    ///     }
    /// ",
    ///         Description = "this is a role test.",
    ///         Force = true,
    ///     });
    /// 
    ///     var @default = new AliCloud.ServiceCatalog.PrincipalPortfolioAssociation("default", new()
    ///     {
    ///         PrincipalId = default48JHf4.Id,
    ///         PortfolioId = defaultDaXVxI.Id,
    ///         PrincipalType = "RamRole",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Service Catalog Principal Portfolio Association can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation example &lt;principal_id&gt;:&lt;principal_type&gt;:&lt;portfolio_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation")]
    public partial class PrincipalPortfolioAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Product Portfolio ID
        /// </summary>
        [Output("portfolioId")]
        public Output<string> PortfolioId { get; private set; } = null!;

        /// <summary>
        /// RAM entity ID
        /// </summary>
        [Output("principalId")]
        public Output<string> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// RAM entity type
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;


        /// <summary>
        /// Create a PrincipalPortfolioAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrincipalPortfolioAssociation(string name, PrincipalPortfolioAssociationArgs args, CustomResourceOptions? options = null)
            : base("alicloud:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation", name, args ?? new PrincipalPortfolioAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrincipalPortfolioAssociation(string name, Input<string> id, PrincipalPortfolioAssociationState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrincipalPortfolioAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrincipalPortfolioAssociation Get(string name, Input<string> id, PrincipalPortfolioAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new PrincipalPortfolioAssociation(name, id, state, options);
        }
    }

    public sealed class PrincipalPortfolioAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Product Portfolio ID
        /// </summary>
        [Input("portfolioId", required: true)]
        public Input<string> PortfolioId { get; set; } = null!;

        /// <summary>
        /// RAM entity ID
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// RAM entity type
        /// </summary>
        [Input("principalType", required: true)]
        public Input<string> PrincipalType { get; set; } = null!;

        public PrincipalPortfolioAssociationArgs()
        {
        }
        public static new PrincipalPortfolioAssociationArgs Empty => new PrincipalPortfolioAssociationArgs();
    }

    public sealed class PrincipalPortfolioAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Product Portfolio ID
        /// </summary>
        [Input("portfolioId")]
        public Input<string>? PortfolioId { get; set; }

        /// <summary>
        /// RAM entity ID
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// RAM entity type
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        public PrincipalPortfolioAssociationState()
        {
        }
        public static new PrincipalPortfolioAssociationState Empty => new PrincipalPortfolioAssociationState();
    }
}
