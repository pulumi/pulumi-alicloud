// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.ServiceCatalog
{
    public static class GetProductAsEndUsers
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.ServiceCatalog.GetProductAsEndUsers.Invoke(new()
        ///     {
        ///         NameRegex = "ram模板创建",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudServiceCatalogProductAsEndUserExampleId"] = @default.Apply(@default =&gt; @default.Apply(getProductAsEndUsersResult =&gt; getProductAsEndUsersResult.Users[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProductAsEndUsersResult> InvokeAsync(GetProductAsEndUsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProductAsEndUsersResult>("alicloud:servicecatalog/getProductAsEndUsers:getProductAsEndUsers", args ?? new GetProductAsEndUsersArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = AliCloud.ServiceCatalog.GetProductAsEndUsers.Invoke(new()
        ///     {
        ///         NameRegex = "ram模板创建",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudServiceCatalogProductAsEndUserExampleId"] = @default.Apply(@default =&gt; @default.Apply(getProductAsEndUsersResult =&gt; getProductAsEndUsersResult.Users[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProductAsEndUsersResult> Invoke(GetProductAsEndUsersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProductAsEndUsersResult>("alicloud:servicecatalog/getProductAsEndUsers:getProductAsEndUsers", args ?? new GetProductAsEndUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductAsEndUsersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Product As End User IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by product name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("sortBy")]
        public string? SortBy { get; set; }

        [Input("sortOrder")]
        public string? SortOrder { get; set; }

        public GetProductAsEndUsersArgs()
        {
        }
        public static new GetProductAsEndUsersArgs Empty => new GetProductAsEndUsersArgs();
    }

    public sealed class GetProductAsEndUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Product As End User IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by product name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("sortBy")]
        public Input<string>? SortBy { get; set; }

        [Input("sortOrder")]
        public Input<string>? SortOrder { get; set; }

        public GetProductAsEndUsersInvokeArgs()
        {
        }
        public static new GetProductAsEndUsersInvokeArgs Empty => new GetProductAsEndUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetProductAsEndUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Product As End User IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        public readonly string? SortBy;
        public readonly string? SortOrder;
        /// <summary>
        /// A list of Product As End User Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProductAsEndUsersUserResult> Users;

        [OutputConstructor]
        private GetProductAsEndUsersResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            string? sortBy,

            string? sortOrder,

            ImmutableArray<Outputs.GetProductAsEndUsersUserResult> users)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            SortBy = sortBy;
            SortOrder = sortOrder;
            Users = users;
        }
    }
}
