// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS
{
    public static class GetClusterCredential
    {
        /// <summary>
        /// This data source provides Container Service cluster credential on Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in v1.187.0+
        /// 
        /// &gt; **NOTE:** This datasource can be used on all kinds of ACK clusters, including managed clusters, imported kubernetes clusters, serverless clusters and edge clusters. Please make sure that the target cluster is not in the failed state before using this datasource, since the api server of clusters in the failed state cannot be accessed.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var auth = AliCloud.CS.GetClusterCredential.Invoke(new()
        ///     {
        ///         ClusterId = "cluster-id",
        ///         TemporaryDurationMinutes = 60,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetClusterCredentialResult> InvokeAsync(GetClusterCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterCredentialResult>("alicloud:cs/getClusterCredential:getClusterCredential", args ?? new GetClusterCredentialArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Container Service cluster credential on Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in v1.187.0+
        /// 
        /// &gt; **NOTE:** This datasource can be used on all kinds of ACK clusters, including managed clusters, imported kubernetes clusters, serverless clusters and edge clusters. Please make sure that the target cluster is not in the failed state before using this datasource, since the api server of clusters in the failed state cannot be accessed.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var auth = AliCloud.CS.GetClusterCredential.Invoke(new()
        ///     {
        ///         ClusterId = "cluster-id",
        ///         TemporaryDurationMinutes = 60,
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetClusterCredentialResult> Invoke(GetClusterCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterCredentialResult>("alicloud:cs/getClusterCredential:getClusterCredential", args ?? new GetClusterCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of target cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// File name where to save the returned KubeConfig (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Automatic expiration time of the returned credential. The valid value between `15` and `4320`, in minutes. When this field is omitted, the expiration time will be determined by the system automatically and the result will be in the attributed field `expiration`.
        /// </summary>
        [Input("temporaryDurationMinutes")]
        public int? TemporaryDurationMinutes { get; set; }

        public GetClusterCredentialArgs()
        {
        }
        public static new GetClusterCredentialArgs Empty => new GetClusterCredentialArgs();
    }

    public sealed class GetClusterCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of target cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// File name where to save the returned KubeConfig (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Automatic expiration time of the returned credential. The valid value between `15` and `4320`, in minutes. When this field is omitted, the expiration time will be determined by the system automatically and the result will be in the attributed field `expiration`.
        /// </summary>
        [Input("temporaryDurationMinutes")]
        public Input<int>? TemporaryDurationMinutes { get; set; }

        public GetClusterCredentialInvokeArgs()
        {
        }
        public static new GetClusterCredentialInvokeArgs Empty => new GetClusterCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterCredentialResult
    {
        /// <summary>
        /// (Available in 1.105.0+) Nested attribute containing certificate authority data for your cluster.
        /// </summary>
        public readonly Outputs.GetClusterCredentialCertificateAuthorityResult CertificateAuthority;
        /// <summary>
        /// The id of target cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The name of target cluster.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// Expiration time of kube config. Format: UTC time in rfc3339.
        /// </summary>
        public readonly string Expiration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Sensitive) The kube config to use to authenticate with the cluster.
        /// </summary>
        public readonly string KubeConfig;
        public readonly string? OutputFile;
        public readonly int? TemporaryDurationMinutes;

        [OutputConstructor]
        private GetClusterCredentialResult(
            Outputs.GetClusterCredentialCertificateAuthorityResult certificateAuthority,

            string clusterId,

            string clusterName,

            string expiration,

            string id,

            string kubeConfig,

            string? outputFile,

            int? temporaryDurationMinutes)
        {
            CertificateAuthority = certificateAuthority;
            ClusterId = clusterId;
            ClusterName = clusterName;
            Expiration = expiration;
            Id = id;
            KubeConfig = kubeConfig;
            OutputFile = outputFile;
            TemporaryDurationMinutes = temporaryDurationMinutes;
        }
    }
}
