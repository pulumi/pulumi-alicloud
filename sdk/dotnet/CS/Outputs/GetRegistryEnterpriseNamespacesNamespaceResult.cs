// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS.Outputs
{

    [OutputType]
    public sealed class GetRegistryEnterpriseNamespacesNamespaceResult
    {
        /// <summary>
        /// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
        /// </summary>
        public readonly bool AutoCreate;
        /// <summary>
        /// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
        /// </summary>
        public readonly string DefaultVisibility;
        /// <summary>
        /// ID of Container Registry Enterprise Edition namespace. It formats as `&lt;instance_id&gt;:&lt;namespace_name&gt;`. Before 1.161.0, it is a namespace uuid.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of Container Registry Enterprise Edition instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Name of Container Registry Enterprise Edition namespace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Container Registry Enterprise Edition namespace id. It is a uuid.
        /// </summary>
        public readonly string NamespaceId;
        /// <summary>
        /// Name of Container Registry Enterprise Edition namespace.
        /// </summary>
        public readonly string NamespaceName;

        [OutputConstructor]
        private GetRegistryEnterpriseNamespacesNamespaceResult(
            bool autoCreate,

            string defaultVisibility,

            string id,

            string instanceId,

            string name,

            string namespaceId,

            string namespaceName)
        {
            AutoCreate = autoCreate;
            DefaultVisibility = defaultVisibility;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            NamespaceId = namespaceId;
            NamespaceName = namespaceName;
        }
    }
}
