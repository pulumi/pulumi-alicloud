// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS.Outputs
{

    [OutputType]
    public sealed class GetServerlessKubernetesClustersClusterResult
    {
        /// <summary>
        /// Map of serverless cluster connection information. It contains several attributes to `Block Connections`.
        /// </summary>
        public readonly Outputs.GetServerlessKubernetesClustersClusterConnectionsResult Connections;
        /// <summary>
        /// Whether the cluster support delete protection.
        /// </summary>
        public readonly bool DeletionProtection;
        public readonly bool EndpointPublicAccessEnabled;
        /// <summary>
        /// The ID of the container cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the container cluster.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ID of nat gateway used to launch kubernetes cluster.
        /// </summary>
        public readonly string NatGatewayId;
        /// <summary>
        /// The ID of security group where the current cluster  is located.
        /// </summary>
        public readonly string SecurityGroupId;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The ID of VPC where the current cluster is located.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The ID of vSwitch where the current cluster is located.
        /// </summary>
        public readonly string VswitchId;

        [OutputConstructor]
        private GetServerlessKubernetesClustersClusterResult(
            Outputs.GetServerlessKubernetesClustersClusterConnectionsResult connections,

            bool deletionProtection,

            bool endpointPublicAccessEnabled,

            string id,

            string name,

            string natGatewayId,

            string securityGroupId,

            ImmutableDictionary<string, string> tags,

            string vpcId,

            string vswitchId)
        {
            Connections = connections;
            DeletionProtection = deletionProtection;
            EndpointPublicAccessEnabled = endpointPublicAccessEnabled;
            Id = id;
            Name = name;
            NatGatewayId = natGatewayId;
            SecurityGroupId = securityGroupId;
            Tags = tags;
            VpcId = vpcId;
            VswitchId = vswitchId;
        }
    }
}
