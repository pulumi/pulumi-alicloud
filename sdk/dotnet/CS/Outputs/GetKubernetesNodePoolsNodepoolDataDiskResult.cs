// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS.Outputs
{

    [OutputType]
    public sealed class GetKubernetesNodePoolsNodepoolDataDiskResult
    {
        /// <summary>
        /// Whether to automatically mount the data disk. Valid values: true and false.
        /// </summary>
        public readonly string AutoFormat;
        /// <summary>
        /// The ID of the automatic snapshot policy that you want to apply to the system disk.
        /// </summary>
        public readonly string AutoSnapshotPolicyId;
        /// <summary>
        /// Whether the data disk is enabled with Burst (performance Burst). This is configured when the disk type is cloud_auto.
        /// </summary>
        public readonly bool BurstingEnabled;
        /// <summary>
        /// The type of data disk. Default value: `cloud_efficiency`. Valid values:- `cloud`: basic disk.- `cloud_efficiency`: ultra disk.- `cloud_ssd`: standard SSD.- `cloud_essd`: Enterprise SSD (ESSD).- `cloud_auto`: ESSD AutoPL disk.- `cloud_essd_entry`: ESSD Entry disk.- `elastic_ephemeral_disk_premium`: premium elastic ephemeral disk.- `elastic_ephemeral_disk_standard`: standard elastic ephemeral disk.
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// The mount target of data disk N. Valid values of N: 1 to 16. If you do not specify this parameter, the system automatically assigns a mount target when Auto Scaling creates ECS instances. The name of the mount target ranges from /dev/xvdb to /dev/xvdz.
        /// </summary>
        public readonly string Device;
        /// <summary>
        /// Specifies whether to encrypt data disks. Valid values: true and false. Default to `false`.
        /// </summary>
        public readonly string Encrypted;
        /// <summary>
        /// The type of the mounted file system. Works when auto_format is true. Optional value: `ext4`, `xfs`.
        /// </summary>
        public readonly string FileSystem;
        /// <summary>
        /// The kms key id used to encrypt the data disk. It takes effect when `encrypted` is true.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// The Mount path. Works when auto_format is true.
        /// </summary>
        public readonly string MountTarget;
        /// <summary>
        /// The length is 2~128 English or Chinese characters. It must start with an uppercase or lowr letter or a Chinese character and cannot start with http:// or https. Can contain numbers, colons (:), underscores (_), or dashes (-). It will be overwritten if auto_format is set.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Worker node data disk performance level, when `category` values `cloud_essd`, the optional values are `PL0`, `PL1`, `PL2` or `PL3`, but the specific performance level is related to the disk capacity. For more information, see [Enhanced SSDs](https://www.alibabacloud.com/help/doc-detail/122389.htm). Default is `PL1`.
        /// </summary>
        public readonly string PerformanceLevel;
        /// <summary>
        /// The read/write IOPS preconfigured for the data disk, which is configured when the disk type is cloud_auto.
        /// </summary>
        public readonly int ProvisionedIops;
        /// <summary>
        /// The size of a data disk, Its valid value range [40~32768] in GB. Default to `40`.
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// The ID of the snapshot that you want to use to create data disk N. Valid values of N: 1 to 16. If you specify this parameter, DataDisk.N.Size is ignored. The size of the disk is the same as the size of the specified snapshot. If you specify a snapshot that is created on or before July 15, 2013, the operation fails and InvalidSnapshot.TooOld is returned.
        /// </summary>
        public readonly string SnapshotId;

        [OutputConstructor]
        private GetKubernetesNodePoolsNodepoolDataDiskResult(
            string autoFormat,

            string autoSnapshotPolicyId,

            bool burstingEnabled,

            string category,

            string device,

            string encrypted,

            string fileSystem,

            string kmsKeyId,

            string mountTarget,

            string name,

            string performanceLevel,

            int provisionedIops,

            int size,

            string snapshotId)
        {
            AutoFormat = autoFormat;
            AutoSnapshotPolicyId = autoSnapshotPolicyId;
            BurstingEnabled = burstingEnabled;
            Category = category;
            Device = device;
            Encrypted = encrypted;
            FileSystem = fileSystem;
            KmsKeyId = kmsKeyId;
            MountTarget = mountTarget;
            Name = name;
            PerformanceLevel = performanceLevel;
            ProvisionedIops = provisionedIops;
            Size = size;
            SnapshotId = snapshotId;
        }
    }
}
