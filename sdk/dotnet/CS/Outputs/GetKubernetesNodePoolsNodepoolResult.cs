// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS.Outputs
{

    [OutputType]
    public sealed class GetKubernetesNodePoolsNodepoolResult
    {
        /// <summary>
        /// Whether to enable automatic renewal for nodes in the node pool takes effect only when `instance_charge_type` is set to `PrePaid`. Default value: `false`. Valid values:- `true`: Automatic renewal. - `false`: Do not renew automatically.
        /// </summary>
        public readonly bool AutoRenew;
        /// <summary>
        /// The automatic renewal period of nodes in the node pool takes effect only when you select Prepaid and Automatic Renewal, and is a required value. When `PeriodUnit = Month`, the value range is {1, 2, 3, 6, 12}. Default value: 1.
        /// </summary>
        public readonly int AutoRenewPeriod;
        /// <summary>
        /// Whether enable worker node to support cis security reinforcement, its valid value `true` or `false`. Default to `false` and apply to AliyunLinux series. Use `security_hardening_os` instead.
        /// </summary>
        public readonly bool CisEnabled;
        /// <summary>
        /// Specifies whether to automatically create pay-as-you-go instances to meet the required number of ECS instances if preemptible instances cannot be created due to reasons such as cost or insufficient inventory. This parameter takes effect when you set `multi_az_policy` to `COST_OPTIMIZED`. Valid values: `true`: automatically creates pay-as-you-go instances to meet the required number of ECS instances if preemptible instances cannot be created. `false`: does not create pay-as-you-go instances to meet the required number of ECS instances if preemptible instances cannot be created.
        /// </summary>
        public readonly bool CompensateWithOnDemand;
        /// <summary>
        /// Node CPU management policies. Default value: `none`. When the cluster version is 1.12.6 or later, the following two policies are supported:- `static`: allows pods with certain resource characteristics on the node to enhance its CPU affinity and exclusivity.- `none`: Enables the existing default CPU affinity scheme.
        /// </summary>
        public readonly string CpuPolicy;
        /// <summary>
        /// Configure the data disk of the node in the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolDataDiskResult> DataDisks;
        /// <summary>
        /// The deployment set of node pool. Specify the deploymentSet to ensure that the nodes in the node pool can be distributed on different physical machines.
        /// </summary>
        public readonly string DeploymentSetId;
        /// <summary>
        /// Number of expected nodes in the node pool.
        /// </summary>
        public readonly string DesiredSize;
        /// <summary>
        /// The custom image ID. The system-provided image is used by default.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The operating system image type and the `platform` parameter can be selected from the following values:- `AliyunLinux` : Alinux2 image.- `AliyunLinux3` : Alinux3 image.- `AliyunLinux3Arm64` : Alinux3 mirror ARM version.- `AliyunLinuxUEFI` : Alinux2 Image UEFI version.- `CentOS` : CentOS image.- `Windows` : Windows image.- `WindowsCore` : WindowsCore image.- `ContainerOS` : container-optimized image.- `Ubuntu`: Ubuntu image.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// Whether to install cloud monitoring on the ECS node. After installation, you can view the monitoring information of the created ECS instance in the cloud monitoring console and recommend enable it. Default value: `false`. Valid values:- `true` : install cloud monitoring on the ECS node.- `false` : does not install cloud monitoring on the ECS node.
        /// </summary>
        public readonly bool InstallCloudMonitor;
        /// <summary>
        /// Node payment type. Valid values: `PostPaid`, `PrePaid`, default is `PostPaid`. If value is `PrePaid`, the arguments `period`, `period_unit`, `auto_renew` and `auto_renew_period` are required.
        /// </summary>
        public readonly string InstanceChargeType;
        /// <summary>
        /// In the node instance specification list, you can select multiple instance specifications as alternatives. When each node is created, it will try to purchase from the first specification until it is created successfully. The final purchased instance specifications may vary with inventory changes.
        /// </summary>
        public readonly ImmutableArray<string> InstanceTypes;
        /// <summary>
        /// The billing method for network usage. Valid values `PayByBandwidth` and `PayByTraffic`. Conflict with `eip_internet_charge_type`, EIP and public network IP can only choose one.
        /// </summary>
        public readonly string InternetChargeType;
        /// <summary>
        /// The maximum bandwidth of the public IP address of the node. The unit is Mbps(Mega bit per second). The value range is:\[1,100\]
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// The name of the key pair. When the node pool is a managed node pool, only `key_name` is supported.
        /// </summary>
        public readonly string KeyName;
        /// <summary>
        /// Kubelet configuration parameters for worker nodes. See `kubelet_configuration` below. More information in [Kubelet Configuration](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/).
        /// </summary>
        public readonly Outputs.GetKubernetesNodePoolsNodepoolKubeletConfigurationResult KubeletConfiguration;
        /// <summary>
        /// A List of Kubernetes labels to assign to the nodes . Only labels that are applied with the ACK API are managed by this argument. Detailed below. More information in [Labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolLabelResult> Labels;
        /// <summary>
        /// Whether the ECS instance is logged on as a ecs-user user. Valid value: `true` and `false`.
        /// </summary>
        public readonly bool LoginAsNonRoot;
        /// <summary>
        /// Managed node pool configuration.
        /// </summary>
        public readonly Outputs.GetKubernetesNodePoolsNodepoolManagementResult Management;
        /// <summary>
        /// The scaling policy for ECS instances in a multi-zone scaling group. Valid value: `PRIORITY`, `COST_OPTIMIZED` and `BALANCE`. `PRIORITY`: scales the capacity according to the virtual switches you define (VSwitchIds.N). When an ECS instance cannot be created in the zone where the higher-priority vSwitch is located, the next-priority vSwitch is automatically used to create an ECS instance. `COST_OPTIMIZED`: try to create by vCPU unit price from low to high. When the scaling configuration is configured with multiple instances of preemptible billing, preemptible instances are created first. You can continue to use the `CompensateWithOnDemand` parameter to specify whether to automatically try to create a preemptible instance by paying for it. It takes effect only when the scaling configuration has multi-instance specifications or preemptible instances. `BALANCE`: distributes ECS instances evenly among the multi-zone specified by the scaling group. If the zones become unbalanced due to insufficient inventory, you can use the API RebalanceInstances to balance resources.
        /// </summary>
        public readonly string MultiAzPolicy;
        /// <summary>
        /// Each node name consists of a prefix, its private network IP, and a suffix, separated by commas. The input format is `customized,,ip,`.- The prefix and suffix can be composed of one or more parts separated by '.', each part can use lowercase letters, numbers and '-', and the beginning and end of the node name must be lowercase letters and numbers.- The node IP address is the complete private IP address of the node.- For example, if the string `customized,aliyun,ip,com` is passed in (where 'customized' and 'ip' are fixed strings, 'aliyun' is the prefix, and 'com' is the suffix), the name of the node is `aliyun192.168.xxx.xxxcom`.
        /// </summary>
        public readonly string NodeNameMode;
        /// <summary>
        /// The ID of node pool.
        /// </summary>
        public readonly string NodePoolId;
        /// <summary>
        /// The name of node pool.
        /// </summary>
        public readonly string NodePoolName;
        /// <summary>
        /// The minimum number of pay-as-you-go instances that must be kept in the scaling group. Valid values: 0 to 1000. If the number of pay-as-you-go instances is less than the value of this parameter, Auto Scaling preferably creates pay-as-you-go instances.
        /// </summary>
        public readonly string OnDemandBaseCapacity;
        /// <summary>
        /// The percentage of pay-as-you-go instances among the extra instances that exceed the number specified by `on_demand_base_capacity`. Valid values: 0 to 100.
        /// </summary>
        public readonly string OnDemandPercentageAboveBaseCapacity;
        /// <summary>
        /// The password of ssh login. You have to specify one of `password` and `key_name` fields. The password rule is 8 to 30 characters and contains at least three items (upper and lower case letters, numbers, and special symbols).
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Node payment period. Its valid value is one of {1, 2, 3, 6, 12}.
        /// </summary>
        public readonly int Period;
        /// <summary>
        /// Node payment period unit, valid value: `Month`. Default is `Month`.
        /// </summary>
        public readonly string PeriodUnit;
        /// <summary>
        /// Operating system release, using `image_type` instead.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// Node pre custom data, base64-encoded, the script executed before the node is initialized.
        /// </summary>
        public readonly string PreUserData;
        /// <summary>
        /// Private node pool configuration.
        /// </summary>
        public readonly Outputs.GetKubernetesNodePoolsNodepoolPrivatePoolOptionsResult PrivatePoolOptions;
        /// <summary>
        /// The name of the Worker RAM role.* If it is empty, the default Worker RAM role created in the cluster will be used.* If the specified RAM role is not empty, the specified RAM role must be a **Common Service role**, and its **trusted service** configuration must be **cloud server**. For more information, see [Create a common service role](https://help.aliyun.com/document_detail/116800.html). If the specified RAM role is not the default Worker RAM role created in the cluster, the role name cannot start with 'KubernetesMasterRole-'or 'KubernetesWorkerRole.&gt; **NOTE:**  This parameter is only supported for ACK-managed clusters of 1.22 or later versions.
        /// </summary>
        public readonly string RamRoleName;
        /// <summary>
        /// The list of RDS instances.
        /// </summary>
        public readonly ImmutableArray<string> RdsInstances;
        /// <summary>
        /// The ID of the resource group
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// The runtime name of containers. If not set, the cluster runtime will be used as the node pool runtime. If you select another container runtime, see [Comparison of Docker, containerd, and Sandboxed-Container](https://www.alibabacloud.com/help/doc-detail/160313.htm).
        /// </summary>
        public readonly string RuntimeName;
        /// <summary>
        /// The runtime version of containers. If not set, the cluster runtime will be used as the node pool runtime.
        /// </summary>
        public readonly string RuntimeVersion;
        /// <summary>
        /// Automatic scaling configuration.
        /// </summary>
        public readonly Outputs.GetKubernetesNodePoolsNodepoolScalingConfigResult ScalingConfig;
        /// <summary>
        /// The ID of the scaling group.
        /// </summary>
        public readonly string ScalingGroupId;
        /// <summary>
        /// Scaling group mode, default value: `release`. Valid values:- `release`: in the standard mode, scaling is performed by creating and releasing ECS instances based on the usage of the application resource value.- `recycle`: in the speed mode, scaling is performed through creation, shutdown, and startup to increase the speed of scaling again (computing resources are not charged during shutdown, only storage fees are charged, except for local disk models).
        /// </summary>
        public readonly string ScalingPolicy;
        /// <summary>
        /// The security group ID of the node pool. This field has been replaced by `security_group_ids`, please use the `security_group_ids` field instead.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// Multiple security groups can be configured for a node pool. If both `security_group_ids` and `security_group_id` are configured, `security_group_ids` takes effect. This field cannot be modified.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// Alibaba Cloud OS security reinforcement. Default value: `false`. Value:-`true`: enable Alibaba Cloud OS security reinforcement.-`false`: does not enable Alibaba Cloud OS security reinforcement.
        /// </summary>
        public readonly bool SecurityHardeningOs;
        /// <summary>
        /// Whether enable worker node to support soc security reinforcement, its valid value `true` or `false`. Default to `false` and apply to AliyunLinux series. See [SOC Reinforcement](https://help.aliyun.com/document_detail/196148.html).&gt; It is forbidden to set both `security_hardening_os` and `soc_enabled` to `true` at the same time.
        /// </summary>
        public readonly bool SocEnabled;
        /// <summary>
        /// The number of instance types that are available. Auto Scaling creates preemptible instances of multiple instance types that are available at the lowest cost. Valid values: 1 to 10.
        /// </summary>
        public readonly int SpotInstancePools;
        /// <summary>
        /// Specifies whether to supplement preemptible instances when the number of preemptible instances drops below the specified minimum number. If you set the value to true, Auto Scaling attempts to create a new preemptible instance when the system notifies that an existing preemptible instance is about to be reclaimed. Valid values: `true`: enables the supplementation of preemptible instances. `false`: disables the supplementation of preemptible instances.
        /// </summary>
        public readonly bool SpotInstanceRemedy;
        /// <summary>
        /// The current single preemptible instance type market price range configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolSpotPriceLimitResult> SpotPriceLimits;
        /// <summary>
        /// The preemptible instance type. Value:- `NoSpot` : Non-preemptible instance.- `SpotWithPriceLimit` : Set the upper limit of the preemptible instance price.- `SpotAsPriceGo` : The system automatically bids, following the actual price of the current market.
        /// </summary>
        public readonly string SpotStrategy;
        /// <summary>
        /// Specifies whether to enable the burst feature for system disks. Valid values:`true`: enables the burst feature. `false`: disables the burst feature. This parameter is supported only when `system_disk_category` is set to `cloud_auto`.
        /// </summary>
        public readonly bool SystemDiskBurstingEnabled;
        /// <summary>
        /// The multi-disk categories of the system disk. When a high-priority disk type cannot be used, Auto Scaling automatically tries to create a system disk with the next priority disk category. Valid values see `system_disk_category`.
        /// </summary>
        public readonly ImmutableArray<string> SystemDiskCategories;
        /// <summary>
        /// The category of the system disk for nodes. Default value: `cloud_efficiency`. Valid values:- `cloud`: basic disk.- `cloud_efficiency`: ultra disk.- `cloud_ssd`: standard SSD.- `cloud_essd`: ESSD.- `cloud_auto`: ESSD AutoPL disk.- `cloud_essd_entry`: ESSD Entry disk.
        /// </summary>
        public readonly string SystemDiskCategory;
        /// <summary>
        /// The encryption algorithm used by the system disk. Value range: aes-256.
        /// </summary>
        public readonly string SystemDiskEncryptAlgorithm;
        /// <summary>
        /// Whether to encrypt the system disk. Value range: `true`: encryption. `false`: Do not encrypt.
        /// </summary>
        public readonly bool SystemDiskEncrypted;
        /// <summary>
        /// The ID of the KMS key used by the system disk.
        /// </summary>
        public readonly string SystemDiskKmsKey;
        /// <summary>
        /// The system disk performance of the node takes effect only for the ESSD disk.- `PL0`: maximum random read/write IOPS 10000 for a single disk.- `PL1`: maximum random read/write IOPS 50000 for a single disk.- `PL2`: highest random read/write IOPS 100000 for a single disk.- `PL3`: maximum random read/write IOPS 1 million for a single disk.
        /// </summary>
        public readonly string SystemDiskPerformanceLevel;
        /// <summary>
        /// The predefined IOPS of a system disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}. Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}. This parameter is supported only when `system_disk_category` is set to `cloud_auto`.
        /// </summary>
        public readonly int SystemDiskProvisionedIops;
        /// <summary>
        /// The size of the system disk. Unit: GiB. The value of this parameter must be at least 1 and greater than or equal to the image size. Default value: 40 or the size of the image, whichever is larger.- Basic disk: 20 to 500.- ESSD (cloud_essd): The valid values vary based on the performance level of the ESSD. PL0 ESSD: 1 to 2048. PL1 ESSD: 20 to 2048. PL2 ESSD: 461 to 2048. PL3 ESSD: 1261 to 2048.- ESSD AutoPL disk (cloud_auto): 1 to 2048.- Other disk categories: 20 to 2048.
        /// </summary>
        public readonly int SystemDiskSize;
        /// <summary>
        /// The ID of the automatic snapshot policy used by the system disk.
        /// </summary>
        public readonly string SystemDiskSnapshotPolicyId;
        /// <summary>
        /// Add tags only for ECS instances. The maximum length of the tag key is 128 characters. The tag key and value cannot start with aliyun or acs:, or contain https:// or http://.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// A List of Kubernetes taints to assign to the nodes. Detailed below. More information in [Taints and Toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolTaintResult> Taints;
        /// <summary>
        /// The configuration about confidential computing for the cluster.
        /// </summary>
        public readonly Outputs.GetKubernetesNodePoolsNodepoolTeeConfigResult TeeConfig;
        /// <summary>
        /// Whether the node after expansion can be scheduled.
        /// </summary>
        public readonly bool Unschedulable;
        /// <summary>
        /// Node custom data, base64-encoded.
        /// </summary>
        public readonly string UserData;
        /// <summary>
        /// The vswitches used by node pool workers.
        /// </summary>
        public readonly ImmutableArray<string> VswitchIds;

        [OutputConstructor]
        private GetKubernetesNodePoolsNodepoolResult(
            bool autoRenew,

            int autoRenewPeriod,

            bool cisEnabled,

            bool compensateWithOnDemand,

            string cpuPolicy,

            ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolDataDiskResult> dataDisks,

            string deploymentSetId,

            string desiredSize,

            string imageId,

            string imageType,

            bool installCloudMonitor,

            string instanceChargeType,

            ImmutableArray<string> instanceTypes,

            string internetChargeType,

            int internetMaxBandwidthOut,

            string keyName,

            Outputs.GetKubernetesNodePoolsNodepoolKubeletConfigurationResult kubeletConfiguration,

            ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolLabelResult> labels,

            bool loginAsNonRoot,

            Outputs.GetKubernetesNodePoolsNodepoolManagementResult management,

            string multiAzPolicy,

            string nodeNameMode,

            string nodePoolId,

            string nodePoolName,

            string onDemandBaseCapacity,

            string onDemandPercentageAboveBaseCapacity,

            string password,

            int period,

            string periodUnit,

            string platform,

            string preUserData,

            Outputs.GetKubernetesNodePoolsNodepoolPrivatePoolOptionsResult privatePoolOptions,

            string ramRoleName,

            ImmutableArray<string> rdsInstances,

            string resourceGroupId,

            string runtimeName,

            string runtimeVersion,

            Outputs.GetKubernetesNodePoolsNodepoolScalingConfigResult scalingConfig,

            string scalingGroupId,

            string scalingPolicy,

            string securityGroupId,

            ImmutableArray<string> securityGroupIds,

            bool securityHardeningOs,

            bool socEnabled,

            int spotInstancePools,

            bool spotInstanceRemedy,

            ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolSpotPriceLimitResult> spotPriceLimits,

            string spotStrategy,

            bool systemDiskBurstingEnabled,

            ImmutableArray<string> systemDiskCategories,

            string systemDiskCategory,

            string systemDiskEncryptAlgorithm,

            bool systemDiskEncrypted,

            string systemDiskKmsKey,

            string systemDiskPerformanceLevel,

            int systemDiskProvisionedIops,

            int systemDiskSize,

            string systemDiskSnapshotPolicyId,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<Outputs.GetKubernetesNodePoolsNodepoolTaintResult> taints,

            Outputs.GetKubernetesNodePoolsNodepoolTeeConfigResult teeConfig,

            bool unschedulable,

            string userData,

            ImmutableArray<string> vswitchIds)
        {
            AutoRenew = autoRenew;
            AutoRenewPeriod = autoRenewPeriod;
            CisEnabled = cisEnabled;
            CompensateWithOnDemand = compensateWithOnDemand;
            CpuPolicy = cpuPolicy;
            DataDisks = dataDisks;
            DeploymentSetId = deploymentSetId;
            DesiredSize = desiredSize;
            ImageId = imageId;
            ImageType = imageType;
            InstallCloudMonitor = installCloudMonitor;
            InstanceChargeType = instanceChargeType;
            InstanceTypes = instanceTypes;
            InternetChargeType = internetChargeType;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            KeyName = keyName;
            KubeletConfiguration = kubeletConfiguration;
            Labels = labels;
            LoginAsNonRoot = loginAsNonRoot;
            Management = management;
            MultiAzPolicy = multiAzPolicy;
            NodeNameMode = nodeNameMode;
            NodePoolId = nodePoolId;
            NodePoolName = nodePoolName;
            OnDemandBaseCapacity = onDemandBaseCapacity;
            OnDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacity;
            Password = password;
            Period = period;
            PeriodUnit = periodUnit;
            Platform = platform;
            PreUserData = preUserData;
            PrivatePoolOptions = privatePoolOptions;
            RamRoleName = ramRoleName;
            RdsInstances = rdsInstances;
            ResourceGroupId = resourceGroupId;
            RuntimeName = runtimeName;
            RuntimeVersion = runtimeVersion;
            ScalingConfig = scalingConfig;
            ScalingGroupId = scalingGroupId;
            ScalingPolicy = scalingPolicy;
            SecurityGroupId = securityGroupId;
            SecurityGroupIds = securityGroupIds;
            SecurityHardeningOs = securityHardeningOs;
            SocEnabled = socEnabled;
            SpotInstancePools = spotInstancePools;
            SpotInstanceRemedy = spotInstanceRemedy;
            SpotPriceLimits = spotPriceLimits;
            SpotStrategy = spotStrategy;
            SystemDiskBurstingEnabled = systemDiskBurstingEnabled;
            SystemDiskCategories = systemDiskCategories;
            SystemDiskCategory = systemDiskCategory;
            SystemDiskEncryptAlgorithm = systemDiskEncryptAlgorithm;
            SystemDiskEncrypted = systemDiskEncrypted;
            SystemDiskKmsKey = systemDiskKmsKey;
            SystemDiskPerformanceLevel = systemDiskPerformanceLevel;
            SystemDiskProvisionedIops = systemDiskProvisionedIops;
            SystemDiskSize = systemDiskSize;
            SystemDiskSnapshotPolicyId = systemDiskSnapshotPolicyId;
            Tags = tags;
            Taints = taints;
            TeeConfig = teeConfig;
            Unschedulable = unschedulable;
            UserData = userData;
            VswitchIds = vswitchIds;
        }
    }
}
