// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS.Inputs
{

    public sealed class KubernetesPermissionPermissionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the cluster that you want to manage, When `RoleType` value is `all-clusters`, the value of `Cluster` must be `""`.
        /// </summary>
        [Input("cluster", required: true)]
        public Input<string> Cluster { get; set; } = null!;

        /// <summary>
        /// Specifies whether to perform a custom authorization. To perform a custom authorization, the value of `IsCustom` must be `True`, and set `RoleName` to a custom cluster role.
        /// </summary>
        [Input("isCustom")]
        public Input<bool>? IsCustom { get; set; }

        /// <summary>
        /// Specifies whether the permissions are granted to a RAM role. When `Uid` is ram role id, the value of `IsRamRole` must be `True`.
        /// </summary>
        [Input("isRamRole")]
        public Input<bool>? IsRamRole { get; set; }

        /// <summary>
        /// The namespace to which the permissions are scoped. This parameter is required only if you set RoleType to namespace.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Specifies the predefined role that you want to assign. Valid values `Admin`, `Ops`, `Dev`, `Restricted` and the custom cluster roles.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        /// <summary>
        /// The authorization type. Valid values `Cluster`, `Namespace` and `all-clusters`.
        /// </summary>
        [Input("roleType", required: true)]
        public Input<string> RoleType { get; set; } = null!;

        public KubernetesPermissionPermissionGetArgs()
        {
        }
        public static new KubernetesPermissionPermissionGetArgs Empty => new KubernetesPermissionPermissionGetArgs();
    }
}
