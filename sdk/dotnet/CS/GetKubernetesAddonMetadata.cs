// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CS
{
    public static class GetKubernetesAddonMetadata
    {
        /// <summary>
        /// This data source provides metadata of kubernetes cluster addons.
        /// 
        /// &gt; **NOTE:** Available in 1.166.0+.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = name,
        ///         CidrBlock = "10.4.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VswitchName = name,
        ///         CidrBlock = "10.4.0.0/24",
        ///         VpcId = defaultNetwork.Id,
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///     });
        /// 
        ///     var defaultManagedKubernetes = new AliCloud.CS.ManagedKubernetes("default", new()
        ///     {
        ///         NamePrefix = name,
        ///         ClusterSpec = "ack.pro.small",
        ///         WorkerVswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///         NewNatGateway = false,
        ///         PodCidr = Std.Cidrsubnet.Invoke(new()
        ///         {
        ///             Input = "10.0.0.0/8",
        ///             Newbits = 8,
        ///             Netnum = 36,
        ///         }).Apply(invoke =&gt; invoke.Result),
        ///         ServiceCidr = Std.Cidrsubnet.Invoke(new()
        ///         {
        ///             Input = "172.16.0.0/16",
        ///             Newbits = 4,
        ///             Netnum = 7,
        ///         }).Apply(invoke =&gt; invoke.Result),
        ///         SlbInternetEnabled = true,
        ///     });
        /// 
        ///     var clusterId = defaultManagedKubernetes.Id;
        /// 
        ///     var defaultGetKubernetesAddonMetadata = AliCloud.CS.GetKubernetesAddonMetadata.Invoke(new()
        ///     {
        ///         ClusterId = clusterId,
        ///         Name = "nginx-ingress-controller",
        ///         Version = "v1.1.2-aliyun.2",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["addonConfigSchema"] = defaultGetKubernetesAddonMetadata.Apply(getKubernetesAddonMetadataResult =&gt; getKubernetesAddonMetadataResult.ConfigSchema),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetKubernetesAddonMetadataResult> InvokeAsync(GetKubernetesAddonMetadataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesAddonMetadataResult>("alicloud:cs/getKubernetesAddonMetadata:getKubernetesAddonMetadata", args ?? new GetKubernetesAddonMetadataArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides metadata of kubernetes cluster addons.
        /// 
        /// &gt; **NOTE:** Available in 1.166.0+.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = name,
        ///         CidrBlock = "10.4.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VswitchName = name,
        ///         CidrBlock = "10.4.0.0/24",
        ///         VpcId = defaultNetwork.Id,
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///     });
        /// 
        ///     var defaultManagedKubernetes = new AliCloud.CS.ManagedKubernetes("default", new()
        ///     {
        ///         NamePrefix = name,
        ///         ClusterSpec = "ack.pro.small",
        ///         WorkerVswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///         NewNatGateway = false,
        ///         PodCidr = Std.Cidrsubnet.Invoke(new()
        ///         {
        ///             Input = "10.0.0.0/8",
        ///             Newbits = 8,
        ///             Netnum = 36,
        ///         }).Apply(invoke =&gt; invoke.Result),
        ///         ServiceCidr = Std.Cidrsubnet.Invoke(new()
        ///         {
        ///             Input = "172.16.0.0/16",
        ///             Newbits = 4,
        ///             Netnum = 7,
        ///         }).Apply(invoke =&gt; invoke.Result),
        ///         SlbInternetEnabled = true,
        ///     });
        /// 
        ///     var clusterId = defaultManagedKubernetes.Id;
        /// 
        ///     var defaultGetKubernetesAddonMetadata = AliCloud.CS.GetKubernetesAddonMetadata.Invoke(new()
        ///     {
        ///         ClusterId = clusterId,
        ///         Name = "nginx-ingress-controller",
        ///         Version = "v1.1.2-aliyun.2",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["addonConfigSchema"] = defaultGetKubernetesAddonMetadata.Apply(getKubernetesAddonMetadataResult =&gt; getKubernetesAddonMetadataResult.ConfigSchema),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetKubernetesAddonMetadataResult> Invoke(GetKubernetesAddonMetadataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesAddonMetadataResult>("alicloud:cs/getKubernetesAddonMetadata:getKubernetesAddonMetadata", args ?? new GetKubernetesAddonMetadataInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides metadata of kubernetes cluster addons.
        /// 
        /// &gt; **NOTE:** Available in 1.166.0+.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// using Std = Pulumi.Std;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var @default = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
        ///     {
        ///         VpcName = name,
        ///         CidrBlock = "10.4.0.0/16",
        ///     });
        /// 
        ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
        ///     {
        ///         VswitchName = name,
        ///         CidrBlock = "10.4.0.0/24",
        ///         VpcId = defaultNetwork.Id,
        ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
        ///     });
        /// 
        ///     var defaultManagedKubernetes = new AliCloud.CS.ManagedKubernetes("default", new()
        ///     {
        ///         NamePrefix = name,
        ///         ClusterSpec = "ack.pro.small",
        ///         WorkerVswitchIds = new[]
        ///         {
        ///             defaultSwitch.Id,
        ///         },
        ///         NewNatGateway = false,
        ///         PodCidr = Std.Cidrsubnet.Invoke(new()
        ///         {
        ///             Input = "10.0.0.0/8",
        ///             Newbits = 8,
        ///             Netnum = 36,
        ///         }).Apply(invoke =&gt; invoke.Result),
        ///         ServiceCidr = Std.Cidrsubnet.Invoke(new()
        ///         {
        ///             Input = "172.16.0.0/16",
        ///             Newbits = 4,
        ///             Netnum = 7,
        ///         }).Apply(invoke =&gt; invoke.Result),
        ///         SlbInternetEnabled = true,
        ///     });
        /// 
        ///     var clusterId = defaultManagedKubernetes.Id;
        /// 
        ///     var defaultGetKubernetesAddonMetadata = AliCloud.CS.GetKubernetesAddonMetadata.Invoke(new()
        ///     {
        ///         ClusterId = clusterId,
        ///         Name = "nginx-ingress-controller",
        ///         Version = "v1.1.2-aliyun.2",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["addonConfigSchema"] = defaultGetKubernetesAddonMetadata.Apply(getKubernetesAddonMetadataResult =&gt; getKubernetesAddonMetadataResult.ConfigSchema),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetKubernetesAddonMetadataResult> Invoke(GetKubernetesAddonMetadataInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesAddonMetadataResult>("alicloud:cs/getKubernetesAddonMetadata:getKubernetesAddonMetadata", args ?? new GetKubernetesAddonMetadataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesAddonMetadataArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of kubernetes cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the cluster addon. You can get a list of available addons that the cluster can install by using data source `alicloud.cs.getKubernetesAddons`.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The version of the cluster addon.
        /// </summary>
        [Input("version", required: true)]
        public string Version { get; set; } = null!;

        public GetKubernetesAddonMetadataArgs()
        {
        }
        public static new GetKubernetesAddonMetadataArgs Empty => new GetKubernetesAddonMetadataArgs();
    }

    public sealed class GetKubernetesAddonMetadataInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of kubernetes cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the cluster addon. You can get a list of available addons that the cluster can install by using data source `alicloud.cs.getKubernetesAddons`.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The version of the cluster addon.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public GetKubernetesAddonMetadataInvokeArgs()
        {
        }
        public static new GetKubernetesAddonMetadataInvokeArgs Empty => new GetKubernetesAddonMetadataInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesAddonMetadataResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The addon configuration that can be customized. The returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet.
        /// </summary>
        public readonly string ConfigSchema;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Version;

        [OutputConstructor]
        private GetKubernetesAddonMetadataResult(
            string clusterId,

            string configSchema,

            string id,

            string name,

            string version)
        {
            ClusterId = clusterId;
            ConfigSchema = configSchema;
            Id = id;
            Name = name;
            Version = version;
        }
    }
}
