// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    public static class GetVpcFlowLogs
    {
        /// <summary>
        /// This data source provides the Vpc Flow Logs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.122.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.Vpc.GetVpcFlowLogs.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_value",
        ///         },
        ///         NameRegex = "the_resource_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstVpcFlowLogId"] = example.Apply(getVpcFlowLogsResult =&gt; getVpcFlowLogsResult.Logs[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVpcFlowLogsResult> InvokeAsync(GetVpcFlowLogsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcFlowLogsResult>("alicloud:vpc/getVpcFlowLogs:getVpcFlowLogs", args ?? new GetVpcFlowLogsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Vpc Flow Logs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.122.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.Vpc.GetVpcFlowLogs.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_value",
        ///         },
        ///         NameRegex = "the_resource_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstVpcFlowLogId"] = example.Apply(getVpcFlowLogsResult =&gt; getVpcFlowLogsResult.Logs[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVpcFlowLogsResult> Invoke(GetVpcFlowLogsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcFlowLogsResult>("alicloud:vpc/getVpcFlowLogs:getVpcFlowLogs", args ?? new GetVpcFlowLogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcFlowLogsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Description of flow log.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// The flow log name.
        /// </summary>
        [Input("flowLogName")]
        public string? FlowLogName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Flow Log IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The log store name.
        /// </summary>
        [Input("logStoreName")]
        public string? LogStoreName { get; set; }

        /// <summary>
        /// A regex string to filter results by Flow Log name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// The resource id.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// The status of flow log.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// The traffic type.
        /// </summary>
        [Input("trafficType")]
        public string? TrafficType { get; set; }

        public GetVpcFlowLogsArgs()
        {
        }
        public static new GetVpcFlowLogsArgs Empty => new GetVpcFlowLogsArgs();
    }

    public sealed class GetVpcFlowLogsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Description of flow log.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The flow log name.
        /// </summary>
        [Input("flowLogName")]
        public Input<string>? FlowLogName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Flow Log IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The log store name.
        /// </summary>
        [Input("logStoreName")]
        public Input<string>? LogStoreName { get; set; }

        /// <summary>
        /// A regex string to filter results by Flow Log name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The resource id.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The status of flow log.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The traffic type.
        /// </summary>
        [Input("trafficType")]
        public Input<string>? TrafficType { get; set; }

        public GetVpcFlowLogsInvokeArgs()
        {
        }
        public static new GetVpcFlowLogsInvokeArgs Empty => new GetVpcFlowLogsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcFlowLogsResult
    {
        public readonly string? Description;
        public readonly string? FlowLogName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? LogStoreName;
        public readonly ImmutableArray<Outputs.GetVpcFlowLogsLogResult> Logs;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly string? ProjectName;
        public readonly string? ResourceId;
        public readonly string? ResourceType;
        public readonly string? Status;
        public readonly string? TrafficType;

        [OutputConstructor]
        private GetVpcFlowLogsResult(
            string? description,

            string? flowLogName,

            string id,

            ImmutableArray<string> ids,

            string? logStoreName,

            ImmutableArray<Outputs.GetVpcFlowLogsLogResult> logs,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? projectName,

            string? resourceId,

            string? resourceType,

            string? status,

            string? trafficType)
        {
            Description = description;
            FlowLogName = flowLogName;
            Id = id;
            Ids = ids;
            LogStoreName = logStoreName;
            Logs = logs;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            ProjectName = projectName;
            ResourceId = resourceId;
            ResourceType = resourceType;
            Status = status;
            TrafficType = trafficType;
        }
    }
}
