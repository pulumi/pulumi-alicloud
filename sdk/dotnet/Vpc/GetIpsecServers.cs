// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    public static class GetIpsecServers
    {
        /// <summary>
        /// This data source provides the Vpn Ipsec Servers of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.161.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Vpc.GetIpsecServers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Vpc.GetIpsecServers.Invoke(new()
        ///     {
        ///         NameRegex = "^my-IpsecServer",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpnIpsecServerId1"] = ids.Apply(getIpsecServersResult =&gt; getIpsecServersResult.Servers[0]?.Id),
        ///         ["vpnIpsecServerId2"] = nameRegex.Apply(getIpsecServersResult =&gt; getIpsecServersResult.Servers[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIpsecServersResult> InvokeAsync(GetIpsecServersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpsecServersResult>("alicloud:vpc/getIpsecServers:getIpsecServers", args ?? new GetIpsecServersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Vpn Ipsec Servers of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.161.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Vpc.GetIpsecServers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Vpc.GetIpsecServers.Invoke(new()
        ///     {
        ///         NameRegex = "^my-IpsecServer",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpnIpsecServerId1"] = ids.Apply(getIpsecServersResult =&gt; getIpsecServersResult.Servers[0]?.Id),
        ///         ["vpnIpsecServerId2"] = nameRegex.Apply(getIpsecServersResult =&gt; getIpsecServersResult.Servers[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIpsecServersResult> Invoke(GetIpsecServersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpsecServersResult>("alicloud:vpc/getIpsecServers:getIpsecServers", args ?? new GetIpsecServersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpsecServersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Ipsec Server IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the IPsec server.
        /// </summary>
        [Input("ipsecServerName")]
        public string? IpsecServerName { get; set; }

        /// <summary>
        /// A regex string to filter results by Ipsec Server name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of the VPN gateway.
        /// </summary>
        [Input("vpnGatewayId")]
        public string? VpnGatewayId { get; set; }

        public GetIpsecServersArgs()
        {
        }
        public static new GetIpsecServersArgs Empty => new GetIpsecServersArgs();
    }

    public sealed class GetIpsecServersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Ipsec Server IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the IPsec server.
        /// </summary>
        [Input("ipsecServerName")]
        public Input<string>? IpsecServerName { get; set; }

        /// <summary>
        /// A regex string to filter results by Ipsec Server name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of the VPN gateway.
        /// </summary>
        [Input("vpnGatewayId")]
        public Input<string>? VpnGatewayId { get; set; }

        public GetIpsecServersInvokeArgs()
        {
        }
        public static new GetIpsecServersInvokeArgs Empty => new GetIpsecServersInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpsecServersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? IpsecServerName;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly ImmutableArray<Outputs.GetIpsecServersServerResult> Servers;
        public readonly string? VpnGatewayId;

        [OutputConstructor]
        private GetIpsecServersResult(
            string id,

            ImmutableArray<string> ids,

            string? ipsecServerName,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<Outputs.GetIpsecServersServerResult> servers,

            string? vpnGatewayId)
        {
            Id = id;
            Ids = ids;
            IpsecServerName = ipsecServerName;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Servers = servers;
            VpnGatewayId = vpnGatewayId;
        }
    }
}
