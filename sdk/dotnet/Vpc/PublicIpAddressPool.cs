// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    /// <summary>
    /// Provides a Vpc Public Ip Address Pool resource.
    /// 
    /// For information about Vpc Public Ip Address Pool and how to use it, see [What is Public Ip Address Pool](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/createpublicipaddresspool).
    /// 
    /// &gt; **NOTE:** Available since v1.186.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var defaultResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke(new()
    ///     {
    ///         Status = "OK",
    ///     });
    /// 
    ///     var defaultPublicIpAddressPool = new AliCloud.Vpc.PublicIpAddressPool("defaultPublicIpAddressPool", new()
    ///     {
    ///         Description = name,
    ///         PublicIpAddressPoolName = name,
    ///         Isp = "BGP",
    ///         ResourceGroupId = defaultResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0]),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Vpc Public Ip Address Pool can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:vpc/publicIpAddressPool:PublicIpAddressPool example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:vpc/publicIpAddressPool:PublicIpAddressPool")]
    public partial class PublicIpAddressPool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether there is a free IP address.
        /// </summary>
        [Output("ipAddressRemaining")]
        public Output<bool> IpAddressRemaining { get; private set; } = null!;

        /// <summary>
        /// The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        /// </summary>
        [Output("isp")]
        public Output<string> Isp { get; private set; } = null!;

        [Output("publicIpAddressPoolId")]
        public Output<string> PublicIpAddressPoolId { get; private set; } = null!;

        /// <summary>
        /// The name of the VPC Public IP address pool.
        /// </summary>
        [Output("publicIpAddressPoolName")]
        public Output<string?> PublicIpAddressPoolName { get; private set; } = null!;

        /// <summary>
        /// The resource group ID of the VPC Public IP address pool.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The status of the VPC Public IP address pool.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tags of PrefixList.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The total number of public IP address pools.
        /// </summary>
        [Output("totalIpNum")]
        public Output<int> TotalIpNum { get; private set; } = null!;

        /// <summary>
        /// The number of used IP addresses in the public IP address pool.
        /// </summary>
        [Output("usedIpNum")]
        public Output<int> UsedIpNum { get; private set; } = null!;


        /// <summary>
        /// Create a PublicIpAddressPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublicIpAddressPool(string name, PublicIpAddressPoolArgs? args = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/publicIpAddressPool:PublicIpAddressPool", name, args ?? new PublicIpAddressPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublicIpAddressPool(string name, Input<string> id, PublicIpAddressPoolState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/publicIpAddressPool:PublicIpAddressPool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublicIpAddressPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublicIpAddressPool Get(string name, Input<string> id, PublicIpAddressPoolState? state = null, CustomResourceOptions? options = null)
        {
            return new PublicIpAddressPool(name, id, state, options);
        }
    }

    public sealed class PublicIpAddressPoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// The name of the VPC Public IP address pool.
        /// </summary>
        [Input("publicIpAddressPoolName")]
        public Input<string>? PublicIpAddressPoolName { get; set; }

        /// <summary>
        /// The resource group ID of the VPC Public IP address pool.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The tags of PrefixList.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public PublicIpAddressPoolArgs()
        {
        }
        public static new PublicIpAddressPoolArgs Empty => new PublicIpAddressPoolArgs();
    }

    public sealed class PublicIpAddressPoolState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether there is a free IP address.
        /// </summary>
        [Input("ipAddressRemaining")]
        public Input<bool>? IpAddressRemaining { get; set; }

        /// <summary>
        /// The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        [Input("publicIpAddressPoolId")]
        public Input<string>? PublicIpAddressPoolId { get; set; }

        /// <summary>
        /// The name of the VPC Public IP address pool.
        /// </summary>
        [Input("publicIpAddressPoolName")]
        public Input<string>? PublicIpAddressPoolName { get; set; }

        /// <summary>
        /// The resource group ID of the VPC Public IP address pool.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The status of the VPC Public IP address pool.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The tags of PrefixList.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The total number of public IP address pools.
        /// </summary>
        [Input("totalIpNum")]
        public Input<int>? TotalIpNum { get; set; }

        /// <summary>
        /// The number of used IP addresses in the public IP address pool.
        /// </summary>
        [Input("usedIpNum")]
        public Input<int>? UsedIpNum { get; set; }

        public PublicIpAddressPoolState()
        {
        }
        public static new PublicIpAddressPoolState Empty => new PublicIpAddressPoolState();
    }
}
