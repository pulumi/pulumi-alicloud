// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    /// <summary>
    /// ## Import
    /// 
    /// Router entry can be imported using the id, e.g (formatted as&lt;route_table_id:router_id:destination_cidrblock:nexthop_type:nexthop_id&gt;).
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:vpc/routeEntry:RouteEntry example vtb-123456:vrt-123456:0.0.0.0/0:NatGateway:ngw-123456
    /// ```
    /// </summary>
    public partial class RouteEntry : Pulumi.CustomResource
    {
        /// <summary>
        /// The RouteEntry's target network segment.
        /// </summary>
        [Output("destinationCidrblock")]
        public Output<string?> DestinationCidrblock { get; private set; } = null!;

        /// <summary>
        /// The name of the route entry. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The route entry's next hop. ECS instance ID or VPC router interface ID.
        /// </summary>
        [Output("nexthopId")]
        public Output<string?> NexthopId { get; private set; } = null!;

        /// <summary>
        /// The next hop type. Available values:
        /// </summary>
        [Output("nexthopType")]
        public Output<string?> NexthopType { get; private set; } = null!;

        /// <summary>
        /// The ID of the route table.
        /// </summary>
        [Output("routeTableId")]
        public Output<string> RouteTableId { get; private set; } = null!;

        /// <summary>
        /// This argument has beeb deprecated. Please use other arguments to launch a custom route entry.
        /// </summary>
        [Output("routerId")]
        public Output<string> RouterId { get; private set; } = null!;


        /// <summary>
        /// Create a RouteEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RouteEntry(string name, RouteEntryArgs args, CustomResourceOptions? options = null)
            : base("alicloud:vpc/routeEntry:RouteEntry", name, args ?? new RouteEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RouteEntry(string name, Input<string> id, RouteEntryState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/routeEntry:RouteEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RouteEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RouteEntry Get(string name, Input<string> id, RouteEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new RouteEntry(name, id, state, options);
        }
    }

    public sealed class RouteEntryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The RouteEntry's target network segment.
        /// </summary>
        [Input("destinationCidrblock")]
        public Input<string>? DestinationCidrblock { get; set; }

        /// <summary>
        /// The name of the route entry. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The route entry's next hop. ECS instance ID or VPC router interface ID.
        /// </summary>
        [Input("nexthopId")]
        public Input<string>? NexthopId { get; set; }

        /// <summary>
        /// The next hop type. Available values:
        /// </summary>
        [Input("nexthopType")]
        public Input<string>? NexthopType { get; set; }

        /// <summary>
        /// The ID of the route table.
        /// </summary>
        [Input("routeTableId", required: true)]
        public Input<string> RouteTableId { get; set; } = null!;

        /// <summary>
        /// This argument has beeb deprecated. Please use other arguments to launch a custom route entry.
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public RouteEntryArgs()
        {
        }
    }

    public sealed class RouteEntryState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The RouteEntry's target network segment.
        /// </summary>
        [Input("destinationCidrblock")]
        public Input<string>? DestinationCidrblock { get; set; }

        /// <summary>
        /// The name of the route entry. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The route entry's next hop. ECS instance ID or VPC router interface ID.
        /// </summary>
        [Input("nexthopId")]
        public Input<string>? NexthopId { get; set; }

        /// <summary>
        /// The next hop type. Available values:
        /// </summary>
        [Input("nexthopType")]
        public Input<string>? NexthopType { get; set; }

        /// <summary>
        /// The ID of the route table.
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// This argument has beeb deprecated. Please use other arguments to launch a custom route entry.
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public RouteEntryState()
        {
        }
    }
}
