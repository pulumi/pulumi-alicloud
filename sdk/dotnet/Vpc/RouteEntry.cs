// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    /// <summary>
    /// Provides a Route Entry resource. A Route Entry represents a route item of one VPC Route Table.
    /// 
    /// For information about Route Entry and how to use it, see [What is Route Entry](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-vpc-2016-04-28-createrouteentry).
    /// 
    /// &gt; **NOTE:** Available since v0.1.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var @default = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableDiskCategory = "cloud_efficiency",
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var defaultGetImages = AliCloud.Ecs.GetImages.Invoke(new()
    ///     {
    ///         MostRecent = true,
    ///         Owners = "system",
    ///     });
    /// 
    ///     var defaultGetInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
    ///     {
    ///         AvailabilityZone = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         CpuCoreCount = 2,
    ///         MemorySize = 8,
    ///         InstanceTypeFamily = "ecs.g6",
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "192.168.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new AliCloud.Vpc.Switch("default", new()
    ///     {
    ///         VswitchName = name,
    ///         VpcId = defaultNetwork.Id,
    ///         CidrBlock = "192.168.192.0/24",
    ///         ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
    ///     });
    /// 
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         Name = name,
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Ecs.Instance("default", new()
    ///     {
    ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
    ///         InstanceType = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
    ///         SecurityGroups = new[]
    ///         {
    ///             defaultSecurityGroup,
    ///         }.Select(__item =&gt; __item.Id).ToList(),
    ///         InternetChargeType = "PayByTraffic",
    ///         InternetMaxBandwidthOut = 10,
    ///         AvailabilityZone = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.AvailabilityZones[0]),
    ///         InstanceChargeType = "PostPaid",
    ///         SystemDiskCategory = "cloud_efficiency",
    ///         VswitchId = defaultSwitch.Id,
    ///         InstanceName = name,
    ///     });
    /// 
    ///     var foo = new AliCloud.Vpc.RouteEntry("foo", new()
    ///     {
    ///         RouteTableId = defaultNetwork.RouteTableId,
    ///         DestinationCidrblock = "172.11.1.1/32",
    ///         NexthopType = "Instance",
    ///         NexthopId = defaultInstance.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Module Support
    /// 
    /// You can use to the existing vpc module
    /// to create a VPC, several VSwitches and add several route entries one-click.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import alicloud:vpc/routeEntry:RouteEntry example &lt;route_table_id&gt;:&lt;router_id&gt;:&lt;destination_cidrblock&gt;:&lt;nexthop_type&gt;:&lt;nexthop_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:vpc/routeEntry:RouteEntry")]
    public partial class RouteEntry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The destination CIDR block of the custom route entry.
        /// </summary>
        [Output("destinationCidrblock")]
        public Output<string?> DestinationCidrblock { get; private set; } = null!;

        /// <summary>
        /// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of Next Hop.
        /// </summary>
        [Output("nexthopId")]
        public Output<string?> NexthopId { get; private set; } = null!;

        /// <summary>
        /// The type of Next Hop. Valid values:
        /// - `Instance`: An Elastic Compute Service (ECS) instance.
        /// - `HaVip`: A high-availability virtual IP address (HAVIP).
        /// - `RouterInterface`: A router interface.
        /// - `NetworkInterface`: An elastic network interface (ENI).
        /// - `VpnGateway`: A VPN Gateway.
        /// - `IPv6Gateway`: An IPv6 gateway.
        /// - `NatGateway`: A Nat Gateway.
        /// - `Attachment`: A transit router.
        /// - `VpcPeer`: A VPC Peering Connection.
        /// - `Ipv4Gateway`: An IPv4 gateway.
        /// - `GatewayEndpoint`: A gateway endpoint.
        /// - `Ecr`: A Express Connect Router (ECR).
        /// </summary>
        [Output("nexthopType")]
        public Output<string?> NexthopType { get; private set; } = null!;

        /// <summary>
        /// The ID of the Route Table.
        /// </summary>
        [Output("routeTableId")]
        public Output<string> RouteTableId { get; private set; } = null!;

        /// <summary>
        /// This argument has been deprecated. Please use other arguments to launch a custom route entry.
        /// </summary>
        [Output("routerId")]
        public Output<string> RouterId { get; private set; } = null!;


        /// <summary>
        /// Create a RouteEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RouteEntry(string name, RouteEntryArgs args, CustomResourceOptions? options = null)
            : base("alicloud:vpc/routeEntry:RouteEntry", name, args ?? new RouteEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RouteEntry(string name, Input<string> id, RouteEntryState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/routeEntry:RouteEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RouteEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RouteEntry Get(string name, Input<string> id, RouteEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new RouteEntry(name, id, state, options);
        }
    }

    public sealed class RouteEntryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The destination CIDR block of the custom route entry.
        /// </summary>
        [Input("destinationCidrblock")]
        public Input<string>? DestinationCidrblock { get; set; }

        /// <summary>
        /// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of Next Hop.
        /// </summary>
        [Input("nexthopId")]
        public Input<string>? NexthopId { get; set; }

        /// <summary>
        /// The type of Next Hop. Valid values:
        /// - `Instance`: An Elastic Compute Service (ECS) instance.
        /// - `HaVip`: A high-availability virtual IP address (HAVIP).
        /// - `RouterInterface`: A router interface.
        /// - `NetworkInterface`: An elastic network interface (ENI).
        /// - `VpnGateway`: A VPN Gateway.
        /// - `IPv6Gateway`: An IPv6 gateway.
        /// - `NatGateway`: A Nat Gateway.
        /// - `Attachment`: A transit router.
        /// - `VpcPeer`: A VPC Peering Connection.
        /// - `Ipv4Gateway`: An IPv4 gateway.
        /// - `GatewayEndpoint`: A gateway endpoint.
        /// - `Ecr`: A Express Connect Router (ECR).
        /// </summary>
        [Input("nexthopType")]
        public Input<string>? NexthopType { get; set; }

        /// <summary>
        /// The ID of the Route Table.
        /// </summary>
        [Input("routeTableId", required: true)]
        public Input<string> RouteTableId { get; set; } = null!;

        public RouteEntryArgs()
        {
        }
        public static new RouteEntryArgs Empty => new RouteEntryArgs();
    }

    public sealed class RouteEntryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The destination CIDR block of the custom route entry.
        /// </summary>
        [Input("destinationCidrblock")]
        public Input<string>? DestinationCidrblock { get; set; }

        /// <summary>
        /// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of Next Hop.
        /// </summary>
        [Input("nexthopId")]
        public Input<string>? NexthopId { get; set; }

        /// <summary>
        /// The type of Next Hop. Valid values:
        /// - `Instance`: An Elastic Compute Service (ECS) instance.
        /// - `HaVip`: A high-availability virtual IP address (HAVIP).
        /// - `RouterInterface`: A router interface.
        /// - `NetworkInterface`: An elastic network interface (ENI).
        /// - `VpnGateway`: A VPN Gateway.
        /// - `IPv6Gateway`: An IPv6 gateway.
        /// - `NatGateway`: A Nat Gateway.
        /// - `Attachment`: A transit router.
        /// - `VpcPeer`: A VPC Peering Connection.
        /// - `Ipv4Gateway`: An IPv4 gateway.
        /// - `GatewayEndpoint`: A gateway endpoint.
        /// - `Ecr`: A Express Connect Router (ECR).
        /// </summary>
        [Input("nexthopType")]
        public Input<string>? NexthopType { get; set; }

        /// <summary>
        /// The ID of the Route Table.
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// This argument has been deprecated. Please use other arguments to launch a custom route entry.
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        public RouteEntryState()
        {
        }
        public static new RouteEntryState Empty => new RouteEntryState();
    }
}
