// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    public static class GetIpamIpamPoolCidrs
    {
        /// <summary>
        /// This data source provides Vpc Ipam Ipam Pool Cidr available to the user.[What is Ipam Pool Cidr](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/AddIpamPoolCidr)
        /// 
        /// &gt; **NOTE:** Available since v1.241.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultIpam = new AliCloud.Vpc.IpamIpam("defaultIpam", new()
        ///     {
        ///         OperatingRegionLists = new[]
        ///         {
        ///             "cn-hangzhou",
        ///         },
        ///     });
        /// 
        ///     var defaultIpamPool = new AliCloud.Vpc.IpamIpamPool("defaultIpamPool", new()
        ///     {
        ///         IpamScopeId = defaultIpam.PrivateDefaultScopeId,
        ///         PoolRegionId = defaultIpam.RegionId,
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var defaultIpamIpamPoolCidr = new AliCloud.Vpc.IpamIpamPoolCidr("default", new()
        ///     {
        ///         Cidr = "10.0.0.0/8",
        ///         IpamPoolId = defaultIpamPool.Id,
        ///     });
        /// 
        ///     var @default = AliCloud.Vpc.GetIpamIpamPoolCidrs.Invoke(new()
        ///     {
        ///         Cidr = "10.0.0.0/8",
        ///         IpamPoolId = defaultIpamIpamPoolCidr.IpamPoolId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudVpcIpamIpamPoolCidrExampleId"] = @default.Apply(@default =&gt; @default.Apply(getIpamIpamPoolCidrsResult =&gt; getIpamIpamPoolCidrsResult.Cidrs[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetIpamIpamPoolCidrsResult> InvokeAsync(GetIpamIpamPoolCidrsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpamIpamPoolCidrsResult>("alicloud:vpc/getIpamIpamPoolCidrs:getIpamIpamPoolCidrs", args ?? new GetIpamIpamPoolCidrsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Vpc Ipam Ipam Pool Cidr available to the user.[What is Ipam Pool Cidr](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/AddIpamPoolCidr)
        /// 
        /// &gt; **NOTE:** Available since v1.241.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultIpam = new AliCloud.Vpc.IpamIpam("defaultIpam", new()
        ///     {
        ///         OperatingRegionLists = new[]
        ///         {
        ///             "cn-hangzhou",
        ///         },
        ///     });
        /// 
        ///     var defaultIpamPool = new AliCloud.Vpc.IpamIpamPool("defaultIpamPool", new()
        ///     {
        ///         IpamScopeId = defaultIpam.PrivateDefaultScopeId,
        ///         PoolRegionId = defaultIpam.RegionId,
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var defaultIpamIpamPoolCidr = new AliCloud.Vpc.IpamIpamPoolCidr("default", new()
        ///     {
        ///         Cidr = "10.0.0.0/8",
        ///         IpamPoolId = defaultIpamPool.Id,
        ///     });
        /// 
        ///     var @default = AliCloud.Vpc.GetIpamIpamPoolCidrs.Invoke(new()
        ///     {
        ///         Cidr = "10.0.0.0/8",
        ///         IpamPoolId = defaultIpamIpamPoolCidr.IpamPoolId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudVpcIpamIpamPoolCidrExampleId"] = @default.Apply(@default =&gt; @default.Apply(getIpamIpamPoolCidrsResult =&gt; getIpamIpamPoolCidrsResult.Cidrs[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpamIpamPoolCidrsResult> Invoke(GetIpamIpamPoolCidrsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpamIpamPoolCidrsResult>("alicloud:vpc/getIpamIpamPoolCidrs:getIpamIpamPoolCidrs", args ?? new GetIpamIpamPoolCidrsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides Vpc Ipam Ipam Pool Cidr available to the user.[What is Ipam Pool Cidr](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/AddIpamPoolCidr)
        /// 
        /// &gt; **NOTE:** Available since v1.241.0.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var name = config.Get("name") ?? "terraform-example";
        ///     var defaultIpam = new AliCloud.Vpc.IpamIpam("defaultIpam", new()
        ///     {
        ///         OperatingRegionLists = new[]
        ///         {
        ///             "cn-hangzhou",
        ///         },
        ///     });
        /// 
        ///     var defaultIpamPool = new AliCloud.Vpc.IpamIpamPool("defaultIpamPool", new()
        ///     {
        ///         IpamScopeId = defaultIpam.PrivateDefaultScopeId,
        ///         PoolRegionId = defaultIpam.RegionId,
        ///         IpVersion = "IPv4",
        ///     });
        /// 
        ///     var defaultIpamIpamPoolCidr = new AliCloud.Vpc.IpamIpamPoolCidr("default", new()
        ///     {
        ///         Cidr = "10.0.0.0/8",
        ///         IpamPoolId = defaultIpamPool.Id,
        ///     });
        /// 
        ///     var @default = AliCloud.Vpc.GetIpamIpamPoolCidrs.Invoke(new()
        ///     {
        ///         Cidr = "10.0.0.0/8",
        ///         IpamPoolId = defaultIpamIpamPoolCidr.IpamPoolId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["alicloudVpcIpamIpamPoolCidrExampleId"] = @default.Apply(@default =&gt; @default.Apply(getIpamIpamPoolCidrsResult =&gt; getIpamIpamPoolCidrsResult.Cidrs[0]?.Id)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpamIpamPoolCidrsResult> Invoke(GetIpamIpamPoolCidrsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpamIpamPoolCidrsResult>("alicloud:vpc/getIpamIpamPoolCidrs:getIpamIpamPoolCidrs", args ?? new GetIpamIpamPoolCidrsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpamIpamPoolCidrsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CIDR address segment to be preset.&gt; currently, only IPv4 address segments are supported.
        /// </summary>
        [Input("cidr")]
        public string? Cidr { get; set; }

        /// <summary>
        /// The ID of the IPAM pool instance.
        /// </summary>
        [Input("ipamPoolId", required: true)]
        public string IpamPoolId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetIpamIpamPoolCidrsArgs()
        {
        }
        public static new GetIpamIpamPoolCidrsArgs Empty => new GetIpamIpamPoolCidrsArgs();
    }

    public sealed class GetIpamIpamPoolCidrsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CIDR address segment to be preset.&gt; currently, only IPv4 address segments are supported.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// The ID of the IPAM pool instance.
        /// </summary>
        [Input("ipamPoolId", required: true)]
        public Input<string> IpamPoolId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetIpamIpamPoolCidrsInvokeArgs()
        {
        }
        public static new GetIpamIpamPoolCidrsInvokeArgs Empty => new GetIpamIpamPoolCidrsInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpamIpamPoolCidrsResult
    {
        /// <summary>
        /// The CIDR address segment to be preset.&gt; currently, only IPv4 address segments are supported.
        /// </summary>
        public readonly string? Cidr;
        /// <summary>
        /// A list of Ipam Pool Cidr Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpamIpamPoolCidrsCidrResult> Cidrs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the IPAM pool instance.
        /// </summary>
        public readonly string IpamPoolId;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetIpamIpamPoolCidrsResult(
            string? cidr,

            ImmutableArray<Outputs.GetIpamIpamPoolCidrsCidrResult> cidrs,

            string id,

            string ipamPoolId,

            string? outputFile)
        {
            Cidr = cidr;
            Cidrs = cidrs;
            Id = id;
            IpamPoolId = ipamPoolId;
            OutputFile = outputFile;
        }
    }
}
