// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    /// <summary>
    /// Provides a VPC Vbr Ha resource.
    /// 
    /// For information about VPC Vbr Ha and how to use it, see [What is Vbr Ha](https://www.alibabacloud.com/help/doc-detail/212629.html).
    /// 
    /// &gt; **NOTE:** Available in v1.151.0+.
    /// 
    /// ## Import
    /// 
    /// VPC Vbr Ha can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:vpc/vbrHa:VbrHa example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:vpc/vbrHa:VbrHa")]
    public partial class VbrHa : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the VBR switching group. It must be `2` to `256` characters in length and must start with a letter or Chinese, but cannot start with `https://` or `https://`.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The dry run.
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// The ID of the other VBR in the VBR failover group.
        /// </summary>
        [Output("peerVbrId")]
        public Output<string> PeerVbrId { get; private set; } = null!;

        /// <summary>
        /// The state of the VBR failover group.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The name of the VBR failover group.
        /// </summary>
        [Output("vbrHaName")]
        public Output<string?> VbrHaName { get; private set; } = null!;

        /// <summary>
        /// The ID of the VBR instance.
        /// </summary>
        [Output("vbrId")]
        public Output<string> VbrId { get; private set; } = null!;


        /// <summary>
        /// Create a VbrHa resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VbrHa(string name, VbrHaArgs args, CustomResourceOptions? options = null)
            : base("alicloud:vpc/vbrHa:VbrHa", name, args ?? new VbrHaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VbrHa(string name, Input<string> id, VbrHaState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/vbrHa:VbrHa", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VbrHa resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VbrHa Get(string name, Input<string> id, VbrHaState? state = null, CustomResourceOptions? options = null)
        {
            return new VbrHa(name, id, state, options);
        }
    }

    public sealed class VbrHaArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the VBR switching group. It must be `2` to `256` characters in length and must start with a letter or Chinese, but cannot start with `https://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The dry run.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The ID of the other VBR in the VBR failover group.
        /// </summary>
        [Input("peerVbrId", required: true)]
        public Input<string> PeerVbrId { get; set; } = null!;

        /// <summary>
        /// The name of the VBR failover group.
        /// </summary>
        [Input("vbrHaName")]
        public Input<string>? VbrHaName { get; set; }

        /// <summary>
        /// The ID of the VBR instance.
        /// </summary>
        [Input("vbrId", required: true)]
        public Input<string> VbrId { get; set; } = null!;

        public VbrHaArgs()
        {
        }
    }

    public sealed class VbrHaState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the VBR switching group. It must be `2` to `256` characters in length and must start with a letter or Chinese, but cannot start with `https://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The dry run.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// The ID of the other VBR in the VBR failover group.
        /// </summary>
        [Input("peerVbrId")]
        public Input<string>? PeerVbrId { get; set; }

        /// <summary>
        /// The state of the VBR failover group.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the VBR failover group.
        /// </summary>
        [Input("vbrHaName")]
        public Input<string>? VbrHaName { get; set; }

        /// <summary>
        /// The ID of the VBR instance.
        /// </summary>
        [Input("vbrId")]
        public Input<string>? VbrId { get; set; }

        public VbrHaState()
        {
        }
    }
}
