// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc.Outputs
{

    [OutputType]
    public sealed class GetBgpGroupsGroupResult
    {
        /// <summary>
        /// The key used by the BGP group.
        /// </summary>
        public readonly string AuthKey;
        /// <summary>
        /// The name of the BGP group.
        /// </summary>
        public readonly string BgpGroupName;
        /// <summary>
        /// Description of the BGP group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The hold time to wait for the incoming BGP message. If no message has been passed in after the hold time, the BGP neighbor is considered disconnected.
        /// </summary>
        public readonly string Hold;
        /// <summary>
        /// The ID of the Bgp Group.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// IP version.
        /// </summary>
        public readonly string IpVersion;
        /// <summary>
        /// Whether the AS number is false.
        /// </summary>
        public readonly bool IsFakeAsn;
        /// <summary>
        /// The keepalive time.
        /// </summary>
        public readonly string Keepalive;
        /// <summary>
        /// The local AS number.
        /// </summary>
        public readonly int LocalAsn;
        /// <summary>
        /// The autonomous system (AS) number of the BGP peer.
        /// </summary>
        public readonly int PeerAsn;
        /// <summary>
        /// Routing limits.
        /// </summary>
        public readonly string RouteLimit;
        /// <summary>
        /// The ID of the VBR.
        /// </summary>
        public readonly string RouterId;
        /// <summary>
        /// The status of the resource.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetBgpGroupsGroupResult(
            string authKey,

            string bgpGroupName,

            string description,

            string hold,

            string id,

            string ipVersion,

            bool isFakeAsn,

            string keepalive,

            int localAsn,

            int peerAsn,

            string routeLimit,

            string routerId,

            string status)
        {
            AuthKey = authKey;
            BgpGroupName = bgpGroupName;
            Description = description;
            Hold = hold;
            Id = id;
            IpVersion = ipVersion;
            IsFakeAsn = isFakeAsn;
            Keepalive = keepalive;
            LocalAsn = localAsn;
            PeerAsn = peerAsn;
            RouteLimit = routeLimit;
            RouterId = routerId;
            Status = status;
        }
    }
}
