// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc.Outputs
{

    [OutputType]
    public sealed class GetTrafficMirrorFilterEgressRulesRuleResult
    {
        /// <summary>
        /// The destination CIDR block of the outbound traffic.
        /// </summary>
        public readonly string DestinationCidrBlock;
        /// <summary>
        /// The destination port range of the outbound traffic.
        /// </summary>
        public readonly string DestinationPortRange;
        /// <summary>
        /// The ID of the Traffic Mirror Filter Egress Rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The priority of the outbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// The transport protocol used by outbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
        /// </summary>
        public readonly string RuleAction;
        /// <summary>
        /// The source CIDR block of the outbound traffic.
        /// </summary>
        public readonly string SourceCidrBlock;
        /// <summary>
        /// The source port range of the outbound traffic.
        /// </summary>
        public readonly string SourcePortRange;
        /// <summary>
        /// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The ID of the filter associated with the outbound rule.
        /// </summary>
        public readonly string TrafficMirrorFilterId;
        /// <summary>
        /// The first ID of the resource.
        /// </summary>
        public readonly string TrafficMirrorFilterRuleId;

        [OutputConstructor]
        private GetTrafficMirrorFilterEgressRulesRuleResult(
            string destinationCidrBlock,

            string destinationPortRange,

            string id,

            int priority,

            string protocol,

            string ruleAction,

            string sourceCidrBlock,

            string sourcePortRange,

            string status,

            string trafficMirrorFilterId,

            string trafficMirrorFilterRuleId)
        {
            DestinationCidrBlock = destinationCidrBlock;
            DestinationPortRange = destinationPortRange;
            Id = id;
            Priority = priority;
            Protocol = protocol;
            RuleAction = ruleAction;
            SourceCidrBlock = sourceCidrBlock;
            SourcePortRange = sourcePortRange;
            Status = status;
            TrafficMirrorFilterId = trafficMirrorFilterId;
            TrafficMirrorFilterRuleId = trafficMirrorFilterRuleId;
        }
    }
}
