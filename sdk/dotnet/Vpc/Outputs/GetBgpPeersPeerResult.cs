// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc.Outputs
{

    [OutputType]
    public sealed class GetBgpPeersPeerResult
    {
        /// <summary>
        /// The authentication key of the BGP group.
        /// </summary>
        public readonly string AuthKey;
        /// <summary>
        /// The BFD hop count.
        /// </summary>
        public readonly int BfdMultiHop;
        /// <summary>
        /// The ID of the BGP group.
        /// </summary>
        public readonly string BgpGroupId;
        /// <summary>
        /// The ID of the BGP neighbor.
        /// </summary>
        public readonly string BgpPeerId;
        /// <summary>
        /// The name of the BGP neighbor.
        /// </summary>
        public readonly string BgpPeerName;
        /// <summary>
        /// The status of the BGP connection.
        /// </summary>
        public readonly string BgpStatus;
        /// <summary>
        /// The description of the BGP group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Indicates whether the Bidirectional Forwarding Detection (BFD) protocol is enabled.
        /// </summary>
        public readonly bool EnableBfd;
        /// <summary>
        /// The hold time.
        /// </summary>
        public readonly string Hold;
        /// <summary>
        /// The ID of the Bgp Peer.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IP version.
        /// </summary>
        public readonly string IpVersion;
        /// <summary>
        /// Indicates whether a fake AS number is used.
        /// </summary>
        public readonly bool IsFake;
        /// <summary>
        /// The keepalive time.
        /// </summary>
        public readonly string Keepalive;
        /// <summary>
        /// The AS number of the device on the Alibaba Cloud side.
        /// </summary>
        public readonly string LocalAsn;
        /// <summary>
        /// The autonomous system (AS) number of the BGP peer.
        /// </summary>
        public readonly string PeerAsn;
        /// <summary>
        /// The IP address of the BGP neighbor.
        /// </summary>
        public readonly string PeerIpAddress;
        /// <summary>
        /// The limit on routes.
        /// </summary>
        public readonly string RouteLimit;
        /// <summary>
        /// The ID of the router.
        /// </summary>
        public readonly string RouterId;
        /// <summary>
        /// The status of the BGP peer.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetBgpPeersPeerResult(
            string authKey,

            int bfdMultiHop,

            string bgpGroupId,

            string bgpPeerId,

            string bgpPeerName,

            string bgpStatus,

            string description,

            bool enableBfd,

            string hold,

            string id,

            string ipVersion,

            bool isFake,

            string keepalive,

            string localAsn,

            string peerAsn,

            string peerIpAddress,

            string routeLimit,

            string routerId,

            string status)
        {
            AuthKey = authKey;
            BfdMultiHop = bfdMultiHop;
            BgpGroupId = bgpGroupId;
            BgpPeerId = bgpPeerId;
            BgpPeerName = bgpPeerName;
            BgpStatus = bgpStatus;
            Description = description;
            EnableBfd = enableBfd;
            Hold = hold;
            Id = id;
            IpVersion = ipVersion;
            IsFake = isFake;
            Keepalive = keepalive;
            LocalAsn = localAsn;
            PeerAsn = peerAsn;
            PeerIpAddress = peerIpAddress;
            RouteLimit = routeLimit;
            RouterId = routerId;
            Status = status;
        }
    }
}
