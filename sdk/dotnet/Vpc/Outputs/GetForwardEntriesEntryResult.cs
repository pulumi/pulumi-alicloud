// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc.Outputs
{

    [OutputType]
    public sealed class GetForwardEntriesEntryResult
    {
        /// <summary>
        /// The public IP address.
        /// </summary>
        public readonly string ExternalIp;
        /// <summary>
        /// The public port.
        /// </summary>
        public readonly string ExternalPort;
        /// <summary>
        /// The forward entry ID.
        /// </summary>
        public readonly string ForwardEntryId;
        /// <summary>
        /// The name of forward entry.
        /// </summary>
        public readonly string ForwardEntryName;
        /// <summary>
        /// The ID of the Forward Entry.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The private IP address.
        /// </summary>
        public readonly string InternalIp;
        /// <summary>
        /// The internal port.
        /// </summary>
        public readonly string InternalPort;
        /// <summary>
        /// The ip protocol. Valid values: `any`,`tcp` and `udp`.
        /// </summary>
        public readonly string IpProtocol;
        /// <summary>
        /// The forward entry name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The status of farward entry. Valid value `Available`, `Deleting` and `Pending`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetForwardEntriesEntryResult(
            string externalIp,

            string externalPort,

            string forwardEntryId,

            string forwardEntryName,

            string id,

            string internalIp,

            string internalPort,

            string ipProtocol,

            string name,

            string status)
        {
            ExternalIp = externalIp;
            ExternalPort = externalPort;
            ForwardEntryId = forwardEntryId;
            ForwardEntryName = forwardEntryName;
            Id = id;
            InternalIp = internalIp;
            InternalPort = internalPort;
            IpProtocol = ipProtocol;
            Name = name;
            Status = status;
        }
    }
}
