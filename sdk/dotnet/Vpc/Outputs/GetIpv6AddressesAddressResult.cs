// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc.Outputs
{

    [OutputType]
    public sealed class GetIpv6AddressesAddressResult
    {
        /// <summary>
        /// The ID of the instance that is assigned the IPv6 address.
        /// </summary>
        public readonly string AssociatedInstanceId;
        /// <summary>
        /// The type of the instance that is assigned the IPv6 address.
        /// </summary>
        public readonly string AssociatedInstanceType;
        /// <summary>
        /// The time when the IPv6 address was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The ID of the Ipv6 Address.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The address of the Ipv6 Address.
        /// </summary>
        public readonly string Ipv6Address;
        /// <summary>
        /// The ID of the IPv6 address.
        /// </summary>
        public readonly string Ipv6AddressId;
        /// <summary>
        /// The name of the IPv6 address.
        /// </summary>
        public readonly string Ipv6AddressName;
        /// <summary>
        /// The ID of the IPv6 gateway to which the IPv6 address belongs.
        /// </summary>
        public readonly string Ipv6GatewayId;
        /// <summary>
        /// The type of communication supported by the IPv6 address. Valid values:`Private` or `Public`. `Private`: communication within the private network. `Public`: communication over the public network
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// The status of the IPv6 address. Valid values:`Pending` or `Available`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The ID of the VPC to which the IPv6 address belongs.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The ID of the vSwitch to which the IPv6 address belongs.
        /// </summary>
        public readonly string VswitchId;

        [OutputConstructor]
        private GetIpv6AddressesAddressResult(
            string associatedInstanceId,

            string associatedInstanceType,

            string createTime,

            string id,

            string ipv6Address,

            string ipv6AddressId,

            string ipv6AddressName,

            string ipv6GatewayId,

            string networkType,

            string status,

            string vpcId,

            string vswitchId)
        {
            AssociatedInstanceId = associatedInstanceId;
            AssociatedInstanceType = associatedInstanceType;
            CreateTime = createTime;
            Id = id;
            Ipv6Address = ipv6Address;
            Ipv6AddressId = ipv6AddressId;
            Ipv6AddressName = ipv6AddressName;
            Ipv6GatewayId = ipv6GatewayId;
            NetworkType = networkType;
            Status = status;
            VpcId = vpcId;
            VswitchId = vswitchId;
        }
    }
}
