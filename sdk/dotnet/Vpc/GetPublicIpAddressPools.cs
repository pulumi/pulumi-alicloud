// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    public static class GetPublicIpAddressPools
    {
        /// <summary>
        /// This data source provides the Vpc Public Ip Address Pools of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.186.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Vpc.GetPublicIpAddressPools.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Vpc.GetPublicIpAddressPools.Invoke(new()
        ///     {
        ///         NameRegex = "example_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcPublicIpAddressPoolId1"] = ids.Apply(getPublicIpAddressPoolsResult =&gt; getPublicIpAddressPoolsResult.Pools[0]?.Id),
        ///         ["vpcPublicIpAddressPoolId2"] = nameRegex.Apply(getPublicIpAddressPoolsResult =&gt; getPublicIpAddressPoolsResult.Pools[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPublicIpAddressPoolsResult> InvokeAsync(GetPublicIpAddressPoolsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicIpAddressPoolsResult>("alicloud:vpc/getPublicIpAddressPools:getPublicIpAddressPools", args ?? new GetPublicIpAddressPoolsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Vpc Public Ip Address Pools of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available in v1.186.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var ids = AliCloud.Vpc.GetPublicIpAddressPools.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "example_id",
        ///         },
        ///     });
        /// 
        ///     var nameRegex = AliCloud.Vpc.GetPublicIpAddressPools.Invoke(new()
        ///     {
        ///         NameRegex = "example_name",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcPublicIpAddressPoolId1"] = ids.Apply(getPublicIpAddressPoolsResult =&gt; getPublicIpAddressPoolsResult.Pools[0]?.Id),
        ///         ["vpcPublicIpAddressPoolId2"] = nameRegex.Apply(getPublicIpAddressPoolsResult =&gt; getPublicIpAddressPoolsResult.Pools[0]?.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPublicIpAddressPoolsResult> Invoke(GetPublicIpAddressPoolsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpAddressPoolsResult>("alicloud:vpc/getPublicIpAddressPools:getPublicIpAddressPools", args ?? new GetPublicIpAddressPoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicIpAddressPoolsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Vpc Public Ip Address Pool IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Internet service provider.
        /// </summary>
        [Input("isp")]
        public string? Isp { get; set; }

        /// <summary>
        /// A regex string to filter results by Vpc Public Ip Address Pool name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("publicIpAddressPoolIds")]
        private List<string>? _publicIpAddressPoolIds;

        /// <summary>
        /// The IDs of the Vpc Public IP address pools.
        /// </summary>
        public List<string> PublicIpAddressPoolIds
        {
            get => _publicIpAddressPoolIds ?? (_publicIpAddressPoolIds = new List<string>());
            set => _publicIpAddressPoolIds = value;
        }

        /// <summary>
        /// The name of the Vpc Public Ip Address Pool.
        /// </summary>
        [Input("publicIpAddressPoolName")]
        public string? PublicIpAddressPoolName { get; set; }

        /// <summary>
        /// The status of the Vpc Public Ip Address Pool.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetPublicIpAddressPoolsArgs()
        {
        }
        public static new GetPublicIpAddressPoolsArgs Empty => new GetPublicIpAddressPoolsArgs();
    }

    public sealed class GetPublicIpAddressPoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Vpc Public Ip Address Pool IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Internet service provider.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// A regex string to filter results by Vpc Public Ip Address Pool name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("publicIpAddressPoolIds")]
        private InputList<string>? _publicIpAddressPoolIds;

        /// <summary>
        /// The IDs of the Vpc Public IP address pools.
        /// </summary>
        public InputList<string> PublicIpAddressPoolIds
        {
            get => _publicIpAddressPoolIds ?? (_publicIpAddressPoolIds = new InputList<string>());
            set => _publicIpAddressPoolIds = value;
        }

        /// <summary>
        /// The name of the Vpc Public Ip Address Pool.
        /// </summary>
        [Input("publicIpAddressPoolName")]
        public Input<string>? PublicIpAddressPoolName { get; set; }

        /// <summary>
        /// The status of the Vpc Public Ip Address Pool.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetPublicIpAddressPoolsInvokeArgs()
        {
        }
        public static new GetPublicIpAddressPoolsInvokeArgs Empty => new GetPublicIpAddressPoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublicIpAddressPoolsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? Isp;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly ImmutableArray<Outputs.GetPublicIpAddressPoolsPoolResult> Pools;
        public readonly ImmutableArray<string> PublicIpAddressPoolIds;
        public readonly string? PublicIpAddressPoolName;
        public readonly string? Status;

        [OutputConstructor]
        private GetPublicIpAddressPoolsResult(
            string id,

            ImmutableArray<string> ids,

            string? isp,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<Outputs.GetPublicIpAddressPoolsPoolResult> pools,

            ImmutableArray<string> publicIpAddressPoolIds,

            string? publicIpAddressPoolName,

            string? status)
        {
            Id = id;
            Ids = ids;
            Isp = isp;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Pools = pools;
            PublicIpAddressPoolIds = publicIpAddressPoolIds;
            PublicIpAddressPoolName = publicIpAddressPoolName;
            Status = status;
        }
    }
}
