// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    /// <summary>
    /// Provides a Vpc Peer Peer Connection Accepter resource.
    /// 
    /// Vpc peer connection receiver.
    /// 
    /// For information about Vpc Peer Peer Connection Accepter and how to use it, see [What is Peer Connection Accepter](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-vpcpeer-2022-01-01-acceptvpcpeerconnection).
    /// 
    /// &gt; **NOTE:** Available since v1.196.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf-example";
    ///     var acceptingRegion = config.Get("acceptingRegion") ?? "cn-beijing";
    ///     var anotherUid = config.Get("anotherUid") ?? "xxxx";
    ///     var local = new AliCloud.Vpc.Network("local", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "10.4.0.0/16",
    ///     });
    /// 
    ///     var acceptingNetwork = new AliCloud.Vpc.Network("accepting", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "192.168.0.0/16",
    ///     });
    /// 
    ///     var accepting = AliCloud.GetAccount.Invoke();
    /// 
    ///     var @default = new AliCloud.Vpc.PeerConnection("default", new()
    ///     {
    ///         PeerConnectionName = name,
    ///         VpcId = local.Id,
    ///         AcceptingAliUid = accepting.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///         AcceptingRegionId = acceptingRegion,
    ///         AcceptingVpcId = acceptingNetwork.Id,
    ///         Description = name,
    ///     });
    /// 
    ///     var defaultPeerConnectionAccepter = new AliCloud.Vpc.PeerConnectionAccepter("default", new()
    ///     {
    ///         InstanceId = @default.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Vpc Peer Peer Connection Accepter can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter")]
    public partial class PeerConnectionAccepter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
        /// </summary>
        [Output("acceptingOwnerUid")]
        public Output<int> AcceptingOwnerUid { get; private set; } = null!;

        /// <summary>
        /// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
        /// </summary>
        [Output("acceptingRegionId")]
        public Output<string> AcceptingRegionId { get; private set; } = null!;

        /// <summary>
        /// The VPC ID of the receiving end of the VPC peer connection.
        /// </summary>
        [Output("acceptingVpcId")]
        public Output<string> AcceptingVpcId { get; private set; } = null!;

        /// <summary>
        /// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
        /// </summary>
        [Output("bandwidth")]
        public Output<int> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The new description of the VPC peering connection.
        /// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to forcefully delete the VPC peering connection. Valid values:
        /// </summary>
        [Output("forceDelete")]
        public Output<bool?> ForceDelete { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC peering connection whose name or description you want to modify.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Link Type
        /// </summary>
        [Output("linkType")]
        public Output<string> LinkType { get; private set; } = null!;

        /// <summary>
        /// The new name of the VPC peering connection.
        /// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Output("peerConnectionAccepterName")]
        public Output<string> PeerConnectionAccepterName { get; private set; } = null!;

        /// <summary>
        /// The ID of the region where you want to query VPC peering connections.
        /// </summary>
        [Output("regionId")]
        public Output<string> RegionId { get; private set; } = null!;

        /// <summary>
        /// The ID of the new resource group.
        /// 
        /// &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The VPC ID of the initiator of the VPC peering connection.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a PeerConnectionAccepter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PeerConnectionAccepter(string name, PeerConnectionAccepterArgs args, CustomResourceOptions? options = null)
            : base("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter", name, args ?? new PeerConnectionAccepterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PeerConnectionAccepter(string name, Input<string> id, PeerConnectionAccepterState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PeerConnectionAccepter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PeerConnectionAccepter Get(string name, Input<string> id, PeerConnectionAccepterState? state = null, CustomResourceOptions? options = null)
        {
            return new PeerConnectionAccepter(name, id, state, options);
        }
    }

    public sealed class PeerConnectionAccepterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The new description of the VPC peering connection.
        /// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Specifies whether to forcefully delete the VPC peering connection. Valid values:
        /// </summary>
        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        /// <summary>
        /// The ID of the VPC peering connection whose name or description you want to modify.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Link Type
        /// </summary>
        [Input("linkType")]
        public Input<string>? LinkType { get; set; }

        /// <summary>
        /// The new name of the VPC peering connection.
        /// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("peerConnectionAccepterName")]
        public Input<string>? PeerConnectionAccepterName { get; set; }

        /// <summary>
        /// The ID of the new resource group.
        /// 
        /// &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        public PeerConnectionAccepterArgs()
        {
        }
        public static new PeerConnectionAccepterArgs Empty => new PeerConnectionAccepterArgs();
    }

    public sealed class PeerConnectionAccepterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
        /// </summary>
        [Input("acceptingOwnerUid")]
        public Input<int>? AcceptingOwnerUid { get; set; }

        /// <summary>
        /// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
        /// </summary>
        [Input("acceptingRegionId")]
        public Input<string>? AcceptingRegionId { get; set; }

        /// <summary>
        /// The VPC ID of the receiving end of the VPC peer connection.
        /// </summary>
        [Input("acceptingVpcId")]
        public Input<string>? AcceptingVpcId { get; set; }

        /// <summary>
        /// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The new description of the VPC peering connection.
        /// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Specifies whether to forcefully delete the VPC peering connection. Valid values:
        /// </summary>
        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        /// <summary>
        /// The ID of the VPC peering connection whose name or description you want to modify.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Link Type
        /// </summary>
        [Input("linkType")]
        public Input<string>? LinkType { get; set; }

        /// <summary>
        /// The new name of the VPC peering connection.
        /// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
        /// </summary>
        [Input("peerConnectionAccepterName")]
        public Input<string>? PeerConnectionAccepterName { get; set; }

        /// <summary>
        /// The ID of the region where you want to query VPC peering connections.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// The ID of the new resource group.
        /// 
        /// &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The status of the resource
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The VPC ID of the initiator of the VPC peering connection.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public PeerConnectionAccepterState()
        {
        }
        public static new PeerConnectionAccepterState Empty => new PeerConnectionAccepterState();
    }
}
