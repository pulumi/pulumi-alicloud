// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    /// <summary>
    /// Provides a VPC Ipv6 Address resource.
    /// 
    /// For information about VPC Ipv6 Address and how to use it, see [What is Ipv6 Address](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/AllocateIpv6Address).
    /// 
    /// &gt; **NOTE:** Available since v1.216.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var defaultResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultZones = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var vpc = new AliCloud.Vpc.Network("vpc", new()
    ///     {
    ///         Ipv6Isp = "BGP",
    ///         CidrBlock = "172.168.0.0/16",
    ///         EnableIpv6 = true,
    ///         VpcName = name,
    ///     });
    /// 
    ///     var vswich = new AliCloud.Vpc.Switch("vswich", new()
    ///     {
    ///         VpcId = vpc.Id,
    ///         CidrBlock = "172.168.0.0/24",
    ///         ZoneId = defaultZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VswitchName = name,
    ///         Ipv6CidrBlockMask = 1,
    ///     });
    /// 
    ///     var defaultIpv6Address = new AliCloud.Vpc.Ipv6Address("defaultIpv6Address", new()
    ///     {
    ///         ResourceGroupId = defaultResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Ids[0]),
    ///         VswitchId = vswich.Id,
    ///         Ipv6AddressDescription = "create_description",
    ///         Ipv6AddressName = name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VPC Ipv6 Address can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:vpc/ipv6Address:Ipv6Address example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:vpc/ipv6Address:Ipv6Address")]
    public partial class Ipv6Address : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// IPv6 address.
        /// </summary>
        [Output("ipv6Address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// The description of the IPv6 Address. The description must be 2 to 256 characters in length. It cannot start with http:// or https://.
        /// </summary>
        [Output("ipv6AddressDescription")]
        public Output<string> Ipv6AddressDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the IPv6 Address. The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter but cannot start with http:// or https://.
        /// </summary>
        [Output("ipv6AddressName")]
        public Output<string?> Ipv6AddressName { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource group to which the instance belongs.
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// The status of the resource.  Available, Pending and Deleting.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tags for the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The VSwitchId of the IPv6 address.
        /// </summary>
        [Output("vswitchId")]
        public Output<string> VswitchId { get; private set; } = null!;


        /// <summary>
        /// Create a Ipv6Address resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ipv6Address(string name, Ipv6AddressArgs args, CustomResourceOptions? options = null)
            : base("alicloud:vpc/ipv6Address:Ipv6Address", name, args ?? new Ipv6AddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ipv6Address(string name, Input<string> id, Ipv6AddressState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:vpc/ipv6Address:Ipv6Address", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ipv6Address resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ipv6Address Get(string name, Input<string> id, Ipv6AddressState? state = null, CustomResourceOptions? options = null)
        {
            return new Ipv6Address(name, id, state, options);
        }
    }

    public sealed class Ipv6AddressArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the IPv6 Address. The description must be 2 to 256 characters in length. It cannot start with http:// or https://.
        /// </summary>
        [Input("ipv6AddressDescription")]
        public Input<string>? Ipv6AddressDescription { get; set; }

        /// <summary>
        /// The name of the IPv6 Address. The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter but cannot start with http:// or https://.
        /// </summary>
        [Input("ipv6AddressName")]
        public Input<string>? Ipv6AddressName { get; set; }

        /// <summary>
        /// The ID of the resource group to which the instance belongs.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The tags for the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The VSwitchId of the IPv6 address.
        /// </summary>
        [Input("vswitchId", required: true)]
        public Input<string> VswitchId { get; set; } = null!;

        public Ipv6AddressArgs()
        {
        }
        public static new Ipv6AddressArgs Empty => new Ipv6AddressArgs();
    }

    public sealed class Ipv6AddressState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// IPv6 address.
        /// </summary>
        [Input("ipv6Address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The description of the IPv6 Address. The description must be 2 to 256 characters in length. It cannot start with http:// or https://.
        /// </summary>
        [Input("ipv6AddressDescription")]
        public Input<string>? Ipv6AddressDescription { get; set; }

        /// <summary>
        /// The name of the IPv6 Address. The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter but cannot start with http:// or https://.
        /// </summary>
        [Input("ipv6AddressName")]
        public Input<string>? Ipv6AddressName { get; set; }

        /// <summary>
        /// The ID of the resource group to which the instance belongs.
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// The status of the resource.  Available, Pending and Deleting.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The tags for the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The VSwitchId of the IPv6 address.
        /// </summary>
        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        public Ipv6AddressState()
        {
        }
        public static new Ipv6AddressState Empty => new Ipv6AddressState();
    }
}
