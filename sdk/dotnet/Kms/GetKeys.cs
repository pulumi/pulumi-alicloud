// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Kms
{
    public static class GetKeys
    {
        /// <summary>
        /// This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var kmsKeysDs = Output.Create(AliCloud.Kms.GetKeys.InvokeAsync(new AliCloud.Kms.GetKeysArgs
        ///         {
        ///             DescriptionRegex = "Hello KMS",
        ///             OutputFile = "kms_keys.json",
        ///         }));
        ///         this.FirstKeyId = kmsKeysDs.Apply(kmsKeysDs =&gt; kmsKeysDs.Keys[0].Id);
        ///     }
        /// 
        ///     [Output("firstKeyId")]
        ///     public Output&lt;string&gt; FirstKeyId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKeysResult> InvokeAsync(GetKeysArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKeysResult>("alicloud:kms/getKeys:getKeys", args ?? new GetKeysArgs(), options.WithVersion());
    }


    public sealed class GetKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A regex string to filter the results by the KMS key description.
        /// </summary>
        [Input("descriptionRegex")]
        public string? DescriptionRegex { get; set; }

        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        [Input("filters")]
        public string? Filters { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of KMS key IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Filter the results by status of the KMS keys. Valid values: `Enabled`, `Disabled`, `PendingDeletion`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKeysResult
    {
        public readonly string? DescriptionRegex;
        public readonly bool? EnableDetails;
        public readonly string? Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of KMS key IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of KMS keys. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKeysKeyResult> Keys;
        public readonly string? OutputFile;
        /// <summary>
        /// Status of the key. Possible values: `Enabled`, `Disabled` and `PendingDeletion`.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetKeysResult(
            string? descriptionRegex,

            bool? enableDetails,

            string? filters,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetKeysKeyResult> keys,

            string? outputFile,

            string? status)
        {
            DescriptionRegex = descriptionRegex;
            EnableDetails = enableDetails;
            Filters = filters;
            Id = id;
            Ids = ids;
            Keys = keys;
            OutputFile = outputFile;
            Status = status;
        }
    }
}
