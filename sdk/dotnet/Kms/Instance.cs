// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Kms
{
    /// <summary>
    /// Provides a KMS Instance resource.
    /// 
    /// For information about KMS Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/zh/key-management-service/latest/kms-instance-management).
    /// 
    /// &gt; **NOTE:** Available since v1.210.0.
    /// 
    /// ## Example Usage
    /// 
    /// Create a subscription kms instance
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var region = config.Get("region") ?? "cn-hangzhou";
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var current = AliCloud.GetAccount.Invoke();
    /// 
    ///     var vpc_amp_instance_example = new AliCloud.Vpc.Network("vpc-amp-instance-example", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = name,
    ///     });
    /// 
    ///     var vswitch = new AliCloud.Vpc.Switch("vswitch", new()
    ///     {
    ///         VpcId = vpc_amp_instance_example.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var vswitch_j = new AliCloud.Vpc.Switch("vswitch-j", new()
    ///     {
    ///         VpcId = vpc_amp_instance_example.Id,
    ///         ZoneId = "cn-hangzhou-j",
    ///         CidrBlock = "172.16.2.0/24",
    ///     });
    /// 
    ///     var shareVPC = new AliCloud.Vpc.Network("shareVPC", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s3",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var shareVswitch = new AliCloud.Vpc.Switch("shareVswitch", new()
    ///     {
    ///         VpcId = shareVPC.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var share_VPC2 = new AliCloud.Vpc.Network("share-VPC2", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s5",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var share_vswitch2 = new AliCloud.Vpc.Switch("share-vswitch2", new()
    ///     {
    ///         VpcId = share_VPC2.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var share_VPC3 = new AliCloud.Vpc.Network("share-VPC3", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s7",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var share_vsw3 = new AliCloud.Vpc.Switch("share-vsw3", new()
    ///     {
    ///         VpcId = share_VPC3.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var @default = new AliCloud.Kms.Instance("default", new()
    ///     {
    ///         VpcNum = 7,
    ///         KeyNum = 1000,
    ///         SecretNum = 0,
    ///         Spec = 1000,
    ///         RenewStatus = "ManualRenewal",
    ///         ProductVersion = "3",
    ///         RenewPeriod = 3,
    ///         VpcId = vswitch.VpcId,
    ///         ZoneIds = new[]
    ///         {
    ///             "cn-hangzhou-k",
    ///             "cn-hangzhou-j",
    ///         },
    ///         VswitchIds = new[]
    ///         {
    ///             vswitch_j.Id,
    ///         },
    ///         BindVpcs = new[]
    ///         {
    ///             new AliCloud.Kms.Inputs.InstanceBindVpcArgs
    ///             {
    ///                 VpcId = shareVswitch.VpcId,
    ///                 RegionId = region,
    ///                 VswitchId = shareVswitch.Id,
    ///                 VpcOwnerId = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///             },
    ///             new AliCloud.Kms.Inputs.InstanceBindVpcArgs
    ///             {
    ///                 VpcId = share_vswitch2.VpcId,
    ///                 RegionId = region,
    ///                 VswitchId = share_vswitch2.Id,
    ///                 VpcOwnerId = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///             },
    ///             new AliCloud.Kms.Inputs.InstanceBindVpcArgs
    ///             {
    ///                 VpcId = share_vsw3.VpcId,
    ///                 RegionId = region,
    ///                 VswitchId = share_vsw3.Id,
    ///                 VpcOwnerId = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///             },
    ///         },
    ///         Log = "0",
    ///         Period = 1,
    ///         LogStorage = 0,
    ///         PaymentType = "Subscription",
    ///     });
    /// 
    /// });
    /// ```
    /// Create a pay-as-you-go kms instance
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var region = config.Get("region") ?? "cn-hangzhou";
    ///     var name = config.Get("name") ?? "terraform-example";
    ///     var current = AliCloud.GetAccount.Invoke();
    /// 
    ///     var vpc_amp_instance_example = new AliCloud.Vpc.Network("vpc-amp-instance-example", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = name,
    ///     });
    /// 
    ///     var vswitch = new AliCloud.Vpc.Switch("vswitch", new()
    ///     {
    ///         VpcId = vpc_amp_instance_example.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var vswitch_j = new AliCloud.Vpc.Switch("vswitch-j", new()
    ///     {
    ///         VpcId = vpc_amp_instance_example.Id,
    ///         ZoneId = "cn-hangzhou-j",
    ///         CidrBlock = "172.16.2.0/24",
    ///     });
    /// 
    ///     var shareVPC = new AliCloud.Vpc.Network("shareVPC", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s3",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var shareVswitch = new AliCloud.Vpc.Switch("shareVswitch", new()
    ///     {
    ///         VpcId = shareVPC.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var share_VPC2 = new AliCloud.Vpc.Network("share-VPC2", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s5",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var share_vswitch2 = new AliCloud.Vpc.Switch("share-vswitch2", new()
    ///     {
    ///         VpcId = share_VPC2.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var share_VPC3 = new AliCloud.Vpc.Network("share-VPC3", new()
    ///     {
    ///         CidrBlock = "172.16.0.0/12",
    ///         VpcName = Std.Format.Invoke(new()
    ///         {
    ///             Input = "%s7",
    ///             Args = new[]
    ///             {
    ///                 name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    ///     var share_vsw3 = new AliCloud.Vpc.Switch("share-vsw3", new()
    ///     {
    ///         VpcId = share_VPC3.Id,
    ///         ZoneId = "cn-hangzhou-k",
    ///         CidrBlock = "172.16.1.0/24",
    ///     });
    /// 
    ///     var @default = new AliCloud.Kms.Instance("default", new()
    ///     {
    ///         PaymentType = "PayAsYouGo",
    ///         ProductVersion = "3",
    ///         VpcId = vswitch.VpcId,
    ///         ZoneIds = new[]
    ///         {
    ///             vswitch.ZoneId,
    ///             vswitch_j.ZoneId,
    ///         },
    ///         VswitchIds = new[]
    ///         {
    ///             vswitch.Id,
    ///         },
    ///         ForceDeleteWithoutBackup = "true",
    ///         BindVpcs = new[]
    ///         {
    ///             new AliCloud.Kms.Inputs.InstanceBindVpcArgs
    ///             {
    ///                 VpcId = shareVswitch.VpcId,
    ///                 RegionId = region,
    ///                 VswitchId = shareVswitch.Id,
    ///                 VpcOwnerId = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///             },
    ///             new AliCloud.Kms.Inputs.InstanceBindVpcArgs
    ///             {
    ///                 VpcId = share_vswitch2.VpcId,
    ///                 RegionId = region,
    ///                 VswitchId = share_vswitch2.Id,
    ///                 VpcOwnerId = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///             },
    ///             new AliCloud.Kms.Inputs.InstanceBindVpcArgs
    ///             {
    ///                 VpcId = share_vsw3.VpcId,
    ///                 RegionId = region,
    ///                 VswitchId = share_vsw3.Id,
    ///                 VpcOwnerId = current.Apply(getAccountResult =&gt; getAccountResult.Id),
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// KMS Instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:kms/instance:Instance example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:kms/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Aucillary VPCs used to access this KMS instance See `bind_vpcs` below.
        /// </summary>
        [Output("bindVpcs")]
        public Output<ImmutableArray<Outputs.InstanceBindVpc>> BindVpcs { get; private set; } = null!;

        /// <summary>
        /// KMS instance certificate chain in PEM format.
        /// </summary>
        [Output("caCertificateChainPem")]
        public Output<string> CaCertificateChainPem { get; private set; } = null!;

        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// (Available since v1.233.1) Instance expiration time.
        /// </summary>
        [Output("endDate")]
        public Output<string> EndDate { get; private set; } = null!;

        /// <summary>
        /// Whether to force deletion even without backup.
        /// </summary>
        [Output("forceDeleteWithoutBackup")]
        public Output<string?> ForceDeleteWithoutBackup { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Maximum number of stored keys. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("keyNum")]
        public Output<int?> KeyNum { get; private set; } = null!;

        /// <summary>
        /// Instance Audit Log Switch. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("log")]
        public Output<string> Log { get; private set; } = null!;

        /// <summary>
        /// Instance log capacity. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("logStorage")]
        public Output<int> LogStorage { get; private set; } = null!;

        /// <summary>
        /// Payment type, valid values:
        /// - `Subscription`: Prepaid.
        /// - `PayAsYouGo`: Postpaid.
        /// </summary>
        [Output("paymentType")]
        public Output<string> PaymentType { get; private set; } = null!;

        /// <summary>
        /// Purchase cycle, in months. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// KMS Instance commodity type (software/hardware)
        /// </summary>
        [Output("productVersion")]
        public Output<string> ProductVersion { get; private set; } = null!;

        /// <summary>
        /// Automatic renewal period, in months. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("renewPeriod")]
        public Output<int?> RenewPeriod { get; private set; } = null!;

        /// <summary>
        /// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("renewStatus")]
        public Output<string> RenewStatus { get; private set; } = null!;

        /// <summary>
        /// Automatic renewal period unit, valid value:
        /// - `M`: Month.
        /// - `Y`: Year.
        /// </summary>
        [Output("renewalPeriodUnit")]
        public Output<string?> RenewalPeriodUnit { get; private set; } = null!;

        /// <summary>
        /// Maximum number of Secrets. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("secretNum")]
        public Output<int?> SecretNum { get; private set; } = null!;

        /// <summary>
        /// The computation performance level of the KMS instance. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("spec")]
        public Output<int?> Spec { get; private set; } = null!;

        /// <summary>
        /// Instance status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Output("vpcNum")]
        public Output<int?> VpcNum { get; private set; } = null!;

        /// <summary>
        /// Instance bind vswitches
        /// </summary>
        [Output("vswitchIds")]
        public Output<ImmutableArray<string>> VswitchIds { get; private set; } = null!;

        /// <summary>
        /// zone id
        /// </summary>
        [Output("zoneIds")]
        public Output<ImmutableArray<string>> ZoneIds { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:kms/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:kms/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("bindVpcs")]
        private InputList<Inputs.InstanceBindVpcArgs>? _bindVpcs;

        /// <summary>
        /// Aucillary VPCs used to access this KMS instance See `bind_vpcs` below.
        /// </summary>
        public InputList<Inputs.InstanceBindVpcArgs> BindVpcs
        {
            get => _bindVpcs ?? (_bindVpcs = new InputList<Inputs.InstanceBindVpcArgs>());
            set => _bindVpcs = value;
        }

        /// <summary>
        /// Whether to force deletion even without backup.
        /// </summary>
        [Input("forceDeleteWithoutBackup")]
        public Input<string>? ForceDeleteWithoutBackup { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Maximum number of stored keys. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("keyNum")]
        public Input<int>? KeyNum { get; set; }

        /// <summary>
        /// Instance Audit Log Switch. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("log")]
        public Input<string>? Log { get; set; }

        /// <summary>
        /// Instance log capacity. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("logStorage")]
        public Input<int>? LogStorage { get; set; }

        /// <summary>
        /// Payment type, valid values:
        /// - `Subscription`: Prepaid.
        /// - `PayAsYouGo`: Postpaid.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Purchase cycle, in months. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// KMS Instance commodity type (software/hardware)
        /// </summary>
        [Input("productVersion")]
        public Input<string>? ProductVersion { get; set; }

        /// <summary>
        /// Automatic renewal period, in months. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("renewPeriod")]
        public Input<int>? RenewPeriod { get; set; }

        /// <summary>
        /// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("renewStatus")]
        public Input<string>? RenewStatus { get; set; }

        /// <summary>
        /// Automatic renewal period unit, valid value:
        /// - `M`: Month.
        /// - `Y`: Year.
        /// </summary>
        [Input("renewalPeriodUnit")]
        public Input<string>? RenewalPeriodUnit { get; set; }

        /// <summary>
        /// Maximum number of Secrets. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("secretNum")]
        public Input<int>? SecretNum { get; set; }

        /// <summary>
        /// The computation performance level of the KMS instance. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("spec")]
        public Input<int>? Spec { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("vpcNum")]
        public Input<int>? VpcNum { get; set; }

        [Input("vswitchIds", required: true)]
        private InputList<string>? _vswitchIds;

        /// <summary>
        /// Instance bind vswitches
        /// </summary>
        public InputList<string> VswitchIds
        {
            get => _vswitchIds ?? (_vswitchIds = new InputList<string>());
            set => _vswitchIds = value;
        }

        [Input("zoneIds", required: true)]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// zone id
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        [Input("bindVpcs")]
        private InputList<Inputs.InstanceBindVpcGetArgs>? _bindVpcs;

        /// <summary>
        /// Aucillary VPCs used to access this KMS instance See `bind_vpcs` below.
        /// </summary>
        public InputList<Inputs.InstanceBindVpcGetArgs> BindVpcs
        {
            get => _bindVpcs ?? (_bindVpcs = new InputList<Inputs.InstanceBindVpcGetArgs>());
            set => _bindVpcs = value;
        }

        /// <summary>
        /// KMS instance certificate chain in PEM format.
        /// </summary>
        [Input("caCertificateChainPem")]
        public Input<string>? CaCertificateChainPem { get; set; }

        /// <summary>
        /// The creation time of the resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// (Available since v1.233.1) Instance expiration time.
        /// </summary>
        [Input("endDate")]
        public Input<string>? EndDate { get; set; }

        /// <summary>
        /// Whether to force deletion even without backup.
        /// </summary>
        [Input("forceDeleteWithoutBackup")]
        public Input<string>? ForceDeleteWithoutBackup { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Maximum number of stored keys. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("keyNum")]
        public Input<int>? KeyNum { get; set; }

        /// <summary>
        /// Instance Audit Log Switch. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("log")]
        public Input<string>? Log { get; set; }

        /// <summary>
        /// Instance log capacity. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("logStorage")]
        public Input<int>? LogStorage { get; set; }

        /// <summary>
        /// Payment type, valid values:
        /// - `Subscription`: Prepaid.
        /// - `PayAsYouGo`: Postpaid.
        /// </summary>
        [Input("paymentType")]
        public Input<string>? PaymentType { get; set; }

        /// <summary>
        /// Purchase cycle, in months. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// KMS Instance commodity type (software/hardware)
        /// </summary>
        [Input("productVersion")]
        public Input<string>? ProductVersion { get; set; }

        /// <summary>
        /// Automatic renewal period, in months. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("renewPeriod")]
        public Input<int>? RenewPeriod { get; set; }

        /// <summary>
        /// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("renewStatus")]
        public Input<string>? RenewStatus { get; set; }

        /// <summary>
        /// Automatic renewal period unit, valid value:
        /// - `M`: Month.
        /// - `Y`: Year.
        /// </summary>
        [Input("renewalPeriodUnit")]
        public Input<string>? RenewalPeriodUnit { get; set; }

        /// <summary>
        /// Maximum number of Secrets. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("secretNum")]
        public Input<int>? SecretNum { get; set; }

        /// <summary>
        /// The computation performance level of the KMS instance. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("spec")]
        public Input<int>? Spec { get; set; }

        /// <summary>
        /// Instance status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `payment_type` is `Subscription`.
        /// </summary>
        [Input("vpcNum")]
        public Input<int>? VpcNum { get; set; }

        [Input("vswitchIds")]
        private InputList<string>? _vswitchIds;

        /// <summary>
        /// Instance bind vswitches
        /// </summary>
        public InputList<string> VswitchIds
        {
            get => _vswitchIds ?? (_vswitchIds = new InputList<string>());
            set => _vswitchIds = value;
        }

        [Input("zoneIds")]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// zone id
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
