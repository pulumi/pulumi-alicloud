// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Hbr.Outputs
{

    [OutputType]
    public sealed class GetSnapshotsSnapshotResult
    {
        /// <summary>
        /// The actual data volume of the snapshot. Unit byte.
        /// </summary>
        public readonly string ActualBytes;
        /// <summary>
        /// The actual number of items in the snapshot. (Currently only file backup is available).
        /// </summary>
        public readonly string ActualItems;
        /// <summary>
        /// Backup type. Possible values: `COMPLETE` (full backup).
        /// </summary>
        public readonly string BackupType;
        /// <summary>
        /// The name of OSS bucket.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The incremental amount of backup data. Unit byte.
        /// </summary>
        public readonly string BytesDone;
        /// <summary>
        /// The total amount of data sources. Unit byte.
        /// </summary>
        public readonly string BytesTotal;
        /// <summary>
        /// The ID of ECS backup client.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// The time when the snapshot completed. UNIX time in seconds.
        /// </summary>
        public readonly string CompleteTime;
        /// <summary>
        /// File System Creation Time of Nas. Unix Time Seconds.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Snapshot creation time. UNIX time in seconds.
        /// </summary>
        public readonly string CreatedTime;
        public readonly string ErrorFile;
        /// <summary>
        /// The ID of NAS File system.
        /// </summary>
        public readonly string FileSystemId;
        /// <summary>
        /// The ID of the Snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of ECS instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The number of backup items. (Currently only file backup is available).
        /// </summary>
        public readonly string ItemsDone;
        /// <summary>
        /// The total number of data source items. (Currently only file backup is available).
        /// </summary>
        public readonly string ItemsTotal;
        /// <summary>
        /// The job ID of backup task.
        /// </summary>
        public readonly string JobId;
        /// <summary>
        /// The hashcode of parent backup snapshot.
        /// </summary>
        public readonly string ParentSnapshotHash;
        /// <summary>
        /// Backup Path.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Backup file prefix.
        /// </summary>
        public readonly string Prefix;
        /// <summary>
        /// The number of days to keep.
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// The hashcode of Snapshot.
        /// </summary>
        public readonly string SnapshotHash;
        /// <summary>
        /// The ID of the Snapshot.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// Data source type, optional values: `ECS_FILE`, `OSS`, `NAS`.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// The start time of the snapshot. UNIX time in seconds.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The status of snapshot execution. Possible values: `COMPLETE`, `PARTIAL_COMPLETE`, `FAILED`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The update time of snapshot. UNIX time in seconds.
        /// </summary>
        public readonly string UpdatedTime;

        [OutputConstructor]
        private GetSnapshotsSnapshotResult(
            string actualBytes,

            string actualItems,

            string backupType,

            string bucket,

            string bytesDone,

            string bytesTotal,

            string clientId,

            string completeTime,

            string createTime,

            string createdTime,

            string errorFile,

            string fileSystemId,

            string id,

            string instanceId,

            string itemsDone,

            string itemsTotal,

            string jobId,

            string parentSnapshotHash,

            string path,

            string prefix,

            string retention,

            string snapshotHash,

            string snapshotId,

            string sourceType,

            string startTime,

            string status,

            string updatedTime)
        {
            ActualBytes = actualBytes;
            ActualItems = actualItems;
            BackupType = backupType;
            Bucket = bucket;
            BytesDone = bytesDone;
            BytesTotal = bytesTotal;
            ClientId = clientId;
            CompleteTime = completeTime;
            CreateTime = createTime;
            CreatedTime = createdTime;
            ErrorFile = errorFile;
            FileSystemId = fileSystemId;
            Id = id;
            InstanceId = instanceId;
            ItemsDone = itemsDone;
            ItemsTotal = itemsTotal;
            JobId = jobId;
            ParentSnapshotHash = parentSnapshotHash;
            Path = path;
            Prefix = prefix;
            Retention = retention;
            SnapshotHash = snapshotHash;
            SnapshotId = snapshotId;
            SourceType = sourceType;
            StartTime = startTime;
            Status = status;
            UpdatedTime = updatedTime;
        }
    }
}
