// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Hbr.Inputs
{

    public sealed class OtsBackupPlanRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Backup type. Valid values: `COMPLETE`.
        /// </summary>
        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        /// <summary>
        /// Whether to disable the backup task. Valid values: `True`, `False`. Default values: `False`.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// Backup retention days, the minimum is 1.
        /// </summary>
        [Input("retention")]
        public Input<string>? Retention { get; set; }

        /// <summary>
        /// The name of the backup rule.**Note:** Required while SourceType equals `OTS_TABLE`. `RuleName` should be unique for the specific user.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Backup strategy. Optional format: `I|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
        /// - `startTime` Backup start time, UNIX time seconds.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        public OtsBackupPlanRuleGetArgs()
        {
        }
        public static new OtsBackupPlanRuleGetArgs Empty => new OtsBackupPlanRuleGetArgs();
    }
}
