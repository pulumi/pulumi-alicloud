// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Mse
{
    /// <summary>
    /// Provides a Microservice Engine (MSE) Engine Namespace resource.
    /// 
    /// For information about Microservice Engine (MSE) Engine Namespace and how to use it, see [What is Engine Namespace](https://www.alibabacloud.com/help/en/mse/developer-reference/api-mse-2019-05-31-createenginenamespace).
    /// 
    /// &gt; **NOTE:** Available since v1.166.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = AliCloud.GetZones.Invoke(new()
    ///     {
    ///         AvailableResourceCreation = "VSwitch",
    ///     });
    /// 
    ///     var exampleNetwork = new AliCloud.Vpc.Network("example", new()
    ///     {
    ///         VpcName = "terraform-example",
    ///         CidrBlock = "172.17.3.0/24",
    ///     });
    /// 
    ///     var exampleSwitch = new AliCloud.Vpc.Switch("example", new()
    ///     {
    ///         VswitchName = "terraform-example",
    ///         CidrBlock = "172.17.3.0/24",
    ///         VpcId = exampleNetwork.Id,
    ///         ZoneId = example.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///     });
    /// 
    ///     var exampleCluster = new AliCloud.Mse.Cluster("example", new()
    ///     {
    ///         ClusterSpecification = "MSE_SC_1_2_60_c",
    ///         ClusterType = "Nacos-Ans",
    ///         ClusterVersion = "NACOS_2_0_0",
    ///         InstanceCount = 3,
    ///         NetType = "privatenet",
    ///         PubNetworkFlow = "1",
    ///         ConnectionType = "slb",
    ///         ClusterAliasName = "terraform-example",
    ///         MseVersion = "mse_pro",
    ///         VswitchId = exampleSwitch.Id,
    ///         VpcId = exampleNetwork.Id,
    ///     });
    /// 
    ///     var exampleEngineNamespace = new AliCloud.Mse.EngineNamespace("example", new()
    ///     {
    ///         InstanceId = exampleCluster.Id,
    ///         NamespaceShowName = "terraform-example",
    ///         NamespaceId = "terraform-example",
    ///         NamespaceDesc = "description",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Microservice Engine (MSE) Engine Namespace can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:mse/engineNamespace:EngineNamespace example &lt;instance_id&gt;:&lt;namespace_id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:mse/engineNamespace:EngineNamespace")]
    public partial class EngineNamespace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The language type of the returned information. Valid values: `zh`, `en`.
        /// </summary>
        [Output("acceptLanguage")]
        public Output<string?> AcceptLanguage { get; private set; } = null!;

        /// <summary>
        /// The id of the cluster.It is formatted to `mse-xxxxxxxx`.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The description of the namespace.
        /// 
        /// **NOTE:** You must set `cluster_id` or `instance_id` or both.
        /// </summary>
        [Output("namespaceDesc")]
        public Output<string> NamespaceDesc { get; private set; } = null!;

        /// <summary>
        /// The id of Namespace.
        /// </summary>
        [Output("namespaceId")]
        public Output<string> NamespaceId { get; private set; } = null!;

        /// <summary>
        /// The name of the Engine Namespace.
        /// </summary>
        [Output("namespaceShowName")]
        public Output<string> NamespaceShowName { get; private set; } = null!;


        /// <summary>
        /// Create a EngineNamespace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EngineNamespace(string name, EngineNamespaceArgs args, CustomResourceOptions? options = null)
            : base("alicloud:mse/engineNamespace:EngineNamespace", name, args ?? new EngineNamespaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EngineNamespace(string name, Input<string> id, EngineNamespaceState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:mse/engineNamespace:EngineNamespace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EngineNamespace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EngineNamespace Get(string name, Input<string> id, EngineNamespaceState? state = null, CustomResourceOptions? options = null)
        {
            return new EngineNamespace(name, id, state, options);
        }
    }

    public sealed class EngineNamespaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The language type of the returned information. Valid values: `zh`, `en`.
        /// </summary>
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        /// <summary>
        /// The id of the cluster.It is formatted to `mse-xxxxxxxx`.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The description of the namespace.
        /// 
        /// **NOTE:** You must set `cluster_id` or `instance_id` or both.
        /// </summary>
        [Input("namespaceDesc")]
        public Input<string>? NamespaceDesc { get; set; }

        /// <summary>
        /// The id of Namespace.
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// The name of the Engine Namespace.
        /// </summary>
        [Input("namespaceShowName", required: true)]
        public Input<string> NamespaceShowName { get; set; } = null!;

        public EngineNamespaceArgs()
        {
        }
        public static new EngineNamespaceArgs Empty => new EngineNamespaceArgs();
    }

    public sealed class EngineNamespaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The language type of the returned information. Valid values: `zh`, `en`.
        /// </summary>
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        /// <summary>
        /// The id of the cluster.It is formatted to `mse-xxxxxxxx`.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The description of the namespace.
        /// 
        /// **NOTE:** You must set `cluster_id` or `instance_id` or both.
        /// </summary>
        [Input("namespaceDesc")]
        public Input<string>? NamespaceDesc { get; set; }

        /// <summary>
        /// The id of Namespace.
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// The name of the Engine Namespace.
        /// </summary>
        [Input("namespaceShowName")]
        public Input<string>? NamespaceShowName { get; set; }

        public EngineNamespaceState()
        {
        }
        public static new EngineNamespaceState Empty => new EngineNamespaceState();
    }
}
