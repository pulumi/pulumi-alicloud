// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Mse
{
    public static class GetClusters
    {
        /// <summary>
        /// This data source provides a list of MSE Clusters in an Alibaba Cloud account according to the specified filters.
        ///  
        /// &gt; **NOTE:** Available in v1.94.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(AliCloud.Mse.GetClusters.InvokeAsync(new AliCloud.Mse.GetClustersArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "mse-cn-0d9xxxx",
        ///             },
        ///             Status = "INIT_SUCCESS",
        ///         }));
        ///         this.ClusterId = example.Apply(example =&gt; example.Clusters?[0]?.Id);
        ///     }
        /// 
        ///     [Output("clusterId")]
        ///     public Output&lt;string&gt; ClusterId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("alicloud:mse/getClusters:getClusters", args ?? new GetClustersArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides a list of MSE Clusters in an Alibaba Cloud account according to the specified filters.
        ///  
        /// &gt; **NOTE:** Available in v1.94.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(AliCloud.Mse.GetClusters.InvokeAsync(new AliCloud.Mse.GetClustersArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "mse-cn-0d9xxxx",
        ///             },
        ///             Status = "INIT_SUCCESS",
        ///         }));
        ///         this.ClusterId = example.Apply(example =&gt; example.Clusters?[0]?.Id);
        ///     }
        /// 
        ///     [Output("clusterId")]
        ///     public Output&lt;string&gt; ClusterId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClustersResult>("alicloud:mse/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClustersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The alias name of MSE Cluster.
        /// </summary>
        [Input("clusterAliasName")]
        public string? ClusterAliasName { get; set; }

        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of MSE Cluster ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter the results by the cluster alias name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("requestPars")]
        public string? RequestPars { get; set; }

        /// <summary>
        /// The status of MSE Cluster. Valid: `DESTROY_FAILED`, `DESTROY_ING`, `DESTROY_SUCCESS`, `INIT_FAILED`, `INIT_ING`, `INIT_SUCCESS`, `INIT_TIME_OUT`, `RESTART_FAILED`, `RESTART_ING`, `RESTART_SUCCESS`, `SCALE_FAILED`, `SCALE_ING`, `SCALE_SUCCESS`
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetClustersArgs()
        {
        }
    }

    public sealed class GetClustersInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The alias name of MSE Cluster.
        /// </summary>
        [Input("clusterAliasName")]
        public Input<string>? ClusterAliasName { get; set; }

        [Input("enableDetails")]
        public Input<bool>? EnableDetails { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of MSE Cluster ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter the results by the cluster alias name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("requestPars")]
        public Input<string>? RequestPars { get; set; }

        /// <summary>
        /// The status of MSE Cluster. Valid: `DESTROY_FAILED`, `DESTROY_ING`, `DESTROY_SUCCESS`, `INIT_FAILED`, `INIT_ING`, `INIT_SUCCESS`, `INIT_TIME_OUT`, `RESTART_FAILED`, `RESTART_ING`, `RESTART_SUCCESS`, `SCALE_FAILED`, `SCALE_ING`, `SCALE_SUCCESS`
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetClustersInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClustersResult
    {
        public readonly string? ClusterAliasName;
        /// <summary>
        /// A list of MSE Clusters. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersClusterResult> Clusters;
        public readonly bool? EnableDetails;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of MSE Cluster ids.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of MSE Cluster names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly string? RequestPars;
        /// <summary>
        /// The status of MSE Cluster.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetClustersResult(
            string? clusterAliasName,

            ImmutableArray<Outputs.GetClustersClusterResult> clusters,

            bool? enableDetails,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile,

            string? requestPars,

            string? status)
        {
            ClusterAliasName = clusterAliasName;
            Clusters = clusters;
            EnableDetails = enableDetails;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            RequestPars = requestPars;
            Status = status;
        }
    }
}
