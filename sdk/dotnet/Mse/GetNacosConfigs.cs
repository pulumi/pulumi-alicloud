// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Mse
{
    public static class GetNacosConfigs
    {
        /// <summary>
        /// This data source provides the Mse Nacos Configs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.233.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var exampleNetwork = new AliCloud.Vpc.Network("example", new()
        ///     {
        ///         VpcName = "terraform-example",
        ///         CidrBlock = "172.17.3.0/24",
        ///     });
        /// 
        ///     var exampleSwitch = new AliCloud.Vpc.Switch("example", new()
        ///     {
        ///         VswitchName = "terraform-example",
        ///         CidrBlock = "172.17.3.0/24",
        ///         VpcId = exampleNetwork.Id,
        ///         ZoneId = example.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///     });
        /// 
        ///     var exampleCluster = new AliCloud.Mse.Cluster("example", new()
        ///     {
        ///         ConnectionType = "slb",
        ///         NetType = "privatenet",
        ///         VswitchId = exampleSwitch.Id,
        ///         ClusterSpecification = "MSE_SC_1_2_60_c",
        ///         ClusterVersion = "NACOS_2_0_0",
        ///         InstanceCount = 3,
        ///         PubNetworkFlow = "1",
        ///         ClusterAliasName = "example",
        ///         MseVersion = "mse_pro",
        ///         ClusterType = "Nacos-Ans",
        ///     });
        /// 
        ///     var exampleEngineNamespace = new AliCloud.Mse.EngineNamespace("example", new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         NamespaceShowName = "example",
        ///         NamespaceId = "example",
        ///     });
        /// 
        ///     var exampleNacosConfig = new AliCloud.Mse.NacosConfig("example", new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         DataId = "example",
        ///         Group = "example",
        ///         NamespaceId = exampleEngineNamespace.NamespaceId,
        ///         Content = "example",
        ///         Type = "text",
        ///         Tags = "example",
        ///         AppName = "example",
        ///         Desc = "example",
        ///     });
        /// 
        ///     var exampleGetNacosConfigs = AliCloud.Mse.GetNacosConfigs.Invoke(new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         EnableDetails = true,
        ///         NamespaceId = exampleEngineNamespace.NamespaceId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNacosConfigsResult> InvokeAsync(GetNacosConfigsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNacosConfigsResult>("alicloud:mse/getNacosConfigs:getNacosConfigs", args ?? new GetNacosConfigsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Mse Nacos Configs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.233.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var exampleNetwork = new AliCloud.Vpc.Network("example", new()
        ///     {
        ///         VpcName = "terraform-example",
        ///         CidrBlock = "172.17.3.0/24",
        ///     });
        /// 
        ///     var exampleSwitch = new AliCloud.Vpc.Switch("example", new()
        ///     {
        ///         VswitchName = "terraform-example",
        ///         CidrBlock = "172.17.3.0/24",
        ///         VpcId = exampleNetwork.Id,
        ///         ZoneId = example.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///     });
        /// 
        ///     var exampleCluster = new AliCloud.Mse.Cluster("example", new()
        ///     {
        ///         ConnectionType = "slb",
        ///         NetType = "privatenet",
        ///         VswitchId = exampleSwitch.Id,
        ///         ClusterSpecification = "MSE_SC_1_2_60_c",
        ///         ClusterVersion = "NACOS_2_0_0",
        ///         InstanceCount = 3,
        ///         PubNetworkFlow = "1",
        ///         ClusterAliasName = "example",
        ///         MseVersion = "mse_pro",
        ///         ClusterType = "Nacos-Ans",
        ///     });
        /// 
        ///     var exampleEngineNamespace = new AliCloud.Mse.EngineNamespace("example", new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         NamespaceShowName = "example",
        ///         NamespaceId = "example",
        ///     });
        /// 
        ///     var exampleNacosConfig = new AliCloud.Mse.NacosConfig("example", new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         DataId = "example",
        ///         Group = "example",
        ///         NamespaceId = exampleEngineNamespace.NamespaceId,
        ///         Content = "example",
        ///         Type = "text",
        ///         Tags = "example",
        ///         AppName = "example",
        ///         Desc = "example",
        ///     });
        /// 
        ///     var exampleGetNacosConfigs = AliCloud.Mse.GetNacosConfigs.Invoke(new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         EnableDetails = true,
        ///         NamespaceId = exampleEngineNamespace.NamespaceId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNacosConfigsResult> Invoke(GetNacosConfigsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNacosConfigsResult>("alicloud:mse/getNacosConfigs:getNacosConfigs", args ?? new GetNacosConfigsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Mse Nacos Configs of the current Alibaba Cloud user.
        /// 
        /// &gt; **NOTE:** Available since v1.233.0.
        /// 
        /// ## Example Usage
        /// 
        /// Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AliCloud.GetZones.Invoke(new()
        ///     {
        ///         AvailableResourceCreation = "VSwitch",
        ///     });
        /// 
        ///     var exampleNetwork = new AliCloud.Vpc.Network("example", new()
        ///     {
        ///         VpcName = "terraform-example",
        ///         CidrBlock = "172.17.3.0/24",
        ///     });
        /// 
        ///     var exampleSwitch = new AliCloud.Vpc.Switch("example", new()
        ///     {
        ///         VswitchName = "terraform-example",
        ///         CidrBlock = "172.17.3.0/24",
        ///         VpcId = exampleNetwork.Id,
        ///         ZoneId = example.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
        ///     });
        /// 
        ///     var exampleCluster = new AliCloud.Mse.Cluster("example", new()
        ///     {
        ///         ConnectionType = "slb",
        ///         NetType = "privatenet",
        ///         VswitchId = exampleSwitch.Id,
        ///         ClusterSpecification = "MSE_SC_1_2_60_c",
        ///         ClusterVersion = "NACOS_2_0_0",
        ///         InstanceCount = 3,
        ///         PubNetworkFlow = "1",
        ///         ClusterAliasName = "example",
        ///         MseVersion = "mse_pro",
        ///         ClusterType = "Nacos-Ans",
        ///     });
        /// 
        ///     var exampleEngineNamespace = new AliCloud.Mse.EngineNamespace("example", new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         NamespaceShowName = "example",
        ///         NamespaceId = "example",
        ///     });
        /// 
        ///     var exampleNacosConfig = new AliCloud.Mse.NacosConfig("example", new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         DataId = "example",
        ///         Group = "example",
        ///         NamespaceId = exampleEngineNamespace.NamespaceId,
        ///         Content = "example",
        ///         Type = "text",
        ///         Tags = "example",
        ///         AppName = "example",
        ///         Desc = "example",
        ///     });
        /// 
        ///     var exampleGetNacosConfigs = AliCloud.Mse.GetNacosConfigs.Invoke(new()
        ///     {
        ///         InstanceId = exampleCluster.Id,
        ///         EnableDetails = true,
        ///         NamespaceId = exampleEngineNamespace.NamespaceId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNacosConfigsResult> Invoke(GetNacosConfigsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNacosConfigsResult>("alicloud:mse/getNacosConfigs:getNacosConfigs", args ?? new GetNacosConfigsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNacosConfigsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The language type of the returned information. Valid values: `zh`, `en`.
        /// </summary>
        [Input("acceptLanguage")]
        public string? AcceptLanguage { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("appName")]
        public string? AppName { get; set; }

        /// <summary>
        /// The ID of the data.
        /// </summary>
        [Input("dataId")]
        public string? DataId { get; set; }

        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        /// <summary>
        /// The ID of the group.
        /// </summary>
        [Input("group")]
        public string? Group { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of MSE Engine Configs ids. It is formatted to `&lt;instance_id&gt;:&lt;namespace_id&gt;:&lt;data_id&gt;:&lt;group&gt;`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// The id of Namespace.
        /// </summary>
        [Input("namespaceId")]
        public string? NamespaceId { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// *
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The extended request parameters. The JSON format is supported.
        /// </summary>
        [Input("requestPars")]
        public string? RequestPars { get; set; }

        /// <summary>
        /// The tags of the configuration.
        /// </summary>
        [Input("tags")]
        public string? Tags { get; set; }

        public GetNacosConfigsArgs()
        {
        }
        public static new GetNacosConfigsArgs Empty => new GetNacosConfigsArgs();
    }

    public sealed class GetNacosConfigsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The language type of the returned information. Valid values: `zh`, `en`.
        /// </summary>
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// The ID of the data.
        /// </summary>
        [Input("dataId")]
        public Input<string>? DataId { get; set; }

        /// <summary>
        /// Default to `false`. Set it to `true` can output more details about resource attributes.
        /// </summary>
        [Input("enableDetails")]
        public Input<bool>? EnableDetails { get; set; }

        /// <summary>
        /// The ID of the group.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of MSE Engine Configs ids. It is formatted to `&lt;instance_id&gt;:&lt;namespace_id&gt;:&lt;data_id&gt;:&lt;group&gt;`.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The ID of the instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The id of Namespace.
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// File name where to save data source results (after running `pulumi preview`).
        /// *
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The extended request parameters. The JSON format is supported.
        /// </summary>
        [Input("requestPars")]
        public Input<string>? RequestPars { get; set; }

        /// <summary>
        /// The tags of the configuration.
        /// </summary>
        [Input("tags")]
        public Input<string>? Tags { get; set; }

        public GetNacosConfigsInvokeArgs()
        {
        }
        public static new GetNacosConfigsInvokeArgs Empty => new GetNacosConfigsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNacosConfigsResult
    {
        public readonly string? AcceptLanguage;
        /// <summary>
        /// The name of the application.
        /// </summary>
        public readonly string? AppName;
        /// <summary>
        /// A list of Mse Nacos Configs. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNacosConfigsConfigResult> Configs;
        /// <summary>
        /// The ID of the data.
        /// </summary>
        public readonly string? DataId;
        public readonly bool? EnableDetails;
        /// <summary>
        /// The ID of the group.
        /// </summary>
        public readonly string? Group;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string InstanceId;
        public readonly string? NamespaceId;
        public readonly string? OutputFile;
        public readonly string? RequestPars;
        /// <summary>
        /// The tags of the configuration.
        /// </summary>
        public readonly string? Tags;

        [OutputConstructor]
        private GetNacosConfigsResult(
            string? acceptLanguage,

            string? appName,

            ImmutableArray<Outputs.GetNacosConfigsConfigResult> configs,

            string? dataId,

            bool? enableDetails,

            string? group,

            string id,

            ImmutableArray<string> ids,

            string instanceId,

            string? namespaceId,

            string? outputFile,

            string? requestPars,

            string? tags)
        {
            AcceptLanguage = acceptLanguage;
            AppName = appName;
            Configs = configs;
            DataId = dataId;
            EnableDetails = enableDetails;
            Group = group;
            Id = id;
            Ids = ids;
            InstanceId = instanceId;
            NamespaceId = namespaceId;
            OutputFile = outputFile;
            RequestPars = requestPars;
            Tags = tags;
        }
    }
}
