// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Sag.Outputs
{

    [OutputType]
    public sealed class GetSmartagFlowLogsLogResult
    {
        /// <summary>
        /// The time interval at which log data of active connections is collected. Valid values: 60 to 6000. Default value: 300. Unit: second.
        /// </summary>
        public readonly int ActiveAging;
        /// <summary>
        /// The description of the flow log.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the flow log.
        /// </summary>
        public readonly string FlowLogId;
        /// <summary>
        /// The name of the flow log.
        /// </summary>
        public readonly string FlowLogName;
        /// <summary>
        /// The ID of the Flow Log.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The time interval at which log data of inactive connections is connected. Valid values: 10 to 600. Default value: 15. Unit: second.
        /// </summary>
        public readonly int InactiveAging;
        /// <summary>
        /// The name of the Log Service Logstore.
        /// </summary>
        public readonly string LogstoreName;
        /// <summary>
        /// The IP address of the NetFlow collector where the flow log is stored.
        /// </summary>
        public readonly string NetflowServerIp;
        /// <summary>
        /// The port of the NetFlow collector. Default value: 9995.
        /// </summary>
        public readonly int NetflowServerPort;
        /// <summary>
        /// The NetFlow version. Default value: V9.
        /// </summary>
        public readonly string NetflowVersion;
        /// <summary>
        /// The location where the flow log is stored. Valid values:  sls: The flow log is stored in Log Service. netflow: The flow log is stored on a NetFlow collector. all: The flow log is stored both in Log Service and on a NetFlow collector.
        /// </summary>
        public readonly string OutputType;
        /// <summary>
        /// The name of the Log Service project.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The ID of the resource group.
        /// </summary>
        public readonly string ResourceGroupId;
        /// <summary>
        /// The ID of the region where Log Service is deployed.
        /// </summary>
        public readonly string SlsRegionId;
        /// <summary>
        /// The status of the flow log. Valid values:  `Active`: The flow log is enabled. `Inactive`: The flow log is disabled.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The number of Smart Access gateway (SAG) instances with which the flow log is associated.
        /// </summary>
        public readonly int TotalSagNum;

        [OutputConstructor]
        private GetSmartagFlowLogsLogResult(
            int activeAging,

            string description,

            string flowLogId,

            string flowLogName,

            string id,

            int inactiveAging,

            string logstoreName,

            string netflowServerIp,

            int netflowServerPort,

            string netflowVersion,

            string outputType,

            string projectName,

            string resourceGroupId,

            string slsRegionId,

            string status,

            int totalSagNum)
        {
            ActiveAging = activeAging;
            Description = description;
            FlowLogId = flowLogId;
            FlowLogName = flowLogName;
            Id = id;
            InactiveAging = inactiveAging;
            LogstoreName = logstoreName;
            NetflowServerIp = netflowServerIp;
            NetflowServerPort = netflowServerPort;
            NetflowVersion = netflowVersion;
            OutputType = outputType;
            ProjectName = projectName;
            ResourceGroupId = resourceGroupId;
            SlsRegionId = slsRegionId;
            Status = status;
            TotalSagNum = totalSagNum;
        }
    }
}
