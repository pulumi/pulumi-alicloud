// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb.Inputs
{

    public sealed class RuleRuleConditionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration of the cookie. See See `CookieConfig` below.
        /// </summary>
        [Input("cookieConfig")]
        public Input<Inputs.RuleRuleConditionCookieConfigGetArgs>? CookieConfig { get; set; }

        /// <summary>
        /// The configuration of the header field. See `HeaderConfig` below.
        /// </summary>
        [Input("headerConfig")]
        public Input<Inputs.RuleRuleConditionHeaderConfigGetArgs>? HeaderConfig { get; set; }

        /// <summary>
        /// The configuration of the host field. See `HostConfig` below.
        /// </summary>
        [Input("hostConfig")]
        public Input<Inputs.RuleRuleConditionHostConfigGetArgs>? HostConfig { get; set; }

        /// <summary>
        /// The configuration of the request method. See `MethodConfig` below.
        /// </summary>
        [Input("methodConfig")]
        public Input<Inputs.RuleRuleConditionMethodConfigGetArgs>? MethodConfig { get; set; }

        /// <summary>
        /// The configuration of the path for the request to be forwarded. See `PathConfig` below.
        /// </summary>
        [Input("pathConfig")]
        public Input<Inputs.RuleRuleConditionPathConfigGetArgs>? PathConfig { get; set; }

        /// <summary>
        /// The configuration of the query string. See `QueryStringConfig` below.
        /// </summary>
        [Input("queryStringConfig")]
        public Input<Inputs.RuleRuleConditionQueryStringConfigGetArgs>? QueryStringConfig { get; set; }

        /// <summary>
        /// The configuration of the header field. See `ResponseHeaderConfig` below.
        /// </summary>
        [Input("responseHeaderConfig")]
        public Input<Inputs.RuleRuleConditionResponseHeaderConfigGetArgs>? ResponseHeaderConfig { get; set; }

        /// <summary>
        /// The configuration of the header field. See `ResponseStatusCodeConfig` below.
        /// </summary>
        [Input("responseStatusCodeConfig")]
        public Input<Inputs.RuleRuleConditionResponseStatusCodeConfigGetArgs>? ResponseStatusCodeConfig { get; set; }

        /// <summary>
        /// The Based on source IP traffic matching. Required and valid when Type is SourceIP. See `SourceIpConfig` below.
        /// </summary>
        [Input("sourceIpConfig")]
        public Input<Inputs.RuleRuleConditionSourceIpConfigGetArgs>? SourceIpConfig { get; set; }

        /// <summary>
        /// The type of the forwarding rule. Valid values:
        /// - `Host`: Requests are forwarded based on hosts.
        /// - `Path`: Requests are forwarded based on the path.
        /// - `Header`: Requests are forwarded based on the HTTP header field.
        /// - `QueryString`: Requests are forwarded based on the query string.
        /// - `Method`: Request are forwarded based on the request method.
        /// - `Cookie`: Requests are forwarded based on the cookie.
        /// - `SourceIp`: Requests are forwarded based on the source ip. **NOTE:** The `SourceIp` option is available since 1.162.0.
        /// - `ResponseHeader`: Response header. **NOTE:** The `SourceIp` option is available since 1.213.1.
        /// - `ResponseStatusCode`: Response status code. **NOTE:** The `SourceIp` option is available since 1.213.1.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public RuleRuleConditionGetArgs()
        {
        }
        public static new RuleRuleConditionGetArgs Empty => new RuleRuleConditionGetArgs();
    }
}
