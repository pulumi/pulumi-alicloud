// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb.Outputs
{

    [OutputType]
    public sealed class ListenerXForwardedForConfig
    {
        /// <summary>
        /// The Custom Header Field Names Only When xforwardedforclientcertclientverifyenabled Has a Value of True, this Value Will Not Take Effect until.
        /// </summary>
        public readonly string? XForwardedForClientCertClientVerifyAlias;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Clientcert-clientverify Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate to Verify the Results.
        /// </summary>
        public readonly bool? XForwardedForClientCertClientVerifyEnabled;
        /// <summary>
        /// The Custom Header Field Names Only When xforwardedforclientcertfingerprintenabled, Which Evaluates to True When the Entry into Force of.
        /// </summary>
        public readonly string? XForwardedForClientCertFingerPrintAlias;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Clientcert-fingerprint Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate Fingerprint Value.
        /// </summary>
        public readonly bool? XForwardedForClientCertFingerPrintEnabled;
        /// <summary>
        /// The Custom Header Field Names Only When xforwardedforclientcertsubjectdnenabled, Which Evaluates to True When the Entry into Force of.
        /// </summary>
        public readonly string? XForwardedForClientCertIssuerDnAlias;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Clientcert-issuerdn Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate after the Manifests Are Signed, the Publisher Information.
        /// </summary>
        public readonly bool? XForwardedForClientCertIssuerDnEnabled;
        /// <summary>
        /// The Custom Header Field Name,
        /// </summary>
        public readonly string? XForwardedForClientCertSubjectDnAlias;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Clientcert-subjectdn Header Field Is Used to Obtain Access to the Server Load Balancer Instance of the Client Certificate Owner Information.
        /// </summary>
        public readonly bool? XForwardedForClientCertSubjectDnEnabled;
        /// <summary>
        /// Whether to use the X-Forwarded-Client-Ip header to obtain the source IP address of the server load balancer instance. Value:
        /// 
        /// true: Yes.
        /// 
        /// false (default): No.
        /// 
        /// Note HTTP, HTTPS, and QUIC listeners support this parameter. The function corresponding to this parameter is not open by default. Please contact the account manager if you need to use it.
        /// </summary>
        public readonly bool? XForwardedForClientSourceIpsEnabled;
        /// <summary>
        /// Specify the trusted proxy IP.
        /// 
        /// Application-oriented load balancing ALB will traverse the X-Forwarded-For from back to front, and select the first IP that is not in the trusted IP list as the real client IP, which will be used for the source IP speed limit.
        /// </summary>
        public readonly string? XForwardedForClientSourceIpsTrusted;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Client-Port Header Field Is Used to Obtain Access to Server Load Balancer Instances to the Client, and Those of the Ports.
        /// </summary>
        public readonly bool? XForwardedForClientSrcPortEnabled;
        /// <summary>
        /// Whether to Enable by X-Forwarded-For Header Field Is Used to Obtain the Client IP Addresses.
        /// </summary>
        public readonly bool? XForwardedForEnabled;
        /// <summary>
        /// Whether to enable the X-Forwarded-Host header field to obtain the domain name of the client accessing the Application Load Balancer. Value:
        /// 
        /// true: Yes.
        /// 
        /// false (default): No.
        /// 
        /// HTTP, HTTPS, and QUIC listeners support this parameter.
        /// </summary>
        public readonly bool? XForwardedForHostEnabled;
        /// <summary>
        /// Schema for processing X-Forwarded-For header fields. This value takes effect only when XForwardedForEnabled is true. Value:
        /// 
        /// append (default): append.
        /// 
        /// remove: Delete.
        /// 
        /// Configure append to add the last hop IP address to the X-Forwarded-For header field before sending the request to the backend service.
        /// 
        /// Configure remove to delete the X-Forwarded-For header before the request is sent to the backend service, regardless of whether the request carries X-Forwarded-For header fields.
        /// 
        /// HTTP and HTTPS listeners support this parameter.
        /// </summary>
        public readonly string? XForwardedForProcessingMode;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Proto Header Field Is Used to Obtain the Server Load Balancer Instance Snooping Protocols.
        /// </summary>
        public readonly bool? XForwardedForProtoEnabled;
        /// <summary>
        /// Indicates Whether the SLB-ID Header Field Is Used to Obtain the Load Balancing Instance Id
        /// </summary>
        public readonly bool? XForwardedForSlbIdEnabled;
        /// <summary>
        /// Indicates Whether the X-Forwarded-Port Header Field Is Used to Obtain the Server Load Balancer Instance Listening Port
        /// </summary>
        public readonly bool? XForwardedForSlbPortEnabled;

        [OutputConstructor]
        private ListenerXForwardedForConfig(
            string? xForwardedForClientCertClientVerifyAlias,

            bool? xForwardedForClientCertClientVerifyEnabled,

            string? xForwardedForClientCertFingerPrintAlias,

            bool? xForwardedForClientCertFingerPrintEnabled,

            string? xForwardedForClientCertIssuerDnAlias,

            bool? xForwardedForClientCertIssuerDnEnabled,

            string? xForwardedForClientCertSubjectDnAlias,

            bool? xForwardedForClientCertSubjectDnEnabled,

            bool? xForwardedForClientSourceIpsEnabled,

            string? xForwardedForClientSourceIpsTrusted,

            bool? xForwardedForClientSrcPortEnabled,

            bool? xForwardedForEnabled,

            bool? xForwardedForHostEnabled,

            string? xForwardedForProcessingMode,

            bool? xForwardedForProtoEnabled,

            bool? xForwardedForSlbIdEnabled,

            bool? xForwardedForSlbPortEnabled)
        {
            XForwardedForClientCertClientVerifyAlias = xForwardedForClientCertClientVerifyAlias;
            XForwardedForClientCertClientVerifyEnabled = xForwardedForClientCertClientVerifyEnabled;
            XForwardedForClientCertFingerPrintAlias = xForwardedForClientCertFingerPrintAlias;
            XForwardedForClientCertFingerPrintEnabled = xForwardedForClientCertFingerPrintEnabled;
            XForwardedForClientCertIssuerDnAlias = xForwardedForClientCertIssuerDnAlias;
            XForwardedForClientCertIssuerDnEnabled = xForwardedForClientCertIssuerDnEnabled;
            XForwardedForClientCertSubjectDnAlias = xForwardedForClientCertSubjectDnAlias;
            XForwardedForClientCertSubjectDnEnabled = xForwardedForClientCertSubjectDnEnabled;
            XForwardedForClientSourceIpsEnabled = xForwardedForClientSourceIpsEnabled;
            XForwardedForClientSourceIpsTrusted = xForwardedForClientSourceIpsTrusted;
            XForwardedForClientSrcPortEnabled = xForwardedForClientSrcPortEnabled;
            XForwardedForEnabled = xForwardedForEnabled;
            XForwardedForHostEnabled = xForwardedForHostEnabled;
            XForwardedForProcessingMode = xForwardedForProcessingMode;
            XForwardedForProtoEnabled = xForwardedForProtoEnabled;
            XForwardedForSlbIdEnabled = xForwardedForSlbIdEnabled;
            XForwardedForSlbPortEnabled = xForwardedForSlbPortEnabled;
        }
    }
}
