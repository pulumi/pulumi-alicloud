// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb.Outputs
{

    [OutputType]
    public sealed class GetServerGroupsGroupHealthCheckConfigResult
    {
        /// <summary>
        /// The status code for a successful health check. Multiple status codes can be specified as a list.
        /// </summary>
        public readonly ImmutableArray<string> HealthCheckCodes;
        /// <summary>
        /// The port of the backend server that is used for health checks.
        /// </summary>
        public readonly int HealthCheckConnectPort;
        /// <summary>
        /// Indicates whether health checks are enabled.
        /// </summary>
        public readonly bool HealthCheckEnabled;
        /// <summary>
        /// The domain name that is used for health checks.
        /// </summary>
        public readonly string HealthCheckHost;
        /// <summary>
        /// HTTP protocol version.
        /// </summary>
        public readonly string HealthCheckHttpVersion;
        /// <summary>
        /// The time interval between two consecutive health checks.
        /// </summary>
        public readonly int HealthCheckInterval;
        /// <summary>
        /// Health check method.
        /// </summary>
        public readonly string HealthCheckMethod;
        /// <summary>
        /// The forwarding rule path of health checks.
        /// </summary>
        public readonly string HealthCheckPath;
        /// <summary>
        /// Health check protocol.
        /// </summary>
        public readonly string HealthCheckProtocol;
        /// <summary>
        /// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy.
        /// </summary>
        public readonly int HealthCheckTimeout;
        /// <summary>
        /// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success.
        /// </summary>
        public readonly int HealthyThreshold;
        /// <summary>
        /// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail.
        /// </summary>
        public readonly int UnhealthyThreshold;

        [OutputConstructor]
        private GetServerGroupsGroupHealthCheckConfigResult(
            ImmutableArray<string> healthCheckCodes,

            int healthCheckConnectPort,

            bool healthCheckEnabled,

            string healthCheckHost,

            string healthCheckHttpVersion,

            int healthCheckInterval,

            string healthCheckMethod,

            string healthCheckPath,

            string healthCheckProtocol,

            int healthCheckTimeout,

            int healthyThreshold,

            int unhealthyThreshold)
        {
            HealthCheckCodes = healthCheckCodes;
            HealthCheckConnectPort = healthCheckConnectPort;
            HealthCheckEnabled = healthCheckEnabled;
            HealthCheckHost = healthCheckHost;
            HealthCheckHttpVersion = healthCheckHttpVersion;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckMethod = healthCheckMethod;
            HealthCheckPath = healthCheckPath;
            HealthCheckProtocol = healthCheckProtocol;
            HealthCheckTimeout = healthCheckTimeout;
            HealthyThreshold = healthyThreshold;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
