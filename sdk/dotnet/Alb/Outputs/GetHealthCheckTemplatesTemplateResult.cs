// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb.Outputs
{

    [OutputType]
    public sealed class GetHealthCheckTemplatesTemplateResult
    {
        /// <summary>
        /// The HTTP status code that indicates a successful health check.
        /// </summary>
        public readonly ImmutableArray<string> HealthCheckCodes;
        /// <summary>
        /// The number of the port that is used for health checks.  Valid values: `0` to `65535`.  Default value:` 0`. This default value indicates that the backend server is used for health checks.
        /// </summary>
        public readonly int HealthCheckConnectPort;
        /// <summary>
        /// The domain name that is used for health checks. Default value:  `$SERVER_IP`. The domain name must be 1 to 80 characters in length.
        /// </summary>
        public readonly string HealthCheckHost;
        /// <summary>
        /// The version of the HTTP protocol.  Valid values: `HTTP1.0` and `HTTP1.1`.  Default value: `HTTP1.1`.
        /// </summary>
        public readonly string HealthCheckHttpVersion;
        /// <summary>
        /// The time interval between two consecutive health checks.  Valid values: `1` to `50`. Unit: seconds.  Default value: `2`.
        /// </summary>
        public readonly int HealthCheckInterval;
        /// <summary>
        /// The health check method.  Valid values: `GET` and `HEAD`.  Default value: `HEAD`.
        /// </summary>
        public readonly string HealthCheckMethod;
        /// <summary>
        /// The URL that is used for health checks.  The URL must be 1 to 80 characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.), percent signs (%), question marks (?), number signs (#), and ampersands (&amp;). The URL can also contain the following extended characters: ` _ ; ~ ! ( )* [ ] @ $ ^ : ' , +. The URL must start with a forward slash (/)`.
        /// </summary>
        public readonly string HealthCheckPath;
        /// <summary>
        /// The protocol that is used for health checks.  Valid values: HTTP and TCP.  Default value: HTTP.
        /// </summary>
        public readonly string HealthCheckProtocol;
        /// <summary>
        /// The ID of the resource.
        /// </summary>
        public readonly string HealthCheckTemplateId;
        /// <summary>
        /// The name of the health check template.  The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
        /// </summary>
        public readonly string HealthCheckTemplateName;
        /// <summary>
        /// The timeout period of a health check response. If the backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the health check fails.  Valid values: `1` to `300`. Unit: seconds.  Default value: `5`.
        /// </summary>
        public readonly int HealthCheckTimeout;
        /// <summary>
        /// The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy (from fail to success). Valid values: `2` to `10`.  Default value: `3`. Unit: seconds.
        /// </summary>
        public readonly int HealthyThreshold;
        /// <summary>
        /// The ID of the Health Check Template.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of times that an healthy backend server must consecutively fail health checks before it is declared unhealthy (from success to fail). Valid values: `2` to `10`.  Default value: `3`. Unit: seconds.
        /// </summary>
        public readonly int UnhealthyThreshold;

        [OutputConstructor]
        private GetHealthCheckTemplatesTemplateResult(
            ImmutableArray<string> healthCheckCodes,

            int healthCheckConnectPort,

            string healthCheckHost,

            string healthCheckHttpVersion,

            int healthCheckInterval,

            string healthCheckMethod,

            string healthCheckPath,

            string healthCheckProtocol,

            string healthCheckTemplateId,

            string healthCheckTemplateName,

            int healthCheckTimeout,

            int healthyThreshold,

            string id,

            int unhealthyThreshold)
        {
            HealthCheckCodes = healthCheckCodes;
            HealthCheckConnectPort = healthCheckConnectPort;
            HealthCheckHost = healthCheckHost;
            HealthCheckHttpVersion = healthCheckHttpVersion;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckMethod = healthCheckMethod;
            HealthCheckPath = healthCheckPath;
            HealthCheckProtocol = healthCheckProtocol;
            HealthCheckTemplateId = healthCheckTemplateId;
            HealthCheckTemplateName = healthCheckTemplateName;
            HealthCheckTimeout = healthCheckTimeout;
            HealthyThreshold = healthyThreshold;
            Id = id;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
