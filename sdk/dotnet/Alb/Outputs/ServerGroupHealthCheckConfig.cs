// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb.Outputs
{

    [OutputType]
    public sealed class ServerGroupHealthCheckConfig
    {
        /// <summary>
        /// The HTTP status codes that are used to indicate whether the backend server passes the health check. Valid values:
        /// - If `health_check_protocol` is set to `HTTP` or `HTTPS`. Valid values: `http_2xx`, `http_3xx`, `http_4xx`, and `http_5xx`. Default value: `http_2xx`.
        /// - If `health_check_protocol` is set to `gRPC`. Valid values: `0` to `99`. Default value: `0`.
        /// </summary>
        public readonly ImmutableArray<string> HealthCheckCodes;
        /// <summary>
        /// The backend port that is used for health checks. Default value: `0`. Valid values: `0` to `65535`. A value of 0 indicates that a backend server port is used for health checks.
        /// </summary>
        public readonly int? HealthCheckConnectPort;
        /// <summary>
        /// Specifies whether to enable the health check feature. Valid values: `true`, `false`.
        /// </summary>
        public readonly bool HealthCheckEnabled;
        /// <summary>
        /// The domain name that is used for health checks.
        /// </summary>
        public readonly string? HealthCheckHost;
        /// <summary>
        /// The version of the HTTP protocol. Default value: `HTTP1.1`. Valid values: `HTTP1.0` and `HTTP1.1`. **NOTE:** This parameter takes effect only when `health_check_protocol` is set to `HTTP` or `HTTPS`.
        /// </summary>
        public readonly string? HealthCheckHttpVersion;
        /// <summary>
        /// The interval at which health checks are performed. Unit: seconds. Default value: `2`. Valid values: `1` to `50`.
        /// </summary>
        public readonly int? HealthCheckInterval;
        /// <summary>
        /// The HTTP method that is used for health checks. Default value: `GET`. Valid values: `GET`, `POST`, `HEAD`. **NOTE:** This parameter takes effect only when `health_check_protocol` is set to `HTTP`, `HTTPS`, or `gRPC`. From version 1.215.0, `health_check_method` can be set to `POST`.
        /// </summary>
        public readonly string? HealthCheckMethod;
        /// <summary>
        /// The path that is used for health checks. **NOTE:** This parameter takes effect only when `health_check_protocol` is set to `HTTP` or `HTTPS`.
        /// </summary>
        public readonly string? HealthCheckPath;
        /// <summary>
        /// The protocol that is used for health checks. Valid values: `HTTP`, `HTTPS`, `TCP` and `gRPC`.
        /// </summary>
        public readonly string? HealthCheckProtocol;
        /// <summary>
        /// The timeout period for a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Default value: `5`. Valid values: `1` to `300`. **NOTE:** If the value of `health_check_timeout` is smaller than the value of `health_check_interval`, the value of `health_check_timeout` is ignored and the value of `health_check_interval` is used.
        /// </summary>
        public readonly int? HealthCheckTimeout;
        /// <summary>
        /// The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy. Default value: `3`. Valid values: `2` to `10`.
        /// </summary>
        public readonly int? HealthyThreshold;
        /// <summary>
        /// The number of times that a healthy backend server must consecutively fail health checks before it is declared unhealthy. Default value: `3`. Valid values: `2` to `10`.
        /// </summary>
        public readonly int? UnhealthyThreshold;

        [OutputConstructor]
        private ServerGroupHealthCheckConfig(
            ImmutableArray<string> healthCheckCodes,

            int? healthCheckConnectPort,

            bool healthCheckEnabled,

            string? healthCheckHost,

            string? healthCheckHttpVersion,

            int? healthCheckInterval,

            string? healthCheckMethod,

            string? healthCheckPath,

            string? healthCheckProtocol,

            int? healthCheckTimeout,

            int? healthyThreshold,

            int? unhealthyThreshold)
        {
            HealthCheckCodes = healthCheckCodes;
            HealthCheckConnectPort = healthCheckConnectPort;
            HealthCheckEnabled = healthCheckEnabled;
            HealthCheckHost = healthCheckHost;
            HealthCheckHttpVersion = healthCheckHttpVersion;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckMethod = healthCheckMethod;
            HealthCheckPath = healthCheckPath;
            HealthCheckProtocol = healthCheckProtocol;
            HealthCheckTimeout = healthCheckTimeout;
            HealthyThreshold = healthyThreshold;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
