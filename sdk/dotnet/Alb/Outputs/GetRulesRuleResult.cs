// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb.Outputs
{

    [OutputType]
    public sealed class GetRulesRuleResult
    {
        /// <summary>
        /// The ID of the Rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the listener to which the forwarding rule belongs.
        /// </summary>
        public readonly string ListenerId;
        /// <summary>
        /// The ID of the Application Load Balancer (ALB) instance to which the forwarding rule belongs.
        /// </summary>
        public readonly string LoadBalancerId;
        /// <summary>
        /// The priority of the rule.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// The actions of the forwarding rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleRuleActionResult> RuleActions;
        /// <summary>
        /// The conditions of the forwarding rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleRuleConditionResult> RuleConditions;
        /// <summary>
        /// The ID of the Rule.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// The name of the forwarding rule.
        /// </summary>
        public readonly string RuleName;
        /// <summary>
        /// The status of the forwarding rule. Valid values: `Provisioning`, `Configuring`, `Available`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetRulesRuleResult(
            string id,

            string listenerId,

            string loadBalancerId,

            int priority,

            ImmutableArray<Outputs.GetRulesRuleRuleActionResult> ruleActions,

            ImmutableArray<Outputs.GetRulesRuleRuleConditionResult> ruleConditions,

            string ruleId,

            string ruleName,

            string status)
        {
            Id = id;
            ListenerId = listenerId;
            LoadBalancerId = loadBalancerId;
            Priority = priority;
            RuleActions = ruleActions;
            RuleConditions = ruleConditions;
            RuleId = ruleId;
            RuleName = ruleName;
            Status = status;
        }
    }
}
