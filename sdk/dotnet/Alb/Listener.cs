// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Alb
{
    /// <summary>
    /// Provides a Application Load Balancer (ALB) Listener resource.
    /// 
    /// For information about Application Load Balancer (ALB) Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-createlistener).
    /// 
    /// &gt; **NOTE:** Available since v1.133.0.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var name = config.Get("name") ?? "tf_example";
    ///     var @default = AliCloud.Alb.GetZones.Invoke();
    /// 
    ///     var defaultGetResourceGroups = AliCloud.ResourceManager.GetResourceGroups.Invoke();
    /// 
    ///     var defaultGetInstanceTypes = AliCloud.Ecs.GetInstanceTypes.Invoke(new()
    ///     {
    ///         AvailabilityZone = @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         CpuCoreCount = 1,
    ///         MemorySize = 2,
    ///     });
    /// 
    ///     var defaultGetImages = AliCloud.Ecs.GetImages.Invoke(new()
    ///     {
    ///         NameRegex = "^ubuntu_18.*64",
    ///         Owners = "system",
    ///     });
    /// 
    ///     var defaultNetwork = new AliCloud.Vpc.Network("default", new()
    ///     {
    ///         VpcName = name,
    ///         CidrBlock = "10.4.0.0/16",
    ///     });
    /// 
    ///     var defaultSwitch = new List&lt;AliCloud.Vpc.Switch&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         defaultSwitch.Add(new AliCloud.Vpc.Switch($"default-{range.Value}", new()
    ///         {
    ///             VpcId = defaultNetwork.Id,
    ///             CidrBlock = Std.Format.Invoke(new()
    ///             {
    ///                 Input = "10.4.%d.0/24",
    ///                 Args = new[]
    ///                 {
    ///                     range.Value + 1,
    ///                 },
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///             ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones)[range.Value].Id),
    ///             VswitchName = Std.Format.Invoke(new()
    ///             {
    ///                 Input = $"{name}_%d",
    ///                 Args = new[]
    ///                 {
    ///                     range.Value + 1,
    ///                 },
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///         }));
    ///     }
    ///     var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("default", new()
    ///     {
    ///         SecurityGroupName = name,
    ///         Description = name,
    ///         VpcId = defaultNetwork.Id,
    ///     });
    /// 
    ///     var defaultLoadBalancer = new AliCloud.Alb.LoadBalancer("default", new()
    ///     {
    ///         VpcId = defaultNetwork.Id,
    ///         AddressType = "Internet",
    ///         AddressAllocatedMode = "Fixed",
    ///         LoadBalancerName = name,
    ///         LoadBalancerEdition = "Basic",
    ///         ResourceGroupId = defaultGetResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Groups[0]?.Id),
    ///         LoadBalancerBillingConfig = new AliCloud.Alb.Inputs.LoadBalancerLoadBalancerBillingConfigArgs
    ///         {
    ///             PayType = "PayAsYouGo",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Created", "TF" },
    ///         },
    ///         ZoneMappings = new[]
    ///         {
    ///             new AliCloud.Alb.Inputs.LoadBalancerZoneMappingArgs
    ///             {
    ///                 VswitchId = defaultSwitch[0].Id,
    ///                 ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
    ///             },
    ///             new AliCloud.Alb.Inputs.LoadBalancerZoneMappingArgs
    ///             {
    ///                 VswitchId = defaultSwitch[1].Id,
    ///                 ZoneId = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[1]?.Id)),
    ///             },
    ///         },
    ///         ModificationProtectionConfig = new AliCloud.Alb.Inputs.LoadBalancerModificationProtectionConfigArgs
    ///         {
    ///             Status = "NonProtection",
    ///         },
    ///     });
    /// 
    ///     var defaultInstance = new AliCloud.Ecs.Instance("default", new()
    ///     {
    ///         AvailabilityZone = @default.Apply(@default =&gt; @default.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id)),
    ///         InstanceName = name,
    ///         ImageId = defaultGetImages.Apply(getImagesResult =&gt; getImagesResult.Images[0]?.Id),
    ///         InstanceType = defaultGetInstanceTypes.Apply(getInstanceTypesResult =&gt; getInstanceTypesResult.InstanceTypes[0]?.Id),
    ///         SecurityGroups = new[]
    ///         {
    ///             defaultSecurityGroup.Id,
    ///         },
    ///         VswitchId = defaultSwitch[0].Id,
    ///     });
    /// 
    ///     var defaultServerGroup = new AliCloud.Alb.ServerGroup("default", new()
    ///     {
    ///         Protocol = "HTTP",
    ///         VpcId = defaultNetwork.Id,
    ///         ServerGroupName = name,
    ///         ResourceGroupId = defaultGetResourceGroups.Apply(getResourceGroupsResult =&gt; getResourceGroupsResult.Groups[0]?.Id),
    ///         HealthCheckConfig = new AliCloud.Alb.Inputs.ServerGroupHealthCheckConfigArgs
    ///         {
    ///             HealthCheckConnectPort = 46325,
    ///             HealthCheckEnabled = true,
    ///             HealthCheckHost = "tf-example.com",
    ///             HealthCheckCodes = new[]
    ///             {
    ///                 "http_2xx",
    ///                 "http_3xx",
    ///                 "http_4xx",
    ///             },
    ///             HealthCheckHttpVersion = "HTTP1.1",
    ///             HealthCheckInterval = 2,
    ///             HealthCheckMethod = "HEAD",
    ///             HealthCheckPath = "/tf-example",
    ///             HealthCheckProtocol = "HTTP",
    ///             HealthCheckTimeout = 5,
    ///             HealthyThreshold = 3,
    ///             UnhealthyThreshold = 3,
    ///         },
    ///         StickySessionConfig = new AliCloud.Alb.Inputs.ServerGroupStickySessionConfigArgs
    ///         {
    ///             StickySessionEnabled = true,
    ///             Cookie = "tf-example",
    ///             StickySessionType = "Server",
    ///         },
    ///         Servers = new[]
    ///         {
    ///             new AliCloud.Alb.Inputs.ServerGroupServerArgs
    ///             {
    ///                 Description = name,
    ///                 Port = 80,
    ///                 ServerId = defaultInstance.Id,
    ///                 ServerIp = defaultInstance.PrivateIp,
    ///                 ServerType = "Ecs",
    ///                 Weight = 10,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var defaultListener = new AliCloud.Alb.Listener("default", new()
    ///     {
    ///         LoadBalancerId = defaultLoadBalancer.Id,
    ///         ListenerProtocol = "HTTP",
    ///         ListenerPort = 443,
    ///         ListenerDescription = name,
    ///         DefaultActions = new[]
    ///         {
    ///             new AliCloud.Alb.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "ForwardGroup",
    ///                 ForwardGroupConfig = new AliCloud.Alb.Inputs.ListenerDefaultActionForwardGroupConfigArgs
    ///                 {
    ///                     ServerGroupTuples = new[]
    ///                     {
    ///                         new AliCloud.Alb.Inputs.ListenerDefaultActionForwardGroupConfigServerGroupTupleArgs
    ///                         {
    ///                             ServerGroupId = defaultServerGroup.Id,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Application Load Balancer (ALB) Listener can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import alicloud:alb/listener:Listener example &lt;id&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:alb/listener:Listener")]
    public partial class Listener : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Access Log Whether to Enable Carry Custom Header Field. Valid values: `True`, `False`. Default Value: `False`.
        /// 
        /// &gt; **NOTE:**  Only Instances outside the Security Group to Access the Log Switch `Accesslogenabled` Open, in Order to Set This Parameter to the `True`.
        /// </summary>
        [Output("accessLogRecordCustomizedHeadersEnabled")]
        public Output<bool?> AccessLogRecordCustomizedHeadersEnabled { get; private set; } = null!;

        /// <summary>
        /// Xtrace Configuration Information. See `AccessLogTracingConfig` below.
        /// </summary>
        [Output("accessLogTracingConfig")]
        public Output<Outputs.ListenerAccessLogTracingConfig?> AccessLogTracingConfig { get; private set; } = null!;

        /// <summary>
        /// The configurations of the access control lists (ACLs). See `AclConfig` below for details. **NOTE:** Field `AclConfig` has been deprecated from provider version 1.163.0, and it will be removed in the future version. Please use the new resource `alicloud.alb.ListenerAclAttachment`.,
        /// </summary>
        [Output("aclConfig")]
        public Output<Outputs.ListenerAclConfig> AclConfig { get; private set; } = null!;

        /// <summary>
        /// The list of certificates. See `CaCertificates` below.
        /// </summary>
        [Output("caCertificates")]
        public Output<ImmutableArray<Outputs.ListenerCaCertificate>> CaCertificates { get; private set; } = null!;

        /// <summary>
        /// Whether to turn on two-way authentication. Value:
        /// </summary>
        [Output("caEnabled")]
        public Output<bool?> CaEnabled { get; private set; } = null!;

        /// <summary>
        /// The list of certificates. See `Certificates` below.
        /// </summary>
        [Output("certificates")]
        public Output<Outputs.ListenerCertificates?> Certificates { get; private set; } = null!;

        /// <summary>
        /// The Default Rule Action List See `DefaultActions` below.
        /// </summary>
        [Output("defaultActions")]
        public Output<ImmutableArray<Outputs.ListenerDefaultAction>> DefaultActions { get; private set; } = null!;

        /// <summary>
        /// Whether to PreCheck only this request. Value:
        /// </summary>
        [Output("dryRun")]
        public Output<bool?> DryRun { get; private set; } = null!;

        /// <summary>
        /// Whether to Enable Gzip Compression, as a Specific File Type on a Compression. Valid Values: True Or False. Default Value: TRUE.
        /// </summary>
        [Output("gzipEnabled")]
        public Output<bool> GzipEnabled { get; private set; } = null!;

        /// <summary>
        /// Whether to Enable HTTP/2 Features. Valid Values: True Or False. Default Value: TRUE.
        /// </summary>
        [Output("http2Enabled")]
        public Output<bool> Http2Enabled { get; private set; } = null!;

        /// <summary>
        /// Specify the Connection Idle Timeout Value: 1 to 60 seconds.
        /// </summary>
        [Output("idleTimeout")]
        public Output<int> IdleTimeout { get; private set; } = null!;

        /// <summary>
        /// Set the IP Address of the Listened Description. Length Is from 2 to 256 Characters.
        /// </summary>
        [Output("listenerDescription")]
        public Output<string?> ListenerDescription { get; private set; } = null!;

        /// <summary>
        /// The SLB Instance Front-End, and Those of the Ports Used. Value: 1~65535.
        /// </summary>
        [Output("listenerPort")]
        public Output<int> ListenerPort { get; private set; } = null!;

        /// <summary>
        /// Snooping Protocols. Valid Values: HTTP, HTTPS Or QuIC.
        /// </summary>
        [Output("listenerProtocol")]
        public Output<string> ListenerProtocol { get; private set; } = null!;

        /// <summary>
        /// The SLB Instance Id.
        /// </summary>
        [Output("loadBalancerId")]
        public Output<string> LoadBalancerId { get; private set; } = null!;

        /// <summary>
        /// Configuration Associated with the QuIC Listening See `QuicConfig` below.
        /// </summary>
        [Output("quicConfig")]
        public Output<Outputs.ListenerQuicConfig> QuicConfig { get; private set; } = null!;

        /// <summary>
        /// The Specified Request Timeout Time. Value: 1~180 Seconds. Default Value: 60 seconds. If the Timeout Time Within the Back-End Server Has Not Answered the SLB Will Give up Waiting, the Client Returns the HTTP 504 Error Code.
        /// </summary>
        [Output("requestTimeout")]
        public Output<int> RequestTimeout { get; private set; } = null!;

        /// <summary>
        /// Security Policy
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;

        /// <summary>
        /// The Current IP Address of the Listened State
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// xforwardfor Related Attribute Configuration See `XForwardedForConfig` below.
        /// </summary>
        [Output("xForwardedForConfig")]
        public Output<Outputs.ListenerXForwardedForConfig> XForwardedForConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Listener resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Listener(string name, ListenerArgs args, CustomResourceOptions? options = null)
            : base("alicloud:alb/listener:Listener", name, args ?? new ListenerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Listener(string name, Input<string> id, ListenerState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:alb/listener:Listener", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Listener resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Listener Get(string name, Input<string> id, ListenerState? state = null, CustomResourceOptions? options = null)
        {
            return new Listener(name, id, state, options);
        }
    }

    public sealed class ListenerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access Log Whether to Enable Carry Custom Header Field. Valid values: `True`, `False`. Default Value: `False`.
        /// 
        /// &gt; **NOTE:**  Only Instances outside the Security Group to Access the Log Switch `Accesslogenabled` Open, in Order to Set This Parameter to the `True`.
        /// </summary>
        [Input("accessLogRecordCustomizedHeadersEnabled")]
        public Input<bool>? AccessLogRecordCustomizedHeadersEnabled { get; set; }

        /// <summary>
        /// Xtrace Configuration Information. See `AccessLogTracingConfig` below.
        /// </summary>
        [Input("accessLogTracingConfig")]
        public Input<Inputs.ListenerAccessLogTracingConfigArgs>? AccessLogTracingConfig { get; set; }

        /// <summary>
        /// The configurations of the access control lists (ACLs). See `AclConfig` below for details. **NOTE:** Field `AclConfig` has been deprecated from provider version 1.163.0, and it will be removed in the future version. Please use the new resource `alicloud.alb.ListenerAclAttachment`.,
        /// </summary>
        [Input("aclConfig")]
        public Input<Inputs.ListenerAclConfigArgs>? AclConfig { get; set; }

        [Input("caCertificates")]
        private InputList<Inputs.ListenerCaCertificateArgs>? _caCertificates;

        /// <summary>
        /// The list of certificates. See `CaCertificates` below.
        /// </summary>
        public InputList<Inputs.ListenerCaCertificateArgs> CaCertificates
        {
            get => _caCertificates ?? (_caCertificates = new InputList<Inputs.ListenerCaCertificateArgs>());
            set => _caCertificates = value;
        }

        /// <summary>
        /// Whether to turn on two-way authentication. Value:
        /// </summary>
        [Input("caEnabled")]
        public Input<bool>? CaEnabled { get; set; }

        /// <summary>
        /// The list of certificates. See `Certificates` below.
        /// </summary>
        [Input("certificates")]
        public Input<Inputs.ListenerCertificatesArgs>? Certificates { get; set; }

        [Input("defaultActions", required: true)]
        private InputList<Inputs.ListenerDefaultActionArgs>? _defaultActions;

        /// <summary>
        /// The Default Rule Action List See `DefaultActions` below.
        /// </summary>
        public InputList<Inputs.ListenerDefaultActionArgs> DefaultActions
        {
            get => _defaultActions ?? (_defaultActions = new InputList<Inputs.ListenerDefaultActionArgs>());
            set => _defaultActions = value;
        }

        /// <summary>
        /// Whether to PreCheck only this request. Value:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Whether to Enable Gzip Compression, as a Specific File Type on a Compression. Valid Values: True Or False. Default Value: TRUE.
        /// </summary>
        [Input("gzipEnabled")]
        public Input<bool>? GzipEnabled { get; set; }

        /// <summary>
        /// Whether to Enable HTTP/2 Features. Valid Values: True Or False. Default Value: TRUE.
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        /// <summary>
        /// Specify the Connection Idle Timeout Value: 1 to 60 seconds.
        /// </summary>
        [Input("idleTimeout")]
        public Input<int>? IdleTimeout { get; set; }

        /// <summary>
        /// Set the IP Address of the Listened Description. Length Is from 2 to 256 Characters.
        /// </summary>
        [Input("listenerDescription")]
        public Input<string>? ListenerDescription { get; set; }

        /// <summary>
        /// The SLB Instance Front-End, and Those of the Ports Used. Value: 1~65535.
        /// </summary>
        [Input("listenerPort", required: true)]
        public Input<int> ListenerPort { get; set; } = null!;

        /// <summary>
        /// Snooping Protocols. Valid Values: HTTP, HTTPS Or QuIC.
        /// </summary>
        [Input("listenerProtocol", required: true)]
        public Input<string> ListenerProtocol { get; set; } = null!;

        /// <summary>
        /// The SLB Instance Id.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public Input<string> LoadBalancerId { get; set; } = null!;

        /// <summary>
        /// Configuration Associated with the QuIC Listening See `QuicConfig` below.
        /// </summary>
        [Input("quicConfig")]
        public Input<Inputs.ListenerQuicConfigArgs>? QuicConfig { get; set; }

        /// <summary>
        /// The Specified Request Timeout Time. Value: 1~180 Seconds. Default Value: 60 seconds. If the Timeout Time Within the Back-End Server Has Not Answered the SLB Will Give up Waiting, the Client Returns the HTTP 504 Error Code.
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        /// <summary>
        /// Security Policy
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        /// <summary>
        /// The Current IP Address of the Listened State
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// xforwardfor Related Attribute Configuration See `XForwardedForConfig` below.
        /// </summary>
        [Input("xForwardedForConfig")]
        public Input<Inputs.ListenerXForwardedForConfigArgs>? XForwardedForConfig { get; set; }

        public ListenerArgs()
        {
        }
        public static new ListenerArgs Empty => new ListenerArgs();
    }

    public sealed class ListenerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access Log Whether to Enable Carry Custom Header Field. Valid values: `True`, `False`. Default Value: `False`.
        /// 
        /// &gt; **NOTE:**  Only Instances outside the Security Group to Access the Log Switch `Accesslogenabled` Open, in Order to Set This Parameter to the `True`.
        /// </summary>
        [Input("accessLogRecordCustomizedHeadersEnabled")]
        public Input<bool>? AccessLogRecordCustomizedHeadersEnabled { get; set; }

        /// <summary>
        /// Xtrace Configuration Information. See `AccessLogTracingConfig` below.
        /// </summary>
        [Input("accessLogTracingConfig")]
        public Input<Inputs.ListenerAccessLogTracingConfigGetArgs>? AccessLogTracingConfig { get; set; }

        /// <summary>
        /// The configurations of the access control lists (ACLs). See `AclConfig` below for details. **NOTE:** Field `AclConfig` has been deprecated from provider version 1.163.0, and it will be removed in the future version. Please use the new resource `alicloud.alb.ListenerAclAttachment`.,
        /// </summary>
        [Input("aclConfig")]
        public Input<Inputs.ListenerAclConfigGetArgs>? AclConfig { get; set; }

        [Input("caCertificates")]
        private InputList<Inputs.ListenerCaCertificateGetArgs>? _caCertificates;

        /// <summary>
        /// The list of certificates. See `CaCertificates` below.
        /// </summary>
        public InputList<Inputs.ListenerCaCertificateGetArgs> CaCertificates
        {
            get => _caCertificates ?? (_caCertificates = new InputList<Inputs.ListenerCaCertificateGetArgs>());
            set => _caCertificates = value;
        }

        /// <summary>
        /// Whether to turn on two-way authentication. Value:
        /// </summary>
        [Input("caEnabled")]
        public Input<bool>? CaEnabled { get; set; }

        /// <summary>
        /// The list of certificates. See `Certificates` below.
        /// </summary>
        [Input("certificates")]
        public Input<Inputs.ListenerCertificatesGetArgs>? Certificates { get; set; }

        [Input("defaultActions")]
        private InputList<Inputs.ListenerDefaultActionGetArgs>? _defaultActions;

        /// <summary>
        /// The Default Rule Action List See `DefaultActions` below.
        /// </summary>
        public InputList<Inputs.ListenerDefaultActionGetArgs> DefaultActions
        {
            get => _defaultActions ?? (_defaultActions = new InputList<Inputs.ListenerDefaultActionGetArgs>());
            set => _defaultActions = value;
        }

        /// <summary>
        /// Whether to PreCheck only this request. Value:
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// Whether to Enable Gzip Compression, as a Specific File Type on a Compression. Valid Values: True Or False. Default Value: TRUE.
        /// </summary>
        [Input("gzipEnabled")]
        public Input<bool>? GzipEnabled { get; set; }

        /// <summary>
        /// Whether to Enable HTTP/2 Features. Valid Values: True Or False. Default Value: TRUE.
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        /// <summary>
        /// Specify the Connection Idle Timeout Value: 1 to 60 seconds.
        /// </summary>
        [Input("idleTimeout")]
        public Input<int>? IdleTimeout { get; set; }

        /// <summary>
        /// Set the IP Address of the Listened Description. Length Is from 2 to 256 Characters.
        /// </summary>
        [Input("listenerDescription")]
        public Input<string>? ListenerDescription { get; set; }

        /// <summary>
        /// The SLB Instance Front-End, and Those of the Ports Used. Value: 1~65535.
        /// </summary>
        [Input("listenerPort")]
        public Input<int>? ListenerPort { get; set; }

        /// <summary>
        /// Snooping Protocols. Valid Values: HTTP, HTTPS Or QuIC.
        /// </summary>
        [Input("listenerProtocol")]
        public Input<string>? ListenerProtocol { get; set; }

        /// <summary>
        /// The SLB Instance Id.
        /// </summary>
        [Input("loadBalancerId")]
        public Input<string>? LoadBalancerId { get; set; }

        /// <summary>
        /// Configuration Associated with the QuIC Listening See `QuicConfig` below.
        /// </summary>
        [Input("quicConfig")]
        public Input<Inputs.ListenerQuicConfigGetArgs>? QuicConfig { get; set; }

        /// <summary>
        /// The Specified Request Timeout Time. Value: 1~180 Seconds. Default Value: 60 seconds. If the Timeout Time Within the Back-End Server Has Not Answered the SLB Will Give up Waiting, the Client Returns the HTTP 504 Error Code.
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        /// <summary>
        /// Security Policy
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        /// <summary>
        /// The Current IP Address of the Listened State
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag of the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// xforwardfor Related Attribute Configuration See `XForwardedForConfig` below.
        /// </summary>
        [Input("xForwardedForConfig")]
        public Input<Inputs.ListenerXForwardedForConfigGetArgs>? XForwardedForConfig { get; set; }

        public ListenerState()
        {
        }
        public static new ListenerState Empty => new ListenerState();
    }
}
