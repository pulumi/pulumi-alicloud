// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ddos.Inputs
{

    public sealed class BgpPolicyContentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Blacklist and whitelist timeout.
        /// </summary>
        [Input("blackIpListExpireAt")]
        public Input<int>? BlackIpListExpireAt { get; set; }

        /// <summary>
        /// Whether to enable L4 protection.
        /// </summary>
        [Input("enableDefense")]
        public Input<bool>? EnableDefense { get; set; }

        /// <summary>
        /// Switch to discard ICMP.
        /// </summary>
        [Input("enableDropIcmp")]
        public Input<bool>? EnableDropIcmp { get; set; }

        /// <summary>
        /// Whether the intelligent switch is on.
        /// </summary>
        [Input("enableIntelligence")]
        public Input<bool>? EnableIntelligence { get; set; }

        [Input("fingerPrintRuleLists")]
        private InputList<Inputs.BgpPolicyContentFingerPrintRuleListArgs>? _fingerPrintRuleLists;

        /// <summary>
        /// Fingerprint Rules. See `finger_print_rule_list` below.
        /// </summary>
        public InputList<Inputs.BgpPolicyContentFingerPrintRuleListArgs> FingerPrintRuleLists
        {
            get => _fingerPrintRuleLists ?? (_fingerPrintRuleLists = new InputList<Inputs.BgpPolicyContentFingerPrintRuleListArgs>());
            set => _fingerPrintRuleLists = value;
        }

        /// <summary>
        /// Smart mode. Valid values: weak, hard, and default.
        /// </summary>
        [Input("intelligenceLevel")]
        public Input<string>? IntelligenceLevel { get; set; }

        [Input("layer4RuleLists")]
        private InputList<Inputs.BgpPolicyContentLayer4RuleListArgs>? _layer4RuleLists;

        /// <summary>
        /// L4 protection rules. See `layer4_rule_list` below.
        /// </summary>
        public InputList<Inputs.BgpPolicyContentLayer4RuleListArgs> Layer4RuleLists
        {
            get => _layer4RuleLists ?? (_layer4RuleLists = new InputList<Inputs.BgpPolicyContentLayer4RuleListArgs>());
            set => _layer4RuleLists = value;
        }

        [Input("portRuleLists")]
        private InputList<Inputs.BgpPolicyContentPortRuleListArgs>? _portRuleLists;

        /// <summary>
        /// Port Rule List. See `port_rule_list` below.
        /// </summary>
        public InputList<Inputs.BgpPolicyContentPortRuleListArgs> PortRuleLists
        {
            get => _portRuleLists ?? (_portRuleLists = new InputList<Inputs.BgpPolicyContentPortRuleListArgs>());
            set => _portRuleLists = value;
        }

        [Input("reflectBlockUdpPortLists")]
        private InputList<int>? _reflectBlockUdpPortLists;

        /// <summary>
        /// Reflective port filtering.
        /// </summary>
        public InputList<int> ReflectBlockUdpPortLists
        {
            get => _reflectBlockUdpPortLists ?? (_reflectBlockUdpPortLists = new InputList<int>());
            set => _reflectBlockUdpPortLists = value;
        }

        [Input("regionBlockCountryLists")]
        private InputList<int>? _regionBlockCountryLists;

        /// <summary>
        /// List of Regional Banned Countries.
        /// </summary>
        public InputList<int> RegionBlockCountryLists
        {
            get => _regionBlockCountryLists ?? (_regionBlockCountryLists = new InputList<int>());
            set => _regionBlockCountryLists = value;
        }

        [Input("regionBlockProvinceLists")]
        private InputList<int>? _regionBlockProvinceLists;

        /// <summary>
        /// List of Prohibited Provinces by Region.
        /// </summary>
        public InputList<int> RegionBlockProvinceLists
        {
            get => _regionBlockProvinceLists ?? (_regionBlockProvinceLists = new InputList<int>());
            set => _regionBlockProvinceLists = value;
        }

        [Input("sourceBlockLists")]
        private InputList<Inputs.BgpPolicyContentSourceBlockListArgs>? _sourceBlockLists;

        /// <summary>
        /// Source pull Black. See `source_block_list` below.
        /// </summary>
        public InputList<Inputs.BgpPolicyContentSourceBlockListArgs> SourceBlockLists
        {
            get => _sourceBlockLists ?? (_sourceBlockLists = new InputList<Inputs.BgpPolicyContentSourceBlockListArgs>());
            set => _sourceBlockLists = value;
        }

        /// <summary>
        /// Do not fill in when the source speed limit is deleted. See `source_limit` below.
        /// </summary>
        [Input("sourceLimit")]
        public Input<Inputs.BgpPolicyContentSourceLimitArgs>? SourceLimit { get; set; }

        /// <summary>
        /// Add white high protection back to source network segment switch.
        /// </summary>
        [Input("whitenGfbrNets")]
        public Input<bool>? WhitenGfbrNets { get; set; }

        public BgpPolicyContentArgs()
        {
        }
        public static new BgpPolicyContentArgs Empty => new BgpPolicyContentArgs();
    }
}
