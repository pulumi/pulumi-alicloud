// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.MarketPlace
{
    public static class GetProducts
    {
        /// <summary>
        /// This data source provides the Market product items of Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in 1.64.0+
        /// </summary>
        public static Task<GetProductsResult> InvokeAsync(GetProductsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProductsResult>("alicloud:marketplace/getProducts:getProducts", args ?? new GetProductsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the Market product items of Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in 1.64.0+
        /// </summary>
        public static Output<GetProductsResult> Invoke(GetProductsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProductsResult>("alicloud:marketplace/getProducts:getProducts", args ?? new GetProductsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Category ID of products. For more information, see [DescribeProducts](https://help.aliyun.com/document_detail/89834.htm).
        /// </summary>
        [Input("categoryId")]
        public string? CategoryId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of product code.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to apply to the product name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The type of products, Valid values: `APP`, `SERVICE`, `MIRROR`, `DOWNLOAD` and `API_SERVICE`.
        /// </summary>
        [Input("productType")]
        public string? ProductType { get; set; }

        /// <summary>
        /// Search term in this query.
        /// </summary>
        [Input("searchTerm")]
        public string? SearchTerm { get; set; }

        /// <summary>
        /// This field determines how to sort the filtered results, Valid values: `user_count-desc`, `created_on-desc`, `price-desc` and `score-desc`.
        /// </summary>
        [Input("sort")]
        public string? Sort { get; set; }

        /// <summary>
        /// The suggested price of the product.
        /// </summary>
        [Input("suggestedPrice")]
        public double? SuggestedPrice { get; set; }

        /// <summary>
        /// The supplier id of the product.
        /// </summary>
        [Input("supplierId")]
        public string? SupplierId { get; set; }

        /// <summary>
        /// The supplier name keyword of the product.
        /// </summary>
        [Input("supplierNameKeyword")]
        public string? SupplierNameKeyword { get; set; }

        public GetProductsArgs()
        {
        }
    }

    public sealed class GetProductsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Category ID of products. For more information, see [DescribeProducts](https://help.aliyun.com/document_detail/89834.htm).
        /// </summary>
        [Input("categoryId")]
        public Input<string>? CategoryId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of product code.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to apply to the product name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The type of products, Valid values: `APP`, `SERVICE`, `MIRROR`, `DOWNLOAD` and `API_SERVICE`.
        /// </summary>
        [Input("productType")]
        public Input<string>? ProductType { get; set; }

        /// <summary>
        /// Search term in this query.
        /// </summary>
        [Input("searchTerm")]
        public Input<string>? SearchTerm { get; set; }

        /// <summary>
        /// This field determines how to sort the filtered results, Valid values: `user_count-desc`, `created_on-desc`, `price-desc` and `score-desc`.
        /// </summary>
        [Input("sort")]
        public Input<string>? Sort { get; set; }

        /// <summary>
        /// The suggested price of the product.
        /// </summary>
        [Input("suggestedPrice")]
        public Input<double>? SuggestedPrice { get; set; }

        /// <summary>
        /// The supplier id of the product.
        /// </summary>
        [Input("supplierId")]
        public Input<string>? SupplierId { get; set; }

        /// <summary>
        /// The supplier name keyword of the product.
        /// </summary>
        [Input("supplierNameKeyword")]
        public Input<string>? SupplierNameKeyword { get; set; }

        public GetProductsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProductsResult
    {
        /// <summary>
        /// The category id of the product.
        /// </summary>
        public readonly string? CategoryId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of product codes.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        public readonly string? ProductType;
        /// <summary>
        /// A list of products. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProductsProductResult> Products;
        public readonly string? SearchTerm;
        public readonly string? Sort;
        /// <summary>
        /// The suggested price of the product.
        /// </summary>
        public readonly double? SuggestedPrice;
        /// <summary>
        /// The supplier id of the product.
        /// </summary>
        public readonly string? SupplierId;
        public readonly string? SupplierNameKeyword;

        [OutputConstructor]
        private GetProductsResult(
            string? categoryId,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            string? productType,

            ImmutableArray<Outputs.GetProductsProductResult> products,

            string? searchTerm,

            string? sort,

            double? suggestedPrice,

            string? supplierId,

            string? supplierNameKeyword)
        {
            CategoryId = categoryId;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProductType = productType;
            Products = products;
            SearchTerm = searchTerm;
            Sort = sort;
            SuggestedPrice = suggestedPrice;
            SupplierId = supplierId;
            SupplierNameKeyword = supplierNameKeyword;
        }
    }
}
