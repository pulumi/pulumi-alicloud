// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hbr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Hybrid Backup Recovery (HBR) Vault resource.
//
// Where backup or archived data is stored.
//
// For information about Hybrid Backup Recovery (HBR) Vault and how to use it, see [What is Vault](https://www.alibabacloud.com/help/en/hybrid-backup-recovery/latest/api-hbr-2017-09-08-createvault).
//
// > **NOTE:** Available since v1.129.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/hbr"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = hbr.NewVault(ctx, "example", &hbr.VaultArgs{
//				VaultName: pulumi.Sprintf("example_value_%v", _default.Result),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Hybrid Backup Recovery (HBR) Vault can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:hbr/vault:Vault example <id>
// ```
type Vault struct {
	pulumi.CustomResourceState

	// (Available since v1.243.0) The time when the backup vault was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of Vault. Defaults to an empty string.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Source Encryption Type，It is valid only when vaultType is `STANDARD` or `OTS_BACKUP`. Default value: `HBR_PRIVATE`. Valid values:
	// - `HBR_PRIVATE`: HBR is fully hosted, uses the backup service's own encryption method.
	// - `KMS`: Use Alibaba Cloud Kms to encryption.
	EncryptType pulumi.StringOutput `pulumi:"encryptType"`
	// The key id or alias name of Alibaba Cloud Kms. It is required and valid only when encryptType is `KMS`.
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// (Available since v1.243.0) The ID of the region in which the backup vault resides.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The status of the Vault.
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The name of Vault.
	VaultName pulumi.StringOutput `pulumi:"vaultName"`
	// The storage class of Vault. Valid values: `STANDARD`.
	VaultStorageClass pulumi.StringOutput `pulumi:"vaultStorageClass"`
	// The type of Vault. Valid values:
	// - `STANDARD`: Standard backup vault.
	// - `OTS_BACKUP`: Backup vault for Tablestore. **NOTE:** We recommend that you use `STANDARD`. The cloud backup product will upgrade the backup vault, and the `vaultType` will be changed from `OTS_BACKUP` to `STANDARD`.
	VaultType pulumi.StringOutput `pulumi:"vaultType"`
	// Indicates whether the immutable backup feature is enabled. Valid values: `true`, `false`.
	WormEnabled pulumi.BoolPtrOutput `pulumi:"wormEnabled"`
}

// NewVault registers a new resource with the given unique name, arguments, and options.
func NewVault(ctx *pulumi.Context,
	name string, args *VaultArgs, opts ...pulumi.ResourceOption) (*Vault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VaultName == nil {
		return nil, errors.New("invalid value for required argument 'VaultName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Vault
	err := ctx.RegisterResource("alicloud:hbr/vault:Vault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVault gets an existing Vault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultState, opts ...pulumi.ResourceOption) (*Vault, error) {
	var resource Vault
	err := ctx.ReadResource("alicloud:hbr/vault:Vault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vault resources.
type vaultState struct {
	// (Available since v1.243.0) The time when the backup vault was created.
	CreateTime *string `pulumi:"createTime"`
	// The description of Vault. Defaults to an empty string.
	Description *string `pulumi:"description"`
	// Source Encryption Type，It is valid only when vaultType is `STANDARD` or `OTS_BACKUP`. Default value: `HBR_PRIVATE`. Valid values:
	// - `HBR_PRIVATE`: HBR is fully hosted, uses the backup service's own encryption method.
	// - `KMS`: Use Alibaba Cloud Kms to encryption.
	EncryptType *string `pulumi:"encryptType"`
	// The key id or alias name of Alibaba Cloud Kms. It is required and valid only when encryptType is `KMS`.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// (Available since v1.243.0) The ID of the region in which the backup vault resides.
	RegionId *string `pulumi:"regionId"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of the Vault.
	Status *string `pulumi:"status"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The name of Vault.
	VaultName *string `pulumi:"vaultName"`
	// The storage class of Vault. Valid values: `STANDARD`.
	VaultStorageClass *string `pulumi:"vaultStorageClass"`
	// The type of Vault. Valid values:
	// - `STANDARD`: Standard backup vault.
	// - `OTS_BACKUP`: Backup vault for Tablestore. **NOTE:** We recommend that you use `STANDARD`. The cloud backup product will upgrade the backup vault, and the `vaultType` will be changed from `OTS_BACKUP` to `STANDARD`.
	VaultType *string `pulumi:"vaultType"`
	// Indicates whether the immutable backup feature is enabled. Valid values: `true`, `false`.
	WormEnabled *bool `pulumi:"wormEnabled"`
}

type VaultState struct {
	// (Available since v1.243.0) The time when the backup vault was created.
	CreateTime pulumi.StringPtrInput
	// The description of Vault. Defaults to an empty string.
	Description pulumi.StringPtrInput
	// Source Encryption Type，It is valid only when vaultType is `STANDARD` or `OTS_BACKUP`. Default value: `HBR_PRIVATE`. Valid values:
	// - `HBR_PRIVATE`: HBR is fully hosted, uses the backup service's own encryption method.
	// - `KMS`: Use Alibaba Cloud Kms to encryption.
	EncryptType pulumi.StringPtrInput
	// The key id or alias name of Alibaba Cloud Kms. It is required and valid only when encryptType is `KMS`.
	KmsKeyId pulumi.StringPtrInput
	// (Available since v1.243.0) The ID of the region in which the backup vault resides.
	RegionId pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The status of the Vault.
	Status pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.StringMapInput
	// The name of Vault.
	VaultName pulumi.StringPtrInput
	// The storage class of Vault. Valid values: `STANDARD`.
	VaultStorageClass pulumi.StringPtrInput
	// The type of Vault. Valid values:
	// - `STANDARD`: Standard backup vault.
	// - `OTS_BACKUP`: Backup vault for Tablestore. **NOTE:** We recommend that you use `STANDARD`. The cloud backup product will upgrade the backup vault, and the `vaultType` will be changed from `OTS_BACKUP` to `STANDARD`.
	VaultType pulumi.StringPtrInput
	// Indicates whether the immutable backup feature is enabled. Valid values: `true`, `false`.
	WormEnabled pulumi.BoolPtrInput
}

func (VaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultState)(nil)).Elem()
}

type vaultArgs struct {
	// The description of Vault. Defaults to an empty string.
	Description *string `pulumi:"description"`
	// Source Encryption Type，It is valid only when vaultType is `STANDARD` or `OTS_BACKUP`. Default value: `HBR_PRIVATE`. Valid values:
	// - `HBR_PRIVATE`: HBR is fully hosted, uses the backup service's own encryption method.
	// - `KMS`: Use Alibaba Cloud Kms to encryption.
	EncryptType *string `pulumi:"encryptType"`
	// The key id or alias name of Alibaba Cloud Kms. It is required and valid only when encryptType is `KMS`.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The name of Vault.
	VaultName string `pulumi:"vaultName"`
	// The storage class of Vault. Valid values: `STANDARD`.
	VaultStorageClass *string `pulumi:"vaultStorageClass"`
	// The type of Vault. Valid values:
	// - `STANDARD`: Standard backup vault.
	// - `OTS_BACKUP`: Backup vault for Tablestore. **NOTE:** We recommend that you use `STANDARD`. The cloud backup product will upgrade the backup vault, and the `vaultType` will be changed from `OTS_BACKUP` to `STANDARD`.
	VaultType *string `pulumi:"vaultType"`
	// Indicates whether the immutable backup feature is enabled. Valid values: `true`, `false`.
	WormEnabled *bool `pulumi:"wormEnabled"`
}

// The set of arguments for constructing a Vault resource.
type VaultArgs struct {
	// The description of Vault. Defaults to an empty string.
	Description pulumi.StringPtrInput
	// Source Encryption Type，It is valid only when vaultType is `STANDARD` or `OTS_BACKUP`. Default value: `HBR_PRIVATE`. Valid values:
	// - `HBR_PRIVATE`: HBR is fully hosted, uses the backup service's own encryption method.
	// - `KMS`: Use Alibaba Cloud Kms to encryption.
	EncryptType pulumi.StringPtrInput
	// The key id or alias name of Alibaba Cloud Kms. It is required and valid only when encryptType is `KMS`.
	KmsKeyId pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.StringMapInput
	// The name of Vault.
	VaultName pulumi.StringInput
	// The storage class of Vault. Valid values: `STANDARD`.
	VaultStorageClass pulumi.StringPtrInput
	// The type of Vault. Valid values:
	// - `STANDARD`: Standard backup vault.
	// - `OTS_BACKUP`: Backup vault for Tablestore. **NOTE:** We recommend that you use `STANDARD`. The cloud backup product will upgrade the backup vault, and the `vaultType` will be changed from `OTS_BACKUP` to `STANDARD`.
	VaultType pulumi.StringPtrInput
	// Indicates whether the immutable backup feature is enabled. Valid values: `true`, `false`.
	WormEnabled pulumi.BoolPtrInput
}

func (VaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultArgs)(nil)).Elem()
}

type VaultInput interface {
	pulumi.Input

	ToVaultOutput() VaultOutput
	ToVaultOutputWithContext(ctx context.Context) VaultOutput
}

func (*Vault) ElementType() reflect.Type {
	return reflect.TypeOf((**Vault)(nil)).Elem()
}

func (i *Vault) ToVaultOutput() VaultOutput {
	return i.ToVaultOutputWithContext(context.Background())
}

func (i *Vault) ToVaultOutputWithContext(ctx context.Context) VaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultOutput)
}

// VaultArrayInput is an input type that accepts VaultArray and VaultArrayOutput values.
// You can construct a concrete instance of `VaultArrayInput` via:
//
//	VaultArray{ VaultArgs{...} }
type VaultArrayInput interface {
	pulumi.Input

	ToVaultArrayOutput() VaultArrayOutput
	ToVaultArrayOutputWithContext(context.Context) VaultArrayOutput
}

type VaultArray []VaultInput

func (VaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vault)(nil)).Elem()
}

func (i VaultArray) ToVaultArrayOutput() VaultArrayOutput {
	return i.ToVaultArrayOutputWithContext(context.Background())
}

func (i VaultArray) ToVaultArrayOutputWithContext(ctx context.Context) VaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultArrayOutput)
}

// VaultMapInput is an input type that accepts VaultMap and VaultMapOutput values.
// You can construct a concrete instance of `VaultMapInput` via:
//
//	VaultMap{ "key": VaultArgs{...} }
type VaultMapInput interface {
	pulumi.Input

	ToVaultMapOutput() VaultMapOutput
	ToVaultMapOutputWithContext(context.Context) VaultMapOutput
}

type VaultMap map[string]VaultInput

func (VaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vault)(nil)).Elem()
}

func (i VaultMap) ToVaultMapOutput() VaultMapOutput {
	return i.ToVaultMapOutputWithContext(context.Background())
}

func (i VaultMap) ToVaultMapOutputWithContext(ctx context.Context) VaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultMapOutput)
}

type VaultOutput struct{ *pulumi.OutputState }

func (VaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vault)(nil)).Elem()
}

func (o VaultOutput) ToVaultOutput() VaultOutput {
	return o
}

func (o VaultOutput) ToVaultOutputWithContext(ctx context.Context) VaultOutput {
	return o
}

// (Available since v1.243.0) The time when the backup vault was created.
func (o VaultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of Vault. Defaults to an empty string.
func (o VaultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Source Encryption Type，It is valid only when vaultType is `STANDARD` or `OTS_BACKUP`. Default value: `HBR_PRIVATE`. Valid values:
// - `HBR_PRIVATE`: HBR is fully hosted, uses the backup service's own encryption method.
// - `KMS`: Use Alibaba Cloud Kms to encryption.
func (o VaultOutput) EncryptType() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.EncryptType }).(pulumi.StringOutput)
}

// The key id or alias name of Alibaba Cloud Kms. It is required and valid only when encryptType is `KMS`.
func (o VaultOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// (Available since v1.243.0) The ID of the region in which the backup vault resides.
func (o VaultOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o VaultOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The status of the Vault.
func (o VaultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o VaultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The name of Vault.
func (o VaultOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.VaultName }).(pulumi.StringOutput)
}

// The storage class of Vault. Valid values: `STANDARD`.
func (o VaultOutput) VaultStorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.VaultStorageClass }).(pulumi.StringOutput)
}

// The type of Vault. Valid values:
// - `STANDARD`: Standard backup vault.
// - `OTS_BACKUP`: Backup vault for Tablestore. **NOTE:** We recommend that you use `STANDARD`. The cloud backup product will upgrade the backup vault, and the `vaultType` will be changed from `OTS_BACKUP` to `STANDARD`.
func (o VaultOutput) VaultType() pulumi.StringOutput {
	return o.ApplyT(func(v *Vault) pulumi.StringOutput { return v.VaultType }).(pulumi.StringOutput)
}

// Indicates whether the immutable backup feature is enabled. Valid values: `true`, `false`.
func (o VaultOutput) WormEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Vault) pulumi.BoolPtrOutput { return v.WormEnabled }).(pulumi.BoolPtrOutput)
}

type VaultArrayOutput struct{ *pulumi.OutputState }

func (VaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Vault)(nil)).Elem()
}

func (o VaultArrayOutput) ToVaultArrayOutput() VaultArrayOutput {
	return o
}

func (o VaultArrayOutput) ToVaultArrayOutputWithContext(ctx context.Context) VaultArrayOutput {
	return o
}

func (o VaultArrayOutput) Index(i pulumi.IntInput) VaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Vault {
		return vs[0].([]*Vault)[vs[1].(int)]
	}).(VaultOutput)
}

type VaultMapOutput struct{ *pulumi.OutputState }

func (VaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Vault)(nil)).Elem()
}

func (o VaultMapOutput) ToVaultMapOutput() VaultMapOutput {
	return o
}

func (o VaultMapOutput) ToVaultMapOutputWithContext(ctx context.Context) VaultMapOutput {
	return o
}

func (o VaultMapOutput) MapIndex(k pulumi.StringInput) VaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Vault {
		return vs[0].(map[string]*Vault)[vs[1].(string)]
	}).(VaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VaultInput)(nil)).Elem(), &Vault{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultArrayInput)(nil)).Elem(), VaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultMapInput)(nil)).Elem(), VaultMap{})
	pulumi.RegisterOutputType(VaultOutput{})
	pulumi.RegisterOutputType(VaultArrayOutput{})
	pulumi.RegisterOutputType(VaultMapOutput{})
}
