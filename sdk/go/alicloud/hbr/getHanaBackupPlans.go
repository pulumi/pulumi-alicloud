// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hbr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Hbr Hana Backup Plans of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.179.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/hbr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := hbr.GetHanaBackupPlans(ctx, &hbr.GetHanaBackupPlansArgs{
//				ClusterId: "example_value",
//				Ids: []string{
//					"example_value-1",
//					"example_value-2",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("hbrHanaBackupPlanId1", ids.Plans[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetHanaBackupPlans(ctx *pulumi.Context, args *GetHanaBackupPlansArgs, opts ...pulumi.InvokeOption) (*GetHanaBackupPlansResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHanaBackupPlansResult
	err := ctx.Invoke("alicloud:hbr/getHanaBackupPlans:getHanaBackupPlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHanaBackupPlans.
type GetHanaBackupPlansArgs struct {
	// The ID of the SAP HANA instance.
	ClusterId string `pulumi:"clusterId"`
	// The name of the database.
	DatabaseName *string `pulumi:"databaseName"`
	// A list of Hana Backup Plan IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Hana Backup Plan name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The ID of the backup vault.
	VaultId *string `pulumi:"vaultId"`
}

// A collection of values returned by getHanaBackupPlans.
type GetHanaBackupPlansResult struct {
	ClusterId    string  `pulumi:"clusterId"`
	DatabaseName *string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                   `pulumi:"id"`
	Ids        []string                 `pulumi:"ids"`
	NameRegex  *string                  `pulumi:"nameRegex"`
	Names      []string                 `pulumi:"names"`
	OutputFile *string                  `pulumi:"outputFile"`
	PageNumber *int                     `pulumi:"pageNumber"`
	PageSize   *int                     `pulumi:"pageSize"`
	Plans      []GetHanaBackupPlansPlan `pulumi:"plans"`
	VaultId    *string                  `pulumi:"vaultId"`
}

func GetHanaBackupPlansOutput(ctx *pulumi.Context, args GetHanaBackupPlansOutputArgs, opts ...pulumi.InvokeOption) GetHanaBackupPlansResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHanaBackupPlansResult, error) {
			args := v.(GetHanaBackupPlansArgs)
			r, err := GetHanaBackupPlans(ctx, &args, opts...)
			var s GetHanaBackupPlansResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHanaBackupPlansResultOutput)
}

// A collection of arguments for invoking getHanaBackupPlans.
type GetHanaBackupPlansOutputArgs struct {
	// The ID of the SAP HANA instance.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The name of the database.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// A list of Hana Backup Plan IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Hana Backup Plan name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The ID of the backup vault.
	VaultId pulumi.StringPtrInput `pulumi:"vaultId"`
}

func (GetHanaBackupPlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHanaBackupPlansArgs)(nil)).Elem()
}

// A collection of values returned by getHanaBackupPlans.
type GetHanaBackupPlansResultOutput struct{ *pulumi.OutputState }

func (GetHanaBackupPlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHanaBackupPlansResult)(nil)).Elem()
}

func (o GetHanaBackupPlansResultOutput) ToGetHanaBackupPlansResultOutput() GetHanaBackupPlansResultOutput {
	return o
}

func (o GetHanaBackupPlansResultOutput) ToGetHanaBackupPlansResultOutputWithContext(ctx context.Context) GetHanaBackupPlansResultOutput {
	return o
}

func (o GetHanaBackupPlansResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetHanaBackupPlansResult] {
	return pulumix.Output[GetHanaBackupPlansResult]{
		OutputState: o.OutputState,
	}
}

func (o GetHanaBackupPlansResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetHanaBackupPlansResultOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHanaBackupPlansResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHanaBackupPlansResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetHanaBackupPlansResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetHanaBackupPlansResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetHanaBackupPlansResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetHanaBackupPlansResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetHanaBackupPlansResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

func (o GetHanaBackupPlansResultOutput) Plans() GetHanaBackupPlansPlanArrayOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) []GetHanaBackupPlansPlan { return v.Plans }).(GetHanaBackupPlansPlanArrayOutput)
}

func (o GetHanaBackupPlansResultOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaBackupPlansResult) *string { return v.VaultId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHanaBackupPlansResultOutput{})
}
