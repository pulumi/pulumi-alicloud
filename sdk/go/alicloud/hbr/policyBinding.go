// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hbr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a HBR Policy Binding resource. A policy binding relationship consists of a data source, a policy, and binding options.
//
// For information about HBR Policy Binding and how to use it, see [What is Policy Binding](https://www.alibabacloud.com/help/en/cloud-backup/developer-reference/api-hbr-2017-09-08-createpolicybindings).
//
// > **NOTE:** Available since v1.221.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/hbr"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/oss"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Max: 99999,
//				Min: 10000,
//			})
//			if err != nil {
//				return err
//			}
//			defaultyk84Hc, err := hbr.NewVault(ctx, "defaultyk84Hc", &hbr.VaultArgs{
//				VaultType: pulumi.String("STANDARD"),
//				VaultName: pulumi.String(fmt.Sprintf("example-value-%v", _default.Result)),
//			})
//			if err != nil {
//				return err
//			}
//			defaultoqWvHQ, err := hbr.NewPolicy(ctx, "defaultoqWvHQ", &hbr.PolicyArgs{
//				PolicyName: pulumi.String(fmt.Sprintf("example-value-%v", _default.Result)),
//				Rules: hbr.PolicyRuleArray{
//					&hbr.PolicyRuleArgs{
//						RuleType:    pulumi.String("BACKUP"),
//						BackupType:  pulumi.String("COMPLETE"),
//						Schedule:    pulumi.String("I|1631685600|P1D"),
//						Retention:   pulumi.Int(7),
//						ArchiveDays: pulumi.Int(0),
//						VaultId:     defaultyk84Hc.ID(),
//					},
//				},
//				PolicyDescription: pulumi.String("policy example"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultKtt2XY, err := oss.NewBucket(ctx, "defaultKtt2XY", &oss.BucketArgs{
//				StorageClass: pulumi.String("Standard"),
//				Bucket:       pulumi.String(fmt.Sprintf("example-value-%v", _default.Result)),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = hbr.NewPolicyBinding(ctx, "default", &hbr.PolicyBindingArgs{
//				SourceType:               pulumi.String("OSS"),
//				Disabled:                 pulumi.Bool(false),
//				PolicyId:                 defaultoqWvHQ.ID(),
//				DataSourceId:             defaultKtt2XY.Bucket,
//				PolicyBindingDescription: pulumi.String("policy binding example (update)"),
//				Source:                   pulumi.String("prefix-example-update/"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// HBR Policy Binding can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:hbr/policyBinding:PolicyBinding example <policy_id>:<source_type>:<data_source_id>
// ```
type PolicyBinding struct {
	pulumi.CustomResourceState

	// Backup Advanced Options. See `advancedOptions` below.
	AdvancedOptions PolicyBindingAdvancedOptionsOutput `pulumi:"advancedOptions"`
	// The creation time of the resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The data source ID.
	DataSourceId pulumi.StringOutput `pulumi:"dataSourceId"`
	// Whether the policy is effective for the data source.
	// - true: Pause
	// - false: not paused.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
	Exclude pulumi.StringPtrOutput `pulumi:"exclude"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
	Include pulumi.StringPtrOutput `pulumi:"include"`
	// Resource Description.
	PolicyBindingDescription pulumi.StringPtrOutput `pulumi:"policyBindingDescription"`
	// The policy ID.
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
	Source pulumi.StringPtrOutput `pulumi:"source"`
	// Data source type, value range:
	// - **UDM_ECS**: indicates the ECS instance backup.
	// - **OSS**: indicates an OSS backup.
	// - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
	// - **ECS_FILE**: indicates that the ECS file is backed up.
	// - **File**: indicates a local File backup.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
	SpeedLimit pulumi.StringPtrOutput `pulumi:"speedLimit"`
}

// NewPolicyBinding registers a new resource with the given unique name, arguments, and options.
func NewPolicyBinding(ctx *pulumi.Context,
	name string, args *PolicyBindingArgs, opts ...pulumi.ResourceOption) (*PolicyBinding, error) {
	if args == nil {
		args = &PolicyBindingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyBinding
	err := ctx.RegisterResource("alicloud:hbr/policyBinding:PolicyBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyBinding gets an existing PolicyBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyBindingState, opts ...pulumi.ResourceOption) (*PolicyBinding, error) {
	var resource PolicyBinding
	err := ctx.ReadResource("alicloud:hbr/policyBinding:PolicyBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyBinding resources.
type policyBindingState struct {
	// Backup Advanced Options. See `advancedOptions` below.
	AdvancedOptions *PolicyBindingAdvancedOptions `pulumi:"advancedOptions"`
	// The creation time of the resource.
	CreateTime *string `pulumi:"createTime"`
	// The data source ID.
	DataSourceId *string `pulumi:"dataSourceId"`
	// Whether the policy is effective for the data source.
	// - true: Pause
	// - false: not paused.
	Disabled *bool `pulumi:"disabled"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
	Exclude *string `pulumi:"exclude"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
	Include *string `pulumi:"include"`
	// Resource Description.
	PolicyBindingDescription *string `pulumi:"policyBindingDescription"`
	// The policy ID.
	PolicyId *string `pulumi:"policyId"`
	// When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
	Source *string `pulumi:"source"`
	// Data source type, value range:
	// - **UDM_ECS**: indicates the ECS instance backup.
	// - **OSS**: indicates an OSS backup.
	// - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
	// - **ECS_FILE**: indicates that the ECS file is backed up.
	// - **File**: indicates a local File backup.
	SourceType *string `pulumi:"sourceType"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
	SpeedLimit *string `pulumi:"speedLimit"`
}

type PolicyBindingState struct {
	// Backup Advanced Options. See `advancedOptions` below.
	AdvancedOptions PolicyBindingAdvancedOptionsPtrInput
	// The creation time of the resource.
	CreateTime pulumi.StringPtrInput
	// The data source ID.
	DataSourceId pulumi.StringPtrInput
	// Whether the policy is effective for the data source.
	// - true: Pause
	// - false: not paused.
	Disabled pulumi.BoolPtrInput
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
	Exclude pulumi.StringPtrInput
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
	Include pulumi.StringPtrInput
	// Resource Description.
	PolicyBindingDescription pulumi.StringPtrInput
	// The policy ID.
	PolicyId pulumi.StringPtrInput
	// When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
	Source pulumi.StringPtrInput
	// Data source type, value range:
	// - **UDM_ECS**: indicates the ECS instance backup.
	// - **OSS**: indicates an OSS backup.
	// - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
	// - **ECS_FILE**: indicates that the ECS file is backed up.
	// - **File**: indicates a local File backup.
	SourceType pulumi.StringPtrInput
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
	SpeedLimit pulumi.StringPtrInput
}

func (PolicyBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyBindingState)(nil)).Elem()
}

type policyBindingArgs struct {
	// Backup Advanced Options. See `advancedOptions` below.
	AdvancedOptions *PolicyBindingAdvancedOptions `pulumi:"advancedOptions"`
	// The data source ID.
	DataSourceId *string `pulumi:"dataSourceId"`
	// Whether the policy is effective for the data source.
	// - true: Pause
	// - false: not paused.
	Disabled *bool `pulumi:"disabled"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
	Exclude *string `pulumi:"exclude"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
	Include *string `pulumi:"include"`
	// Resource Description.
	PolicyBindingDescription *string `pulumi:"policyBindingDescription"`
	// The policy ID.
	PolicyId *string `pulumi:"policyId"`
	// When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
	Source *string `pulumi:"source"`
	// Data source type, value range:
	// - **UDM_ECS**: indicates the ECS instance backup.
	// - **OSS**: indicates an OSS backup.
	// - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
	// - **ECS_FILE**: indicates that the ECS file is backed up.
	// - **File**: indicates a local File backup.
	SourceType *string `pulumi:"sourceType"`
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
	SpeedLimit *string `pulumi:"speedLimit"`
}

// The set of arguments for constructing a PolicyBinding resource.
type PolicyBindingArgs struct {
	// Backup Advanced Options. See `advancedOptions` below.
	AdvancedOptions PolicyBindingAdvancedOptionsPtrInput
	// The data source ID.
	DataSourceId pulumi.StringPtrInput
	// Whether the policy is effective for the data source.
	// - true: Pause
	// - false: not paused.
	Disabled pulumi.BoolPtrInput
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
	Exclude pulumi.StringPtrInput
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
	Include pulumi.StringPtrInput
	// Resource Description.
	PolicyBindingDescription pulumi.StringPtrInput
	// The policy ID.
	PolicyId pulumi.StringPtrInput
	// When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
	Source pulumi.StringPtrInput
	// Data source type, value range:
	// - **UDM_ECS**: indicates the ECS instance backup.
	// - **OSS**: indicates an OSS backup.
	// - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
	// - **ECS_FILE**: indicates that the ECS file is backed up.
	// - **File**: indicates a local File backup.
	SourceType pulumi.StringPtrInput
	// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
	SpeedLimit pulumi.StringPtrInput
}

func (PolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyBindingArgs)(nil)).Elem()
}

type PolicyBindingInput interface {
	pulumi.Input

	ToPolicyBindingOutput() PolicyBindingOutput
	ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput
}

func (*PolicyBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBinding)(nil)).Elem()
}

func (i *PolicyBinding) ToPolicyBindingOutput() PolicyBindingOutput {
	return i.ToPolicyBindingOutputWithContext(context.Background())
}

func (i *PolicyBinding) ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingOutput)
}

// PolicyBindingArrayInput is an input type that accepts PolicyBindingArray and PolicyBindingArrayOutput values.
// You can construct a concrete instance of `PolicyBindingArrayInput` via:
//
//	PolicyBindingArray{ PolicyBindingArgs{...} }
type PolicyBindingArrayInput interface {
	pulumi.Input

	ToPolicyBindingArrayOutput() PolicyBindingArrayOutput
	ToPolicyBindingArrayOutputWithContext(context.Context) PolicyBindingArrayOutput
}

type PolicyBindingArray []PolicyBindingInput

func (PolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyBinding)(nil)).Elem()
}

func (i PolicyBindingArray) ToPolicyBindingArrayOutput() PolicyBindingArrayOutput {
	return i.ToPolicyBindingArrayOutputWithContext(context.Background())
}

func (i PolicyBindingArray) ToPolicyBindingArrayOutputWithContext(ctx context.Context) PolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingArrayOutput)
}

// PolicyBindingMapInput is an input type that accepts PolicyBindingMap and PolicyBindingMapOutput values.
// You can construct a concrete instance of `PolicyBindingMapInput` via:
//
//	PolicyBindingMap{ "key": PolicyBindingArgs{...} }
type PolicyBindingMapInput interface {
	pulumi.Input

	ToPolicyBindingMapOutput() PolicyBindingMapOutput
	ToPolicyBindingMapOutputWithContext(context.Context) PolicyBindingMapOutput
}

type PolicyBindingMap map[string]PolicyBindingInput

func (PolicyBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyBinding)(nil)).Elem()
}

func (i PolicyBindingMap) ToPolicyBindingMapOutput() PolicyBindingMapOutput {
	return i.ToPolicyBindingMapOutputWithContext(context.Background())
}

func (i PolicyBindingMap) ToPolicyBindingMapOutputWithContext(ctx context.Context) PolicyBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindingMapOutput)
}

type PolicyBindingOutput struct{ *pulumi.OutputState }

func (PolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingOutput) ToPolicyBindingOutput() PolicyBindingOutput {
	return o
}

func (o PolicyBindingOutput) ToPolicyBindingOutputWithContext(ctx context.Context) PolicyBindingOutput {
	return o
}

// Backup Advanced Options. See `advancedOptions` below.
func (o PolicyBindingOutput) AdvancedOptions() PolicyBindingAdvancedOptionsOutput {
	return o.ApplyT(func(v *PolicyBinding) PolicyBindingAdvancedOptionsOutput { return v.AdvancedOptions }).(PolicyBindingAdvancedOptionsOutput)
}

// The creation time of the resource.
func (o PolicyBindingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The data source ID.
func (o PolicyBindingOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringOutput { return v.DataSourceId }).(pulumi.StringOutput)
}

// Whether the policy is effective for the data source.
// - true: Pause
// - false: not paused.
func (o PolicyBindingOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates a file type that does not need to be backed up. All files of this type are not backed up. A maximum of 255 characters is supported.
func (o PolicyBindingOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringPtrOutput { return v.Exclude }).(pulumi.StringPtrOutput)
}

// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates the file types to be backed up, and all files of these types are backed up. A maximum of 255 characters is supported.
func (o PolicyBindingOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringPtrOutput { return v.Include }).(pulumi.StringPtrOutput)
}

// Resource Description.
func (o PolicyBindingOutput) PolicyBindingDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringPtrOutput { return v.PolicyBindingDescription }).(pulumi.StringPtrOutput)
}

// The policy ID.
func (o PolicyBindingOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// When SourceType is OSS, a prefix is specified to be backed up. If it is not specified, the entire root directory of the Bucket is backed up.
func (o PolicyBindingOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringPtrOutput { return v.Source }).(pulumi.StringPtrOutput)
}

// Data source type, value range:
// - **UDM_ECS**: indicates the ECS instance backup.
// - **OSS**: indicates an OSS backup.
// - **NAS**: indicates an Alibaba Cloud NAS Backup. When you bind a file system to a policy, Cloud Backup automatically creates a mount point for the file system. If you no longer need the mount point, delete it manually.
// - **ECS_FILE**: indicates that the ECS file is backed up.
// - **File**: indicates a local File backup.
func (o PolicyBindingOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// This parameter is required only when the value of SourceType is ECS_FILE or File. Indicates backup flow control. The format is {start}{end}{bandwidth}. Multiple flow control configurations use partitioning, and no overlap in configuration time is allowed. start: start hour. end: end of hour. bandwidth: limit rate, in KB/s.
func (o PolicyBindingOutput) SpeedLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBinding) pulumi.StringPtrOutput { return v.SpeedLimit }).(pulumi.StringPtrOutput)
}

type PolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (PolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingArrayOutput) ToPolicyBindingArrayOutput() PolicyBindingArrayOutput {
	return o
}

func (o PolicyBindingArrayOutput) ToPolicyBindingArrayOutputWithContext(ctx context.Context) PolicyBindingArrayOutput {
	return o
}

func (o PolicyBindingArrayOutput) Index(i pulumi.IntInput) PolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyBinding {
		return vs[0].([]*PolicyBinding)[vs[1].(int)]
	}).(PolicyBindingOutput)
}

type PolicyBindingMapOutput struct{ *pulumi.OutputState }

func (PolicyBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyBinding)(nil)).Elem()
}

func (o PolicyBindingMapOutput) ToPolicyBindingMapOutput() PolicyBindingMapOutput {
	return o
}

func (o PolicyBindingMapOutput) ToPolicyBindingMapOutputWithContext(ctx context.Context) PolicyBindingMapOutput {
	return o
}

func (o PolicyBindingMapOutput) MapIndex(k pulumi.StringInput) PolicyBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyBinding {
		return vs[0].(map[string]*PolicyBinding)[vs[1].(string)]
	}).(PolicyBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingInput)(nil)).Elem(), &PolicyBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingArrayInput)(nil)).Elem(), PolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindingMapInput)(nil)).Elem(), PolicyBindingMap{})
	pulumi.RegisterOutputType(PolicyBindingOutput{})
	pulumi.RegisterOutputType(PolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(PolicyBindingMapOutput{})
}
