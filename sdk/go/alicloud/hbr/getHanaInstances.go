// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hbr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Hbr Hana Instances of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.178.0+.
func GetHanaInstances(ctx *pulumi.Context, args *GetHanaInstancesArgs, opts ...pulumi.InvokeOption) (*GetHanaInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHanaInstancesResult
	err := ctx.Invoke("alicloud:hbr/getHanaInstances:getHanaInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHanaInstances.
type GetHanaInstancesArgs struct {
	// A list of Hana Instance IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Hana Instance name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The status of the SAP HANA instance.
	Status *string `pulumi:"status"`
	// The ID of the backup vault.
	VaultId *string `pulumi:"vaultId"`
}

// A collection of values returned by getHanaInstances.
type GetHanaInstancesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                     `pulumi:"id"`
	Ids        []string                   `pulumi:"ids"`
	Instances  []GetHanaInstancesInstance `pulumi:"instances"`
	NameRegex  *string                    `pulumi:"nameRegex"`
	Names      []string                   `pulumi:"names"`
	OutputFile *string                    `pulumi:"outputFile"`
	PageNumber *int                       `pulumi:"pageNumber"`
	PageSize   *int                       `pulumi:"pageSize"`
	Status     *string                    `pulumi:"status"`
	VaultId    *string                    `pulumi:"vaultId"`
}

func GetHanaInstancesOutput(ctx *pulumi.Context, args GetHanaInstancesOutputArgs, opts ...pulumi.InvokeOption) GetHanaInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHanaInstancesResult, error) {
			args := v.(GetHanaInstancesArgs)
			r, err := GetHanaInstances(ctx, &args, opts...)
			var s GetHanaInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHanaInstancesResultOutput)
}

// A collection of arguments for invoking getHanaInstances.
type GetHanaInstancesOutputArgs struct {
	// A list of Hana Instance IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Hana Instance name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The status of the SAP HANA instance.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The ID of the backup vault.
	VaultId pulumi.StringPtrInput `pulumi:"vaultId"`
}

func (GetHanaInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHanaInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getHanaInstances.
type GetHanaInstancesResultOutput struct{ *pulumi.OutputState }

func (GetHanaInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHanaInstancesResult)(nil)).Elem()
}

func (o GetHanaInstancesResultOutput) ToGetHanaInstancesResultOutput() GetHanaInstancesResultOutput {
	return o
}

func (o GetHanaInstancesResultOutput) ToGetHanaInstancesResultOutputWithContext(ctx context.Context) GetHanaInstancesResultOutput {
	return o
}

func (o GetHanaInstancesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetHanaInstancesResult] {
	return pulumix.Output[GetHanaInstancesResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetHanaInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHanaInstancesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetHanaInstancesResultOutput) Instances() GetHanaInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) []GetHanaInstancesInstance { return v.Instances }).(GetHanaInstancesInstanceArrayOutput)
}

func (o GetHanaInstancesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetHanaInstancesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetHanaInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetHanaInstancesResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetHanaInstancesResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

func (o GetHanaInstancesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetHanaInstancesResultOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHanaInstancesResult) *string { return v.VaultId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHanaInstancesResultOutput{})
}
