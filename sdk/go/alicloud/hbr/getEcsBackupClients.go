// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hbr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Hbr Ecs File Backup Clients of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.132.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
// "github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// "github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
// "github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/hbr"
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := ecs.GetInstances(ctx, &ecs.GetInstancesArgs{
// NameRegex: pulumi.StringRef("ecs_instance_name"),
// Status: pulumi.StringRef("Running"),
// }, nil);
// if err != nil {
// return err
// }
// ids, err := hbr.GetEcsBackupClients(ctx, &hbr.GetEcsBackupClientsArgs{
// Ids: interface{}{
// alicloud_hbr_ecs_backup_client.Default.Id,
// },
// InstanceIds: interface{}{
// alicloud_hbr_ecs_backup_client.Default.Instance_id,
// },
// }, nil);
// if err != nil {
// return err
// }
// ctx.Export("hbrEcsBackupClientId1", ids.Clients[0].Id)
// return nil
// })
// }
// ```
func GetEcsBackupClients(ctx *pulumi.Context, args *GetEcsBackupClientsArgs, opts ...pulumi.InvokeOption) (*GetEcsBackupClientsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEcsBackupClientsResult
	err := ctx.Invoke("alicloud:hbr/getEcsBackupClients:getEcsBackupClients", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEcsBackupClients.
type GetEcsBackupClientsArgs struct {
	// A list of Ecs Backup Client IDs.
	Ids []string `pulumi:"ids"`
	// A list of ECS Instance IDs.
	InstanceIds []string `pulumi:"instanceIds"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getEcsBackupClients.
type GetEcsBackupClientsResult struct {
	Clients []GetEcsBackupClientsClient `pulumi:"clients"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	Ids         []string `pulumi:"ids"`
	InstanceIds []string `pulumi:"instanceIds"`
	OutputFile  *string  `pulumi:"outputFile"`
	Status      *string  `pulumi:"status"`
}

func GetEcsBackupClientsOutput(ctx *pulumi.Context, args GetEcsBackupClientsOutputArgs, opts ...pulumi.InvokeOption) GetEcsBackupClientsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEcsBackupClientsResult, error) {
			args := v.(GetEcsBackupClientsArgs)
			r, err := GetEcsBackupClients(ctx, &args, opts...)
			var s GetEcsBackupClientsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEcsBackupClientsResultOutput)
}

// A collection of arguments for invoking getEcsBackupClients.
type GetEcsBackupClientsOutputArgs struct {
	// A list of Ecs Backup Client IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A list of ECS Instance IDs.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetEcsBackupClientsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsBackupClientsArgs)(nil)).Elem()
}

// A collection of values returned by getEcsBackupClients.
type GetEcsBackupClientsResultOutput struct{ *pulumi.OutputState }

func (GetEcsBackupClientsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsBackupClientsResult)(nil)).Elem()
}

func (o GetEcsBackupClientsResultOutput) ToGetEcsBackupClientsResultOutput() GetEcsBackupClientsResultOutput {
	return o
}

func (o GetEcsBackupClientsResultOutput) ToGetEcsBackupClientsResultOutputWithContext(ctx context.Context) GetEcsBackupClientsResultOutput {
	return o
}

func (o GetEcsBackupClientsResultOutput) Clients() GetEcsBackupClientsClientArrayOutput {
	return o.ApplyT(func(v GetEcsBackupClientsResult) []GetEcsBackupClientsClient { return v.Clients }).(GetEcsBackupClientsClientArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEcsBackupClientsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsBackupClientsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEcsBackupClientsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsBackupClientsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetEcsBackupClientsResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsBackupClientsResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetEcsBackupClientsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsBackupClientsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetEcsBackupClientsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsBackupClientsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEcsBackupClientsResultOutput{})
}
