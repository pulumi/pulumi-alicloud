// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bss

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetOpenApiPricingModulesModule struct {
	// Property Code.
	Code string `pulumi:"code"`
	// A list of Price Module IDs.
	Id string `pulumi:"id"`
	// Attribute name.
	PricingModuleName string `pulumi:"pricingModuleName"`
	// The product code.
	ProductCode string `pulumi:"productCode"`
	// The product type.
	ProductType string `pulumi:"productType"`
	// Subscription type. Value:
	// * Subscription: Prepaid.
	// * PayAsYouGo: postpaid.
	SubscriptionType string `pulumi:"subscriptionType"`
	// Attribute unit.
	Unit string `pulumi:"unit"`
	// Property.
	Values []GetOpenApiPricingModulesModuleValue `pulumi:"values"`
}

// GetOpenApiPricingModulesModuleInput is an input type that accepts GetOpenApiPricingModulesModuleArgs and GetOpenApiPricingModulesModuleOutput values.
// You can construct a concrete instance of `GetOpenApiPricingModulesModuleInput` via:
//
//	GetOpenApiPricingModulesModuleArgs{...}
type GetOpenApiPricingModulesModuleInput interface {
	pulumi.Input

	ToGetOpenApiPricingModulesModuleOutput() GetOpenApiPricingModulesModuleOutput
	ToGetOpenApiPricingModulesModuleOutputWithContext(context.Context) GetOpenApiPricingModulesModuleOutput
}

type GetOpenApiPricingModulesModuleArgs struct {
	// Property Code.
	Code pulumi.StringInput `pulumi:"code"`
	// A list of Price Module IDs.
	Id pulumi.StringInput `pulumi:"id"`
	// Attribute name.
	PricingModuleName pulumi.StringInput `pulumi:"pricingModuleName"`
	// The product code.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// The product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Subscription type. Value:
	// * Subscription: Prepaid.
	// * PayAsYouGo: postpaid.
	SubscriptionType pulumi.StringInput `pulumi:"subscriptionType"`
	// Attribute unit.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Property.
	Values GetOpenApiPricingModulesModuleValueArrayInput `pulumi:"values"`
}

func (GetOpenApiPricingModulesModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenApiPricingModulesModule)(nil)).Elem()
}

func (i GetOpenApiPricingModulesModuleArgs) ToGetOpenApiPricingModulesModuleOutput() GetOpenApiPricingModulesModuleOutput {
	return i.ToGetOpenApiPricingModulesModuleOutputWithContext(context.Background())
}

func (i GetOpenApiPricingModulesModuleArgs) ToGetOpenApiPricingModulesModuleOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenApiPricingModulesModuleOutput)
}

// GetOpenApiPricingModulesModuleArrayInput is an input type that accepts GetOpenApiPricingModulesModuleArray and GetOpenApiPricingModulesModuleArrayOutput values.
// You can construct a concrete instance of `GetOpenApiPricingModulesModuleArrayInput` via:
//
//	GetOpenApiPricingModulesModuleArray{ GetOpenApiPricingModulesModuleArgs{...} }
type GetOpenApiPricingModulesModuleArrayInput interface {
	pulumi.Input

	ToGetOpenApiPricingModulesModuleArrayOutput() GetOpenApiPricingModulesModuleArrayOutput
	ToGetOpenApiPricingModulesModuleArrayOutputWithContext(context.Context) GetOpenApiPricingModulesModuleArrayOutput
}

type GetOpenApiPricingModulesModuleArray []GetOpenApiPricingModulesModuleInput

func (GetOpenApiPricingModulesModuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenApiPricingModulesModule)(nil)).Elem()
}

func (i GetOpenApiPricingModulesModuleArray) ToGetOpenApiPricingModulesModuleArrayOutput() GetOpenApiPricingModulesModuleArrayOutput {
	return i.ToGetOpenApiPricingModulesModuleArrayOutputWithContext(context.Background())
}

func (i GetOpenApiPricingModulesModuleArray) ToGetOpenApiPricingModulesModuleArrayOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenApiPricingModulesModuleArrayOutput)
}

type GetOpenApiPricingModulesModuleOutput struct{ *pulumi.OutputState }

func (GetOpenApiPricingModulesModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenApiPricingModulesModule)(nil)).Elem()
}

func (o GetOpenApiPricingModulesModuleOutput) ToGetOpenApiPricingModulesModuleOutput() GetOpenApiPricingModulesModuleOutput {
	return o
}

func (o GetOpenApiPricingModulesModuleOutput) ToGetOpenApiPricingModulesModuleOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleOutput {
	return o
}

// Property Code.
func (o GetOpenApiPricingModulesModuleOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.Code }).(pulumi.StringOutput)
}

// A list of Price Module IDs.
func (o GetOpenApiPricingModulesModuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.Id }).(pulumi.StringOutput)
}

// Attribute name.
func (o GetOpenApiPricingModulesModuleOutput) PricingModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.PricingModuleName }).(pulumi.StringOutput)
}

// The product code.
func (o GetOpenApiPricingModulesModuleOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.ProductCode }).(pulumi.StringOutput)
}

// The product type.
func (o GetOpenApiPricingModulesModuleOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.ProductType }).(pulumi.StringOutput)
}

// Subscription type. Value:
// * Subscription: Prepaid.
// * PayAsYouGo: postpaid.
func (o GetOpenApiPricingModulesModuleOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.SubscriptionType }).(pulumi.StringOutput)
}

// Attribute unit.
func (o GetOpenApiPricingModulesModuleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) string { return v.Unit }).(pulumi.StringOutput)
}

// Property.
func (o GetOpenApiPricingModulesModuleOutput) Values() GetOpenApiPricingModulesModuleValueArrayOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModule) []GetOpenApiPricingModulesModuleValue { return v.Values }).(GetOpenApiPricingModulesModuleValueArrayOutput)
}

type GetOpenApiPricingModulesModuleArrayOutput struct{ *pulumi.OutputState }

func (GetOpenApiPricingModulesModuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenApiPricingModulesModule)(nil)).Elem()
}

func (o GetOpenApiPricingModulesModuleArrayOutput) ToGetOpenApiPricingModulesModuleArrayOutput() GetOpenApiPricingModulesModuleArrayOutput {
	return o
}

func (o GetOpenApiPricingModulesModuleArrayOutput) ToGetOpenApiPricingModulesModuleArrayOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleArrayOutput {
	return o
}

func (o GetOpenApiPricingModulesModuleArrayOutput) Index(i pulumi.IntInput) GetOpenApiPricingModulesModuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpenApiPricingModulesModule {
		return vs[0].([]GetOpenApiPricingModulesModule)[vs[1].(int)]
	}).(GetOpenApiPricingModulesModuleOutput)
}

type GetOpenApiPricingModulesModuleValue struct {
	// The module Code corresponds to the attribute value.
	Name string `pulumi:"name"`
	// Module value description information.
	Remark string `pulumi:"remark"`
	// The attribute value type corresponding to the module Code. Value:
	// * single_float: single value type.
	// * range_float: range value type.
	Type string `pulumi:"type"`
	// The module Code corresponds to the attribute value.
	// > format 1024-1024000 when Type = range_float: 1024 means from 1024 to 1024000, step size 1024.
	Value string `pulumi:"value"`
}

// GetOpenApiPricingModulesModuleValueInput is an input type that accepts GetOpenApiPricingModulesModuleValueArgs and GetOpenApiPricingModulesModuleValueOutput values.
// You can construct a concrete instance of `GetOpenApiPricingModulesModuleValueInput` via:
//
//	GetOpenApiPricingModulesModuleValueArgs{...}
type GetOpenApiPricingModulesModuleValueInput interface {
	pulumi.Input

	ToGetOpenApiPricingModulesModuleValueOutput() GetOpenApiPricingModulesModuleValueOutput
	ToGetOpenApiPricingModulesModuleValueOutputWithContext(context.Context) GetOpenApiPricingModulesModuleValueOutput
}

type GetOpenApiPricingModulesModuleValueArgs struct {
	// The module Code corresponds to the attribute value.
	Name pulumi.StringInput `pulumi:"name"`
	// Module value description information.
	Remark pulumi.StringInput `pulumi:"remark"`
	// The attribute value type corresponding to the module Code. Value:
	// * single_float: single value type.
	// * range_float: range value type.
	Type pulumi.StringInput `pulumi:"type"`
	// The module Code corresponds to the attribute value.
	// > format 1024-1024000 when Type = range_float: 1024 means from 1024 to 1024000, step size 1024.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetOpenApiPricingModulesModuleValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenApiPricingModulesModuleValue)(nil)).Elem()
}

func (i GetOpenApiPricingModulesModuleValueArgs) ToGetOpenApiPricingModulesModuleValueOutput() GetOpenApiPricingModulesModuleValueOutput {
	return i.ToGetOpenApiPricingModulesModuleValueOutputWithContext(context.Background())
}

func (i GetOpenApiPricingModulesModuleValueArgs) ToGetOpenApiPricingModulesModuleValueOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenApiPricingModulesModuleValueOutput)
}

// GetOpenApiPricingModulesModuleValueArrayInput is an input type that accepts GetOpenApiPricingModulesModuleValueArray and GetOpenApiPricingModulesModuleValueArrayOutput values.
// You can construct a concrete instance of `GetOpenApiPricingModulesModuleValueArrayInput` via:
//
//	GetOpenApiPricingModulesModuleValueArray{ GetOpenApiPricingModulesModuleValueArgs{...} }
type GetOpenApiPricingModulesModuleValueArrayInput interface {
	pulumi.Input

	ToGetOpenApiPricingModulesModuleValueArrayOutput() GetOpenApiPricingModulesModuleValueArrayOutput
	ToGetOpenApiPricingModulesModuleValueArrayOutputWithContext(context.Context) GetOpenApiPricingModulesModuleValueArrayOutput
}

type GetOpenApiPricingModulesModuleValueArray []GetOpenApiPricingModulesModuleValueInput

func (GetOpenApiPricingModulesModuleValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenApiPricingModulesModuleValue)(nil)).Elem()
}

func (i GetOpenApiPricingModulesModuleValueArray) ToGetOpenApiPricingModulesModuleValueArrayOutput() GetOpenApiPricingModulesModuleValueArrayOutput {
	return i.ToGetOpenApiPricingModulesModuleValueArrayOutputWithContext(context.Background())
}

func (i GetOpenApiPricingModulesModuleValueArray) ToGetOpenApiPricingModulesModuleValueArrayOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenApiPricingModulesModuleValueArrayOutput)
}

type GetOpenApiPricingModulesModuleValueOutput struct{ *pulumi.OutputState }

func (GetOpenApiPricingModulesModuleValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenApiPricingModulesModuleValue)(nil)).Elem()
}

func (o GetOpenApiPricingModulesModuleValueOutput) ToGetOpenApiPricingModulesModuleValueOutput() GetOpenApiPricingModulesModuleValueOutput {
	return o
}

func (o GetOpenApiPricingModulesModuleValueOutput) ToGetOpenApiPricingModulesModuleValueOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleValueOutput {
	return o
}

// The module Code corresponds to the attribute value.
func (o GetOpenApiPricingModulesModuleValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModuleValue) string { return v.Name }).(pulumi.StringOutput)
}

// Module value description information.
func (o GetOpenApiPricingModulesModuleValueOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModuleValue) string { return v.Remark }).(pulumi.StringOutput)
}

// The attribute value type corresponding to the module Code. Value:
// * single_float: single value type.
// * range_float: range value type.
func (o GetOpenApiPricingModulesModuleValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModuleValue) string { return v.Type }).(pulumi.StringOutput)
}

// The module Code corresponds to the attribute value.
// > format 1024-1024000 when Type = range_float: 1024 means from 1024 to 1024000, step size 1024.
func (o GetOpenApiPricingModulesModuleValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiPricingModulesModuleValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetOpenApiPricingModulesModuleValueArrayOutput struct{ *pulumi.OutputState }

func (GetOpenApiPricingModulesModuleValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenApiPricingModulesModuleValue)(nil)).Elem()
}

func (o GetOpenApiPricingModulesModuleValueArrayOutput) ToGetOpenApiPricingModulesModuleValueArrayOutput() GetOpenApiPricingModulesModuleValueArrayOutput {
	return o
}

func (o GetOpenApiPricingModulesModuleValueArrayOutput) ToGetOpenApiPricingModulesModuleValueArrayOutputWithContext(ctx context.Context) GetOpenApiPricingModulesModuleValueArrayOutput {
	return o
}

func (o GetOpenApiPricingModulesModuleValueArrayOutput) Index(i pulumi.IntInput) GetOpenApiPricingModulesModuleValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpenApiPricingModulesModuleValue {
		return vs[0].([]GetOpenApiPricingModulesModuleValue)[vs[1].(int)]
	}).(GetOpenApiPricingModulesModuleValueOutput)
}

type GetOpenApiProductsProduct struct {
	// The ID of the product. The value is formulated as `<product_code>:<product_type>:<subscription_type>`.
	Id string `pulumi:"id"`
	// Product code.
	ProductCode string `pulumi:"productCode"`
	// Product name.
	ProductName string `pulumi:"productName"`
	// Type of product.
	ProductType string `pulumi:"productType"`
	// Subscription type. Value:
	// * Subscription: Prepaid.
	// * PayAsYouGo: postpaid.
	SubscriptionType string `pulumi:"subscriptionType"`
}

// GetOpenApiProductsProductInput is an input type that accepts GetOpenApiProductsProductArgs and GetOpenApiProductsProductOutput values.
// You can construct a concrete instance of `GetOpenApiProductsProductInput` via:
//
//	GetOpenApiProductsProductArgs{...}
type GetOpenApiProductsProductInput interface {
	pulumi.Input

	ToGetOpenApiProductsProductOutput() GetOpenApiProductsProductOutput
	ToGetOpenApiProductsProductOutputWithContext(context.Context) GetOpenApiProductsProductOutput
}

type GetOpenApiProductsProductArgs struct {
	// The ID of the product. The value is formulated as `<product_code>:<product_type>:<subscription_type>`.
	Id pulumi.StringInput `pulumi:"id"`
	// Product code.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// Product name.
	ProductName pulumi.StringInput `pulumi:"productName"`
	// Type of product.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Subscription type. Value:
	// * Subscription: Prepaid.
	// * PayAsYouGo: postpaid.
	SubscriptionType pulumi.StringInput `pulumi:"subscriptionType"`
}

func (GetOpenApiProductsProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenApiProductsProduct)(nil)).Elem()
}

func (i GetOpenApiProductsProductArgs) ToGetOpenApiProductsProductOutput() GetOpenApiProductsProductOutput {
	return i.ToGetOpenApiProductsProductOutputWithContext(context.Background())
}

func (i GetOpenApiProductsProductArgs) ToGetOpenApiProductsProductOutputWithContext(ctx context.Context) GetOpenApiProductsProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenApiProductsProductOutput)
}

// GetOpenApiProductsProductArrayInput is an input type that accepts GetOpenApiProductsProductArray and GetOpenApiProductsProductArrayOutput values.
// You can construct a concrete instance of `GetOpenApiProductsProductArrayInput` via:
//
//	GetOpenApiProductsProductArray{ GetOpenApiProductsProductArgs{...} }
type GetOpenApiProductsProductArrayInput interface {
	pulumi.Input

	ToGetOpenApiProductsProductArrayOutput() GetOpenApiProductsProductArrayOutput
	ToGetOpenApiProductsProductArrayOutputWithContext(context.Context) GetOpenApiProductsProductArrayOutput
}

type GetOpenApiProductsProductArray []GetOpenApiProductsProductInput

func (GetOpenApiProductsProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenApiProductsProduct)(nil)).Elem()
}

func (i GetOpenApiProductsProductArray) ToGetOpenApiProductsProductArrayOutput() GetOpenApiProductsProductArrayOutput {
	return i.ToGetOpenApiProductsProductArrayOutputWithContext(context.Background())
}

func (i GetOpenApiProductsProductArray) ToGetOpenApiProductsProductArrayOutputWithContext(ctx context.Context) GetOpenApiProductsProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenApiProductsProductArrayOutput)
}

type GetOpenApiProductsProductOutput struct{ *pulumi.OutputState }

func (GetOpenApiProductsProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenApiProductsProduct)(nil)).Elem()
}

func (o GetOpenApiProductsProductOutput) ToGetOpenApiProductsProductOutput() GetOpenApiProductsProductOutput {
	return o
}

func (o GetOpenApiProductsProductOutput) ToGetOpenApiProductsProductOutputWithContext(ctx context.Context) GetOpenApiProductsProductOutput {
	return o
}

// The ID of the product. The value is formulated as `<product_code>:<product_type>:<subscription_type>`.
func (o GetOpenApiProductsProductOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiProductsProduct) string { return v.Id }).(pulumi.StringOutput)
}

// Product code.
func (o GetOpenApiProductsProductOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiProductsProduct) string { return v.ProductCode }).(pulumi.StringOutput)
}

// Product name.
func (o GetOpenApiProductsProductOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiProductsProduct) string { return v.ProductName }).(pulumi.StringOutput)
}

// Type of product.
func (o GetOpenApiProductsProductOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiProductsProduct) string { return v.ProductType }).(pulumi.StringOutput)
}

// Subscription type. Value:
// * Subscription: Prepaid.
// * PayAsYouGo: postpaid.
func (o GetOpenApiProductsProductOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenApiProductsProduct) string { return v.SubscriptionType }).(pulumi.StringOutput)
}

type GetOpenApiProductsProductArrayOutput struct{ *pulumi.OutputState }

func (GetOpenApiProductsProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenApiProductsProduct)(nil)).Elem()
}

func (o GetOpenApiProductsProductArrayOutput) ToGetOpenApiProductsProductArrayOutput() GetOpenApiProductsProductArrayOutput {
	return o
}

func (o GetOpenApiProductsProductArrayOutput) ToGetOpenApiProductsProductArrayOutputWithContext(ctx context.Context) GetOpenApiProductsProductArrayOutput {
	return o
}

func (o GetOpenApiProductsProductArrayOutput) Index(i pulumi.IntInput) GetOpenApiProductsProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpenApiProductsProduct {
		return vs[0].([]GetOpenApiProductsProduct)[vs[1].(int)]
	}).(GetOpenApiProductsProductOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenApiPricingModulesModuleInput)(nil)).Elem(), GetOpenApiPricingModulesModuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenApiPricingModulesModuleArrayInput)(nil)).Elem(), GetOpenApiPricingModulesModuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenApiPricingModulesModuleValueInput)(nil)).Elem(), GetOpenApiPricingModulesModuleValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenApiPricingModulesModuleValueArrayInput)(nil)).Elem(), GetOpenApiPricingModulesModuleValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenApiProductsProductInput)(nil)).Elem(), GetOpenApiProductsProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenApiProductsProductArrayInput)(nil)).Elem(), GetOpenApiProductsProductArray{})
	pulumi.RegisterOutputType(GetOpenApiPricingModulesModuleOutput{})
	pulumi.RegisterOutputType(GetOpenApiPricingModulesModuleArrayOutput{})
	pulumi.RegisterOutputType(GetOpenApiPricingModulesModuleValueOutput{})
	pulumi.RegisterOutputType(GetOpenApiPricingModulesModuleValueArrayOutput{})
	pulumi.RegisterOutputType(GetOpenApiProductsProductOutput{})
	pulumi.RegisterOutputType(GetOpenApiProductsProductArrayOutput{})
}
