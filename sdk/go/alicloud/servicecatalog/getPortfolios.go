// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Service Catalog Portfolio available to the user.[What is Portfolio](https://www.alibabacloud.com/help/en/servicecatalog/latest/api-doc-servicecatalog-2021-09-01-api-doc-createportfolio)
//
// > **NOTE:** Available in 1.204.0+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/servicecatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _default, err := servicecatalog.GetPortfolios(ctx, &servicecatalog.GetPortfoliosArgs{
// Ids: interface{}{
// alicloud_service_catalog_portfolio.Default.Id,
// },
// NameRegex: pulumi.StringRef(alicloud_service_catalog_portfolio.Default.Name),
// }, nil);
// if err != nil {
// return err
// }
// ctx.Export("alicloudServiceCatalogPortfolioExampleId", _default.Portfolios[0].Id)
// return nil
// })
// }
// ```
func GetPortfolios(ctx *pulumi.Context, args *GetPortfoliosArgs, opts ...pulumi.InvokeOption) (*GetPortfoliosResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPortfoliosResult
	err := ctx.Invoke("alicloud:servicecatalog/getPortfolios:getPortfolios", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPortfolios.
type GetPortfoliosArgs struct {
	// A list of Portfolio IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The ID of the product.
	ProductId *string `pulumi:"productId"`
	// The query scope. Valid values: `Local`(default), `Import`, `All`.
	Scope *string `pulumi:"scope"`
	// The field that is used to sort the queried data. The value is fixed as CreateTime, which specifies the creation time of product portfolios.
	SortBy *string `pulumi:"sortBy"`
	// The order in which you want to sort the queried data. Valid values: `Asc`, `Desc`.
	SortOrder *string `pulumi:"sortOrder"`
}

// A collection of values returned by getPortfolios.
type GetPortfoliosResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Portfolio IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of name of Portfolios.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	PageNumber *int     `pulumi:"pageNumber"`
	PageSize   *int     `pulumi:"pageSize"`
	// A list of Portfolio Entries. Each element contains the following attributes:
	Portfolios []GetPortfoliosPortfolio `pulumi:"portfolios"`
	ProductId  *string                  `pulumi:"productId"`
	Scope      *string                  `pulumi:"scope"`
	SortBy     *string                  `pulumi:"sortBy"`
	SortOrder  *string                  `pulumi:"sortOrder"`
}

func GetPortfoliosOutput(ctx *pulumi.Context, args GetPortfoliosOutputArgs, opts ...pulumi.InvokeOption) GetPortfoliosResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPortfoliosResult, error) {
			args := v.(GetPortfoliosArgs)
			r, err := GetPortfolios(ctx, &args, opts...)
			var s GetPortfoliosResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPortfoliosResultOutput)
}

// A collection of arguments for invoking getPortfolios.
type GetPortfoliosOutputArgs struct {
	// A list of Portfolio IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The ID of the product.
	ProductId pulumi.StringPtrInput `pulumi:"productId"`
	// The query scope. Valid values: `Local`(default), `Import`, `All`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The field that is used to sort the queried data. The value is fixed as CreateTime, which specifies the creation time of product portfolios.
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// The order in which you want to sort the queried data. Valid values: `Asc`, `Desc`.
	SortOrder pulumi.StringPtrInput `pulumi:"sortOrder"`
}

func (GetPortfoliosOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortfoliosArgs)(nil)).Elem()
}

// A collection of values returned by getPortfolios.
type GetPortfoliosResultOutput struct{ *pulumi.OutputState }

func (GetPortfoliosResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortfoliosResult)(nil)).Elem()
}

func (o GetPortfoliosResultOutput) ToGetPortfoliosResultOutput() GetPortfoliosResultOutput {
	return o
}

func (o GetPortfoliosResultOutput) ToGetPortfoliosResultOutputWithContext(ctx context.Context) GetPortfoliosResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPortfoliosResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfoliosResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Portfolio IDs.
func (o GetPortfoliosResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPortfoliosResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPortfoliosResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Portfolios.
func (o GetPortfoliosResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPortfoliosResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetPortfoliosResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetPortfoliosResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetPortfoliosResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// A list of Portfolio Entries. Each element contains the following attributes:
func (o GetPortfoliosResultOutput) Portfolios() GetPortfoliosPortfolioArrayOutput {
	return o.ApplyT(func(v GetPortfoliosResult) []GetPortfoliosPortfolio { return v.Portfolios }).(GetPortfoliosPortfolioArrayOutput)
}

func (o GetPortfoliosResultOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *string { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o GetPortfoliosResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o GetPortfoliosResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o GetPortfoliosResultOutput) SortOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPortfoliosResult) *string { return v.SortOrder }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPortfoliosResultOutput{})
}
