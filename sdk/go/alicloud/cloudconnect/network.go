// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a cloud connect network resource. Cloud Connect Network (CCN) is another important component of Smart Access Gateway. It is a device access matrix composed of Alibaba Cloud distributed access gateways. You can add multiple Smart Access Gateway (SAG) devices to a CCN instance and then attach the CCN instance to a Cloud Enterprise Network (CEN) instance to connect the local branches to the Alibaba Cloud.
//
// For information about cloud connect network and how to use it, see [What is Cloud Connect Network](https://www.alibabacloud.com/help/doc-detail/93667.htm).
//
// > **NOTE:** Available in 1.59.0+
//
// > **NOTE:** Only the following regions support create Cloud Connect Network. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-2`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/cloudconnect"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudconnect.NewNetwork(ctx, "_default", &cloudconnect.NetworkArgs{
// 			CidrBlock:   pulumi.String("192.168.0.0/24"),
// 			Description: pulumi.String("tf-testAccCloudConnectNetworkDescription"),
// 			IsDefault:   pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// The cloud connect network instance can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cloudconnect/network:Network example ccn-abc123456
// ```
type Network struct {
	pulumi.CustomResourceState

	// The CidrBlock of the CCN instance. Defaults to null.
	CidrBlock pulumi.StringPtrOutput `pulumi:"cidrBlock"`
	// The description of the CCN instance. The description can contain 2 to 256 characters. The description must start with English letters, but cannot start with http:// or https://.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Created by default. If the client does not have ccn in the binding, it will create a ccn for the user to replace.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The name of the CCN instance. The name can contain 2 to 128 characters including a-z, A-Z, 0-9, periods, underlines, and hyphens. The name must start with an English letter, but cannot start with http:// or https://.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOption) (*Network, error) {
	if args == nil || args.IsDefault == nil {
		return nil, errors.New("missing required argument 'IsDefault'")
	}
	if args == nil {
		args = &NetworkArgs{}
	}
	var resource Network
	err := ctx.RegisterResource("alicloud:cloudconnect/network:Network", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkState, opts ...pulumi.ResourceOption) (*Network, error) {
	var resource Network
	err := ctx.ReadResource("alicloud:cloudconnect/network:Network", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Network resources.
type networkState struct {
	// The CidrBlock of the CCN instance. Defaults to null.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The description of the CCN instance. The description can contain 2 to 256 characters. The description must start with English letters, but cannot start with http:// or https://.
	Description *string `pulumi:"description"`
	// Created by default. If the client does not have ccn in the binding, it will create a ccn for the user to replace.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the CCN instance. The name can contain 2 to 128 characters including a-z, A-Z, 0-9, periods, underlines, and hyphens. The name must start with an English letter, but cannot start with http:// or https://.
	Name *string `pulumi:"name"`
}

type NetworkState struct {
	// The CidrBlock of the CCN instance. Defaults to null.
	CidrBlock pulumi.StringPtrInput
	// The description of the CCN instance. The description can contain 2 to 256 characters. The description must start with English letters, but cannot start with http:// or https://.
	Description pulumi.StringPtrInput
	// Created by default. If the client does not have ccn in the binding, it will create a ccn for the user to replace.
	IsDefault pulumi.BoolPtrInput
	// The name of the CCN instance. The name can contain 2 to 128 characters including a-z, A-Z, 0-9, periods, underlines, and hyphens. The name must start with an English letter, but cannot start with http:// or https://.
	Name pulumi.StringPtrInput
}

func (NetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkState)(nil)).Elem()
}

type networkArgs struct {
	// The CidrBlock of the CCN instance. Defaults to null.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The description of the CCN instance. The description can contain 2 to 256 characters. The description must start with English letters, but cannot start with http:// or https://.
	Description *string `pulumi:"description"`
	// Created by default. If the client does not have ccn in the binding, it will create a ccn for the user to replace.
	IsDefault bool `pulumi:"isDefault"`
	// The name of the CCN instance. The name can contain 2 to 128 characters including a-z, A-Z, 0-9, periods, underlines, and hyphens. The name must start with an English letter, but cannot start with http:// or https://.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	// The CidrBlock of the CCN instance. Defaults to null.
	CidrBlock pulumi.StringPtrInput
	// The description of the CCN instance. The description can contain 2 to 256 characters. The description must start with English letters, but cannot start with http:// or https://.
	Description pulumi.StringPtrInput
	// Created by default. If the client does not have ccn in the binding, it will create a ccn for the user to replace.
	IsDefault pulumi.BoolInput
	// The name of the CCN instance. The name can contain 2 to 128 characters including a-z, A-Z, 0-9, periods, underlines, and hyphens. The name must start with an English letter, but cannot start with http:// or https://.
	Name pulumi.StringPtrInput
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkArgs)(nil)).Elem()
}

type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(ctx context.Context) NetworkOutput
}

func (Network) ElementType() reflect.Type {
	return reflect.TypeOf((*Network)(nil)).Elem()
}

func (i Network) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i Network) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

type NetworkOutput struct {
	*pulumi.OutputState
}

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkOutput)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NetworkOutput{})
}
