// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Cloud Connect Networks available to the user.
//
// > **NOTE:** Available in 1.59.0+
//
// > **NOTE:** Only the following regions support create Cloud Connect Network. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-2`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
func GetNetworks(ctx *pulumi.Context, args *GetNetworksArgs, opts ...pulumi.InvokeOption) (*GetNetworksResult, error) {
	var rv GetNetworksResult
	err := ctx.Invoke("alicloud:cloudconnect/getNetworks:getNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworks.
type GetNetworksArgs struct {
	// A list of CCN instances IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter CCN instances by name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getNetworks.
type GetNetworksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of CCN instances IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of CCN instances names.
	Names []string `pulumi:"names"`
	// A list of CCN instances. Each element contains the following attributes:
	Networks   []GetNetworksNetwork `pulumi:"networks"`
	OutputFile *string              `pulumi:"outputFile"`
}

func GetNetworksOutput(ctx *pulumi.Context, args GetNetworksOutputArgs, opts ...pulumi.InvokeOption) GetNetworksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworksResult, error) {
			args := v.(GetNetworksArgs)
			r, err := GetNetworks(ctx, &args, opts...)
			var s GetNetworksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworksResultOutput)
}

// A collection of arguments for invoking getNetworks.
type GetNetworksOutputArgs struct {
	// A list of CCN instances IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter CCN instances by name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getNetworks.
type GetNetworksResultOutput struct{ *pulumi.OutputState }

func (GetNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksResult)(nil)).Elem()
}

func (o GetNetworksResultOutput) ToGetNetworksResultOutput() GetNetworksResultOutput {
	return o
}

func (o GetNetworksResultOutput) ToGetNetworksResultOutputWithContext(ctx context.Context) GetNetworksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of CCN instances IDs.
func (o GetNetworksResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetNetworksResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of CCN instances names.
func (o GetNetworksResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

// A list of CCN instances. Each element contains the following attributes:
func (o GetNetworksResultOutput) Networks() GetNetworksNetworkArrayOutput {
	return o.ApplyT(func(v GetNetworksResult) []GetNetworksNetwork { return v.Networks }).(GetNetworksNetworkArrayOutput)
}

func (o GetNetworksResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworksResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworksResultOutput{})
}
