// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eventbridge

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Event Bridge Api Destination resource.
//
// For information about Event Bridge Api Destination and how to use it, see [What is Api Destination](https://www.alibabacloud.com/help/en/eventbridge/latest/api-eventbridge-2020-04-01-createapidestination).
//
// > **NOTE:** Available since v1.211.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/eventbridge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := "cn-chengdu"
//			if param := cfg.Get("region"); param != "" {
//				region = param
//			}
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultConnection, err := eventbridge.NewConnection(ctx, "defaultConnection", &eventbridge.ConnectionArgs{
//				ConnectionName: pulumi.String(name),
//				NetworkParameters: &eventbridge.ConnectionNetworkParametersArgs{
//					NetworkType: pulumi.String("PublicNetwork"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = eventbridge.NewApiDestination(ctx, "defaultApiDestination", &eventbridge.ApiDestinationArgs{
//				ConnectionName:     defaultConnection.ConnectionName,
//				ApiDestinationName: pulumi.String(name),
//				Description:        pulumi.String("test-api-destination-connection"),
//				HttpApiParameters: &eventbridge.ApiDestinationHttpApiParametersArgs{
//					Endpoint: pulumi.String("http://127.0.0.1:8001"),
//					Method:   pulumi.String("POST"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Event Bridge Api Destination can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:eventbridge/apiDestination:ApiDestination example <id>
// ```
type ApiDestination struct {
	pulumi.CustomResourceState

	// The name of the API destination.
	ApiDestinationName pulumi.StringOutput `pulumi:"apiDestinationName"`
	// The name of the connection.
	ConnectionName pulumi.StringOutput `pulumi:"connectionName"`
	// The creation time of the Api Destination.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// The description of the API destination.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The parameters that are configured for the API destination. See `httpApiParameters` below.
	HttpApiParameters ApiDestinationHttpApiParametersOutput `pulumi:"httpApiParameters"`
}

// NewApiDestination registers a new resource with the given unique name, arguments, and options.
func NewApiDestination(ctx *pulumi.Context,
	name string, args *ApiDestinationArgs, opts ...pulumi.ResourceOption) (*ApiDestination, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiDestinationName == nil {
		return nil, errors.New("invalid value for required argument 'ApiDestinationName'")
	}
	if args.ConnectionName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionName'")
	}
	if args.HttpApiParameters == nil {
		return nil, errors.New("invalid value for required argument 'HttpApiParameters'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiDestination
	err := ctx.RegisterResource("alicloud:eventbridge/apiDestination:ApiDestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiDestination gets an existing ApiDestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiDestinationState, opts ...pulumi.ResourceOption) (*ApiDestination, error) {
	var resource ApiDestination
	err := ctx.ReadResource("alicloud:eventbridge/apiDestination:ApiDestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiDestination resources.
type apiDestinationState struct {
	// The name of the API destination.
	ApiDestinationName *string `pulumi:"apiDestinationName"`
	// The name of the connection.
	ConnectionName *string `pulumi:"connectionName"`
	// The creation time of the Api Destination.
	CreateTime *int `pulumi:"createTime"`
	// The description of the API destination.
	Description *string `pulumi:"description"`
	// The parameters that are configured for the API destination. See `httpApiParameters` below.
	HttpApiParameters *ApiDestinationHttpApiParameters `pulumi:"httpApiParameters"`
}

type ApiDestinationState struct {
	// The name of the API destination.
	ApiDestinationName pulumi.StringPtrInput
	// The name of the connection.
	ConnectionName pulumi.StringPtrInput
	// The creation time of the Api Destination.
	CreateTime pulumi.IntPtrInput
	// The description of the API destination.
	Description pulumi.StringPtrInput
	// The parameters that are configured for the API destination. See `httpApiParameters` below.
	HttpApiParameters ApiDestinationHttpApiParametersPtrInput
}

func (ApiDestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiDestinationState)(nil)).Elem()
}

type apiDestinationArgs struct {
	// The name of the API destination.
	ApiDestinationName string `pulumi:"apiDestinationName"`
	// The name of the connection.
	ConnectionName string `pulumi:"connectionName"`
	// The description of the API destination.
	Description *string `pulumi:"description"`
	// The parameters that are configured for the API destination. See `httpApiParameters` below.
	HttpApiParameters ApiDestinationHttpApiParameters `pulumi:"httpApiParameters"`
}

// The set of arguments for constructing a ApiDestination resource.
type ApiDestinationArgs struct {
	// The name of the API destination.
	ApiDestinationName pulumi.StringInput
	// The name of the connection.
	ConnectionName pulumi.StringInput
	// The description of the API destination.
	Description pulumi.StringPtrInput
	// The parameters that are configured for the API destination. See `httpApiParameters` below.
	HttpApiParameters ApiDestinationHttpApiParametersInput
}

func (ApiDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiDestinationArgs)(nil)).Elem()
}

type ApiDestinationInput interface {
	pulumi.Input

	ToApiDestinationOutput() ApiDestinationOutput
	ToApiDestinationOutputWithContext(ctx context.Context) ApiDestinationOutput
}

func (*ApiDestination) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDestination)(nil)).Elem()
}

func (i *ApiDestination) ToApiDestinationOutput() ApiDestinationOutput {
	return i.ToApiDestinationOutputWithContext(context.Background())
}

func (i *ApiDestination) ToApiDestinationOutputWithContext(ctx context.Context) ApiDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDestinationOutput)
}

// ApiDestinationArrayInput is an input type that accepts ApiDestinationArray and ApiDestinationArrayOutput values.
// You can construct a concrete instance of `ApiDestinationArrayInput` via:
//
//	ApiDestinationArray{ ApiDestinationArgs{...} }
type ApiDestinationArrayInput interface {
	pulumi.Input

	ToApiDestinationArrayOutput() ApiDestinationArrayOutput
	ToApiDestinationArrayOutputWithContext(context.Context) ApiDestinationArrayOutput
}

type ApiDestinationArray []ApiDestinationInput

func (ApiDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiDestination)(nil)).Elem()
}

func (i ApiDestinationArray) ToApiDestinationArrayOutput() ApiDestinationArrayOutput {
	return i.ToApiDestinationArrayOutputWithContext(context.Background())
}

func (i ApiDestinationArray) ToApiDestinationArrayOutputWithContext(ctx context.Context) ApiDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDestinationArrayOutput)
}

// ApiDestinationMapInput is an input type that accepts ApiDestinationMap and ApiDestinationMapOutput values.
// You can construct a concrete instance of `ApiDestinationMapInput` via:
//
//	ApiDestinationMap{ "key": ApiDestinationArgs{...} }
type ApiDestinationMapInput interface {
	pulumi.Input

	ToApiDestinationMapOutput() ApiDestinationMapOutput
	ToApiDestinationMapOutputWithContext(context.Context) ApiDestinationMapOutput
}

type ApiDestinationMap map[string]ApiDestinationInput

func (ApiDestinationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiDestination)(nil)).Elem()
}

func (i ApiDestinationMap) ToApiDestinationMapOutput() ApiDestinationMapOutput {
	return i.ToApiDestinationMapOutputWithContext(context.Background())
}

func (i ApiDestinationMap) ToApiDestinationMapOutputWithContext(ctx context.Context) ApiDestinationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDestinationMapOutput)
}

type ApiDestinationOutput struct{ *pulumi.OutputState }

func (ApiDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDestination)(nil)).Elem()
}

func (o ApiDestinationOutput) ToApiDestinationOutput() ApiDestinationOutput {
	return o
}

func (o ApiDestinationOutput) ToApiDestinationOutputWithContext(ctx context.Context) ApiDestinationOutput {
	return o
}

// The name of the API destination.
func (o ApiDestinationOutput) ApiDestinationName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiDestination) pulumi.StringOutput { return v.ApiDestinationName }).(pulumi.StringOutput)
}

// The name of the connection.
func (o ApiDestinationOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiDestination) pulumi.StringOutput { return v.ConnectionName }).(pulumi.StringOutput)
}

// The creation time of the Api Destination.
func (o ApiDestinationOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ApiDestination) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// The description of the API destination.
func (o ApiDestinationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDestination) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The parameters that are configured for the API destination. See `httpApiParameters` below.
func (o ApiDestinationOutput) HttpApiParameters() ApiDestinationHttpApiParametersOutput {
	return o.ApplyT(func(v *ApiDestination) ApiDestinationHttpApiParametersOutput { return v.HttpApiParameters }).(ApiDestinationHttpApiParametersOutput)
}

type ApiDestinationArrayOutput struct{ *pulumi.OutputState }

func (ApiDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiDestination)(nil)).Elem()
}

func (o ApiDestinationArrayOutput) ToApiDestinationArrayOutput() ApiDestinationArrayOutput {
	return o
}

func (o ApiDestinationArrayOutput) ToApiDestinationArrayOutputWithContext(ctx context.Context) ApiDestinationArrayOutput {
	return o
}

func (o ApiDestinationArrayOutput) Index(i pulumi.IntInput) ApiDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiDestination {
		return vs[0].([]*ApiDestination)[vs[1].(int)]
	}).(ApiDestinationOutput)
}

type ApiDestinationMapOutput struct{ *pulumi.OutputState }

func (ApiDestinationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiDestination)(nil)).Elem()
}

func (o ApiDestinationMapOutput) ToApiDestinationMapOutput() ApiDestinationMapOutput {
	return o
}

func (o ApiDestinationMapOutput) ToApiDestinationMapOutputWithContext(ctx context.Context) ApiDestinationMapOutput {
	return o
}

func (o ApiDestinationMapOutput) MapIndex(k pulumi.StringInput) ApiDestinationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiDestination {
		return vs[0].(map[string]*ApiDestination)[vs[1].(string)]
	}).(ApiDestinationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDestinationInput)(nil)).Elem(), &ApiDestination{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDestinationArrayInput)(nil)).Elem(), ApiDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDestinationMapInput)(nil)).Elem(), ApiDestinationMap{})
	pulumi.RegisterOutputType(ApiDestinationOutput{})
	pulumi.RegisterOutputType(ApiDestinationArrayOutput{})
	pulumi.RegisterOutputType(ApiDestinationMapOutput{})
}
