// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clickhouseenterprisedbcluster

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Click House Enterprise Db Cluster Backup Policy resource.
//
// Enterprise ClickHouse instance backup policy.
//
// For information about Click House Enterprise Db Cluster Backup Policy and how to use it, see [What is Enterprise Db Cluster Backup Policy](https://next.api.alibabacloud.com/document/clickhouse/2023-05-22/CreateBackupPolicy).
//
// > **NOTE:** Available since v1.247.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/clickhouseenterprisedbcluster"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			regionId := "cn-beijing"
//			if param := cfg.Get("regionId"); param != "" {
//				regionId = param
//			}
//			vswIpRangeI := "172.16.1.0/24"
//			if param := cfg.Get("vswIpRangeI"); param != "" {
//				vswIpRangeI = param
//			}
//			vpcIpRange := "172.16.0.0/12"
//			if param := cfg.Get("vpcIpRange"); param != "" {
//				vpcIpRange = param
//			}
//			zoneIdI := "cn-beijing-i"
//			if param := cfg.Get("zoneIdI"); param != "" {
//				zoneIdI = param
//			}
//			defaultktKLuM, err := vpc.NewNetwork(ctx, "defaultktKLuM", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String(vpcIpRange),
//			})
//			if err != nil {
//				return err
//			}
//			defaultTQWN3k, err := vpc.NewSwitch(ctx, "defaultTQWN3k", &vpc.SwitchArgs{
//				VpcId:     defaultktKLuM.ID(),
//				ZoneId:    pulumi.String(zoneIdI),
//				CidrBlock: pulumi.String(vswIpRangeI),
//			})
//			if err != nil {
//				return err
//			}
//			default1tTLwe, err := clickhouseenterprisedbcluster.NewClickHouseEnterpriseDbCluster(ctx, "default1tTLwe", &clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterArgs{
//				ZoneId:    pulumi.String(zoneIdI),
//				VpcId:     defaultktKLuM.ID(),
//				ScaleMin:  pulumi.String("8"),
//				ScaleMax:  pulumi.String("16"),
//				VswitchId: defaultTQWN3k.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = clickhouseenterprisedbcluster.NewBackupPolicy(ctx, "default", &clickhouseenterprisedbcluster.BackupPolicyArgs{
//				PreferredBackupPeriod: pulumi.String("Monday"),
//				PreferredBackupTime:   pulumi.String("04:00Z-05:00Z"),
//				BackupRetentionPeriod: pulumi.Int(7),
//				DbInstanceId:          default1tTLwe.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Click House Enterprise Db Cluster Backup Policy can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:clickhouseenterprisedbcluster/backupPolicy:BackupPolicy example <id>
// ```
type BackupPolicy struct {
	pulumi.CustomResourceState

	// Backup retention time.
	BackupRetentionPeriod pulumi.IntOutput `pulumi:"backupRetentionPeriod"`
	// The instance ID.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// Backup period.
	PreferredBackupPeriod pulumi.StringOutput `pulumi:"preferredBackupPeriod"`
	// Backup time.
	PreferredBackupTime pulumi.StringOutput `pulumi:"preferredBackupTime"`
}

// NewBackupPolicy registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicy(ctx *pulumi.Context,
	name string, args *BackupPolicyArgs, opts ...pulumi.ResourceOption) (*BackupPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupRetentionPeriod == nil {
		return nil, errors.New("invalid value for required argument 'BackupRetentionPeriod'")
	}
	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	if args.PreferredBackupPeriod == nil {
		return nil, errors.New("invalid value for required argument 'PreferredBackupPeriod'")
	}
	if args.PreferredBackupTime == nil {
		return nil, errors.New("invalid value for required argument 'PreferredBackupTime'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupPolicy
	err := ctx.RegisterResource("alicloud:clickhouseenterprisedbcluster/backupPolicy:BackupPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPolicy gets an existing BackupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPolicyState, opts ...pulumi.ResourceOption) (*BackupPolicy, error) {
	var resource BackupPolicy
	err := ctx.ReadResource("alicloud:clickhouseenterprisedbcluster/backupPolicy:BackupPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPolicy resources.
type backupPolicyState struct {
	// Backup retention time.
	BackupRetentionPeriod *int `pulumi:"backupRetentionPeriod"`
	// The instance ID.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// Backup period.
	PreferredBackupPeriod *string `pulumi:"preferredBackupPeriod"`
	// Backup time.
	PreferredBackupTime *string `pulumi:"preferredBackupTime"`
}

type BackupPolicyState struct {
	// Backup retention time.
	BackupRetentionPeriod pulumi.IntPtrInput
	// The instance ID.
	DbInstanceId pulumi.StringPtrInput
	// Backup period.
	PreferredBackupPeriod pulumi.StringPtrInput
	// Backup time.
	PreferredBackupTime pulumi.StringPtrInput
}

func (BackupPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyState)(nil)).Elem()
}

type backupPolicyArgs struct {
	// Backup retention time.
	BackupRetentionPeriod int `pulumi:"backupRetentionPeriod"`
	// The instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// Backup period.
	PreferredBackupPeriod string `pulumi:"preferredBackupPeriod"`
	// Backup time.
	PreferredBackupTime string `pulumi:"preferredBackupTime"`
}

// The set of arguments for constructing a BackupPolicy resource.
type BackupPolicyArgs struct {
	// Backup retention time.
	BackupRetentionPeriod pulumi.IntInput
	// The instance ID.
	DbInstanceId pulumi.StringInput
	// Backup period.
	PreferredBackupPeriod pulumi.StringInput
	// Backup time.
	PreferredBackupTime pulumi.StringInput
}

func (BackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyArgs)(nil)).Elem()
}

type BackupPolicyInput interface {
	pulumi.Input

	ToBackupPolicyOutput() BackupPolicyOutput
	ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput
}

func (*BackupPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicy)(nil)).Elem()
}

func (i *BackupPolicy) ToBackupPolicyOutput() BackupPolicyOutput {
	return i.ToBackupPolicyOutputWithContext(context.Background())
}

func (i *BackupPolicy) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyOutput)
}

// BackupPolicyArrayInput is an input type that accepts BackupPolicyArray and BackupPolicyArrayOutput values.
// You can construct a concrete instance of `BackupPolicyArrayInput` via:
//
//	BackupPolicyArray{ BackupPolicyArgs{...} }
type BackupPolicyArrayInput interface {
	pulumi.Input

	ToBackupPolicyArrayOutput() BackupPolicyArrayOutput
	ToBackupPolicyArrayOutputWithContext(context.Context) BackupPolicyArrayOutput
}

type BackupPolicyArray []BackupPolicyInput

func (BackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicy)(nil)).Elem()
}

func (i BackupPolicyArray) ToBackupPolicyArrayOutput() BackupPolicyArrayOutput {
	return i.ToBackupPolicyArrayOutputWithContext(context.Background())
}

func (i BackupPolicyArray) ToBackupPolicyArrayOutputWithContext(ctx context.Context) BackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyArrayOutput)
}

// BackupPolicyMapInput is an input type that accepts BackupPolicyMap and BackupPolicyMapOutput values.
// You can construct a concrete instance of `BackupPolicyMapInput` via:
//
//	BackupPolicyMap{ "key": BackupPolicyArgs{...} }
type BackupPolicyMapInput interface {
	pulumi.Input

	ToBackupPolicyMapOutput() BackupPolicyMapOutput
	ToBackupPolicyMapOutputWithContext(context.Context) BackupPolicyMapOutput
}

type BackupPolicyMap map[string]BackupPolicyInput

func (BackupPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicy)(nil)).Elem()
}

func (i BackupPolicyMap) ToBackupPolicyMapOutput() BackupPolicyMapOutput {
	return i.ToBackupPolicyMapOutputWithContext(context.Background())
}

func (i BackupPolicyMap) ToBackupPolicyMapOutputWithContext(ctx context.Context) BackupPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyMapOutput)
}

type BackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyOutput) ToBackupPolicyOutput() BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return o
}

// Backup retention time.
func (o BackupPolicyOutput) BackupRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *BackupPolicy) pulumi.IntOutput { return v.BackupRetentionPeriod }).(pulumi.IntOutput)
}

// The instance ID.
func (o BackupPolicyOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicy) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// Backup period.
func (o BackupPolicyOutput) PreferredBackupPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicy) pulumi.StringOutput { return v.PreferredBackupPeriod }).(pulumi.StringOutput)
}

// Backup time.
func (o BackupPolicyOutput) PreferredBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicy) pulumi.StringOutput { return v.PreferredBackupTime }).(pulumi.StringOutput)
}

type BackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (BackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyArrayOutput) ToBackupPolicyArrayOutput() BackupPolicyArrayOutput {
	return o
}

func (o BackupPolicyArrayOutput) ToBackupPolicyArrayOutputWithContext(ctx context.Context) BackupPolicyArrayOutput {
	return o
}

func (o BackupPolicyArrayOutput) Index(i pulumi.IntInput) BackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPolicy {
		return vs[0].([]*BackupPolicy)[vs[1].(int)]
	}).(BackupPolicyOutput)
}

type BackupPolicyMapOutput struct{ *pulumi.OutputState }

func (BackupPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyMapOutput) ToBackupPolicyMapOutput() BackupPolicyMapOutput {
	return o
}

func (o BackupPolicyMapOutput) ToBackupPolicyMapOutputWithContext(ctx context.Context) BackupPolicyMapOutput {
	return o
}

func (o BackupPolicyMapOutput) MapIndex(k pulumi.StringInput) BackupPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPolicy {
		return vs[0].(map[string]*BackupPolicy)[vs[1].(string)]
	}).(BackupPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyInput)(nil)).Elem(), &BackupPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyArrayInput)(nil)).Elem(), BackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyMapInput)(nil)).Elem(), BackupPolicyMap{})
	pulumi.RegisterOutputType(BackupPolicyOutput{})
	pulumi.RegisterOutputType(BackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(BackupPolicyMapOutput{})
}
