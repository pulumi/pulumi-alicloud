// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clickhouseenterprisedbcluster

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Click House Enterprise Db Cluster Public Endpoint resource.
//
// ClickHouse enterprise instance public network endpoint.
//
// For information about Click House Enterprise Db Cluster Public Endpoint and how to use it, see [What is Enterprise Db Cluster Public Endpoint](https://next.api.alibabacloud.com/document/clickhouse/2023-05-22/CreateEndpoint).
//
// > **NOTE:** Available since v1.247.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/clickhouseenterprisedbcluster"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			regionId := "cn-beijing"
//			if param := cfg.Get("regionId"); param != "" {
//				regionId = param
//			}
//			vswIpRangeI := "172.16.1.0/24"
//			if param := cfg.Get("vswIpRangeI"); param != "" {
//				vswIpRangeI = param
//			}
//			vpcIpRange := "172.16.0.0/12"
//			if param := cfg.Get("vpcIpRange"); param != "" {
//				vpcIpRange = param
//			}
//			zoneIdI := "cn-beijing-i"
//			if param := cfg.Get("zoneIdI"); param != "" {
//				zoneIdI = param
//			}
//			defaultktKLuM, err := vpc.NewNetwork(ctx, "defaultktKLuM", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String(vpcIpRange),
//			})
//			if err != nil {
//				return err
//			}
//			defaultTQWN3k, err := vpc.NewSwitch(ctx, "defaultTQWN3k", &vpc.SwitchArgs{
//				VpcId:     defaultktKLuM.ID(),
//				ZoneId:    pulumi.String(zoneIdI),
//				CidrBlock: pulumi.String(vswIpRangeI),
//			})
//			if err != nil {
//				return err
//			}
//			defaultaqnt22, err := clickhouseenterprisedbcluster.NewClickHouseEnterpriseDbCluster(ctx, "defaultaqnt22", &clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterArgs{
//				ZoneId:    pulumi.String(zoneIdI),
//				VpcId:     defaultktKLuM.ID(),
//				ScaleMin:  pulumi.String("8"),
//				ScaleMax:  pulumi.String("16"),
//				VswitchId: defaultTQWN3k.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = clickhouseenterprisedbcluster.NewPublicEndpoint(ctx, "default", &clickhouseenterprisedbcluster.PublicEndpointArgs{
//				DbInstanceId:           defaultaqnt22.ID(),
//				NetType:                pulumi.String("Public"),
//				ConnectionStringPrefix: defaultaqnt22.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Click House Enterprise Db Cluster Public Endpoint can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:clickhouseenterprisedbcluster/publicEndpoint:PublicEndpoint example <db_instance_id>:<net_type>
// ```
type PublicEndpoint struct {
	pulumi.CustomResourceState

	// The public network connection string prefix of the instance.
	ConnectionStringPrefix pulumi.StringOutput `pulumi:"connectionStringPrefix"`
	// The cluster ID.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// Network type of the connection address. Valid values:
	// - Public: Public network.
	NetType pulumi.StringOutput `pulumi:"netType"`
}

// NewPublicEndpoint registers a new resource with the given unique name, arguments, and options.
func NewPublicEndpoint(ctx *pulumi.Context,
	name string, args *PublicEndpointArgs, opts ...pulumi.ResourceOption) (*PublicEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionStringPrefix == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionStringPrefix'")
	}
	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	if args.NetType == nil {
		return nil, errors.New("invalid value for required argument 'NetType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicEndpoint
	err := ctx.RegisterResource("alicloud:clickhouseenterprisedbcluster/publicEndpoint:PublicEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicEndpoint gets an existing PublicEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicEndpointState, opts ...pulumi.ResourceOption) (*PublicEndpoint, error) {
	var resource PublicEndpoint
	err := ctx.ReadResource("alicloud:clickhouseenterprisedbcluster/publicEndpoint:PublicEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicEndpoint resources.
type publicEndpointState struct {
	// The public network connection string prefix of the instance.
	ConnectionStringPrefix *string `pulumi:"connectionStringPrefix"`
	// The cluster ID.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// Network type of the connection address. Valid values:
	// - Public: Public network.
	NetType *string `pulumi:"netType"`
}

type PublicEndpointState struct {
	// The public network connection string prefix of the instance.
	ConnectionStringPrefix pulumi.StringPtrInput
	// The cluster ID.
	DbInstanceId pulumi.StringPtrInput
	// Network type of the connection address. Valid values:
	// - Public: Public network.
	NetType pulumi.StringPtrInput
}

func (PublicEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicEndpointState)(nil)).Elem()
}

type publicEndpointArgs struct {
	// The public network connection string prefix of the instance.
	ConnectionStringPrefix string `pulumi:"connectionStringPrefix"`
	// The cluster ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// Network type of the connection address. Valid values:
	// - Public: Public network.
	NetType string `pulumi:"netType"`
}

// The set of arguments for constructing a PublicEndpoint resource.
type PublicEndpointArgs struct {
	// The public network connection string prefix of the instance.
	ConnectionStringPrefix pulumi.StringInput
	// The cluster ID.
	DbInstanceId pulumi.StringInput
	// Network type of the connection address. Valid values:
	// - Public: Public network.
	NetType pulumi.StringInput
}

func (PublicEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicEndpointArgs)(nil)).Elem()
}

type PublicEndpointInput interface {
	pulumi.Input

	ToPublicEndpointOutput() PublicEndpointOutput
	ToPublicEndpointOutputWithContext(ctx context.Context) PublicEndpointOutput
}

func (*PublicEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicEndpoint)(nil)).Elem()
}

func (i *PublicEndpoint) ToPublicEndpointOutput() PublicEndpointOutput {
	return i.ToPublicEndpointOutputWithContext(context.Background())
}

func (i *PublicEndpoint) ToPublicEndpointOutputWithContext(ctx context.Context) PublicEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicEndpointOutput)
}

// PublicEndpointArrayInput is an input type that accepts PublicEndpointArray and PublicEndpointArrayOutput values.
// You can construct a concrete instance of `PublicEndpointArrayInput` via:
//
//	PublicEndpointArray{ PublicEndpointArgs{...} }
type PublicEndpointArrayInput interface {
	pulumi.Input

	ToPublicEndpointArrayOutput() PublicEndpointArrayOutput
	ToPublicEndpointArrayOutputWithContext(context.Context) PublicEndpointArrayOutput
}

type PublicEndpointArray []PublicEndpointInput

func (PublicEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicEndpoint)(nil)).Elem()
}

func (i PublicEndpointArray) ToPublicEndpointArrayOutput() PublicEndpointArrayOutput {
	return i.ToPublicEndpointArrayOutputWithContext(context.Background())
}

func (i PublicEndpointArray) ToPublicEndpointArrayOutputWithContext(ctx context.Context) PublicEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicEndpointArrayOutput)
}

// PublicEndpointMapInput is an input type that accepts PublicEndpointMap and PublicEndpointMapOutput values.
// You can construct a concrete instance of `PublicEndpointMapInput` via:
//
//	PublicEndpointMap{ "key": PublicEndpointArgs{...} }
type PublicEndpointMapInput interface {
	pulumi.Input

	ToPublicEndpointMapOutput() PublicEndpointMapOutput
	ToPublicEndpointMapOutputWithContext(context.Context) PublicEndpointMapOutput
}

type PublicEndpointMap map[string]PublicEndpointInput

func (PublicEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicEndpoint)(nil)).Elem()
}

func (i PublicEndpointMap) ToPublicEndpointMapOutput() PublicEndpointMapOutput {
	return i.ToPublicEndpointMapOutputWithContext(context.Background())
}

func (i PublicEndpointMap) ToPublicEndpointMapOutputWithContext(ctx context.Context) PublicEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicEndpointMapOutput)
}

type PublicEndpointOutput struct{ *pulumi.OutputState }

func (PublicEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicEndpoint)(nil)).Elem()
}

func (o PublicEndpointOutput) ToPublicEndpointOutput() PublicEndpointOutput {
	return o
}

func (o PublicEndpointOutput) ToPublicEndpointOutputWithContext(ctx context.Context) PublicEndpointOutput {
	return o
}

// The public network connection string prefix of the instance.
func (o PublicEndpointOutput) ConnectionStringPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicEndpoint) pulumi.StringOutput { return v.ConnectionStringPrefix }).(pulumi.StringOutput)
}

// The cluster ID.
func (o PublicEndpointOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicEndpoint) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// Network type of the connection address. Valid values:
// - Public: Public network.
func (o PublicEndpointOutput) NetType() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicEndpoint) pulumi.StringOutput { return v.NetType }).(pulumi.StringOutput)
}

type PublicEndpointArrayOutput struct{ *pulumi.OutputState }

func (PublicEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicEndpoint)(nil)).Elem()
}

func (o PublicEndpointArrayOutput) ToPublicEndpointArrayOutput() PublicEndpointArrayOutput {
	return o
}

func (o PublicEndpointArrayOutput) ToPublicEndpointArrayOutputWithContext(ctx context.Context) PublicEndpointArrayOutput {
	return o
}

func (o PublicEndpointArrayOutput) Index(i pulumi.IntInput) PublicEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicEndpoint {
		return vs[0].([]*PublicEndpoint)[vs[1].(int)]
	}).(PublicEndpointOutput)
}

type PublicEndpointMapOutput struct{ *pulumi.OutputState }

func (PublicEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicEndpoint)(nil)).Elem()
}

func (o PublicEndpointMapOutput) ToPublicEndpointMapOutput() PublicEndpointMapOutput {
	return o
}

func (o PublicEndpointMapOutput) ToPublicEndpointMapOutputWithContext(ctx context.Context) PublicEndpointMapOutput {
	return o
}

func (o PublicEndpointMapOutput) MapIndex(k pulumi.StringInput) PublicEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicEndpoint {
		return vs[0].(map[string]*PublicEndpoint)[vs[1].(string)]
	}).(PublicEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicEndpointInput)(nil)).Elem(), &PublicEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicEndpointArrayInput)(nil)).Elem(), PublicEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicEndpointMapInput)(nil)).Elem(), PublicEndpointMap{})
	pulumi.RegisterOutputType(PublicEndpointOutput{})
	pulumi.RegisterOutputType(PublicEndpointArrayOutput{})
	pulumi.RegisterOutputType(PublicEndpointMapOutput{})
}
