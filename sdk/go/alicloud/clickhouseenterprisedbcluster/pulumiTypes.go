// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clickhouseenterprisedbcluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountDmlAuthSetting struct {
	// The list of databases that require authorization. If there are more than one, separate them with commas (,).
	AllowDatabases []string `pulumi:"allowDatabases"`
	// List of dictionaries that require authorization. If there are more than one, separate them with commas (,).
	AllowDictionaries []string `pulumi:"allowDictionaries"`
	// Whether to grant the DDL permission to the database account. Value description:
	DdlAuthority bool `pulumi:"ddlAuthority"`
	// Whether to grant the DML permission to the database account. The values are as follows:
	DmlAuthority int `pulumi:"dmlAuthority"`
}

// AccountDmlAuthSettingInput is an input type that accepts AccountDmlAuthSettingArgs and AccountDmlAuthSettingOutput values.
// You can construct a concrete instance of `AccountDmlAuthSettingInput` via:
//
//	AccountDmlAuthSettingArgs{...}
type AccountDmlAuthSettingInput interface {
	pulumi.Input

	ToAccountDmlAuthSettingOutput() AccountDmlAuthSettingOutput
	ToAccountDmlAuthSettingOutputWithContext(context.Context) AccountDmlAuthSettingOutput
}

type AccountDmlAuthSettingArgs struct {
	// The list of databases that require authorization. If there are more than one, separate them with commas (,).
	AllowDatabases pulumi.StringArrayInput `pulumi:"allowDatabases"`
	// List of dictionaries that require authorization. If there are more than one, separate them with commas (,).
	AllowDictionaries pulumi.StringArrayInput `pulumi:"allowDictionaries"`
	// Whether to grant the DDL permission to the database account. Value description:
	DdlAuthority pulumi.BoolInput `pulumi:"ddlAuthority"`
	// Whether to grant the DML permission to the database account. The values are as follows:
	DmlAuthority pulumi.IntInput `pulumi:"dmlAuthority"`
}

func (AccountDmlAuthSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountDmlAuthSetting)(nil)).Elem()
}

func (i AccountDmlAuthSettingArgs) ToAccountDmlAuthSettingOutput() AccountDmlAuthSettingOutput {
	return i.ToAccountDmlAuthSettingOutputWithContext(context.Background())
}

func (i AccountDmlAuthSettingArgs) ToAccountDmlAuthSettingOutputWithContext(ctx context.Context) AccountDmlAuthSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountDmlAuthSettingOutput)
}

func (i AccountDmlAuthSettingArgs) ToAccountDmlAuthSettingPtrOutput() AccountDmlAuthSettingPtrOutput {
	return i.ToAccountDmlAuthSettingPtrOutputWithContext(context.Background())
}

func (i AccountDmlAuthSettingArgs) ToAccountDmlAuthSettingPtrOutputWithContext(ctx context.Context) AccountDmlAuthSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountDmlAuthSettingOutput).ToAccountDmlAuthSettingPtrOutputWithContext(ctx)
}

// AccountDmlAuthSettingPtrInput is an input type that accepts AccountDmlAuthSettingArgs, AccountDmlAuthSettingPtr and AccountDmlAuthSettingPtrOutput values.
// You can construct a concrete instance of `AccountDmlAuthSettingPtrInput` via:
//
//	        AccountDmlAuthSettingArgs{...}
//
//	or:
//
//	        nil
type AccountDmlAuthSettingPtrInput interface {
	pulumi.Input

	ToAccountDmlAuthSettingPtrOutput() AccountDmlAuthSettingPtrOutput
	ToAccountDmlAuthSettingPtrOutputWithContext(context.Context) AccountDmlAuthSettingPtrOutput
}

type accountDmlAuthSettingPtrType AccountDmlAuthSettingArgs

func AccountDmlAuthSettingPtr(v *AccountDmlAuthSettingArgs) AccountDmlAuthSettingPtrInput {
	return (*accountDmlAuthSettingPtrType)(v)
}

func (*accountDmlAuthSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountDmlAuthSetting)(nil)).Elem()
}

func (i *accountDmlAuthSettingPtrType) ToAccountDmlAuthSettingPtrOutput() AccountDmlAuthSettingPtrOutput {
	return i.ToAccountDmlAuthSettingPtrOutputWithContext(context.Background())
}

func (i *accountDmlAuthSettingPtrType) ToAccountDmlAuthSettingPtrOutputWithContext(ctx context.Context) AccountDmlAuthSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountDmlAuthSettingPtrOutput)
}

type AccountDmlAuthSettingOutput struct{ *pulumi.OutputState }

func (AccountDmlAuthSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountDmlAuthSetting)(nil)).Elem()
}

func (o AccountDmlAuthSettingOutput) ToAccountDmlAuthSettingOutput() AccountDmlAuthSettingOutput {
	return o
}

func (o AccountDmlAuthSettingOutput) ToAccountDmlAuthSettingOutputWithContext(ctx context.Context) AccountDmlAuthSettingOutput {
	return o
}

func (o AccountDmlAuthSettingOutput) ToAccountDmlAuthSettingPtrOutput() AccountDmlAuthSettingPtrOutput {
	return o.ToAccountDmlAuthSettingPtrOutputWithContext(context.Background())
}

func (o AccountDmlAuthSettingOutput) ToAccountDmlAuthSettingPtrOutputWithContext(ctx context.Context) AccountDmlAuthSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountDmlAuthSetting) *AccountDmlAuthSetting {
		return &v
	}).(AccountDmlAuthSettingPtrOutput)
}

// The list of databases that require authorization. If there are more than one, separate them with commas (,).
func (o AccountDmlAuthSettingOutput) AllowDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountDmlAuthSetting) []string { return v.AllowDatabases }).(pulumi.StringArrayOutput)
}

// List of dictionaries that require authorization. If there are more than one, separate them with commas (,).
func (o AccountDmlAuthSettingOutput) AllowDictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountDmlAuthSetting) []string { return v.AllowDictionaries }).(pulumi.StringArrayOutput)
}

// Whether to grant the DDL permission to the database account. Value description:
func (o AccountDmlAuthSettingOutput) DdlAuthority() pulumi.BoolOutput {
	return o.ApplyT(func(v AccountDmlAuthSetting) bool { return v.DdlAuthority }).(pulumi.BoolOutput)
}

// Whether to grant the DML permission to the database account. The values are as follows:
func (o AccountDmlAuthSettingOutput) DmlAuthority() pulumi.IntOutput {
	return o.ApplyT(func(v AccountDmlAuthSetting) int { return v.DmlAuthority }).(pulumi.IntOutput)
}

type AccountDmlAuthSettingPtrOutput struct{ *pulumi.OutputState }

func (AccountDmlAuthSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountDmlAuthSetting)(nil)).Elem()
}

func (o AccountDmlAuthSettingPtrOutput) ToAccountDmlAuthSettingPtrOutput() AccountDmlAuthSettingPtrOutput {
	return o
}

func (o AccountDmlAuthSettingPtrOutput) ToAccountDmlAuthSettingPtrOutputWithContext(ctx context.Context) AccountDmlAuthSettingPtrOutput {
	return o
}

func (o AccountDmlAuthSettingPtrOutput) Elem() AccountDmlAuthSettingOutput {
	return o.ApplyT(func(v *AccountDmlAuthSetting) AccountDmlAuthSetting {
		if v != nil {
			return *v
		}
		var ret AccountDmlAuthSetting
		return ret
	}).(AccountDmlAuthSettingOutput)
}

// The list of databases that require authorization. If there are more than one, separate them with commas (,).
func (o AccountDmlAuthSettingPtrOutput) AllowDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountDmlAuthSetting) []string {
		if v == nil {
			return nil
		}
		return v.AllowDatabases
	}).(pulumi.StringArrayOutput)
}

// List of dictionaries that require authorization. If there are more than one, separate them with commas (,).
func (o AccountDmlAuthSettingPtrOutput) AllowDictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountDmlAuthSetting) []string {
		if v == nil {
			return nil
		}
		return v.AllowDictionaries
	}).(pulumi.StringArrayOutput)
}

// Whether to grant the DDL permission to the database account. Value description:
func (o AccountDmlAuthSettingPtrOutput) DdlAuthority() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountDmlAuthSetting) *bool {
		if v == nil {
			return nil
		}
		return &v.DdlAuthority
	}).(pulumi.BoolPtrOutput)
}

// Whether to grant the DML permission to the database account. The values are as follows:
func (o AccountDmlAuthSettingPtrOutput) DmlAuthority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountDmlAuthSetting) *int {
		if v == nil {
			return nil
		}
		return &v.DmlAuthority
	}).(pulumi.IntPtrOutput)
}

type ClickHouseEnterpriseDbClusterMultiZone struct {
	// The vSwtichID list.
	VswitchIds []string `pulumi:"vswitchIds"`
	// The zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// ClickHouseEnterpriseDbClusterMultiZoneInput is an input type that accepts ClickHouseEnterpriseDbClusterMultiZoneArgs and ClickHouseEnterpriseDbClusterMultiZoneOutput values.
// You can construct a concrete instance of `ClickHouseEnterpriseDbClusterMultiZoneInput` via:
//
//	ClickHouseEnterpriseDbClusterMultiZoneArgs{...}
type ClickHouseEnterpriseDbClusterMultiZoneInput interface {
	pulumi.Input

	ToClickHouseEnterpriseDbClusterMultiZoneOutput() ClickHouseEnterpriseDbClusterMultiZoneOutput
	ToClickHouseEnterpriseDbClusterMultiZoneOutputWithContext(context.Context) ClickHouseEnterpriseDbClusterMultiZoneOutput
}

type ClickHouseEnterpriseDbClusterMultiZoneArgs struct {
	// The vSwtichID list.
	VswitchIds pulumi.StringArrayInput `pulumi:"vswitchIds"`
	// The zone ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (ClickHouseEnterpriseDbClusterMultiZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseEnterpriseDbClusterMultiZone)(nil)).Elem()
}

func (i ClickHouseEnterpriseDbClusterMultiZoneArgs) ToClickHouseEnterpriseDbClusterMultiZoneOutput() ClickHouseEnterpriseDbClusterMultiZoneOutput {
	return i.ToClickHouseEnterpriseDbClusterMultiZoneOutputWithContext(context.Background())
}

func (i ClickHouseEnterpriseDbClusterMultiZoneArgs) ToClickHouseEnterpriseDbClusterMultiZoneOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterMultiZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseEnterpriseDbClusterMultiZoneOutput)
}

// ClickHouseEnterpriseDbClusterMultiZoneArrayInput is an input type that accepts ClickHouseEnterpriseDbClusterMultiZoneArray and ClickHouseEnterpriseDbClusterMultiZoneArrayOutput values.
// You can construct a concrete instance of `ClickHouseEnterpriseDbClusterMultiZoneArrayInput` via:
//
//	ClickHouseEnterpriseDbClusterMultiZoneArray{ ClickHouseEnterpriseDbClusterMultiZoneArgs{...} }
type ClickHouseEnterpriseDbClusterMultiZoneArrayInput interface {
	pulumi.Input

	ToClickHouseEnterpriseDbClusterMultiZoneArrayOutput() ClickHouseEnterpriseDbClusterMultiZoneArrayOutput
	ToClickHouseEnterpriseDbClusterMultiZoneArrayOutputWithContext(context.Context) ClickHouseEnterpriseDbClusterMultiZoneArrayOutput
}

type ClickHouseEnterpriseDbClusterMultiZoneArray []ClickHouseEnterpriseDbClusterMultiZoneInput

func (ClickHouseEnterpriseDbClusterMultiZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseEnterpriseDbClusterMultiZone)(nil)).Elem()
}

func (i ClickHouseEnterpriseDbClusterMultiZoneArray) ToClickHouseEnterpriseDbClusterMultiZoneArrayOutput() ClickHouseEnterpriseDbClusterMultiZoneArrayOutput {
	return i.ToClickHouseEnterpriseDbClusterMultiZoneArrayOutputWithContext(context.Background())
}

func (i ClickHouseEnterpriseDbClusterMultiZoneArray) ToClickHouseEnterpriseDbClusterMultiZoneArrayOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterMultiZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseEnterpriseDbClusterMultiZoneArrayOutput)
}

type ClickHouseEnterpriseDbClusterMultiZoneOutput struct{ *pulumi.OutputState }

func (ClickHouseEnterpriseDbClusterMultiZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseEnterpriseDbClusterMultiZone)(nil)).Elem()
}

func (o ClickHouseEnterpriseDbClusterMultiZoneOutput) ToClickHouseEnterpriseDbClusterMultiZoneOutput() ClickHouseEnterpriseDbClusterMultiZoneOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterMultiZoneOutput) ToClickHouseEnterpriseDbClusterMultiZoneOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterMultiZoneOutput {
	return o
}

// The vSwtichID list.
func (o ClickHouseEnterpriseDbClusterMultiZoneOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseEnterpriseDbClusterMultiZone) []string { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

// The zone ID.
func (o ClickHouseEnterpriseDbClusterMultiZoneOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseEnterpriseDbClusterMultiZone) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ClickHouseEnterpriseDbClusterMultiZoneArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseEnterpriseDbClusterMultiZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseEnterpriseDbClusterMultiZone)(nil)).Elem()
}

func (o ClickHouseEnterpriseDbClusterMultiZoneArrayOutput) ToClickHouseEnterpriseDbClusterMultiZoneArrayOutput() ClickHouseEnterpriseDbClusterMultiZoneArrayOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterMultiZoneArrayOutput) ToClickHouseEnterpriseDbClusterMultiZoneArrayOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterMultiZoneArrayOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterMultiZoneArrayOutput) Index(i pulumi.IntInput) ClickHouseEnterpriseDbClusterMultiZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseEnterpriseDbClusterMultiZone {
		return vs[0].([]ClickHouseEnterpriseDbClusterMultiZone)[vs[1].(int)]
	}).(ClickHouseEnterpriseDbClusterMultiZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountDmlAuthSettingInput)(nil)).Elem(), AccountDmlAuthSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountDmlAuthSettingPtrInput)(nil)).Elem(), AccountDmlAuthSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseEnterpriseDbClusterMultiZoneInput)(nil)).Elem(), ClickHouseEnterpriseDbClusterMultiZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseEnterpriseDbClusterMultiZoneArrayInput)(nil)).Elem(), ClickHouseEnterpriseDbClusterMultiZoneArray{})
	pulumi.RegisterOutputType(AccountDmlAuthSettingOutput{})
	pulumi.RegisterOutputType(AccountDmlAuthSettingPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseEnterpriseDbClusterMultiZoneOutput{})
	pulumi.RegisterOutputType(ClickHouseEnterpriseDbClusterMultiZoneArrayOutput{})
}
