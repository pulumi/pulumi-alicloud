// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clickhouseenterprisedbcluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Click House Enterprise D B Cluster resource.
//
// Enterprise Edition Cluster Resources.
//
// For information about Click House Enterprise D B Cluster and how to use it, see [What is Enterprise D B Cluster](https://next.api.alibabacloud.com/document/clickhouse/2023-05-22/CreateDBInstance).
//
// > **NOTE:** Available since v1.247.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/clickhouseenterprisedbcluster"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			vswIpRangeI := "172.16.1.0/24"
//			if param := cfg.Get("vswIpRangeI"); param != "" {
//				vswIpRangeI = param
//			}
//			regionId := "cn-beijing"
//			if param := cfg.Get("regionId"); param != "" {
//				regionId = param
//			}
//			vpcIpRange := "172.16.0.0/12"
//			if param := cfg.Get("vpcIpRange"); param != "" {
//				vpcIpRange = param
//			}
//			vswIpRangeK := "172.16.3.0/24"
//			if param := cfg.Get("vswIpRangeK"); param != "" {
//				vswIpRangeK = param
//			}
//			vswIpRangeL := "172.16.2.0/24"
//			if param := cfg.Get("vswIpRangeL"); param != "" {
//				vswIpRangeL = param
//			}
//			zoneIdI := "cn-beijing-i"
//			if param := cfg.Get("zoneIdI"); param != "" {
//				zoneIdI = param
//			}
//			zoneIdL := "cn-beijing-l"
//			if param := cfg.Get("zoneIdL"); param != "" {
//				zoneIdL = param
//			}
//			zoneIdK := "cn-beijing-k"
//			if param := cfg.Get("zoneIdK"); param != "" {
//				zoneIdK = param
//			}
//			defaultktKLuM, err := vpc.NewNetwork(ctx, "defaultktKLuM", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String(vpcIpRange),
//			})
//			if err != nil {
//				return err
//			}
//			defaultTQWN3k, err := vpc.NewSwitch(ctx, "defaultTQWN3k", &vpc.SwitchArgs{
//				VpcId:     defaultktKLuM.ID(),
//				ZoneId:    pulumi.String(zoneIdI),
//				CidrBlock: pulumi.String(vswIpRangeI),
//			})
//			if err != nil {
//				return err
//			}
//			defaultylyLu8, err := vpc.NewSwitch(ctx, "defaultylyLu8", &vpc.SwitchArgs{
//				VpcId:     defaultktKLuM.ID(),
//				ZoneId:    pulumi.String(zoneIdL),
//				CidrBlock: pulumi.String(vswIpRangeL),
//			})
//			if err != nil {
//				return err
//			}
//			defaultRNbPh8, err := vpc.NewSwitch(ctx, "defaultRNbPh8", &vpc.SwitchArgs{
//				VpcId:     defaultktKLuM.ID(),
//				ZoneId:    pulumi.String(zoneIdK),
//				CidrBlock: pulumi.String(vswIpRangeK),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = clickhouseenterprisedbcluster.NewClickHouseEnterpriseDbCluster(ctx, "default", &clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterArgs{
//				ZoneId:    pulumi.String(zoneIdI),
//				VpcId:     defaultktKLuM.ID(),
//				ScaleMin:  pulumi.String("8"),
//				ScaleMax:  pulumi.String("16"),
//				VswitchId: defaultTQWN3k.ID(),
//				MultiZones: clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZoneArray{
//					&clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZoneArgs{
//						VswitchIds: pulumi.StringArray{
//							defaultTQWN3k.ID(),
//						},
//						ZoneId: pulumi.String(zoneIdI),
//					},
//					&clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZoneArgs{
//						VswitchIds: pulumi.StringArray{
//							defaultylyLu8.ID(),
//						},
//						ZoneId: pulumi.String(zoneIdL),
//					},
//					&clickhouseenterprisedbcluster.ClickHouseEnterpriseDbClusterMultiZoneArgs{
//						VswitchIds: pulumi.StringArray{
//							defaultRNbPh8.ID(),
//						},
//						ZoneId: pulumi.String(zoneIdK),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Click House Enterprise D B Cluster can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster:ClickHouseEnterpriseDbCluster example <id>
// ```
type ClickHouseEnterpriseDbCluster struct {
	pulumi.CustomResourceState

	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The list of multi-zone information. See `multiZones` below.
	MultiZones ClickHouseEnterpriseDbClusterMultiZoneArrayOutput `pulumi:"multiZones"`
	// The region ID of the resource
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The maximum value of serverless auto scaling.
	ScaleMax pulumi.StringPtrOutput `pulumi:"scaleMax"`
	// The minimum value of serverless auto scaling.
	ScaleMin pulumi.StringPtrOutput `pulumi:"scaleMin"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
	// The VPC ID.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
	// The vSwitch ID.
	VswitchId pulumi.StringPtrOutput `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId pulumi.StringPtrOutput `pulumi:"zoneId"`
}

// NewClickHouseEnterpriseDbCluster registers a new resource with the given unique name, arguments, and options.
func NewClickHouseEnterpriseDbCluster(ctx *pulumi.Context,
	name string, args *ClickHouseEnterpriseDbClusterArgs, opts ...pulumi.ResourceOption) (*ClickHouseEnterpriseDbCluster, error) {
	if args == nil {
		args = &ClickHouseEnterpriseDbClusterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClickHouseEnterpriseDbCluster
	err := ctx.RegisterResource("alicloud:clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster:ClickHouseEnterpriseDbCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickHouseEnterpriseDbCluster gets an existing ClickHouseEnterpriseDbCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickHouseEnterpriseDbCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickHouseEnterpriseDbClusterState, opts ...pulumi.ResourceOption) (*ClickHouseEnterpriseDbCluster, error) {
	var resource ClickHouseEnterpriseDbCluster
	err := ctx.ReadResource("alicloud:clickhouseenterprisedbcluster/clickHouseEnterpriseDbCluster:ClickHouseEnterpriseDbCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickHouseEnterpriseDbCluster resources.
type clickHouseEnterpriseDbClusterState struct {
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The list of multi-zone information. See `multiZones` below.
	MultiZones []ClickHouseEnterpriseDbClusterMultiZone `pulumi:"multiZones"`
	// The region ID of the resource
	RegionId *string `pulumi:"regionId"`
	// The maximum value of serverless auto scaling.
	ScaleMax *string `pulumi:"scaleMax"`
	// The minimum value of serverless auto scaling.
	ScaleMin *string `pulumi:"scaleMin"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// The VPC ID.
	VpcId *string `pulumi:"vpcId"`
	// The vSwitch ID.
	VswitchId *string `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

type ClickHouseEnterpriseDbClusterState struct {
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The list of multi-zone information. See `multiZones` below.
	MultiZones ClickHouseEnterpriseDbClusterMultiZoneArrayInput
	// The region ID of the resource
	RegionId pulumi.StringPtrInput
	// The maximum value of serverless auto scaling.
	ScaleMax pulumi.StringPtrInput
	// The minimum value of serverless auto scaling.
	ScaleMin pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
	// The VPC ID.
	VpcId pulumi.StringPtrInput
	// The vSwitch ID.
	VswitchId pulumi.StringPtrInput
	// The zone ID.
	ZoneId pulumi.StringPtrInput
}

func (ClickHouseEnterpriseDbClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseEnterpriseDbClusterState)(nil)).Elem()
}

type clickHouseEnterpriseDbClusterArgs struct {
	// The list of multi-zone information. See `multiZones` below.
	MultiZones []ClickHouseEnterpriseDbClusterMultiZone `pulumi:"multiZones"`
	// The maximum value of serverless auto scaling.
	ScaleMax *string `pulumi:"scaleMax"`
	// The minimum value of serverless auto scaling.
	ScaleMin *string `pulumi:"scaleMin"`
	// The VPC ID.
	VpcId *string `pulumi:"vpcId"`
	// The vSwitch ID.
	VswitchId *string `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ClickHouseEnterpriseDbCluster resource.
type ClickHouseEnterpriseDbClusterArgs struct {
	// The list of multi-zone information. See `multiZones` below.
	MultiZones ClickHouseEnterpriseDbClusterMultiZoneArrayInput
	// The maximum value of serverless auto scaling.
	ScaleMax pulumi.StringPtrInput
	// The minimum value of serverless auto scaling.
	ScaleMin pulumi.StringPtrInput
	// The VPC ID.
	VpcId pulumi.StringPtrInput
	// The vSwitch ID.
	VswitchId pulumi.StringPtrInput
	// The zone ID.
	ZoneId pulumi.StringPtrInput
}

func (ClickHouseEnterpriseDbClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseEnterpriseDbClusterArgs)(nil)).Elem()
}

type ClickHouseEnterpriseDbClusterInput interface {
	pulumi.Input

	ToClickHouseEnterpriseDbClusterOutput() ClickHouseEnterpriseDbClusterOutput
	ToClickHouseEnterpriseDbClusterOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterOutput
}

func (*ClickHouseEnterpriseDbCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseEnterpriseDbCluster)(nil)).Elem()
}

func (i *ClickHouseEnterpriseDbCluster) ToClickHouseEnterpriseDbClusterOutput() ClickHouseEnterpriseDbClusterOutput {
	return i.ToClickHouseEnterpriseDbClusterOutputWithContext(context.Background())
}

func (i *ClickHouseEnterpriseDbCluster) ToClickHouseEnterpriseDbClusterOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseEnterpriseDbClusterOutput)
}

// ClickHouseEnterpriseDbClusterArrayInput is an input type that accepts ClickHouseEnterpriseDbClusterArray and ClickHouseEnterpriseDbClusterArrayOutput values.
// You can construct a concrete instance of `ClickHouseEnterpriseDbClusterArrayInput` via:
//
//	ClickHouseEnterpriseDbClusterArray{ ClickHouseEnterpriseDbClusterArgs{...} }
type ClickHouseEnterpriseDbClusterArrayInput interface {
	pulumi.Input

	ToClickHouseEnterpriseDbClusterArrayOutput() ClickHouseEnterpriseDbClusterArrayOutput
	ToClickHouseEnterpriseDbClusterArrayOutputWithContext(context.Context) ClickHouseEnterpriseDbClusterArrayOutput
}

type ClickHouseEnterpriseDbClusterArray []ClickHouseEnterpriseDbClusterInput

func (ClickHouseEnterpriseDbClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseEnterpriseDbCluster)(nil)).Elem()
}

func (i ClickHouseEnterpriseDbClusterArray) ToClickHouseEnterpriseDbClusterArrayOutput() ClickHouseEnterpriseDbClusterArrayOutput {
	return i.ToClickHouseEnterpriseDbClusterArrayOutputWithContext(context.Background())
}

func (i ClickHouseEnterpriseDbClusterArray) ToClickHouseEnterpriseDbClusterArrayOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseEnterpriseDbClusterArrayOutput)
}

// ClickHouseEnterpriseDbClusterMapInput is an input type that accepts ClickHouseEnterpriseDbClusterMap and ClickHouseEnterpriseDbClusterMapOutput values.
// You can construct a concrete instance of `ClickHouseEnterpriseDbClusterMapInput` via:
//
//	ClickHouseEnterpriseDbClusterMap{ "key": ClickHouseEnterpriseDbClusterArgs{...} }
type ClickHouseEnterpriseDbClusterMapInput interface {
	pulumi.Input

	ToClickHouseEnterpriseDbClusterMapOutput() ClickHouseEnterpriseDbClusterMapOutput
	ToClickHouseEnterpriseDbClusterMapOutputWithContext(context.Context) ClickHouseEnterpriseDbClusterMapOutput
}

type ClickHouseEnterpriseDbClusterMap map[string]ClickHouseEnterpriseDbClusterInput

func (ClickHouseEnterpriseDbClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseEnterpriseDbCluster)(nil)).Elem()
}

func (i ClickHouseEnterpriseDbClusterMap) ToClickHouseEnterpriseDbClusterMapOutput() ClickHouseEnterpriseDbClusterMapOutput {
	return i.ToClickHouseEnterpriseDbClusterMapOutputWithContext(context.Background())
}

func (i ClickHouseEnterpriseDbClusterMap) ToClickHouseEnterpriseDbClusterMapOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseEnterpriseDbClusterMapOutput)
}

type ClickHouseEnterpriseDbClusterOutput struct{ *pulumi.OutputState }

func (ClickHouseEnterpriseDbClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseEnterpriseDbCluster)(nil)).Elem()
}

func (o ClickHouseEnterpriseDbClusterOutput) ToClickHouseEnterpriseDbClusterOutput() ClickHouseEnterpriseDbClusterOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterOutput) ToClickHouseEnterpriseDbClusterOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterOutput {
	return o
}

// The creation time of the resource
func (o ClickHouseEnterpriseDbClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The list of multi-zone information. See `multiZones` below.
func (o ClickHouseEnterpriseDbClusterOutput) MultiZones() ClickHouseEnterpriseDbClusterMultiZoneArrayOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) ClickHouseEnterpriseDbClusterMultiZoneArrayOutput {
		return v.MultiZones
	}).(ClickHouseEnterpriseDbClusterMultiZoneArrayOutput)
}

// The region ID of the resource
func (o ClickHouseEnterpriseDbClusterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The maximum value of serverless auto scaling.
func (o ClickHouseEnterpriseDbClusterOutput) ScaleMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringPtrOutput { return v.ScaleMax }).(pulumi.StringPtrOutput)
}

// The minimum value of serverless auto scaling.
func (o ClickHouseEnterpriseDbClusterOutput) ScaleMin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringPtrOutput { return v.ScaleMin }).(pulumi.StringPtrOutput)
}

// The status of the resource
func (o ClickHouseEnterpriseDbClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The VPC ID.
func (o ClickHouseEnterpriseDbClusterOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

// The vSwitch ID.
func (o ClickHouseEnterpriseDbClusterOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringPtrOutput { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// The zone ID.
func (o ClickHouseEnterpriseDbClusterOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseEnterpriseDbCluster) pulumi.StringPtrOutput { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type ClickHouseEnterpriseDbClusterArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseEnterpriseDbClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseEnterpriseDbCluster)(nil)).Elem()
}

func (o ClickHouseEnterpriseDbClusterArrayOutput) ToClickHouseEnterpriseDbClusterArrayOutput() ClickHouseEnterpriseDbClusterArrayOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterArrayOutput) ToClickHouseEnterpriseDbClusterArrayOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterArrayOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterArrayOutput) Index(i pulumi.IntInput) ClickHouseEnterpriseDbClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClickHouseEnterpriseDbCluster {
		return vs[0].([]*ClickHouseEnterpriseDbCluster)[vs[1].(int)]
	}).(ClickHouseEnterpriseDbClusterOutput)
}

type ClickHouseEnterpriseDbClusterMapOutput struct{ *pulumi.OutputState }

func (ClickHouseEnterpriseDbClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseEnterpriseDbCluster)(nil)).Elem()
}

func (o ClickHouseEnterpriseDbClusterMapOutput) ToClickHouseEnterpriseDbClusterMapOutput() ClickHouseEnterpriseDbClusterMapOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterMapOutput) ToClickHouseEnterpriseDbClusterMapOutputWithContext(ctx context.Context) ClickHouseEnterpriseDbClusterMapOutput {
	return o
}

func (o ClickHouseEnterpriseDbClusterMapOutput) MapIndex(k pulumi.StringInput) ClickHouseEnterpriseDbClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClickHouseEnterpriseDbCluster {
		return vs[0].(map[string]*ClickHouseEnterpriseDbCluster)[vs[1].(string)]
	}).(ClickHouseEnterpriseDbClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseEnterpriseDbClusterInput)(nil)).Elem(), &ClickHouseEnterpriseDbCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseEnterpriseDbClusterArrayInput)(nil)).Elem(), ClickHouseEnterpriseDbClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseEnterpriseDbClusterMapInput)(nil)).Elem(), ClickHouseEnterpriseDbClusterMap{})
	pulumi.RegisterOutputType(ClickHouseEnterpriseDbClusterOutput{})
	pulumi.RegisterOutputType(ClickHouseEnterpriseDbClusterArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseEnterpriseDbClusterMapOutput{})
}
