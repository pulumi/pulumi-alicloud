// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package polardb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an PolarDB zonal cluster resource. An PolarDB zonal cluster is an isolated database
// environment in the cloud. An PolarDB zonal cluster can contain multiple user-created
// databases.
//
// > **NOTE:** Available since v1.66.0.
//
// ## Example Usage
//
// # Create a PolarDB MySQL zonal cluster
//
// ## Import
//
// PolarDB zonal cluster can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:polardb/zonalDbCluster:ZonalDbCluster example pc-abc12345678
// ```
type ZonalDbCluster struct {
	pulumi.CustomResourceState

	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod pulumi.IntPtrOutput `pulumi:"autoRenewPeriod"`
	// PolarDB zonal cluster latest version.
	ClusterLatestVersion pulumi.StringOutput `pulumi:"clusterLatestVersion"`
	// current DB Cluster revision Version.
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// PolarDB zonal cluster creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The edition of the PolarDB service. Valid values are `SENormal`.
	CreationCategory pulumi.StringOutput `pulumi:"creationCategory"`
	// Cache of the relationship between node key and node ID for PolarDB zonal Cluster
	DbClusterNodesAttributes pulumi.StringMapOutput `pulumi:"dbClusterNodesAttributes"`
	// Map of node needs to be created after DB cluster was launched.
	DbClusterNodesConfigs pulumi.StringMapOutput `pulumi:"dbClusterNodesConfigs"`
	// Cache of node ID for PolarDB zonal Cluster
	DbClusterNodesIds pulumi.StringMapOutput `pulumi:"dbClusterNodesIds"`
	// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
	DbMinorVersion pulumi.StringPtrOutput `pulumi:"dbMinorVersion"`
	// The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
	DbNodeClass pulumi.StringOutput `pulumi:"dbNodeClass"`
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType pulumi.StringPtrOutput `pulumi:"dbType"`
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
	DbVersion pulumi.StringPtrOutput `pulumi:"dbVersion"`
	// The description of cluster.
	Description pulumi.StringOutput `pulumi:"description"`
	// The Zone to launch the DB cluster.
	EnsRegionId pulumi.StringOutput `pulumi:"ensRegionId"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType pulumi.StringPtrOutput `pulumi:"payType"`
	// PolarDB zonal cluster region
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus pulumi.StringPtrOutput `pulumi:"renewalStatus"`
	// The billing method of the storage. Valid values `Prepaid`.
	StoragePayType pulumi.StringOutput `pulumi:"storagePayType"`
	// Storage space charged by space (monthly package). Unit: GB.
	// > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
	StorageSpace pulumi.IntPtrOutput `pulumi:"storageSpace"`
	// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
	StorageType pulumi.StringPtrOutput `pulumi:"storageType"`
	// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
	TargetMinorVersion pulumi.StringPtrOutput `pulumi:"targetMinorVersion"`
	// The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
	// > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
	UsedTime pulumi.IntPtrOutput `pulumi:"usedTime"`
	// The id of the ENS VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The ENS virtual switch ID to launch DB instances in one VPC.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
}

// NewZonalDbCluster registers a new resource with the given unique name, arguments, and options.
func NewZonalDbCluster(ctx *pulumi.Context,
	name string, args *ZonalDbClusterArgs, opts ...pulumi.ResourceOption) (*ZonalDbCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbClusterNodesConfigs == nil {
		return nil, errors.New("invalid value for required argument 'DbClusterNodesConfigs'")
	}
	if args.DbNodeClass == nil {
		return nil, errors.New("invalid value for required argument 'DbNodeClass'")
	}
	if args.EnsRegionId == nil {
		return nil, errors.New("invalid value for required argument 'EnsRegionId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZonalDbCluster
	err := ctx.RegisterResource("alicloud:polardb/zonalDbCluster:ZonalDbCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZonalDbCluster gets an existing ZonalDbCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZonalDbCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZonalDbClusterState, opts ...pulumi.ResourceOption) (*ZonalDbCluster, error) {
	var resource ZonalDbCluster
	err := ctx.ReadResource("alicloud:polardb/zonalDbCluster:ZonalDbCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZonalDbCluster resources.
type zonalDbClusterState struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// PolarDB zonal cluster latest version.
	ClusterLatestVersion *string `pulumi:"clusterLatestVersion"`
	// current DB Cluster revision Version.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// PolarDB zonal cluster creation time.
	CreateTime *string `pulumi:"createTime"`
	// The edition of the PolarDB service. Valid values are `SENormal`.
	CreationCategory *string `pulumi:"creationCategory"`
	// Cache of the relationship between node key and node ID for PolarDB zonal Cluster
	DbClusterNodesAttributes map[string]string `pulumi:"dbClusterNodesAttributes"`
	// Map of node needs to be created after DB cluster was launched.
	DbClusterNodesConfigs map[string]string `pulumi:"dbClusterNodesConfigs"`
	// Cache of node ID for PolarDB zonal Cluster
	DbClusterNodesIds map[string]string `pulumi:"dbClusterNodesIds"`
	// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
	DbMinorVersion *string `pulumi:"dbMinorVersion"`
	// The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
	DbNodeClass *string `pulumi:"dbNodeClass"`
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType *string `pulumi:"dbType"`
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
	DbVersion *string `pulumi:"dbVersion"`
	// The description of cluster.
	Description *string `pulumi:"description"`
	// The Zone to launch the DB cluster.
	EnsRegionId *string `pulumi:"ensRegionId"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType *string `pulumi:"payType"`
	// PolarDB zonal cluster region
	RegionId *string `pulumi:"regionId"`
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The billing method of the storage. Valid values `Prepaid`.
	StoragePayType *string `pulumi:"storagePayType"`
	// Storage space charged by space (monthly package). Unit: GB.
	// > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
	StorageSpace *int `pulumi:"storageSpace"`
	// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
	StorageType *string `pulumi:"storageType"`
	// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
	TargetMinorVersion *string `pulumi:"targetMinorVersion"`
	// The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
	// > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
	UsedTime *int `pulumi:"usedTime"`
	// The id of the ENS VPC.
	VpcId *string `pulumi:"vpcId"`
	// The ENS virtual switch ID to launch DB instances in one VPC.
	VswitchId *string `pulumi:"vswitchId"`
}

type ZonalDbClusterState struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod pulumi.IntPtrInput
	// PolarDB zonal cluster latest version.
	ClusterLatestVersion pulumi.StringPtrInput
	// current DB Cluster revision Version.
	ClusterVersion pulumi.StringPtrInput
	// PolarDB zonal cluster creation time.
	CreateTime pulumi.StringPtrInput
	// The edition of the PolarDB service. Valid values are `SENormal`.
	CreationCategory pulumi.StringPtrInput
	// Cache of the relationship between node key and node ID for PolarDB zonal Cluster
	DbClusterNodesAttributes pulumi.StringMapInput
	// Map of node needs to be created after DB cluster was launched.
	DbClusterNodesConfigs pulumi.StringMapInput
	// Cache of node ID for PolarDB zonal Cluster
	DbClusterNodesIds pulumi.StringMapInput
	// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
	DbMinorVersion pulumi.StringPtrInput
	// The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
	DbNodeClass pulumi.StringPtrInput
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType pulumi.StringPtrInput
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
	DbVersion pulumi.StringPtrInput
	// The description of cluster.
	Description pulumi.StringPtrInput
	// The Zone to launch the DB cluster.
	EnsRegionId pulumi.StringPtrInput
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType pulumi.StringPtrInput
	// PolarDB zonal cluster region
	RegionId pulumi.StringPtrInput
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// The billing method of the storage. Valid values `Prepaid`.
	StoragePayType pulumi.StringPtrInput
	// Storage space charged by space (monthly package). Unit: GB.
	// > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
	StorageSpace pulumi.IntPtrInput
	// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
	StorageType pulumi.StringPtrInput
	// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
	TargetMinorVersion pulumi.StringPtrInput
	// The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
	// > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
	UsedTime pulumi.IntPtrInput
	// The id of the ENS VPC.
	VpcId pulumi.StringPtrInput
	// The ENS virtual switch ID to launch DB instances in one VPC.
	VswitchId pulumi.StringPtrInput
}

func (ZonalDbClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*zonalDbClusterState)(nil)).Elem()
}

type zonalDbClusterArgs struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// current DB Cluster revision Version.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// The edition of the PolarDB service. Valid values are `SENormal`.
	CreationCategory *string `pulumi:"creationCategory"`
	// Map of node needs to be created after DB cluster was launched.
	DbClusterNodesConfigs map[string]string `pulumi:"dbClusterNodesConfigs"`
	// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
	DbMinorVersion *string `pulumi:"dbMinorVersion"`
	// The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
	DbNodeClass string `pulumi:"dbNodeClass"`
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType *string `pulumi:"dbType"`
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
	DbVersion *string `pulumi:"dbVersion"`
	// The description of cluster.
	Description *string `pulumi:"description"`
	// The Zone to launch the DB cluster.
	EnsRegionId string `pulumi:"ensRegionId"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType *string `pulumi:"payType"`
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// Storage space charged by space (monthly package). Unit: GB.
	// > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
	StorageSpace *int `pulumi:"storageSpace"`
	// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
	StorageType *string `pulumi:"storageType"`
	// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
	TargetMinorVersion *string `pulumi:"targetMinorVersion"`
	// The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
	// > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
	UsedTime *int `pulumi:"usedTime"`
	// The id of the ENS VPC.
	VpcId string `pulumi:"vpcId"`
	// The ENS virtual switch ID to launch DB instances in one VPC.
	VswitchId string `pulumi:"vswitchId"`
}

// The set of arguments for constructing a ZonalDbCluster resource.
type ZonalDbClusterArgs struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod pulumi.IntPtrInput
	// current DB Cluster revision Version.
	ClusterVersion pulumi.StringPtrInput
	// The edition of the PolarDB service. Valid values are `SENormal`.
	CreationCategory pulumi.StringPtrInput
	// Map of node needs to be created after DB cluster was launched.
	DbClusterNodesConfigs pulumi.StringMapInput
	// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
	DbMinorVersion pulumi.StringPtrInput
	// The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
	DbNodeClass pulumi.StringInput
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType pulumi.StringPtrInput
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
	DbVersion pulumi.StringPtrInput
	// The description of cluster.
	Description pulumi.StringPtrInput
	// The Zone to launch the DB cluster.
	EnsRegionId pulumi.StringInput
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType pulumi.StringPtrInput
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// Storage space charged by space (monthly package). Unit: GB.
	// > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
	StorageSpace pulumi.IntPtrInput
	// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
	StorageType pulumi.StringPtrInput
	// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
	TargetMinorVersion pulumi.StringPtrInput
	// The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
	// > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
	UsedTime pulumi.IntPtrInput
	// The id of the ENS VPC.
	VpcId pulumi.StringInput
	// The ENS virtual switch ID to launch DB instances in one VPC.
	VswitchId pulumi.StringInput
}

func (ZonalDbClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zonalDbClusterArgs)(nil)).Elem()
}

type ZonalDbClusterInput interface {
	pulumi.Input

	ToZonalDbClusterOutput() ZonalDbClusterOutput
	ToZonalDbClusterOutputWithContext(ctx context.Context) ZonalDbClusterOutput
}

func (*ZonalDbCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalDbCluster)(nil)).Elem()
}

func (i *ZonalDbCluster) ToZonalDbClusterOutput() ZonalDbClusterOutput {
	return i.ToZonalDbClusterOutputWithContext(context.Background())
}

func (i *ZonalDbCluster) ToZonalDbClusterOutputWithContext(ctx context.Context) ZonalDbClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonalDbClusterOutput)
}

// ZonalDbClusterArrayInput is an input type that accepts ZonalDbClusterArray and ZonalDbClusterArrayOutput values.
// You can construct a concrete instance of `ZonalDbClusterArrayInput` via:
//
//	ZonalDbClusterArray{ ZonalDbClusterArgs{...} }
type ZonalDbClusterArrayInput interface {
	pulumi.Input

	ToZonalDbClusterArrayOutput() ZonalDbClusterArrayOutput
	ToZonalDbClusterArrayOutputWithContext(context.Context) ZonalDbClusterArrayOutput
}

type ZonalDbClusterArray []ZonalDbClusterInput

func (ZonalDbClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZonalDbCluster)(nil)).Elem()
}

func (i ZonalDbClusterArray) ToZonalDbClusterArrayOutput() ZonalDbClusterArrayOutput {
	return i.ToZonalDbClusterArrayOutputWithContext(context.Background())
}

func (i ZonalDbClusterArray) ToZonalDbClusterArrayOutputWithContext(ctx context.Context) ZonalDbClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonalDbClusterArrayOutput)
}

// ZonalDbClusterMapInput is an input type that accepts ZonalDbClusterMap and ZonalDbClusterMapOutput values.
// You can construct a concrete instance of `ZonalDbClusterMapInput` via:
//
//	ZonalDbClusterMap{ "key": ZonalDbClusterArgs{...} }
type ZonalDbClusterMapInput interface {
	pulumi.Input

	ToZonalDbClusterMapOutput() ZonalDbClusterMapOutput
	ToZonalDbClusterMapOutputWithContext(context.Context) ZonalDbClusterMapOutput
}

type ZonalDbClusterMap map[string]ZonalDbClusterInput

func (ZonalDbClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZonalDbCluster)(nil)).Elem()
}

func (i ZonalDbClusterMap) ToZonalDbClusterMapOutput() ZonalDbClusterMapOutput {
	return i.ToZonalDbClusterMapOutputWithContext(context.Background())
}

func (i ZonalDbClusterMap) ToZonalDbClusterMapOutputWithContext(ctx context.Context) ZonalDbClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonalDbClusterMapOutput)
}

type ZonalDbClusterOutput struct{ *pulumi.OutputState }

func (ZonalDbClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalDbCluster)(nil)).Elem()
}

func (o ZonalDbClusterOutput) ToZonalDbClusterOutput() ZonalDbClusterOutput {
	return o
}

func (o ZonalDbClusterOutput) ToZonalDbClusterOutputWithContext(ctx context.Context) ZonalDbClusterOutput {
	return o
}

// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
func (o ZonalDbClusterOutput) AutoRenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.IntPtrOutput { return v.AutoRenewPeriod }).(pulumi.IntPtrOutput)
}

// PolarDB zonal cluster latest version.
func (o ZonalDbClusterOutput) ClusterLatestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.ClusterLatestVersion }).(pulumi.StringOutput)
}

// current DB Cluster revision Version.
func (o ZonalDbClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

// PolarDB zonal cluster creation time.
func (o ZonalDbClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The edition of the PolarDB service. Valid values are `SENormal`.
func (o ZonalDbClusterOutput) CreationCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.CreationCategory }).(pulumi.StringOutput)
}

// Cache of the relationship between node key and node ID for PolarDB zonal Cluster
func (o ZonalDbClusterOutput) DbClusterNodesAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringMapOutput { return v.DbClusterNodesAttributes }).(pulumi.StringMapOutput)
}

// Map of node needs to be created after DB cluster was launched.
func (o ZonalDbClusterOutput) DbClusterNodesConfigs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringMapOutput { return v.DbClusterNodesConfigs }).(pulumi.StringMapOutput)
}

// Cache of node ID for PolarDB zonal Cluster
func (o ZonalDbClusterOutput) DbClusterNodesIds() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringMapOutput { return v.DbClusterNodesIds }).(pulumi.StringMapOutput)
}

// Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
func (o ZonalDbClusterOutput) DbMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.DbMinorVersion }).(pulumi.StringPtrOutput)
}

// The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
func (o ZonalDbClusterOutput) DbNodeClass() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.DbNodeClass }).(pulumi.StringOutput)
}

// Database type. Value options: MySQL, Oracle, PostgreSQL.
func (o ZonalDbClusterOutput) DbType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.DbType }).(pulumi.StringPtrOutput)
}

// Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
func (o ZonalDbClusterOutput) DbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.DbVersion }).(pulumi.StringPtrOutput)
}

// The description of cluster.
func (o ZonalDbClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The Zone to launch the DB cluster.
func (o ZonalDbClusterOutput) EnsRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.EnsRegionId }).(pulumi.StringOutput)
}

// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
func (o ZonalDbClusterOutput) PayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.PayType }).(pulumi.StringPtrOutput)
}

// PolarDB zonal cluster region
func (o ZonalDbClusterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
func (o ZonalDbClusterOutput) RenewalStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.RenewalStatus }).(pulumi.StringPtrOutput)
}

// The billing method of the storage. Valid values `Prepaid`.
func (o ZonalDbClusterOutput) StoragePayType() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.StoragePayType }).(pulumi.StringOutput)
}

// Storage space charged by space (monthly package). Unit: GB.
// > **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
func (o ZonalDbClusterOutput) StorageSpace() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.IntPtrOutput { return v.StorageSpace }).(pulumi.IntPtrOutput)
}

// The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
func (o ZonalDbClusterOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.StorageType }).(pulumi.StringPtrOutput)
}

// The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
func (o ZonalDbClusterOutput) TargetMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringPtrOutput { return v.TargetMinorVersion }).(pulumi.StringPtrOutput)
}

// The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
// > **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
func (o ZonalDbClusterOutput) UsedTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.IntPtrOutput { return v.UsedTime }).(pulumi.IntPtrOutput)
}

// The id of the ENS VPC.
func (o ZonalDbClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The ENS virtual switch ID to launch DB instances in one VPC.
func (o ZonalDbClusterOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *ZonalDbCluster) pulumi.StringOutput { return v.VswitchId }).(pulumi.StringOutput)
}

type ZonalDbClusterArrayOutput struct{ *pulumi.OutputState }

func (ZonalDbClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZonalDbCluster)(nil)).Elem()
}

func (o ZonalDbClusterArrayOutput) ToZonalDbClusterArrayOutput() ZonalDbClusterArrayOutput {
	return o
}

func (o ZonalDbClusterArrayOutput) ToZonalDbClusterArrayOutputWithContext(ctx context.Context) ZonalDbClusterArrayOutput {
	return o
}

func (o ZonalDbClusterArrayOutput) Index(i pulumi.IntInput) ZonalDbClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZonalDbCluster {
		return vs[0].([]*ZonalDbCluster)[vs[1].(int)]
	}).(ZonalDbClusterOutput)
}

type ZonalDbClusterMapOutput struct{ *pulumi.OutputState }

func (ZonalDbClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZonalDbCluster)(nil)).Elem()
}

func (o ZonalDbClusterMapOutput) ToZonalDbClusterMapOutput() ZonalDbClusterMapOutput {
	return o
}

func (o ZonalDbClusterMapOutput) ToZonalDbClusterMapOutputWithContext(ctx context.Context) ZonalDbClusterMapOutput {
	return o
}

func (o ZonalDbClusterMapOutput) MapIndex(k pulumi.StringInput) ZonalDbClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZonalDbCluster {
		return vs[0].(map[string]*ZonalDbCluster)[vs[1].(string)]
	}).(ZonalDbClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZonalDbClusterInput)(nil)).Elem(), &ZonalDbCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonalDbClusterArrayInput)(nil)).Elem(), ZonalDbClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonalDbClusterMapInput)(nil)).Elem(), ZonalDbClusterMap{})
	pulumi.RegisterOutputType(ZonalDbClusterOutput{})
	pulumi.RegisterOutputType(ZonalDbClusterArrayOutput{})
	pulumi.RegisterOutputType(ZonalDbClusterMapOutput{})
}
