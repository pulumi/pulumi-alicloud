// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package polardb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a PolarDB cluster resource. A PolarDB cluster is an isolated database
// environment in the cloud. A PolarDB cluster can contain multiple user-created
// databases.
//
// > **NOTE:** Available in v1.66.0+.
//
// ## Example Usage
// ### Create a PolarDB MySQL cluster
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/polardb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "polardbClusterconfig"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			creation := "PolarDB"
//			if param := cfg.Get("creation"); param != "" {
//				creation = param
//			}
//			defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef(creation),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("172.16.0.0/24"),
//				ZoneId:      *pulumi.String(defaultZones.Zones[0].Id),
//				VswitchName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = polardb.NewCluster(ctx, "defaultCluster", &polardb.ClusterArgs{
//				DbType:      pulumi.String("MySQL"),
//				DbVersion:   pulumi.String("5.6"),
//				DbNodeClass: pulumi.String("polar.mysql.x4.medium"),
//				PayType:     pulumi.String("PostPaid"),
//				Description: pulumi.String(name),
//				VswitchId:   defaultSwitch.ID(),
//				DbClusterIpArrays: polardb.ClusterDbClusterIpArrayArray{
//					&polardb.ClusterDbClusterIpArrayArgs{
//						DbClusterIpArrayName: pulumi.String("default"),
//						SecurityIps: pulumi.StringArray{
//							pulumi.String("1.2.3.4"),
//							pulumi.String("1.2.3.5"),
//						},
//					},
//					&polardb.ClusterDbClusterIpArrayArgs{
//						DbClusterIpArrayName: pulumi.String("test_ips1"),
//						SecurityIps: pulumi.StringArray{
//							pulumi.String("1.2.3.6"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PolarDB cluster can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:polardb/cluster:Cluster example pc-abc12345678
//
// ```
type Cluster struct {
	pulumi.CustomResourceState

	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod pulumi.IntPtrOutput `pulumi:"autoRenewPeriod"`
	// The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
	BackupRetentionPolicyOnClusterDeletion pulumi.StringOutput `pulumi:"backupRetentionPolicyOnClusterDeletion"`
	// The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
	// > **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint pulumi.StringPtrOutput `pulumi:"cloneDataPoint"`
	// Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
	CollectorStatus pulumi.StringOutput `pulumi:"collectorStatus"`
	// (Available in 1.81.0+) PolarDB cluster connection string.
	ConnectionString pulumi.StringOutput `pulumi:"connectionString"`
	// The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
	// > **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creationCategory` can be set to `NormalMultimaster`. From version 1.203.0, `creationCategory` can be set to `SENormal`.
	CreationCategory pulumi.StringOutput `pulumi:"creationCategory"`
	// The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
	// > **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
	CreationOption pulumi.StringOutput `pulumi:"creationOption"`
	// db_cluster_ip_array defines how users can send requests to your API.
	DbClusterIpArrays ClusterDbClusterIpArrayArrayOutput `pulumi:"dbClusterIpArrays"`
	// The dbNodeClass of cluster node.
	// > **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	DbNodeClass pulumi.StringOutput `pulumi:"dbNodeClass"`
	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// > **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DbNodeCount pulumi.IntOutput `pulumi:"dbNodeCount"`
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType pulumi.StringOutput `pulumi:"dbType"`
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// > **NOTE:**  Cannot modify after created when `payType` is `Prepaid` .`deletionLock` the cluster protection lock can be turned on or off when `payType` is `Postpaid`.
	DeletionLock pulumi.IntPtrOutput `pulumi:"deletionLock"`
	// The description of cluster.
	Description pulumi.StringOutput `pulumi:"description"`
	// turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
	// > **NOTE:** `encryptNewTables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables pulumi.StringPtrOutput `pulumi:"encryptNewTables"`
	// The ID of the custom key. `encryptionKey` cannot be modified after TDE is opened.
	EncryptionKey pulumi.StringPtrOutput `pulumi:"encryptionKey"`
	// The ID of the global database network (GDN).
	// > **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnId pulumi.StringPtrOutput `pulumi:"gdnId"`
	// Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
	HotStandbyCluster pulumi.StringOutput `pulumi:"hotStandbyCluster"`
	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
	// > **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch pulumi.StringOutput `pulumi:"imciSwitch"`
	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime pulumi.StringOutput `pulumi:"maintainTime"`
	// Use as `dbNodeClass` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
	ModifyType pulumi.StringPtrOutput `pulumi:"modifyType"`
	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
	Parameters ClusterParameterArrayOutput `pulumi:"parameters"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType pulumi.StringPtrOutput `pulumi:"payType"`
	Period  pulumi.IntPtrOutput    `pulumi:"period"`
	// (Available in 1.196.0+) PolarDB cluster connection port.
	Port pulumi.StringOutput `pulumi:"port"`
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus pulumi.StringPtrOutput `pulumi:"renewalStatus"`
	// The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// > **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
	// Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
	SecurityIps pulumi.StringArrayOutput `pulumi:"securityIps"`
	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
	SourceResourceId pulumi.StringPtrOutput `pulumi:"sourceResourceId"`
	// Storage space charged by space (monthly package). Unit: GB.
	StorageSpace pulumi.IntPtrOutput `pulumi:"storageSpace"`
	// The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
	// > **NOTE:** Serverless cluster does not support this parameter.
	StorageType pulumi.StringOutput `pulumi:"storageType"`
	// The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
	SubCategory pulumi.StringOutput `pulumi:"subCategory"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// (Available in 1.200.0+) The region where the TDE key resides.
	// > **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
	// **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
	TdeRegion pulumi.StringOutput `pulumi:"tdeRegion"`
	// turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
	// > **NOTE:** `tdeStatus` Cannot modify after created when `dbType` is `PostgreSQL` or `Oracle`.`tdeStatus` only support modification from `Disabled` to `Enabled` when `dbType` is `MySQL`.
	TdeStatus pulumi.StringPtrOutput `pulumi:"tdeStatus"`
	// The id of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The virtual switch ID to launch DB instances in one VPC.
	// > **NOTE:** If vswitchId is not specified, system will get a vswitch belongs to the user automatically.
	VswitchId pulumi.StringPtrOutput `pulumi:"vswitchId"`
	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbNodeClass == nil {
		return nil, errors.New("invalid value for required argument 'DbNodeClass'")
	}
	if args.DbType == nil {
		return nil, errors.New("invalid value for required argument 'DbType'")
	}
	if args.DbVersion == nil {
		return nil, errors.New("invalid value for required argument 'DbVersion'")
	}
	var resource Cluster
	err := ctx.RegisterResource("alicloud:polardb/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("alicloud:polardb/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
	BackupRetentionPolicyOnClusterDeletion *string `pulumi:"backupRetentionPolicyOnClusterDeletion"`
	// The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
	// > **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint *string `pulumi:"cloneDataPoint"`
	// Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
	CollectorStatus *string `pulumi:"collectorStatus"`
	// (Available in 1.81.0+) PolarDB cluster connection string.
	ConnectionString *string `pulumi:"connectionString"`
	// The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
	// > **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creationCategory` can be set to `NormalMultimaster`. From version 1.203.0, `creationCategory` can be set to `SENormal`.
	CreationCategory *string `pulumi:"creationCategory"`
	// The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
	// > **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
	CreationOption *string `pulumi:"creationOption"`
	// db_cluster_ip_array defines how users can send requests to your API.
	DbClusterIpArrays []ClusterDbClusterIpArray `pulumi:"dbClusterIpArrays"`
	// The dbNodeClass of cluster node.
	// > **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	DbNodeClass *string `pulumi:"dbNodeClass"`
	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// > **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DbNodeCount *int `pulumi:"dbNodeCount"`
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType *string `pulumi:"dbType"`
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
	DbVersion *string `pulumi:"dbVersion"`
	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// > **NOTE:**  Cannot modify after created when `payType` is `Prepaid` .`deletionLock` the cluster protection lock can be turned on or off when `payType` is `Postpaid`.
	DeletionLock *int `pulumi:"deletionLock"`
	// The description of cluster.
	Description *string `pulumi:"description"`
	// turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
	// > **NOTE:** `encryptNewTables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables *string `pulumi:"encryptNewTables"`
	// The ID of the custom key. `encryptionKey` cannot be modified after TDE is opened.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The ID of the global database network (GDN).
	// > **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnId *string `pulumi:"gdnId"`
	// Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
	HotStandbyCluster *string `pulumi:"hotStandbyCluster"`
	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
	// > **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch *string `pulumi:"imciSwitch"`
	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime *string `pulumi:"maintainTime"`
	// Use as `dbNodeClass` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
	ModifyType *string `pulumi:"modifyType"`
	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
	Parameters []ClusterParameter `pulumi:"parameters"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType *string `pulumi:"payType"`
	Period  *int    `pulumi:"period"`
	// (Available in 1.196.0+) PolarDB cluster connection port.
	Port *string `pulumi:"port"`
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
	RoleArn *string `pulumi:"roleArn"`
	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// > **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
	// Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
	SecurityIps []string `pulumi:"securityIps"`
	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage space charged by space (monthly package). Unit: GB.
	StorageSpace *int `pulumi:"storageSpace"`
	// The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
	// > **NOTE:** Serverless cluster does not support this parameter.
	StorageType *string `pulumi:"storageType"`
	// The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
	SubCategory *string `pulumi:"subCategory"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]interface{} `pulumi:"tags"`
	// (Available in 1.200.0+) The region where the TDE key resides.
	// > **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
	// **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
	TdeRegion *string `pulumi:"tdeRegion"`
	// turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
	// > **NOTE:** `tdeStatus` Cannot modify after created when `dbType` is `PostgreSQL` or `Oracle`.`tdeStatus` only support modification from `Disabled` to `Enabled` when `dbType` is `MySQL`.
	TdeStatus *string `pulumi:"tdeStatus"`
	// The id of the VPC.
	VpcId *string `pulumi:"vpcId"`
	// The virtual switch ID to launch DB instances in one VPC.
	// > **NOTE:** If vswitchId is not specified, system will get a vswitch belongs to the user automatically.
	VswitchId *string `pulumi:"vswitchId"`
	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneId *string `pulumi:"zoneId"`
}

type ClusterState struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod pulumi.IntPtrInput
	// The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
	BackupRetentionPolicyOnClusterDeletion pulumi.StringPtrInput
	// The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
	// > **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint pulumi.StringPtrInput
	// Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
	CollectorStatus pulumi.StringPtrInput
	// (Available in 1.81.0+) PolarDB cluster connection string.
	ConnectionString pulumi.StringPtrInput
	// The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
	// > **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creationCategory` can be set to `NormalMultimaster`. From version 1.203.0, `creationCategory` can be set to `SENormal`.
	CreationCategory pulumi.StringPtrInput
	// The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
	// > **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
	CreationOption pulumi.StringPtrInput
	// db_cluster_ip_array defines how users can send requests to your API.
	DbClusterIpArrays ClusterDbClusterIpArrayArrayInput
	// The dbNodeClass of cluster node.
	// > **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	DbNodeClass pulumi.StringPtrInput
	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// > **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DbNodeCount pulumi.IntPtrInput
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType pulumi.StringPtrInput
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
	DbVersion pulumi.StringPtrInput
	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// > **NOTE:**  Cannot modify after created when `payType` is `Prepaid` .`deletionLock` the cluster protection lock can be turned on or off when `payType` is `Postpaid`.
	DeletionLock pulumi.IntPtrInput
	// The description of cluster.
	Description pulumi.StringPtrInput
	// turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
	// > **NOTE:** `encryptNewTables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables pulumi.StringPtrInput
	// The ID of the custom key. `encryptionKey` cannot be modified after TDE is opened.
	EncryptionKey pulumi.StringPtrInput
	// The ID of the global database network (GDN).
	// > **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnId pulumi.StringPtrInput
	// Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
	HotStandbyCluster pulumi.StringPtrInput
	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
	// > **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch pulumi.StringPtrInput
	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime pulumi.StringPtrInput
	// Use as `dbNodeClass` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
	ModifyType pulumi.StringPtrInput
	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
	Parameters ClusterParameterArrayInput
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType pulumi.StringPtrInput
	Period  pulumi.IntPtrInput
	// (Available in 1.196.0+) PolarDB cluster connection port.
	Port pulumi.StringPtrInput
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
	RoleArn pulumi.StringPtrInput
	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// > **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	SecurityGroupIds pulumi.StringArrayInput
	// This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
	// Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
	SecurityIps pulumi.StringArrayInput
	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
	SourceResourceId pulumi.StringPtrInput
	// Storage space charged by space (monthly package). Unit: GB.
	StorageSpace pulumi.IntPtrInput
	// The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
	// > **NOTE:** Serverless cluster does not support this parameter.
	StorageType pulumi.StringPtrInput
	// The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
	SubCategory pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapInput
	// (Available in 1.200.0+) The region where the TDE key resides.
	// > **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
	// **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
	TdeRegion pulumi.StringPtrInput
	// turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
	// > **NOTE:** `tdeStatus` Cannot modify after created when `dbType` is `PostgreSQL` or `Oracle`.`tdeStatus` only support modification from `Disabled` to `Enabled` when `dbType` is `MySQL`.
	TdeStatus pulumi.StringPtrInput
	// The id of the VPC.
	VpcId pulumi.StringPtrInput
	// The virtual switch ID to launch DB instances in one VPC.
	// > **NOTE:** If vswitchId is not specified, system will get a vswitch belongs to the user automatically.
	VswitchId pulumi.StringPtrInput
	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneId pulumi.StringPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
	BackupRetentionPolicyOnClusterDeletion *string `pulumi:"backupRetentionPolicyOnClusterDeletion"`
	// The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
	// > **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint *string `pulumi:"cloneDataPoint"`
	// Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
	CollectorStatus *string `pulumi:"collectorStatus"`
	// The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
	// > **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creationCategory` can be set to `NormalMultimaster`. From version 1.203.0, `creationCategory` can be set to `SENormal`.
	CreationCategory *string `pulumi:"creationCategory"`
	// The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
	// > **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
	CreationOption *string `pulumi:"creationOption"`
	// db_cluster_ip_array defines how users can send requests to your API.
	DbClusterIpArrays []ClusterDbClusterIpArray `pulumi:"dbClusterIpArrays"`
	// The dbNodeClass of cluster node.
	// > **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	DbNodeClass string `pulumi:"dbNodeClass"`
	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// > **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DbNodeCount *int `pulumi:"dbNodeCount"`
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType string `pulumi:"dbType"`
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
	DbVersion string `pulumi:"dbVersion"`
	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// > **NOTE:**  Cannot modify after created when `payType` is `Prepaid` .`deletionLock` the cluster protection lock can be turned on or off when `payType` is `Postpaid`.
	DeletionLock *int `pulumi:"deletionLock"`
	// The description of cluster.
	Description *string `pulumi:"description"`
	// turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
	// > **NOTE:** `encryptNewTables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables *string `pulumi:"encryptNewTables"`
	// The ID of the custom key. `encryptionKey` cannot be modified after TDE is opened.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The ID of the global database network (GDN).
	// > **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnId *string `pulumi:"gdnId"`
	// Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
	HotStandbyCluster *string `pulumi:"hotStandbyCluster"`
	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
	// > **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch *string `pulumi:"imciSwitch"`
	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime *string `pulumi:"maintainTime"`
	// Use as `dbNodeClass` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
	ModifyType *string `pulumi:"modifyType"`
	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
	Parameters []ClusterParameter `pulumi:"parameters"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType *string `pulumi:"payType"`
	Period  *int    `pulumi:"period"`
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
	RoleArn *string `pulumi:"roleArn"`
	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// > **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
	// Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
	SecurityIps []string `pulumi:"securityIps"`
	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage space charged by space (monthly package). Unit: GB.
	StorageSpace *int `pulumi:"storageSpace"`
	// The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
	// > **NOTE:** Serverless cluster does not support this parameter.
	StorageType *string `pulumi:"storageType"`
	// The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
	SubCategory *string `pulumi:"subCategory"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]interface{} `pulumi:"tags"`
	// turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
	// > **NOTE:** `tdeStatus` Cannot modify after created when `dbType` is `PostgreSQL` or `Oracle`.`tdeStatus` only support modification from `Disabled` to `Enabled` when `dbType` is `MySQL`.
	TdeStatus *string `pulumi:"tdeStatus"`
	// The id of the VPC.
	VpcId *string `pulumi:"vpcId"`
	// The virtual switch ID to launch DB instances in one VPC.
	// > **NOTE:** If vswitchId is not specified, system will get a vswitch belongs to the user automatically.
	VswitchId *string `pulumi:"vswitchId"`
	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod pulumi.IntPtrInput
	// The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
	BackupRetentionPolicyOnClusterDeletion pulumi.StringPtrInput
	// The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
	// > **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint pulumi.StringPtrInput
	// Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
	CollectorStatus pulumi.StringPtrInput
	// The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
	// > **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creationCategory` can be set to `NormalMultimaster`. From version 1.203.0, `creationCategory` can be set to `SENormal`.
	CreationCategory pulumi.StringPtrInput
	// The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
	// > **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
	CreationOption pulumi.StringPtrInput
	// db_cluster_ip_array defines how users can send requests to your API.
	DbClusterIpArrays ClusterDbClusterIpArrayArrayInput
	// The dbNodeClass of cluster node.
	// > **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	DbNodeClass pulumi.StringInput
	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// > **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DbNodeCount pulumi.IntPtrInput
	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DbType pulumi.StringInput
	// Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
	DbVersion pulumi.StringInput
	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// > **NOTE:**  Cannot modify after created when `payType` is `Prepaid` .`deletionLock` the cluster protection lock can be turned on or off when `payType` is `Postpaid`.
	DeletionLock pulumi.IntPtrInput
	// The description of cluster.
	Description pulumi.StringPtrInput
	// turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
	// > **NOTE:** `encryptNewTables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables pulumi.StringPtrInput
	// The ID of the custom key. `encryptionKey` cannot be modified after TDE is opened.
	EncryptionKey pulumi.StringPtrInput
	// The ID of the global database network (GDN).
	// > **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnId pulumi.StringPtrInput
	// Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
	HotStandbyCluster pulumi.StringPtrInput
	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
	// > **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch pulumi.StringPtrInput
	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime pulumi.StringPtrInput
	// Use as `dbNodeClass` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
	ModifyType pulumi.StringPtrInput
	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
	Parameters ClusterParameterArrayInput
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	PayType pulumi.StringPtrInput
	Period  pulumi.IntPtrInput
	// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
	RoleArn pulumi.StringPtrInput
	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// > **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	SecurityGroupIds pulumi.StringArrayInput
	// This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
	// Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
	SecurityIps pulumi.StringArrayInput
	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
	SourceResourceId pulumi.StringPtrInput
	// Storage space charged by space (monthly package). Unit: GB.
	StorageSpace pulumi.IntPtrInput
	// The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
	// > **NOTE:** Serverless cluster does not support this parameter.
	StorageType pulumi.StringPtrInput
	// The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
	SubCategory pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapInput
	// turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
	// > **NOTE:** `tdeStatus` Cannot modify after created when `dbType` is `PostgreSQL` or `Oracle`.`tdeStatus` only support modification from `Disabled` to `Enabled` when `dbType` is `MySQL`.
	TdeStatus pulumi.StringPtrInput
	// The id of the VPC.
	VpcId pulumi.StringPtrInput
	// The virtual switch ID to launch DB instances in one VPC.
	// > **NOTE:** If vswitchId is not specified, system will get a vswitch belongs to the user automatically.
	VswitchId pulumi.StringPtrInput
	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneId pulumi.StringPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
func (o ClusterOutput) AutoRenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.AutoRenewPeriod }).(pulumi.IntPtrOutput)
}

// The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
func (o ClusterOutput) BackupRetentionPolicyOnClusterDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.BackupRetentionPolicyOnClusterDeletion }).(pulumi.StringOutput)
}

// The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
// > **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
func (o ClusterOutput) CloneDataPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.CloneDataPoint }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
func (o ClusterOutput) CollectorStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.CollectorStatus }).(pulumi.StringOutput)
}

// (Available in 1.81.0+) PolarDB cluster connection string.
func (o ClusterOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ConnectionString }).(pulumi.StringOutput)
}

// The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
// > **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creationCategory` can be set to `NormalMultimaster`. From version 1.203.0, `creationCategory` can be set to `SENormal`.
func (o ClusterOutput) CreationCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.CreationCategory }).(pulumi.StringOutput)
}

// The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
// > **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
func (o ClusterOutput) CreationOption() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.CreationOption }).(pulumi.StringOutput)
}

// db_cluster_ip_array defines how users can send requests to your API.
func (o ClusterOutput) DbClusterIpArrays() ClusterDbClusterIpArrayArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterDbClusterIpArrayArrayOutput { return v.DbClusterIpArrays }).(ClusterDbClusterIpArrayArrayOutput)
}

// The dbNodeClass of cluster node.
// > **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
func (o ClusterOutput) DbNodeClass() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DbNodeClass }).(pulumi.StringOutput)
}

// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
// > **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
func (o ClusterOutput) DbNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.DbNodeCount }).(pulumi.IntOutput)
}

// Database type. Value options: MySQL, Oracle, PostgreSQL.
func (o ClusterOutput) DbType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DbType }).(pulumi.StringOutput)
}

// Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
func (o ClusterOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
// > **NOTE:**  Cannot modify after created when `payType` is `Prepaid` .`deletionLock` the cluster protection lock can be turned on or off when `payType` is `Postpaid`.
func (o ClusterOutput) DeletionLock() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.DeletionLock }).(pulumi.IntPtrOutput)
}

// The description of cluster.
func (o ClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
// > **NOTE:** `encryptNewTables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
func (o ClusterOutput) EncryptNewTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.EncryptNewTables }).(pulumi.StringPtrOutput)
}

// The ID of the custom key. `encryptionKey` cannot be modified after TDE is opened.
func (o ClusterOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// The ID of the global database network (GDN).
// > **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
func (o ClusterOutput) GdnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.GdnId }).(pulumi.StringPtrOutput)
}

// Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
func (o ClusterOutput) HotStandbyCluster() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.HotStandbyCluster }).(pulumi.StringOutput)
}

// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
// > **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
// **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
func (o ClusterOutput) ImciSwitch() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ImciSwitch }).(pulumi.StringOutput)
}

// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
func (o ClusterOutput) MaintainTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.MaintainTime }).(pulumi.StringOutput)
}

// Use as `dbNodeClass` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
func (o ClusterOutput) ModifyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.ModifyType }).(pulumi.StringPtrOutput)
}

// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
func (o ClusterOutput) Parameters() ClusterParameterArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterParameterArrayOutput { return v.Parameters }).(ClusterParameterArrayOutput)
}

// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
func (o ClusterOutput) PayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.PayType }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// (Available in 1.196.0+) PolarDB cluster connection port.
func (o ClusterOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
func (o ClusterOutput) RenewalStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.RenewalStatus }).(pulumi.StringPtrOutput)
}

// The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
func (o ClusterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
func (o ClusterOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
// > **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
func (o ClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// This attribute has been deprecated from v1.130.0 and using `dbClusterIpArray` sub-element `securityIps` instead.
// Its value is same as `dbClusterIpArray` sub-element `securityIps` value and its dbClusterIpArrayName is "default".
func (o ClusterOutput) SecurityIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.SecurityIps }).(pulumi.StringArrayOutput)
}

// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
func (o ClusterOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Storage space charged by space (monthly package). Unit: GB.
func (o ClusterOutput) StorageSpace() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.StorageSpace }).(pulumi.IntPtrOutput)
}

// The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
// > **NOTE:** Serverless cluster does not support this parameter.
func (o ClusterOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

// The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
func (o ClusterOutput) SubCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SubCategory }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
func (o ClusterOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// (Available in 1.200.0+) The region where the TDE key resides.
// > **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
// **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
func (o ClusterOutput) TdeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.TdeRegion }).(pulumi.StringOutput)
}

// turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
// > **NOTE:** `tdeStatus` Cannot modify after created when `dbType` is `PostgreSQL` or `Oracle`.`tdeStatus` only support modification from `Disabled` to `Enabled` when `dbType` is `MySQL`.
func (o ClusterOutput) TdeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.TdeStatus }).(pulumi.StringPtrOutput)
}

// The id of the VPC.
func (o ClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The virtual switch ID to launch DB instances in one VPC.
// > **NOTE:** If vswitchId is not specified, system will get a vswitch belongs to the user automatically.
func (o ClusterOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// The Zone to launch the DB cluster. it supports multiple zone.
func (o ClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
