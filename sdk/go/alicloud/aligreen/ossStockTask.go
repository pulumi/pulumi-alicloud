// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aligreen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Aligreen Oss Stock Task can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:aligreen/ossStockTask:OssStockTask example <id>
// ```
type OssStockTask struct {
	pulumi.CustomResourceState

	// Voice auto freeze configuration. Example:{"type":"suggestion","value":"block,review"}. The results are frozen according to the suggestion in the speech detection results.
	AudioAntispamFreezeConfig pulumi.StringPtrOutput `pulumi:"audioAntispamFreezeConfig"`
	// Audio detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	AudioAutoFreezeOpened pulumi.BoolPtrOutput `pulumi:"audioAutoFreezeOpened"`
	// Resource property field representing the maximum size of a single audio. 1~2048MB, the default is 200MB, more than not detected.
	AudioMaxSize pulumi.IntPtrOutput `pulumi:"audioMaxSize"`
	// oss stock scan task detect audio. true: scan audio, false: do not scan audio
	AudioOpened pulumi.BoolPtrOutput `pulumi:"audioOpened"`
	// The upper limit of voice scan in the oss stock scan task. The default value is 1000/Bucket.
	AudioScanLimit pulumi.IntPtrOutput `pulumi:"audioScanLimit"`
	// The audio detection scenarios included in the oss stock scan task. Set the value to antispam.
	AudioScenes pulumi.StringPtrOutput `pulumi:"audioScenes"`
	// Automatic freeze type. Value: acl: modify permissions, copy: Move files
	AutoFreezeType pulumi.StringPtrOutput `pulumi:"autoFreezeType"`
	// Business scenarios used by the oss stock scan task
	BizType pulumi.StringPtrOutput `pulumi:"bizType"`
	// The bucket configuration list of the oss stock scan task. Example:[{"Bucket":"bucket01","Selected":true,"Prefixes":["img/test_"],"Type":"exclude"}]
	Buckets pulumi.StringPtrOutput `pulumi:"buckets"`
	// The ID of the primary key of the notification message bound to the oss stock scan task.
	CallbackId pulumi.IntPtrOutput `pulumi:"callbackId"`
	// The end time of the file upload time range indicates the scanning of files uploaded before this time point.
	EndDate pulumi.StringPtrOutput `pulumi:"endDate"`
	// Picture automatically freezes the configuration of ad scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageAdFreezeConfig pulumi.StringPtrOutput `pulumi:"imageAdFreezeConfig"`
	// Picture detection auto freeze switch. Value: true: auto freeze, false: not auto freeze.
	ImageAutoFreezeOpened pulumi.BoolPtrOutput `pulumi:"imageAutoFreezeOpened"`
	// Picture automatic freezing live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageLiveFreezeConfig pulumi.StringPtrOutput `pulumi:"imageLiveFreezeConfig"`
	// oss stock scan task detect images. true: scan images, false: do not scan images
	ImageOpened pulumi.BoolPtrOutput `pulumi:"imageOpened"`
	// Picture automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImagePornFreezeConfig pulumi.StringPtrOutput `pulumi:"imagePornFreezeConfig"`
	// The upper limit for scanning images in the oss stock scan task. The default value is 10000 images per Bucket.
	ImageScanLimit pulumi.IntPtrOutput `pulumi:"imageScanLimit"`
	// The image moderation scenario included in the oss stock scan task.Valid values:
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	ImageScenes pulumi.StringArrayOutput `pulumi:"imageScenes"`
	// The picture automatically freezes the configuration of terrorism scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageTerrorismFreezeConfig pulumi.StringPtrOutput `pulumi:"imageTerrorismFreezeConfig"`
	// Whether the oss stock scan task detects images with file names without suffixes. true: Detect pictures with file names without suffixes, false: Do not detect pictures with file names without suffixes
	ScanImageNoFileType pulumi.BoolPtrOutput `pulumi:"scanImageNoFileType"`
	// The start time of the file upload time range represents the files uploaded after scanning this time point.
	StartDate pulumi.StringPtrOutput `pulumi:"startDate"`
	// The video automatically freezes the configuration of ad scenarios. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoAdFreezeConfig pulumi.StringPtrOutput `pulumi:"videoAdFreezeConfig"`
	// Video detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	VideoAutoFreezeOpened pulumi.BoolPtrOutput `pulumi:"videoAutoFreezeOpened"`
	// Resource attribute field representing the framing frequency. 1~60 seconds/frame, the default is 1 second/frame
	VideoFrameInterval pulumi.IntPtrOutput `pulumi:"videoFrameInterval"`
	// Video automatic freeze live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoLiveFreezeConfig pulumi.StringPtrOutput `pulumi:"videoLiveFreezeConfig"`
	// A resource attribute field that represents the upper limit of a single video frame cut. 5 to 20000 frames, the default is 200 frames
	VideoMaxFrames pulumi.IntPtrOutput `pulumi:"videoMaxFrames"`
	// Resource property field representing the maximum size of a single video. 1~2048MB, the default is 500MB, more than not detected.
	VideoMaxSize pulumi.IntPtrOutput `pulumi:"videoMaxSize"`
	// oss stock scan task detect video. true: scan video, false: do not scan video
	VideoOpened pulumi.BoolPtrOutput `pulumi:"videoOpened"`
	// Video automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the video detection result.
	VideoPornFreezeConfig pulumi.StringPtrOutput `pulumi:"videoPornFreezeConfig"`
	// The upper limit of video scanning in the oss stock scan task. The default value is 1000/Bucket.
	VideoScanLimit pulumi.IntPtrOutput `pulumi:"videoScanLimit"`
	// The video detection scenarios included in the oss stock scan task.
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	// antispam: Video voice antispam
	VideoScenes pulumi.StringPtrOutput `pulumi:"videoScenes"`
	// The video automatically freezes the configuration of terrorism scenes. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoTerrorismFreezeConfig pulumi.StringPtrOutput `pulumi:"videoTerrorismFreezeConfig"`
	// Voice auto freeze configuration in video. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoVoiceAntispamFreezeConfig pulumi.StringPtrOutput `pulumi:"videoVoiceAntispamFreezeConfig"`
}

// NewOssStockTask registers a new resource with the given unique name, arguments, and options.
func NewOssStockTask(ctx *pulumi.Context,
	name string, args *OssStockTaskArgs, opts ...pulumi.ResourceOption) (*OssStockTask, error) {
	if args == nil {
		args = &OssStockTaskArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OssStockTask
	err := ctx.RegisterResource("alicloud:aligreen/ossStockTask:OssStockTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOssStockTask gets an existing OssStockTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOssStockTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OssStockTaskState, opts ...pulumi.ResourceOption) (*OssStockTask, error) {
	var resource OssStockTask
	err := ctx.ReadResource("alicloud:aligreen/ossStockTask:OssStockTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OssStockTask resources.
type ossStockTaskState struct {
	// Voice auto freeze configuration. Example:{"type":"suggestion","value":"block,review"}. The results are frozen according to the suggestion in the speech detection results.
	AudioAntispamFreezeConfig *string `pulumi:"audioAntispamFreezeConfig"`
	// Audio detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	AudioAutoFreezeOpened *bool `pulumi:"audioAutoFreezeOpened"`
	// Resource property field representing the maximum size of a single audio. 1~2048MB, the default is 200MB, more than not detected.
	AudioMaxSize *int `pulumi:"audioMaxSize"`
	// oss stock scan task detect audio. true: scan audio, false: do not scan audio
	AudioOpened *bool `pulumi:"audioOpened"`
	// The upper limit of voice scan in the oss stock scan task. The default value is 1000/Bucket.
	AudioScanLimit *int `pulumi:"audioScanLimit"`
	// The audio detection scenarios included in the oss stock scan task. Set the value to antispam.
	AudioScenes *string `pulumi:"audioScenes"`
	// Automatic freeze type. Value: acl: modify permissions, copy: Move files
	AutoFreezeType *string `pulumi:"autoFreezeType"`
	// Business scenarios used by the oss stock scan task
	BizType *string `pulumi:"bizType"`
	// The bucket configuration list of the oss stock scan task. Example:[{"Bucket":"bucket01","Selected":true,"Prefixes":["img/test_"],"Type":"exclude"}]
	Buckets *string `pulumi:"buckets"`
	// The ID of the primary key of the notification message bound to the oss stock scan task.
	CallbackId *int `pulumi:"callbackId"`
	// The end time of the file upload time range indicates the scanning of files uploaded before this time point.
	EndDate *string `pulumi:"endDate"`
	// Picture automatically freezes the configuration of ad scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageAdFreezeConfig *string `pulumi:"imageAdFreezeConfig"`
	// Picture detection auto freeze switch. Value: true: auto freeze, false: not auto freeze.
	ImageAutoFreezeOpened *bool `pulumi:"imageAutoFreezeOpened"`
	// Picture automatic freezing live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageLiveFreezeConfig *string `pulumi:"imageLiveFreezeConfig"`
	// oss stock scan task detect images. true: scan images, false: do not scan images
	ImageOpened *bool `pulumi:"imageOpened"`
	// Picture automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImagePornFreezeConfig *string `pulumi:"imagePornFreezeConfig"`
	// The upper limit for scanning images in the oss stock scan task. The default value is 10000 images per Bucket.
	ImageScanLimit *int `pulumi:"imageScanLimit"`
	// The image moderation scenario included in the oss stock scan task.Valid values:
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	ImageScenes []string `pulumi:"imageScenes"`
	// The picture automatically freezes the configuration of terrorism scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageTerrorismFreezeConfig *string `pulumi:"imageTerrorismFreezeConfig"`
	// Whether the oss stock scan task detects images with file names without suffixes. true: Detect pictures with file names without suffixes, false: Do not detect pictures with file names without suffixes
	ScanImageNoFileType *bool `pulumi:"scanImageNoFileType"`
	// The start time of the file upload time range represents the files uploaded after scanning this time point.
	StartDate *string `pulumi:"startDate"`
	// The video automatically freezes the configuration of ad scenarios. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoAdFreezeConfig *string `pulumi:"videoAdFreezeConfig"`
	// Video detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	VideoAutoFreezeOpened *bool `pulumi:"videoAutoFreezeOpened"`
	// Resource attribute field representing the framing frequency. 1~60 seconds/frame, the default is 1 second/frame
	VideoFrameInterval *int `pulumi:"videoFrameInterval"`
	// Video automatic freeze live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoLiveFreezeConfig *string `pulumi:"videoLiveFreezeConfig"`
	// A resource attribute field that represents the upper limit of a single video frame cut. 5 to 20000 frames, the default is 200 frames
	VideoMaxFrames *int `pulumi:"videoMaxFrames"`
	// Resource property field representing the maximum size of a single video. 1~2048MB, the default is 500MB, more than not detected.
	VideoMaxSize *int `pulumi:"videoMaxSize"`
	// oss stock scan task detect video. true: scan video, false: do not scan video
	VideoOpened *bool `pulumi:"videoOpened"`
	// Video automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the video detection result.
	VideoPornFreezeConfig *string `pulumi:"videoPornFreezeConfig"`
	// The upper limit of video scanning in the oss stock scan task. The default value is 1000/Bucket.
	VideoScanLimit *int `pulumi:"videoScanLimit"`
	// The video detection scenarios included in the oss stock scan task.
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	// antispam: Video voice antispam
	VideoScenes *string `pulumi:"videoScenes"`
	// The video automatically freezes the configuration of terrorism scenes. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoTerrorismFreezeConfig *string `pulumi:"videoTerrorismFreezeConfig"`
	// Voice auto freeze configuration in video. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoVoiceAntispamFreezeConfig *string `pulumi:"videoVoiceAntispamFreezeConfig"`
}

type OssStockTaskState struct {
	// Voice auto freeze configuration. Example:{"type":"suggestion","value":"block,review"}. The results are frozen according to the suggestion in the speech detection results.
	AudioAntispamFreezeConfig pulumi.StringPtrInput
	// Audio detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	AudioAutoFreezeOpened pulumi.BoolPtrInput
	// Resource property field representing the maximum size of a single audio. 1~2048MB, the default is 200MB, more than not detected.
	AudioMaxSize pulumi.IntPtrInput
	// oss stock scan task detect audio. true: scan audio, false: do not scan audio
	AudioOpened pulumi.BoolPtrInput
	// The upper limit of voice scan in the oss stock scan task. The default value is 1000/Bucket.
	AudioScanLimit pulumi.IntPtrInput
	// The audio detection scenarios included in the oss stock scan task. Set the value to antispam.
	AudioScenes pulumi.StringPtrInput
	// Automatic freeze type. Value: acl: modify permissions, copy: Move files
	AutoFreezeType pulumi.StringPtrInput
	// Business scenarios used by the oss stock scan task
	BizType pulumi.StringPtrInput
	// The bucket configuration list of the oss stock scan task. Example:[{"Bucket":"bucket01","Selected":true,"Prefixes":["img/test_"],"Type":"exclude"}]
	Buckets pulumi.StringPtrInput
	// The ID of the primary key of the notification message bound to the oss stock scan task.
	CallbackId pulumi.IntPtrInput
	// The end time of the file upload time range indicates the scanning of files uploaded before this time point.
	EndDate pulumi.StringPtrInput
	// Picture automatically freezes the configuration of ad scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageAdFreezeConfig pulumi.StringPtrInput
	// Picture detection auto freeze switch. Value: true: auto freeze, false: not auto freeze.
	ImageAutoFreezeOpened pulumi.BoolPtrInput
	// Picture automatic freezing live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageLiveFreezeConfig pulumi.StringPtrInput
	// oss stock scan task detect images. true: scan images, false: do not scan images
	ImageOpened pulumi.BoolPtrInput
	// Picture automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImagePornFreezeConfig pulumi.StringPtrInput
	// The upper limit for scanning images in the oss stock scan task. The default value is 10000 images per Bucket.
	ImageScanLimit pulumi.IntPtrInput
	// The image moderation scenario included in the oss stock scan task.Valid values:
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	ImageScenes pulumi.StringArrayInput
	// The picture automatically freezes the configuration of terrorism scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageTerrorismFreezeConfig pulumi.StringPtrInput
	// Whether the oss stock scan task detects images with file names without suffixes. true: Detect pictures with file names without suffixes, false: Do not detect pictures with file names without suffixes
	ScanImageNoFileType pulumi.BoolPtrInput
	// The start time of the file upload time range represents the files uploaded after scanning this time point.
	StartDate pulumi.StringPtrInput
	// The video automatically freezes the configuration of ad scenarios. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoAdFreezeConfig pulumi.StringPtrInput
	// Video detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	VideoAutoFreezeOpened pulumi.BoolPtrInput
	// Resource attribute field representing the framing frequency. 1~60 seconds/frame, the default is 1 second/frame
	VideoFrameInterval pulumi.IntPtrInput
	// Video automatic freeze live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoLiveFreezeConfig pulumi.StringPtrInput
	// A resource attribute field that represents the upper limit of a single video frame cut. 5 to 20000 frames, the default is 200 frames
	VideoMaxFrames pulumi.IntPtrInput
	// Resource property field representing the maximum size of a single video. 1~2048MB, the default is 500MB, more than not detected.
	VideoMaxSize pulumi.IntPtrInput
	// oss stock scan task detect video. true: scan video, false: do not scan video
	VideoOpened pulumi.BoolPtrInput
	// Video automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the video detection result.
	VideoPornFreezeConfig pulumi.StringPtrInput
	// The upper limit of video scanning in the oss stock scan task. The default value is 1000/Bucket.
	VideoScanLimit pulumi.IntPtrInput
	// The video detection scenarios included in the oss stock scan task.
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	// antispam: Video voice antispam
	VideoScenes pulumi.StringPtrInput
	// The video automatically freezes the configuration of terrorism scenes. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoTerrorismFreezeConfig pulumi.StringPtrInput
	// Voice auto freeze configuration in video. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoVoiceAntispamFreezeConfig pulumi.StringPtrInput
}

func (OssStockTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*ossStockTaskState)(nil)).Elem()
}

type ossStockTaskArgs struct {
	// Voice auto freeze configuration. Example:{"type":"suggestion","value":"block,review"}. The results are frozen according to the suggestion in the speech detection results.
	AudioAntispamFreezeConfig *string `pulumi:"audioAntispamFreezeConfig"`
	// Audio detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	AudioAutoFreezeOpened *bool `pulumi:"audioAutoFreezeOpened"`
	// Resource property field representing the maximum size of a single audio. 1~2048MB, the default is 200MB, more than not detected.
	AudioMaxSize *int `pulumi:"audioMaxSize"`
	// oss stock scan task detect audio. true: scan audio, false: do not scan audio
	AudioOpened *bool `pulumi:"audioOpened"`
	// The upper limit of voice scan in the oss stock scan task. The default value is 1000/Bucket.
	AudioScanLimit *int `pulumi:"audioScanLimit"`
	// The audio detection scenarios included in the oss stock scan task. Set the value to antispam.
	AudioScenes *string `pulumi:"audioScenes"`
	// Automatic freeze type. Value: acl: modify permissions, copy: Move files
	AutoFreezeType *string `pulumi:"autoFreezeType"`
	// Business scenarios used by the oss stock scan task
	BizType *string `pulumi:"bizType"`
	// The bucket configuration list of the oss stock scan task. Example:[{"Bucket":"bucket01","Selected":true,"Prefixes":["img/test_"],"Type":"exclude"}]
	Buckets *string `pulumi:"buckets"`
	// The ID of the primary key of the notification message bound to the oss stock scan task.
	CallbackId *int `pulumi:"callbackId"`
	// The end time of the file upload time range indicates the scanning of files uploaded before this time point.
	EndDate *string `pulumi:"endDate"`
	// Picture automatically freezes the configuration of ad scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageAdFreezeConfig *string `pulumi:"imageAdFreezeConfig"`
	// Picture detection auto freeze switch. Value: true: auto freeze, false: not auto freeze.
	ImageAutoFreezeOpened *bool `pulumi:"imageAutoFreezeOpened"`
	// Picture automatic freezing live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageLiveFreezeConfig *string `pulumi:"imageLiveFreezeConfig"`
	// oss stock scan task detect images. true: scan images, false: do not scan images
	ImageOpened *bool `pulumi:"imageOpened"`
	// Picture automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImagePornFreezeConfig *string `pulumi:"imagePornFreezeConfig"`
	// The upper limit for scanning images in the oss stock scan task. The default value is 10000 images per Bucket.
	ImageScanLimit *int `pulumi:"imageScanLimit"`
	// The image moderation scenario included in the oss stock scan task.Valid values:
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	ImageScenes []string `pulumi:"imageScenes"`
	// The picture automatically freezes the configuration of terrorism scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageTerrorismFreezeConfig *string `pulumi:"imageTerrorismFreezeConfig"`
	// Whether the oss stock scan task detects images with file names without suffixes. true: Detect pictures with file names without suffixes, false: Do not detect pictures with file names without suffixes
	ScanImageNoFileType *bool `pulumi:"scanImageNoFileType"`
	// The start time of the file upload time range represents the files uploaded after scanning this time point.
	StartDate *string `pulumi:"startDate"`
	// The video automatically freezes the configuration of ad scenarios. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoAdFreezeConfig *string `pulumi:"videoAdFreezeConfig"`
	// Video detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	VideoAutoFreezeOpened *bool `pulumi:"videoAutoFreezeOpened"`
	// Resource attribute field representing the framing frequency. 1~60 seconds/frame, the default is 1 second/frame
	VideoFrameInterval *int `pulumi:"videoFrameInterval"`
	// Video automatic freeze live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoLiveFreezeConfig *string `pulumi:"videoLiveFreezeConfig"`
	// A resource attribute field that represents the upper limit of a single video frame cut. 5 to 20000 frames, the default is 200 frames
	VideoMaxFrames *int `pulumi:"videoMaxFrames"`
	// Resource property field representing the maximum size of a single video. 1~2048MB, the default is 500MB, more than not detected.
	VideoMaxSize *int `pulumi:"videoMaxSize"`
	// oss stock scan task detect video. true: scan video, false: do not scan video
	VideoOpened *bool `pulumi:"videoOpened"`
	// Video automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the video detection result.
	VideoPornFreezeConfig *string `pulumi:"videoPornFreezeConfig"`
	// The upper limit of video scanning in the oss stock scan task. The default value is 1000/Bucket.
	VideoScanLimit *int `pulumi:"videoScanLimit"`
	// The video detection scenarios included in the oss stock scan task.
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	// antispam: Video voice antispam
	VideoScenes *string `pulumi:"videoScenes"`
	// The video automatically freezes the configuration of terrorism scenes. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoTerrorismFreezeConfig *string `pulumi:"videoTerrorismFreezeConfig"`
	// Voice auto freeze configuration in video. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoVoiceAntispamFreezeConfig *string `pulumi:"videoVoiceAntispamFreezeConfig"`
}

// The set of arguments for constructing a OssStockTask resource.
type OssStockTaskArgs struct {
	// Voice auto freeze configuration. Example:{"type":"suggestion","value":"block,review"}. The results are frozen according to the suggestion in the speech detection results.
	AudioAntispamFreezeConfig pulumi.StringPtrInput
	// Audio detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	AudioAutoFreezeOpened pulumi.BoolPtrInput
	// Resource property field representing the maximum size of a single audio. 1~2048MB, the default is 200MB, more than not detected.
	AudioMaxSize pulumi.IntPtrInput
	// oss stock scan task detect audio. true: scan audio, false: do not scan audio
	AudioOpened pulumi.BoolPtrInput
	// The upper limit of voice scan in the oss stock scan task. The default value is 1000/Bucket.
	AudioScanLimit pulumi.IntPtrInput
	// The audio detection scenarios included in the oss stock scan task. Set the value to antispam.
	AudioScenes pulumi.StringPtrInput
	// Automatic freeze type. Value: acl: modify permissions, copy: Move files
	AutoFreezeType pulumi.StringPtrInput
	// Business scenarios used by the oss stock scan task
	BizType pulumi.StringPtrInput
	// The bucket configuration list of the oss stock scan task. Example:[{"Bucket":"bucket01","Selected":true,"Prefixes":["img/test_"],"Type":"exclude"}]
	Buckets pulumi.StringPtrInput
	// The ID of the primary key of the notification message bound to the oss stock scan task.
	CallbackId pulumi.IntPtrInput
	// The end time of the file upload time range indicates the scanning of files uploaded before this time point.
	EndDate pulumi.StringPtrInput
	// Picture automatically freezes the configuration of ad scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageAdFreezeConfig pulumi.StringPtrInput
	// Picture detection auto freeze switch. Value: true: auto freeze, false: not auto freeze.
	ImageAutoFreezeOpened pulumi.BoolPtrInput
	// Picture automatic freezing live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageLiveFreezeConfig pulumi.StringPtrInput
	// oss stock scan task detect images. true: scan images, false: do not scan images
	ImageOpened pulumi.BoolPtrInput
	// Picture automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImagePornFreezeConfig pulumi.StringPtrInput
	// The upper limit for scanning images in the oss stock scan task. The default value is 10000 images per Bucket.
	ImageScanLimit pulumi.IntPtrInput
	// The image moderation scenario included in the oss stock scan task.Valid values:
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	ImageScenes pulumi.StringArrayInput
	// The picture automatically freezes the configuration of terrorism scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
	ImageTerrorismFreezeConfig pulumi.StringPtrInput
	// Whether the oss stock scan task detects images with file names without suffixes. true: Detect pictures with file names without suffixes, false: Do not detect pictures with file names without suffixes
	ScanImageNoFileType pulumi.BoolPtrInput
	// The start time of the file upload time range represents the files uploaded after scanning this time point.
	StartDate pulumi.StringPtrInput
	// The video automatically freezes the configuration of ad scenarios. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoAdFreezeConfig pulumi.StringPtrInput
	// Video detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
	VideoAutoFreezeOpened pulumi.BoolPtrInput
	// Resource attribute field representing the framing frequency. 1~60 seconds/frame, the default is 1 second/frame
	VideoFrameInterval pulumi.IntPtrInput
	// Video automatic freeze live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoLiveFreezeConfig pulumi.StringPtrInput
	// A resource attribute field that represents the upper limit of a single video frame cut. 5 to 20000 frames, the default is 200 frames
	VideoMaxFrames pulumi.IntPtrInput
	// Resource property field representing the maximum size of a single video. 1~2048MB, the default is 500MB, more than not detected.
	VideoMaxSize pulumi.IntPtrInput
	// oss stock scan task detect video. true: scan video, false: do not scan video
	VideoOpened pulumi.BoolPtrInput
	// Video automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the video detection result.
	VideoPornFreezeConfig pulumi.StringPtrInput
	// The upper limit of video scanning in the oss stock scan task. The default value is 1000/Bucket.
	VideoScanLimit pulumi.IntPtrInput
	// The video detection scenarios included in the oss stock scan task.
	// porn: pornography detection
	// terrorism: terrorist content detection
	// ad: ad violation detection
	// live: undesirable scene detection
	// antispam: Video voice antispam
	VideoScenes pulumi.StringPtrInput
	// The video automatically freezes the configuration of terrorism scenes. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoTerrorismFreezeConfig pulumi.StringPtrInput
	// Voice auto freeze configuration in video. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
	VideoVoiceAntispamFreezeConfig pulumi.StringPtrInput
}

func (OssStockTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ossStockTaskArgs)(nil)).Elem()
}

type OssStockTaskInput interface {
	pulumi.Input

	ToOssStockTaskOutput() OssStockTaskOutput
	ToOssStockTaskOutputWithContext(ctx context.Context) OssStockTaskOutput
}

func (*OssStockTask) ElementType() reflect.Type {
	return reflect.TypeOf((**OssStockTask)(nil)).Elem()
}

func (i *OssStockTask) ToOssStockTaskOutput() OssStockTaskOutput {
	return i.ToOssStockTaskOutputWithContext(context.Background())
}

func (i *OssStockTask) ToOssStockTaskOutputWithContext(ctx context.Context) OssStockTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssStockTaskOutput)
}

// OssStockTaskArrayInput is an input type that accepts OssStockTaskArray and OssStockTaskArrayOutput values.
// You can construct a concrete instance of `OssStockTaskArrayInput` via:
//
//	OssStockTaskArray{ OssStockTaskArgs{...} }
type OssStockTaskArrayInput interface {
	pulumi.Input

	ToOssStockTaskArrayOutput() OssStockTaskArrayOutput
	ToOssStockTaskArrayOutputWithContext(context.Context) OssStockTaskArrayOutput
}

type OssStockTaskArray []OssStockTaskInput

func (OssStockTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OssStockTask)(nil)).Elem()
}

func (i OssStockTaskArray) ToOssStockTaskArrayOutput() OssStockTaskArrayOutput {
	return i.ToOssStockTaskArrayOutputWithContext(context.Background())
}

func (i OssStockTaskArray) ToOssStockTaskArrayOutputWithContext(ctx context.Context) OssStockTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssStockTaskArrayOutput)
}

// OssStockTaskMapInput is an input type that accepts OssStockTaskMap and OssStockTaskMapOutput values.
// You can construct a concrete instance of `OssStockTaskMapInput` via:
//
//	OssStockTaskMap{ "key": OssStockTaskArgs{...} }
type OssStockTaskMapInput interface {
	pulumi.Input

	ToOssStockTaskMapOutput() OssStockTaskMapOutput
	ToOssStockTaskMapOutputWithContext(context.Context) OssStockTaskMapOutput
}

type OssStockTaskMap map[string]OssStockTaskInput

func (OssStockTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OssStockTask)(nil)).Elem()
}

func (i OssStockTaskMap) ToOssStockTaskMapOutput() OssStockTaskMapOutput {
	return i.ToOssStockTaskMapOutputWithContext(context.Background())
}

func (i OssStockTaskMap) ToOssStockTaskMapOutputWithContext(ctx context.Context) OssStockTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssStockTaskMapOutput)
}

type OssStockTaskOutput struct{ *pulumi.OutputState }

func (OssStockTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OssStockTask)(nil)).Elem()
}

func (o OssStockTaskOutput) ToOssStockTaskOutput() OssStockTaskOutput {
	return o
}

func (o OssStockTaskOutput) ToOssStockTaskOutputWithContext(ctx context.Context) OssStockTaskOutput {
	return o
}

// Voice auto freeze configuration. Example:{"type":"suggestion","value":"block,review"}. The results are frozen according to the suggestion in the speech detection results.
func (o OssStockTaskOutput) AudioAntispamFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.AudioAntispamFreezeConfig }).(pulumi.StringPtrOutput)
}

// Audio detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
func (o OssStockTaskOutput) AudioAutoFreezeOpened() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.AudioAutoFreezeOpened }).(pulumi.BoolPtrOutput)
}

// Resource property field representing the maximum size of a single audio. 1~2048MB, the default is 200MB, more than not detected.
func (o OssStockTaskOutput) AudioMaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.AudioMaxSize }).(pulumi.IntPtrOutput)
}

// oss stock scan task detect audio. true: scan audio, false: do not scan audio
func (o OssStockTaskOutput) AudioOpened() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.AudioOpened }).(pulumi.BoolPtrOutput)
}

// The upper limit of voice scan in the oss stock scan task. The default value is 1000/Bucket.
func (o OssStockTaskOutput) AudioScanLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.AudioScanLimit }).(pulumi.IntPtrOutput)
}

// The audio detection scenarios included in the oss stock scan task. Set the value to antispam.
func (o OssStockTaskOutput) AudioScenes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.AudioScenes }).(pulumi.StringPtrOutput)
}

// Automatic freeze type. Value: acl: modify permissions, copy: Move files
func (o OssStockTaskOutput) AutoFreezeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.AutoFreezeType }).(pulumi.StringPtrOutput)
}

// Business scenarios used by the oss stock scan task
func (o OssStockTaskOutput) BizType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.BizType }).(pulumi.StringPtrOutput)
}

// The bucket configuration list of the oss stock scan task. Example:[{"Bucket":"bucket01","Selected":true,"Prefixes":["img/test_"],"Type":"exclude"}]
func (o OssStockTaskOutput) Buckets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.Buckets }).(pulumi.StringPtrOutput)
}

// The ID of the primary key of the notification message bound to the oss stock scan task.
func (o OssStockTaskOutput) CallbackId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.CallbackId }).(pulumi.IntPtrOutput)
}

// The end time of the file upload time range indicates the scanning of files uploaded before this time point.
func (o OssStockTaskOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.EndDate }).(pulumi.StringPtrOutput)
}

// Picture automatically freezes the configuration of ad scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
func (o OssStockTaskOutput) ImageAdFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.ImageAdFreezeConfig }).(pulumi.StringPtrOutput)
}

// Picture detection auto freeze switch. Value: true: auto freeze, false: not auto freeze.
func (o OssStockTaskOutput) ImageAutoFreezeOpened() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.ImageAutoFreezeOpened }).(pulumi.BoolPtrOutput)
}

// Picture automatic freezing live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The result will be frozen according to the suggestion in the picture detection result.
func (o OssStockTaskOutput) ImageLiveFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.ImageLiveFreezeConfig }).(pulumi.StringPtrOutput)
}

// oss stock scan task detect images. true: scan images, false: do not scan images
func (o OssStockTaskOutput) ImageOpened() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.ImageOpened }).(pulumi.BoolPtrOutput)
}

// Picture automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
func (o OssStockTaskOutput) ImagePornFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.ImagePornFreezeConfig }).(pulumi.StringPtrOutput)
}

// The upper limit for scanning images in the oss stock scan task. The default value is 10000 images per Bucket.
func (o OssStockTaskOutput) ImageScanLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.ImageScanLimit }).(pulumi.IntPtrOutput)
}

// The image moderation scenario included in the oss stock scan task.Valid values:
// porn: pornography detection
// terrorism: terrorist content detection
// ad: ad violation detection
// live: undesirable scene detection
func (o OssStockTaskOutput) ImageScenes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringArrayOutput { return v.ImageScenes }).(pulumi.StringArrayOutput)
}

// The picture automatically freezes the configuration of terrorism scenes. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the picture detection result.
func (o OssStockTaskOutput) ImageTerrorismFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.ImageTerrorismFreezeConfig }).(pulumi.StringPtrOutput)
}

// Whether the oss stock scan task detects images with file names without suffixes. true: Detect pictures with file names without suffixes, false: Do not detect pictures with file names without suffixes
func (o OssStockTaskOutput) ScanImageNoFileType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.ScanImageNoFileType }).(pulumi.BoolPtrOutput)
}

// The start time of the file upload time range represents the files uploaded after scanning this time point.
func (o OssStockTaskOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.StartDate }).(pulumi.StringPtrOutput)
}

// The video automatically freezes the configuration of ad scenarios. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
func (o OssStockTaskOutput) VideoAdFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.VideoAdFreezeConfig }).(pulumi.StringPtrOutput)
}

// Video detection auto freeze switch. Value: true: automatically freeze, false: not automatically freeze.
func (o OssStockTaskOutput) VideoAutoFreezeOpened() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.VideoAutoFreezeOpened }).(pulumi.BoolPtrOutput)
}

// Resource attribute field representing the framing frequency. 1~60 seconds/frame, the default is 1 second/frame
func (o OssStockTaskOutput) VideoFrameInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.VideoFrameInterval }).(pulumi.IntPtrOutput)
}

// Video automatic freeze live scene configuration. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
func (o OssStockTaskOutput) VideoLiveFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.VideoLiveFreezeConfig }).(pulumi.StringPtrOutput)
}

// A resource attribute field that represents the upper limit of a single video frame cut. 5 to 20000 frames, the default is 200 frames
func (o OssStockTaskOutput) VideoMaxFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.VideoMaxFrames }).(pulumi.IntPtrOutput)
}

// Resource property field representing the maximum size of a single video. 1~2048MB, the default is 500MB, more than not detected.
func (o OssStockTaskOutput) VideoMaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.VideoMaxSize }).(pulumi.IntPtrOutput)
}

// oss stock scan task detect video. true: scan video, false: do not scan video
func (o OssStockTaskOutput) VideoOpened() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.BoolPtrOutput { return v.VideoOpened }).(pulumi.BoolPtrOutput)
}

// Video automatic freezing porn scene configuration. Example: {"type": "suggestion", "value": "block,review"}. The result will be frozen according to the suggestion in the video detection result.
func (o OssStockTaskOutput) VideoPornFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.VideoPornFreezeConfig }).(pulumi.StringPtrOutput)
}

// The upper limit of video scanning in the oss stock scan task. The default value is 1000/Bucket.
func (o OssStockTaskOutput) VideoScanLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.IntPtrOutput { return v.VideoScanLimit }).(pulumi.IntPtrOutput)
}

// The video detection scenarios included in the oss stock scan task.
// porn: pornography detection
// terrorism: terrorist content detection
// ad: ad violation detection
// live: undesirable scene detection
// antispam: Video voice antispam
func (o OssStockTaskOutput) VideoScenes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.VideoScenes }).(pulumi.StringPtrOutput)
}

// The video automatically freezes the configuration of terrorism scenes. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
func (o OssStockTaskOutput) VideoTerrorismFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.VideoTerrorismFreezeConfig }).(pulumi.StringPtrOutput)
}

// Voice auto freeze configuration in video. Example:{"type":"suggestion","value":"block,review"}. The results will be frozen according to the suggestion in the video detection results.
func (o OssStockTaskOutput) VideoVoiceAntispamFreezeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssStockTask) pulumi.StringPtrOutput { return v.VideoVoiceAntispamFreezeConfig }).(pulumi.StringPtrOutput)
}

type OssStockTaskArrayOutput struct{ *pulumi.OutputState }

func (OssStockTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OssStockTask)(nil)).Elem()
}

func (o OssStockTaskArrayOutput) ToOssStockTaskArrayOutput() OssStockTaskArrayOutput {
	return o
}

func (o OssStockTaskArrayOutput) ToOssStockTaskArrayOutputWithContext(ctx context.Context) OssStockTaskArrayOutput {
	return o
}

func (o OssStockTaskArrayOutput) Index(i pulumi.IntInput) OssStockTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OssStockTask {
		return vs[0].([]*OssStockTask)[vs[1].(int)]
	}).(OssStockTaskOutput)
}

type OssStockTaskMapOutput struct{ *pulumi.OutputState }

func (OssStockTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OssStockTask)(nil)).Elem()
}

func (o OssStockTaskMapOutput) ToOssStockTaskMapOutput() OssStockTaskMapOutput {
	return o
}

func (o OssStockTaskMapOutput) ToOssStockTaskMapOutputWithContext(ctx context.Context) OssStockTaskMapOutput {
	return o
}

func (o OssStockTaskMapOutput) MapIndex(k pulumi.StringInput) OssStockTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OssStockTask {
		return vs[0].(map[string]*OssStockTask)[vs[1].(string)]
	}).(OssStockTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OssStockTaskInput)(nil)).Elem(), &OssStockTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*OssStockTaskArrayInput)(nil)).Elem(), OssStockTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OssStockTaskMapInput)(nil)).Elem(), OssStockTaskMap{})
	pulumi.RegisterOutputType(OssStockTaskOutput{})
	pulumi.RegisterOutputType(OssStockTaskArrayOutput{})
	pulumi.RegisterOutputType(OssStockTaskMapOutput{})
}
