// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aligreen

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Aligreen Callback resource.
//
// Detection Result Callback.
//
// For information about Aligreen Callback and how to use it, see [What is Callback](https://www.alibabacloud.com/help/en/).
//
// > **NOTE:** Available since v1.228.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/aligreen"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := aligreen.NewCallback(ctx, "default", &aligreen.CallbackArgs{
//				CallbackUrl:  pulumi.String("https://www.aliyun.com"),
//				CryptType:    pulumi.Int(0),
//				CallbackName: pulumi.String(name),
//				CallbackTypes: pulumi.StringArray{
//					pulumi.String("machineScan"),
//					pulumi.String("selfAudit"),
//					pulumi.String("example"),
//				},
//				CallbackSuggestions: pulumi.StringArray{
//					pulumi.String("block"),
//					pulumi.String("review"),
//					pulumi.String("pass"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Aligreen Callback can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:aligreen/callback:Callback example <id>
// ```
type Callback struct {
	pulumi.CustomResourceState

	// The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
	CallbackName pulumi.StringOutput `pulumi:"callbackName"`
	// List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
	CallbackSuggestions pulumi.StringArrayOutput `pulumi:"callbackSuggestions"`
	// A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
	CallbackTypes pulumi.StringArrayOutput `pulumi:"callbackTypes"`
	// The detection result will be called back to the url.
	CallbackUrl pulumi.StringOutput `pulumi:"callbackUrl"`
	// The creation time of the Callback.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
	CryptType pulumi.IntPtrOutput `pulumi:"cryptType"`
}

// NewCallback registers a new resource with the given unique name, arguments, and options.
func NewCallback(ctx *pulumi.Context,
	name string, args *CallbackArgs, opts ...pulumi.ResourceOption) (*Callback, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CallbackName == nil {
		return nil, errors.New("invalid value for required argument 'CallbackName'")
	}
	if args.CallbackSuggestions == nil {
		return nil, errors.New("invalid value for required argument 'CallbackSuggestions'")
	}
	if args.CallbackTypes == nil {
		return nil, errors.New("invalid value for required argument 'CallbackTypes'")
	}
	if args.CallbackUrl == nil {
		return nil, errors.New("invalid value for required argument 'CallbackUrl'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Callback
	err := ctx.RegisterResource("alicloud:aligreen/callback:Callback", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCallback gets an existing Callback resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCallback(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CallbackState, opts ...pulumi.ResourceOption) (*Callback, error) {
	var resource Callback
	err := ctx.ReadResource("alicloud:aligreen/callback:Callback", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Callback resources.
type callbackState struct {
	// The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
	CallbackName *string `pulumi:"callbackName"`
	// List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
	CallbackSuggestions []string `pulumi:"callbackSuggestions"`
	// A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
	CallbackTypes []string `pulumi:"callbackTypes"`
	// The detection result will be called back to the url.
	CallbackUrl *string `pulumi:"callbackUrl"`
	// The creation time of the Callback.
	CreateTime *string `pulumi:"createTime"`
	// The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
	CryptType *int `pulumi:"cryptType"`
}

type CallbackState struct {
	// The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
	CallbackName pulumi.StringPtrInput
	// List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
	CallbackSuggestions pulumi.StringArrayInput
	// A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
	CallbackTypes pulumi.StringArrayInput
	// The detection result will be called back to the url.
	CallbackUrl pulumi.StringPtrInput
	// The creation time of the Callback.
	CreateTime pulumi.StringPtrInput
	// The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
	CryptType pulumi.IntPtrInput
}

func (CallbackState) ElementType() reflect.Type {
	return reflect.TypeOf((*callbackState)(nil)).Elem()
}

type callbackArgs struct {
	// The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
	CallbackName string `pulumi:"callbackName"`
	// List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
	CallbackSuggestions []string `pulumi:"callbackSuggestions"`
	// A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
	CallbackTypes []string `pulumi:"callbackTypes"`
	// The detection result will be called back to the url.
	CallbackUrl string `pulumi:"callbackUrl"`
	// The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
	CryptType *int `pulumi:"cryptType"`
}

// The set of arguments for constructing a Callback resource.
type CallbackArgs struct {
	// The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
	CallbackName pulumi.StringInput
	// List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
	CallbackSuggestions pulumi.StringArrayInput
	// A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
	CallbackTypes pulumi.StringArrayInput
	// The detection result will be called back to the url.
	CallbackUrl pulumi.StringInput
	// The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
	CryptType pulumi.IntPtrInput
}

func (CallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*callbackArgs)(nil)).Elem()
}

type CallbackInput interface {
	pulumi.Input

	ToCallbackOutput() CallbackOutput
	ToCallbackOutputWithContext(ctx context.Context) CallbackOutput
}

func (*Callback) ElementType() reflect.Type {
	return reflect.TypeOf((**Callback)(nil)).Elem()
}

func (i *Callback) ToCallbackOutput() CallbackOutput {
	return i.ToCallbackOutputWithContext(context.Background())
}

func (i *Callback) ToCallbackOutputWithContext(ctx context.Context) CallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CallbackOutput)
}

// CallbackArrayInput is an input type that accepts CallbackArray and CallbackArrayOutput values.
// You can construct a concrete instance of `CallbackArrayInput` via:
//
//	CallbackArray{ CallbackArgs{...} }
type CallbackArrayInput interface {
	pulumi.Input

	ToCallbackArrayOutput() CallbackArrayOutput
	ToCallbackArrayOutputWithContext(context.Context) CallbackArrayOutput
}

type CallbackArray []CallbackInput

func (CallbackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Callback)(nil)).Elem()
}

func (i CallbackArray) ToCallbackArrayOutput() CallbackArrayOutput {
	return i.ToCallbackArrayOutputWithContext(context.Background())
}

func (i CallbackArray) ToCallbackArrayOutputWithContext(ctx context.Context) CallbackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CallbackArrayOutput)
}

// CallbackMapInput is an input type that accepts CallbackMap and CallbackMapOutput values.
// You can construct a concrete instance of `CallbackMapInput` via:
//
//	CallbackMap{ "key": CallbackArgs{...} }
type CallbackMapInput interface {
	pulumi.Input

	ToCallbackMapOutput() CallbackMapOutput
	ToCallbackMapOutputWithContext(context.Context) CallbackMapOutput
}

type CallbackMap map[string]CallbackInput

func (CallbackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Callback)(nil)).Elem()
}

func (i CallbackMap) ToCallbackMapOutput() CallbackMapOutput {
	return i.ToCallbackMapOutputWithContext(context.Background())
}

func (i CallbackMap) ToCallbackMapOutputWithContext(ctx context.Context) CallbackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CallbackMapOutput)
}

type CallbackOutput struct{ *pulumi.OutputState }

func (CallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Callback)(nil)).Elem()
}

func (o CallbackOutput) ToCallbackOutput() CallbackOutput {
	return o
}

func (o CallbackOutput) ToCallbackOutputWithContext(ctx context.Context) CallbackOutput {
	return o
}

// The Callback name defined by the customer. It can contain no more than 20 characters in Chinese, English, underscore (_), and digits.
func (o CallbackOutput) CallbackName() pulumi.StringOutput {
	return o.ApplyT(func(v *Callback) pulumi.StringOutput { return v.CallbackName }).(pulumi.StringOutput)
}

// List of audit results supported by message notification. Value: block: confirmed violation, review: Suspected violation, review: normal.
func (o CallbackOutput) CallbackSuggestions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Callback) pulumi.StringArrayOutput { return v.CallbackSuggestions }).(pulumi.StringArrayOutput)
}

// A list of Callback types. Value: machineScan: Machine audit result notification, selfAudit: self-service audit notification.
func (o CallbackOutput) CallbackTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Callback) pulumi.StringArrayOutput { return v.CallbackTypes }).(pulumi.StringArrayOutput)
}

// The detection result will be called back to the url.
func (o CallbackOutput) CallbackUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Callback) pulumi.StringOutput { return v.CallbackUrl }).(pulumi.StringOutput)
}

// The creation time of the Callback.
func (o CallbackOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Callback) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The encryption algorithm is used to verify that the callback request is sent by the Aliyun Green Service to your business service. Value: 0:SHA256,1: SM3.
func (o CallbackOutput) CryptType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Callback) pulumi.IntPtrOutput { return v.CryptType }).(pulumi.IntPtrOutput)
}

type CallbackArrayOutput struct{ *pulumi.OutputState }

func (CallbackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Callback)(nil)).Elem()
}

func (o CallbackArrayOutput) ToCallbackArrayOutput() CallbackArrayOutput {
	return o
}

func (o CallbackArrayOutput) ToCallbackArrayOutputWithContext(ctx context.Context) CallbackArrayOutput {
	return o
}

func (o CallbackArrayOutput) Index(i pulumi.IntInput) CallbackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Callback {
		return vs[0].([]*Callback)[vs[1].(int)]
	}).(CallbackOutput)
}

type CallbackMapOutput struct{ *pulumi.OutputState }

func (CallbackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Callback)(nil)).Elem()
}

func (o CallbackMapOutput) ToCallbackMapOutput() CallbackMapOutput {
	return o
}

func (o CallbackMapOutput) ToCallbackMapOutputWithContext(ctx context.Context) CallbackMapOutput {
	return o
}

func (o CallbackMapOutput) MapIndex(k pulumi.StringInput) CallbackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Callback {
		return vs[0].(map[string]*Callback)[vs[1].(string)]
	}).(CallbackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CallbackInput)(nil)).Elem(), &Callback{})
	pulumi.RegisterInputType(reflect.TypeOf((*CallbackArrayInput)(nil)).Elem(), CallbackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CallbackMapInput)(nil)).Elem(), CallbackMap{})
	pulumi.RegisterOutputType(CallbackOutput{})
	pulumi.RegisterOutputType(CallbackArrayOutput{})
	pulumi.RegisterOutputType(CallbackMapOutput{})
}
