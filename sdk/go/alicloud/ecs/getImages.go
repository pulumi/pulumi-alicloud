// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides available image resources. It contains user's private images, system images provided by Alibaba Cloud,
// other public images and the ones available on the image market.
func GetImages(ctx *pulumi.Context, args *GetImagesArgs, opts ...pulumi.InvokeOption) (*GetImagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImagesResult
	err := ctx.Invoke("alicloud:ecs/getImages:getImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImages.
type GetImagesArgs struct {
	// The scenario in which the image will be used. Default value: `CreateEcs`. Valid values:
	ActionType *string `pulumi:"actionType"`
	// The image architecture. Valid values: `i386` and `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Specifies whether the image is running on an ECS instance. Default value: `false`. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// The name of the image family. You can set this parameter to query images of the specified image family. This parameter is empty by default.
	ImageFamily *string `pulumi:"imageFamily"`
	// The ID of the image.
	ImageId *string `pulumi:"imageId"`
	// The name of the image.
	ImageName *string `pulumi:"imageName"`
	// The ID of the Alibaba Cloud account to which the image belongs. This parameter takes effect only when you query shared images or community images.
	ImageOwnerId *string `pulumi:"imageOwnerId"`
	// The instance type for which the image can be used.
	InstanceType *string `pulumi:"instanceType"`
	// Specifies whether the image supports cloud-init.
	IsSupportCloudInit *bool `pulumi:"isSupportCloudInit"`
	// Specifies whether the image can be used on I/O optimized instances.
	IsSupportIoOptimized *bool `pulumi:"isSupportIoOptimized"`
	// If more than one result are returned, select the most recent one.
	MostRecent *bool `pulumi:"mostRecent"`
	// A regex string to filter resulting images by name.
	NameRegex *string `pulumi:"nameRegex"`
	// The operating system type of the image. Valid values: `windows` and `linux`.
	OsType *string `pulumi:"osType"`
	// File name where to save data source results (after running `pulumi preview`).
	//
	// > **NOTE:** At least one of the `nameRegex`, `mostRecent` and `owners` must be set.
	OutputFile *string `pulumi:"outputFile"`
	// Filter results by a specific image owner. Valid items are `system`, `self`, `others`, `marketplace`.
	Owners *string `pulumi:"owners"`
	// The ID of the resource group to which the custom image belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the snapshot used to create the custom image.
	SnapshotId *string `pulumi:"snapshotId"`
	// The status of the image. The following values are available, Separate multiple parameter values by using commas (,). Default value: `Available`. Valid values:
	Status *string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// Specifies whether to check the validity of the request without actually making the request. Valid values:
	Usage *string `pulumi:"usage"`
}

// A collection of values returned by getImages.
type GetImagesResult struct {
	ActionType *string `pulumi:"actionType"`
	// Platform type of the image system: i386 or x86_64.
	Architecture *string `pulumi:"architecture"`
	DryRun       *bool   `pulumi:"dryRun"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of image IDs.
	Ids          []string `pulumi:"ids"`
	ImageFamily  *string  `pulumi:"imageFamily"`
	ImageId      *string  `pulumi:"imageId"`
	ImageName    *string  `pulumi:"imageName"`
	ImageOwnerId *string  `pulumi:"imageOwnerId"`
	// A list of images. Each element contains the following attributes:
	Images               []GetImagesImage `pulumi:"images"`
	InstanceType         *string          `pulumi:"instanceType"`
	IsSupportCloudInit   *bool            `pulumi:"isSupportCloudInit"`
	IsSupportIoOptimized *bool            `pulumi:"isSupportIoOptimized"`
	MostRecent           *bool            `pulumi:"mostRecent"`
	NameRegex            *string          `pulumi:"nameRegex"`
	OsType               *string          `pulumi:"osType"`
	OutputFile           *string          `pulumi:"outputFile"`
	Owners               *string          `pulumi:"owners"`
	ResourceGroupId      *string          `pulumi:"resourceGroupId"`
	// Snapshot ID.
	SnapshotId *string `pulumi:"snapshotId"`
	// Status of the image. Possible values: `UnAvailable`, `Available`, `Creating` and `CreateFailed`.
	Status *string                `pulumi:"status"`
	Tags   map[string]interface{} `pulumi:"tags"`
	Usage  *string                `pulumi:"usage"`
}

func GetImagesOutput(ctx *pulumi.Context, args GetImagesOutputArgs, opts ...pulumi.InvokeOption) GetImagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImagesResult, error) {
			args := v.(GetImagesArgs)
			r, err := GetImages(ctx, &args, opts...)
			var s GetImagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImagesResultOutput)
}

// A collection of arguments for invoking getImages.
type GetImagesOutputArgs struct {
	// The scenario in which the image will be used. Default value: `CreateEcs`. Valid values:
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// The image architecture. Valid values: `i386` and `x8664`.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// Specifies whether the image is running on an ECS instance. Default value: `false`. Valid values:
	DryRun pulumi.BoolPtrInput `pulumi:"dryRun"`
	// The name of the image family. You can set this parameter to query images of the specified image family. This parameter is empty by default.
	ImageFamily pulumi.StringPtrInput `pulumi:"imageFamily"`
	// The ID of the image.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The name of the image.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The ID of the Alibaba Cloud account to which the image belongs. This parameter takes effect only when you query shared images or community images.
	ImageOwnerId pulumi.StringPtrInput `pulumi:"imageOwnerId"`
	// The instance type for which the image can be used.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Specifies whether the image supports cloud-init.
	IsSupportCloudInit pulumi.BoolPtrInput `pulumi:"isSupportCloudInit"`
	// Specifies whether the image can be used on I/O optimized instances.
	IsSupportIoOptimized pulumi.BoolPtrInput `pulumi:"isSupportIoOptimized"`
	// If more than one result are returned, select the most recent one.
	MostRecent pulumi.BoolPtrInput `pulumi:"mostRecent"`
	// A regex string to filter resulting images by name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The operating system type of the image. Valid values: `windows` and `linux`.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// File name where to save data source results (after running `pulumi preview`).
	//
	// > **NOTE:** At least one of the `nameRegex`, `mostRecent` and `owners` must be set.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Filter results by a specific image owner. Valid items are `system`, `self`, `others`, `marketplace`.
	Owners pulumi.StringPtrInput `pulumi:"owners"`
	// The ID of the resource group to which the custom image belongs.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The ID of the snapshot used to create the custom image.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The status of the image. The following values are available, Separate multiple parameter values by using commas (,). Default value: `Available`. Valid values:
	Status pulumi.StringPtrInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies whether to check the validity of the request without actually making the request. Valid values:
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (GetImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesArgs)(nil)).Elem()
}

// A collection of values returned by getImages.
type GetImagesResultOutput struct{ *pulumi.OutputState }

func (GetImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesResult)(nil)).Elem()
}

func (o GetImagesResultOutput) ToGetImagesResultOutput() GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToGetImagesResultOutputWithContext(ctx context.Context) GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesResult] {
	return pulumix.Output[GetImagesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesResultOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Platform type of the image system: i386 or x86_64.
func (o GetImagesResultOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *bool { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of image IDs.
func (o GetImagesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetImagesResultOutput) ImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.ImageFamily }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) ImageOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.ImageOwnerId }).(pulumi.StringPtrOutput)
}

// A list of images. Each element contains the following attributes:
func (o GetImagesResultOutput) Images() GetImagesImageArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesImage { return v.Images }).(GetImagesImageArrayOutput)
}

func (o GetImagesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) IsSupportCloudInit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *bool { return v.IsSupportCloudInit }).(pulumi.BoolPtrOutput)
}

func (o GetImagesResultOutput) IsSupportIoOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *bool { return v.IsSupportIoOptimized }).(pulumi.BoolPtrOutput)
}

func (o GetImagesResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o GetImagesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) Owners() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.Owners }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// Snapshot ID.
func (o GetImagesResultOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Status of the image. Possible values: `UnAvailable`, `Available`, `Creating` and `CreateFailed`.
func (o GetImagesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetImagesResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetImagesResultOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagesResultOutput{})
}
