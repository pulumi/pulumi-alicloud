// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a EIP Segment Address resource.
//
// For information about EIP Segment Address and how to use it, see [What is Segment Address](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/allocateeipsegmentaddress).
//
// > **NOTE:** Available since v1.207.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := ecs.NewEipSegmentAddress(ctx, "default", &ecs.EipSegmentAddressArgs{
//				Bandwidth:          pulumi.String("5"),
//				EipMask:            pulumi.String("28"),
//				InternetChargeType: pulumi.String("PayByBandwidth"),
//				Isp:                pulumi.String("BGP"),
//				Netmode:            pulumi.String("public"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EIP Segment Address can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ecs/eipSegmentAddress:EipSegmentAddress example <id>
// ```
type EipSegmentAddress struct {
	pulumi.CustomResourceState

	// The peak bandwidth of the EIP. Unit: Mbps. When the value of instancargetype is PostPaid and the value of InternetChargeType is PayByBandwidth, the range of Bandwidth is 1 to 500. If the value of instancargetype is PostPaid and the value of InternetChargeType is PayByTraffic, the range of Bandwidth is 1 to 200. When instancargetype is set to PrePaid, the range of Bandwidth is 1 to 1000. The default value is 5 Mbps.
	Bandwidth pulumi.StringPtrOutput `pulumi:"bandwidth"`
	// The time when the contiguous Elastic IP address group was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Mask of consecutive EIPs. Value:28: For a single call, the system will allocate 16 consecutive EIPs.27: For a single call, the system will allocate 32 consecutive EIPs.26: For a single call, the system will allocate 64 consecutive EIPs.25: For a single call, the system will allocate 128 consecutive EIPs.24: For a single call, the system will allocate 256 consecutive EIPs.
	EipMask pulumi.StringOutput `pulumi:"eipMask"`
	// Continuous EIP billing method, valid values:
	// - **PayByBandwidth** (default): Billing based on fixed bandwidth.
	// - **PayByTraffic**: Billing by usage flow.
	InternetChargeType pulumi.StringPtrOutput `pulumi:"internetChargeType"`
	// Line type. Valid values:
	// - **BGP** (default):BGP (multi-line) line. BGP (multi-line) EIP is supported in all regions.
	// - **BGP_PRO** :BGP (multi-line)_boutique line. Currently, only Hong Kong, Singapore, Japan (Tokyo), Malaysia (Kuala Lumpur), the Philippines (Manila), Indonesia (Jakarta), and Thailand (Bangkok) regions support BGP (multi-line)_boutique route EIP.
	//   For more information about BGP (multi-line) lines and BGP (multi-line) premium lines, see EIP line types.
	//   If you are a whitelist user with single-line bandwidth, you can also select the following types:
	// - **ChinaTelecom** : China Telecom
	// - **ChinaUnicom** : China Unicom
	// - **ChinaMobile** : China Mobile
	// - **ChinaTelecom_L2** : China Telecom L2
	// - **ChinaUnicom_L2** : China Unicom L2
	// - **ChinaMobile_L2** : China Mobile L2
	//   If you are a user of Hangzhou Financial Cloud, this field is required. The value is `BGP_FinanceCloud`.
	Isp pulumi.StringPtrOutput `pulumi:"isp"`
	// The network type. Set the value to **public**.
	Netmode pulumi.StringPtrOutput `pulumi:"netmode"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewEipSegmentAddress registers a new resource with the given unique name, arguments, and options.
func NewEipSegmentAddress(ctx *pulumi.Context,
	name string, args *EipSegmentAddressArgs, opts ...pulumi.ResourceOption) (*EipSegmentAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EipMask == nil {
		return nil, errors.New("invalid value for required argument 'EipMask'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EipSegmentAddress
	err := ctx.RegisterResource("alicloud:ecs/eipSegmentAddress:EipSegmentAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEipSegmentAddress gets an existing EipSegmentAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEipSegmentAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipSegmentAddressState, opts ...pulumi.ResourceOption) (*EipSegmentAddress, error) {
	var resource EipSegmentAddress
	err := ctx.ReadResource("alicloud:ecs/eipSegmentAddress:EipSegmentAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EipSegmentAddress resources.
type eipSegmentAddressState struct {
	// The peak bandwidth of the EIP. Unit: Mbps. When the value of instancargetype is PostPaid and the value of InternetChargeType is PayByBandwidth, the range of Bandwidth is 1 to 500. If the value of instancargetype is PostPaid and the value of InternetChargeType is PayByTraffic, the range of Bandwidth is 1 to 200. When instancargetype is set to PrePaid, the range of Bandwidth is 1 to 1000. The default value is 5 Mbps.
	Bandwidth *string `pulumi:"bandwidth"`
	// The time when the contiguous Elastic IP address group was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	CreateTime *string `pulumi:"createTime"`
	// Mask of consecutive EIPs. Value:28: For a single call, the system will allocate 16 consecutive EIPs.27: For a single call, the system will allocate 32 consecutive EIPs.26: For a single call, the system will allocate 64 consecutive EIPs.25: For a single call, the system will allocate 128 consecutive EIPs.24: For a single call, the system will allocate 256 consecutive EIPs.
	EipMask *string `pulumi:"eipMask"`
	// Continuous EIP billing method, valid values:
	// - **PayByBandwidth** (default): Billing based on fixed bandwidth.
	// - **PayByTraffic**: Billing by usage flow.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// Line type. Valid values:
	// - **BGP** (default):BGP (multi-line) line. BGP (multi-line) EIP is supported in all regions.
	// - **BGP_PRO** :BGP (multi-line)_boutique line. Currently, only Hong Kong, Singapore, Japan (Tokyo), Malaysia (Kuala Lumpur), the Philippines (Manila), Indonesia (Jakarta), and Thailand (Bangkok) regions support BGP (multi-line)_boutique route EIP.
	//   For more information about BGP (multi-line) lines and BGP (multi-line) premium lines, see EIP line types.
	//   If you are a whitelist user with single-line bandwidth, you can also select the following types:
	// - **ChinaTelecom** : China Telecom
	// - **ChinaUnicom** : China Unicom
	// - **ChinaMobile** : China Mobile
	// - **ChinaTelecom_L2** : China Telecom L2
	// - **ChinaUnicom_L2** : China Unicom L2
	// - **ChinaMobile_L2** : China Mobile L2
	//   If you are a user of Hangzhou Financial Cloud, this field is required. The value is `BGP_FinanceCloud`.
	Isp *string `pulumi:"isp"`
	// The network type. Set the value to **public**.
	Netmode *string `pulumi:"netmode"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

type EipSegmentAddressState struct {
	// The peak bandwidth of the EIP. Unit: Mbps. When the value of instancargetype is PostPaid and the value of InternetChargeType is PayByBandwidth, the range of Bandwidth is 1 to 500. If the value of instancargetype is PostPaid and the value of InternetChargeType is PayByTraffic, the range of Bandwidth is 1 to 200. When instancargetype is set to PrePaid, the range of Bandwidth is 1 to 1000. The default value is 5 Mbps.
	Bandwidth pulumi.StringPtrInput
	// The time when the contiguous Elastic IP address group was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	CreateTime pulumi.StringPtrInput
	// Mask of consecutive EIPs. Value:28: For a single call, the system will allocate 16 consecutive EIPs.27: For a single call, the system will allocate 32 consecutive EIPs.26: For a single call, the system will allocate 64 consecutive EIPs.25: For a single call, the system will allocate 128 consecutive EIPs.24: For a single call, the system will allocate 256 consecutive EIPs.
	EipMask pulumi.StringPtrInput
	// Continuous EIP billing method, valid values:
	// - **PayByBandwidth** (default): Billing based on fixed bandwidth.
	// - **PayByTraffic**: Billing by usage flow.
	InternetChargeType pulumi.StringPtrInput
	// Line type. Valid values:
	// - **BGP** (default):BGP (multi-line) line. BGP (multi-line) EIP is supported in all regions.
	// - **BGP_PRO** :BGP (multi-line)_boutique line. Currently, only Hong Kong, Singapore, Japan (Tokyo), Malaysia (Kuala Lumpur), the Philippines (Manila), Indonesia (Jakarta), and Thailand (Bangkok) regions support BGP (multi-line)_boutique route EIP.
	//   For more information about BGP (multi-line) lines and BGP (multi-line) premium lines, see EIP line types.
	//   If you are a whitelist user with single-line bandwidth, you can also select the following types:
	// - **ChinaTelecom** : China Telecom
	// - **ChinaUnicom** : China Unicom
	// - **ChinaMobile** : China Mobile
	// - **ChinaTelecom_L2** : China Telecom L2
	// - **ChinaUnicom_L2** : China Unicom L2
	// - **ChinaMobile_L2** : China Mobile L2
	//   If you are a user of Hangzhou Financial Cloud, this field is required. The value is `BGP_FinanceCloud`.
	Isp pulumi.StringPtrInput
	// The network type. Set the value to **public**.
	Netmode pulumi.StringPtrInput
	// The status of the resource.
	Status pulumi.StringPtrInput
}

func (EipSegmentAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipSegmentAddressState)(nil)).Elem()
}

type eipSegmentAddressArgs struct {
	// The peak bandwidth of the EIP. Unit: Mbps. When the value of instancargetype is PostPaid and the value of InternetChargeType is PayByBandwidth, the range of Bandwidth is 1 to 500. If the value of instancargetype is PostPaid and the value of InternetChargeType is PayByTraffic, the range of Bandwidth is 1 to 200. When instancargetype is set to PrePaid, the range of Bandwidth is 1 to 1000. The default value is 5 Mbps.
	Bandwidth *string `pulumi:"bandwidth"`
	// Mask of consecutive EIPs. Value:28: For a single call, the system will allocate 16 consecutive EIPs.27: For a single call, the system will allocate 32 consecutive EIPs.26: For a single call, the system will allocate 64 consecutive EIPs.25: For a single call, the system will allocate 128 consecutive EIPs.24: For a single call, the system will allocate 256 consecutive EIPs.
	EipMask string `pulumi:"eipMask"`
	// Continuous EIP billing method, valid values:
	// - **PayByBandwidth** (default): Billing based on fixed bandwidth.
	// - **PayByTraffic**: Billing by usage flow.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// Line type. Valid values:
	// - **BGP** (default):BGP (multi-line) line. BGP (multi-line) EIP is supported in all regions.
	// - **BGP_PRO** :BGP (multi-line)_boutique line. Currently, only Hong Kong, Singapore, Japan (Tokyo), Malaysia (Kuala Lumpur), the Philippines (Manila), Indonesia (Jakarta), and Thailand (Bangkok) regions support BGP (multi-line)_boutique route EIP.
	//   For more information about BGP (multi-line) lines and BGP (multi-line) premium lines, see EIP line types.
	//   If you are a whitelist user with single-line bandwidth, you can also select the following types:
	// - **ChinaTelecom** : China Telecom
	// - **ChinaUnicom** : China Unicom
	// - **ChinaMobile** : China Mobile
	// - **ChinaTelecom_L2** : China Telecom L2
	// - **ChinaUnicom_L2** : China Unicom L2
	// - **ChinaMobile_L2** : China Mobile L2
	//   If you are a user of Hangzhou Financial Cloud, this field is required. The value is `BGP_FinanceCloud`.
	Isp *string `pulumi:"isp"`
	// The network type. Set the value to **public**.
	Netmode *string `pulumi:"netmode"`
}

// The set of arguments for constructing a EipSegmentAddress resource.
type EipSegmentAddressArgs struct {
	// The peak bandwidth of the EIP. Unit: Mbps. When the value of instancargetype is PostPaid and the value of InternetChargeType is PayByBandwidth, the range of Bandwidth is 1 to 500. If the value of instancargetype is PostPaid and the value of InternetChargeType is PayByTraffic, the range of Bandwidth is 1 to 200. When instancargetype is set to PrePaid, the range of Bandwidth is 1 to 1000. The default value is 5 Mbps.
	Bandwidth pulumi.StringPtrInput
	// Mask of consecutive EIPs. Value:28: For a single call, the system will allocate 16 consecutive EIPs.27: For a single call, the system will allocate 32 consecutive EIPs.26: For a single call, the system will allocate 64 consecutive EIPs.25: For a single call, the system will allocate 128 consecutive EIPs.24: For a single call, the system will allocate 256 consecutive EIPs.
	EipMask pulumi.StringInput
	// Continuous EIP billing method, valid values:
	// - **PayByBandwidth** (default): Billing based on fixed bandwidth.
	// - **PayByTraffic**: Billing by usage flow.
	InternetChargeType pulumi.StringPtrInput
	// Line type. Valid values:
	// - **BGP** (default):BGP (multi-line) line. BGP (multi-line) EIP is supported in all regions.
	// - **BGP_PRO** :BGP (multi-line)_boutique line. Currently, only Hong Kong, Singapore, Japan (Tokyo), Malaysia (Kuala Lumpur), the Philippines (Manila), Indonesia (Jakarta), and Thailand (Bangkok) regions support BGP (multi-line)_boutique route EIP.
	//   For more information about BGP (multi-line) lines and BGP (multi-line) premium lines, see EIP line types.
	//   If you are a whitelist user with single-line bandwidth, you can also select the following types:
	// - **ChinaTelecom** : China Telecom
	// - **ChinaUnicom** : China Unicom
	// - **ChinaMobile** : China Mobile
	// - **ChinaTelecom_L2** : China Telecom L2
	// - **ChinaUnicom_L2** : China Unicom L2
	// - **ChinaMobile_L2** : China Mobile L2
	//   If you are a user of Hangzhou Financial Cloud, this field is required. The value is `BGP_FinanceCloud`.
	Isp pulumi.StringPtrInput
	// The network type. Set the value to **public**.
	Netmode pulumi.StringPtrInput
}

func (EipSegmentAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipSegmentAddressArgs)(nil)).Elem()
}

type EipSegmentAddressInput interface {
	pulumi.Input

	ToEipSegmentAddressOutput() EipSegmentAddressOutput
	ToEipSegmentAddressOutputWithContext(ctx context.Context) EipSegmentAddressOutput
}

func (*EipSegmentAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**EipSegmentAddress)(nil)).Elem()
}

func (i *EipSegmentAddress) ToEipSegmentAddressOutput() EipSegmentAddressOutput {
	return i.ToEipSegmentAddressOutputWithContext(context.Background())
}

func (i *EipSegmentAddress) ToEipSegmentAddressOutputWithContext(ctx context.Context) EipSegmentAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipSegmentAddressOutput)
}

// EipSegmentAddressArrayInput is an input type that accepts EipSegmentAddressArray and EipSegmentAddressArrayOutput values.
// You can construct a concrete instance of `EipSegmentAddressArrayInput` via:
//
//	EipSegmentAddressArray{ EipSegmentAddressArgs{...} }
type EipSegmentAddressArrayInput interface {
	pulumi.Input

	ToEipSegmentAddressArrayOutput() EipSegmentAddressArrayOutput
	ToEipSegmentAddressArrayOutputWithContext(context.Context) EipSegmentAddressArrayOutput
}

type EipSegmentAddressArray []EipSegmentAddressInput

func (EipSegmentAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EipSegmentAddress)(nil)).Elem()
}

func (i EipSegmentAddressArray) ToEipSegmentAddressArrayOutput() EipSegmentAddressArrayOutput {
	return i.ToEipSegmentAddressArrayOutputWithContext(context.Background())
}

func (i EipSegmentAddressArray) ToEipSegmentAddressArrayOutputWithContext(ctx context.Context) EipSegmentAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipSegmentAddressArrayOutput)
}

// EipSegmentAddressMapInput is an input type that accepts EipSegmentAddressMap and EipSegmentAddressMapOutput values.
// You can construct a concrete instance of `EipSegmentAddressMapInput` via:
//
//	EipSegmentAddressMap{ "key": EipSegmentAddressArgs{...} }
type EipSegmentAddressMapInput interface {
	pulumi.Input

	ToEipSegmentAddressMapOutput() EipSegmentAddressMapOutput
	ToEipSegmentAddressMapOutputWithContext(context.Context) EipSegmentAddressMapOutput
}

type EipSegmentAddressMap map[string]EipSegmentAddressInput

func (EipSegmentAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EipSegmentAddress)(nil)).Elem()
}

func (i EipSegmentAddressMap) ToEipSegmentAddressMapOutput() EipSegmentAddressMapOutput {
	return i.ToEipSegmentAddressMapOutputWithContext(context.Background())
}

func (i EipSegmentAddressMap) ToEipSegmentAddressMapOutputWithContext(ctx context.Context) EipSegmentAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipSegmentAddressMapOutput)
}

type EipSegmentAddressOutput struct{ *pulumi.OutputState }

func (EipSegmentAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EipSegmentAddress)(nil)).Elem()
}

func (o EipSegmentAddressOutput) ToEipSegmentAddressOutput() EipSegmentAddressOutput {
	return o
}

func (o EipSegmentAddressOutput) ToEipSegmentAddressOutputWithContext(ctx context.Context) EipSegmentAddressOutput {
	return o
}

// The peak bandwidth of the EIP. Unit: Mbps. When the value of instancargetype is PostPaid and the value of InternetChargeType is PayByBandwidth, the range of Bandwidth is 1 to 500. If the value of instancargetype is PostPaid and the value of InternetChargeType is PayByTraffic, the range of Bandwidth is 1 to 200. When instancargetype is set to PrePaid, the range of Bandwidth is 1 to 1000. The default value is 5 Mbps.
func (o EipSegmentAddressOutput) Bandwidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringPtrOutput { return v.Bandwidth }).(pulumi.StringPtrOutput)
}

// The time when the contiguous Elastic IP address group was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
func (o EipSegmentAddressOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Mask of consecutive EIPs. Value:28: For a single call, the system will allocate 16 consecutive EIPs.27: For a single call, the system will allocate 32 consecutive EIPs.26: For a single call, the system will allocate 64 consecutive EIPs.25: For a single call, the system will allocate 128 consecutive EIPs.24: For a single call, the system will allocate 256 consecutive EIPs.
func (o EipSegmentAddressOutput) EipMask() pulumi.StringOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringOutput { return v.EipMask }).(pulumi.StringOutput)
}

// Continuous EIP billing method, valid values:
// - **PayByBandwidth** (default): Billing based on fixed bandwidth.
// - **PayByTraffic**: Billing by usage flow.
func (o EipSegmentAddressOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringPtrOutput { return v.InternetChargeType }).(pulumi.StringPtrOutput)
}

// Line type. Valid values:
//   - **BGP** (default):BGP (multi-line) line. BGP (multi-line) EIP is supported in all regions.
//   - **BGP_PRO** :BGP (multi-line)_boutique line. Currently, only Hong Kong, Singapore, Japan (Tokyo), Malaysia (Kuala Lumpur), the Philippines (Manila), Indonesia (Jakarta), and Thailand (Bangkok) regions support BGP (multi-line)_boutique route EIP.
//     For more information about BGP (multi-line) lines and BGP (multi-line) premium lines, see EIP line types.
//     If you are a whitelist user with single-line bandwidth, you can also select the following types:
//   - **ChinaTelecom** : China Telecom
//   - **ChinaUnicom** : China Unicom
//   - **ChinaMobile** : China Mobile
//   - **ChinaTelecom_L2** : China Telecom L2
//   - **ChinaUnicom_L2** : China Unicom L2
//   - **ChinaMobile_L2** : China Mobile L2
//     If you are a user of Hangzhou Financial Cloud, this field is required. The value is `BGP_FinanceCloud`.
func (o EipSegmentAddressOutput) Isp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringPtrOutput { return v.Isp }).(pulumi.StringPtrOutput)
}

// The network type. Set the value to **public**.
func (o EipSegmentAddressOutput) Netmode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringPtrOutput { return v.Netmode }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o EipSegmentAddressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EipSegmentAddress) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type EipSegmentAddressArrayOutput struct{ *pulumi.OutputState }

func (EipSegmentAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EipSegmentAddress)(nil)).Elem()
}

func (o EipSegmentAddressArrayOutput) ToEipSegmentAddressArrayOutput() EipSegmentAddressArrayOutput {
	return o
}

func (o EipSegmentAddressArrayOutput) ToEipSegmentAddressArrayOutputWithContext(ctx context.Context) EipSegmentAddressArrayOutput {
	return o
}

func (o EipSegmentAddressArrayOutput) Index(i pulumi.IntInput) EipSegmentAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EipSegmentAddress {
		return vs[0].([]*EipSegmentAddress)[vs[1].(int)]
	}).(EipSegmentAddressOutput)
}

type EipSegmentAddressMapOutput struct{ *pulumi.OutputState }

func (EipSegmentAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EipSegmentAddress)(nil)).Elem()
}

func (o EipSegmentAddressMapOutput) ToEipSegmentAddressMapOutput() EipSegmentAddressMapOutput {
	return o
}

func (o EipSegmentAddressMapOutput) ToEipSegmentAddressMapOutputWithContext(ctx context.Context) EipSegmentAddressMapOutput {
	return o
}

func (o EipSegmentAddressMapOutput) MapIndex(k pulumi.StringInput) EipSegmentAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EipSegmentAddress {
		return vs[0].(map[string]*EipSegmentAddress)[vs[1].(string)]
	}).(EipSegmentAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EipSegmentAddressInput)(nil)).Elem(), &EipSegmentAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipSegmentAddressArrayInput)(nil)).Elem(), EipSegmentAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipSegmentAddressMapInput)(nil)).Elem(), EipSegmentAddressMap{})
	pulumi.RegisterOutputType(EipSegmentAddressOutput{})
	pulumi.RegisterOutputType(EipSegmentAddressArrayOutput{})
	pulumi.RegisterOutputType(EipSegmentAddressMapOutput{})
}
