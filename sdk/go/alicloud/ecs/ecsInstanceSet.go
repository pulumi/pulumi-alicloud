// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ECS Instance Set resource.
//
// For information about ECS Instance Set and how to use it, see [What is Instance Set](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/runinstances).
//
// > **NOTE:** Available in v1.173.0+.
//
// > **NOTE:** This resource is used to batch create a group of instance resources with the same configuration. However, this resource is not recommended. `ecs.Instance` is preferred.
//
// > **NOTE:** In the instances managed by this resource, names are automatically generated based on `instanceName` and `uniqueSuffix`.
//
// > **NOTE:** Only `tags` support batch modification.
type EcsInstanceSet struct {
	pulumi.CustomResourceState

	// The number of instances that you want to create. Valid values: `1` to `100`.
	Amount pulumi.IntPtrOutput `pulumi:"amount"`
	// The automatic release time of the `PostPaid` instance.
	AutoReleaseTime pulumi.StringPtrOutput `pulumi:"autoReleaseTime"`
	// Whether to enable auto-renewal for the instance. This parameter is valid only when the `instanceChargeType` is set to `PrePaid`.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// Auto renewal period of an instance, in the unit of month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `6`, `12`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	AutoRenewPeriod pulumi.IntPtrOutput `pulumi:"autoRenewPeriod"`
	// Indicate how to check instance ready to use.
	BootCheckOsWithAssistant pulumi.BoolPtrOutput `pulumi:"bootCheckOsWithAssistant"`
	// The list of data disks created with instance. See the following `Block dataDisks`.
	DataDisks EcsInstanceSetDataDiskArrayOutput `pulumi:"dataDisks"`
	// The ID of the dedicated host on which to create the instance. If the `dedicatedHostId` is specified, the `spotStrategy` and `spotPriceLimit`  are ignored. This is because preemptible instances cannot be created on dedicated hosts.
	DedicatedHostId pulumi.StringPtrOutput `pulumi:"dedicatedHostId"`
	// Whether to enable release protection for the instance.
	DeletionProtection pulumi.BoolOutput `pulumi:"deletionProtection"`
	// The ID of the deployment set to which to deploy the instance.
	DeploymentSetId pulumi.StringPtrOutput `pulumi:"deploymentSetId"`
	// The description of the instance, This description can have a string of 2 to 256 characters, It cannot begin with `http://` or `https://`.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The instances that need to be excluded from the Instance Set. See the following `Block excludeInstanceFilter`.
	ExcludeInstanceFilter EcsInstanceSetExcludeInstanceFilterPtrOutput `pulumi:"excludeInstanceFilter"`
	// The hostname of instance.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// The ID of the Elastic High Performance Computing (E-HPC) cluster to which to assign the instance.
	HpcClusterId pulumi.StringPtrOutput `pulumi:"hpcClusterId"`
	// The Image to use for the instance.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The billing method of the instance. Valid values: `PrePaid`, `PostPaid`.
	InstanceChargeType pulumi.StringPtrOutput `pulumi:"instanceChargeType"`
	// A list of ECS Instance ID.
	InstanceIds pulumi.StringArrayOutput `pulumi:"instanceIds"`
	// The name of the ECS. This instanceName can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen, and must not begin with `http://` or `https://`.
	InstanceName pulumi.StringPtrOutput `pulumi:"instanceName"`
	// The type of instance to start.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The Internet charge type of the instance. Valid values are `PayByBandwidth`, `PayByTraffic`.
	InternetChargeType pulumi.StringOutput `pulumi:"internetChargeType"`
	// The Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bit per second). Valid values: `1` to `100`.
	InternetMaxBandwidthOut pulumi.IntOutput `pulumi:"internetMaxBandwidthOut"`
	// The name of key pair that can login ECS instance successfully without password.
	KeyPairName pulumi.StringPtrOutput `pulumi:"keyPairName"`
	// The ID of the launch template.
	LaunchTemplateId pulumi.StringPtrOutput `pulumi:"launchTemplateId"`
	// The name of the launch template. To use a launch template to create an instance, you must use the `launchTemplateId` or `launchTemplateName` parameter to specify the launch template.
	LaunchTemplateName pulumi.StringPtrOutput `pulumi:"launchTemplateName"`
	// The version of the launch template.
	LaunchTemplateVersion pulumi.StringPtrOutput `pulumi:"launchTemplateVersion"`
	// A list of NetworkInterface. See the following `Block networkInterfaces`.
	NetworkInterfaces EcsInstanceSetNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The password to an instance is a string of 8 to 30 characters. It must contain uppercase/lowercase letters and numerals, but cannot contain special symbols.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Whether to use the password preset in the image.
	PasswordInherit pulumi.BoolPtrOutput `pulumi:"passwordInherit"`
	// The duration that you will buy the resource, in month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, `60`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The duration unit that you will buy the resource. It is valid when `instanceChargeType` is 'PrePaid'. Valid value: `Week`, `Month`.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The Instance RAM role name.
	RamRoleName pulumi.StringPtrOutput `pulumi:"ramRoleName"`
	// The ID of resource group which the instance belongs.
	ResourceGroupId pulumi.StringPtrOutput `pulumi:"resourceGroupId"`
	// The security enhancement strategy.
	SecurityEnhancementStrategy pulumi.StringPtrOutput `pulumi:"securityEnhancementStrategy"`
	// A list of security group ids to associate with.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The hourly price threshold of a instance, and it takes effect only when parameter 'spot_strategy' is 'SpotWithPriceLimit'. Three decimals is allowed at most.
	SpotPriceLimit pulumi.Float64Output `pulumi:"spotPriceLimit"`
	// The spot strategy of a Pay-As-You-Go instance, and it takes effect only when parameter `instanceChargeType` is 'PostPaid'.
	SpotStrategy pulumi.StringOutput `pulumi:"spotStrategy"`
	// The ID of the automatic snapshot policy applied to the system disk.
	SystemDiskAutoSnapshotPolicyId pulumi.StringPtrOutput `pulumi:"systemDiskAutoSnapshotPolicyId"`
	// The category of the system disk. Valid values are `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
	SystemDiskCategory pulumi.StringOutput `pulumi:"systemDiskCategory"`
	// The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
	SystemDiskDescription pulumi.StringPtrOutput `pulumi:"systemDiskDescription"`
	// The name of the system disk.
	SystemDiskName pulumi.StringPtrOutput `pulumi:"systemDiskName"`
	// The performance level of the ESSD used as the system disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
	SystemDiskPerformanceLevel pulumi.StringOutput `pulumi:"systemDiskPerformanceLevel"`
	// The size of the system disk, measured in GiB. Value range:  values: `20` to `500`.
	SystemDiskSize pulumi.IntOutput `pulumi:"systemDiskSize"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Whether to automatically append incremental suffixes to the hostname specified by the HostName parameter and to the instance name specified by the InstanceName parameter when you batch create instances. The incremental suffixes can range from `001` to `999`.
	UniqueSuffix pulumi.BoolPtrOutput `pulumi:"uniqueSuffix"`
	// The virtual switch ID to launch in VPC.
	VswitchId pulumi.StringPtrOutput `pulumi:"vswitchId"`
	// The ID of the zone in which to create the instance.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewEcsInstanceSet registers a new resource with the given unique name, arguments, and options.
func NewEcsInstanceSet(ctx *pulumi.Context,
	name string, args *EcsInstanceSetArgs, opts ...pulumi.ResourceOption) (*EcsInstanceSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	var resource EcsInstanceSet
	err := ctx.RegisterResource("alicloud:ecs/ecsInstanceSet:EcsInstanceSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEcsInstanceSet gets an existing EcsInstanceSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEcsInstanceSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EcsInstanceSetState, opts ...pulumi.ResourceOption) (*EcsInstanceSet, error) {
	var resource EcsInstanceSet
	err := ctx.ReadResource("alicloud:ecs/ecsInstanceSet:EcsInstanceSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EcsInstanceSet resources.
type ecsInstanceSetState struct {
	// The number of instances that you want to create. Valid values: `1` to `100`.
	Amount *int `pulumi:"amount"`
	// The automatic release time of the `PostPaid` instance.
	AutoReleaseTime *string `pulumi:"autoReleaseTime"`
	// Whether to enable auto-renewal for the instance. This parameter is valid only when the `instanceChargeType` is set to `PrePaid`.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Auto renewal period of an instance, in the unit of month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `6`, `12`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// Indicate how to check instance ready to use.
	BootCheckOsWithAssistant *bool `pulumi:"bootCheckOsWithAssistant"`
	// The list of data disks created with instance. See the following `Block dataDisks`.
	DataDisks []EcsInstanceSetDataDisk `pulumi:"dataDisks"`
	// The ID of the dedicated host on which to create the instance. If the `dedicatedHostId` is specified, the `spotStrategy` and `spotPriceLimit`  are ignored. This is because preemptible instances cannot be created on dedicated hosts.
	DedicatedHostId *string `pulumi:"dedicatedHostId"`
	// Whether to enable release protection for the instance.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The ID of the deployment set to which to deploy the instance.
	DeploymentSetId *string `pulumi:"deploymentSetId"`
	// The description of the instance, This description can have a string of 2 to 256 characters, It cannot begin with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The instances that need to be excluded from the Instance Set. See the following `Block excludeInstanceFilter`.
	ExcludeInstanceFilter *EcsInstanceSetExcludeInstanceFilter `pulumi:"excludeInstanceFilter"`
	// The hostname of instance.
	HostName *string `pulumi:"hostName"`
	// The ID of the Elastic High Performance Computing (E-HPC) cluster to which to assign the instance.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The Image to use for the instance.
	ImageId *string `pulumi:"imageId"`
	// The billing method of the instance. Valid values: `PrePaid`, `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// A list of ECS Instance ID.
	InstanceIds []string `pulumi:"instanceIds"`
	// The name of the ECS. This instanceName can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen, and must not begin with `http://` or `https://`.
	InstanceName *string `pulumi:"instanceName"`
	// The type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// The Internet charge type of the instance. Valid values are `PayByBandwidth`, `PayByTraffic`.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// The Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bit per second). Valid values: `1` to `100`.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// The name of key pair that can login ECS instance successfully without password.
	KeyPairName *string `pulumi:"keyPairName"`
	// The ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// The name of the launch template. To use a launch template to create an instance, you must use the `launchTemplateId` or `launchTemplateName` parameter to specify the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// The version of the launch template.
	LaunchTemplateVersion *string `pulumi:"launchTemplateVersion"`
	// A list of NetworkInterface. See the following `Block networkInterfaces`.
	NetworkInterfaces []EcsInstanceSetNetworkInterface `pulumi:"networkInterfaces"`
	// The password to an instance is a string of 8 to 30 characters. It must contain uppercase/lowercase letters and numerals, but cannot contain special symbols.
	Password *string `pulumi:"password"`
	// Whether to use the password preset in the image.
	PasswordInherit *bool `pulumi:"passwordInherit"`
	// The duration that you will buy the resource, in month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, `60`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	Period *int `pulumi:"period"`
	// The duration unit that you will buy the resource. It is valid when `instanceChargeType` is 'PrePaid'. Valid value: `Week`, `Month`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The Instance RAM role name.
	RamRoleName *string `pulumi:"ramRoleName"`
	// The ID of resource group which the instance belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The security enhancement strategy.
	SecurityEnhancementStrategy *string `pulumi:"securityEnhancementStrategy"`
	// A list of security group ids to associate with.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The hourly price threshold of a instance, and it takes effect only when parameter 'spot_strategy' is 'SpotWithPriceLimit'. Three decimals is allowed at most.
	SpotPriceLimit *float64 `pulumi:"spotPriceLimit"`
	// The spot strategy of a Pay-As-You-Go instance, and it takes effect only when parameter `instanceChargeType` is 'PostPaid'.
	SpotStrategy *string `pulumi:"spotStrategy"`
	// The ID of the automatic snapshot policy applied to the system disk.
	SystemDiskAutoSnapshotPolicyId *string `pulumi:"systemDiskAutoSnapshotPolicyId"`
	// The category of the system disk. Valid values are `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
	SystemDiskCategory *string `pulumi:"systemDiskCategory"`
	// The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
	SystemDiskDescription *string `pulumi:"systemDiskDescription"`
	// The name of the system disk.
	SystemDiskName *string `pulumi:"systemDiskName"`
	// The performance level of the ESSD used as the system disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
	SystemDiskPerformanceLevel *string `pulumi:"systemDiskPerformanceLevel"`
	// The size of the system disk, measured in GiB. Value range:  values: `20` to `500`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Whether to automatically append incremental suffixes to the hostname specified by the HostName parameter and to the instance name specified by the InstanceName parameter when you batch create instances. The incremental suffixes can range from `001` to `999`.
	UniqueSuffix *bool `pulumi:"uniqueSuffix"`
	// The virtual switch ID to launch in VPC.
	VswitchId *string `pulumi:"vswitchId"`
	// The ID of the zone in which to create the instance.
	ZoneId *string `pulumi:"zoneId"`
}

type EcsInstanceSetState struct {
	// The number of instances that you want to create. Valid values: `1` to `100`.
	Amount pulumi.IntPtrInput
	// The automatic release time of the `PostPaid` instance.
	AutoReleaseTime pulumi.StringPtrInput
	// Whether to enable auto-renewal for the instance. This parameter is valid only when the `instanceChargeType` is set to `PrePaid`.
	AutoRenew pulumi.BoolPtrInput
	// Auto renewal period of an instance, in the unit of month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `6`, `12`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	AutoRenewPeriod pulumi.IntPtrInput
	// Indicate how to check instance ready to use.
	BootCheckOsWithAssistant pulumi.BoolPtrInput
	// The list of data disks created with instance. See the following `Block dataDisks`.
	DataDisks EcsInstanceSetDataDiskArrayInput
	// The ID of the dedicated host on which to create the instance. If the `dedicatedHostId` is specified, the `spotStrategy` and `spotPriceLimit`  are ignored. This is because preemptible instances cannot be created on dedicated hosts.
	DedicatedHostId pulumi.StringPtrInput
	// Whether to enable release protection for the instance.
	DeletionProtection pulumi.BoolPtrInput
	// The ID of the deployment set to which to deploy the instance.
	DeploymentSetId pulumi.StringPtrInput
	// The description of the instance, This description can have a string of 2 to 256 characters, It cannot begin with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The instances that need to be excluded from the Instance Set. See the following `Block excludeInstanceFilter`.
	ExcludeInstanceFilter EcsInstanceSetExcludeInstanceFilterPtrInput
	// The hostname of instance.
	HostName pulumi.StringPtrInput
	// The ID of the Elastic High Performance Computing (E-HPC) cluster to which to assign the instance.
	HpcClusterId pulumi.StringPtrInput
	// The Image to use for the instance.
	ImageId pulumi.StringPtrInput
	// The billing method of the instance. Valid values: `PrePaid`, `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput
	// A list of ECS Instance ID.
	InstanceIds pulumi.StringArrayInput
	// The name of the ECS. This instanceName can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen, and must not begin with `http://` or `https://`.
	InstanceName pulumi.StringPtrInput
	// The type of instance to start.
	InstanceType pulumi.StringPtrInput
	// The Internet charge type of the instance. Valid values are `PayByBandwidth`, `PayByTraffic`.
	InternetChargeType pulumi.StringPtrInput
	// The Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bit per second). Valid values: `1` to `100`.
	InternetMaxBandwidthOut pulumi.IntPtrInput
	// The name of key pair that can login ECS instance successfully without password.
	KeyPairName pulumi.StringPtrInput
	// The ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput
	// The name of the launch template. To use a launch template to create an instance, you must use the `launchTemplateId` or `launchTemplateName` parameter to specify the launch template.
	LaunchTemplateName pulumi.StringPtrInput
	// The version of the launch template.
	LaunchTemplateVersion pulumi.StringPtrInput
	// A list of NetworkInterface. See the following `Block networkInterfaces`.
	NetworkInterfaces EcsInstanceSetNetworkInterfaceArrayInput
	// The password to an instance is a string of 8 to 30 characters. It must contain uppercase/lowercase letters and numerals, but cannot contain special symbols.
	Password pulumi.StringPtrInput
	// Whether to use the password preset in the image.
	PasswordInherit pulumi.BoolPtrInput
	// The duration that you will buy the resource, in month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, `60`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	Period pulumi.IntPtrInput
	// The duration unit that you will buy the resource. It is valid when `instanceChargeType` is 'PrePaid'. Valid value: `Week`, `Month`.
	PeriodUnit pulumi.StringPtrInput
	// The Instance RAM role name.
	RamRoleName pulumi.StringPtrInput
	// The ID of resource group which the instance belongs.
	ResourceGroupId pulumi.StringPtrInput
	// The security enhancement strategy.
	SecurityEnhancementStrategy pulumi.StringPtrInput
	// A list of security group ids to associate with.
	SecurityGroupIds pulumi.StringArrayInput
	// The hourly price threshold of a instance, and it takes effect only when parameter 'spot_strategy' is 'SpotWithPriceLimit'. Three decimals is allowed at most.
	SpotPriceLimit pulumi.Float64PtrInput
	// The spot strategy of a Pay-As-You-Go instance, and it takes effect only when parameter `instanceChargeType` is 'PostPaid'.
	SpotStrategy pulumi.StringPtrInput
	// The ID of the automatic snapshot policy applied to the system disk.
	SystemDiskAutoSnapshotPolicyId pulumi.StringPtrInput
	// The category of the system disk. Valid values are `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
	SystemDiskCategory pulumi.StringPtrInput
	// The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
	SystemDiskDescription pulumi.StringPtrInput
	// The name of the system disk.
	SystemDiskName pulumi.StringPtrInput
	// The performance level of the ESSD used as the system disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
	SystemDiskPerformanceLevel pulumi.StringPtrInput
	// The size of the system disk, measured in GiB. Value range:  values: `20` to `500`.
	SystemDiskSize pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Whether to automatically append incremental suffixes to the hostname specified by the HostName parameter and to the instance name specified by the InstanceName parameter when you batch create instances. The incremental suffixes can range from `001` to `999`.
	UniqueSuffix pulumi.BoolPtrInput
	// The virtual switch ID to launch in VPC.
	VswitchId pulumi.StringPtrInput
	// The ID of the zone in which to create the instance.
	ZoneId pulumi.StringPtrInput
}

func (EcsInstanceSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsInstanceSetState)(nil)).Elem()
}

type ecsInstanceSetArgs struct {
	// The number of instances that you want to create. Valid values: `1` to `100`.
	Amount *int `pulumi:"amount"`
	// The automatic release time of the `PostPaid` instance.
	AutoReleaseTime *string `pulumi:"autoReleaseTime"`
	// Whether to enable auto-renewal for the instance. This parameter is valid only when the `instanceChargeType` is set to `PrePaid`.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Auto renewal period of an instance, in the unit of month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `6`, `12`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// Indicate how to check instance ready to use.
	BootCheckOsWithAssistant *bool `pulumi:"bootCheckOsWithAssistant"`
	// The list of data disks created with instance. See the following `Block dataDisks`.
	DataDisks []EcsInstanceSetDataDisk `pulumi:"dataDisks"`
	// The ID of the dedicated host on which to create the instance. If the `dedicatedHostId` is specified, the `spotStrategy` and `spotPriceLimit`  are ignored. This is because preemptible instances cannot be created on dedicated hosts.
	DedicatedHostId *string `pulumi:"dedicatedHostId"`
	// Whether to enable release protection for the instance.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The ID of the deployment set to which to deploy the instance.
	DeploymentSetId *string `pulumi:"deploymentSetId"`
	// The description of the instance, This description can have a string of 2 to 256 characters, It cannot begin with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The instances that need to be excluded from the Instance Set. See the following `Block excludeInstanceFilter`.
	ExcludeInstanceFilter *EcsInstanceSetExcludeInstanceFilter `pulumi:"excludeInstanceFilter"`
	// The hostname of instance.
	HostName *string `pulumi:"hostName"`
	// The ID of the Elastic High Performance Computing (E-HPC) cluster to which to assign the instance.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The Image to use for the instance.
	ImageId string `pulumi:"imageId"`
	// The billing method of the instance. Valid values: `PrePaid`, `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The name of the ECS. This instanceName can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen, and must not begin with `http://` or `https://`.
	InstanceName *string `pulumi:"instanceName"`
	// The type of instance to start.
	InstanceType string `pulumi:"instanceType"`
	// The Internet charge type of the instance. Valid values are `PayByBandwidth`, `PayByTraffic`.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// The Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bit per second). Valid values: `1` to `100`.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// The name of key pair that can login ECS instance successfully without password.
	KeyPairName *string `pulumi:"keyPairName"`
	// The ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// The name of the launch template. To use a launch template to create an instance, you must use the `launchTemplateId` or `launchTemplateName` parameter to specify the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// The version of the launch template.
	LaunchTemplateVersion *string `pulumi:"launchTemplateVersion"`
	// A list of NetworkInterface. See the following `Block networkInterfaces`.
	NetworkInterfaces []EcsInstanceSetNetworkInterface `pulumi:"networkInterfaces"`
	// The password to an instance is a string of 8 to 30 characters. It must contain uppercase/lowercase letters and numerals, but cannot contain special symbols.
	Password *string `pulumi:"password"`
	// Whether to use the password preset in the image.
	PasswordInherit *bool `pulumi:"passwordInherit"`
	// The duration that you will buy the resource, in month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, `60`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	Period *int `pulumi:"period"`
	// The duration unit that you will buy the resource. It is valid when `instanceChargeType` is 'PrePaid'. Valid value: `Week`, `Month`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The Instance RAM role name.
	RamRoleName *string `pulumi:"ramRoleName"`
	// The ID of resource group which the instance belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The security enhancement strategy.
	SecurityEnhancementStrategy *string `pulumi:"securityEnhancementStrategy"`
	// A list of security group ids to associate with.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The hourly price threshold of a instance, and it takes effect only when parameter 'spot_strategy' is 'SpotWithPriceLimit'. Three decimals is allowed at most.
	SpotPriceLimit *float64 `pulumi:"spotPriceLimit"`
	// The spot strategy of a Pay-As-You-Go instance, and it takes effect only when parameter `instanceChargeType` is 'PostPaid'.
	SpotStrategy *string `pulumi:"spotStrategy"`
	// The ID of the automatic snapshot policy applied to the system disk.
	SystemDiskAutoSnapshotPolicyId *string `pulumi:"systemDiskAutoSnapshotPolicyId"`
	// The category of the system disk. Valid values are `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
	SystemDiskCategory *string `pulumi:"systemDiskCategory"`
	// The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
	SystemDiskDescription *string `pulumi:"systemDiskDescription"`
	// The name of the system disk.
	SystemDiskName *string `pulumi:"systemDiskName"`
	// The performance level of the ESSD used as the system disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
	SystemDiskPerformanceLevel *string `pulumi:"systemDiskPerformanceLevel"`
	// The size of the system disk, measured in GiB. Value range:  values: `20` to `500`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Whether to automatically append incremental suffixes to the hostname specified by the HostName parameter and to the instance name specified by the InstanceName parameter when you batch create instances. The incremental suffixes can range from `001` to `999`.
	UniqueSuffix *bool `pulumi:"uniqueSuffix"`
	// The virtual switch ID to launch in VPC.
	VswitchId *string `pulumi:"vswitchId"`
	// The ID of the zone in which to create the instance.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a EcsInstanceSet resource.
type EcsInstanceSetArgs struct {
	// The number of instances that you want to create. Valid values: `1` to `100`.
	Amount pulumi.IntPtrInput
	// The automatic release time of the `PostPaid` instance.
	AutoReleaseTime pulumi.StringPtrInput
	// Whether to enable auto-renewal for the instance. This parameter is valid only when the `instanceChargeType` is set to `PrePaid`.
	AutoRenew pulumi.BoolPtrInput
	// Auto renewal period of an instance, in the unit of month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `6`, `12`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	AutoRenewPeriod pulumi.IntPtrInput
	// Indicate how to check instance ready to use.
	BootCheckOsWithAssistant pulumi.BoolPtrInput
	// The list of data disks created with instance. See the following `Block dataDisks`.
	DataDisks EcsInstanceSetDataDiskArrayInput
	// The ID of the dedicated host on which to create the instance. If the `dedicatedHostId` is specified, the `spotStrategy` and `spotPriceLimit`  are ignored. This is because preemptible instances cannot be created on dedicated hosts.
	DedicatedHostId pulumi.StringPtrInput
	// Whether to enable release protection for the instance.
	DeletionProtection pulumi.BoolPtrInput
	// The ID of the deployment set to which to deploy the instance.
	DeploymentSetId pulumi.StringPtrInput
	// The description of the instance, This description can have a string of 2 to 256 characters, It cannot begin with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The instances that need to be excluded from the Instance Set. See the following `Block excludeInstanceFilter`.
	ExcludeInstanceFilter EcsInstanceSetExcludeInstanceFilterPtrInput
	// The hostname of instance.
	HostName pulumi.StringPtrInput
	// The ID of the Elastic High Performance Computing (E-HPC) cluster to which to assign the instance.
	HpcClusterId pulumi.StringPtrInput
	// The Image to use for the instance.
	ImageId pulumi.StringInput
	// The billing method of the instance. Valid values: `PrePaid`, `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput
	// The name of the ECS. This instanceName can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen, and must not begin with `http://` or `https://`.
	InstanceName pulumi.StringPtrInput
	// The type of instance to start.
	InstanceType pulumi.StringInput
	// The Internet charge type of the instance. Valid values are `PayByBandwidth`, `PayByTraffic`.
	InternetChargeType pulumi.StringPtrInput
	// The Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bit per second). Valid values: `1` to `100`.
	InternetMaxBandwidthOut pulumi.IntPtrInput
	// The name of key pair that can login ECS instance successfully without password.
	KeyPairName pulumi.StringPtrInput
	// The ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput
	// The name of the launch template. To use a launch template to create an instance, you must use the `launchTemplateId` or `launchTemplateName` parameter to specify the launch template.
	LaunchTemplateName pulumi.StringPtrInput
	// The version of the launch template.
	LaunchTemplateVersion pulumi.StringPtrInput
	// A list of NetworkInterface. See the following `Block networkInterfaces`.
	NetworkInterfaces EcsInstanceSetNetworkInterfaceArrayInput
	// The password to an instance is a string of 8 to 30 characters. It must contain uppercase/lowercase letters and numerals, but cannot contain special symbols.
	Password pulumi.StringPtrInput
	// Whether to use the password preset in the image.
	PasswordInherit pulumi.BoolPtrInput
	// The duration that you will buy the resource, in month. It is valid when `instanceChargeType` is `PrePaid`.
	// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, `60`.
	// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
	Period pulumi.IntPtrInput
	// The duration unit that you will buy the resource. It is valid when `instanceChargeType` is 'PrePaid'. Valid value: `Week`, `Month`.
	PeriodUnit pulumi.StringPtrInput
	// The Instance RAM role name.
	RamRoleName pulumi.StringPtrInput
	// The ID of resource group which the instance belongs.
	ResourceGroupId pulumi.StringPtrInput
	// The security enhancement strategy.
	SecurityEnhancementStrategy pulumi.StringPtrInput
	// A list of security group ids to associate with.
	SecurityGroupIds pulumi.StringArrayInput
	// The hourly price threshold of a instance, and it takes effect only when parameter 'spot_strategy' is 'SpotWithPriceLimit'. Three decimals is allowed at most.
	SpotPriceLimit pulumi.Float64PtrInput
	// The spot strategy of a Pay-As-You-Go instance, and it takes effect only when parameter `instanceChargeType` is 'PostPaid'.
	SpotStrategy pulumi.StringPtrInput
	// The ID of the automatic snapshot policy applied to the system disk.
	SystemDiskAutoSnapshotPolicyId pulumi.StringPtrInput
	// The category of the system disk. Valid values are `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
	SystemDiskCategory pulumi.StringPtrInput
	// The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
	SystemDiskDescription pulumi.StringPtrInput
	// The name of the system disk.
	SystemDiskName pulumi.StringPtrInput
	// The performance level of the ESSD used as the system disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
	SystemDiskPerformanceLevel pulumi.StringPtrInput
	// The size of the system disk, measured in GiB. Value range:  values: `20` to `500`.
	SystemDiskSize pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Whether to automatically append incremental suffixes to the hostname specified by the HostName parameter and to the instance name specified by the InstanceName parameter when you batch create instances. The incremental suffixes can range from `001` to `999`.
	UniqueSuffix pulumi.BoolPtrInput
	// The virtual switch ID to launch in VPC.
	VswitchId pulumi.StringPtrInput
	// The ID of the zone in which to create the instance.
	ZoneId pulumi.StringPtrInput
}

func (EcsInstanceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsInstanceSetArgs)(nil)).Elem()
}

type EcsInstanceSetInput interface {
	pulumi.Input

	ToEcsInstanceSetOutput() EcsInstanceSetOutput
	ToEcsInstanceSetOutputWithContext(ctx context.Context) EcsInstanceSetOutput
}

func (*EcsInstanceSet) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsInstanceSet)(nil)).Elem()
}

func (i *EcsInstanceSet) ToEcsInstanceSetOutput() EcsInstanceSetOutput {
	return i.ToEcsInstanceSetOutputWithContext(context.Background())
}

func (i *EcsInstanceSet) ToEcsInstanceSetOutputWithContext(ctx context.Context) EcsInstanceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsInstanceSetOutput)
}

// EcsInstanceSetArrayInput is an input type that accepts EcsInstanceSetArray and EcsInstanceSetArrayOutput values.
// You can construct a concrete instance of `EcsInstanceSetArrayInput` via:
//
//	EcsInstanceSetArray{ EcsInstanceSetArgs{...} }
type EcsInstanceSetArrayInput interface {
	pulumi.Input

	ToEcsInstanceSetArrayOutput() EcsInstanceSetArrayOutput
	ToEcsInstanceSetArrayOutputWithContext(context.Context) EcsInstanceSetArrayOutput
}

type EcsInstanceSetArray []EcsInstanceSetInput

func (EcsInstanceSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsInstanceSet)(nil)).Elem()
}

func (i EcsInstanceSetArray) ToEcsInstanceSetArrayOutput() EcsInstanceSetArrayOutput {
	return i.ToEcsInstanceSetArrayOutputWithContext(context.Background())
}

func (i EcsInstanceSetArray) ToEcsInstanceSetArrayOutputWithContext(ctx context.Context) EcsInstanceSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsInstanceSetArrayOutput)
}

// EcsInstanceSetMapInput is an input type that accepts EcsInstanceSetMap and EcsInstanceSetMapOutput values.
// You can construct a concrete instance of `EcsInstanceSetMapInput` via:
//
//	EcsInstanceSetMap{ "key": EcsInstanceSetArgs{...} }
type EcsInstanceSetMapInput interface {
	pulumi.Input

	ToEcsInstanceSetMapOutput() EcsInstanceSetMapOutput
	ToEcsInstanceSetMapOutputWithContext(context.Context) EcsInstanceSetMapOutput
}

type EcsInstanceSetMap map[string]EcsInstanceSetInput

func (EcsInstanceSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsInstanceSet)(nil)).Elem()
}

func (i EcsInstanceSetMap) ToEcsInstanceSetMapOutput() EcsInstanceSetMapOutput {
	return i.ToEcsInstanceSetMapOutputWithContext(context.Background())
}

func (i EcsInstanceSetMap) ToEcsInstanceSetMapOutputWithContext(ctx context.Context) EcsInstanceSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsInstanceSetMapOutput)
}

type EcsInstanceSetOutput struct{ *pulumi.OutputState }

func (EcsInstanceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsInstanceSet)(nil)).Elem()
}

func (o EcsInstanceSetOutput) ToEcsInstanceSetOutput() EcsInstanceSetOutput {
	return o
}

func (o EcsInstanceSetOutput) ToEcsInstanceSetOutputWithContext(ctx context.Context) EcsInstanceSetOutput {
	return o
}

// The number of instances that you want to create. Valid values: `1` to `100`.
func (o EcsInstanceSetOutput) Amount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.IntPtrOutput { return v.Amount }).(pulumi.IntPtrOutput)
}

// The automatic release time of the `PostPaid` instance.
func (o EcsInstanceSetOutput) AutoReleaseTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.AutoReleaseTime }).(pulumi.StringPtrOutput)
}

// Whether to enable auto-renewal for the instance. This parameter is valid only when the `instanceChargeType` is set to `PrePaid`.
func (o EcsInstanceSetOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Auto renewal period of an instance, in the unit of month. It is valid when `instanceChargeType` is `PrePaid`.
// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `6`, `12`.
// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
func (o EcsInstanceSetOutput) AutoRenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.IntPtrOutput { return v.AutoRenewPeriod }).(pulumi.IntPtrOutput)
}

// Indicate how to check instance ready to use.
func (o EcsInstanceSetOutput) BootCheckOsWithAssistant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.BoolPtrOutput { return v.BootCheckOsWithAssistant }).(pulumi.BoolPtrOutput)
}

// The list of data disks created with instance. See the following `Block dataDisks`.
func (o EcsInstanceSetOutput) DataDisks() EcsInstanceSetDataDiskArrayOutput {
	return o.ApplyT(func(v *EcsInstanceSet) EcsInstanceSetDataDiskArrayOutput { return v.DataDisks }).(EcsInstanceSetDataDiskArrayOutput)
}

// The ID of the dedicated host on which to create the instance. If the `dedicatedHostId` is specified, the `spotStrategy` and `spotPriceLimit`  are ignored. This is because preemptible instances cannot be created on dedicated hosts.
func (o EcsInstanceSetOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.DedicatedHostId }).(pulumi.StringPtrOutput)
}

// Whether to enable release protection for the instance.
func (o EcsInstanceSetOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The ID of the deployment set to which to deploy the instance.
func (o EcsInstanceSetOutput) DeploymentSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.DeploymentSetId }).(pulumi.StringPtrOutput)
}

// The description of the instance, This description can have a string of 2 to 256 characters, It cannot begin with `http://` or `https://`.
func (o EcsInstanceSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The instances that need to be excluded from the Instance Set. See the following `Block excludeInstanceFilter`.
func (o EcsInstanceSetOutput) ExcludeInstanceFilter() EcsInstanceSetExcludeInstanceFilterPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) EcsInstanceSetExcludeInstanceFilterPtrOutput { return v.ExcludeInstanceFilter }).(EcsInstanceSetExcludeInstanceFilterPtrOutput)
}

// The hostname of instance.
func (o EcsInstanceSetOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Elastic High Performance Computing (E-HPC) cluster to which to assign the instance.
func (o EcsInstanceSetOutput) HpcClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.HpcClusterId }).(pulumi.StringPtrOutput)
}

// The Image to use for the instance.
func (o EcsInstanceSetOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// The billing method of the instance. Valid values: `PrePaid`, `PostPaid`.
func (o EcsInstanceSetOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

// A list of ECS Instance ID.
func (o EcsInstanceSetOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringArrayOutput { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// The name of the ECS. This instanceName can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen, and must not begin with `http://` or `https://`.
func (o EcsInstanceSetOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The type of instance to start.
func (o EcsInstanceSetOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The Internet charge type of the instance. Valid values are `PayByBandwidth`, `PayByTraffic`.
func (o EcsInstanceSetOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.InternetChargeType }).(pulumi.StringOutput)
}

// The Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bit per second). Valid values: `1` to `100`.
func (o EcsInstanceSetOutput) InternetMaxBandwidthOut() pulumi.IntOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.IntOutput { return v.InternetMaxBandwidthOut }).(pulumi.IntOutput)
}

// The name of key pair that can login ECS instance successfully without password.
func (o EcsInstanceSetOutput) KeyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.KeyPairName }).(pulumi.StringPtrOutput)
}

// The ID of the launch template.
func (o EcsInstanceSetOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// The name of the launch template. To use a launch template to create an instance, you must use the `launchTemplateId` or `launchTemplateName` parameter to specify the launch template.
func (o EcsInstanceSetOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// The version of the launch template.
func (o EcsInstanceSetOutput) LaunchTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.LaunchTemplateVersion }).(pulumi.StringPtrOutput)
}

// A list of NetworkInterface. See the following `Block networkInterfaces`.
func (o EcsInstanceSetOutput) NetworkInterfaces() EcsInstanceSetNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *EcsInstanceSet) EcsInstanceSetNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(EcsInstanceSetNetworkInterfaceArrayOutput)
}

// The password to an instance is a string of 8 to 30 characters. It must contain uppercase/lowercase letters and numerals, but cannot contain special symbols.
func (o EcsInstanceSetOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Whether to use the password preset in the image.
func (o EcsInstanceSetOutput) PasswordInherit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.BoolPtrOutput { return v.PasswordInherit }).(pulumi.BoolPtrOutput)
}

// The duration that you will buy the resource, in month. It is valid when `instanceChargeType` is `PrePaid`.
// - When `periodUnit` is `Month`, Valid values: `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, `60`.
// - When `periodUnit` is `Week`, Valid values: `1`, `2`, `3`.
func (o EcsInstanceSetOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The duration unit that you will buy the resource. It is valid when `instanceChargeType` is 'PrePaid'. Valid value: `Week`, `Month`.
func (o EcsInstanceSetOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// The Instance RAM role name.
func (o EcsInstanceSetOutput) RamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.RamRoleName }).(pulumi.StringPtrOutput)
}

// The ID of resource group which the instance belongs.
func (o EcsInstanceSetOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The security enhancement strategy.
func (o EcsInstanceSetOutput) SecurityEnhancementStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.SecurityEnhancementStrategy }).(pulumi.StringPtrOutput)
}

// A list of security group ids to associate with.
func (o EcsInstanceSetOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The hourly price threshold of a instance, and it takes effect only when parameter 'spot_strategy' is 'SpotWithPriceLimit'. Three decimals is allowed at most.
func (o EcsInstanceSetOutput) SpotPriceLimit() pulumi.Float64Output {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.Float64Output { return v.SpotPriceLimit }).(pulumi.Float64Output)
}

// The spot strategy of a Pay-As-You-Go instance, and it takes effect only when parameter `instanceChargeType` is 'PostPaid'.
func (o EcsInstanceSetOutput) SpotStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.SpotStrategy }).(pulumi.StringOutput)
}

// The ID of the automatic snapshot policy applied to the system disk.
func (o EcsInstanceSetOutput) SystemDiskAutoSnapshotPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.SystemDiskAutoSnapshotPolicyId }).(pulumi.StringPtrOutput)
}

// The category of the system disk. Valid values are `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloud`.
func (o EcsInstanceSetOutput) SystemDiskCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.SystemDiskCategory }).(pulumi.StringOutput)
}

// The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
func (o EcsInstanceSetOutput) SystemDiskDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.SystemDiskDescription }).(pulumi.StringPtrOutput)
}

// The name of the system disk.
func (o EcsInstanceSetOutput) SystemDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.SystemDiskName }).(pulumi.StringPtrOutput)
}

// The performance level of the ESSD used as the system disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
func (o EcsInstanceSetOutput) SystemDiskPerformanceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.SystemDiskPerformanceLevel }).(pulumi.StringOutput)
}

// The size of the system disk, measured in GiB. Value range:  values: `20` to `500`.
func (o EcsInstanceSetOutput) SystemDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.IntOutput { return v.SystemDiskSize }).(pulumi.IntOutput)
}

// A mapping of tags to assign to the resource.
func (o EcsInstanceSetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Whether to automatically append incremental suffixes to the hostname specified by the HostName parameter and to the instance name specified by the InstanceName parameter when you batch create instances. The incremental suffixes can range from `001` to `999`.
func (o EcsInstanceSetOutput) UniqueSuffix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.BoolPtrOutput { return v.UniqueSuffix }).(pulumi.BoolPtrOutput)
}

// The virtual switch ID to launch in VPC.
func (o EcsInstanceSetOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringPtrOutput { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// The ID of the zone in which to create the instance.
func (o EcsInstanceSetOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsInstanceSet) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type EcsInstanceSetArrayOutput struct{ *pulumi.OutputState }

func (EcsInstanceSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsInstanceSet)(nil)).Elem()
}

func (o EcsInstanceSetArrayOutput) ToEcsInstanceSetArrayOutput() EcsInstanceSetArrayOutput {
	return o
}

func (o EcsInstanceSetArrayOutput) ToEcsInstanceSetArrayOutputWithContext(ctx context.Context) EcsInstanceSetArrayOutput {
	return o
}

func (o EcsInstanceSetArrayOutput) Index(i pulumi.IntInput) EcsInstanceSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EcsInstanceSet {
		return vs[0].([]*EcsInstanceSet)[vs[1].(int)]
	}).(EcsInstanceSetOutput)
}

type EcsInstanceSetMapOutput struct{ *pulumi.OutputState }

func (EcsInstanceSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsInstanceSet)(nil)).Elem()
}

func (o EcsInstanceSetMapOutput) ToEcsInstanceSetMapOutput() EcsInstanceSetMapOutput {
	return o
}

func (o EcsInstanceSetMapOutput) ToEcsInstanceSetMapOutputWithContext(ctx context.Context) EcsInstanceSetMapOutput {
	return o
}

func (o EcsInstanceSetMapOutput) MapIndex(k pulumi.StringInput) EcsInstanceSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EcsInstanceSet {
		return vs[0].(map[string]*EcsInstanceSet)[vs[1].(string)]
	}).(EcsInstanceSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EcsInstanceSetInput)(nil)).Elem(), &EcsInstanceSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsInstanceSetArrayInput)(nil)).Elem(), EcsInstanceSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsInstanceSetMapInput)(nil)).Elem(), EcsInstanceSetMap{})
	pulumi.RegisterOutputType(EcsInstanceSetOutput{})
	pulumi.RegisterOutputType(EcsInstanceSetArrayOutput{})
	pulumi.RegisterOutputType(EcsInstanceSetMapOutput{})
}
