// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SecurityGroupRule struct {
	pulumi.CustomResourceState

	// The target IP address range. The default value is 0.0.0.0/0 (which means no restriction will be applied). Other supported formats include 10.159.6.18/12. Only IPv4 is supported.
	CidrIp pulumi.StringPtrOutput `pulumi:"cidrIp"`
	// The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The protocol. Can be `tcp`, `udp`, `icmp`, `gre` or `all`.
	IpProtocol pulumi.StringOutput `pulumi:"ipProtocol"`
	// Network type, can be either `internet` or `intranet`, the default value is `internet`.
	NicType pulumi.StringOutput `pulumi:"nicType"`
	// Authorization policy, can be either `accept` or `drop`, the default value is `accept`.
	Policy pulumi.StringPtrOutput `pulumi:"policy"`
	// The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
	// For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
	PortRange pulumi.StringPtrOutput `pulumi:"portRange"`
	// Authorization policy priority, with parameter values: `1-100`, default value: 1.
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// The security group to apply this rule to.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
	SourceGroupOwnerAccount pulumi.StringPtrOutput `pulumi:"sourceGroupOwnerAccount"`
	// The target security group ID within the same region. If this field is specified, the `nicType` can only select `intranet`.
	SourceSecurityGroupId pulumi.StringPtrOutput `pulumi:"sourceSecurityGroupId"`
	// The type of rule being created. Valid options are `ingress` (inbound) or `egress` (outbound).
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecurityGroupRule registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupRule(ctx *pulumi.Context,
	name string, args *SecurityGroupRuleArgs, opts ...pulumi.ResourceOption) (*SecurityGroupRule, error) {
	if args == nil || args.IpProtocol == nil {
		return nil, errors.New("missing required argument 'IpProtocol'")
	}
	if args == nil || args.SecurityGroupId == nil {
		return nil, errors.New("missing required argument 'SecurityGroupId'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &SecurityGroupRuleArgs{}
	}
	var resource SecurityGroupRule
	err := ctx.RegisterResource("alicloud:ecs/securityGroupRule:SecurityGroupRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupRule gets an existing SecurityGroupRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupRuleState, opts ...pulumi.ResourceOption) (*SecurityGroupRule, error) {
	var resource SecurityGroupRule
	err := ctx.ReadResource("alicloud:ecs/securityGroupRule:SecurityGroupRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupRule resources.
type securityGroupRuleState struct {
	// The target IP address range. The default value is 0.0.0.0/0 (which means no restriction will be applied). Other supported formats include 10.159.6.18/12. Only IPv4 is supported.
	CidrIp *string `pulumi:"cidrIp"`
	// The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
	Description *string `pulumi:"description"`
	// The protocol. Can be `tcp`, `udp`, `icmp`, `gre` or `all`.
	IpProtocol *string `pulumi:"ipProtocol"`
	// Network type, can be either `internet` or `intranet`, the default value is `internet`.
	NicType *string `pulumi:"nicType"`
	// Authorization policy, can be either `accept` or `drop`, the default value is `accept`.
	Policy *string `pulumi:"policy"`
	// The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
	// For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
	PortRange *string `pulumi:"portRange"`
	// Authorization policy priority, with parameter values: `1-100`, default value: 1.
	Priority *int `pulumi:"priority"`
	// The security group to apply this rule to.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
	SourceGroupOwnerAccount *string `pulumi:"sourceGroupOwnerAccount"`
	// The target security group ID within the same region. If this field is specified, the `nicType` can only select `intranet`.
	SourceSecurityGroupId *string `pulumi:"sourceSecurityGroupId"`
	// The type of rule being created. Valid options are `ingress` (inbound) or `egress` (outbound).
	Type *string `pulumi:"type"`
}

type SecurityGroupRuleState struct {
	// The target IP address range. The default value is 0.0.0.0/0 (which means no restriction will be applied). Other supported formats include 10.159.6.18/12. Only IPv4 is supported.
	CidrIp pulumi.StringPtrInput
	// The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
	Description pulumi.StringPtrInput
	// The protocol. Can be `tcp`, `udp`, `icmp`, `gre` or `all`.
	IpProtocol pulumi.StringPtrInput
	// Network type, can be either `internet` or `intranet`, the default value is `internet`.
	NicType pulumi.StringPtrInput
	// Authorization policy, can be either `accept` or `drop`, the default value is `accept`.
	Policy pulumi.StringPtrInput
	// The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
	// For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
	PortRange pulumi.StringPtrInput
	// Authorization policy priority, with parameter values: `1-100`, default value: 1.
	Priority pulumi.IntPtrInput
	// The security group to apply this rule to.
	SecurityGroupId pulumi.StringPtrInput
	// The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
	SourceGroupOwnerAccount pulumi.StringPtrInput
	// The target security group ID within the same region. If this field is specified, the `nicType` can only select `intranet`.
	SourceSecurityGroupId pulumi.StringPtrInput
	// The type of rule being created. Valid options are `ingress` (inbound) or `egress` (outbound).
	Type pulumi.StringPtrInput
}

func (SecurityGroupRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRuleState)(nil)).Elem()
}

type securityGroupRuleArgs struct {
	// The target IP address range. The default value is 0.0.0.0/0 (which means no restriction will be applied). Other supported formats include 10.159.6.18/12. Only IPv4 is supported.
	CidrIp *string `pulumi:"cidrIp"`
	// The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
	Description *string `pulumi:"description"`
	// The protocol. Can be `tcp`, `udp`, `icmp`, `gre` or `all`.
	IpProtocol string `pulumi:"ipProtocol"`
	// Network type, can be either `internet` or `intranet`, the default value is `internet`.
	NicType *string `pulumi:"nicType"`
	// Authorization policy, can be either `accept` or `drop`, the default value is `accept`.
	Policy *string `pulumi:"policy"`
	// The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
	// For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
	PortRange *string `pulumi:"portRange"`
	// Authorization policy priority, with parameter values: `1-100`, default value: 1.
	Priority *int `pulumi:"priority"`
	// The security group to apply this rule to.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
	SourceGroupOwnerAccount *string `pulumi:"sourceGroupOwnerAccount"`
	// The target security group ID within the same region. If this field is specified, the `nicType` can only select `intranet`.
	SourceSecurityGroupId *string `pulumi:"sourceSecurityGroupId"`
	// The type of rule being created. Valid options are `ingress` (inbound) or `egress` (outbound).
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a SecurityGroupRule resource.
type SecurityGroupRuleArgs struct {
	// The target IP address range. The default value is 0.0.0.0/0 (which means no restriction will be applied). Other supported formats include 10.159.6.18/12. Only IPv4 is supported.
	CidrIp pulumi.StringPtrInput
	// The description of the security group rule. The description can be up to 1 to 512 characters in length. Defaults to null.
	Description pulumi.StringPtrInput
	// The protocol. Can be `tcp`, `udp`, `icmp`, `gre` or `all`.
	IpProtocol pulumi.StringInput
	// Network type, can be either `internet` or `intranet`, the default value is `internet`.
	NicType pulumi.StringPtrInput
	// Authorization policy, can be either `accept` or `drop`, the default value is `accept`.
	Policy pulumi.StringPtrInput
	// The range of port numbers relevant to the IP protocol. Default to "-1/-1". When the protocol is tcp or udp, each side port number range from 1 to 65535 and '-1/-1' will be invalid.
	// For example, `1/200` means that the range of the port numbers is 1-200. Other protocols' 'port_range' can only be "-1/-1", and other values will be invalid.
	PortRange pulumi.StringPtrInput
	// Authorization policy priority, with parameter values: `1-100`, default value: 1.
	Priority pulumi.IntPtrInput
	// The security group to apply this rule to.
	SecurityGroupId pulumi.StringInput
	// The Alibaba Cloud user account Id of the target security group when security groups are authorized across accounts.  This parameter is invalid if `cidrIp` has already been set.
	SourceGroupOwnerAccount pulumi.StringPtrInput
	// The target security group ID within the same region. If this field is specified, the `nicType` can only select `intranet`.
	SourceSecurityGroupId pulumi.StringPtrInput
	// The type of rule being created. Valid options are `ingress` (inbound) or `egress` (outbound).
	Type pulumi.StringInput
}

func (SecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRuleArgs)(nil)).Elem()
}

type SecurityGroupRuleInput interface {
	pulumi.Input

	ToSecurityGroupRuleOutput() SecurityGroupRuleOutput
	ToSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRuleOutput
}

func (SecurityGroupRule) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRule) ToSecurityGroupRuleOutput() SecurityGroupRuleOutput {
	return i.ToSecurityGroupRuleOutputWithContext(context.Background())
}

func (i SecurityGroupRule) ToSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleOutput)
}

type SecurityGroupRuleOutput struct {
	*pulumi.OutputState
}

func (SecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRuleOutput)(nil)).Elem()
}

func (o SecurityGroupRuleOutput) ToSecurityGroupRuleOutput() SecurityGroupRuleOutput {
	return o
}

func (o SecurityGroupRuleOutput) ToSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRuleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SecurityGroupRuleOutput{})
}
