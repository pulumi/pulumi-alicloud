// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides Ecs Capacity Reservation available to the user.
//
// > **NOTE:** Available in 1.195.0+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _default, err := ecs.GetCapacityReservations(ctx, &ecs.GetCapacityReservationsArgs{
// Ids: interface{}{
// alicloud_ecs_capacity_reservation.Default.Id,
// },
// NameRegex: pulumi.StringRef(alicloud_ecs_capacity_reservation.Default.Name),
// InstanceType: pulumi.StringRef("ecs.c6.large"),
// Platform: pulumi.StringRef("linux"),
// }, nil);
// if err != nil {
// return err
// }
// ctx.Export("alicloudEcsCapacityReservationExampleId", _default.Reservations[0].Id)
// return nil
// })
// }
// ```
func GetCapacityReservations(ctx *pulumi.Context, args *GetCapacityReservationsArgs, opts ...pulumi.InvokeOption) (*GetCapacityReservationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCapacityReservationsResult
	err := ctx.Invoke("alicloud:ecs/getCapacityReservations:getCapacityReservations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCapacityReservations.
type GetCapacityReservationsArgs struct {
	CapacityReservationIds []string `pulumi:"capacityReservationIds"`
	// A list of Capacity Reservation IDs.
	Ids []string `pulumi:"ids"`
	// Instance type. Currently, you can only set the capacity reservation service for one instance type.
	InstanceType *string `pulumi:"instanceType"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The payment type of the resource. value range `PostPaid`, `PrePaid`.
	PaymentType *string `pulumi:"paymentType"`
	// platform of the capacity reservation , value range `windows`, `linux`, `all`.
	Platform *string `pulumi:"platform"`
	// The resource group id.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of the capacity reservation. value range `All`, `Pending`, `Preparing`, `Prepared`, `Active`, `Released`.
	Status *string `pulumi:"status"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getCapacityReservations.
type GetCapacityReservationsResult struct {
	CapacityReservationIds []string `pulumi:"capacityReservationIds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Capacity Reservation IDs.
	Ids []string `pulumi:"ids"`
	// Instance type. Currently, you can only set the capacity reservation service for one instance type.
	InstanceType *string `pulumi:"instanceType"`
	NameRegex    *string `pulumi:"nameRegex"`
	// A list of name of Capacity Reservations.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The payment type of the resource
	PaymentType *string `pulumi:"paymentType"`
	// platform of the capacity reservation.
	Platform *string `pulumi:"platform"`
	// A list of Capacity Reservation Entries. Each element contains the following attributes:
	Reservations []GetCapacityReservationsReservation `pulumi:"reservations"`
	// The resource group id
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of the capacity reservation.
	Status *string `pulumi:"status"`
	// A mapping of tags to assign to the Capacity Reservation.
	Tags map[string]interface{} `pulumi:"tags"`
}

func GetCapacityReservationsOutput(ctx *pulumi.Context, args GetCapacityReservationsOutputArgs, opts ...pulumi.InvokeOption) GetCapacityReservationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCapacityReservationsResult, error) {
			args := v.(GetCapacityReservationsArgs)
			r, err := GetCapacityReservations(ctx, &args, opts...)
			var s GetCapacityReservationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCapacityReservationsResultOutput)
}

// A collection of arguments for invoking getCapacityReservations.
type GetCapacityReservationsOutputArgs struct {
	CapacityReservationIds pulumi.StringArrayInput `pulumi:"capacityReservationIds"`
	// A list of Capacity Reservation IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Instance type. Currently, you can only set the capacity reservation service for one instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The payment type of the resource. value range `PostPaid`, `PrePaid`.
	PaymentType pulumi.StringPtrInput `pulumi:"paymentType"`
	// platform of the capacity reservation , value range `windows`, `linux`, `all`.
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// The resource group id.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The status of the capacity reservation. value range `All`, `Pending`, `Preparing`, `Prepared`, `Active`, `Released`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetCapacityReservationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCapacityReservationsArgs)(nil)).Elem()
}

// A collection of values returned by getCapacityReservations.
type GetCapacityReservationsResultOutput struct{ *pulumi.OutputState }

func (GetCapacityReservationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCapacityReservationsResult)(nil)).Elem()
}

func (o GetCapacityReservationsResultOutput) ToGetCapacityReservationsResultOutput() GetCapacityReservationsResultOutput {
	return o
}

func (o GetCapacityReservationsResultOutput) ToGetCapacityReservationsResultOutputWithContext(ctx context.Context) GetCapacityReservationsResultOutput {
	return o
}

func (o GetCapacityReservationsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCapacityReservationsResult] {
	return pulumix.Output[GetCapacityReservationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCapacityReservationsResultOutput) CapacityReservationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) []string { return v.CapacityReservationIds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCapacityReservationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Capacity Reservation IDs.
func (o GetCapacityReservationsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// Instance type. Currently, you can only set the capacity reservation service for one instance type.
func (o GetCapacityReservationsResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o GetCapacityReservationsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Capacity Reservations.
func (o GetCapacityReservationsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetCapacityReservationsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The payment type of the resource
func (o GetCapacityReservationsResultOutput) PaymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.PaymentType }).(pulumi.StringPtrOutput)
}

// platform of the capacity reservation.
func (o GetCapacityReservationsResultOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// A list of Capacity Reservation Entries. Each element contains the following attributes:
func (o GetCapacityReservationsResultOutput) Reservations() GetCapacityReservationsReservationArrayOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) []GetCapacityReservationsReservation { return v.Reservations }).(GetCapacityReservationsReservationArrayOutput)
}

// The resource group id
func (o GetCapacityReservationsResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The status of the capacity reservation.
func (o GetCapacityReservationsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the Capacity Reservation.
func (o GetCapacityReservationsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCapacityReservationsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCapacityReservationsResultOutput{})
}
