// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.121.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultEcsKeyPair, err := ecs.NewEcsKeyPair(ctx, "default", &ecs.EcsKeyPairArgs{
//				KeyPairName:     pulumi.String(name),
//				PublicKey:       pulumi.String("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg"),
//				ResourceGroupId: pulumi.String(_default.Ids[1]),
//				Tags: pulumi.StringMap{
//					"Created": pulumi.String("TF"),
//					"For":     pulumi.String("KeyPair"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ids := ecs.GetEcsKeyPairsOutput(ctx, ecs.GetEcsKeyPairsOutputArgs{
//				Ids: pulumi.StringArray{
//					defaultEcsKeyPair.ID(),
//				},
//			}, nil)
//			ctx.Export("ecsKeyPairId0", ids.ApplyT(func(ids ecs.GetEcsKeyPairsResult) (*string, error) {
//				return &ids.Pairs[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetEcsKeyPairs(ctx *pulumi.Context, args *GetEcsKeyPairsArgs, opts ...pulumi.InvokeOption) (*GetEcsKeyPairsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEcsKeyPairsResult
	err := ctx.Invoke("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEcsKeyPairs.
type GetEcsKeyPairsArgs struct {
	// The fingerprint of the key pair.
	FingerPrint *string `pulumi:"fingerPrint"`
	// A list of Key Pair IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Key Pair name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getEcsKeyPairs.
type GetEcsKeyPairsResult struct {
	// The fingerprint of the Key Pair.
	FingerPrint *string `pulumi:"fingerPrint"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// (Deprecated since v1.121.0) A list of Ecs Key Pairs. Each element contains the following attributes:
	//
	// Deprecated: Field `keyPairs` has been deprecated from provider version 1.121.0. New field `pairs` instead.
	KeyPairs  []GetEcsKeyPairsKeyPair `pulumi:"keyPairs"`
	NameRegex *string                 `pulumi:"nameRegex"`
	// A list of Key Pair names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Ecs Key Pairs. Each element contains the following attributes:
	Pairs []GetEcsKeyPairsPair `pulumi:"pairs"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tags of the Key Pair.
	Tags map[string]string `pulumi:"tags"`
}

func GetEcsKeyPairsOutput(ctx *pulumi.Context, args GetEcsKeyPairsOutputArgs, opts ...pulumi.InvokeOption) GetEcsKeyPairsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEcsKeyPairsResultOutput, error) {
			args := v.(GetEcsKeyPairsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", args, GetEcsKeyPairsResultOutput{}, options).(GetEcsKeyPairsResultOutput), nil
		}).(GetEcsKeyPairsResultOutput)
}

// A collection of arguments for invoking getEcsKeyPairs.
type GetEcsKeyPairsOutputArgs struct {
	// The fingerprint of the key pair.
	FingerPrint pulumi.StringPtrInput `pulumi:"fingerPrint"`
	// A list of Key Pair IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Key Pair name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetEcsKeyPairsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsKeyPairsArgs)(nil)).Elem()
}

// A collection of values returned by getEcsKeyPairs.
type GetEcsKeyPairsResultOutput struct{ *pulumi.OutputState }

func (GetEcsKeyPairsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsKeyPairsResult)(nil)).Elem()
}

func (o GetEcsKeyPairsResultOutput) ToGetEcsKeyPairsResultOutput() GetEcsKeyPairsResultOutput {
	return o
}

func (o GetEcsKeyPairsResultOutput) ToGetEcsKeyPairsResultOutputWithContext(ctx context.Context) GetEcsKeyPairsResultOutput {
	return o
}

// The fingerprint of the Key Pair.
func (o GetEcsKeyPairsResultOutput) FingerPrint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) *string { return v.FingerPrint }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEcsKeyPairsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEcsKeyPairsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// (Deprecated since v1.121.0) A list of Ecs Key Pairs. Each element contains the following attributes:
//
// Deprecated: Field `keyPairs` has been deprecated from provider version 1.121.0. New field `pairs` instead.
func (o GetEcsKeyPairsResultOutput) KeyPairs() GetEcsKeyPairsKeyPairArrayOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) []GetEcsKeyPairsKeyPair { return v.KeyPairs }).(GetEcsKeyPairsKeyPairArrayOutput)
}

func (o GetEcsKeyPairsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Key Pair names.
func (o GetEcsKeyPairsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetEcsKeyPairsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Ecs Key Pairs. Each element contains the following attributes:
func (o GetEcsKeyPairsResultOutput) Pairs() GetEcsKeyPairsPairArrayOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) []GetEcsKeyPairsPair { return v.Pairs }).(GetEcsKeyPairsPairArrayOutput)
}

// The ID of the resource group.
func (o GetEcsKeyPairsResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The tags of the Key Pair.
func (o GetEcsKeyPairsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEcsKeyPairsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEcsKeyPairsResultOutput{})
}
