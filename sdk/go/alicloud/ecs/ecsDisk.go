// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// ECS Disk can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ecs/ecsDisk:EcsDisk example <id>
// ```
type EcsDisk struct {
	pulumi.CustomResourceState

	AdvancedFeatures pulumi.StringPtrOutput `pulumi:"advancedFeatures"`
	// Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
	//
	// Deprecated: Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
	BurstingEnabled pulumi.BoolPtrOutput `pulumi:"burstingEnabled"`
	// The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
	Category pulumi.StringPtrOutput `pulumi:"category"`
	// (Available since v1.237.0) The time when the disk was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
	DeleteAutoSnapshot pulumi.BoolPtrOutput `pulumi:"deleteAutoSnapshot"`
	// Specifies whether to release the disk along with its associated instance. Default value: `false`.
	DeleteWithInstance pulumi.BoolOutput `pulumi:"deleteWithInstance"`
	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName pulumi.StringOutput `pulumi:"diskName"`
	// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
	EnableAutoSnapshot pulumi.BoolOutput      `pulumi:"enableAutoSnapshot"`
	EncryptAlgorithm   pulumi.StringPtrOutput `pulumi:"encryptAlgorithm"`
	// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
	Encrypted pulumi.BoolOutput `pulumi:"encrypted"`
	// The ID of the instance to which the created subscription disk is automatically attached.
	// * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
	// * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
	MultiAttach pulumi.StringOutput `pulumi:"multiAttach"`
	// Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	//
	// > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
	//
	// Deprecated: Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
	PerformanceLevel pulumi.StringOutput `pulumi:"performanceLevel"`
	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
	ProvisionedIops pulumi.IntPtrOutput `pulumi:"provisionedIops"`
	// (Available since v1.237.0) The ID of the region to which the disk belongs.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The ID of the resource group to which to add the disk.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
	// - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
	// - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
	// - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
	// - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
	// - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
	// - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
	// - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
	// - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
	// - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
	Size pulumi.IntOutput `pulumi:"size"`
	// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
	SnapshotId pulumi.StringOutput `pulumi:"snapshotId"`
	// The status of the disk.
	Status pulumi.StringOutput `pulumi:"status"`
	// The ID of the storage set.
	StorageSetId pulumi.StringPtrOutput `pulumi:"storageSetId"`
	// The number of partitions in the storage set.
	StorageSetPartitionNumber pulumi.IntPtrOutput `pulumi:"storageSetPartitionNumber"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewEcsDisk registers a new resource with the given unique name, arguments, and options.
func NewEcsDisk(ctx *pulumi.Context,
	name string, args *EcsDiskArgs, opts ...pulumi.ResourceOption) (*EcsDisk, error) {
	if args == nil {
		args = &EcsDiskArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EcsDisk
	err := ctx.RegisterResource("alicloud:ecs/ecsDisk:EcsDisk", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEcsDisk gets an existing EcsDisk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEcsDisk(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EcsDiskState, opts ...pulumi.ResourceOption) (*EcsDisk, error) {
	var resource EcsDisk
	err := ctx.ReadResource("alicloud:ecs/ecsDisk:EcsDisk", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EcsDisk resources.
type ecsDiskState struct {
	AdvancedFeatures *string `pulumi:"advancedFeatures"`
	// Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
	//
	// Deprecated: Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
	BurstingEnabled *bool `pulumi:"burstingEnabled"`
	// The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
	Category *string `pulumi:"category"`
	// (Available since v1.237.0) The time when the disk was created.
	CreateTime *string `pulumi:"createTime"`
	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
	DeleteAutoSnapshot *bool `pulumi:"deleteAutoSnapshot"`
	// Specifies whether to release the disk along with its associated instance. Default value: `false`.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `pulumi:"description"`
	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName *string `pulumi:"diskName"`
	// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
	EnableAutoSnapshot *bool   `pulumi:"enableAutoSnapshot"`
	EncryptAlgorithm   *string `pulumi:"encryptAlgorithm"`
	// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
	Encrypted *bool `pulumi:"encrypted"`
	// The ID of the instance to which the created subscription disk is automatically attached.
	// * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
	// * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
	MultiAttach *string `pulumi:"multiAttach"`
	// Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	//
	// > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
	//
	// Deprecated: Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	Name *string `pulumi:"name"`
	// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
	PaymentType *string `pulumi:"paymentType"`
	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
	ProvisionedIops *int `pulumi:"provisionedIops"`
	// (Available since v1.237.0) The ID of the region to which the disk belongs.
	RegionId *string `pulumi:"regionId"`
	// The ID of the resource group to which to add the disk.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
	// - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
	// - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
	// - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
	// - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
	// - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
	// - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
	// - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
	// - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
	// - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
	Size *int `pulumi:"size"`
	// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
	SnapshotId *string `pulumi:"snapshotId"`
	// The status of the disk.
	Status *string `pulumi:"status"`
	// The ID of the storage set.
	StorageSetId *string `pulumi:"storageSetId"`
	// The number of partitions in the storage set.
	StorageSetPartitionNumber *int `pulumi:"storageSetPartitionNumber"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
	Type *string `pulumi:"type"`
	// ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	ZoneId *string `pulumi:"zoneId"`
}

type EcsDiskState struct {
	AdvancedFeatures pulumi.StringPtrInput
	// Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
	//
	// Deprecated: Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
	AvailabilityZone pulumi.StringPtrInput
	// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
	BurstingEnabled pulumi.BoolPtrInput
	// The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
	Category pulumi.StringPtrInput
	// (Available since v1.237.0) The time when the disk was created.
	CreateTime pulumi.StringPtrInput
	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
	DeleteAutoSnapshot pulumi.BoolPtrInput
	// Specifies whether to release the disk along with its associated instance. Default value: `false`.
	DeleteWithInstance pulumi.BoolPtrInput
	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description pulumi.StringPtrInput
	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName pulumi.StringPtrInput
	// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
	DryRun pulumi.BoolPtrInput
	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
	EnableAutoSnapshot pulumi.BoolPtrInput
	EncryptAlgorithm   pulumi.StringPtrInput
	// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
	Encrypted pulumi.BoolPtrInput
	// The ID of the instance to which the created subscription disk is automatically attached.
	// * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
	// * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	InstanceId pulumi.StringPtrInput
	// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
	KmsKeyId pulumi.StringPtrInput
	// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
	MultiAttach pulumi.StringPtrInput
	// Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	//
	// > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
	//
	// Deprecated: Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	Name pulumi.StringPtrInput
	// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
	PaymentType pulumi.StringPtrInput
	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
	PerformanceLevel pulumi.StringPtrInput
	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
	ProvisionedIops pulumi.IntPtrInput
	// (Available since v1.237.0) The ID of the region to which the disk belongs.
	RegionId pulumi.StringPtrInput
	// The ID of the resource group to which to add the disk.
	ResourceGroupId pulumi.StringPtrInput
	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
	// - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
	// - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
	// - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
	// - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
	// - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
	// - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
	// - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
	// - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
	// - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
	Size pulumi.IntPtrInput
	// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
	SnapshotId pulumi.StringPtrInput
	// The status of the disk.
	Status pulumi.StringPtrInput
	// The ID of the storage set.
	StorageSetId pulumi.StringPtrInput
	// The number of partitions in the storage set.
	StorageSetPartitionNumber pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
	Type pulumi.StringPtrInput
	// ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	ZoneId pulumi.StringPtrInput
}

func (EcsDiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsDiskState)(nil)).Elem()
}

type ecsDiskArgs struct {
	AdvancedFeatures *string `pulumi:"advancedFeatures"`
	// Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
	//
	// Deprecated: Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
	BurstingEnabled *bool `pulumi:"burstingEnabled"`
	// The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
	Category *string `pulumi:"category"`
	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
	DeleteAutoSnapshot *bool `pulumi:"deleteAutoSnapshot"`
	// Specifies whether to release the disk along with its associated instance. Default value: `false`.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `pulumi:"description"`
	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName *string `pulumi:"diskName"`
	// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
	EnableAutoSnapshot *bool   `pulumi:"enableAutoSnapshot"`
	EncryptAlgorithm   *string `pulumi:"encryptAlgorithm"`
	// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
	Encrypted *bool `pulumi:"encrypted"`
	// The ID of the instance to which the created subscription disk is automatically attached.
	// * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
	// * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
	MultiAttach *string `pulumi:"multiAttach"`
	// Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	//
	// > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
	//
	// Deprecated: Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	Name *string `pulumi:"name"`
	// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
	PaymentType *string `pulumi:"paymentType"`
	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
	ProvisionedIops *int `pulumi:"provisionedIops"`
	// The ID of the resource group to which to add the disk.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
	// - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
	// - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
	// - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
	// - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
	// - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
	// - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
	// - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
	// - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
	// - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
	Size *int `pulumi:"size"`
	// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
	SnapshotId *string `pulumi:"snapshotId"`
	// The ID of the storage set.
	StorageSetId *string `pulumi:"storageSetId"`
	// The number of partitions in the storage set.
	StorageSetPartitionNumber *int `pulumi:"storageSetPartitionNumber"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
	Type *string `pulumi:"type"`
	// ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a EcsDisk resource.
type EcsDiskArgs struct {
	AdvancedFeatures pulumi.StringPtrInput
	// Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
	//
	// Deprecated: Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
	AvailabilityZone pulumi.StringPtrInput
	// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
	BurstingEnabled pulumi.BoolPtrInput
	// The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
	Category pulumi.StringPtrInput
	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
	DeleteAutoSnapshot pulumi.BoolPtrInput
	// Specifies whether to release the disk along with its associated instance. Default value: `false`.
	DeleteWithInstance pulumi.BoolPtrInput
	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description pulumi.StringPtrInput
	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName pulumi.StringPtrInput
	// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
	DryRun pulumi.BoolPtrInput
	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
	EnableAutoSnapshot pulumi.BoolPtrInput
	EncryptAlgorithm   pulumi.StringPtrInput
	// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
	Encrypted pulumi.BoolPtrInput
	// The ID of the instance to which the created subscription disk is automatically attached.
	// * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
	// * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	InstanceId pulumi.StringPtrInput
	// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
	KmsKeyId pulumi.StringPtrInput
	// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
	MultiAttach pulumi.StringPtrInput
	// Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	//
	// > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
	//
	// Deprecated: Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
	Name pulumi.StringPtrInput
	// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
	PaymentType pulumi.StringPtrInput
	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
	PerformanceLevel pulumi.StringPtrInput
	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
	ProvisionedIops pulumi.IntPtrInput
	// The ID of the resource group to which to add the disk.
	ResourceGroupId pulumi.StringPtrInput
	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
	// - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
	// - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
	// - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
	// - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
	// - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
	// - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
	// - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
	// - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
	// - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
	// - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
	Size pulumi.IntPtrInput
	// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
	SnapshotId pulumi.StringPtrInput
	// The ID of the storage set.
	StorageSetId pulumi.StringPtrInput
	// The number of partitions in the storage set.
	StorageSetPartitionNumber pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
	Type pulumi.StringPtrInput
	// ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
	ZoneId pulumi.StringPtrInput
}

func (EcsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsDiskArgs)(nil)).Elem()
}

type EcsDiskInput interface {
	pulumi.Input

	ToEcsDiskOutput() EcsDiskOutput
	ToEcsDiskOutputWithContext(ctx context.Context) EcsDiskOutput
}

func (*EcsDisk) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsDisk)(nil)).Elem()
}

func (i *EcsDisk) ToEcsDiskOutput() EcsDiskOutput {
	return i.ToEcsDiskOutputWithContext(context.Background())
}

func (i *EcsDisk) ToEcsDiskOutputWithContext(ctx context.Context) EcsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsDiskOutput)
}

// EcsDiskArrayInput is an input type that accepts EcsDiskArray and EcsDiskArrayOutput values.
// You can construct a concrete instance of `EcsDiskArrayInput` via:
//
//	EcsDiskArray{ EcsDiskArgs{...} }
type EcsDiskArrayInput interface {
	pulumi.Input

	ToEcsDiskArrayOutput() EcsDiskArrayOutput
	ToEcsDiskArrayOutputWithContext(context.Context) EcsDiskArrayOutput
}

type EcsDiskArray []EcsDiskInput

func (EcsDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsDisk)(nil)).Elem()
}

func (i EcsDiskArray) ToEcsDiskArrayOutput() EcsDiskArrayOutput {
	return i.ToEcsDiskArrayOutputWithContext(context.Background())
}

func (i EcsDiskArray) ToEcsDiskArrayOutputWithContext(ctx context.Context) EcsDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsDiskArrayOutput)
}

// EcsDiskMapInput is an input type that accepts EcsDiskMap and EcsDiskMapOutput values.
// You can construct a concrete instance of `EcsDiskMapInput` via:
//
//	EcsDiskMap{ "key": EcsDiskArgs{...} }
type EcsDiskMapInput interface {
	pulumi.Input

	ToEcsDiskMapOutput() EcsDiskMapOutput
	ToEcsDiskMapOutputWithContext(context.Context) EcsDiskMapOutput
}

type EcsDiskMap map[string]EcsDiskInput

func (EcsDiskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsDisk)(nil)).Elem()
}

func (i EcsDiskMap) ToEcsDiskMapOutput() EcsDiskMapOutput {
	return i.ToEcsDiskMapOutputWithContext(context.Background())
}

func (i EcsDiskMap) ToEcsDiskMapOutputWithContext(ctx context.Context) EcsDiskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsDiskMapOutput)
}

type EcsDiskOutput struct{ *pulumi.OutputState }

func (EcsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsDisk)(nil)).Elem()
}

func (o EcsDiskOutput) ToEcsDiskOutput() EcsDiskOutput {
	return o
}

func (o EcsDiskOutput) ToEcsDiskOutputWithContext(ctx context.Context) EcsDiskOutput {
	return o
}

func (o EcsDiskOutput) AdvancedFeatures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringPtrOutput { return v.AdvancedFeatures }).(pulumi.StringPtrOutput)
}

// Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
//
// Deprecated: Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
func (o EcsDiskOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
func (o EcsDiskOutput) BurstingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.BoolPtrOutput { return v.BurstingEnabled }).(pulumi.BoolPtrOutput)
}

// The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
func (o EcsDiskOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringPtrOutput { return v.Category }).(pulumi.StringPtrOutput)
}

// (Available since v1.237.0) The time when the disk was created.
func (o EcsDiskOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
func (o EcsDiskOutput) DeleteAutoSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.BoolPtrOutput { return v.DeleteAutoSnapshot }).(pulumi.BoolPtrOutput)
}

// Specifies whether to release the disk along with its associated instance. Default value: `false`.
func (o EcsDiskOutput) DeleteWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.BoolOutput { return v.DeleteWithInstance }).(pulumi.BoolOutput)
}

// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
func (o EcsDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
func (o EcsDiskOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.DiskName }).(pulumi.StringOutput)
}

// Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
func (o EcsDiskOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
func (o EcsDiskOutput) EnableAutoSnapshot() pulumi.BoolOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.BoolOutput { return v.EnableAutoSnapshot }).(pulumi.BoolOutput)
}

func (o EcsDiskOutput) EncryptAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringPtrOutput { return v.EncryptAlgorithm }).(pulumi.StringPtrOutput)
}

// Specifies whether to encrypt the disk. Default value: `false`. Valid values:
func (o EcsDiskOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.BoolOutput { return v.Encrypted }).(pulumi.BoolOutput)
}

// The ID of the instance to which the created subscription disk is automatically attached.
// * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
// * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
func (o EcsDiskOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
func (o EcsDiskOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
func (o EcsDiskOutput) MultiAttach() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.MultiAttach }).(pulumi.StringOutput)
}

// Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
//
// > **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
//
// Deprecated: Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
func (o EcsDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
func (o EcsDiskOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
// - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
// - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
// - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
// - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
func (o EcsDiskOutput) PerformanceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.PerformanceLevel }).(pulumi.StringOutput)
}

// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
func (o EcsDiskOutput) ProvisionedIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.IntPtrOutput { return v.ProvisionedIops }).(pulumi.IntPtrOutput)
}

// (Available since v1.237.0) The ID of the region to which the disk belongs.
func (o EcsDiskOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The ID of the resource group to which to add the disk.
func (o EcsDiskOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The size of the disk. Unit: GiB. This parameter is required. Valid values:
// - If `category` is set to `cloud`. Valid values: `5` to `2000`.
// - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
// - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
// - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
// - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
// - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
// - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
// - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
// - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
// - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
// - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
// - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
func (o EcsDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

// The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
func (o EcsDiskOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.SnapshotId }).(pulumi.StringOutput)
}

// The status of the disk.
func (o EcsDiskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The ID of the storage set.
func (o EcsDiskOutput) StorageSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringPtrOutput { return v.StorageSetId }).(pulumi.StringPtrOutput)
}

// The number of partitions in the storage set.
func (o EcsDiskOutput) StorageSetPartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.IntPtrOutput { return v.StorageSetPartitionNumber }).(pulumi.IntPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o EcsDiskOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
func (o EcsDiskOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
func (o EcsDiskOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDisk) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type EcsDiskArrayOutput struct{ *pulumi.OutputState }

func (EcsDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsDisk)(nil)).Elem()
}

func (o EcsDiskArrayOutput) ToEcsDiskArrayOutput() EcsDiskArrayOutput {
	return o
}

func (o EcsDiskArrayOutput) ToEcsDiskArrayOutputWithContext(ctx context.Context) EcsDiskArrayOutput {
	return o
}

func (o EcsDiskArrayOutput) Index(i pulumi.IntInput) EcsDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EcsDisk {
		return vs[0].([]*EcsDisk)[vs[1].(int)]
	}).(EcsDiskOutput)
}

type EcsDiskMapOutput struct{ *pulumi.OutputState }

func (EcsDiskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsDisk)(nil)).Elem()
}

func (o EcsDiskMapOutput) ToEcsDiskMapOutput() EcsDiskMapOutput {
	return o
}

func (o EcsDiskMapOutput) ToEcsDiskMapOutputWithContext(ctx context.Context) EcsDiskMapOutput {
	return o
}

func (o EcsDiskMapOutput) MapIndex(k pulumi.StringInput) EcsDiskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EcsDisk {
		return vs[0].(map[string]*EcsDisk)[vs[1].(string)]
	}).(EcsDiskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EcsDiskInput)(nil)).Elem(), &EcsDisk{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsDiskArrayInput)(nil)).Elem(), EcsDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsDiskMapInput)(nil)).Elem(), EcsDiskMap{})
	pulumi.RegisterOutputType(EcsDiskOutput{})
	pulumi.RegisterOutputType(EcsDiskArrayOutput{})
	pulumi.RegisterOutputType(EcsDiskMapOutput{})
}
