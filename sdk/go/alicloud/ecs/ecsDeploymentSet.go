// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ECS Deployment Set resource.
//
// For information about ECS Deployment Set and how to use it, see [What is Deployment Set](https://www.alibabacloud.com/help/en/doc-detail/91269.htm).
//
// > **NOTE:** Available since v1.140.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := ecs.NewEcsDeploymentSet(ctx, "default", &ecs.EcsDeploymentSetArgs{
//				Strategy:          pulumi.String("Availability"),
//				DeploymentSetName: pulumi.String(name),
//				Description:       pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ECS Deployment Set can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ecs/ecsDeploymentSet:EcsDeploymentSet example <id>
// ```
type EcsDeploymentSet struct {
	pulumi.CustomResourceState

	// The name of the deployment set. The name must be `2` to `128` characters in length and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with `http://` or `https://`.
	DeploymentSetName pulumi.StringPtrOutput `pulumi:"deploymentSetName"`
	// The description of the deployment set. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Field `domain` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `domain` has been deprecated from provider version 1.243.0.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Field `granularity` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `granularity` has been deprecated from provider version 1.243.0.
	Granularity pulumi.StringOutput `pulumi:"granularity"`
	// The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:
	// - `CancelMembershipAndStart` - Removes the instances from the deployment set and starts the instances immediately after they are failed over.
	// - `KeepStopped`- Leaves the instances in the Stopped state and starts them after resources are replenished.
	OnUnableToRedeployFailedInstance pulumi.StringPtrOutput `pulumi:"onUnableToRedeployFailedInstance"`
	// The deployment strategy. Default value: `Availability`. Valid values: `Availability`, `AvailabilityGroup`, `LowLatency`.
	Strategy pulumi.StringOutput `pulumi:"strategy"`
}

// NewEcsDeploymentSet registers a new resource with the given unique name, arguments, and options.
func NewEcsDeploymentSet(ctx *pulumi.Context,
	name string, args *EcsDeploymentSetArgs, opts ...pulumi.ResourceOption) (*EcsDeploymentSet, error) {
	if args == nil {
		args = &EcsDeploymentSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EcsDeploymentSet
	err := ctx.RegisterResource("alicloud:ecs/ecsDeploymentSet:EcsDeploymentSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEcsDeploymentSet gets an existing EcsDeploymentSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEcsDeploymentSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EcsDeploymentSetState, opts ...pulumi.ResourceOption) (*EcsDeploymentSet, error) {
	var resource EcsDeploymentSet
	err := ctx.ReadResource("alicloud:ecs/ecsDeploymentSet:EcsDeploymentSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EcsDeploymentSet resources.
type ecsDeploymentSetState struct {
	// The name of the deployment set. The name must be `2` to `128` characters in length and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with `http://` or `https://`.
	DeploymentSetName *string `pulumi:"deploymentSetName"`
	// The description of the deployment set. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// Field `domain` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `domain` has been deprecated from provider version 1.243.0.
	Domain *string `pulumi:"domain"`
	// Field `granularity` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `granularity` has been deprecated from provider version 1.243.0.
	Granularity *string `pulumi:"granularity"`
	// The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:
	// - `CancelMembershipAndStart` - Removes the instances from the deployment set and starts the instances immediately after they are failed over.
	// - `KeepStopped`- Leaves the instances in the Stopped state and starts them after resources are replenished.
	OnUnableToRedeployFailedInstance *string `pulumi:"onUnableToRedeployFailedInstance"`
	// The deployment strategy. Default value: `Availability`. Valid values: `Availability`, `AvailabilityGroup`, `LowLatency`.
	Strategy *string `pulumi:"strategy"`
}

type EcsDeploymentSetState struct {
	// The name of the deployment set. The name must be `2` to `128` characters in length and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with `http://` or `https://`.
	DeploymentSetName pulumi.StringPtrInput
	// The description of the deployment set. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// Field `domain` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `domain` has been deprecated from provider version 1.243.0.
	Domain pulumi.StringPtrInput
	// Field `granularity` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `granularity` has been deprecated from provider version 1.243.0.
	Granularity pulumi.StringPtrInput
	// The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:
	// - `CancelMembershipAndStart` - Removes the instances from the deployment set and starts the instances immediately after they are failed over.
	// - `KeepStopped`- Leaves the instances in the Stopped state and starts them after resources are replenished.
	OnUnableToRedeployFailedInstance pulumi.StringPtrInput
	// The deployment strategy. Default value: `Availability`. Valid values: `Availability`, `AvailabilityGroup`, `LowLatency`.
	Strategy pulumi.StringPtrInput
}

func (EcsDeploymentSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsDeploymentSetState)(nil)).Elem()
}

type ecsDeploymentSetArgs struct {
	// The name of the deployment set. The name must be `2` to `128` characters in length and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with `http://` or `https://`.
	DeploymentSetName *string `pulumi:"deploymentSetName"`
	// The description of the deployment set. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// Field `domain` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `domain` has been deprecated from provider version 1.243.0.
	Domain *string `pulumi:"domain"`
	// Field `granularity` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `granularity` has been deprecated from provider version 1.243.0.
	Granularity *string `pulumi:"granularity"`
	// The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:
	// - `CancelMembershipAndStart` - Removes the instances from the deployment set and starts the instances immediately after they are failed over.
	// - `KeepStopped`- Leaves the instances in the Stopped state and starts them after resources are replenished.
	OnUnableToRedeployFailedInstance *string `pulumi:"onUnableToRedeployFailedInstance"`
	// The deployment strategy. Default value: `Availability`. Valid values: `Availability`, `AvailabilityGroup`, `LowLatency`.
	Strategy *string `pulumi:"strategy"`
}

// The set of arguments for constructing a EcsDeploymentSet resource.
type EcsDeploymentSetArgs struct {
	// The name of the deployment set. The name must be `2` to `128` characters in length and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with `http://` or `https://`.
	DeploymentSetName pulumi.StringPtrInput
	// The description of the deployment set. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// Field `domain` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `domain` has been deprecated from provider version 1.243.0.
	Domain pulumi.StringPtrInput
	// Field `granularity` has been deprecated from provider version 1.243.0.
	//
	// Deprecated: Field `granularity` has been deprecated from provider version 1.243.0.
	Granularity pulumi.StringPtrInput
	// The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:
	// - `CancelMembershipAndStart` - Removes the instances from the deployment set and starts the instances immediately after they are failed over.
	// - `KeepStopped`- Leaves the instances in the Stopped state and starts them after resources are replenished.
	OnUnableToRedeployFailedInstance pulumi.StringPtrInput
	// The deployment strategy. Default value: `Availability`. Valid values: `Availability`, `AvailabilityGroup`, `LowLatency`.
	Strategy pulumi.StringPtrInput
}

func (EcsDeploymentSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsDeploymentSetArgs)(nil)).Elem()
}

type EcsDeploymentSetInput interface {
	pulumi.Input

	ToEcsDeploymentSetOutput() EcsDeploymentSetOutput
	ToEcsDeploymentSetOutputWithContext(ctx context.Context) EcsDeploymentSetOutput
}

func (*EcsDeploymentSet) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsDeploymentSet)(nil)).Elem()
}

func (i *EcsDeploymentSet) ToEcsDeploymentSetOutput() EcsDeploymentSetOutput {
	return i.ToEcsDeploymentSetOutputWithContext(context.Background())
}

func (i *EcsDeploymentSet) ToEcsDeploymentSetOutputWithContext(ctx context.Context) EcsDeploymentSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsDeploymentSetOutput)
}

// EcsDeploymentSetArrayInput is an input type that accepts EcsDeploymentSetArray and EcsDeploymentSetArrayOutput values.
// You can construct a concrete instance of `EcsDeploymentSetArrayInput` via:
//
//	EcsDeploymentSetArray{ EcsDeploymentSetArgs{...} }
type EcsDeploymentSetArrayInput interface {
	pulumi.Input

	ToEcsDeploymentSetArrayOutput() EcsDeploymentSetArrayOutput
	ToEcsDeploymentSetArrayOutputWithContext(context.Context) EcsDeploymentSetArrayOutput
}

type EcsDeploymentSetArray []EcsDeploymentSetInput

func (EcsDeploymentSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsDeploymentSet)(nil)).Elem()
}

func (i EcsDeploymentSetArray) ToEcsDeploymentSetArrayOutput() EcsDeploymentSetArrayOutput {
	return i.ToEcsDeploymentSetArrayOutputWithContext(context.Background())
}

func (i EcsDeploymentSetArray) ToEcsDeploymentSetArrayOutputWithContext(ctx context.Context) EcsDeploymentSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsDeploymentSetArrayOutput)
}

// EcsDeploymentSetMapInput is an input type that accepts EcsDeploymentSetMap and EcsDeploymentSetMapOutput values.
// You can construct a concrete instance of `EcsDeploymentSetMapInput` via:
//
//	EcsDeploymentSetMap{ "key": EcsDeploymentSetArgs{...} }
type EcsDeploymentSetMapInput interface {
	pulumi.Input

	ToEcsDeploymentSetMapOutput() EcsDeploymentSetMapOutput
	ToEcsDeploymentSetMapOutputWithContext(context.Context) EcsDeploymentSetMapOutput
}

type EcsDeploymentSetMap map[string]EcsDeploymentSetInput

func (EcsDeploymentSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsDeploymentSet)(nil)).Elem()
}

func (i EcsDeploymentSetMap) ToEcsDeploymentSetMapOutput() EcsDeploymentSetMapOutput {
	return i.ToEcsDeploymentSetMapOutputWithContext(context.Background())
}

func (i EcsDeploymentSetMap) ToEcsDeploymentSetMapOutputWithContext(ctx context.Context) EcsDeploymentSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsDeploymentSetMapOutput)
}

type EcsDeploymentSetOutput struct{ *pulumi.OutputState }

func (EcsDeploymentSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsDeploymentSet)(nil)).Elem()
}

func (o EcsDeploymentSetOutput) ToEcsDeploymentSetOutput() EcsDeploymentSetOutput {
	return o
}

func (o EcsDeploymentSetOutput) ToEcsDeploymentSetOutputWithContext(ctx context.Context) EcsDeploymentSetOutput {
	return o
}

// The name of the deployment set. The name must be `2` to `128` characters in length and can contain letters, digits, colons (:), underscores (_), and hyphens (-). It must start with a letter and cannot start with `http://` or `https://`.
func (o EcsDeploymentSetOutput) DeploymentSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDeploymentSet) pulumi.StringPtrOutput { return v.DeploymentSetName }).(pulumi.StringPtrOutput)
}

// The description of the deployment set. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
func (o EcsDeploymentSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDeploymentSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Field `domain` has been deprecated from provider version 1.243.0.
//
// Deprecated: Field `domain` has been deprecated from provider version 1.243.0.
func (o EcsDeploymentSetOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDeploymentSet) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Field `granularity` has been deprecated from provider version 1.243.0.
//
// Deprecated: Field `granularity` has been deprecated from provider version 1.243.0.
func (o EcsDeploymentSetOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDeploymentSet) pulumi.StringOutput { return v.Granularity }).(pulumi.StringOutput)
}

// The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:
// - `CancelMembershipAndStart` - Removes the instances from the deployment set and starts the instances immediately after they are failed over.
// - `KeepStopped`- Leaves the instances in the Stopped state and starts them after resources are replenished.
func (o EcsDeploymentSetOutput) OnUnableToRedeployFailedInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsDeploymentSet) pulumi.StringPtrOutput { return v.OnUnableToRedeployFailedInstance }).(pulumi.StringPtrOutput)
}

// The deployment strategy. Default value: `Availability`. Valid values: `Availability`, `AvailabilityGroup`, `LowLatency`.
func (o EcsDeploymentSetOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsDeploymentSet) pulumi.StringOutput { return v.Strategy }).(pulumi.StringOutput)
}

type EcsDeploymentSetArrayOutput struct{ *pulumi.OutputState }

func (EcsDeploymentSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsDeploymentSet)(nil)).Elem()
}

func (o EcsDeploymentSetArrayOutput) ToEcsDeploymentSetArrayOutput() EcsDeploymentSetArrayOutput {
	return o
}

func (o EcsDeploymentSetArrayOutput) ToEcsDeploymentSetArrayOutputWithContext(ctx context.Context) EcsDeploymentSetArrayOutput {
	return o
}

func (o EcsDeploymentSetArrayOutput) Index(i pulumi.IntInput) EcsDeploymentSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EcsDeploymentSet {
		return vs[0].([]*EcsDeploymentSet)[vs[1].(int)]
	}).(EcsDeploymentSetOutput)
}

type EcsDeploymentSetMapOutput struct{ *pulumi.OutputState }

func (EcsDeploymentSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsDeploymentSet)(nil)).Elem()
}

func (o EcsDeploymentSetMapOutput) ToEcsDeploymentSetMapOutput() EcsDeploymentSetMapOutput {
	return o
}

func (o EcsDeploymentSetMapOutput) ToEcsDeploymentSetMapOutputWithContext(ctx context.Context) EcsDeploymentSetMapOutput {
	return o
}

func (o EcsDeploymentSetMapOutput) MapIndex(k pulumi.StringInput) EcsDeploymentSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EcsDeploymentSet {
		return vs[0].(map[string]*EcsDeploymentSet)[vs[1].(string)]
	}).(EcsDeploymentSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EcsDeploymentSetInput)(nil)).Elem(), &EcsDeploymentSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsDeploymentSetArrayInput)(nil)).Elem(), EcsDeploymentSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsDeploymentSetMapInput)(nil)).Elem(), EcsDeploymentSetMap{})
	pulumi.RegisterOutputType(EcsDeploymentSetOutput{})
	pulumi.RegisterOutputType(EcsDeploymentSetArrayOutput{})
	pulumi.RegisterOutputType(EcsDeploymentSetMapOutput{})
}
