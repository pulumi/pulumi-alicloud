// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.120.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableDiskCategory:     pulumi.StringRef("cloud_efficiency"),
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetInstanceTypes, err := ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
//				AvailabilityZone: pulumi.StringRef(_default.Zones[0].Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
//				NameRegex: pulumi.StringRef("^ubuntu_18.*64"),
//				Owners:    pulumi.StringRef("system"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String("terraform-example"),
//				CidrBlock: pulumi.String("172.17.3.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.String("terraform-example"),
//				CidrBlock:   pulumi.String("172.17.3.0/24"),
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(_default.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				Name:  pulumi.String("terraform-example"),
//				VpcId: defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultEcsLaunchTemplate, err := ecs.NewEcsLaunchTemplate(ctx, "default", &ecs.EcsLaunchTemplateArgs{
//				LaunchTemplateName:          pulumi.String("terraform-example"),
//				Description:                 pulumi.String("terraform-example"),
//				ImageId:                     pulumi.String(defaultGetImages.Images[0].Id),
//				HostName:                    pulumi.String("terraform-example"),
//				InstanceChargeType:          pulumi.String("PrePaid"),
//				InstanceName:                pulumi.String("terraform-example"),
//				InstanceType:                pulumi.String(defaultGetInstanceTypes.InstanceTypes[0].Id),
//				InternetChargeType:          pulumi.String("PayByBandwidth"),
//				InternetMaxBandwidthIn:      pulumi.Int(5),
//				InternetMaxBandwidthOut:     pulumi.Int(5),
//				IoOptimized:                 pulumi.String("optimized"),
//				KeyPairName:                 pulumi.String("key_pair_name"),
//				RamRoleName:                 pulumi.String("ram_role_name"),
//				NetworkType:                 pulumi.String("vpc"),
//				SecurityEnhancementStrategy: pulumi.String("Active"),
//				SpotPriceLimit:              pulumi.Float64(5),
//				SpotStrategy:                pulumi.String("SpotWithPriceLimit"),
//				SecurityGroupIds: pulumi.StringArray{
//					defaultSecurityGroup.ID(),
//				},
//				SystemDisk: &ecs.EcsLaunchTemplateSystemDiskArgs{
//					Category:           pulumi.String("cloud_ssd"),
//					Description:        pulumi.String("Test For Terraform"),
//					Name:               pulumi.String("terraform-example"),
//					Size:               pulumi.Int(40),
//					DeleteWithInstance: pulumi.Bool(false),
//				},
//				UserData:  pulumi.String("xxxxxxx"),
//				VswitchId: defaultSwitch.ID(),
//				VpcId:     defaultNetwork.ID(),
//				ZoneId:    pulumi.String(_default.Zones[0].Id),
//				TemplateTags: pulumi.StringMap{
//					"Create": pulumi.String("Terraform"),
//					"For":    pulumi.String("example"),
//				},
//				NetworkInterfaces: &ecs.EcsLaunchTemplateNetworkInterfacesArgs{
//					Name:            pulumi.String("eth0"),
//					Description:     pulumi.String("hello1"),
//					PrimaryIp:       pulumi.String("10.0.0.2"),
//					SecurityGroupId: defaultSecurityGroup.ID(),
//					VswitchId:       defaultSwitch.ID(),
//				},
//				DataDisks: ecs.EcsLaunchTemplateDataDiskArray{
//					&ecs.EcsLaunchTemplateDataDiskArgs{
//						Name:               pulumi.String("disk1"),
//						Description:        pulumi.String("description"),
//						DeleteWithInstance: pulumi.Bool(true),
//						Category:           pulumi.String("cloud"),
//						Encrypted:          pulumi.Bool(false),
//						PerformanceLevel:   pulumi.String("PL0"),
//						Size:               pulumi.Int(20),
//					},
//					&ecs.EcsLaunchTemplateDataDiskArgs{
//						Name:               pulumi.String("disk2"),
//						Description:        pulumi.String("description2"),
//						DeleteWithInstance: pulumi.Bool(true),
//						Category:           pulumi.String("cloud"),
//						Encrypted:          pulumi.Bool(false),
//						PerformanceLevel:   pulumi.String("PL0"),
//						Size:               pulumi.Int(20),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ids := ecs.GetEcsLaunchTemplatesOutput(ctx, ecs.GetEcsLaunchTemplatesOutputArgs{
//				Ids: pulumi.StringArray{
//					defaultEcsLaunchTemplate.ID(),
//				},
//			}, nil)
//			ctx.Export("ecsLaunchTemplateId0", ids.ApplyT(func(ids ecs.GetEcsLaunchTemplatesResult) (*string, error) {
//				return &ids.Templates[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetEcsLaunchTemplates(ctx *pulumi.Context, args *GetEcsLaunchTemplatesArgs, opts ...pulumi.InvokeOption) (*GetEcsLaunchTemplatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEcsLaunchTemplatesResult
	err := ctx.Invoke("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEcsLaunchTemplates.
type GetEcsLaunchTemplatesArgs struct {
	// Whether to query the detailed list of resource attributes. Default value: `false`.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Launch Template IDs.
	Ids []string `pulumi:"ids"`
	// The name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// A regex string to filter results by Launch Template name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the Resource Group.
	TemplateResourceGroupId *string `pulumi:"templateResourceGroupId"`
	// The tags of the launch template.
	TemplateTags map[string]string `pulumi:"templateTags"`
}

// A collection of values returned by getEcsLaunchTemplates.
type GetEcsLaunchTemplatesResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The name of the Launch Template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	NameRegex          *string `pulumi:"nameRegex"`
	// A list of Launch Template names.
	Names                   []string `pulumi:"names"`
	OutputFile              *string  `pulumi:"outputFile"`
	TemplateResourceGroupId *string  `pulumi:"templateResourceGroupId"`
	// The tags of the launch template.
	// > **NOTE:** Except for the fields `id`, `launchTemplateId`, `launchTemplateName`, `defaultVersionNumber`, `latestVersionNumber`, `createdBy`, `modifiedTime`, `resourceGroupId`, `templateTags`, all other fields take effect only if `enableDetails` is set to `true`.
	TemplateTags map[string]string `pulumi:"templateTags"`
	// A list of Ecs Launch Templates. Each element contains the following attributes:
	Templates []GetEcsLaunchTemplatesTemplate `pulumi:"templates"`
}

func GetEcsLaunchTemplatesOutput(ctx *pulumi.Context, args GetEcsLaunchTemplatesOutputArgs, opts ...pulumi.InvokeOption) GetEcsLaunchTemplatesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEcsLaunchTemplatesResultOutput, error) {
			args := v.(GetEcsLaunchTemplatesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", args, GetEcsLaunchTemplatesResultOutput{}, options).(GetEcsLaunchTemplatesResultOutput), nil
		}).(GetEcsLaunchTemplatesResultOutput)
}

// A collection of arguments for invoking getEcsLaunchTemplates.
type GetEcsLaunchTemplatesOutputArgs struct {
	// Whether to query the detailed list of resource attributes. Default value: `false`.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Launch Template IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// A regex string to filter results by Launch Template name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the Resource Group.
	TemplateResourceGroupId pulumi.StringPtrInput `pulumi:"templateResourceGroupId"`
	// The tags of the launch template.
	TemplateTags pulumi.StringMapInput `pulumi:"templateTags"`
}

func (GetEcsLaunchTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by getEcsLaunchTemplates.
type GetEcsLaunchTemplatesResultOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesResult)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesResultOutput) ToGetEcsLaunchTemplatesResultOutput() GetEcsLaunchTemplatesResultOutput {
	return o
}

func (o GetEcsLaunchTemplatesResultOutput) ToGetEcsLaunchTemplatesResultOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesResultOutput {
	return o
}

func (o GetEcsLaunchTemplatesResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEcsLaunchTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEcsLaunchTemplatesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The name of the Launch Template.
func (o GetEcsLaunchTemplatesResultOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) *string { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

func (o GetEcsLaunchTemplatesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Launch Template names.
func (o GetEcsLaunchTemplatesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetEcsLaunchTemplatesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetEcsLaunchTemplatesResultOutput) TemplateResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) *string { return v.TemplateResourceGroupId }).(pulumi.StringPtrOutput)
}

// The tags of the launch template.
// > **NOTE:** Except for the fields `id`, `launchTemplateId`, `launchTemplateName`, `defaultVersionNumber`, `latestVersionNumber`, `createdBy`, `modifiedTime`, `resourceGroupId`, `templateTags`, all other fields take effect only if `enableDetails` is set to `true`.
func (o GetEcsLaunchTemplatesResultOutput) TemplateTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) map[string]string { return v.TemplateTags }).(pulumi.StringMapOutput)
}

// A list of Ecs Launch Templates. Each element contains the following attributes:
func (o GetEcsLaunchTemplatesResultOutput) Templates() GetEcsLaunchTemplatesTemplateArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesResult) []GetEcsLaunchTemplatesTemplate { return v.Templates }).(GetEcsLaunchTemplatesTemplateArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesResultOutput{})
}
