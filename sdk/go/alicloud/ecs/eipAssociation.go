// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EipAssociation struct {
	pulumi.CustomResourceState

	// The allocation EIP ID.
	AllocationId pulumi.StringOutput `pulumi:"allocationId"`
	// When EIP is bound to a NAT gateway, and the NAT gateway adds a DNAT or SNAT entry, set it for `true` can unassociation any way. Default to `false`.
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The type of cloud product that the eip instance to bind.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The private IP address in the network segment of the vswitch which has been assigned.
	PrivateIpAddress pulumi.StringOutput `pulumi:"privateIpAddress"`
}

// NewEipAssociation registers a new resource with the given unique name, arguments, and options.
func NewEipAssociation(ctx *pulumi.Context,
	name string, args *EipAssociationArgs, opts ...pulumi.ResourceOption) (*EipAssociation, error) {
	if args == nil || args.AllocationId == nil {
		return nil, errors.New("missing required argument 'AllocationId'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil {
		args = &EipAssociationArgs{}
	}
	var resource EipAssociation
	err := ctx.RegisterResource("alicloud:ecs/eipAssociation:EipAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEipAssociation gets an existing EipAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEipAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipAssociationState, opts ...pulumi.ResourceOption) (*EipAssociation, error) {
	var resource EipAssociation
	err := ctx.ReadResource("alicloud:ecs/eipAssociation:EipAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EipAssociation resources.
type eipAssociationState struct {
	// The allocation EIP ID.
	AllocationId *string `pulumi:"allocationId"`
	// When EIP is bound to a NAT gateway, and the NAT gateway adds a DNAT or SNAT entry, set it for `true` can unassociation any way. Default to `false`.
	Force *bool `pulumi:"force"`
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId *string `pulumi:"instanceId"`
	// The type of cloud product that the eip instance to bind.
	InstanceType *string `pulumi:"instanceType"`
	// The private IP address in the network segment of the vswitch which has been assigned.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
}

type EipAssociationState struct {
	// The allocation EIP ID.
	AllocationId pulumi.StringPtrInput
	// When EIP is bound to a NAT gateway, and the NAT gateway adds a DNAT or SNAT entry, set it for `true` can unassociation any way. Default to `false`.
	Force pulumi.BoolPtrInput
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId pulumi.StringPtrInput
	// The type of cloud product that the eip instance to bind.
	InstanceType pulumi.StringPtrInput
	// The private IP address in the network segment of the vswitch which has been assigned.
	PrivateIpAddress pulumi.StringPtrInput
}

func (EipAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipAssociationState)(nil)).Elem()
}

type eipAssociationArgs struct {
	// The allocation EIP ID.
	AllocationId string `pulumi:"allocationId"`
	// When EIP is bound to a NAT gateway, and the NAT gateway adds a DNAT or SNAT entry, set it for `true` can unassociation any way. Default to `false`.
	Force *bool `pulumi:"force"`
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId string `pulumi:"instanceId"`
	// The type of cloud product that the eip instance to bind.
	InstanceType *string `pulumi:"instanceType"`
	// The private IP address in the network segment of the vswitch which has been assigned.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
}

// The set of arguments for constructing a EipAssociation resource.
type EipAssociationArgs struct {
	// The allocation EIP ID.
	AllocationId pulumi.StringInput
	// When EIP is bound to a NAT gateway, and the NAT gateway adds a DNAT or SNAT entry, set it for `true` can unassociation any way. Default to `false`.
	Force pulumi.BoolPtrInput
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId pulumi.StringInput
	// The type of cloud product that the eip instance to bind.
	InstanceType pulumi.StringPtrInput
	// The private IP address in the network segment of the vswitch which has been assigned.
	PrivateIpAddress pulumi.StringPtrInput
}

func (EipAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipAssociationArgs)(nil)).Elem()
}

type EipAssociationInput interface {
	pulumi.Input

	ToEipAssociationOutput() EipAssociationOutput
	ToEipAssociationOutputWithContext(ctx context.Context) EipAssociationOutput
}

func (EipAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*EipAssociation)(nil)).Elem()
}

func (i EipAssociation) ToEipAssociationOutput() EipAssociationOutput {
	return i.ToEipAssociationOutputWithContext(context.Background())
}

func (i EipAssociation) ToEipAssociationOutputWithContext(ctx context.Context) EipAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipAssociationOutput)
}

type EipAssociationOutput struct {
	*pulumi.OutputState
}

func (EipAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EipAssociationOutput)(nil)).Elem()
}

func (o EipAssociationOutput) ToEipAssociationOutput() EipAssociationOutput {
	return o
}

func (o EipAssociationOutput) ToEipAssociationOutputWithContext(ctx context.Context) EipAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(EipAssociationOutput{})
}
