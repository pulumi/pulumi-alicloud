// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.155.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := ecs.GetEcsStorageCapacityUnits(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("ecsStorageCapacityUnitId1", ids.Units[0].Id)
// 		nameRegex, err := ecs.GetEcsStorageCapacityUnits(ctx, &ecs.GetEcsStorageCapacityUnitsArgs{
// 			NameRegex: pulumi.StringRef("^my-StorageCapacityUnit"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("ecsStorageCapacityUnitId2", nameRegex.Units[0].Id)
// 		return nil
// 	})
// }
// ```
func GetEcsStorageCapacityUnits(ctx *pulumi.Context, args *GetEcsStorageCapacityUnitsArgs, opts ...pulumi.InvokeOption) (*GetEcsStorageCapacityUnitsResult, error) {
	var rv GetEcsStorageCapacityUnitsResult
	err := ctx.Invoke("alicloud:ecs/getEcsStorageCapacityUnits:getEcsStorageCapacityUnits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEcsStorageCapacityUnits.
type GetEcsStorageCapacityUnitsArgs struct {
	// A list of Storage Capacity Unit IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Storage Capacity Unit name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of Storage Capacity Unit.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getEcsStorageCapacityUnits.
type GetEcsStorageCapacityUnitsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                           `pulumi:"id"`
	Ids        []string                         `pulumi:"ids"`
	NameRegex  *string                          `pulumi:"nameRegex"`
	Names      []string                         `pulumi:"names"`
	OutputFile *string                          `pulumi:"outputFile"`
	Status     *string                          `pulumi:"status"`
	Units      []GetEcsStorageCapacityUnitsUnit `pulumi:"units"`
}

func GetEcsStorageCapacityUnitsOutput(ctx *pulumi.Context, args GetEcsStorageCapacityUnitsOutputArgs, opts ...pulumi.InvokeOption) GetEcsStorageCapacityUnitsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEcsStorageCapacityUnitsResult, error) {
			args := v.(GetEcsStorageCapacityUnitsArgs)
			r, err := GetEcsStorageCapacityUnits(ctx, &args, opts...)
			var s GetEcsStorageCapacityUnitsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEcsStorageCapacityUnitsResultOutput)
}

// A collection of arguments for invoking getEcsStorageCapacityUnits.
type GetEcsStorageCapacityUnitsOutputArgs struct {
	// A list of Storage Capacity Unit IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Storage Capacity Unit name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of Storage Capacity Unit.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetEcsStorageCapacityUnitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsStorageCapacityUnitsArgs)(nil)).Elem()
}

// A collection of values returned by getEcsStorageCapacityUnits.
type GetEcsStorageCapacityUnitsResultOutput struct{ *pulumi.OutputState }

func (GetEcsStorageCapacityUnitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsStorageCapacityUnitsResult)(nil)).Elem()
}

func (o GetEcsStorageCapacityUnitsResultOutput) ToGetEcsStorageCapacityUnitsResultOutput() GetEcsStorageCapacityUnitsResultOutput {
	return o
}

func (o GetEcsStorageCapacityUnitsResultOutput) ToGetEcsStorageCapacityUnitsResultOutputWithContext(ctx context.Context) GetEcsStorageCapacityUnitsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetEcsStorageCapacityUnitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEcsStorageCapacityUnitsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetEcsStorageCapacityUnitsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetEcsStorageCapacityUnitsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetEcsStorageCapacityUnitsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetEcsStorageCapacityUnitsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetEcsStorageCapacityUnitsResultOutput) Units() GetEcsStorageCapacityUnitsUnitArrayOutput {
	return o.ApplyT(func(v GetEcsStorageCapacityUnitsResult) []GetEcsStorageCapacityUnitsUnit { return v.Units }).(GetEcsStorageCapacityUnitsUnitArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEcsStorageCapacityUnitsResultOutput{})
}
