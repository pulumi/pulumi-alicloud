// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ECS Image resource.
//
// > **NOTE:**  If you want to create a template from an ECS instance, you can specify the instance ID (InstanceId) to create a custom image. You must make sure that the status of the specified instance is Running or Stopped. After a successful invocation, each disk of the specified instance has a new snapshot created.
//
// > **NOTE:**  If you want to create a custom image based on the system disk of your ECS instance, you can specify one of the system disk snapshots (SnapshotId) to create a custom image. However, the specified snapshot cannot be created on or before July 15, 2013.
//
// > **NOTE:**  If you want to combine snapshots of multiple disks into an image template, you can specify DiskDeviceMapping to create a custom image.
//
// For information about ECS Image and how to use it, see [What is Image](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ecs-2014-05-26-createimage).
//
// > **NOTE:** Available since v1.64.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("Instance"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetInstanceTypes, err := ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
//				InstanceTypeFamily: pulumi.StringRef("ecs.sn1ne"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
//				NameRegex: pulumi.StringRef("^ubuntu_18.*64"),
//				Owners:    pulumi.StringRef("system"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String("terraform-example"),
//				CidrBlock: pulumi.String("172.17.3.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.String("terraform-example"),
//				CidrBlock:   pulumi.String("172.17.3.0/24"),
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(_default.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				Name:  pulumi.String("terraform-example"),
//				VpcId: defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultInstance, err := ecs.NewInstance(ctx, "default", &ecs.InstanceArgs{
//				AvailabilityZone: pulumi.String(_default.Zones[0].Id),
//				InstanceName:     pulumi.String("terraform-example"),
//				SecurityGroups: pulumi.StringArray{
//					defaultSecurityGroup.ID(),
//				},
//				VswitchId:               defaultSwitch.ID(),
//				InstanceType:            pulumi.String(defaultGetInstanceTypes.Ids[0]),
//				ImageId:                 pulumi.String(defaultGetImages.Ids[0]),
//				InternetMaxBandwidthOut: pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			defaultGetResourceGroups, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewImage(ctx, "default", &ecs.ImageArgs{
//				InstanceId:      defaultInstance.ID(),
//				ImageName:       pulumi.Sprintf("terraform-example-%v", defaultInteger.Result),
//				Description:     pulumi.String("terraform-example"),
//				Architecture:    pulumi.String("x86_64"),
//				ResourceGroupId: pulumi.String(defaultGetResourceGroups.Ids[0]),
//				Tags: pulumi.StringMap{
//					"FinanceDept": pulumi.String("FinanceDeptJoshua"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ECS Image can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ecs/image:Image example <id>
// ```
type Image struct {
	pulumi.CustomResourceState

	// The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
	Architecture pulumi.StringPtrOutput `pulumi:"architecture"`
	// The new boot mode of the image. Valid values:
	//
	// *   BIOS: Basic Input/Output System (BIOS)
	//
	// *   UEFI: Unified Extensible Firmware Interface (UEFI)
	//
	// *   UEFI-Preferred: BIOS and UEFI
	//
	// > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
	//
	// > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
	BootMode pulumi.StringOutput `pulumi:"bootMode"`
	// The create time
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
	DeleteAutoSnapshot pulumi.BoolPtrOutput `pulumi:"deleteAutoSnapshot"`
	// The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
	//
	// > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
	DetectionStrategy pulumi.StringPtrOutput `pulumi:"detectionStrategy"`
	// Snapshot information for the image See `diskDeviceMapping` below.
	DiskDeviceMappings ImageDiskDeviceMappingArrayOutput `pulumi:"diskDeviceMappings"`
	// Features See `features` below.
	Features ImageFeaturesOutput `pulumi:"features"`
	// Whether to perform forced deletion. Value range:
	// - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
	// - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
	//
	// Default value: false
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
	ImageFamily pulumi.StringPtrOutput `pulumi:"imageFamily"`
	// The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
	ImageName pulumi.StringOutput `pulumi:"imageName"`
	// The image version.
	//
	// > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
	ImageVersion pulumi.StringPtrOutput `pulumi:"imageVersion"`
	// The instance ID.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
	LicenseType pulumi.StringPtrOutput `pulumi:"licenseType"`
	// . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
	Platform pulumi.StringOutput `pulumi:"platform"`
	// The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
	//
	// > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The ID of the snapshot that you want to use to create the custom image.
	SnapshotId pulumi.StringPtrOutput `pulumi:"snapshotId"`
	// The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned.
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewImage registers a new resource with the given unique name, arguments, and options.
func NewImage(ctx *pulumi.Context,
	name string, args *ImageArgs, opts ...pulumi.ResourceOption) (*Image, error) {
	if args == nil {
		args = &ImageArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Image
	err := ctx.RegisterResource("alicloud:ecs/image:Image", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImage gets an existing Image resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageState, opts ...pulumi.ResourceOption) (*Image, error) {
	var resource Image
	err := ctx.ReadResource("alicloud:ecs/image:Image", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Image resources.
type imageState struct {
	// The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
	Architecture *string `pulumi:"architecture"`
	// The new boot mode of the image. Valid values:
	//
	// *   BIOS: Basic Input/Output System (BIOS)
	//
	// *   UEFI: Unified Extensible Firmware Interface (UEFI)
	//
	// *   UEFI-Preferred: BIOS and UEFI
	//
	// > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
	//
	// > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
	BootMode *string `pulumi:"bootMode"`
	// The create time
	CreateTime *string `pulumi:"createTime"`
	// Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
	DeleteAutoSnapshot *bool `pulumi:"deleteAutoSnapshot"`
	// The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
	Description *string `pulumi:"description"`
	// The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
	//
	// > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
	DetectionStrategy *string `pulumi:"detectionStrategy"`
	// Snapshot information for the image See `diskDeviceMapping` below.
	DiskDeviceMappings []ImageDiskDeviceMapping `pulumi:"diskDeviceMappings"`
	// Features See `features` below.
	Features *ImageFeatures `pulumi:"features"`
	// Whether to perform forced deletion. Value range:
	// - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
	// - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
	//
	// Default value: false
	Force *bool `pulumi:"force"`
	// The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
	ImageFamily *string `pulumi:"imageFamily"`
	// The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
	ImageName *string `pulumi:"imageName"`
	// The image version.
	//
	// > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
	ImageVersion *string `pulumi:"imageVersion"`
	// The instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
	LicenseType *string `pulumi:"licenseType"`
	// . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
	Name *string `pulumi:"name"`
	// The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
	Platform *string `pulumi:"platform"`
	// The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
	//
	// > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the snapshot that you want to use to create the custom image.
	SnapshotId *string `pulumi:"snapshotId"`
	// The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned.
	Status *string `pulumi:"status"`
	// The tag
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags map[string]string `pulumi:"tags"`
}

type ImageState struct {
	// The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
	Architecture pulumi.StringPtrInput
	// The new boot mode of the image. Valid values:
	//
	// *   BIOS: Basic Input/Output System (BIOS)
	//
	// *   UEFI: Unified Extensible Firmware Interface (UEFI)
	//
	// *   UEFI-Preferred: BIOS and UEFI
	//
	// > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
	//
	// > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
	BootMode pulumi.StringPtrInput
	// The create time
	CreateTime pulumi.StringPtrInput
	// Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
	DeleteAutoSnapshot pulumi.BoolPtrInput
	// The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
	Description pulumi.StringPtrInput
	// The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
	//
	// > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
	DetectionStrategy pulumi.StringPtrInput
	// Snapshot information for the image See `diskDeviceMapping` below.
	DiskDeviceMappings ImageDiskDeviceMappingArrayInput
	// Features See `features` below.
	Features ImageFeaturesPtrInput
	// Whether to perform forced deletion. Value range:
	// - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
	// - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
	//
	// Default value: false
	Force pulumi.BoolPtrInput
	// The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
	ImageFamily pulumi.StringPtrInput
	// The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
	ImageName pulumi.StringPtrInput
	// The image version.
	//
	// > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
	ImageVersion pulumi.StringPtrInput
	// The instance ID.
	InstanceId pulumi.StringPtrInput
	// The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
	LicenseType pulumi.StringPtrInput
	// . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
	Name pulumi.StringPtrInput
	// The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
	Platform pulumi.StringPtrInput
	// The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
	//
	// > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the snapshot that you want to use to create the custom image.
	SnapshotId pulumi.StringPtrInput
	// The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned.
	Status pulumi.StringPtrInput
	// The tag
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags pulumi.StringMapInput
}

func (ImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageState)(nil)).Elem()
}

type imageArgs struct {
	// The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
	Architecture *string `pulumi:"architecture"`
	// The new boot mode of the image. Valid values:
	//
	// *   BIOS: Basic Input/Output System (BIOS)
	//
	// *   UEFI: Unified Extensible Firmware Interface (UEFI)
	//
	// *   UEFI-Preferred: BIOS and UEFI
	//
	// > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
	//
	// > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
	BootMode *string `pulumi:"bootMode"`
	// Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
	DeleteAutoSnapshot *bool `pulumi:"deleteAutoSnapshot"`
	// The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
	Description *string `pulumi:"description"`
	// The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
	//
	// > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
	DetectionStrategy *string `pulumi:"detectionStrategy"`
	// Snapshot information for the image See `diskDeviceMapping` below.
	DiskDeviceMappings []ImageDiskDeviceMapping `pulumi:"diskDeviceMappings"`
	// Features See `features` below.
	Features *ImageFeatures `pulumi:"features"`
	// Whether to perform forced deletion. Value range:
	// - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
	// - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
	//
	// Default value: false
	Force *bool `pulumi:"force"`
	// The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
	ImageFamily *string `pulumi:"imageFamily"`
	// The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
	ImageName *string `pulumi:"imageName"`
	// The image version.
	//
	// > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
	ImageVersion *string `pulumi:"imageVersion"`
	// The instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
	LicenseType *string `pulumi:"licenseType"`
	// . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
	Name *string `pulumi:"name"`
	// The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
	Platform *string `pulumi:"platform"`
	// The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
	//
	// > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the snapshot that you want to use to create the custom image.
	SnapshotId *string `pulumi:"snapshotId"`
	// The tag
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Image resource.
type ImageArgs struct {
	// The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
	Architecture pulumi.StringPtrInput
	// The new boot mode of the image. Valid values:
	//
	// *   BIOS: Basic Input/Output System (BIOS)
	//
	// *   UEFI: Unified Extensible Firmware Interface (UEFI)
	//
	// *   UEFI-Preferred: BIOS and UEFI
	//
	// > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
	//
	// > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
	BootMode pulumi.StringPtrInput
	// Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
	DeleteAutoSnapshot pulumi.BoolPtrInput
	// The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
	Description pulumi.StringPtrInput
	// The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
	//
	// > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
	DetectionStrategy pulumi.StringPtrInput
	// Snapshot information for the image See `diskDeviceMapping` below.
	DiskDeviceMappings ImageDiskDeviceMappingArrayInput
	// Features See `features` below.
	Features ImageFeaturesPtrInput
	// Whether to perform forced deletion. Value range:
	// - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
	// - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
	//
	// Default value: false
	Force pulumi.BoolPtrInput
	// The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
	ImageFamily pulumi.StringPtrInput
	// The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
	ImageName pulumi.StringPtrInput
	// The image version.
	//
	// > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
	ImageVersion pulumi.StringPtrInput
	// The instance ID.
	InstanceId pulumi.StringPtrInput
	// The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
	LicenseType pulumi.StringPtrInput
	// . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
	Name pulumi.StringPtrInput
	// The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
	Platform pulumi.StringPtrInput
	// The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
	//
	// > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the snapshot that you want to use to create the custom image.
	SnapshotId pulumi.StringPtrInput
	// The tag
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags pulumi.StringMapInput
}

func (ImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageArgs)(nil)).Elem()
}

type ImageInput interface {
	pulumi.Input

	ToImageOutput() ImageOutput
	ToImageOutputWithContext(ctx context.Context) ImageOutput
}

func (*Image) ElementType() reflect.Type {
	return reflect.TypeOf((**Image)(nil)).Elem()
}

func (i *Image) ToImageOutput() ImageOutput {
	return i.ToImageOutputWithContext(context.Background())
}

func (i *Image) ToImageOutputWithContext(ctx context.Context) ImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOutput)
}

// ImageArrayInput is an input type that accepts ImageArray and ImageArrayOutput values.
// You can construct a concrete instance of `ImageArrayInput` via:
//
//	ImageArray{ ImageArgs{...} }
type ImageArrayInput interface {
	pulumi.Input

	ToImageArrayOutput() ImageArrayOutput
	ToImageArrayOutputWithContext(context.Context) ImageArrayOutput
}

type ImageArray []ImageInput

func (ImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Image)(nil)).Elem()
}

func (i ImageArray) ToImageArrayOutput() ImageArrayOutput {
	return i.ToImageArrayOutputWithContext(context.Background())
}

func (i ImageArray) ToImageArrayOutputWithContext(ctx context.Context) ImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageArrayOutput)
}

// ImageMapInput is an input type that accepts ImageMap and ImageMapOutput values.
// You can construct a concrete instance of `ImageMapInput` via:
//
//	ImageMap{ "key": ImageArgs{...} }
type ImageMapInput interface {
	pulumi.Input

	ToImageMapOutput() ImageMapOutput
	ToImageMapOutputWithContext(context.Context) ImageMapOutput
}

type ImageMap map[string]ImageInput

func (ImageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Image)(nil)).Elem()
}

func (i ImageMap) ToImageMapOutput() ImageMapOutput {
	return i.ToImageMapOutputWithContext(context.Background())
}

func (i ImageMap) ToImageMapOutputWithContext(ctx context.Context) ImageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageMapOutput)
}

type ImageOutput struct{ *pulumi.OutputState }

func (ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Image)(nil)).Elem()
}

func (o ImageOutput) ToImageOutput() ImageOutput {
	return o
}

func (o ImageOutput) ToImageOutputWithContext(ctx context.Context) ImageOutput {
	return o
}

// The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
func (o ImageOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The new boot mode of the image. Valid values:
//
// *   BIOS: Basic Input/Output System (BIOS)
//
// *   UEFI: Unified Extensible Firmware Interface (UEFI)
//
// *   UEFI-Preferred: BIOS and UEFI
//
// > **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
//
// > **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
func (o ImageOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.BootMode }).(pulumi.StringOutput)
}

// The create time
func (o ImageOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
func (o ImageOutput) DeleteAutoSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.BoolPtrOutput { return v.DeleteAutoSnapshot }).(pulumi.BoolPtrOutput)
}

// The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
func (o ImageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
//
// > **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
func (o ImageOutput) DetectionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.DetectionStrategy }).(pulumi.StringPtrOutput)
}

// Snapshot information for the image See `diskDeviceMapping` below.
func (o ImageOutput) DiskDeviceMappings() ImageDiskDeviceMappingArrayOutput {
	return o.ApplyT(func(v *Image) ImageDiskDeviceMappingArrayOutput { return v.DiskDeviceMappings }).(ImageDiskDeviceMappingArrayOutput)
}

// Features See `features` below.
func (o ImageOutput) Features() ImageFeaturesOutput {
	return o.ApplyT(func(v *Image) ImageFeaturesOutput { return v.Features }).(ImageFeaturesOutput)
}

// Whether to perform forced deletion. Value range:
// - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
// - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
//
// Default value: false
func (o ImageOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.BoolPtrOutput { return v.Force }).(pulumi.BoolPtrOutput)
}

// The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
func (o ImageOutput) ImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.ImageFamily }).(pulumi.StringPtrOutput)
}

// The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
func (o ImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

// The image version.
//
// > **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
func (o ImageOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

// The instance ID.
func (o ImageOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
func (o ImageOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// . Field 'name' has been deprecated from provider version 1.227.0. New field 'image_name' instead.
//
// Deprecated: Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead.
func (o ImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
func (o ImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

// The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
//
// > **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
func (o ImageOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The ID of the snapshot that you want to use to create the custom image.
func (o ImageOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned.
func (o ImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag
//
// The following arguments will be discarded. Please use new fields as soon as possible:
func (o ImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Image) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ImageArrayOutput struct{ *pulumi.OutputState }

func (ImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Image)(nil)).Elem()
}

func (o ImageArrayOutput) ToImageArrayOutput() ImageArrayOutput {
	return o
}

func (o ImageArrayOutput) ToImageArrayOutputWithContext(ctx context.Context) ImageArrayOutput {
	return o
}

func (o ImageArrayOutput) Index(i pulumi.IntInput) ImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Image {
		return vs[0].([]*Image)[vs[1].(int)]
	}).(ImageOutput)
}

type ImageMapOutput struct{ *pulumi.OutputState }

func (ImageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Image)(nil)).Elem()
}

func (o ImageMapOutput) ToImageMapOutput() ImageMapOutput {
	return o
}

func (o ImageMapOutput) ToImageMapOutputWithContext(ctx context.Context) ImageMapOutput {
	return o
}

func (o ImageMapOutput) MapIndex(k pulumi.StringInput) ImageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Image {
		return vs[0].(map[string]*Image)[vs[1].(string)]
	}).(ImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageInput)(nil)).Elem(), &Image{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageArrayInput)(nil)).Elem(), ImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageMapInput)(nil)).Elem(), ImageMap{})
	pulumi.RegisterOutputType(ImageOutput{})
	pulumi.RegisterOutputType(ImageArrayOutput{})
	pulumi.RegisterOutputType(ImageMapOutput{})
}
