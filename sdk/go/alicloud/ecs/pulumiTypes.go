// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AutoProvisioningGroupLaunchTemplateConfig struct {
	InstanceType     *string `pulumi:"instanceType"`
	MaxPrice         string  `pulumi:"maxPrice"`
	Priority         *string `pulumi:"priority"`
	VswitchId        string  `pulumi:"vswitchId"`
	WeightedCapacity string  `pulumi:"weightedCapacity"`
}

// AutoProvisioningGroupLaunchTemplateConfigInput is an input type that accepts AutoProvisioningGroupLaunchTemplateConfigArgs and AutoProvisioningGroupLaunchTemplateConfigOutput values.
// You can construct a concrete instance of `AutoProvisioningGroupLaunchTemplateConfigInput` via:
//
//          AutoProvisioningGroupLaunchTemplateConfigArgs{...}
type AutoProvisioningGroupLaunchTemplateConfigInput interface {
	pulumi.Input

	ToAutoProvisioningGroupLaunchTemplateConfigOutput() AutoProvisioningGroupLaunchTemplateConfigOutput
	ToAutoProvisioningGroupLaunchTemplateConfigOutputWithContext(context.Context) AutoProvisioningGroupLaunchTemplateConfigOutput
}

type AutoProvisioningGroupLaunchTemplateConfigArgs struct {
	InstanceType     pulumi.StringPtrInput `pulumi:"instanceType"`
	MaxPrice         pulumi.StringInput    `pulumi:"maxPrice"`
	Priority         pulumi.StringPtrInput `pulumi:"priority"`
	VswitchId        pulumi.StringInput    `pulumi:"vswitchId"`
	WeightedCapacity pulumi.StringInput    `pulumi:"weightedCapacity"`
}

func (AutoProvisioningGroupLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoProvisioningGroupLaunchTemplateConfig)(nil)).Elem()
}

func (i AutoProvisioningGroupLaunchTemplateConfigArgs) ToAutoProvisioningGroupLaunchTemplateConfigOutput() AutoProvisioningGroupLaunchTemplateConfigOutput {
	return i.ToAutoProvisioningGroupLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i AutoProvisioningGroupLaunchTemplateConfigArgs) ToAutoProvisioningGroupLaunchTemplateConfigOutputWithContext(ctx context.Context) AutoProvisioningGroupLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoProvisioningGroupLaunchTemplateConfigOutput)
}

// AutoProvisioningGroupLaunchTemplateConfigArrayInput is an input type that accepts AutoProvisioningGroupLaunchTemplateConfigArray and AutoProvisioningGroupLaunchTemplateConfigArrayOutput values.
// You can construct a concrete instance of `AutoProvisioningGroupLaunchTemplateConfigArrayInput` via:
//
//          AutoProvisioningGroupLaunchTemplateConfigArray{ AutoProvisioningGroupLaunchTemplateConfigArgs{...} }
type AutoProvisioningGroupLaunchTemplateConfigArrayInput interface {
	pulumi.Input

	ToAutoProvisioningGroupLaunchTemplateConfigArrayOutput() AutoProvisioningGroupLaunchTemplateConfigArrayOutput
	ToAutoProvisioningGroupLaunchTemplateConfigArrayOutputWithContext(context.Context) AutoProvisioningGroupLaunchTemplateConfigArrayOutput
}

type AutoProvisioningGroupLaunchTemplateConfigArray []AutoProvisioningGroupLaunchTemplateConfigInput

func (AutoProvisioningGroupLaunchTemplateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoProvisioningGroupLaunchTemplateConfig)(nil)).Elem()
}

func (i AutoProvisioningGroupLaunchTemplateConfigArray) ToAutoProvisioningGroupLaunchTemplateConfigArrayOutput() AutoProvisioningGroupLaunchTemplateConfigArrayOutput {
	return i.ToAutoProvisioningGroupLaunchTemplateConfigArrayOutputWithContext(context.Background())
}

func (i AutoProvisioningGroupLaunchTemplateConfigArray) ToAutoProvisioningGroupLaunchTemplateConfigArrayOutputWithContext(ctx context.Context) AutoProvisioningGroupLaunchTemplateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoProvisioningGroupLaunchTemplateConfigArrayOutput)
}

type AutoProvisioningGroupLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (AutoProvisioningGroupLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoProvisioningGroupLaunchTemplateConfig)(nil)).Elem()
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) ToAutoProvisioningGroupLaunchTemplateConfigOutput() AutoProvisioningGroupLaunchTemplateConfigOutput {
	return o
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) ToAutoProvisioningGroupLaunchTemplateConfigOutputWithContext(ctx context.Context) AutoProvisioningGroupLaunchTemplateConfigOutput {
	return o
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoProvisioningGroupLaunchTemplateConfig) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) MaxPrice() pulumi.StringOutput {
	return o.ApplyT(func(v AutoProvisioningGroupLaunchTemplateConfig) string { return v.MaxPrice }).(pulumi.StringOutput)
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoProvisioningGroupLaunchTemplateConfig) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoProvisioningGroupLaunchTemplateConfig) string { return v.VswitchId }).(pulumi.StringOutput)
}

func (o AutoProvisioningGroupLaunchTemplateConfigOutput) WeightedCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v AutoProvisioningGroupLaunchTemplateConfig) string { return v.WeightedCapacity }).(pulumi.StringOutput)
}

type AutoProvisioningGroupLaunchTemplateConfigArrayOutput struct{ *pulumi.OutputState }

func (AutoProvisioningGroupLaunchTemplateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoProvisioningGroupLaunchTemplateConfig)(nil)).Elem()
}

func (o AutoProvisioningGroupLaunchTemplateConfigArrayOutput) ToAutoProvisioningGroupLaunchTemplateConfigArrayOutput() AutoProvisioningGroupLaunchTemplateConfigArrayOutput {
	return o
}

func (o AutoProvisioningGroupLaunchTemplateConfigArrayOutput) ToAutoProvisioningGroupLaunchTemplateConfigArrayOutputWithContext(ctx context.Context) AutoProvisioningGroupLaunchTemplateConfigArrayOutput {
	return o
}

func (o AutoProvisioningGroupLaunchTemplateConfigArrayOutput) Index(i pulumi.IntInput) AutoProvisioningGroupLaunchTemplateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutoProvisioningGroupLaunchTemplateConfig {
		return vs[0].([]AutoProvisioningGroupLaunchTemplateConfig)[vs[1].(int)]
	}).(AutoProvisioningGroupLaunchTemplateConfigOutput)
}

type DedicatedHostNetworkAttribute struct {
	// The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
	SlbUdpTimeout *int `pulumi:"slbUdpTimeout"`
	// The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
	UdpTimeout *int `pulumi:"udpTimeout"`
}

// DedicatedHostNetworkAttributeInput is an input type that accepts DedicatedHostNetworkAttributeArgs and DedicatedHostNetworkAttributeOutput values.
// You can construct a concrete instance of `DedicatedHostNetworkAttributeInput` via:
//
//          DedicatedHostNetworkAttributeArgs{...}
type DedicatedHostNetworkAttributeInput interface {
	pulumi.Input

	ToDedicatedHostNetworkAttributeOutput() DedicatedHostNetworkAttributeOutput
	ToDedicatedHostNetworkAttributeOutputWithContext(context.Context) DedicatedHostNetworkAttributeOutput
}

type DedicatedHostNetworkAttributeArgs struct {
	// The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
	SlbUdpTimeout pulumi.IntPtrInput `pulumi:"slbUdpTimeout"`
	// The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
	UdpTimeout pulumi.IntPtrInput `pulumi:"udpTimeout"`
}

func (DedicatedHostNetworkAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedHostNetworkAttribute)(nil)).Elem()
}

func (i DedicatedHostNetworkAttributeArgs) ToDedicatedHostNetworkAttributeOutput() DedicatedHostNetworkAttributeOutput {
	return i.ToDedicatedHostNetworkAttributeOutputWithContext(context.Background())
}

func (i DedicatedHostNetworkAttributeArgs) ToDedicatedHostNetworkAttributeOutputWithContext(ctx context.Context) DedicatedHostNetworkAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedHostNetworkAttributeOutput)
}

// DedicatedHostNetworkAttributeArrayInput is an input type that accepts DedicatedHostNetworkAttributeArray and DedicatedHostNetworkAttributeArrayOutput values.
// You can construct a concrete instance of `DedicatedHostNetworkAttributeArrayInput` via:
//
//          DedicatedHostNetworkAttributeArray{ DedicatedHostNetworkAttributeArgs{...} }
type DedicatedHostNetworkAttributeArrayInput interface {
	pulumi.Input

	ToDedicatedHostNetworkAttributeArrayOutput() DedicatedHostNetworkAttributeArrayOutput
	ToDedicatedHostNetworkAttributeArrayOutputWithContext(context.Context) DedicatedHostNetworkAttributeArrayOutput
}

type DedicatedHostNetworkAttributeArray []DedicatedHostNetworkAttributeInput

func (DedicatedHostNetworkAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedHostNetworkAttribute)(nil)).Elem()
}

func (i DedicatedHostNetworkAttributeArray) ToDedicatedHostNetworkAttributeArrayOutput() DedicatedHostNetworkAttributeArrayOutput {
	return i.ToDedicatedHostNetworkAttributeArrayOutputWithContext(context.Background())
}

func (i DedicatedHostNetworkAttributeArray) ToDedicatedHostNetworkAttributeArrayOutputWithContext(ctx context.Context) DedicatedHostNetworkAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedHostNetworkAttributeArrayOutput)
}

type DedicatedHostNetworkAttributeOutput struct{ *pulumi.OutputState }

func (DedicatedHostNetworkAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedHostNetworkAttribute)(nil)).Elem()
}

func (o DedicatedHostNetworkAttributeOutput) ToDedicatedHostNetworkAttributeOutput() DedicatedHostNetworkAttributeOutput {
	return o
}

func (o DedicatedHostNetworkAttributeOutput) ToDedicatedHostNetworkAttributeOutputWithContext(ctx context.Context) DedicatedHostNetworkAttributeOutput {
	return o
}

// The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
func (o DedicatedHostNetworkAttributeOutput) SlbUdpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedHostNetworkAttribute) *int { return v.SlbUdpTimeout }).(pulumi.IntPtrOutput)
}

// The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
func (o DedicatedHostNetworkAttributeOutput) UdpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedHostNetworkAttribute) *int { return v.UdpTimeout }).(pulumi.IntPtrOutput)
}

type DedicatedHostNetworkAttributeArrayOutput struct{ *pulumi.OutputState }

func (DedicatedHostNetworkAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedHostNetworkAttribute)(nil)).Elem()
}

func (o DedicatedHostNetworkAttributeArrayOutput) ToDedicatedHostNetworkAttributeArrayOutput() DedicatedHostNetworkAttributeArrayOutput {
	return o
}

func (o DedicatedHostNetworkAttributeArrayOutput) ToDedicatedHostNetworkAttributeArrayOutputWithContext(ctx context.Context) DedicatedHostNetworkAttributeArrayOutput {
	return o
}

func (o DedicatedHostNetworkAttributeArrayOutput) Index(i pulumi.IntInput) DedicatedHostNetworkAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DedicatedHostNetworkAttribute {
		return vs[0].([]DedicatedHostNetworkAttribute)[vs[1].(int)]
	}).(DedicatedHostNetworkAttributeOutput)
}

type EcsLaunchTemplateDataDisk struct {
	// The category of the disk.
	Category *string `pulumi:"category"`
	// Indicates whether the data disk is released with the instance.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description *string `pulumi:"description"`
	// Encrypted the data in this disk.
	Encrypted *bool `pulumi:"encrypted"`
	// The name of the data disk.
	Name *string `pulumi:"name"`
	// The performance level of the ESSD used as the data disk.
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The size of the data disk.
	Size *int `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId *string `pulumi:"snapshotId"`
}

// EcsLaunchTemplateDataDiskInput is an input type that accepts EcsLaunchTemplateDataDiskArgs and EcsLaunchTemplateDataDiskOutput values.
// You can construct a concrete instance of `EcsLaunchTemplateDataDiskInput` via:
//
//          EcsLaunchTemplateDataDiskArgs{...}
type EcsLaunchTemplateDataDiskInput interface {
	pulumi.Input

	ToEcsLaunchTemplateDataDiskOutput() EcsLaunchTemplateDataDiskOutput
	ToEcsLaunchTemplateDataDiskOutputWithContext(context.Context) EcsLaunchTemplateDataDiskOutput
}

type EcsLaunchTemplateDataDiskArgs struct {
	// The category of the disk.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Indicates whether the data disk is released with the instance.
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Encrypted the data in this disk.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The name of the data disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The performance level of the ESSD used as the data disk.
	PerformanceLevel pulumi.StringPtrInput `pulumi:"performanceLevel"`
	// The size of the data disk.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (EcsLaunchTemplateDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsLaunchTemplateDataDisk)(nil)).Elem()
}

func (i EcsLaunchTemplateDataDiskArgs) ToEcsLaunchTemplateDataDiskOutput() EcsLaunchTemplateDataDiskOutput {
	return i.ToEcsLaunchTemplateDataDiskOutputWithContext(context.Background())
}

func (i EcsLaunchTemplateDataDiskArgs) ToEcsLaunchTemplateDataDiskOutputWithContext(ctx context.Context) EcsLaunchTemplateDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateDataDiskOutput)
}

// EcsLaunchTemplateDataDiskArrayInput is an input type that accepts EcsLaunchTemplateDataDiskArray and EcsLaunchTemplateDataDiskArrayOutput values.
// You can construct a concrete instance of `EcsLaunchTemplateDataDiskArrayInput` via:
//
//          EcsLaunchTemplateDataDiskArray{ EcsLaunchTemplateDataDiskArgs{...} }
type EcsLaunchTemplateDataDiskArrayInput interface {
	pulumi.Input

	ToEcsLaunchTemplateDataDiskArrayOutput() EcsLaunchTemplateDataDiskArrayOutput
	ToEcsLaunchTemplateDataDiskArrayOutputWithContext(context.Context) EcsLaunchTemplateDataDiskArrayOutput
}

type EcsLaunchTemplateDataDiskArray []EcsLaunchTemplateDataDiskInput

func (EcsLaunchTemplateDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcsLaunchTemplateDataDisk)(nil)).Elem()
}

func (i EcsLaunchTemplateDataDiskArray) ToEcsLaunchTemplateDataDiskArrayOutput() EcsLaunchTemplateDataDiskArrayOutput {
	return i.ToEcsLaunchTemplateDataDiskArrayOutputWithContext(context.Background())
}

func (i EcsLaunchTemplateDataDiskArray) ToEcsLaunchTemplateDataDiskArrayOutputWithContext(ctx context.Context) EcsLaunchTemplateDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateDataDiskArrayOutput)
}

type EcsLaunchTemplateDataDiskOutput struct{ *pulumi.OutputState }

func (EcsLaunchTemplateDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsLaunchTemplateDataDisk)(nil)).Elem()
}

func (o EcsLaunchTemplateDataDiskOutput) ToEcsLaunchTemplateDataDiskOutput() EcsLaunchTemplateDataDiskOutput {
	return o
}

func (o EcsLaunchTemplateDataDiskOutput) ToEcsLaunchTemplateDataDiskOutputWithContext(ctx context.Context) EcsLaunchTemplateDataDiskOutput {
	return o
}

// The category of the disk.
func (o EcsLaunchTemplateDataDiskOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Indicates whether the data disk is released with the instance.
func (o EcsLaunchTemplateDataDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o EcsLaunchTemplateDataDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Encrypted the data in this disk.
func (o EcsLaunchTemplateDataDiskOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The name of the data disk.
func (o EcsLaunchTemplateDataDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The performance level of the ESSD used as the data disk.
func (o EcsLaunchTemplateDataDiskOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *string { return v.PerformanceLevel }).(pulumi.StringPtrOutput)
}

// The size of the data disk.
func (o EcsLaunchTemplateDataDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
func (o EcsLaunchTemplateDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type EcsLaunchTemplateDataDiskArrayOutput struct{ *pulumi.OutputState }

func (EcsLaunchTemplateDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcsLaunchTemplateDataDisk)(nil)).Elem()
}

func (o EcsLaunchTemplateDataDiskArrayOutput) ToEcsLaunchTemplateDataDiskArrayOutput() EcsLaunchTemplateDataDiskArrayOutput {
	return o
}

func (o EcsLaunchTemplateDataDiskArrayOutput) ToEcsLaunchTemplateDataDiskArrayOutputWithContext(ctx context.Context) EcsLaunchTemplateDataDiskArrayOutput {
	return o
}

func (o EcsLaunchTemplateDataDiskArrayOutput) Index(i pulumi.IntInput) EcsLaunchTemplateDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcsLaunchTemplateDataDisk {
		return vs[0].([]EcsLaunchTemplateDataDisk)[vs[1].(int)]
	}).(EcsLaunchTemplateDataDiskOutput)
}

type EcsLaunchTemplateNetworkInterfaces struct {
	// The description of the data disk.
	Description *string `pulumi:"description"`
	// The name of the data disk.
	Name *string `pulumi:"name"`
	// The primary private IP address of the ENI.
	PrimaryIp *string `pulumi:"primaryIp"`
	// The security group ID must be one in the same VPC.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
	VswitchId *string `pulumi:"vswitchId"`
}

// EcsLaunchTemplateNetworkInterfacesInput is an input type that accepts EcsLaunchTemplateNetworkInterfacesArgs and EcsLaunchTemplateNetworkInterfacesOutput values.
// You can construct a concrete instance of `EcsLaunchTemplateNetworkInterfacesInput` via:
//
//          EcsLaunchTemplateNetworkInterfacesArgs{...}
type EcsLaunchTemplateNetworkInterfacesInput interface {
	pulumi.Input

	ToEcsLaunchTemplateNetworkInterfacesOutput() EcsLaunchTemplateNetworkInterfacesOutput
	ToEcsLaunchTemplateNetworkInterfacesOutputWithContext(context.Context) EcsLaunchTemplateNetworkInterfacesOutput
}

type EcsLaunchTemplateNetworkInterfacesArgs struct {
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the data disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The primary private IP address of the ENI.
	PrimaryIp pulumi.StringPtrInput `pulumi:"primaryIp"`
	// The security group ID must be one in the same VPC.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
}

func (EcsLaunchTemplateNetworkInterfacesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsLaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (i EcsLaunchTemplateNetworkInterfacesArgs) ToEcsLaunchTemplateNetworkInterfacesOutput() EcsLaunchTemplateNetworkInterfacesOutput {
	return i.ToEcsLaunchTemplateNetworkInterfacesOutputWithContext(context.Background())
}

func (i EcsLaunchTemplateNetworkInterfacesArgs) ToEcsLaunchTemplateNetworkInterfacesOutputWithContext(ctx context.Context) EcsLaunchTemplateNetworkInterfacesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateNetworkInterfacesOutput)
}

func (i EcsLaunchTemplateNetworkInterfacesArgs) ToEcsLaunchTemplateNetworkInterfacesPtrOutput() EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return i.ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Background())
}

func (i EcsLaunchTemplateNetworkInterfacesArgs) ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateNetworkInterfacesOutput).ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx)
}

// EcsLaunchTemplateNetworkInterfacesPtrInput is an input type that accepts EcsLaunchTemplateNetworkInterfacesArgs, EcsLaunchTemplateNetworkInterfacesPtr and EcsLaunchTemplateNetworkInterfacesPtrOutput values.
// You can construct a concrete instance of `EcsLaunchTemplateNetworkInterfacesPtrInput` via:
//
//          EcsLaunchTemplateNetworkInterfacesArgs{...}
//
//  or:
//
//          nil
type EcsLaunchTemplateNetworkInterfacesPtrInput interface {
	pulumi.Input

	ToEcsLaunchTemplateNetworkInterfacesPtrOutput() EcsLaunchTemplateNetworkInterfacesPtrOutput
	ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Context) EcsLaunchTemplateNetworkInterfacesPtrOutput
}

type ecsLaunchTemplateNetworkInterfacesPtrType EcsLaunchTemplateNetworkInterfacesArgs

func EcsLaunchTemplateNetworkInterfacesPtr(v *EcsLaunchTemplateNetworkInterfacesArgs) EcsLaunchTemplateNetworkInterfacesPtrInput {
	return (*ecsLaunchTemplateNetworkInterfacesPtrType)(v)
}

func (*ecsLaunchTemplateNetworkInterfacesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsLaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (i *ecsLaunchTemplateNetworkInterfacesPtrType) ToEcsLaunchTemplateNetworkInterfacesPtrOutput() EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return i.ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Background())
}

func (i *ecsLaunchTemplateNetworkInterfacesPtrType) ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateNetworkInterfacesPtrOutput)
}

type EcsLaunchTemplateNetworkInterfacesOutput struct{ *pulumi.OutputState }

func (EcsLaunchTemplateNetworkInterfacesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsLaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (o EcsLaunchTemplateNetworkInterfacesOutput) ToEcsLaunchTemplateNetworkInterfacesOutput() EcsLaunchTemplateNetworkInterfacesOutput {
	return o
}

func (o EcsLaunchTemplateNetworkInterfacesOutput) ToEcsLaunchTemplateNetworkInterfacesOutputWithContext(ctx context.Context) EcsLaunchTemplateNetworkInterfacesOutput {
	return o
}

func (o EcsLaunchTemplateNetworkInterfacesOutput) ToEcsLaunchTemplateNetworkInterfacesPtrOutput() EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return o.ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Background())
}

func (o EcsLaunchTemplateNetworkInterfacesOutput) ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateNetworkInterfaces) *EcsLaunchTemplateNetworkInterfaces {
		return &v
	}).(EcsLaunchTemplateNetworkInterfacesPtrOutput)
}

// The description of the data disk.
func (o EcsLaunchTemplateNetworkInterfacesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateNetworkInterfaces) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o EcsLaunchTemplateNetworkInterfacesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateNetworkInterfaces) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The primary private IP address of the ENI.
func (o EcsLaunchTemplateNetworkInterfacesOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateNetworkInterfaces) *string { return v.PrimaryIp }).(pulumi.StringPtrOutput)
}

// The security group ID must be one in the same VPC.
func (o EcsLaunchTemplateNetworkInterfacesOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateNetworkInterfaces) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
func (o EcsLaunchTemplateNetworkInterfacesOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateNetworkInterfaces) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

type EcsLaunchTemplateNetworkInterfacesPtrOutput struct{ *pulumi.OutputState }

func (EcsLaunchTemplateNetworkInterfacesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsLaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) ToEcsLaunchTemplateNetworkInterfacesPtrOutput() EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return o
}

func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) ToEcsLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateNetworkInterfacesPtrOutput {
	return o
}

func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) Elem() EcsLaunchTemplateNetworkInterfacesOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateNetworkInterfaces) EcsLaunchTemplateNetworkInterfaces { return *v }).(EcsLaunchTemplateNetworkInterfacesOutput)
}

// The description of the data disk.
func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The primary private IP address of the ENI.
func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIp
	}).(pulumi.StringPtrOutput)
}

// The security group ID must be one in the same VPC.
func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupId
	}).(pulumi.StringPtrOutput)
}

// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
func (o EcsLaunchTemplateNetworkInterfacesPtrOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.VswitchId
	}).(pulumi.StringPtrOutput)
}

type EcsLaunchTemplateSystemDisk struct {
	// The category of the disk.
	Category *string `pulumi:"category"`
	// Indicates whether the data disk is released with the instance.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description *string `pulumi:"description"`
	// The Iops.
	Iops *string `pulumi:"iops"`
	// The name of the data disk.
	Name *string `pulumi:"name"`
	// The performance level of the ESSD used as the data disk.
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The size of the data disk.
	Size *int `pulumi:"size"`
}

// EcsLaunchTemplateSystemDiskInput is an input type that accepts EcsLaunchTemplateSystemDiskArgs and EcsLaunchTemplateSystemDiskOutput values.
// You can construct a concrete instance of `EcsLaunchTemplateSystemDiskInput` via:
//
//          EcsLaunchTemplateSystemDiskArgs{...}
type EcsLaunchTemplateSystemDiskInput interface {
	pulumi.Input

	ToEcsLaunchTemplateSystemDiskOutput() EcsLaunchTemplateSystemDiskOutput
	ToEcsLaunchTemplateSystemDiskOutputWithContext(context.Context) EcsLaunchTemplateSystemDiskOutput
}

type EcsLaunchTemplateSystemDiskArgs struct {
	// The category of the disk.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Indicates whether the data disk is released with the instance.
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Iops.
	Iops pulumi.StringPtrInput `pulumi:"iops"`
	// The name of the data disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The performance level of the ESSD used as the data disk.
	PerformanceLevel pulumi.StringPtrInput `pulumi:"performanceLevel"`
	// The size of the data disk.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (EcsLaunchTemplateSystemDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsLaunchTemplateSystemDisk)(nil)).Elem()
}

func (i EcsLaunchTemplateSystemDiskArgs) ToEcsLaunchTemplateSystemDiskOutput() EcsLaunchTemplateSystemDiskOutput {
	return i.ToEcsLaunchTemplateSystemDiskOutputWithContext(context.Background())
}

func (i EcsLaunchTemplateSystemDiskArgs) ToEcsLaunchTemplateSystemDiskOutputWithContext(ctx context.Context) EcsLaunchTemplateSystemDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateSystemDiskOutput)
}

func (i EcsLaunchTemplateSystemDiskArgs) ToEcsLaunchTemplateSystemDiskPtrOutput() EcsLaunchTemplateSystemDiskPtrOutput {
	return i.ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(context.Background())
}

func (i EcsLaunchTemplateSystemDiskArgs) ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateSystemDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateSystemDiskOutput).ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(ctx)
}

// EcsLaunchTemplateSystemDiskPtrInput is an input type that accepts EcsLaunchTemplateSystemDiskArgs, EcsLaunchTemplateSystemDiskPtr and EcsLaunchTemplateSystemDiskPtrOutput values.
// You can construct a concrete instance of `EcsLaunchTemplateSystemDiskPtrInput` via:
//
//          EcsLaunchTemplateSystemDiskArgs{...}
//
//  or:
//
//          nil
type EcsLaunchTemplateSystemDiskPtrInput interface {
	pulumi.Input

	ToEcsLaunchTemplateSystemDiskPtrOutput() EcsLaunchTemplateSystemDiskPtrOutput
	ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(context.Context) EcsLaunchTemplateSystemDiskPtrOutput
}

type ecsLaunchTemplateSystemDiskPtrType EcsLaunchTemplateSystemDiskArgs

func EcsLaunchTemplateSystemDiskPtr(v *EcsLaunchTemplateSystemDiskArgs) EcsLaunchTemplateSystemDiskPtrInput {
	return (*ecsLaunchTemplateSystemDiskPtrType)(v)
}

func (*ecsLaunchTemplateSystemDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsLaunchTemplateSystemDisk)(nil)).Elem()
}

func (i *ecsLaunchTemplateSystemDiskPtrType) ToEcsLaunchTemplateSystemDiskPtrOutput() EcsLaunchTemplateSystemDiskPtrOutput {
	return i.ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(context.Background())
}

func (i *ecsLaunchTemplateSystemDiskPtrType) ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateSystemDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsLaunchTemplateSystemDiskPtrOutput)
}

type EcsLaunchTemplateSystemDiskOutput struct{ *pulumi.OutputState }

func (EcsLaunchTemplateSystemDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsLaunchTemplateSystemDisk)(nil)).Elem()
}

func (o EcsLaunchTemplateSystemDiskOutput) ToEcsLaunchTemplateSystemDiskOutput() EcsLaunchTemplateSystemDiskOutput {
	return o
}

func (o EcsLaunchTemplateSystemDiskOutput) ToEcsLaunchTemplateSystemDiskOutputWithContext(ctx context.Context) EcsLaunchTemplateSystemDiskOutput {
	return o
}

func (o EcsLaunchTemplateSystemDiskOutput) ToEcsLaunchTemplateSystemDiskPtrOutput() EcsLaunchTemplateSystemDiskPtrOutput {
	return o.ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(context.Background())
}

func (o EcsLaunchTemplateSystemDiskOutput) ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateSystemDiskPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *EcsLaunchTemplateSystemDisk {
		return &v
	}).(EcsLaunchTemplateSystemDiskPtrOutput)
}

// The category of the disk.
func (o EcsLaunchTemplateSystemDiskOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Indicates whether the data disk is released with the instance.
func (o EcsLaunchTemplateSystemDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o EcsLaunchTemplateSystemDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Iops.
func (o EcsLaunchTemplateSystemDiskOutput) Iops() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *string { return v.Iops }).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o EcsLaunchTemplateSystemDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The performance level of the ESSD used as the data disk.
func (o EcsLaunchTemplateSystemDiskOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *string { return v.PerformanceLevel }).(pulumi.StringPtrOutput)
}

// The size of the data disk.
func (o EcsLaunchTemplateSystemDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EcsLaunchTemplateSystemDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type EcsLaunchTemplateSystemDiskPtrOutput struct{ *pulumi.OutputState }

func (EcsLaunchTemplateSystemDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsLaunchTemplateSystemDisk)(nil)).Elem()
}

func (o EcsLaunchTemplateSystemDiskPtrOutput) ToEcsLaunchTemplateSystemDiskPtrOutput() EcsLaunchTemplateSystemDiskPtrOutput {
	return o
}

func (o EcsLaunchTemplateSystemDiskPtrOutput) ToEcsLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) EcsLaunchTemplateSystemDiskPtrOutput {
	return o
}

func (o EcsLaunchTemplateSystemDiskPtrOutput) Elem() EcsLaunchTemplateSystemDiskOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) EcsLaunchTemplateSystemDisk { return *v }).(EcsLaunchTemplateSystemDiskOutput)
}

// The category of the disk.
func (o EcsLaunchTemplateSystemDiskPtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Category
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the data disk is released with the instance.
func (o EcsLaunchTemplateSystemDiskPtrOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteWithInstance
	}).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o EcsLaunchTemplateSystemDiskPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The Iops.
func (o EcsLaunchTemplateSystemDiskPtrOutput) Iops() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o EcsLaunchTemplateSystemDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The performance level of the ESSD used as the data disk.
func (o EcsLaunchTemplateSystemDiskPtrOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.PerformanceLevel
	}).(pulumi.StringPtrOutput)
}

// The size of the data disk.
func (o EcsLaunchTemplateSystemDiskPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsLaunchTemplateSystemDisk) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type ImageDiskDeviceMapping struct {
	// Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
	Device *string `pulumi:"device"`
	// Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
	DiskType *string `pulumi:"diskType"`
	// Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
	Size *int `pulumi:"size"`
	// Specifies a snapshot that is used to create a combined custom image.
	SnapshotId *string `pulumi:"snapshotId"`
}

// ImageDiskDeviceMappingInput is an input type that accepts ImageDiskDeviceMappingArgs and ImageDiskDeviceMappingOutput values.
// You can construct a concrete instance of `ImageDiskDeviceMappingInput` via:
//
//          ImageDiskDeviceMappingArgs{...}
type ImageDiskDeviceMappingInput interface {
	pulumi.Input

	ToImageDiskDeviceMappingOutput() ImageDiskDeviceMappingOutput
	ToImageDiskDeviceMappingOutputWithContext(context.Context) ImageDiskDeviceMappingOutput
}

type ImageDiskDeviceMappingArgs struct {
	// Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// Specifies a snapshot that is used to create a combined custom image.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (ImageDiskDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDiskDeviceMapping)(nil)).Elem()
}

func (i ImageDiskDeviceMappingArgs) ToImageDiskDeviceMappingOutput() ImageDiskDeviceMappingOutput {
	return i.ToImageDiskDeviceMappingOutputWithContext(context.Background())
}

func (i ImageDiskDeviceMappingArgs) ToImageDiskDeviceMappingOutputWithContext(ctx context.Context) ImageDiskDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDiskDeviceMappingOutput)
}

// ImageDiskDeviceMappingArrayInput is an input type that accepts ImageDiskDeviceMappingArray and ImageDiskDeviceMappingArrayOutput values.
// You can construct a concrete instance of `ImageDiskDeviceMappingArrayInput` via:
//
//          ImageDiskDeviceMappingArray{ ImageDiskDeviceMappingArgs{...} }
type ImageDiskDeviceMappingArrayInput interface {
	pulumi.Input

	ToImageDiskDeviceMappingArrayOutput() ImageDiskDeviceMappingArrayOutput
	ToImageDiskDeviceMappingArrayOutputWithContext(context.Context) ImageDiskDeviceMappingArrayOutput
}

type ImageDiskDeviceMappingArray []ImageDiskDeviceMappingInput

func (ImageDiskDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDiskDeviceMapping)(nil)).Elem()
}

func (i ImageDiskDeviceMappingArray) ToImageDiskDeviceMappingArrayOutput() ImageDiskDeviceMappingArrayOutput {
	return i.ToImageDiskDeviceMappingArrayOutputWithContext(context.Background())
}

func (i ImageDiskDeviceMappingArray) ToImageDiskDeviceMappingArrayOutputWithContext(ctx context.Context) ImageDiskDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDiskDeviceMappingArrayOutput)
}

type ImageDiskDeviceMappingOutput struct{ *pulumi.OutputState }

func (ImageDiskDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDiskDeviceMapping)(nil)).Elem()
}

func (o ImageDiskDeviceMappingOutput) ToImageDiskDeviceMappingOutput() ImageDiskDeviceMappingOutput {
	return o
}

func (o ImageDiskDeviceMappingOutput) ToImageDiskDeviceMappingOutputWithContext(ctx context.Context) ImageDiskDeviceMappingOutput {
	return o
}

// Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
func (o ImageDiskDeviceMappingOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDiskDeviceMapping) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
func (o ImageDiskDeviceMappingOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDiskDeviceMapping) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
func (o ImageDiskDeviceMappingOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageDiskDeviceMapping) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// Specifies a snapshot that is used to create a combined custom image.
func (o ImageDiskDeviceMappingOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDiskDeviceMapping) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type ImageDiskDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (ImageDiskDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDiskDeviceMapping)(nil)).Elem()
}

func (o ImageDiskDeviceMappingArrayOutput) ToImageDiskDeviceMappingArrayOutput() ImageDiskDeviceMappingArrayOutput {
	return o
}

func (o ImageDiskDeviceMappingArrayOutput) ToImageDiskDeviceMappingArrayOutputWithContext(ctx context.Context) ImageDiskDeviceMappingArrayOutput {
	return o
}

func (o ImageDiskDeviceMappingArrayOutput) Index(i pulumi.IntInput) ImageDiskDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageDiskDeviceMapping {
		return vs[0].([]ImageDiskDeviceMapping)[vs[1].(int)]
	}).(ImageDiskDeviceMappingOutput)
}

type ImageImportDiskDeviceMapping struct {
	// The name of disk N in the custom image.
	Device *string `pulumi:"device"`
	// Resolution size. You must ensure that the system disk space ≥ file system space. Ranges: When n = 1, the system disk: 5 ~ 500GiB, When n = 2 ~ 17, that is, data disk: 5 ~ 1000GiB, When temporary is introduced, the system automatically detects the size, which is subject to the detection result.
	DiskImageSize *int `pulumi:"diskImageSize"`
	// Image format. Value range: When the `RAW`, `VHD`, `qcow2` is imported into the image, the system automatically detects the image format, whichever comes first.
	Format *string `pulumi:"format"`
	// Save the exported OSS bucket.
	OssBucket *string `pulumi:"ossBucket"`
	// The file name of your OSS Object.
	OssObject *string `pulumi:"ossObject"`
}

// ImageImportDiskDeviceMappingInput is an input type that accepts ImageImportDiskDeviceMappingArgs and ImageImportDiskDeviceMappingOutput values.
// You can construct a concrete instance of `ImageImportDiskDeviceMappingInput` via:
//
//          ImageImportDiskDeviceMappingArgs{...}
type ImageImportDiskDeviceMappingInput interface {
	pulumi.Input

	ToImageImportDiskDeviceMappingOutput() ImageImportDiskDeviceMappingOutput
	ToImageImportDiskDeviceMappingOutputWithContext(context.Context) ImageImportDiskDeviceMappingOutput
}

type ImageImportDiskDeviceMappingArgs struct {
	// The name of disk N in the custom image.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Resolution size. You must ensure that the system disk space ≥ file system space. Ranges: When n = 1, the system disk: 5 ~ 500GiB, When n = 2 ~ 17, that is, data disk: 5 ~ 1000GiB, When temporary is introduced, the system automatically detects the size, which is subject to the detection result.
	DiskImageSize pulumi.IntPtrInput `pulumi:"diskImageSize"`
	// Image format. Value range: When the `RAW`, `VHD`, `qcow2` is imported into the image, the system automatically detects the image format, whichever comes first.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Save the exported OSS bucket.
	OssBucket pulumi.StringPtrInput `pulumi:"ossBucket"`
	// The file name of your OSS Object.
	OssObject pulumi.StringPtrInput `pulumi:"ossObject"`
}

func (ImageImportDiskDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageImportDiskDeviceMapping)(nil)).Elem()
}

func (i ImageImportDiskDeviceMappingArgs) ToImageImportDiskDeviceMappingOutput() ImageImportDiskDeviceMappingOutput {
	return i.ToImageImportDiskDeviceMappingOutputWithContext(context.Background())
}

func (i ImageImportDiskDeviceMappingArgs) ToImageImportDiskDeviceMappingOutputWithContext(ctx context.Context) ImageImportDiskDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageImportDiskDeviceMappingOutput)
}

// ImageImportDiskDeviceMappingArrayInput is an input type that accepts ImageImportDiskDeviceMappingArray and ImageImportDiskDeviceMappingArrayOutput values.
// You can construct a concrete instance of `ImageImportDiskDeviceMappingArrayInput` via:
//
//          ImageImportDiskDeviceMappingArray{ ImageImportDiskDeviceMappingArgs{...} }
type ImageImportDiskDeviceMappingArrayInput interface {
	pulumi.Input

	ToImageImportDiskDeviceMappingArrayOutput() ImageImportDiskDeviceMappingArrayOutput
	ToImageImportDiskDeviceMappingArrayOutputWithContext(context.Context) ImageImportDiskDeviceMappingArrayOutput
}

type ImageImportDiskDeviceMappingArray []ImageImportDiskDeviceMappingInput

func (ImageImportDiskDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageImportDiskDeviceMapping)(nil)).Elem()
}

func (i ImageImportDiskDeviceMappingArray) ToImageImportDiskDeviceMappingArrayOutput() ImageImportDiskDeviceMappingArrayOutput {
	return i.ToImageImportDiskDeviceMappingArrayOutputWithContext(context.Background())
}

func (i ImageImportDiskDeviceMappingArray) ToImageImportDiskDeviceMappingArrayOutputWithContext(ctx context.Context) ImageImportDiskDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageImportDiskDeviceMappingArrayOutput)
}

type ImageImportDiskDeviceMappingOutput struct{ *pulumi.OutputState }

func (ImageImportDiskDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageImportDiskDeviceMapping)(nil)).Elem()
}

func (o ImageImportDiskDeviceMappingOutput) ToImageImportDiskDeviceMappingOutput() ImageImportDiskDeviceMappingOutput {
	return o
}

func (o ImageImportDiskDeviceMappingOutput) ToImageImportDiskDeviceMappingOutputWithContext(ctx context.Context) ImageImportDiskDeviceMappingOutput {
	return o
}

// The name of disk N in the custom image.
func (o ImageImportDiskDeviceMappingOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageImportDiskDeviceMapping) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Resolution size. You must ensure that the system disk space ≥ file system space. Ranges: When n = 1, the system disk: 5 ~ 500GiB, When n = 2 ~ 17, that is, data disk: 5 ~ 1000GiB, When temporary is introduced, the system automatically detects the size, which is subject to the detection result.
func (o ImageImportDiskDeviceMappingOutput) DiskImageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageImportDiskDeviceMapping) *int { return v.DiskImageSize }).(pulumi.IntPtrOutput)
}

// Image format. Value range: When the `RAW`, `VHD`, `qcow2` is imported into the image, the system automatically detects the image format, whichever comes first.
func (o ImageImportDiskDeviceMappingOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageImportDiskDeviceMapping) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Save the exported OSS bucket.
func (o ImageImportDiskDeviceMappingOutput) OssBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageImportDiskDeviceMapping) *string { return v.OssBucket }).(pulumi.StringPtrOutput)
}

// The file name of your OSS Object.
func (o ImageImportDiskDeviceMappingOutput) OssObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageImportDiskDeviceMapping) *string { return v.OssObject }).(pulumi.StringPtrOutput)
}

type ImageImportDiskDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (ImageImportDiskDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageImportDiskDeviceMapping)(nil)).Elem()
}

func (o ImageImportDiskDeviceMappingArrayOutput) ToImageImportDiskDeviceMappingArrayOutput() ImageImportDiskDeviceMappingArrayOutput {
	return o
}

func (o ImageImportDiskDeviceMappingArrayOutput) ToImageImportDiskDeviceMappingArrayOutputWithContext(ctx context.Context) ImageImportDiskDeviceMappingArrayOutput {
	return o
}

func (o ImageImportDiskDeviceMappingArrayOutput) Index(i pulumi.IntInput) ImageImportDiskDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageImportDiskDeviceMapping {
		return vs[0].([]ImageImportDiskDeviceMapping)[vs[1].(int)]
	}).(ImageImportDiskDeviceMappingOutput)
}

type InstanceDataDisk struct {
	// The ID of the automatic snapshot policy applied to the system disk.
	AutoSnapshotPolicyId *string `pulumi:"autoSnapshotPolicyId"`
	// The category of the disk:
	// - `cloud`: The general cloud disk.
	// - `cloudEfficiency`: The efficiency cloud disk.
	// - `cloudSsd`: The SSD cloud disk.
	// - `cloudEssd`: The ESSD cloud disk.
	// - `ephemeralSsd`: The local SSD disk.
	//   Default to `cloudEfficiency`.
	Category *string `pulumi:"category"`
	// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloud_essd, cloudSsd disk. If the category of this data disk was ephemeral_ssd, please don't set this param. Default value: `true`.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description *string `pulumi:"description"`
	// -(Optional, Bool, ForceNew) Encrypted the data in this disk. Default value: `false`.
	Encrypted *bool `pulumi:"encrypted"`
	// The KMS key ID corresponding to the Nth data disk.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The name of the data disk.
	Name *string `pulumi:"name"`
	// The performance level of the ESSD used as data disk:
	// - `PL0`: A single ESSD can deliver up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD can deliver up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD can deliver up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD can deliver up to 1,000,000 random read/write IOPS.
	//   Default to `PL1`.
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The size of the data disk.
	// - cloud：[5, 2000]
	// - cloud_efficiency：[20, 32768]
	// - cloud_ssd：[20, 32768]
	// - cloud_essd：[20, 32768]
	// - ephemeral_ssd: [5, 800]
	Size int `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId *string `pulumi:"snapshotId"`
}

// InstanceDataDiskInput is an input type that accepts InstanceDataDiskArgs and InstanceDataDiskOutput values.
// You can construct a concrete instance of `InstanceDataDiskInput` via:
//
//          InstanceDataDiskArgs{...}
type InstanceDataDiskInput interface {
	pulumi.Input

	ToInstanceDataDiskOutput() InstanceDataDiskOutput
	ToInstanceDataDiskOutputWithContext(context.Context) InstanceDataDiskOutput
}

type InstanceDataDiskArgs struct {
	// The ID of the automatic snapshot policy applied to the system disk.
	AutoSnapshotPolicyId pulumi.StringPtrInput `pulumi:"autoSnapshotPolicyId"`
	// The category of the disk:
	// - `cloud`: The general cloud disk.
	// - `cloudEfficiency`: The efficiency cloud disk.
	// - `cloudSsd`: The SSD cloud disk.
	// - `cloudEssd`: The ESSD cloud disk.
	// - `ephemeralSsd`: The local SSD disk.
	//   Default to `cloudEfficiency`.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloud_essd, cloudSsd disk. If the category of this data disk was ephemeral_ssd, please don't set this param. Default value: `true`.
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// -(Optional, Bool, ForceNew) Encrypted the data in this disk. Default value: `false`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The KMS key ID corresponding to the Nth data disk.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The name of the data disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The performance level of the ESSD used as data disk:
	// - `PL0`: A single ESSD can deliver up to 10,000 random read/write IOPS.
	// - `PL1`: A single ESSD can deliver up to 50,000 random read/write IOPS.
	// - `PL2`: A single ESSD can deliver up to 100,000 random read/write IOPS.
	// - `PL3`: A single ESSD can deliver up to 1,000,000 random read/write IOPS.
	//   Default to `PL1`.
	PerformanceLevel pulumi.StringPtrInput `pulumi:"performanceLevel"`
	// The size of the data disk.
	// - cloud：[5, 2000]
	// - cloud_efficiency：[20, 32768]
	// - cloud_ssd：[20, 32768]
	// - cloud_essd：[20, 32768]
	// - ephemeral_ssd: [5, 800]
	Size pulumi.IntInput `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (InstanceDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataDisk)(nil)).Elem()
}

func (i InstanceDataDiskArgs) ToInstanceDataDiskOutput() InstanceDataDiskOutput {
	return i.ToInstanceDataDiskOutputWithContext(context.Background())
}

func (i InstanceDataDiskArgs) ToInstanceDataDiskOutputWithContext(ctx context.Context) InstanceDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDiskOutput)
}

// InstanceDataDiskArrayInput is an input type that accepts InstanceDataDiskArray and InstanceDataDiskArrayOutput values.
// You can construct a concrete instance of `InstanceDataDiskArrayInput` via:
//
//          InstanceDataDiskArray{ InstanceDataDiskArgs{...} }
type InstanceDataDiskArrayInput interface {
	pulumi.Input

	ToInstanceDataDiskArrayOutput() InstanceDataDiskArrayOutput
	ToInstanceDataDiskArrayOutputWithContext(context.Context) InstanceDataDiskArrayOutput
}

type InstanceDataDiskArray []InstanceDataDiskInput

func (InstanceDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDataDisk)(nil)).Elem()
}

func (i InstanceDataDiskArray) ToInstanceDataDiskArrayOutput() InstanceDataDiskArrayOutput {
	return i.ToInstanceDataDiskArrayOutputWithContext(context.Background())
}

func (i InstanceDataDiskArray) ToInstanceDataDiskArrayOutputWithContext(ctx context.Context) InstanceDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDiskArrayOutput)
}

type InstanceDataDiskOutput struct{ *pulumi.OutputState }

func (InstanceDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataDisk)(nil)).Elem()
}

func (o InstanceDataDiskOutput) ToInstanceDataDiskOutput() InstanceDataDiskOutput {
	return o
}

func (o InstanceDataDiskOutput) ToInstanceDataDiskOutputWithContext(ctx context.Context) InstanceDataDiskOutput {
	return o
}

// The ID of the automatic snapshot policy applied to the system disk.
func (o InstanceDataDiskOutput) AutoSnapshotPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.AutoSnapshotPolicyId }).(pulumi.StringPtrOutput)
}

// The category of the disk:
// - `cloud`: The general cloud disk.
// - `cloudEfficiency`: The efficiency cloud disk.
// - `cloudSsd`: The SSD cloud disk.
// - `cloudEssd`: The ESSD cloud disk.
// - `ephemeralSsd`: The local SSD disk.
//   Default to `cloudEfficiency`.
func (o InstanceDataDiskOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloud_essd, cloudSsd disk. If the category of this data disk was ephemeral_ssd, please don't set this param. Default value: `true`.
func (o InstanceDataDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o InstanceDataDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// -(Optional, Bool, ForceNew) Encrypted the data in this disk. Default value: `false`.
func (o InstanceDataDiskOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The KMS key ID corresponding to the Nth data disk.
func (o InstanceDataDiskOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o InstanceDataDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The performance level of the ESSD used as data disk:
// - `PL0`: A single ESSD can deliver up to 10,000 random read/write IOPS.
// - `PL1`: A single ESSD can deliver up to 50,000 random read/write IOPS.
// - `PL2`: A single ESSD can deliver up to 100,000 random read/write IOPS.
// - `PL3`: A single ESSD can deliver up to 1,000,000 random read/write IOPS.
//   Default to `PL1`.
func (o InstanceDataDiskOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.PerformanceLevel }).(pulumi.StringPtrOutput)
}

// The size of the data disk.
// - cloud：[5, 2000]
// - cloud_efficiency：[20, 32768]
// - cloud_ssd：[20, 32768]
// - cloud_essd：[20, 32768]
// - ephemeral_ssd: [5, 800]
func (o InstanceDataDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceDataDisk) int { return v.Size }).(pulumi.IntOutput)
}

// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
func (o InstanceDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type InstanceDataDiskArrayOutput struct{ *pulumi.OutputState }

func (InstanceDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDataDisk)(nil)).Elem()
}

func (o InstanceDataDiskArrayOutput) ToInstanceDataDiskArrayOutput() InstanceDataDiskArrayOutput {
	return o
}

func (o InstanceDataDiskArrayOutput) ToInstanceDataDiskArrayOutputWithContext(ctx context.Context) InstanceDataDiskArrayOutput {
	return o
}

func (o InstanceDataDiskArrayOutput) Index(i pulumi.IntInput) InstanceDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDataDisk {
		return vs[0].([]InstanceDataDisk)[vs[1].(int)]
	}).(InstanceDataDiskOutput)
}

type LaunchTemplateDataDisk struct {
	// The category of the disk:
	// - cloud: Basic cloud disk.
	// - cloud_efficiency: Ultra cloud disk.
	// - cloud_ssd: SSD cloud Disks.
	// - ephemeral_ssd: local SSD Disks
	// - cloud_essd: ESSD cloud Disks.
	Category *string `pulumi:"category"`
	// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description *string `pulumi:"description"`
	// -(Optional, Bool) Encrypted the data in this disk.
	Encrypted *bool `pulumi:"encrypted"`
	// The name of the data disk.
	Name             *string `pulumi:"name"`
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The size of the data disk.
	// - cloud：[5, 2000]
	// - cloud_efficiency：[20, 32768]
	// - cloud_ssd：[20, 32768]
	// - cloud_essd：[20, 32768]
	// - ephemeral_ssd: [5, 800]
	Size *int `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId *string `pulumi:"snapshotId"`
}

// LaunchTemplateDataDiskInput is an input type that accepts LaunchTemplateDataDiskArgs and LaunchTemplateDataDiskOutput values.
// You can construct a concrete instance of `LaunchTemplateDataDiskInput` via:
//
//          LaunchTemplateDataDiskArgs{...}
type LaunchTemplateDataDiskInput interface {
	pulumi.Input

	ToLaunchTemplateDataDiskOutput() LaunchTemplateDataDiskOutput
	ToLaunchTemplateDataDiskOutputWithContext(context.Context) LaunchTemplateDataDiskOutput
}

type LaunchTemplateDataDiskArgs struct {
	// The category of the disk:
	// - cloud: Basic cloud disk.
	// - cloud_efficiency: Ultra cloud disk.
	// - cloud_ssd: SSD cloud Disks.
	// - ephemeral_ssd: local SSD Disks
	// - cloud_essd: ESSD cloud Disks.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// -(Optional, Bool) Encrypted the data in this disk.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The name of the data disk.
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PerformanceLevel pulumi.StringPtrInput `pulumi:"performanceLevel"`
	// The size of the data disk.
	// - cloud：[5, 2000]
	// - cloud_efficiency：[20, 32768]
	// - cloud_ssd：[20, 32768]
	// - cloud_essd：[20, 32768]
	// - ephemeral_ssd: [5, 800]
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (LaunchTemplateDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateDataDisk)(nil)).Elem()
}

func (i LaunchTemplateDataDiskArgs) ToLaunchTemplateDataDiskOutput() LaunchTemplateDataDiskOutput {
	return i.ToLaunchTemplateDataDiskOutputWithContext(context.Background())
}

func (i LaunchTemplateDataDiskArgs) ToLaunchTemplateDataDiskOutputWithContext(ctx context.Context) LaunchTemplateDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateDataDiskOutput)
}

// LaunchTemplateDataDiskArrayInput is an input type that accepts LaunchTemplateDataDiskArray and LaunchTemplateDataDiskArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateDataDiskArrayInput` via:
//
//          LaunchTemplateDataDiskArray{ LaunchTemplateDataDiskArgs{...} }
type LaunchTemplateDataDiskArrayInput interface {
	pulumi.Input

	ToLaunchTemplateDataDiskArrayOutput() LaunchTemplateDataDiskArrayOutput
	ToLaunchTemplateDataDiskArrayOutputWithContext(context.Context) LaunchTemplateDataDiskArrayOutput
}

type LaunchTemplateDataDiskArray []LaunchTemplateDataDiskInput

func (LaunchTemplateDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateDataDisk)(nil)).Elem()
}

func (i LaunchTemplateDataDiskArray) ToLaunchTemplateDataDiskArrayOutput() LaunchTemplateDataDiskArrayOutput {
	return i.ToLaunchTemplateDataDiskArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateDataDiskArray) ToLaunchTemplateDataDiskArrayOutputWithContext(ctx context.Context) LaunchTemplateDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateDataDiskArrayOutput)
}

type LaunchTemplateDataDiskOutput struct{ *pulumi.OutputState }

func (LaunchTemplateDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateDataDisk)(nil)).Elem()
}

func (o LaunchTemplateDataDiskOutput) ToLaunchTemplateDataDiskOutput() LaunchTemplateDataDiskOutput {
	return o
}

func (o LaunchTemplateDataDiskOutput) ToLaunchTemplateDataDiskOutputWithContext(ctx context.Context) LaunchTemplateDataDiskOutput {
	return o
}

// The category of the disk:
// - cloud: Basic cloud disk.
// - cloud_efficiency: Ultra cloud disk.
// - cloud_ssd: SSD cloud Disks.
// - ephemeral_ssd: local SSD Disks
// - cloud_essd: ESSD cloud Disks.
func (o LaunchTemplateDataDiskOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
func (o LaunchTemplateDataDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o LaunchTemplateDataDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// -(Optional, Bool) Encrypted the data in this disk.
func (o LaunchTemplateDataDiskOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The name of the data disk.
func (o LaunchTemplateDataDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LaunchTemplateDataDiskOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *string { return v.PerformanceLevel }).(pulumi.StringPtrOutput)
}

// The size of the data disk.
// - cloud：[5, 2000]
// - cloud_efficiency：[20, 32768]
// - cloud_ssd：[20, 32768]
// - cloud_essd：[20, 32768]
// - ephemeral_ssd: [5, 800]
func (o LaunchTemplateDataDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
func (o LaunchTemplateDataDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateDataDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateDataDiskArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateDataDisk)(nil)).Elem()
}

func (o LaunchTemplateDataDiskArrayOutput) ToLaunchTemplateDataDiskArrayOutput() LaunchTemplateDataDiskArrayOutput {
	return o
}

func (o LaunchTemplateDataDiskArrayOutput) ToLaunchTemplateDataDiskArrayOutputWithContext(ctx context.Context) LaunchTemplateDataDiskArrayOutput {
	return o
}

func (o LaunchTemplateDataDiskArrayOutput) Index(i pulumi.IntInput) LaunchTemplateDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateDataDisk {
		return vs[0].([]LaunchTemplateDataDisk)[vs[1].(int)]
	}).(LaunchTemplateDataDiskOutput)
}

type LaunchTemplateNetworkInterfaces struct {
	// The description of the data disk.
	Description *string `pulumi:"description"`
	// The name of the data disk.
	Name *string `pulumi:"name"`
	// The primary private IP address of the ENI.
	PrimaryIp *string `pulumi:"primaryIp"`
	// The security group ID must be one in the same VPC.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
	VswitchId *string `pulumi:"vswitchId"`
}

// LaunchTemplateNetworkInterfacesInput is an input type that accepts LaunchTemplateNetworkInterfacesArgs and LaunchTemplateNetworkInterfacesOutput values.
// You can construct a concrete instance of `LaunchTemplateNetworkInterfacesInput` via:
//
//          LaunchTemplateNetworkInterfacesArgs{...}
type LaunchTemplateNetworkInterfacesInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfacesOutput() LaunchTemplateNetworkInterfacesOutput
	ToLaunchTemplateNetworkInterfacesOutputWithContext(context.Context) LaunchTemplateNetworkInterfacesOutput
}

type LaunchTemplateNetworkInterfacesArgs struct {
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the data disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The primary private IP address of the ENI.
	PrimaryIp pulumi.StringPtrInput `pulumi:"primaryIp"`
	// The security group ID must be one in the same VPC.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
}

func (LaunchTemplateNetworkInterfacesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfacesArgs) ToLaunchTemplateNetworkInterfacesOutput() LaunchTemplateNetworkInterfacesOutput {
	return i.ToLaunchTemplateNetworkInterfacesOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfacesArgs) ToLaunchTemplateNetworkInterfacesOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfacesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfacesOutput)
}

func (i LaunchTemplateNetworkInterfacesArgs) ToLaunchTemplateNetworkInterfacesPtrOutput() LaunchTemplateNetworkInterfacesPtrOutput {
	return i.ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfacesArgs) ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfacesOutput).ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx)
}

// LaunchTemplateNetworkInterfacesPtrInput is an input type that accepts LaunchTemplateNetworkInterfacesArgs, LaunchTemplateNetworkInterfacesPtr and LaunchTemplateNetworkInterfacesPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateNetworkInterfacesPtrInput` via:
//
//          LaunchTemplateNetworkInterfacesArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateNetworkInterfacesPtrInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfacesPtrOutput() LaunchTemplateNetworkInterfacesPtrOutput
	ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Context) LaunchTemplateNetworkInterfacesPtrOutput
}

type launchTemplateNetworkInterfacesPtrType LaunchTemplateNetworkInterfacesArgs

func LaunchTemplateNetworkInterfacesPtr(v *LaunchTemplateNetworkInterfacesArgs) LaunchTemplateNetworkInterfacesPtrInput {
	return (*launchTemplateNetworkInterfacesPtrType)(v)
}

func (*launchTemplateNetworkInterfacesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (i *launchTemplateNetworkInterfacesPtrType) ToLaunchTemplateNetworkInterfacesPtrOutput() LaunchTemplateNetworkInterfacesPtrOutput {
	return i.ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Background())
}

func (i *launchTemplateNetworkInterfacesPtrType) ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfacesPtrOutput)
}

type LaunchTemplateNetworkInterfacesOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfacesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfacesOutput) ToLaunchTemplateNetworkInterfacesOutput() LaunchTemplateNetworkInterfacesOutput {
	return o
}

func (o LaunchTemplateNetworkInterfacesOutput) ToLaunchTemplateNetworkInterfacesOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfacesOutput {
	return o
}

func (o LaunchTemplateNetworkInterfacesOutput) ToLaunchTemplateNetworkInterfacesPtrOutput() LaunchTemplateNetworkInterfacesPtrOutput {
	return o.ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateNetworkInterfacesOutput) ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfacesPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaces) *LaunchTemplateNetworkInterfaces {
		return &v
	}).(LaunchTemplateNetworkInterfacesPtrOutput)
}

// The description of the data disk.
func (o LaunchTemplateNetworkInterfacesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaces) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o LaunchTemplateNetworkInterfacesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaces) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The primary private IP address of the ENI.
func (o LaunchTemplateNetworkInterfacesOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaces) *string { return v.PrimaryIp }).(pulumi.StringPtrOutput)
}

// The security group ID must be one in the same VPC.
func (o LaunchTemplateNetworkInterfacesOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaces) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
func (o LaunchTemplateNetworkInterfacesOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaces) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateNetworkInterfacesPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfacesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateNetworkInterfaces)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfacesPtrOutput) ToLaunchTemplateNetworkInterfacesPtrOutput() LaunchTemplateNetworkInterfacesPtrOutput {
	return o
}

func (o LaunchTemplateNetworkInterfacesPtrOutput) ToLaunchTemplateNetworkInterfacesPtrOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfacesPtrOutput {
	return o
}

func (o LaunchTemplateNetworkInterfacesPtrOutput) Elem() LaunchTemplateNetworkInterfacesOutput {
	return o.ApplyT(func(v *LaunchTemplateNetworkInterfaces) LaunchTemplateNetworkInterfaces { return *v }).(LaunchTemplateNetworkInterfacesOutput)
}

// The description of the data disk.
func (o LaunchTemplateNetworkInterfacesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o LaunchTemplateNetworkInterfacesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The primary private IP address of the ENI.
func (o LaunchTemplateNetworkInterfacesPtrOutput) PrimaryIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryIp
	}).(pulumi.StringPtrOutput)
}

// The security group ID must be one in the same VPC.
func (o LaunchTemplateNetworkInterfacesPtrOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupId
	}).(pulumi.StringPtrOutput)
}

// The VSwitch ID for ENI. The instance must be in the same zone of the same VPC network as the ENI, but they may belong to different VSwitches.
func (o LaunchTemplateNetworkInterfacesPtrOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateNetworkInterfaces) *string {
		if v == nil {
			return nil
		}
		return v.VswitchId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateSystemDisk struct {
	// The category of the disk:
	// - cloud: Basic cloud disk.
	// - cloud_efficiency: Ultra cloud disk.
	// - cloud_ssd: SSD cloud Disks.
	// - ephemeral_ssd: local SSD Disks
	// - cloud_essd: ESSD cloud Disks.
	Category *string `pulumi:"category"`
	// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description *string `pulumi:"description"`
	Iops        *string `pulumi:"iops"`
	// The name of the data disk.
	Name             *string `pulumi:"name"`
	PerformanceLevel *string `pulumi:"performanceLevel"`
	// The size of the data disk.
	// - cloud：[5, 2000]
	// - cloud_efficiency：[20, 32768]
	// - cloud_ssd：[20, 32768]
	// - cloud_essd：[20, 32768]
	// - ephemeral_ssd: [5, 800]
	Size *int `pulumi:"size"`
}

// LaunchTemplateSystemDiskInput is an input type that accepts LaunchTemplateSystemDiskArgs and LaunchTemplateSystemDiskOutput values.
// You can construct a concrete instance of `LaunchTemplateSystemDiskInput` via:
//
//          LaunchTemplateSystemDiskArgs{...}
type LaunchTemplateSystemDiskInput interface {
	pulumi.Input

	ToLaunchTemplateSystemDiskOutput() LaunchTemplateSystemDiskOutput
	ToLaunchTemplateSystemDiskOutputWithContext(context.Context) LaunchTemplateSystemDiskOutput
}

type LaunchTemplateSystemDiskArgs struct {
	// The category of the disk:
	// - cloud: Basic cloud disk.
	// - cloud_efficiency: Ultra cloud disk.
	// - cloud_ssd: SSD cloud Disks.
	// - ephemeral_ssd: local SSD Disks
	// - cloud_essd: ESSD cloud Disks.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// The description of the data disk.
	Description pulumi.StringPtrInput `pulumi:"description"`
	Iops        pulumi.StringPtrInput `pulumi:"iops"`
	// The name of the data disk.
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PerformanceLevel pulumi.StringPtrInput `pulumi:"performanceLevel"`
	// The size of the data disk.
	// - cloud：[5, 2000]
	// - cloud_efficiency：[20, 32768]
	// - cloud_ssd：[20, 32768]
	// - cloud_essd：[20, 32768]
	// - ephemeral_ssd: [5, 800]
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (LaunchTemplateSystemDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateSystemDisk)(nil)).Elem()
}

func (i LaunchTemplateSystemDiskArgs) ToLaunchTemplateSystemDiskOutput() LaunchTemplateSystemDiskOutput {
	return i.ToLaunchTemplateSystemDiskOutputWithContext(context.Background())
}

func (i LaunchTemplateSystemDiskArgs) ToLaunchTemplateSystemDiskOutputWithContext(ctx context.Context) LaunchTemplateSystemDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateSystemDiskOutput)
}

func (i LaunchTemplateSystemDiskArgs) ToLaunchTemplateSystemDiskPtrOutput() LaunchTemplateSystemDiskPtrOutput {
	return i.ToLaunchTemplateSystemDiskPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateSystemDiskArgs) ToLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) LaunchTemplateSystemDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateSystemDiskOutput).ToLaunchTemplateSystemDiskPtrOutputWithContext(ctx)
}

// LaunchTemplateSystemDiskPtrInput is an input type that accepts LaunchTemplateSystemDiskArgs, LaunchTemplateSystemDiskPtr and LaunchTemplateSystemDiskPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateSystemDiskPtrInput` via:
//
//          LaunchTemplateSystemDiskArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateSystemDiskPtrInput interface {
	pulumi.Input

	ToLaunchTemplateSystemDiskPtrOutput() LaunchTemplateSystemDiskPtrOutput
	ToLaunchTemplateSystemDiskPtrOutputWithContext(context.Context) LaunchTemplateSystemDiskPtrOutput
}

type launchTemplateSystemDiskPtrType LaunchTemplateSystemDiskArgs

func LaunchTemplateSystemDiskPtr(v *LaunchTemplateSystemDiskArgs) LaunchTemplateSystemDiskPtrInput {
	return (*launchTemplateSystemDiskPtrType)(v)
}

func (*launchTemplateSystemDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateSystemDisk)(nil)).Elem()
}

func (i *launchTemplateSystemDiskPtrType) ToLaunchTemplateSystemDiskPtrOutput() LaunchTemplateSystemDiskPtrOutput {
	return i.ToLaunchTemplateSystemDiskPtrOutputWithContext(context.Background())
}

func (i *launchTemplateSystemDiskPtrType) ToLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) LaunchTemplateSystemDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateSystemDiskPtrOutput)
}

type LaunchTemplateSystemDiskOutput struct{ *pulumi.OutputState }

func (LaunchTemplateSystemDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateSystemDisk)(nil)).Elem()
}

func (o LaunchTemplateSystemDiskOutput) ToLaunchTemplateSystemDiskOutput() LaunchTemplateSystemDiskOutput {
	return o
}

func (o LaunchTemplateSystemDiskOutput) ToLaunchTemplateSystemDiskOutputWithContext(ctx context.Context) LaunchTemplateSystemDiskOutput {
	return o
}

func (o LaunchTemplateSystemDiskOutput) ToLaunchTemplateSystemDiskPtrOutput() LaunchTemplateSystemDiskPtrOutput {
	return o.ToLaunchTemplateSystemDiskPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateSystemDiskOutput) ToLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) LaunchTemplateSystemDiskPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *LaunchTemplateSystemDisk {
		return &v
	}).(LaunchTemplateSystemDiskPtrOutput)
}

// The category of the disk:
// - cloud: Basic cloud disk.
// - cloud_efficiency: Ultra cloud disk.
// - cloud_ssd: SSD cloud Disks.
// - ephemeral_ssd: local SSD Disks
// - cloud_essd: ESSD cloud Disks.
func (o LaunchTemplateSystemDiskOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
func (o LaunchTemplateSystemDiskOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o LaunchTemplateSystemDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LaunchTemplateSystemDiskOutput) Iops() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *string { return v.Iops }).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o LaunchTemplateSystemDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LaunchTemplateSystemDiskOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *string { return v.PerformanceLevel }).(pulumi.StringPtrOutput)
}

// The size of the data disk.
// - cloud：[5, 2000]
// - cloud_efficiency：[20, 32768]
// - cloud_ssd：[20, 32768]
// - cloud_essd：[20, 32768]
// - ephemeral_ssd: [5, 800]
func (o LaunchTemplateSystemDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateSystemDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type LaunchTemplateSystemDiskPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateSystemDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateSystemDisk)(nil)).Elem()
}

func (o LaunchTemplateSystemDiskPtrOutput) ToLaunchTemplateSystemDiskPtrOutput() LaunchTemplateSystemDiskPtrOutput {
	return o
}

func (o LaunchTemplateSystemDiskPtrOutput) ToLaunchTemplateSystemDiskPtrOutputWithContext(ctx context.Context) LaunchTemplateSystemDiskPtrOutput {
	return o
}

func (o LaunchTemplateSystemDiskPtrOutput) Elem() LaunchTemplateSystemDiskOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) LaunchTemplateSystemDisk { return *v }).(LaunchTemplateSystemDiskOutput)
}

// The category of the disk:
// - cloud: Basic cloud disk.
// - cloud_efficiency: Ultra cloud disk.
// - cloud_ssd: SSD cloud Disks.
// - ephemeral_ssd: local SSD Disks
// - cloud_essd: ESSD cloud Disks.
func (o LaunchTemplateSystemDiskPtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Category
	}).(pulumi.StringPtrOutput)
}

// Delete this data disk when the instance is destroyed. It only works on cloud, cloud_efficiency, cloudSsd and cloudEssd disk. If the category of this data disk was ephemeral_ssd, please don't set this param.
func (o LaunchTemplateSystemDiskPtrOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteWithInstance
	}).(pulumi.BoolPtrOutput)
}

// The description of the data disk.
func (o LaunchTemplateSystemDiskPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o LaunchTemplateSystemDiskPtrOutput) Iops() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.StringPtrOutput)
}

// The name of the data disk.
func (o LaunchTemplateSystemDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o LaunchTemplateSystemDiskPtrOutput) PerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *string {
		if v == nil {
			return nil
		}
		return v.PerformanceLevel
	}).(pulumi.StringPtrOutput)
}

// The size of the data disk.
// - cloud：[5, 2000]
// - cloud_efficiency：[20, 32768]
// - cloud_ssd：[20, 32768]
// - cloud_essd：[20, 32768]
// - ephemeral_ssd: [5, 800]
func (o LaunchTemplateSystemDiskPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateSystemDisk) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type GetAutoSnapshotPoliciesPolicy struct {
	// The ID of the Auto Snapshot Policy.
	AutoSnapshotPolicyId string `pulumi:"autoSnapshotPolicyId"`
	// The retention period of the snapshot copied across regions.
	CopiedSnapshotsRetentionDays int `pulumi:"copiedSnapshotsRetentionDays"`
	// The number of disks to which the automatic snapshot policy is applied.
	DiskNums int `pulumi:"diskNums"`
	// Specifies whether to enable the system to automatically copy snapshots across regions.
	EnableCrossRegionCopy bool `pulumi:"enableCrossRegionCopy"`
	// The ID of the Auto Snapshot Policy.
	Id string `pulumi:"id"`
	// The snapshot policy name..
	Name string `pulumi:"name"`
	// The automatic snapshot repetition dates.
	RepeatWeekdays []string `pulumi:"repeatWeekdays"`
	// The snapshot retention time, and the unit of measurement is day.
	RetentionDays int `pulumi:"retentionDays"`
	// The status of Auto Snapshot Policy.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The destination region to which the snapshot is copied.
	TargetCopyRegions []string `pulumi:"targetCopyRegions"`
	// The automatic snapshot creation schedule, and the unit of measurement is hour.
	TimePoints []string `pulumi:"timePoints"`
	// The number of extended volumes on which this policy is enabled.
	VolumeNums int `pulumi:"volumeNums"`
}

// GetAutoSnapshotPoliciesPolicyInput is an input type that accepts GetAutoSnapshotPoliciesPolicyArgs and GetAutoSnapshotPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetAutoSnapshotPoliciesPolicyInput` via:
//
//          GetAutoSnapshotPoliciesPolicyArgs{...}
type GetAutoSnapshotPoliciesPolicyInput interface {
	pulumi.Input

	ToGetAutoSnapshotPoliciesPolicyOutput() GetAutoSnapshotPoliciesPolicyOutput
	ToGetAutoSnapshotPoliciesPolicyOutputWithContext(context.Context) GetAutoSnapshotPoliciesPolicyOutput
}

type GetAutoSnapshotPoliciesPolicyArgs struct {
	// The ID of the Auto Snapshot Policy.
	AutoSnapshotPolicyId pulumi.StringInput `pulumi:"autoSnapshotPolicyId"`
	// The retention period of the snapshot copied across regions.
	CopiedSnapshotsRetentionDays pulumi.IntInput `pulumi:"copiedSnapshotsRetentionDays"`
	// The number of disks to which the automatic snapshot policy is applied.
	DiskNums pulumi.IntInput `pulumi:"diskNums"`
	// Specifies whether to enable the system to automatically copy snapshots across regions.
	EnableCrossRegionCopy pulumi.BoolInput `pulumi:"enableCrossRegionCopy"`
	// The ID of the Auto Snapshot Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The snapshot policy name..
	Name pulumi.StringInput `pulumi:"name"`
	// The automatic snapshot repetition dates.
	RepeatWeekdays pulumi.StringArrayInput `pulumi:"repeatWeekdays"`
	// The snapshot retention time, and the unit of measurement is day.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
	// The status of Auto Snapshot Policy.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The destination region to which the snapshot is copied.
	TargetCopyRegions pulumi.StringArrayInput `pulumi:"targetCopyRegions"`
	// The automatic snapshot creation schedule, and the unit of measurement is hour.
	TimePoints pulumi.StringArrayInput `pulumi:"timePoints"`
	// The number of extended volumes on which this policy is enabled.
	VolumeNums pulumi.IntInput `pulumi:"volumeNums"`
}

func (GetAutoSnapshotPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (i GetAutoSnapshotPoliciesPolicyArgs) ToGetAutoSnapshotPoliciesPolicyOutput() GetAutoSnapshotPoliciesPolicyOutput {
	return i.ToGetAutoSnapshotPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetAutoSnapshotPoliciesPolicyArgs) ToGetAutoSnapshotPoliciesPolicyOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoSnapshotPoliciesPolicyOutput)
}

// GetAutoSnapshotPoliciesPolicyArrayInput is an input type that accepts GetAutoSnapshotPoliciesPolicyArray and GetAutoSnapshotPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetAutoSnapshotPoliciesPolicyArrayInput` via:
//
//          GetAutoSnapshotPoliciesPolicyArray{ GetAutoSnapshotPoliciesPolicyArgs{...} }
type GetAutoSnapshotPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetAutoSnapshotPoliciesPolicyArrayOutput() GetAutoSnapshotPoliciesPolicyArrayOutput
	ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(context.Context) GetAutoSnapshotPoliciesPolicyArrayOutput
}

type GetAutoSnapshotPoliciesPolicyArray []GetAutoSnapshotPoliciesPolicyInput

func (GetAutoSnapshotPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (i GetAutoSnapshotPoliciesPolicyArray) ToGetAutoSnapshotPoliciesPolicyArrayOutput() GetAutoSnapshotPoliciesPolicyArrayOutput {
	return i.ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetAutoSnapshotPoliciesPolicyArray) ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoSnapshotPoliciesPolicyArrayOutput)
}

type GetAutoSnapshotPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetAutoSnapshotPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (o GetAutoSnapshotPoliciesPolicyOutput) ToGetAutoSnapshotPoliciesPolicyOutput() GetAutoSnapshotPoliciesPolicyOutput {
	return o
}

func (o GetAutoSnapshotPoliciesPolicyOutput) ToGetAutoSnapshotPoliciesPolicyOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyOutput {
	return o
}

// The ID of the Auto Snapshot Policy.
func (o GetAutoSnapshotPoliciesPolicyOutput) AutoSnapshotPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.AutoSnapshotPolicyId }).(pulumi.StringOutput)
}

// The retention period of the snapshot copied across regions.
func (o GetAutoSnapshotPoliciesPolicyOutput) CopiedSnapshotsRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) int { return v.CopiedSnapshotsRetentionDays }).(pulumi.IntOutput)
}

// The number of disks to which the automatic snapshot policy is applied.
func (o GetAutoSnapshotPoliciesPolicyOutput) DiskNums() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) int { return v.DiskNums }).(pulumi.IntOutput)
}

// Specifies whether to enable the system to automatically copy snapshots across regions.
func (o GetAutoSnapshotPoliciesPolicyOutput) EnableCrossRegionCopy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) bool { return v.EnableCrossRegionCopy }).(pulumi.BoolOutput)
}

// The ID of the Auto Snapshot Policy.
func (o GetAutoSnapshotPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The snapshot policy name..
func (o GetAutoSnapshotPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The automatic snapshot repetition dates.
func (o GetAutoSnapshotPoliciesPolicyOutput) RepeatWeekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) []string { return v.RepeatWeekdays }).(pulumi.StringArrayOutput)
}

// The snapshot retention time, and the unit of measurement is day.
func (o GetAutoSnapshotPoliciesPolicyOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) int { return v.RetentionDays }).(pulumi.IntOutput)
}

// The status of Auto Snapshot Policy.
func (o GetAutoSnapshotPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetAutoSnapshotPoliciesPolicyOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The destination region to which the snapshot is copied.
func (o GetAutoSnapshotPoliciesPolicyOutput) TargetCopyRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) []string { return v.TargetCopyRegions }).(pulumi.StringArrayOutput)
}

// The automatic snapshot creation schedule, and the unit of measurement is hour.
func (o GetAutoSnapshotPoliciesPolicyOutput) TimePoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) []string { return v.TimePoints }).(pulumi.StringArrayOutput)
}

// The number of extended volumes on which this policy is enabled.
func (o GetAutoSnapshotPoliciesPolicyOutput) VolumeNums() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) int { return v.VolumeNums }).(pulumi.IntOutput)
}

type GetAutoSnapshotPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAutoSnapshotPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (o GetAutoSnapshotPoliciesPolicyArrayOutput) ToGetAutoSnapshotPoliciesPolicyArrayOutput() GetAutoSnapshotPoliciesPolicyArrayOutput {
	return o
}

func (o GetAutoSnapshotPoliciesPolicyArrayOutput) ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyArrayOutput {
	return o
}

func (o GetAutoSnapshotPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetAutoSnapshotPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoSnapshotPoliciesPolicy {
		return vs[0].([]GetAutoSnapshotPoliciesPolicy)[vs[1].(int)]
	}).(GetAutoSnapshotPoliciesPolicyOutput)
}

type GetCommandsCommand struct {
	// The Base64-encoded content of the command.
	CommandContent string `pulumi:"commandContent"`
	// The ID of the Command.
	CommandId string `pulumi:"commandId"`
	// The description of command.
	Description string `pulumi:"description"`
	// Specifies whether to use custom parameters in the command to be created.
	EnableParameter bool `pulumi:"enableParameter"`
	// The ID of the Command.
	Id string `pulumi:"id"`
	// The name of the command
	Name string `pulumi:"name"`
	// A list of custom parameter names which are parsed from the command content specified when the command was being created.
	ParameterNames []string `pulumi:"parameterNames"`
	// The timeout period that is specified for the command to be run on ECS instances.
	Timeout int `pulumi:"timeout"`
	// The command type.
	Type string `pulumi:"type"`
	// The execution path of the command in the ECS instance.
	WorkingDir string `pulumi:"workingDir"`
}

// GetCommandsCommandInput is an input type that accepts GetCommandsCommandArgs and GetCommandsCommandOutput values.
// You can construct a concrete instance of `GetCommandsCommandInput` via:
//
//          GetCommandsCommandArgs{...}
type GetCommandsCommandInput interface {
	pulumi.Input

	ToGetCommandsCommandOutput() GetCommandsCommandOutput
	ToGetCommandsCommandOutputWithContext(context.Context) GetCommandsCommandOutput
}

type GetCommandsCommandArgs struct {
	// The Base64-encoded content of the command.
	CommandContent pulumi.StringInput `pulumi:"commandContent"`
	// The ID of the Command.
	CommandId pulumi.StringInput `pulumi:"commandId"`
	// The description of command.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether to use custom parameters in the command to be created.
	EnableParameter pulumi.BoolInput `pulumi:"enableParameter"`
	// The ID of the Command.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the command
	Name pulumi.StringInput `pulumi:"name"`
	// A list of custom parameter names which are parsed from the command content specified when the command was being created.
	ParameterNames pulumi.StringArrayInput `pulumi:"parameterNames"`
	// The timeout period that is specified for the command to be run on ECS instances.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The command type.
	Type pulumi.StringInput `pulumi:"type"`
	// The execution path of the command in the ECS instance.
	WorkingDir pulumi.StringInput `pulumi:"workingDir"`
}

func (GetCommandsCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandsCommand)(nil)).Elem()
}

func (i GetCommandsCommandArgs) ToGetCommandsCommandOutput() GetCommandsCommandOutput {
	return i.ToGetCommandsCommandOutputWithContext(context.Background())
}

func (i GetCommandsCommandArgs) ToGetCommandsCommandOutputWithContext(ctx context.Context) GetCommandsCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandsCommandOutput)
}

// GetCommandsCommandArrayInput is an input type that accepts GetCommandsCommandArray and GetCommandsCommandArrayOutput values.
// You can construct a concrete instance of `GetCommandsCommandArrayInput` via:
//
//          GetCommandsCommandArray{ GetCommandsCommandArgs{...} }
type GetCommandsCommandArrayInput interface {
	pulumi.Input

	ToGetCommandsCommandArrayOutput() GetCommandsCommandArrayOutput
	ToGetCommandsCommandArrayOutputWithContext(context.Context) GetCommandsCommandArrayOutput
}

type GetCommandsCommandArray []GetCommandsCommandInput

func (GetCommandsCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandsCommand)(nil)).Elem()
}

func (i GetCommandsCommandArray) ToGetCommandsCommandArrayOutput() GetCommandsCommandArrayOutput {
	return i.ToGetCommandsCommandArrayOutputWithContext(context.Background())
}

func (i GetCommandsCommandArray) ToGetCommandsCommandArrayOutputWithContext(ctx context.Context) GetCommandsCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandsCommandArrayOutput)
}

type GetCommandsCommandOutput struct{ *pulumi.OutputState }

func (GetCommandsCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandsCommand)(nil)).Elem()
}

func (o GetCommandsCommandOutput) ToGetCommandsCommandOutput() GetCommandsCommandOutput {
	return o
}

func (o GetCommandsCommandOutput) ToGetCommandsCommandOutputWithContext(ctx context.Context) GetCommandsCommandOutput {
	return o
}

// The Base64-encoded content of the command.
func (o GetCommandsCommandOutput) CommandContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.CommandContent }).(pulumi.StringOutput)
}

// The ID of the Command.
func (o GetCommandsCommandOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.CommandId }).(pulumi.StringOutput)
}

// The description of command.
func (o GetCommandsCommandOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to use custom parameters in the command to be created.
func (o GetCommandsCommandOutput) EnableParameter() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCommandsCommand) bool { return v.EnableParameter }).(pulumi.BoolOutput)
}

// The ID of the Command.
func (o GetCommandsCommandOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the command
func (o GetCommandsCommandOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.Name }).(pulumi.StringOutput)
}

// A list of custom parameter names which are parsed from the command content specified when the command was being created.
func (o GetCommandsCommandOutput) ParameterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCommandsCommand) []string { return v.ParameterNames }).(pulumi.StringArrayOutput)
}

// The timeout period that is specified for the command to be run on ECS instances.
func (o GetCommandsCommandOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommandsCommand) int { return v.Timeout }).(pulumi.IntOutput)
}

// The command type.
func (o GetCommandsCommandOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.Type }).(pulumi.StringOutput)
}

// The execution path of the command in the ECS instance.
func (o GetCommandsCommandOutput) WorkingDir() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.WorkingDir }).(pulumi.StringOutput)
}

type GetCommandsCommandArrayOutput struct{ *pulumi.OutputState }

func (GetCommandsCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandsCommand)(nil)).Elem()
}

func (o GetCommandsCommandArrayOutput) ToGetCommandsCommandArrayOutput() GetCommandsCommandArrayOutput {
	return o
}

func (o GetCommandsCommandArrayOutput) ToGetCommandsCommandArrayOutputWithContext(ctx context.Context) GetCommandsCommandArrayOutput {
	return o
}

func (o GetCommandsCommandArrayOutput) Index(i pulumi.IntInput) GetCommandsCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommandsCommand {
		return vs[0].([]GetCommandsCommand)[vs[1].(int)]
	}).(GetCommandsCommandOutput)
}

type GetDedicatedHostsHost struct {
	// The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online.
	ActionOnMaintenance string `pulumi:"actionOnMaintenance"`
	// Specifies whether to add the dedicated host to the resource pool for automatic deployment.
	AutoPlacement string `pulumi:"autoPlacement"`
	// The automatic release time of the dedicated host.
	AutoReleaseTime string `pulumi:"autoReleaseTime"`
	// A mapping of tags to assign to the resource.
	Cores int `pulumi:"cores"`
	// The ID of ECS Dedicated Host.
	DedicatedHostId string `pulumi:"dedicatedHostId"`
	// The name of ECS Dedicated Host.
	DedicatedHostName string `pulumi:"dedicatedHostName"`
	// The type of the dedicated host.
	DedicatedHostType string `pulumi:"dedicatedHostType"`
	// The description of the dedicated host.
	Description string `pulumi:"description"`
	// The expiration time of the subscription dedicated host.
	ExpiredTime string `pulumi:"expiredTime"`
	// The GPU model.
	GpuSpec string `pulumi:"gpuSpec"`
	// ID of the ECS Dedicated Host.
	Id string `pulumi:"id"`
	// The machine code of the dedicated host.
	MachineId string `pulumi:"machineId"`
	// The billing method of the dedicated host.
	PaymentType string `pulumi:"paymentType"`
	// The number of physical GPUs.
	PhysicalGpus int `pulumi:"physicalGpus"`
	// The ID of the resource group to which the ECS Dedicated Host belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The unit of the subscription billing method.
	SaleCycle string `pulumi:"saleCycle"`
	// The number of physical CPUs.
	Sockets int `pulumi:"sockets"`
	// The status of the ECS Dedicated Host. validate value: `Available`, `Creating`, `PermanentFailure`, `Released`, `UnderAssessment`.
	Status string `pulumi:"status"`
	// The list of ECS instanc
	SupportedInstanceTypesLists []string `pulumi:"supportedInstanceTypesLists"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The zone ID of the ECS Dedicated Host.
	ZoneId string `pulumi:"zoneId"`
}

// GetDedicatedHostsHostInput is an input type that accepts GetDedicatedHostsHostArgs and GetDedicatedHostsHostOutput values.
// You can construct a concrete instance of `GetDedicatedHostsHostInput` via:
//
//          GetDedicatedHostsHostArgs{...}
type GetDedicatedHostsHostInput interface {
	pulumi.Input

	ToGetDedicatedHostsHostOutput() GetDedicatedHostsHostOutput
	ToGetDedicatedHostsHostOutputWithContext(context.Context) GetDedicatedHostsHostOutput
}

type GetDedicatedHostsHostArgs struct {
	// The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online.
	ActionOnMaintenance pulumi.StringInput `pulumi:"actionOnMaintenance"`
	// Specifies whether to add the dedicated host to the resource pool for automatic deployment.
	AutoPlacement pulumi.StringInput `pulumi:"autoPlacement"`
	// The automatic release time of the dedicated host.
	AutoReleaseTime pulumi.StringInput `pulumi:"autoReleaseTime"`
	// A mapping of tags to assign to the resource.
	Cores pulumi.IntInput `pulumi:"cores"`
	// The ID of ECS Dedicated Host.
	DedicatedHostId pulumi.StringInput `pulumi:"dedicatedHostId"`
	// The name of ECS Dedicated Host.
	DedicatedHostName pulumi.StringInput `pulumi:"dedicatedHostName"`
	// The type of the dedicated host.
	DedicatedHostType pulumi.StringInput `pulumi:"dedicatedHostType"`
	// The description of the dedicated host.
	Description pulumi.StringInput `pulumi:"description"`
	// The expiration time of the subscription dedicated host.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The GPU model.
	GpuSpec pulumi.StringInput `pulumi:"gpuSpec"`
	// ID of the ECS Dedicated Host.
	Id pulumi.StringInput `pulumi:"id"`
	// The machine code of the dedicated host.
	MachineId pulumi.StringInput `pulumi:"machineId"`
	// The billing method of the dedicated host.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The number of physical GPUs.
	PhysicalGpus pulumi.IntInput `pulumi:"physicalGpus"`
	// The ID of the resource group to which the ECS Dedicated Host belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The unit of the subscription billing method.
	SaleCycle pulumi.StringInput `pulumi:"saleCycle"`
	// The number of physical CPUs.
	Sockets pulumi.IntInput `pulumi:"sockets"`
	// The status of the ECS Dedicated Host. validate value: `Available`, `Creating`, `PermanentFailure`, `Released`, `UnderAssessment`.
	Status pulumi.StringInput `pulumi:"status"`
	// The list of ECS instanc
	SupportedInstanceTypesLists pulumi.StringArrayInput `pulumi:"supportedInstanceTypesLists"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The zone ID of the ECS Dedicated Host.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetDedicatedHostsHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostsHost)(nil)).Elem()
}

func (i GetDedicatedHostsHostArgs) ToGetDedicatedHostsHostOutput() GetDedicatedHostsHostOutput {
	return i.ToGetDedicatedHostsHostOutputWithContext(context.Background())
}

func (i GetDedicatedHostsHostArgs) ToGetDedicatedHostsHostOutputWithContext(ctx context.Context) GetDedicatedHostsHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostsHostOutput)
}

// GetDedicatedHostsHostArrayInput is an input type that accepts GetDedicatedHostsHostArray and GetDedicatedHostsHostArrayOutput values.
// You can construct a concrete instance of `GetDedicatedHostsHostArrayInput` via:
//
//          GetDedicatedHostsHostArray{ GetDedicatedHostsHostArgs{...} }
type GetDedicatedHostsHostArrayInput interface {
	pulumi.Input

	ToGetDedicatedHostsHostArrayOutput() GetDedicatedHostsHostArrayOutput
	ToGetDedicatedHostsHostArrayOutputWithContext(context.Context) GetDedicatedHostsHostArrayOutput
}

type GetDedicatedHostsHostArray []GetDedicatedHostsHostInput

func (GetDedicatedHostsHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostsHost)(nil)).Elem()
}

func (i GetDedicatedHostsHostArray) ToGetDedicatedHostsHostArrayOutput() GetDedicatedHostsHostArrayOutput {
	return i.ToGetDedicatedHostsHostArrayOutputWithContext(context.Background())
}

func (i GetDedicatedHostsHostArray) ToGetDedicatedHostsHostArrayOutputWithContext(ctx context.Context) GetDedicatedHostsHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostsHostArrayOutput)
}

type GetDedicatedHostsHostOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostsHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostsHost)(nil)).Elem()
}

func (o GetDedicatedHostsHostOutput) ToGetDedicatedHostsHostOutput() GetDedicatedHostsHostOutput {
	return o
}

func (o GetDedicatedHostsHostOutput) ToGetDedicatedHostsHostOutputWithContext(ctx context.Context) GetDedicatedHostsHostOutput {
	return o
}

// The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online.
func (o GetDedicatedHostsHostOutput) ActionOnMaintenance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.ActionOnMaintenance }).(pulumi.StringOutput)
}

// Specifies whether to add the dedicated host to the resource pool for automatic deployment.
func (o GetDedicatedHostsHostOutput) AutoPlacement() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.AutoPlacement }).(pulumi.StringOutput)
}

// The automatic release time of the dedicated host.
func (o GetDedicatedHostsHostOutput) AutoReleaseTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.AutoReleaseTime }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetDedicatedHostsHostOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) int { return v.Cores }).(pulumi.IntOutput)
}

// The ID of ECS Dedicated Host.
func (o GetDedicatedHostsHostOutput) DedicatedHostId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.DedicatedHostId }).(pulumi.StringOutput)
}

// The name of ECS Dedicated Host.
func (o GetDedicatedHostsHostOutput) DedicatedHostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.DedicatedHostName }).(pulumi.StringOutput)
}

// The type of the dedicated host.
func (o GetDedicatedHostsHostOutput) DedicatedHostType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.DedicatedHostType }).(pulumi.StringOutput)
}

// The description of the dedicated host.
func (o GetDedicatedHostsHostOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.Description }).(pulumi.StringOutput)
}

// The expiration time of the subscription dedicated host.
func (o GetDedicatedHostsHostOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The GPU model.
func (o GetDedicatedHostsHostOutput) GpuSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.GpuSpec }).(pulumi.StringOutput)
}

// ID of the ECS Dedicated Host.
func (o GetDedicatedHostsHostOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.Id }).(pulumi.StringOutput)
}

// The machine code of the dedicated host.
func (o GetDedicatedHostsHostOutput) MachineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.MachineId }).(pulumi.StringOutput)
}

// The billing method of the dedicated host.
func (o GetDedicatedHostsHostOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The number of physical GPUs.
func (o GetDedicatedHostsHostOutput) PhysicalGpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) int { return v.PhysicalGpus }).(pulumi.IntOutput)
}

// The ID of the resource group to which the ECS Dedicated Host belongs.
func (o GetDedicatedHostsHostOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The unit of the subscription billing method.
func (o GetDedicatedHostsHostOutput) SaleCycle() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.SaleCycle }).(pulumi.StringOutput)
}

// The number of physical CPUs.
func (o GetDedicatedHostsHostOutput) Sockets() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) int { return v.Sockets }).(pulumi.IntOutput)
}

// The status of the ECS Dedicated Host. validate value: `Available`, `Creating`, `PermanentFailure`, `Released`, `UnderAssessment`.
func (o GetDedicatedHostsHostOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.Status }).(pulumi.StringOutput)
}

// The list of ECS instanc
func (o GetDedicatedHostsHostOutput) SupportedInstanceTypesLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) []string { return v.SupportedInstanceTypesLists }).(pulumi.StringArrayOutput)
}

// A mapping of tags to assign to the resource.
func (o GetDedicatedHostsHostOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The zone ID of the ECS Dedicated Host.
func (o GetDedicatedHostsHostOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostsHost) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetDedicatedHostsHostArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostsHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostsHost)(nil)).Elem()
}

func (o GetDedicatedHostsHostArrayOutput) ToGetDedicatedHostsHostArrayOutput() GetDedicatedHostsHostArrayOutput {
	return o
}

func (o GetDedicatedHostsHostArrayOutput) ToGetDedicatedHostsHostArrayOutputWithContext(ctx context.Context) GetDedicatedHostsHostArrayOutput {
	return o
}

func (o GetDedicatedHostsHostArrayOutput) Index(i pulumi.IntInput) GetDedicatedHostsHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedHostsHost {
		return vs[0].([]GetDedicatedHostsHost)[vs[1].(int)]
	}).(GetDedicatedHostsHostOutput)
}

type GetDisksDisk struct {
	// Disk attachment time.
	AttachedTime string `pulumi:"attachedTime"`
	// Availability zone of the disk.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Disk category. Possible values: `cloud` (basic cloud disk), `cloudEfficiency` (ultra cloud disk), `ephemeralSsd` (local SSD cloud disk), `cloudSsd` (SSD cloud disk), and `cloudEssd` (ESSD cloud disk).
	Category string `pulumi:"category"`
	// Disk creation time.
	CreationTime string `pulumi:"creationTime"`
	// Disk description.
	Description string `pulumi:"description"`
	// Disk detachment time.
	DetachedTime string `pulumi:"detachedTime"`
	// Indicate whether the disk is encrypted or not. Possible values: `on` and `off`.
	Encrypted string `pulumi:"encrypted"`
	// Disk expiration time.
	ExpirationTime string `pulumi:"expirationTime"`
	// ID of the disk.
	Id string `pulumi:"id"`
	// ID of the image from which the disk is created. It is null unless the disk is created using an image.
	ImageId string `pulumi:"imageId"`
	// Filter the results by the specified ECS instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Disk name.
	Name string `pulumi:"name"`
	// Region ID the disk belongs to.
	RegionId string `pulumi:"regionId"`
	// The Id of resource group which the disk belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Disk size in GiB.
	Size int `pulumi:"size"`
	// Snapshot used to create the disk. It is null if no snapshot is used to create the disk.
	SnapshotId string `pulumi:"snapshotId"`
	// Current status. Possible values: `In_use`, `Available`, `Attaching`, `Detaching`, `Creating` and `ReIniting`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the disks. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
	// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ecs.GetDisks(ctx, &ecs.GetDisksArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// Disk type. Possible values: `system` and `data`.
	Type string `pulumi:"type"`
}

// GetDisksDiskInput is an input type that accepts GetDisksDiskArgs and GetDisksDiskOutput values.
// You can construct a concrete instance of `GetDisksDiskInput` via:
//
//          GetDisksDiskArgs{...}
type GetDisksDiskInput interface {
	pulumi.Input

	ToGetDisksDiskOutput() GetDisksDiskOutput
	ToGetDisksDiskOutputWithContext(context.Context) GetDisksDiskOutput
}

type GetDisksDiskArgs struct {
	// Disk attachment time.
	AttachedTime pulumi.StringInput `pulumi:"attachedTime"`
	// Availability zone of the disk.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Disk category. Possible values: `cloud` (basic cloud disk), `cloudEfficiency` (ultra cloud disk), `ephemeralSsd` (local SSD cloud disk), `cloudSsd` (SSD cloud disk), and `cloudEssd` (ESSD cloud disk).
	Category pulumi.StringInput `pulumi:"category"`
	// Disk creation time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Disk description.
	Description pulumi.StringInput `pulumi:"description"`
	// Disk detachment time.
	DetachedTime pulumi.StringInput `pulumi:"detachedTime"`
	// Indicate whether the disk is encrypted or not. Possible values: `on` and `off`.
	Encrypted pulumi.StringInput `pulumi:"encrypted"`
	// Disk expiration time.
	ExpirationTime pulumi.StringInput `pulumi:"expirationTime"`
	// ID of the disk.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the image from which the disk is created. It is null unless the disk is created using an image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Filter the results by the specified ECS instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// Region ID the disk belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The Id of resource group which the disk belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Disk size in GiB.
	Size pulumi.IntInput `pulumi:"size"`
	// Snapshot used to create the disk. It is null if no snapshot is used to create the disk.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Current status. Possible values: `In_use`, `Available`, `Attaching`, `Detaching`, `Creating` and `ReIniting`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the disks. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
	// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ecs.GetDisks(ctx, &ecs.GetDisksArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// Disk type. Possible values: `system` and `data`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDisksDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksDisk)(nil)).Elem()
}

func (i GetDisksDiskArgs) ToGetDisksDiskOutput() GetDisksDiskOutput {
	return i.ToGetDisksDiskOutputWithContext(context.Background())
}

func (i GetDisksDiskArgs) ToGetDisksDiskOutputWithContext(ctx context.Context) GetDisksDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksDiskOutput)
}

// GetDisksDiskArrayInput is an input type that accepts GetDisksDiskArray and GetDisksDiskArrayOutput values.
// You can construct a concrete instance of `GetDisksDiskArrayInput` via:
//
//          GetDisksDiskArray{ GetDisksDiskArgs{...} }
type GetDisksDiskArrayInput interface {
	pulumi.Input

	ToGetDisksDiskArrayOutput() GetDisksDiskArrayOutput
	ToGetDisksDiskArrayOutputWithContext(context.Context) GetDisksDiskArrayOutput
}

type GetDisksDiskArray []GetDisksDiskInput

func (GetDisksDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDisksDisk)(nil)).Elem()
}

func (i GetDisksDiskArray) ToGetDisksDiskArrayOutput() GetDisksDiskArrayOutput {
	return i.ToGetDisksDiskArrayOutputWithContext(context.Background())
}

func (i GetDisksDiskArray) ToGetDisksDiskArrayOutputWithContext(ctx context.Context) GetDisksDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDisksDiskArrayOutput)
}

type GetDisksDiskOutput struct{ *pulumi.OutputState }

func (GetDisksDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksDisk)(nil)).Elem()
}

func (o GetDisksDiskOutput) ToGetDisksDiskOutput() GetDisksDiskOutput {
	return o
}

func (o GetDisksDiskOutput) ToGetDisksDiskOutputWithContext(ctx context.Context) GetDisksDiskOutput {
	return o
}

// Disk attachment time.
func (o GetDisksDiskOutput) AttachedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.AttachedTime }).(pulumi.StringOutput)
}

// Availability zone of the disk.
func (o GetDisksDiskOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Disk category. Possible values: `cloud` (basic cloud disk), `cloudEfficiency` (ultra cloud disk), `ephemeralSsd` (local SSD cloud disk), `cloudSsd` (SSD cloud disk), and `cloudEssd` (ESSD cloud disk).
func (o GetDisksDiskOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Category }).(pulumi.StringOutput)
}

// Disk creation time.
func (o GetDisksDiskOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Disk description.
func (o GetDisksDiskOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Description }).(pulumi.StringOutput)
}

// Disk detachment time.
func (o GetDisksDiskOutput) DetachedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.DetachedTime }).(pulumi.StringOutput)
}

// Indicate whether the disk is encrypted or not. Possible values: `on` and `off`.
func (o GetDisksDiskOutput) Encrypted() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Encrypted }).(pulumi.StringOutput)
}

// Disk expiration time.
func (o GetDisksDiskOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// ID of the disk.
func (o GetDisksDiskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the image from which the disk is created. It is null unless the disk is created using an image.
func (o GetDisksDiskOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.ImageId }).(pulumi.StringOutput)
}

// Filter the results by the specified ECS instance ID.
func (o GetDisksDiskOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Disk name.
func (o GetDisksDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Name }).(pulumi.StringOutput)
}

// Region ID the disk belongs to.
func (o GetDisksDiskOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.RegionId }).(pulumi.StringOutput)
}

// The Id of resource group which the disk belongs.
func (o GetDisksDiskOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Disk size in GiB.
func (o GetDisksDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDisksDisk) int { return v.Size }).(pulumi.IntOutput)
}

// Snapshot used to create the disk. It is null if no snapshot is used to create the disk.
func (o GetDisksDiskOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Current status. Possible values: `In_use`, `Available`, `Attaching`, `Detaching`, `Creating` and `ReIniting`.
func (o GetDisksDiskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the disks. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ecs.GetDisks(ctx, &ecs.GetDisksArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 				"tagKey2": "tagValue2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetDisksDiskOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDisksDisk) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Disk type. Possible values: `system` and `data`.
func (o GetDisksDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksDisk) string { return v.Type }).(pulumi.StringOutput)
}

type GetDisksDiskArrayOutput struct{ *pulumi.OutputState }

func (GetDisksDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDisksDisk)(nil)).Elem()
}

func (o GetDisksDiskArrayOutput) ToGetDisksDiskArrayOutput() GetDisksDiskArrayOutput {
	return o
}

func (o GetDisksDiskArrayOutput) ToGetDisksDiskArrayOutputWithContext(ctx context.Context) GetDisksDiskArrayOutput {
	return o
}

func (o GetDisksDiskArrayOutput) Index(i pulumi.IntInput) GetDisksDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDisksDisk {
		return vs[0].([]GetDisksDisk)[vs[1].(int)]
	}).(GetDisksDiskOutput)
}

type GetEcsLaunchTemplatesTemplate struct {
	// Instance auto release time.
	AutoReleaseTime string `pulumi:"autoReleaseTime"`
	// CreatedBy.
	CreatedBy string `pulumi:"createdBy"`
	// The list of data disks created with instance.
	DataDisks []GetEcsLaunchTemplatesTemplateDataDisk `pulumi:"dataDisks"`
	// The Default Version Number.
	DefaultVersionNumber int `pulumi:"defaultVersionNumber"`
	// The Deployment Set Id.
	DeploymentSetId string `pulumi:"deploymentSetId"`
	// System disk description.
	Description string `pulumi:"description"`
	// Whether to enable the instance operating system configuration.
	EnableVmOsConfig bool `pulumi:"enableVmOsConfig"`
	// Instance host name.
	HostName string `pulumi:"hostName"`
	// The ID of the Launch Template.
	Id string `pulumi:"id"`
	// The Image Id.
	ImageId string `pulumi:"imageId"`
	// Mirror source.
	ImageOwnerAlias string `pulumi:"imageOwnerAlias"`
	// Internet bandwidth billing method.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// The Instance Name.
	InstanceName string `pulumi:"instanceName"`
	// Instance type.
	InstanceType string `pulumi:"instanceType"`
	// Internet bandwidth billing method.
	InternetChargeType string `pulumi:"internetChargeType"`
	// The maximum inbound bandwidth from the Internet network, measured in Mbit/s.
	InternetMaxBandwidthIn int `pulumi:"internetMaxBandwidthIn"`
	// Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s.
	InternetMaxBandwidthOut int `pulumi:"internetMaxBandwidthOut"`
	// Whether it is an I/O-optimized instance or not.
	IoOptimized string `pulumi:"ioOptimized"`
	// The name of the key pair.
	KeyPairName string `pulumi:"keyPairName"`
	// The Latest Version Number.
	LatestVersionNumber int `pulumi:"latestVersionNumber"`
	// The ID of the Launch Template.
	LaunchTemplateId string `pulumi:"launchTemplateId"`
	// The Launch Template Name.
	LaunchTemplateName string `pulumi:"launchTemplateName"`
	// The Modified Time.
	ModifiedTime string `pulumi:"modifiedTime"`
	// The list of network interfaces created with instance.
	NetworkInterfaces []GetEcsLaunchTemplatesTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// Network type of the instance.
	NetworkType string `pulumi:"networkType"`
	// Whether to use the password preset by the mirror.
	PasswordInherit bool `pulumi:"passwordInherit"`
	// The subscription period of the instance.
	Period int `pulumi:"period"`
	// The private IP address of the instance.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The RAM role name of the instance.
	RamRoleName string `pulumi:"ramRoleName"`
	// The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Whether or not to activate the security enhancement feature and install network security software free of charge.
	SecurityEnhancementStrategy string `pulumi:"securityEnhancementStrategy"`
	// The security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The security group IDs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The protection period of the preemptible instance.
	SpotDuration string `pulumi:"spotDuration"`
	// Sets the maximum hourly instance price.
	SpotPriceLimit float64 `pulumi:"spotPriceLimit"`
	// The spot strategy for a Pay-As-You-Go instance.
	SpotStrategy string `pulumi:"spotStrategy"`
	// The System Disk.
	SystemDisks []GetEcsLaunchTemplatesTemplateSystemDisk `pulumi:"systemDisks"`
	// The template tags.
	TemplateTags map[string]interface{} `pulumi:"templateTags"`
	// The User Data.
	UserData string `pulumi:"userData"`
	// The Version Description.
	VersionDescription string `pulumi:"versionDescription"`
	// VpcId.
	VpcId string `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The Zone Id.
	ZoneId string `pulumi:"zoneId"`
}

// GetEcsLaunchTemplatesTemplateInput is an input type that accepts GetEcsLaunchTemplatesTemplateArgs and GetEcsLaunchTemplatesTemplateOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateInput` via:
//
//          GetEcsLaunchTemplatesTemplateArgs{...}
type GetEcsLaunchTemplatesTemplateInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateOutput() GetEcsLaunchTemplatesTemplateOutput
	ToGetEcsLaunchTemplatesTemplateOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateOutput
}

type GetEcsLaunchTemplatesTemplateArgs struct {
	// Instance auto release time.
	AutoReleaseTime pulumi.StringInput `pulumi:"autoReleaseTime"`
	// CreatedBy.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The list of data disks created with instance.
	DataDisks GetEcsLaunchTemplatesTemplateDataDiskArrayInput `pulumi:"dataDisks"`
	// The Default Version Number.
	DefaultVersionNumber pulumi.IntInput `pulumi:"defaultVersionNumber"`
	// The Deployment Set Id.
	DeploymentSetId pulumi.StringInput `pulumi:"deploymentSetId"`
	// System disk description.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to enable the instance operating system configuration.
	EnableVmOsConfig pulumi.BoolInput `pulumi:"enableVmOsConfig"`
	// Instance host name.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Launch Template.
	Id pulumi.StringInput `pulumi:"id"`
	// The Image Id.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Mirror source.
	ImageOwnerAlias pulumi.StringInput `pulumi:"imageOwnerAlias"`
	// Internet bandwidth billing method.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// The Instance Name.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Instance type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Internet bandwidth billing method.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// The maximum inbound bandwidth from the Internet network, measured in Mbit/s.
	InternetMaxBandwidthIn pulumi.IntInput `pulumi:"internetMaxBandwidthIn"`
	// Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s.
	InternetMaxBandwidthOut pulumi.IntInput `pulumi:"internetMaxBandwidthOut"`
	// Whether it is an I/O-optimized instance or not.
	IoOptimized pulumi.StringInput `pulumi:"ioOptimized"`
	// The name of the key pair.
	KeyPairName pulumi.StringInput `pulumi:"keyPairName"`
	// The Latest Version Number.
	LatestVersionNumber pulumi.IntInput `pulumi:"latestVersionNumber"`
	// The ID of the Launch Template.
	LaunchTemplateId pulumi.StringInput `pulumi:"launchTemplateId"`
	// The Launch Template Name.
	LaunchTemplateName pulumi.StringInput `pulumi:"launchTemplateName"`
	// The Modified Time.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// The list of network interfaces created with instance.
	NetworkInterfaces GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// Network type of the instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Whether to use the password preset by the mirror.
	PasswordInherit pulumi.BoolInput `pulumi:"passwordInherit"`
	// The subscription period of the instance.
	Period pulumi.IntInput `pulumi:"period"`
	// The private IP address of the instance.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The RAM role name of the instance.
	RamRoleName pulumi.StringInput `pulumi:"ramRoleName"`
	// The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Whether or not to activate the security enhancement feature and install network security software free of charge.
	SecurityEnhancementStrategy pulumi.StringInput `pulumi:"securityEnhancementStrategy"`
	// The security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The security group IDs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The protection period of the preemptible instance.
	SpotDuration pulumi.StringInput `pulumi:"spotDuration"`
	// Sets the maximum hourly instance price.
	SpotPriceLimit pulumi.Float64Input `pulumi:"spotPriceLimit"`
	// The spot strategy for a Pay-As-You-Go instance.
	SpotStrategy pulumi.StringInput `pulumi:"spotStrategy"`
	// The System Disk.
	SystemDisks GetEcsLaunchTemplatesTemplateSystemDiskArrayInput `pulumi:"systemDisks"`
	// The template tags.
	TemplateTags pulumi.MapInput `pulumi:"templateTags"`
	// The User Data.
	UserData pulumi.StringInput `pulumi:"userData"`
	// The Version Description.
	VersionDescription pulumi.StringInput `pulumi:"versionDescription"`
	// VpcId.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The Zone Id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetEcsLaunchTemplatesTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplate)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateArgs) ToGetEcsLaunchTemplatesTemplateOutput() GetEcsLaunchTemplatesTemplateOutput {
	return i.ToGetEcsLaunchTemplatesTemplateOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateArgs) ToGetEcsLaunchTemplatesTemplateOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateOutput)
}

// GetEcsLaunchTemplatesTemplateArrayInput is an input type that accepts GetEcsLaunchTemplatesTemplateArray and GetEcsLaunchTemplatesTemplateArrayOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateArrayInput` via:
//
//          GetEcsLaunchTemplatesTemplateArray{ GetEcsLaunchTemplatesTemplateArgs{...} }
type GetEcsLaunchTemplatesTemplateArrayInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateArrayOutput() GetEcsLaunchTemplatesTemplateArrayOutput
	ToGetEcsLaunchTemplatesTemplateArrayOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateArrayOutput
}

type GetEcsLaunchTemplatesTemplateArray []GetEcsLaunchTemplatesTemplateInput

func (GetEcsLaunchTemplatesTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplate)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateArray) ToGetEcsLaunchTemplatesTemplateArrayOutput() GetEcsLaunchTemplatesTemplateArrayOutput {
	return i.ToGetEcsLaunchTemplatesTemplateArrayOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateArray) ToGetEcsLaunchTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateArrayOutput)
}

type GetEcsLaunchTemplatesTemplateOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplate)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateOutput) ToGetEcsLaunchTemplatesTemplateOutput() GetEcsLaunchTemplatesTemplateOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateOutput) ToGetEcsLaunchTemplatesTemplateOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateOutput {
	return o
}

// Instance auto release time.
func (o GetEcsLaunchTemplatesTemplateOutput) AutoReleaseTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.AutoReleaseTime }).(pulumi.StringOutput)
}

// CreatedBy.
func (o GetEcsLaunchTemplatesTemplateOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The list of data disks created with instance.
func (o GetEcsLaunchTemplatesTemplateOutput) DataDisks() GetEcsLaunchTemplatesTemplateDataDiskArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) []GetEcsLaunchTemplatesTemplateDataDisk { return v.DataDisks }).(GetEcsLaunchTemplatesTemplateDataDiskArrayOutput)
}

// The Default Version Number.
func (o GetEcsLaunchTemplatesTemplateOutput) DefaultVersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) int { return v.DefaultVersionNumber }).(pulumi.IntOutput)
}

// The Deployment Set Id.
func (o GetEcsLaunchTemplatesTemplateOutput) DeploymentSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.DeploymentSetId }).(pulumi.StringOutput)
}

// System disk description.
func (o GetEcsLaunchTemplatesTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to enable the instance operating system configuration.
func (o GetEcsLaunchTemplatesTemplateOutput) EnableVmOsConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) bool { return v.EnableVmOsConfig }).(pulumi.BoolOutput)
}

// Instance host name.
func (o GetEcsLaunchTemplatesTemplateOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Launch Template.
func (o GetEcsLaunchTemplatesTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The Image Id.
func (o GetEcsLaunchTemplatesTemplateOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.ImageId }).(pulumi.StringOutput)
}

// Mirror source.
func (o GetEcsLaunchTemplatesTemplateOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

// Internet bandwidth billing method.
func (o GetEcsLaunchTemplatesTemplateOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The Instance Name.
func (o GetEcsLaunchTemplatesTemplateOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Instance type.
func (o GetEcsLaunchTemplatesTemplateOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Internet bandwidth billing method.
func (o GetEcsLaunchTemplatesTemplateOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// The maximum inbound bandwidth from the Internet network, measured in Mbit/s.
func (o GetEcsLaunchTemplatesTemplateOutput) InternetMaxBandwidthIn() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) int { return v.InternetMaxBandwidthIn }).(pulumi.IntOutput)
}

// Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s.
func (o GetEcsLaunchTemplatesTemplateOutput) InternetMaxBandwidthOut() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) int { return v.InternetMaxBandwidthOut }).(pulumi.IntOutput)
}

// Whether it is an I/O-optimized instance or not.
func (o GetEcsLaunchTemplatesTemplateOutput) IoOptimized() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.IoOptimized }).(pulumi.StringOutput)
}

// The name of the key pair.
func (o GetEcsLaunchTemplatesTemplateOutput) KeyPairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.KeyPairName }).(pulumi.StringOutput)
}

// The Latest Version Number.
func (o GetEcsLaunchTemplatesTemplateOutput) LatestVersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) int { return v.LatestVersionNumber }).(pulumi.IntOutput)
}

// The ID of the Launch Template.
func (o GetEcsLaunchTemplatesTemplateOutput) LaunchTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.LaunchTemplateId }).(pulumi.StringOutput)
}

// The Launch Template Name.
func (o GetEcsLaunchTemplatesTemplateOutput) LaunchTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.LaunchTemplateName }).(pulumi.StringOutput)
}

// The Modified Time.
func (o GetEcsLaunchTemplatesTemplateOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The list of network interfaces created with instance.
func (o GetEcsLaunchTemplatesTemplateOutput) NetworkInterfaces() GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) []GetEcsLaunchTemplatesTemplateNetworkInterface {
		return v.NetworkInterfaces
	}).(GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput)
}

// Network type of the instance.
func (o GetEcsLaunchTemplatesTemplateOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Whether to use the password preset by the mirror.
func (o GetEcsLaunchTemplatesTemplateOutput) PasswordInherit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) bool { return v.PasswordInherit }).(pulumi.BoolOutput)
}

// The subscription period of the instance.
func (o GetEcsLaunchTemplatesTemplateOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) int { return v.Period }).(pulumi.IntOutput)
}

// The private IP address of the instance.
func (o GetEcsLaunchTemplatesTemplateOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The RAM role name of the instance.
func (o GetEcsLaunchTemplatesTemplateOutput) RamRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.RamRoleName }).(pulumi.StringOutput)
}

// The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
func (o GetEcsLaunchTemplatesTemplateOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Whether or not to activate the security enhancement feature and install network security software free of charge.
func (o GetEcsLaunchTemplatesTemplateOutput) SecurityEnhancementStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.SecurityEnhancementStrategy }).(pulumi.StringOutput)
}

// The security group ID.
func (o GetEcsLaunchTemplatesTemplateOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The security group IDs.
func (o GetEcsLaunchTemplatesTemplateOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The protection period of the preemptible instance.
func (o GetEcsLaunchTemplatesTemplateOutput) SpotDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.SpotDuration }).(pulumi.StringOutput)
}

// Sets the maximum hourly instance price.
func (o GetEcsLaunchTemplatesTemplateOutput) SpotPriceLimit() pulumi.Float64Output {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) float64 { return v.SpotPriceLimit }).(pulumi.Float64Output)
}

// The spot strategy for a Pay-As-You-Go instance.
func (o GetEcsLaunchTemplatesTemplateOutput) SpotStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.SpotStrategy }).(pulumi.StringOutput)
}

// The System Disk.
func (o GetEcsLaunchTemplatesTemplateOutput) SystemDisks() GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) []GetEcsLaunchTemplatesTemplateSystemDisk { return v.SystemDisks }).(GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput)
}

// The template tags.
func (o GetEcsLaunchTemplatesTemplateOutput) TemplateTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) map[string]interface{} { return v.TemplateTags }).(pulumi.MapOutput)
}

// The User Data.
func (o GetEcsLaunchTemplatesTemplateOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.UserData }).(pulumi.StringOutput)
}

// The Version Description.
func (o GetEcsLaunchTemplatesTemplateOutput) VersionDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.VersionDescription }).(pulumi.StringOutput)
}

// VpcId.
func (o GetEcsLaunchTemplatesTemplateOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch id.
func (o GetEcsLaunchTemplatesTemplateOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The Zone Id.
func (o GetEcsLaunchTemplatesTemplateOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplate) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetEcsLaunchTemplatesTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplate)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateArrayOutput) ToGetEcsLaunchTemplatesTemplateArrayOutput() GetEcsLaunchTemplatesTemplateArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateArrayOutput) ToGetEcsLaunchTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateArrayOutput) Index(i pulumi.IntInput) GetEcsLaunchTemplatesTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEcsLaunchTemplatesTemplate {
		return vs[0].([]GetEcsLaunchTemplatesTemplate)[vs[1].(int)]
	}).(GetEcsLaunchTemplatesTemplateOutput)
}

type GetEcsLaunchTemplatesTemplateDataDisk struct {
	// The category of the system disk.
	Category string `pulumi:"category"`
	// Specifies whether to release the system disk when the instance is released.
	DeleteWithInstance bool `pulumi:"deleteWithInstance"`
	// System disk description.
	Description string `pulumi:"description"`
	// Encrypted the data in this disk.
	Encrypted bool `pulumi:"encrypted"`
	// System disk name.
	Name string `pulumi:"name"`
	// The performance level of the ESSD used as the system disk.
	PerformanceLevel string `pulumi:"performanceLevel"`
	// Size of the system disk, measured in GB.
	Size int `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId string `pulumi:"snapshotId"`
}

// GetEcsLaunchTemplatesTemplateDataDiskInput is an input type that accepts GetEcsLaunchTemplatesTemplateDataDiskArgs and GetEcsLaunchTemplatesTemplateDataDiskOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateDataDiskInput` via:
//
//          GetEcsLaunchTemplatesTemplateDataDiskArgs{...}
type GetEcsLaunchTemplatesTemplateDataDiskInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateDataDiskOutput() GetEcsLaunchTemplatesTemplateDataDiskOutput
	ToGetEcsLaunchTemplatesTemplateDataDiskOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateDataDiskOutput
}

type GetEcsLaunchTemplatesTemplateDataDiskArgs struct {
	// The category of the system disk.
	Category pulumi.StringInput `pulumi:"category"`
	// Specifies whether to release the system disk when the instance is released.
	DeleteWithInstance pulumi.BoolInput `pulumi:"deleteWithInstance"`
	// System disk description.
	Description pulumi.StringInput `pulumi:"description"`
	// Encrypted the data in this disk.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// System disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// The performance level of the ESSD used as the system disk.
	PerformanceLevel pulumi.StringInput `pulumi:"performanceLevel"`
	// Size of the system disk, measured in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
}

func (GetEcsLaunchTemplatesTemplateDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplateDataDisk)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateDataDiskArgs) ToGetEcsLaunchTemplatesTemplateDataDiskOutput() GetEcsLaunchTemplatesTemplateDataDiskOutput {
	return i.ToGetEcsLaunchTemplatesTemplateDataDiskOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateDataDiskArgs) ToGetEcsLaunchTemplatesTemplateDataDiskOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateDataDiskOutput)
}

// GetEcsLaunchTemplatesTemplateDataDiskArrayInput is an input type that accepts GetEcsLaunchTemplatesTemplateDataDiskArray and GetEcsLaunchTemplatesTemplateDataDiskArrayOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateDataDiskArrayInput` via:
//
//          GetEcsLaunchTemplatesTemplateDataDiskArray{ GetEcsLaunchTemplatesTemplateDataDiskArgs{...} }
type GetEcsLaunchTemplatesTemplateDataDiskArrayInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutput() GetEcsLaunchTemplatesTemplateDataDiskArrayOutput
	ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateDataDiskArrayOutput
}

type GetEcsLaunchTemplatesTemplateDataDiskArray []GetEcsLaunchTemplatesTemplateDataDiskInput

func (GetEcsLaunchTemplatesTemplateDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplateDataDisk)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateDataDiskArray) ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutput() GetEcsLaunchTemplatesTemplateDataDiskArrayOutput {
	return i.ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateDataDiskArray) ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateDataDiskArrayOutput)
}

type GetEcsLaunchTemplatesTemplateDataDiskOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplateDataDisk)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) ToGetEcsLaunchTemplatesTemplateDataDiskOutput() GetEcsLaunchTemplatesTemplateDataDiskOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) ToGetEcsLaunchTemplatesTemplateDataDiskOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateDataDiskOutput {
	return o
}

// The category of the system disk.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) string { return v.Category }).(pulumi.StringOutput)
}

// Specifies whether to release the system disk when the instance is released.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) DeleteWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) bool { return v.DeleteWithInstance }).(pulumi.BoolOutput)
}

// System disk description.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) string { return v.Description }).(pulumi.StringOutput)
}

// Encrypted the data in this disk.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// System disk name.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The performance level of the ESSD used as the system disk.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) PerformanceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) string { return v.PerformanceLevel }).(pulumi.StringOutput)
}

// Size of the system disk, measured in GB.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) int { return v.Size }).(pulumi.IntOutput)
}

// The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
func (o GetEcsLaunchTemplatesTemplateDataDiskOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateDataDisk) string { return v.SnapshotId }).(pulumi.StringOutput)
}

type GetEcsLaunchTemplatesTemplateDataDiskArrayOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplateDataDisk)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateDataDiskArrayOutput) ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutput() GetEcsLaunchTemplatesTemplateDataDiskArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateDataDiskArrayOutput) ToGetEcsLaunchTemplatesTemplateDataDiskArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateDataDiskArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateDataDiskArrayOutput) Index(i pulumi.IntInput) GetEcsLaunchTemplatesTemplateDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEcsLaunchTemplatesTemplateDataDisk {
		return vs[0].([]GetEcsLaunchTemplatesTemplateDataDisk)[vs[1].(int)]
	}).(GetEcsLaunchTemplatesTemplateDataDiskOutput)
}

type GetEcsLaunchTemplatesTemplateNetworkInterface struct {
	// System disk description.
	Description string `pulumi:"description"`
	// System disk name.
	Name string `pulumi:"name"`
	// The primary private IP address of the ENI.
	PrimaryIp string `pulumi:"primaryIp"`
	// The security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
}

// GetEcsLaunchTemplatesTemplateNetworkInterfaceInput is an input type that accepts GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs and GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateNetworkInterfaceInput` via:
//
//          GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs{...}
type GetEcsLaunchTemplatesTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutput() GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput
	ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput
}

type GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs struct {
	// System disk description.
	Description pulumi.StringInput `pulumi:"description"`
	// System disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// The primary private IP address of the ENI.
	PrimaryIp pulumi.StringInput `pulumi:"primaryIp"`
	// The security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplateNetworkInterface)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutput() GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput {
	return i.ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput)
}

// GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayInput is an input type that accepts GetEcsLaunchTemplatesTemplateNetworkInterfaceArray and GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayInput` via:
//
//          GetEcsLaunchTemplatesTemplateNetworkInterfaceArray{ GetEcsLaunchTemplatesTemplateNetworkInterfaceArgs{...} }
type GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput() GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput
	ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput
}

type GetEcsLaunchTemplatesTemplateNetworkInterfaceArray []GetEcsLaunchTemplatesTemplateNetworkInterfaceInput

func (GetEcsLaunchTemplatesTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplateNetworkInterface)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateNetworkInterfaceArray) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput() GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput {
	return i.ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateNetworkInterfaceArray) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput)
}

type GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplateNetworkInterface)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutput() GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput {
	return o
}

// System disk description.
func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateNetworkInterface) string { return v.Description }).(pulumi.StringOutput)
}

// System disk name.
func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateNetworkInterface) string { return v.Name }).(pulumi.StringOutput)
}

// The primary private IP address of the ENI.
func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateNetworkInterface) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

// The security group ID.
func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateNetworkInterface) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The vswitch id.
func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateNetworkInterface) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplateNetworkInterface)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput() GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput) ToGetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEcsLaunchTemplatesTemplateNetworkInterface {
		return vs[0].([]GetEcsLaunchTemplatesTemplateNetworkInterface)[vs[1].(int)]
	}).(GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput)
}

type GetEcsLaunchTemplatesTemplateSystemDisk struct {
	// The category of the system disk.
	Category string `pulumi:"category"`
	// Specifies whether to release the system disk when the instance is released.
	DeleteWithInstance bool `pulumi:"deleteWithInstance"`
	// System disk description.
	Description string `pulumi:"description"`
	// The Iops.
	Iops string `pulumi:"iops"`
	// System disk name.
	Name string `pulumi:"name"`
	// The performance level of the ESSD used as the system disk.
	PerformanceLevel string `pulumi:"performanceLevel"`
	// Size of the system disk, measured in GB.
	Size int `pulumi:"size"`
}

// GetEcsLaunchTemplatesTemplateSystemDiskInput is an input type that accepts GetEcsLaunchTemplatesTemplateSystemDiskArgs and GetEcsLaunchTemplatesTemplateSystemDiskOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateSystemDiskInput` via:
//
//          GetEcsLaunchTemplatesTemplateSystemDiskArgs{...}
type GetEcsLaunchTemplatesTemplateSystemDiskInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateSystemDiskOutput() GetEcsLaunchTemplatesTemplateSystemDiskOutput
	ToGetEcsLaunchTemplatesTemplateSystemDiskOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateSystemDiskOutput
}

type GetEcsLaunchTemplatesTemplateSystemDiskArgs struct {
	// The category of the system disk.
	Category pulumi.StringInput `pulumi:"category"`
	// Specifies whether to release the system disk when the instance is released.
	DeleteWithInstance pulumi.BoolInput `pulumi:"deleteWithInstance"`
	// System disk description.
	Description pulumi.StringInput `pulumi:"description"`
	// The Iops.
	Iops pulumi.StringInput `pulumi:"iops"`
	// System disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// The performance level of the ESSD used as the system disk.
	PerformanceLevel pulumi.StringInput `pulumi:"performanceLevel"`
	// Size of the system disk, measured in GB.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetEcsLaunchTemplatesTemplateSystemDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplateSystemDisk)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateSystemDiskArgs) ToGetEcsLaunchTemplatesTemplateSystemDiskOutput() GetEcsLaunchTemplatesTemplateSystemDiskOutput {
	return i.ToGetEcsLaunchTemplatesTemplateSystemDiskOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateSystemDiskArgs) ToGetEcsLaunchTemplatesTemplateSystemDiskOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateSystemDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateSystemDiskOutput)
}

// GetEcsLaunchTemplatesTemplateSystemDiskArrayInput is an input type that accepts GetEcsLaunchTemplatesTemplateSystemDiskArray and GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput values.
// You can construct a concrete instance of `GetEcsLaunchTemplatesTemplateSystemDiskArrayInput` via:
//
//          GetEcsLaunchTemplatesTemplateSystemDiskArray{ GetEcsLaunchTemplatesTemplateSystemDiskArgs{...} }
type GetEcsLaunchTemplatesTemplateSystemDiskArrayInput interface {
	pulumi.Input

	ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutput() GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput
	ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutputWithContext(context.Context) GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput
}

type GetEcsLaunchTemplatesTemplateSystemDiskArray []GetEcsLaunchTemplatesTemplateSystemDiskInput

func (GetEcsLaunchTemplatesTemplateSystemDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplateSystemDisk)(nil)).Elem()
}

func (i GetEcsLaunchTemplatesTemplateSystemDiskArray) ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutput() GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput {
	return i.ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutputWithContext(context.Background())
}

func (i GetEcsLaunchTemplatesTemplateSystemDiskArray) ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput)
}

type GetEcsLaunchTemplatesTemplateSystemDiskOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateSystemDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsLaunchTemplatesTemplateSystemDisk)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) ToGetEcsLaunchTemplatesTemplateSystemDiskOutput() GetEcsLaunchTemplatesTemplateSystemDiskOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) ToGetEcsLaunchTemplatesTemplateSystemDiskOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateSystemDiskOutput {
	return o
}

// The category of the system disk.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) string { return v.Category }).(pulumi.StringOutput)
}

// Specifies whether to release the system disk when the instance is released.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) DeleteWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) bool { return v.DeleteWithInstance }).(pulumi.BoolOutput)
}

// System disk description.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) string { return v.Description }).(pulumi.StringOutput)
}

// The Iops.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) Iops() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) string { return v.Iops }).(pulumi.StringOutput)
}

// System disk name.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The performance level of the ESSD used as the system disk.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) PerformanceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) string { return v.PerformanceLevel }).(pulumi.StringOutput)
}

// Size of the system disk, measured in GB.
func (o GetEcsLaunchTemplatesTemplateSystemDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsLaunchTemplatesTemplateSystemDisk) int { return v.Size }).(pulumi.IntOutput)
}

type GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput struct{ *pulumi.OutputState }

func (GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsLaunchTemplatesTemplateSystemDisk)(nil)).Elem()
}

func (o GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput) ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutput() GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput) ToGetEcsLaunchTemplatesTemplateSystemDiskArrayOutputWithContext(ctx context.Context) GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput {
	return o
}

func (o GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput) Index(i pulumi.IntInput) GetEcsLaunchTemplatesTemplateSystemDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEcsLaunchTemplatesTemplateSystemDisk {
		return vs[0].([]GetEcsLaunchTemplatesTemplateSystemDisk)[vs[1].(int)]
	}).(GetEcsLaunchTemplatesTemplateSystemDiskOutput)
}

type GetEcsSnapshotsSnapshot struct {
	// The category of the snapshot.
	Category     string `pulumi:"category"`
	CreationTime string `pulumi:"creationTime"`
	// The description of the snapshot.
	Description string `pulumi:"description"`
	// The source disk id.
	DiskId string `pulumi:"diskId"`
	// Whether the snapshot is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The ID of the Snapshot.
	Id string `pulumi:"id"`
	// Whether snapshot speed availability is enabled.
	InstantAccess bool `pulumi:"instantAccess"`
	// Specifies the retention period of the instant access feature. After the retention period ends, the snapshot is automatically released.
	InstantAccessRetentionDays int    `pulumi:"instantAccessRetentionDays"`
	Name                       string `pulumi:"name"`
	// The product number inherited from the mirror market.
	ProductCode string `pulumi:"productCode"`
	// Snapshot creation progress, in percentage.
	Progress string `pulumi:"progress"`
	// Remaining completion time for the snapshot being created.
	RemainTime int `pulumi:"remainTime"`
	// The resource group id.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Automatic snapshot retention days.
	RetentionDays int `pulumi:"retentionDays"`
	// The snapshot id.
	SnapshotId string `pulumi:"snapshotId"`
	// Snapshot Display Name.
	SnapshotName string `pulumi:"snapshotName"`
	// The serial number of the snapshot.
	SnapshotSn string `pulumi:"snapshotSn"`
	// Snapshot creation type.
	SnapshotType string `pulumi:"snapshotType"`
	SourceDiskId string `pulumi:"sourceDiskId"`
	// Source disk capacity.
	SourceDiskSize string `pulumi:"sourceDiskSize"`
	// Source disk attributes.
	SourceDiskType string `pulumi:"sourceDiskType"`
	// Original disk type.
	SourceStorageType string `pulumi:"sourceStorageType"`
	// The status of the snapshot.
	Status string `pulumi:"status"`
	// The tags.
	Tags map[string]interface{} `pulumi:"tags"`
	Type string                 `pulumi:"type"`
	// A resource type that has a reference relationship.
	Usage string `pulumi:"usage"`
}

// GetEcsSnapshotsSnapshotInput is an input type that accepts GetEcsSnapshotsSnapshotArgs and GetEcsSnapshotsSnapshotOutput values.
// You can construct a concrete instance of `GetEcsSnapshotsSnapshotInput` via:
//
//          GetEcsSnapshotsSnapshotArgs{...}
type GetEcsSnapshotsSnapshotInput interface {
	pulumi.Input

	ToGetEcsSnapshotsSnapshotOutput() GetEcsSnapshotsSnapshotOutput
	ToGetEcsSnapshotsSnapshotOutputWithContext(context.Context) GetEcsSnapshotsSnapshotOutput
}

type GetEcsSnapshotsSnapshotArgs struct {
	// The category of the snapshot.
	Category     pulumi.StringInput `pulumi:"category"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the snapshot.
	Description pulumi.StringInput `pulumi:"description"`
	// The source disk id.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Whether the snapshot is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The ID of the Snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether snapshot speed availability is enabled.
	InstantAccess pulumi.BoolInput `pulumi:"instantAccess"`
	// Specifies the retention period of the instant access feature. After the retention period ends, the snapshot is automatically released.
	InstantAccessRetentionDays pulumi.IntInput    `pulumi:"instantAccessRetentionDays"`
	Name                       pulumi.StringInput `pulumi:"name"`
	// The product number inherited from the mirror market.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// Snapshot creation progress, in percentage.
	Progress pulumi.StringInput `pulumi:"progress"`
	// Remaining completion time for the snapshot being created.
	RemainTime pulumi.IntInput `pulumi:"remainTime"`
	// The resource group id.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Automatic snapshot retention days.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
	// The snapshot id.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Snapshot Display Name.
	SnapshotName pulumi.StringInput `pulumi:"snapshotName"`
	// The serial number of the snapshot.
	SnapshotSn pulumi.StringInput `pulumi:"snapshotSn"`
	// Snapshot creation type.
	SnapshotType pulumi.StringInput `pulumi:"snapshotType"`
	SourceDiskId pulumi.StringInput `pulumi:"sourceDiskId"`
	// Source disk capacity.
	SourceDiskSize pulumi.StringInput `pulumi:"sourceDiskSize"`
	// Source disk attributes.
	SourceDiskType pulumi.StringInput `pulumi:"sourceDiskType"`
	// Original disk type.
	SourceStorageType pulumi.StringInput `pulumi:"sourceStorageType"`
	// The status of the snapshot.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags.
	Tags pulumi.MapInput    `pulumi:"tags"`
	Type pulumi.StringInput `pulumi:"type"`
	// A resource type that has a reference relationship.
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetEcsSnapshotsSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsSnapshotsSnapshot)(nil)).Elem()
}

func (i GetEcsSnapshotsSnapshotArgs) ToGetEcsSnapshotsSnapshotOutput() GetEcsSnapshotsSnapshotOutput {
	return i.ToGetEcsSnapshotsSnapshotOutputWithContext(context.Background())
}

func (i GetEcsSnapshotsSnapshotArgs) ToGetEcsSnapshotsSnapshotOutputWithContext(ctx context.Context) GetEcsSnapshotsSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsSnapshotsSnapshotOutput)
}

// GetEcsSnapshotsSnapshotArrayInput is an input type that accepts GetEcsSnapshotsSnapshotArray and GetEcsSnapshotsSnapshotArrayOutput values.
// You can construct a concrete instance of `GetEcsSnapshotsSnapshotArrayInput` via:
//
//          GetEcsSnapshotsSnapshotArray{ GetEcsSnapshotsSnapshotArgs{...} }
type GetEcsSnapshotsSnapshotArrayInput interface {
	pulumi.Input

	ToGetEcsSnapshotsSnapshotArrayOutput() GetEcsSnapshotsSnapshotArrayOutput
	ToGetEcsSnapshotsSnapshotArrayOutputWithContext(context.Context) GetEcsSnapshotsSnapshotArrayOutput
}

type GetEcsSnapshotsSnapshotArray []GetEcsSnapshotsSnapshotInput

func (GetEcsSnapshotsSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsSnapshotsSnapshot)(nil)).Elem()
}

func (i GetEcsSnapshotsSnapshotArray) ToGetEcsSnapshotsSnapshotArrayOutput() GetEcsSnapshotsSnapshotArrayOutput {
	return i.ToGetEcsSnapshotsSnapshotArrayOutputWithContext(context.Background())
}

func (i GetEcsSnapshotsSnapshotArray) ToGetEcsSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetEcsSnapshotsSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEcsSnapshotsSnapshotArrayOutput)
}

type GetEcsSnapshotsSnapshotOutput struct{ *pulumi.OutputState }

func (GetEcsSnapshotsSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEcsSnapshotsSnapshot)(nil)).Elem()
}

func (o GetEcsSnapshotsSnapshotOutput) ToGetEcsSnapshotsSnapshotOutput() GetEcsSnapshotsSnapshotOutput {
	return o
}

func (o GetEcsSnapshotsSnapshotOutput) ToGetEcsSnapshotsSnapshotOutputWithContext(ctx context.Context) GetEcsSnapshotsSnapshotOutput {
	return o
}

// The category of the snapshot.
func (o GetEcsSnapshotsSnapshotOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetEcsSnapshotsSnapshotOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the snapshot.
func (o GetEcsSnapshotsSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// The source disk id.
func (o GetEcsSnapshotsSnapshotOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.DiskId }).(pulumi.StringOutput)
}

// Whether the snapshot is encrypted.
func (o GetEcsSnapshotsSnapshotOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The ID of the Snapshot.
func (o GetEcsSnapshotsSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// Whether snapshot speed availability is enabled.
func (o GetEcsSnapshotsSnapshotOutput) InstantAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) bool { return v.InstantAccess }).(pulumi.BoolOutput)
}

// Specifies the retention period of the instant access feature. After the retention period ends, the snapshot is automatically released.
func (o GetEcsSnapshotsSnapshotOutput) InstantAccessRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) int { return v.InstantAccessRetentionDays }).(pulumi.IntOutput)
}

func (o GetEcsSnapshotsSnapshotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Name }).(pulumi.StringOutput)
}

// The product number inherited from the mirror market.
func (o GetEcsSnapshotsSnapshotOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.ProductCode }).(pulumi.StringOutput)
}

// Snapshot creation progress, in percentage.
func (o GetEcsSnapshotsSnapshotOutput) Progress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Progress }).(pulumi.StringOutput)
}

// Remaining completion time for the snapshot being created.
func (o GetEcsSnapshotsSnapshotOutput) RemainTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) int { return v.RemainTime }).(pulumi.IntOutput)
}

// The resource group id.
func (o GetEcsSnapshotsSnapshotOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Automatic snapshot retention days.
func (o GetEcsSnapshotsSnapshotOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) int { return v.RetentionDays }).(pulumi.IntOutput)
}

// The snapshot id.
func (o GetEcsSnapshotsSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Snapshot Display Name.
func (o GetEcsSnapshotsSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

// The serial number of the snapshot.
func (o GetEcsSnapshotsSnapshotOutput) SnapshotSn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SnapshotSn }).(pulumi.StringOutput)
}

// Snapshot creation type.
func (o GetEcsSnapshotsSnapshotOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SnapshotType }).(pulumi.StringOutput)
}

func (o GetEcsSnapshotsSnapshotOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SourceDiskId }).(pulumi.StringOutput)
}

// Source disk capacity.
func (o GetEcsSnapshotsSnapshotOutput) SourceDiskSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SourceDiskSize }).(pulumi.StringOutput)
}

// Source disk attributes.
func (o GetEcsSnapshotsSnapshotOutput) SourceDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SourceDiskType }).(pulumi.StringOutput)
}

// Original disk type.
func (o GetEcsSnapshotsSnapshotOutput) SourceStorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.SourceStorageType }).(pulumi.StringOutput)
}

// The status of the snapshot.
func (o GetEcsSnapshotsSnapshotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Status }).(pulumi.StringOutput)
}

// The tags.
func (o GetEcsSnapshotsSnapshotOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetEcsSnapshotsSnapshotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Type }).(pulumi.StringOutput)
}

// A resource type that has a reference relationship.
func (o GetEcsSnapshotsSnapshotOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetEcsSnapshotsSnapshot) string { return v.Usage }).(pulumi.StringOutput)
}

type GetEcsSnapshotsSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetEcsSnapshotsSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEcsSnapshotsSnapshot)(nil)).Elem()
}

func (o GetEcsSnapshotsSnapshotArrayOutput) ToGetEcsSnapshotsSnapshotArrayOutput() GetEcsSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetEcsSnapshotsSnapshotArrayOutput) ToGetEcsSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetEcsSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetEcsSnapshotsSnapshotArrayOutput) Index(i pulumi.IntInput) GetEcsSnapshotsSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEcsSnapshotsSnapshot {
		return vs[0].([]GetEcsSnapshotsSnapshot)[vs[1].(int)]
	}).(GetEcsSnapshotsSnapshotOutput)
}

type GetEipsEip struct {
	// EIP internet max bandwidth in Mbps.
	Bandwidth string `pulumi:"bandwidth"`
	// Time of creation.
	CreationTime string `pulumi:"creationTime"`
	// ID of the EIP.
	Id string `pulumi:"id"`
	// The ID of the instance that is being bound.
	InstanceId string `pulumi:"instanceId"`
	// The instance type of that the EIP is bound.
	InstanceType string `pulumi:"instanceType"`
	// EIP internet charge type.
	InternetChargeType string `pulumi:"internetChargeType"`
	// Public IP Address of the the EIP.
	IpAddress string `pulumi:"ipAddress"`
	// EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
	Status string `pulumi:"status"`
}

// GetEipsEipInput is an input type that accepts GetEipsEipArgs and GetEipsEipOutput values.
// You can construct a concrete instance of `GetEipsEipInput` via:
//
//          GetEipsEipArgs{...}
type GetEipsEipInput interface {
	pulumi.Input

	ToGetEipsEipOutput() GetEipsEipOutput
	ToGetEipsEipOutputWithContext(context.Context) GetEipsEipOutput
}

type GetEipsEipArgs struct {
	// EIP internet max bandwidth in Mbps.
	Bandwidth pulumi.StringInput `pulumi:"bandwidth"`
	// Time of creation.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// ID of the EIP.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the instance that is being bound.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The instance type of that the EIP is bound.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// EIP internet charge type.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// Public IP Address of the the EIP.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetEipsEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsEip)(nil)).Elem()
}

func (i GetEipsEipArgs) ToGetEipsEipOutput() GetEipsEipOutput {
	return i.ToGetEipsEipOutputWithContext(context.Background())
}

func (i GetEipsEipArgs) ToGetEipsEipOutputWithContext(ctx context.Context) GetEipsEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEipsEipOutput)
}

// GetEipsEipArrayInput is an input type that accepts GetEipsEipArray and GetEipsEipArrayOutput values.
// You can construct a concrete instance of `GetEipsEipArrayInput` via:
//
//          GetEipsEipArray{ GetEipsEipArgs{...} }
type GetEipsEipArrayInput interface {
	pulumi.Input

	ToGetEipsEipArrayOutput() GetEipsEipArrayOutput
	ToGetEipsEipArrayOutputWithContext(context.Context) GetEipsEipArrayOutput
}

type GetEipsEipArray []GetEipsEipInput

func (GetEipsEipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEipsEip)(nil)).Elem()
}

func (i GetEipsEipArray) ToGetEipsEipArrayOutput() GetEipsEipArrayOutput {
	return i.ToGetEipsEipArrayOutputWithContext(context.Background())
}

func (i GetEipsEipArray) ToGetEipsEipArrayOutputWithContext(ctx context.Context) GetEipsEipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEipsEipArrayOutput)
}

type GetEipsEipOutput struct{ *pulumi.OutputState }

func (GetEipsEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsEip)(nil)).Elem()
}

func (o GetEipsEipOutput) ToGetEipsEipOutput() GetEipsEipOutput {
	return o
}

func (o GetEipsEipOutput) ToGetEipsEipOutputWithContext(ctx context.Context) GetEipsEipOutput {
	return o
}

// EIP internet max bandwidth in Mbps.
func (o GetEipsEipOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// Time of creation.
func (o GetEipsEipOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.CreationTime }).(pulumi.StringOutput)
}

// ID of the EIP.
func (o GetEipsEipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance that is being bound.
func (o GetEipsEipOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The instance type of that the EIP is bound.
func (o GetEipsEipOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.InstanceType }).(pulumi.StringOutput)
}

// EIP internet charge type.
func (o GetEipsEipOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// Public IP Address of the the EIP.
func (o GetEipsEipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.IpAddress }).(pulumi.StringOutput)
}

// EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
func (o GetEipsEipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsEip) string { return v.Status }).(pulumi.StringOutput)
}

type GetEipsEipArrayOutput struct{ *pulumi.OutputState }

func (GetEipsEipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEipsEip)(nil)).Elem()
}

func (o GetEipsEipArrayOutput) ToGetEipsEipArrayOutput() GetEipsEipArrayOutput {
	return o
}

func (o GetEipsEipArrayOutput) ToGetEipsEipArrayOutputWithContext(ctx context.Context) GetEipsEipArrayOutput {
	return o
}

func (o GetEipsEipArrayOutput) Index(i pulumi.IntInput) GetEipsEipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEipsEip {
		return vs[0].([]GetEipsEip)[vs[1].(int)]
	}).(GetEipsEipOutput)
}

type GetHpcClustersCluster struct {
	// The description of ECS Hpc Cluster.
	Description string `pulumi:"description"`
	// The ID of the Hpc Cluster.
	HpcClusterId string `pulumi:"hpcClusterId"`
	// The ID of the Hpc Cluster.
	Id string `pulumi:"id"`
	// The name of ECS Hpc Cluster.
	Name string `pulumi:"name"`
}

// GetHpcClustersClusterInput is an input type that accepts GetHpcClustersClusterArgs and GetHpcClustersClusterOutput values.
// You can construct a concrete instance of `GetHpcClustersClusterInput` via:
//
//          GetHpcClustersClusterArgs{...}
type GetHpcClustersClusterInput interface {
	pulumi.Input

	ToGetHpcClustersClusterOutput() GetHpcClustersClusterOutput
	ToGetHpcClustersClusterOutputWithContext(context.Context) GetHpcClustersClusterOutput
}

type GetHpcClustersClusterArgs struct {
	// The description of ECS Hpc Cluster.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Hpc Cluster.
	HpcClusterId pulumi.StringInput `pulumi:"hpcClusterId"`
	// The ID of the Hpc Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of ECS Hpc Cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetHpcClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHpcClustersCluster)(nil)).Elem()
}

func (i GetHpcClustersClusterArgs) ToGetHpcClustersClusterOutput() GetHpcClustersClusterOutput {
	return i.ToGetHpcClustersClusterOutputWithContext(context.Background())
}

func (i GetHpcClustersClusterArgs) ToGetHpcClustersClusterOutputWithContext(ctx context.Context) GetHpcClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHpcClustersClusterOutput)
}

// GetHpcClustersClusterArrayInput is an input type that accepts GetHpcClustersClusterArray and GetHpcClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetHpcClustersClusterArrayInput` via:
//
//          GetHpcClustersClusterArray{ GetHpcClustersClusterArgs{...} }
type GetHpcClustersClusterArrayInput interface {
	pulumi.Input

	ToGetHpcClustersClusterArrayOutput() GetHpcClustersClusterArrayOutput
	ToGetHpcClustersClusterArrayOutputWithContext(context.Context) GetHpcClustersClusterArrayOutput
}

type GetHpcClustersClusterArray []GetHpcClustersClusterInput

func (GetHpcClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHpcClustersCluster)(nil)).Elem()
}

func (i GetHpcClustersClusterArray) ToGetHpcClustersClusterArrayOutput() GetHpcClustersClusterArrayOutput {
	return i.ToGetHpcClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetHpcClustersClusterArray) ToGetHpcClustersClusterArrayOutputWithContext(ctx context.Context) GetHpcClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHpcClustersClusterArrayOutput)
}

type GetHpcClustersClusterOutput struct{ *pulumi.OutputState }

func (GetHpcClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHpcClustersCluster)(nil)).Elem()
}

func (o GetHpcClustersClusterOutput) ToGetHpcClustersClusterOutput() GetHpcClustersClusterOutput {
	return o
}

func (o GetHpcClustersClusterOutput) ToGetHpcClustersClusterOutputWithContext(ctx context.Context) GetHpcClustersClusterOutput {
	return o
}

// The description of ECS Hpc Cluster.
func (o GetHpcClustersClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHpcClustersCluster) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Hpc Cluster.
func (o GetHpcClustersClusterOutput) HpcClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHpcClustersCluster) string { return v.HpcClusterId }).(pulumi.StringOutput)
}

// The ID of the Hpc Cluster.
func (o GetHpcClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHpcClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The name of ECS Hpc Cluster.
func (o GetHpcClustersClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHpcClustersCluster) string { return v.Name }).(pulumi.StringOutput)
}

type GetHpcClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetHpcClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHpcClustersCluster)(nil)).Elem()
}

func (o GetHpcClustersClusterArrayOutput) ToGetHpcClustersClusterArrayOutput() GetHpcClustersClusterArrayOutput {
	return o
}

func (o GetHpcClustersClusterArrayOutput) ToGetHpcClustersClusterArrayOutputWithContext(ctx context.Context) GetHpcClustersClusterArrayOutput {
	return o
}

func (o GetHpcClustersClusterArrayOutput) Index(i pulumi.IntInput) GetHpcClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHpcClustersCluster {
		return vs[0].([]GetHpcClustersCluster)[vs[1].(int)]
	}).(GetHpcClustersClusterOutput)
}

type GetImagesImage struct {
	// The image architecture. Valid values: `i386` and `x8664`.
	Architecture string `pulumi:"architecture"`
	// Time of creation.
	CreationTime string `pulumi:"creationTime"`
	// Description of the image.
	Description string `pulumi:"description"`
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings []GetImagesImageDiskDeviceMapping `pulumi:"diskDeviceMappings"`
	// ID of the image.
	Id      string `pulumi:"id"`
	ImageId string `pulumi:"imageId"`
	// Alias of the image owner.
	ImageOwnerAlias string `pulumi:"imageOwnerAlias"`
	// Version of the image.
	ImageVersion string `pulumi:"imageVersion"`
	IsCopied     bool   `pulumi:"isCopied"`
	IsSelfShared string `pulumi:"isSelfShared"`
	// Whether the user has subscribed to the terms of service for the image product corresponding to the ProductCode.
	IsSubscribed bool `pulumi:"isSubscribed"`
	// Specifies whether the image can be used on I/O optimized instances.
	IsSupportIoOptimized bool   `pulumi:"isSupportIoOptimized"`
	Name                 string `pulumi:"name"`
	// Display Chinese name of the OS.
	OsName string `pulumi:"osName"`
	// Display English name of the OS.
	OsNameEn string `pulumi:"osNameEn"`
	// The operating system type of the image. Valid values: `windows` and `linux`.
	OsType   string `pulumi:"osType"`
	Platform string `pulumi:"platform"`
	// Product code of the image on the image market.
	ProductCode string `pulumi:"productCode"`
	// Progress of image creation, presented in percentages.
	Progress string `pulumi:"progress"`
	// Size of the created disk.
	Size  int    `pulumi:"size"`
	State string `pulumi:"state"`
	// The status of the image. The following values are available, Separate multiple parameter values by using commas (,). Default value: `Available`. Valid values:
	// * `Creating`: The image is being created.
	// * `Waiting`: The image is waiting to be processed.
	// * `Available`: The image is available.
	// * `UnAvailable`: The image is unavailable.
	// * `CreateFailed`: The image failed to be created.
	// * `Deprecated`: The image is discontinued.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// Specifies whether to check the validity of the request without actually making the request. Valid values:
	// * `instance`: The image is already in use and running on an ECS instance.
	// * `none`: The image is not in use.
	Usage string `pulumi:"usage"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//          GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	// The image architecture. Valid values: `i386` and `x8664`.
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// Time of creation.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the image.
	Description pulumi.StringInput `pulumi:"description"`
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings GetImagesImageDiskDeviceMappingArrayInput `pulumi:"diskDeviceMappings"`
	// ID of the image.
	Id      pulumi.StringInput `pulumi:"id"`
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Alias of the image owner.
	ImageOwnerAlias pulumi.StringInput `pulumi:"imageOwnerAlias"`
	// Version of the image.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	IsCopied     pulumi.BoolInput   `pulumi:"isCopied"`
	IsSelfShared pulumi.StringInput `pulumi:"isSelfShared"`
	// Whether the user has subscribed to the terms of service for the image product corresponding to the ProductCode.
	IsSubscribed pulumi.BoolInput `pulumi:"isSubscribed"`
	// Specifies whether the image can be used on I/O optimized instances.
	IsSupportIoOptimized pulumi.BoolInput   `pulumi:"isSupportIoOptimized"`
	Name                 pulumi.StringInput `pulumi:"name"`
	// Display Chinese name of the OS.
	OsName pulumi.StringInput `pulumi:"osName"`
	// Display English name of the OS.
	OsNameEn pulumi.StringInput `pulumi:"osNameEn"`
	// The operating system type of the image. Valid values: `windows` and `linux`.
	OsType   pulumi.StringInput `pulumi:"osType"`
	Platform pulumi.StringInput `pulumi:"platform"`
	// Product code of the image on the image market.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// Progress of image creation, presented in percentages.
	Progress pulumi.StringInput `pulumi:"progress"`
	// Size of the created disk.
	Size  pulumi.IntInput    `pulumi:"size"`
	State pulumi.StringInput `pulumi:"state"`
	// The status of the image. The following values are available, Separate multiple parameter values by using commas (,). Default value: `Available`. Valid values:
	// * `Creating`: The image is being created.
	// * `Waiting`: The image is waiting to be processed.
	// * `Available`: The image is available.
	// * `UnAvailable`: The image is unavailable.
	// * `CreateFailed`: The image failed to be created.
	// * `Deprecated`: The image is discontinued.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies whether to check the validity of the request without actually making the request. Valid values:
	// * `instance`: The image is already in use and running on an ECS instance.
	// * `none`: The image is not in use.
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//          GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

// The image architecture. Valid values: `i386` and `x8664`.
func (o GetImagesImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Architecture }).(pulumi.StringOutput)
}

// Time of creation.
func (o GetImagesImageOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the image.
func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

// Description of the system with disks and snapshots under the image.
func (o GetImagesImageOutput) DiskDeviceMappings() GetImagesImageDiskDeviceMappingArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageDiskDeviceMapping { return v.DiskDeviceMappings }).(GetImagesImageDiskDeviceMappingArrayOutput)
}

// ID of the image.
func (o GetImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// Alias of the image owner.
func (o GetImagesImageOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

// Version of the image.
func (o GetImagesImageOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageVersion }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) IsCopied() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.IsCopied }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) IsSelfShared() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.IsSelfShared }).(pulumi.StringOutput)
}

// Whether the user has subscribed to the terms of service for the image product corresponding to the ProductCode.
func (o GetImagesImageOutput) IsSubscribed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.IsSubscribed }).(pulumi.BoolOutput)
}

// Specifies whether the image can be used on I/O optimized instances.
func (o GetImagesImageOutput) IsSupportIoOptimized() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.IsSupportIoOptimized }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

// Display Chinese name of the OS.
func (o GetImagesImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.OsName }).(pulumi.StringOutput)
}

// Display English name of the OS.
func (o GetImagesImageOutput) OsNameEn() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.OsNameEn }).(pulumi.StringOutput)
}

// The operating system type of the image. Valid values: `windows` and `linux`.
func (o GetImagesImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.OsType }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Platform }).(pulumi.StringOutput)
}

// Product code of the image on the image market.
func (o GetImagesImageOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ProductCode }).(pulumi.StringOutput)
}

// Progress of image creation, presented in percentages.
func (o GetImagesImageOutput) Progress() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Progress }).(pulumi.StringOutput)
}

// Size of the created disk.
func (o GetImagesImageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetImagesImageOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.State }).(pulumi.StringOutput)
}

// The status of the image. The following values are available, Separate multiple parameter values by using commas (,). Default value: `Available`. Valid values:
// * `Creating`: The image is being created.
// * `Waiting`: The image is waiting to be processed.
// * `Available`: The image is available.
// * `UnAvailable`: The image is unavailable.
// * `CreateFailed`: The image failed to be created.
// * `Deprecated`: The image is discontinued.
func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetImagesImageOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetImagesImage) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Specifies whether to check the validity of the request without actually making the request. Valid values:
// * `instance`: The image is already in use and running on an ECS instance.
// * `none`: The image is not in use.
func (o GetImagesImageOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Usage }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesImageDiskDeviceMapping struct {
	// Device information of the created disk: such as /dev/xvdb.
	Device string `pulumi:"device"`
	// Size of the created disk.
	Size string `pulumi:"size"`
	// The ID of the snapshot used to create the custom image.
	SnapshotId string `pulumi:"snapshotId"`
}

// GetImagesImageDiskDeviceMappingInput is an input type that accepts GetImagesImageDiskDeviceMappingArgs and GetImagesImageDiskDeviceMappingOutput values.
// You can construct a concrete instance of `GetImagesImageDiskDeviceMappingInput` via:
//
//          GetImagesImageDiskDeviceMappingArgs{...}
type GetImagesImageDiskDeviceMappingInput interface {
	pulumi.Input

	ToGetImagesImageDiskDeviceMappingOutput() GetImagesImageDiskDeviceMappingOutput
	ToGetImagesImageDiskDeviceMappingOutputWithContext(context.Context) GetImagesImageDiskDeviceMappingOutput
}

type GetImagesImageDiskDeviceMappingArgs struct {
	// Device information of the created disk: such as /dev/xvdb.
	Device pulumi.StringInput `pulumi:"device"`
	// Size of the created disk.
	Size pulumi.StringInput `pulumi:"size"`
	// The ID of the snapshot used to create the custom image.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
}

func (GetImagesImageDiskDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageDiskDeviceMapping)(nil)).Elem()
}

func (i GetImagesImageDiskDeviceMappingArgs) ToGetImagesImageDiskDeviceMappingOutput() GetImagesImageDiskDeviceMappingOutput {
	return i.ToGetImagesImageDiskDeviceMappingOutputWithContext(context.Background())
}

func (i GetImagesImageDiskDeviceMappingArgs) ToGetImagesImageDiskDeviceMappingOutputWithContext(ctx context.Context) GetImagesImageDiskDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageDiskDeviceMappingOutput)
}

// GetImagesImageDiskDeviceMappingArrayInput is an input type that accepts GetImagesImageDiskDeviceMappingArray and GetImagesImageDiskDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetImagesImageDiskDeviceMappingArrayInput` via:
//
//          GetImagesImageDiskDeviceMappingArray{ GetImagesImageDiskDeviceMappingArgs{...} }
type GetImagesImageDiskDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetImagesImageDiskDeviceMappingArrayOutput() GetImagesImageDiskDeviceMappingArrayOutput
	ToGetImagesImageDiskDeviceMappingArrayOutputWithContext(context.Context) GetImagesImageDiskDeviceMappingArrayOutput
}

type GetImagesImageDiskDeviceMappingArray []GetImagesImageDiskDeviceMappingInput

func (GetImagesImageDiskDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageDiskDeviceMapping)(nil)).Elem()
}

func (i GetImagesImageDiskDeviceMappingArray) ToGetImagesImageDiskDeviceMappingArrayOutput() GetImagesImageDiskDeviceMappingArrayOutput {
	return i.ToGetImagesImageDiskDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetImagesImageDiskDeviceMappingArray) ToGetImagesImageDiskDeviceMappingArrayOutputWithContext(ctx context.Context) GetImagesImageDiskDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageDiskDeviceMappingArrayOutput)
}

type GetImagesImageDiskDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetImagesImageDiskDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageDiskDeviceMapping)(nil)).Elem()
}

func (o GetImagesImageDiskDeviceMappingOutput) ToGetImagesImageDiskDeviceMappingOutput() GetImagesImageDiskDeviceMappingOutput {
	return o
}

func (o GetImagesImageDiskDeviceMappingOutput) ToGetImagesImageDiskDeviceMappingOutputWithContext(ctx context.Context) GetImagesImageDiskDeviceMappingOutput {
	return o
}

// Device information of the created disk: such as /dev/xvdb.
func (o GetImagesImageDiskDeviceMappingOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageDiskDeviceMapping) string { return v.Device }).(pulumi.StringOutput)
}

// Size of the created disk.
func (o GetImagesImageDiskDeviceMappingOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageDiskDeviceMapping) string { return v.Size }).(pulumi.StringOutput)
}

// The ID of the snapshot used to create the custom image.
func (o GetImagesImageDiskDeviceMappingOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageDiskDeviceMapping) string { return v.SnapshotId }).(pulumi.StringOutput)
}

type GetImagesImageDiskDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageDiskDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageDiskDeviceMapping)(nil)).Elem()
}

func (o GetImagesImageDiskDeviceMappingArrayOutput) ToGetImagesImageDiskDeviceMappingArrayOutput() GetImagesImageDiskDeviceMappingArrayOutput {
	return o
}

func (o GetImagesImageDiskDeviceMappingArrayOutput) ToGetImagesImageDiskDeviceMappingArrayOutputWithContext(ctx context.Context) GetImagesImageDiskDeviceMappingArrayOutput {
	return o
}

func (o GetImagesImageDiskDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetImagesImageDiskDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageDiskDeviceMapping {
		return vs[0].([]GetImagesImageDiskDeviceMapping)[vs[1].(int)]
	}).(GetImagesImageDiskDeviceMappingOutput)
}

type GetInstanceTypeFamiliesFamily struct {
	// The generation of the instance type family, Valid values: `ecs-1`, `ecs-2`, `ecs-3` and `ecs-4`. For more information, see [Instance type families](https://www.alibabacloud.com/help/doc-detail/25378.htm).
	Generation string `pulumi:"generation"`
	// ID of the instance type family.
	Id string `pulumi:"id"`
	// A list of Zone to launch the instance.
	ZoneIds []string `pulumi:"zoneIds"`
}

// GetInstanceTypeFamiliesFamilyInput is an input type that accepts GetInstanceTypeFamiliesFamilyArgs and GetInstanceTypeFamiliesFamilyOutput values.
// You can construct a concrete instance of `GetInstanceTypeFamiliesFamilyInput` via:
//
//          GetInstanceTypeFamiliesFamilyArgs{...}
type GetInstanceTypeFamiliesFamilyInput interface {
	pulumi.Input

	ToGetInstanceTypeFamiliesFamilyOutput() GetInstanceTypeFamiliesFamilyOutput
	ToGetInstanceTypeFamiliesFamilyOutputWithContext(context.Context) GetInstanceTypeFamiliesFamilyOutput
}

type GetInstanceTypeFamiliesFamilyArgs struct {
	// The generation of the instance type family, Valid values: `ecs-1`, `ecs-2`, `ecs-3` and `ecs-4`. For more information, see [Instance type families](https://www.alibabacloud.com/help/doc-detail/25378.htm).
	Generation pulumi.StringInput `pulumi:"generation"`
	// ID of the instance type family.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of Zone to launch the instance.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (GetInstanceTypeFamiliesFamilyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeFamiliesFamily)(nil)).Elem()
}

func (i GetInstanceTypeFamiliesFamilyArgs) ToGetInstanceTypeFamiliesFamilyOutput() GetInstanceTypeFamiliesFamilyOutput {
	return i.ToGetInstanceTypeFamiliesFamilyOutputWithContext(context.Background())
}

func (i GetInstanceTypeFamiliesFamilyArgs) ToGetInstanceTypeFamiliesFamilyOutputWithContext(ctx context.Context) GetInstanceTypeFamiliesFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeFamiliesFamilyOutput)
}

// GetInstanceTypeFamiliesFamilyArrayInput is an input type that accepts GetInstanceTypeFamiliesFamilyArray and GetInstanceTypeFamiliesFamilyArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeFamiliesFamilyArrayInput` via:
//
//          GetInstanceTypeFamiliesFamilyArray{ GetInstanceTypeFamiliesFamilyArgs{...} }
type GetInstanceTypeFamiliesFamilyArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeFamiliesFamilyArrayOutput() GetInstanceTypeFamiliesFamilyArrayOutput
	ToGetInstanceTypeFamiliesFamilyArrayOutputWithContext(context.Context) GetInstanceTypeFamiliesFamilyArrayOutput
}

type GetInstanceTypeFamiliesFamilyArray []GetInstanceTypeFamiliesFamilyInput

func (GetInstanceTypeFamiliesFamilyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeFamiliesFamily)(nil)).Elem()
}

func (i GetInstanceTypeFamiliesFamilyArray) ToGetInstanceTypeFamiliesFamilyArrayOutput() GetInstanceTypeFamiliesFamilyArrayOutput {
	return i.ToGetInstanceTypeFamiliesFamilyArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeFamiliesFamilyArray) ToGetInstanceTypeFamiliesFamilyArrayOutputWithContext(ctx context.Context) GetInstanceTypeFamiliesFamilyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeFamiliesFamilyArrayOutput)
}

type GetInstanceTypeFamiliesFamilyOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeFamiliesFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeFamiliesFamily)(nil)).Elem()
}

func (o GetInstanceTypeFamiliesFamilyOutput) ToGetInstanceTypeFamiliesFamilyOutput() GetInstanceTypeFamiliesFamilyOutput {
	return o
}

func (o GetInstanceTypeFamiliesFamilyOutput) ToGetInstanceTypeFamiliesFamilyOutputWithContext(ctx context.Context) GetInstanceTypeFamiliesFamilyOutput {
	return o
}

// The generation of the instance type family, Valid values: `ecs-1`, `ecs-2`, `ecs-3` and `ecs-4`. For more information, see [Instance type families](https://www.alibabacloud.com/help/doc-detail/25378.htm).
func (o GetInstanceTypeFamiliesFamilyOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeFamiliesFamily) string { return v.Generation }).(pulumi.StringOutput)
}

// ID of the instance type family.
func (o GetInstanceTypeFamiliesFamilyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeFamiliesFamily) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Zone to launch the instance.
func (o GetInstanceTypeFamiliesFamilyOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeFamiliesFamily) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeFamiliesFamilyArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeFamiliesFamilyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeFamiliesFamily)(nil)).Elem()
}

func (o GetInstanceTypeFamiliesFamilyArrayOutput) ToGetInstanceTypeFamiliesFamilyArrayOutput() GetInstanceTypeFamiliesFamilyArrayOutput {
	return o
}

func (o GetInstanceTypeFamiliesFamilyArrayOutput) ToGetInstanceTypeFamiliesFamilyArrayOutputWithContext(ctx context.Context) GetInstanceTypeFamiliesFamilyArrayOutput {
	return o
}

func (o GetInstanceTypeFamiliesFamilyArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeFamiliesFamilyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeFamiliesFamily {
		return vs[0].([]GetInstanceTypeFamiliesFamily)[vs[1].(int)]
	}).(GetInstanceTypeFamiliesFamilyOutput)
}

type GetInstanceTypesInstanceType struct {
	// List of availability zones that support the instance type.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The burstable instance attribution:
	BurstableInstance GetInstanceTypesInstanceTypeBurstableInstance `pulumi:"burstableInstance"`
	// Filter the results to a specific number of cpu cores.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// Filter the result whose network interface number is no more than `eniAmount`.
	EniAmount int `pulumi:"eniAmount"`
	// The instance type family.
	Family string `pulumi:"family"`
	// The GPU attribution of an instance type:
	Gpu GetInstanceTypesInstanceTypeGpu `pulumi:"gpu"`
	// ID of the instance type.
	Id string `pulumi:"id"`
	// Local storage of an instance type:
	LocalStorage GetInstanceTypesInstanceTypeLocalStorage `pulumi:"localStorage"`
	// Filter the results to a specific memory size in GB.
	MemorySize float64 `pulumi:"memorySize"`
	Price      string  `pulumi:"price"`
}

// GetInstanceTypesInstanceTypeInput is an input type that accepts GetInstanceTypesInstanceTypeArgs and GetInstanceTypesInstanceTypeOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeInput` via:
//
//          GetInstanceTypesInstanceTypeArgs{...}
type GetInstanceTypesInstanceTypeInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeOutput() GetInstanceTypesInstanceTypeOutput
	ToGetInstanceTypesInstanceTypeOutputWithContext(context.Context) GetInstanceTypesInstanceTypeOutput
}

type GetInstanceTypesInstanceTypeArgs struct {
	// List of availability zones that support the instance type.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The burstable instance attribution:
	BurstableInstance GetInstanceTypesInstanceTypeBurstableInstanceInput `pulumi:"burstableInstance"`
	// Filter the results to a specific number of cpu cores.
	CpuCoreCount pulumi.IntInput `pulumi:"cpuCoreCount"`
	// Filter the result whose network interface number is no more than `eniAmount`.
	EniAmount pulumi.IntInput `pulumi:"eniAmount"`
	// The instance type family.
	Family pulumi.StringInput `pulumi:"family"`
	// The GPU attribution of an instance type:
	Gpu GetInstanceTypesInstanceTypeGpuInput `pulumi:"gpu"`
	// ID of the instance type.
	Id pulumi.StringInput `pulumi:"id"`
	// Local storage of an instance type:
	LocalStorage GetInstanceTypesInstanceTypeLocalStorageInput `pulumi:"localStorage"`
	// Filter the results to a specific memory size in GB.
	MemorySize pulumi.Float64Input `pulumi:"memorySize"`
	Price      pulumi.StringInput  `pulumi:"price"`
}

func (GetInstanceTypesInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceType)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeArgs) ToGetInstanceTypesInstanceTypeOutput() GetInstanceTypesInstanceTypeOutput {
	return i.ToGetInstanceTypesInstanceTypeOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeArgs) ToGetInstanceTypesInstanceTypeOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeOutput)
}

// GetInstanceTypesInstanceTypeArrayInput is an input type that accepts GetInstanceTypesInstanceTypeArray and GetInstanceTypesInstanceTypeArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeArrayInput` via:
//
//          GetInstanceTypesInstanceTypeArray{ GetInstanceTypesInstanceTypeArgs{...} }
type GetInstanceTypesInstanceTypeArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeArrayOutput() GetInstanceTypesInstanceTypeArrayOutput
	ToGetInstanceTypesInstanceTypeArrayOutputWithContext(context.Context) GetInstanceTypesInstanceTypeArrayOutput
}

type GetInstanceTypesInstanceTypeArray []GetInstanceTypesInstanceTypeInput

func (GetInstanceTypesInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesInstanceType)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeArray) ToGetInstanceTypesInstanceTypeArrayOutput() GetInstanceTypesInstanceTypeArrayOutput {
	return i.ToGetInstanceTypesInstanceTypeArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeArray) ToGetInstanceTypesInstanceTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeArrayOutput)
}

type GetInstanceTypesInstanceTypeOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceType)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeOutput) ToGetInstanceTypesInstanceTypeOutput() GetInstanceTypesInstanceTypeOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeOutput) ToGetInstanceTypesInstanceTypeOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeOutput {
	return o
}

// List of availability zones that support the instance type.
func (o GetInstanceTypesInstanceTypeOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The burstable instance attribution:
func (o GetInstanceTypesInstanceTypeOutput) BurstableInstance() GetInstanceTypesInstanceTypeBurstableInstanceOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) GetInstanceTypesInstanceTypeBurstableInstance {
		return v.BurstableInstance
	}).(GetInstanceTypesInstanceTypeBurstableInstanceOutput)
}

// Filter the results to a specific number of cpu cores.
func (o GetInstanceTypesInstanceTypeOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// Filter the result whose network interface number is no more than `eniAmount`.
func (o GetInstanceTypesInstanceTypeOutput) EniAmount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.EniAmount }).(pulumi.IntOutput)
}

// The instance type family.
func (o GetInstanceTypesInstanceTypeOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) string { return v.Family }).(pulumi.StringOutput)
}

// The GPU attribution of an instance type:
func (o GetInstanceTypesInstanceTypeOutput) Gpu() GetInstanceTypesInstanceTypeGpuOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) GetInstanceTypesInstanceTypeGpu { return v.Gpu }).(GetInstanceTypesInstanceTypeGpuOutput)
}

// ID of the instance type.
func (o GetInstanceTypesInstanceTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) string { return v.Id }).(pulumi.StringOutput)
}

// Local storage of an instance type:
func (o GetInstanceTypesInstanceTypeOutput) LocalStorage() GetInstanceTypesInstanceTypeLocalStorageOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) GetInstanceTypesInstanceTypeLocalStorage { return v.LocalStorage }).(GetInstanceTypesInstanceTypeLocalStorageOutput)
}

// Filter the results to a specific memory size in GB.
func (o GetInstanceTypesInstanceTypeOutput) MemorySize() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) float64 { return v.MemorySize }).(pulumi.Float64Output)
}

func (o GetInstanceTypesInstanceTypeOutput) Price() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) string { return v.Price }).(pulumi.StringOutput)
}

type GetInstanceTypesInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesInstanceType)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeArrayOutput) ToGetInstanceTypesInstanceTypeArrayOutput() GetInstanceTypesInstanceTypeArrayOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeArrayOutput) ToGetInstanceTypesInstanceTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeArrayOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesInstanceType {
		return vs[0].([]GetInstanceTypesInstanceType)[vs[1].(int)]
	}).(GetInstanceTypesInstanceTypeOutput)
}

type GetInstanceTypesInstanceTypeBurstableInstance struct {
	// The compute performance benchmark CPU credit of a burstable instance.
	BaselineCredit string `pulumi:"baselineCredit"`
	// The initial CPU credit of a burstable instance.
	InitialCredit string `pulumi:"initialCredit"`
}

// GetInstanceTypesInstanceTypeBurstableInstanceInput is an input type that accepts GetInstanceTypesInstanceTypeBurstableInstanceArgs and GetInstanceTypesInstanceTypeBurstableInstanceOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeBurstableInstanceInput` via:
//
//          GetInstanceTypesInstanceTypeBurstableInstanceArgs{...}
type GetInstanceTypesInstanceTypeBurstableInstanceInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeBurstableInstanceOutput() GetInstanceTypesInstanceTypeBurstableInstanceOutput
	ToGetInstanceTypesInstanceTypeBurstableInstanceOutputWithContext(context.Context) GetInstanceTypesInstanceTypeBurstableInstanceOutput
}

type GetInstanceTypesInstanceTypeBurstableInstanceArgs struct {
	// The compute performance benchmark CPU credit of a burstable instance.
	BaselineCredit pulumi.StringInput `pulumi:"baselineCredit"`
	// The initial CPU credit of a burstable instance.
	InitialCredit pulumi.StringInput `pulumi:"initialCredit"`
}

func (GetInstanceTypesInstanceTypeBurstableInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceTypeBurstableInstance)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeBurstableInstanceArgs) ToGetInstanceTypesInstanceTypeBurstableInstanceOutput() GetInstanceTypesInstanceTypeBurstableInstanceOutput {
	return i.ToGetInstanceTypesInstanceTypeBurstableInstanceOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeBurstableInstanceArgs) ToGetInstanceTypesInstanceTypeBurstableInstanceOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeBurstableInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeBurstableInstanceOutput)
}

type GetInstanceTypesInstanceTypeBurstableInstanceOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeBurstableInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceTypeBurstableInstance)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeBurstableInstanceOutput) ToGetInstanceTypesInstanceTypeBurstableInstanceOutput() GetInstanceTypesInstanceTypeBurstableInstanceOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeBurstableInstanceOutput) ToGetInstanceTypesInstanceTypeBurstableInstanceOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeBurstableInstanceOutput {
	return o
}

// The compute performance benchmark CPU credit of a burstable instance.
func (o GetInstanceTypesInstanceTypeBurstableInstanceOutput) BaselineCredit() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeBurstableInstance) string { return v.BaselineCredit }).(pulumi.StringOutput)
}

// The initial CPU credit of a burstable instance.
func (o GetInstanceTypesInstanceTypeBurstableInstanceOutput) InitialCredit() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeBurstableInstance) string { return v.InitialCredit }).(pulumi.StringOutput)
}

type GetInstanceTypesInstanceTypeGpu struct {
	// The number of local storage devices that an instance has been attached to.
	Amount string `pulumi:"amount"`
	// The category of local storage that an instance has been attached to.
	Category string `pulumi:"category"`
}

// GetInstanceTypesInstanceTypeGpuInput is an input type that accepts GetInstanceTypesInstanceTypeGpuArgs and GetInstanceTypesInstanceTypeGpuOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeGpuInput` via:
//
//          GetInstanceTypesInstanceTypeGpuArgs{...}
type GetInstanceTypesInstanceTypeGpuInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeGpuOutput() GetInstanceTypesInstanceTypeGpuOutput
	ToGetInstanceTypesInstanceTypeGpuOutputWithContext(context.Context) GetInstanceTypesInstanceTypeGpuOutput
}

type GetInstanceTypesInstanceTypeGpuArgs struct {
	// The number of local storage devices that an instance has been attached to.
	Amount pulumi.StringInput `pulumi:"amount"`
	// The category of local storage that an instance has been attached to.
	Category pulumi.StringInput `pulumi:"category"`
}

func (GetInstanceTypesInstanceTypeGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceTypeGpu)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeGpuArgs) ToGetInstanceTypesInstanceTypeGpuOutput() GetInstanceTypesInstanceTypeGpuOutput {
	return i.ToGetInstanceTypesInstanceTypeGpuOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeGpuArgs) ToGetInstanceTypesInstanceTypeGpuOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeGpuOutput)
}

type GetInstanceTypesInstanceTypeGpuOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceTypeGpu)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeGpuOutput) ToGetInstanceTypesInstanceTypeGpuOutput() GetInstanceTypesInstanceTypeGpuOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeGpuOutput) ToGetInstanceTypesInstanceTypeGpuOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeGpuOutput {
	return o
}

// The number of local storage devices that an instance has been attached to.
func (o GetInstanceTypesInstanceTypeGpuOutput) Amount() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeGpu) string { return v.Amount }).(pulumi.StringOutput)
}

// The category of local storage that an instance has been attached to.
func (o GetInstanceTypesInstanceTypeGpuOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeGpu) string { return v.Category }).(pulumi.StringOutput)
}

type GetInstanceTypesInstanceTypeLocalStorage struct {
	// The number of local storage devices that an instance has been attached to.
	Amount string `pulumi:"amount"`
	// The capacity of a local storage in GB.
	Capacity string `pulumi:"capacity"`
	// The category of local storage that an instance has been attached to.
	Category string `pulumi:"category"`
}

// GetInstanceTypesInstanceTypeLocalStorageInput is an input type that accepts GetInstanceTypesInstanceTypeLocalStorageArgs and GetInstanceTypesInstanceTypeLocalStorageOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeLocalStorageInput` via:
//
//          GetInstanceTypesInstanceTypeLocalStorageArgs{...}
type GetInstanceTypesInstanceTypeLocalStorageInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeLocalStorageOutput() GetInstanceTypesInstanceTypeLocalStorageOutput
	ToGetInstanceTypesInstanceTypeLocalStorageOutputWithContext(context.Context) GetInstanceTypesInstanceTypeLocalStorageOutput
}

type GetInstanceTypesInstanceTypeLocalStorageArgs struct {
	// The number of local storage devices that an instance has been attached to.
	Amount pulumi.StringInput `pulumi:"amount"`
	// The capacity of a local storage in GB.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The category of local storage that an instance has been attached to.
	Category pulumi.StringInput `pulumi:"category"`
}

func (GetInstanceTypesInstanceTypeLocalStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceTypeLocalStorage)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeLocalStorageArgs) ToGetInstanceTypesInstanceTypeLocalStorageOutput() GetInstanceTypesInstanceTypeLocalStorageOutput {
	return i.ToGetInstanceTypesInstanceTypeLocalStorageOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeLocalStorageArgs) ToGetInstanceTypesInstanceTypeLocalStorageOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeLocalStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeLocalStorageOutput)
}

type GetInstanceTypesInstanceTypeLocalStorageOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeLocalStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceTypeLocalStorage)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeLocalStorageOutput) ToGetInstanceTypesInstanceTypeLocalStorageOutput() GetInstanceTypesInstanceTypeLocalStorageOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeLocalStorageOutput) ToGetInstanceTypesInstanceTypeLocalStorageOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeLocalStorageOutput {
	return o
}

// The number of local storage devices that an instance has been attached to.
func (o GetInstanceTypesInstanceTypeLocalStorageOutput) Amount() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeLocalStorage) string { return v.Amount }).(pulumi.StringOutput)
}

// The capacity of a local storage in GB.
func (o GetInstanceTypesInstanceTypeLocalStorageOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeLocalStorage) string { return v.Capacity }).(pulumi.StringOutput)
}

// The category of local storage that an instance has been attached to.
func (o GetInstanceTypesInstanceTypeLocalStorageOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceTypeLocalStorage) string { return v.Category }).(pulumi.StringOutput)
}

type GetInstancesInstance struct {
	// Availability zone where instances are located.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Instance creation time.
	CreationTime string `pulumi:"creationTime"`
	// Instance description.
	Description string `pulumi:"description"`
	// Description of the attached disks.
	DiskDeviceMappings []GetInstancesInstanceDiskDeviceMapping `pulumi:"diskDeviceMappings"`
	// EIP address the VPC instance is using.
	Eip string `pulumi:"eip"`
	// ID of the instance.
	Id string `pulumi:"id"`
	// The image ID of some ECS instance used.
	ImageId string `pulumi:"imageId"`
	// Instance charge type.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// Instance type.
	InstanceType string `pulumi:"instanceType"`
	// Instance network charge type.
	InternetChargeType string `pulumi:"internetChargeType"`
	// Max output bandwidth for internet.
	InternetMaxBandwidthOut int `pulumi:"internetMaxBandwidthOut"`
	// Key pair the instance is using.
	KeyName string `pulumi:"keyName"`
	// Instance name.
	Name string `pulumi:"name"`
	// Instance private IP address.
	PrivateIp string `pulumi:"privateIp"`
	// Instance public IP address.
	PublicIp string `pulumi:"publicIp"`
	// The RAM role name which the instance attaches.
	RamRoleName string `pulumi:"ramRoleName"`
	// Region ID the instance belongs to.
	RegionId string `pulumi:"regionId"`
	// The Id of resource group which the instance belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// List of security group IDs the instance belongs to.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Spot strategy the instance is using.
	SpotStrategy string `pulumi:"spotStrategy"`
	// Instance status. Valid values: "Creating", "Starting", "Running", "Stopping" and "Stopped". If undefined, all statuses are considered.
	Status string `pulumi:"status"`
	// A map of tags assigned to the ECS instances. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
	// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ecs.GetInstances(ctx, &ecs.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC linked to the instances.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch linked to the instances.
	VswitchId string `pulumi:"vswitchId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Availability zone where instances are located.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Instance creation time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Instance description.
	Description pulumi.StringInput `pulumi:"description"`
	// Description of the attached disks.
	DiskDeviceMappings GetInstancesInstanceDiskDeviceMappingArrayInput `pulumi:"diskDeviceMappings"`
	// EIP address the VPC instance is using.
	Eip pulumi.StringInput `pulumi:"eip"`
	// ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The image ID of some ECS instance used.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Instance charge type.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// Instance type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Instance network charge type.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// Max output bandwidth for internet.
	InternetMaxBandwidthOut pulumi.IntInput `pulumi:"internetMaxBandwidthOut"`
	// Key pair the instance is using.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Instance name.
	Name pulumi.StringInput `pulumi:"name"`
	// Instance private IP address.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// Instance public IP address.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The RAM role name which the instance attaches.
	RamRoleName pulumi.StringInput `pulumi:"ramRoleName"`
	// Region ID the instance belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The Id of resource group which the instance belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// List of security group IDs the instance belongs to.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// Spot strategy the instance is using.
	SpotStrategy pulumi.StringInput `pulumi:"spotStrategy"`
	// Instance status. Valid values: "Creating", "Starting", "Running", "Stopping" and "Stopped". If undefined, all statuses are considered.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the ECS instances. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
	// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ecs.GetInstances(ctx, &ecs.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC linked to the instances.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch linked to the instances.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Availability zone where instances are located.
func (o GetInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Instance creation time.
func (o GetInstancesInstanceOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Instance description.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// Description of the attached disks.
func (o GetInstancesInstanceOutput) DiskDeviceMappings() GetInstancesInstanceDiskDeviceMappingArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceDiskDeviceMapping { return v.DiskDeviceMappings }).(GetInstancesInstanceDiskDeviceMappingArrayOutput)
}

// EIP address the VPC instance is using.
func (o GetInstancesInstanceOutput) Eip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Eip }).(pulumi.StringOutput)
}

// ID of the instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The image ID of some ECS instance used.
func (o GetInstancesInstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ImageId }).(pulumi.StringOutput)
}

// Instance charge type.
func (o GetInstancesInstanceOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// Instance type.
func (o GetInstancesInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Instance network charge type.
func (o GetInstancesInstanceOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// Max output bandwidth for internet.
func (o GetInstancesInstanceOutput) InternetMaxBandwidthOut() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.InternetMaxBandwidthOut }).(pulumi.IntOutput)
}

// Key pair the instance is using.
func (o GetInstancesInstanceOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.KeyName }).(pulumi.StringOutput)
}

// Instance name.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Instance private IP address.
func (o GetInstancesInstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Instance public IP address.
func (o GetInstancesInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The RAM role name which the instance attaches.
func (o GetInstancesInstanceOutput) RamRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RamRoleName }).(pulumi.StringOutput)
}

// Region ID the instance belongs to.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// The Id of resource group which the instance belongs.
func (o GetInstancesInstanceOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// List of security group IDs the instance belongs to.
func (o GetInstancesInstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Spot strategy the instance is using.
func (o GetInstancesInstanceOutput) SpotStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SpotStrategy }).(pulumi.StringOutput)
}

// Instance status. Valid values: "Creating", "Starting", "Running", "Stopping" and "Stopped". If undefined, all statuses are considered.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the ECS instances. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ecs.GetInstances(ctx, &ecs.GetInstancesArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 				"tagKey2": "tagValue2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC linked to the instances.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch linked to the instances.
func (o GetInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceDiskDeviceMapping struct {
	// Cloud disk category.
	Category string `pulumi:"category"`
	// Device information of the created disk: such as /dev/xvdb.
	Device string `pulumi:"device"`
	// Size of the created disk.
	Size int `pulumi:"size"`
	// Cloud disk type: system disk or data disk.
	Type string `pulumi:"type"`
}

// GetInstancesInstanceDiskDeviceMappingInput is an input type that accepts GetInstancesInstanceDiskDeviceMappingArgs and GetInstancesInstanceDiskDeviceMappingOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDiskDeviceMappingInput` via:
//
//          GetInstancesInstanceDiskDeviceMappingArgs{...}
type GetInstancesInstanceDiskDeviceMappingInput interface {
	pulumi.Input

	ToGetInstancesInstanceDiskDeviceMappingOutput() GetInstancesInstanceDiskDeviceMappingOutput
	ToGetInstancesInstanceDiskDeviceMappingOutputWithContext(context.Context) GetInstancesInstanceDiskDeviceMappingOutput
}

type GetInstancesInstanceDiskDeviceMappingArgs struct {
	// Cloud disk category.
	Category pulumi.StringInput `pulumi:"category"`
	// Device information of the created disk: such as /dev/xvdb.
	Device pulumi.StringInput `pulumi:"device"`
	// Size of the created disk.
	Size pulumi.IntInput `pulumi:"size"`
	// Cloud disk type: system disk or data disk.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstancesInstanceDiskDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDiskDeviceMapping)(nil)).Elem()
}

func (i GetInstancesInstanceDiskDeviceMappingArgs) ToGetInstancesInstanceDiskDeviceMappingOutput() GetInstancesInstanceDiskDeviceMappingOutput {
	return i.ToGetInstancesInstanceDiskDeviceMappingOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDiskDeviceMappingArgs) ToGetInstancesInstanceDiskDeviceMappingOutputWithContext(ctx context.Context) GetInstancesInstanceDiskDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDiskDeviceMappingOutput)
}

// GetInstancesInstanceDiskDeviceMappingArrayInput is an input type that accepts GetInstancesInstanceDiskDeviceMappingArray and GetInstancesInstanceDiskDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDiskDeviceMappingArrayInput` via:
//
//          GetInstancesInstanceDiskDeviceMappingArray{ GetInstancesInstanceDiskDeviceMappingArgs{...} }
type GetInstancesInstanceDiskDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceDiskDeviceMappingArrayOutput() GetInstancesInstanceDiskDeviceMappingArrayOutput
	ToGetInstancesInstanceDiskDeviceMappingArrayOutputWithContext(context.Context) GetInstancesInstanceDiskDeviceMappingArrayOutput
}

type GetInstancesInstanceDiskDeviceMappingArray []GetInstancesInstanceDiskDeviceMappingInput

func (GetInstancesInstanceDiskDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDiskDeviceMapping)(nil)).Elem()
}

func (i GetInstancesInstanceDiskDeviceMappingArray) ToGetInstancesInstanceDiskDeviceMappingArrayOutput() GetInstancesInstanceDiskDeviceMappingArrayOutput {
	return i.ToGetInstancesInstanceDiskDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDiskDeviceMappingArray) ToGetInstancesInstanceDiskDeviceMappingArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDiskDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDiskDeviceMappingArrayOutput)
}

type GetInstancesInstanceDiskDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDiskDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDiskDeviceMapping)(nil)).Elem()
}

func (o GetInstancesInstanceDiskDeviceMappingOutput) ToGetInstancesInstanceDiskDeviceMappingOutput() GetInstancesInstanceDiskDeviceMappingOutput {
	return o
}

func (o GetInstancesInstanceDiskDeviceMappingOutput) ToGetInstancesInstanceDiskDeviceMappingOutputWithContext(ctx context.Context) GetInstancesInstanceDiskDeviceMappingOutput {
	return o
}

// Cloud disk category.
func (o GetInstancesInstanceDiskDeviceMappingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDiskDeviceMapping) string { return v.Category }).(pulumi.StringOutput)
}

// Device information of the created disk: such as /dev/xvdb.
func (o GetInstancesInstanceDiskDeviceMappingOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDiskDeviceMapping) string { return v.Device }).(pulumi.StringOutput)
}

// Size of the created disk.
func (o GetInstancesInstanceDiskDeviceMappingOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDiskDeviceMapping) int { return v.Size }).(pulumi.IntOutput)
}

// Cloud disk type: system disk or data disk.
func (o GetInstancesInstanceDiskDeviceMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDiskDeviceMapping) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstancesInstanceDiskDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDiskDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDiskDeviceMapping)(nil)).Elem()
}

func (o GetInstancesInstanceDiskDeviceMappingArrayOutput) ToGetInstancesInstanceDiskDeviceMappingArrayOutput() GetInstancesInstanceDiskDeviceMappingArrayOutput {
	return o
}

func (o GetInstancesInstanceDiskDeviceMappingArrayOutput) ToGetInstancesInstanceDiskDeviceMappingArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDiskDeviceMappingArrayOutput {
	return o
}

func (o GetInstancesInstanceDiskDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceDiskDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceDiskDeviceMapping {
		return vs[0].([]GetInstancesInstanceDiskDeviceMapping)[vs[1].(int)]
	}).(GetInstancesInstanceDiskDeviceMappingOutput)
}

type GetKeyPairsKeyPair struct {
	// A finger print used to retrieve specified key pair.
	FingerPrint string `pulumi:"fingerPrint"`
	// ID of the key pair.
	Id string `pulumi:"id"`
	// A list of ECS instances that has been bound this key pair.
	Instances []GetKeyPairsKeyPairInstance `pulumi:"instances"`
	// Name of the key pair.
	KeyName string `pulumi:"keyName"`
	// The Id of resource group which the key pair belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetKeyPairsKeyPairInput is an input type that accepts GetKeyPairsKeyPairArgs and GetKeyPairsKeyPairOutput values.
// You can construct a concrete instance of `GetKeyPairsKeyPairInput` via:
//
//          GetKeyPairsKeyPairArgs{...}
type GetKeyPairsKeyPairInput interface {
	pulumi.Input

	ToGetKeyPairsKeyPairOutput() GetKeyPairsKeyPairOutput
	ToGetKeyPairsKeyPairOutputWithContext(context.Context) GetKeyPairsKeyPairOutput
}

type GetKeyPairsKeyPairArgs struct {
	// A finger print used to retrieve specified key pair.
	FingerPrint pulumi.StringInput `pulumi:"fingerPrint"`
	// ID of the key pair.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of ECS instances that has been bound this key pair.
	Instances GetKeyPairsKeyPairInstanceArrayInput `pulumi:"instances"`
	// Name of the key pair.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The Id of resource group which the key pair belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetKeyPairsKeyPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairsKeyPair)(nil)).Elem()
}

func (i GetKeyPairsKeyPairArgs) ToGetKeyPairsKeyPairOutput() GetKeyPairsKeyPairOutput {
	return i.ToGetKeyPairsKeyPairOutputWithContext(context.Background())
}

func (i GetKeyPairsKeyPairArgs) ToGetKeyPairsKeyPairOutputWithContext(ctx context.Context) GetKeyPairsKeyPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairsKeyPairOutput)
}

// GetKeyPairsKeyPairArrayInput is an input type that accepts GetKeyPairsKeyPairArray and GetKeyPairsKeyPairArrayOutput values.
// You can construct a concrete instance of `GetKeyPairsKeyPairArrayInput` via:
//
//          GetKeyPairsKeyPairArray{ GetKeyPairsKeyPairArgs{...} }
type GetKeyPairsKeyPairArrayInput interface {
	pulumi.Input

	ToGetKeyPairsKeyPairArrayOutput() GetKeyPairsKeyPairArrayOutput
	ToGetKeyPairsKeyPairArrayOutputWithContext(context.Context) GetKeyPairsKeyPairArrayOutput
}

type GetKeyPairsKeyPairArray []GetKeyPairsKeyPairInput

func (GetKeyPairsKeyPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPairsKeyPair)(nil)).Elem()
}

func (i GetKeyPairsKeyPairArray) ToGetKeyPairsKeyPairArrayOutput() GetKeyPairsKeyPairArrayOutput {
	return i.ToGetKeyPairsKeyPairArrayOutputWithContext(context.Background())
}

func (i GetKeyPairsKeyPairArray) ToGetKeyPairsKeyPairArrayOutputWithContext(ctx context.Context) GetKeyPairsKeyPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairsKeyPairArrayOutput)
}

type GetKeyPairsKeyPairOutput struct{ *pulumi.OutputState }

func (GetKeyPairsKeyPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairsKeyPair)(nil)).Elem()
}

func (o GetKeyPairsKeyPairOutput) ToGetKeyPairsKeyPairOutput() GetKeyPairsKeyPairOutput {
	return o
}

func (o GetKeyPairsKeyPairOutput) ToGetKeyPairsKeyPairOutputWithContext(ctx context.Context) GetKeyPairsKeyPairOutput {
	return o
}

// A finger print used to retrieve specified key pair.
func (o GetKeyPairsKeyPairOutput) FingerPrint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPair) string { return v.FingerPrint }).(pulumi.StringOutput)
}

// ID of the key pair.
func (o GetKeyPairsKeyPairOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPair) string { return v.Id }).(pulumi.StringOutput)
}

// A list of ECS instances that has been bound this key pair.
func (o GetKeyPairsKeyPairOutput) Instances() GetKeyPairsKeyPairInstanceArrayOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPair) []GetKeyPairsKeyPairInstance { return v.Instances }).(GetKeyPairsKeyPairInstanceArrayOutput)
}

// Name of the key pair.
func (o GetKeyPairsKeyPairOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPair) string { return v.KeyName }).(pulumi.StringOutput)
}

// The Id of resource group which the key pair belongs.
func (o GetKeyPairsKeyPairOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPair) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetKeyPairsKeyPairOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPair) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetKeyPairsKeyPairArrayOutput struct{ *pulumi.OutputState }

func (GetKeyPairsKeyPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPairsKeyPair)(nil)).Elem()
}

func (o GetKeyPairsKeyPairArrayOutput) ToGetKeyPairsKeyPairArrayOutput() GetKeyPairsKeyPairArrayOutput {
	return o
}

func (o GetKeyPairsKeyPairArrayOutput) ToGetKeyPairsKeyPairArrayOutputWithContext(ctx context.Context) GetKeyPairsKeyPairArrayOutput {
	return o
}

func (o GetKeyPairsKeyPairArrayOutput) Index(i pulumi.IntInput) GetKeyPairsKeyPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyPairsKeyPair {
		return vs[0].([]GetKeyPairsKeyPair)[vs[1].(int)]
	}).(GetKeyPairsKeyPairOutput)
}

type GetKeyPairsKeyPairInstance struct {
	// The ID of the availability zone where the ECS instance is located.
	AvailabilityZone string `pulumi:"availabilityZone"`
	Description      string `pulumi:"description"`
	ImageId          string `pulumi:"imageId"`
	// The ID of the ECS instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the ECS instance.
	InstanceName string `pulumi:"instanceName"`
	InstanceType string `pulumi:"instanceType"`
	// Name of the key pair.
	KeyName string `pulumi:"keyName"`
	// The private IP address of the ECS instance.
	PrivateIp string `pulumi:"privateIp"`
	// The public IP address or EIP of the ECS instance.
	PublicIp string `pulumi:"publicIp"`
	RegionId string `pulumi:"regionId"`
	Status   string `pulumi:"status"`
	// The ID of the VSwitch attached to the ECS instance.
	VswitchId string `pulumi:"vswitchId"`
}

// GetKeyPairsKeyPairInstanceInput is an input type that accepts GetKeyPairsKeyPairInstanceArgs and GetKeyPairsKeyPairInstanceOutput values.
// You can construct a concrete instance of `GetKeyPairsKeyPairInstanceInput` via:
//
//          GetKeyPairsKeyPairInstanceArgs{...}
type GetKeyPairsKeyPairInstanceInput interface {
	pulumi.Input

	ToGetKeyPairsKeyPairInstanceOutput() GetKeyPairsKeyPairInstanceOutput
	ToGetKeyPairsKeyPairInstanceOutputWithContext(context.Context) GetKeyPairsKeyPairInstanceOutput
}

type GetKeyPairsKeyPairInstanceArgs struct {
	// The ID of the availability zone where the ECS instance is located.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	Description      pulumi.StringInput `pulumi:"description"`
	ImageId          pulumi.StringInput `pulumi:"imageId"`
	// The ID of the ECS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the ECS instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Name of the key pair.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The private IP address of the ECS instance.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The public IP address or EIP of the ECS instance.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	RegionId pulumi.StringInput `pulumi:"regionId"`
	Status   pulumi.StringInput `pulumi:"status"`
	// The ID of the VSwitch attached to the ECS instance.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetKeyPairsKeyPairInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairsKeyPairInstance)(nil)).Elem()
}

func (i GetKeyPairsKeyPairInstanceArgs) ToGetKeyPairsKeyPairInstanceOutput() GetKeyPairsKeyPairInstanceOutput {
	return i.ToGetKeyPairsKeyPairInstanceOutputWithContext(context.Background())
}

func (i GetKeyPairsKeyPairInstanceArgs) ToGetKeyPairsKeyPairInstanceOutputWithContext(ctx context.Context) GetKeyPairsKeyPairInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairsKeyPairInstanceOutput)
}

// GetKeyPairsKeyPairInstanceArrayInput is an input type that accepts GetKeyPairsKeyPairInstanceArray and GetKeyPairsKeyPairInstanceArrayOutput values.
// You can construct a concrete instance of `GetKeyPairsKeyPairInstanceArrayInput` via:
//
//          GetKeyPairsKeyPairInstanceArray{ GetKeyPairsKeyPairInstanceArgs{...} }
type GetKeyPairsKeyPairInstanceArrayInput interface {
	pulumi.Input

	ToGetKeyPairsKeyPairInstanceArrayOutput() GetKeyPairsKeyPairInstanceArrayOutput
	ToGetKeyPairsKeyPairInstanceArrayOutputWithContext(context.Context) GetKeyPairsKeyPairInstanceArrayOutput
}

type GetKeyPairsKeyPairInstanceArray []GetKeyPairsKeyPairInstanceInput

func (GetKeyPairsKeyPairInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPairsKeyPairInstance)(nil)).Elem()
}

func (i GetKeyPairsKeyPairInstanceArray) ToGetKeyPairsKeyPairInstanceArrayOutput() GetKeyPairsKeyPairInstanceArrayOutput {
	return i.ToGetKeyPairsKeyPairInstanceArrayOutputWithContext(context.Background())
}

func (i GetKeyPairsKeyPairInstanceArray) ToGetKeyPairsKeyPairInstanceArrayOutputWithContext(ctx context.Context) GetKeyPairsKeyPairInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairsKeyPairInstanceArrayOutput)
}

type GetKeyPairsKeyPairInstanceOutput struct{ *pulumi.OutputState }

func (GetKeyPairsKeyPairInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairsKeyPairInstance)(nil)).Elem()
}

func (o GetKeyPairsKeyPairInstanceOutput) ToGetKeyPairsKeyPairInstanceOutput() GetKeyPairsKeyPairInstanceOutput {
	return o
}

func (o GetKeyPairsKeyPairInstanceOutput) ToGetKeyPairsKeyPairInstanceOutputWithContext(ctx context.Context) GetKeyPairsKeyPairInstanceOutput {
	return o
}

// The ID of the availability zone where the ECS instance is located.
func (o GetKeyPairsKeyPairInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetKeyPairsKeyPairInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetKeyPairsKeyPairInstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.ImageId }).(pulumi.StringOutput)
}

// The ID of the ECS instance.
func (o GetKeyPairsKeyPairInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the ECS instance.
func (o GetKeyPairsKeyPairInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetKeyPairsKeyPairInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Name of the key pair.
func (o GetKeyPairsKeyPairInstanceOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.KeyName }).(pulumi.StringOutput)
}

// The private IP address of the ECS instance.
func (o GetKeyPairsKeyPairInstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The public IP address or EIP of the ECS instance.
func (o GetKeyPairsKeyPairInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetKeyPairsKeyPairInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

func (o GetKeyPairsKeyPairInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VSwitch attached to the ECS instance.
func (o GetKeyPairsKeyPairInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsKeyPairInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetKeyPairsKeyPairInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetKeyPairsKeyPairInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPairsKeyPairInstance)(nil)).Elem()
}

func (o GetKeyPairsKeyPairInstanceArrayOutput) ToGetKeyPairsKeyPairInstanceArrayOutput() GetKeyPairsKeyPairInstanceArrayOutput {
	return o
}

func (o GetKeyPairsKeyPairInstanceArrayOutput) ToGetKeyPairsKeyPairInstanceArrayOutputWithContext(ctx context.Context) GetKeyPairsKeyPairInstanceArrayOutput {
	return o
}

func (o GetKeyPairsKeyPairInstanceArrayOutput) Index(i pulumi.IntInput) GetKeyPairsKeyPairInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyPairsKeyPairInstance {
		return vs[0].([]GetKeyPairsKeyPairInstance)[vs[1].(int)]
	}).(GetKeyPairsKeyPairInstanceOutput)
}

type GetNetworkInterfacesInterface struct {
	// Creation time of the ENI.
	CreationTime string `pulumi:"creationTime"`
	// Description of the ENI.
	Description string `pulumi:"description"`
	// ID of the ENI.
	Id string `pulumi:"id"`
	// ID of the instance that the ENI is attached to.
	InstanceId string `pulumi:"instanceId"`
	// MAC address of the ENI.
	Mac string `pulumi:"mac"`
	// Name of the ENI.
	Name string `pulumi:"name"`
	// Primary private IP of the ENI.
	PrivateIp string `pulumi:"privateIp"`
	// A list of secondary private IP address that is assigned to the ENI.
	PrivateIps []string `pulumi:"privateIps"`
	// Public IP of the ENI.
	PublicIp string `pulumi:"publicIp"`
	// The Id of resource group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// A list of security group that the ENI belongs to.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Current status of the ENI.
	Status string `pulumi:"status"`
	// A map of tags assigned to the ENI.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC that the ENI belongs to.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch that the ENI is linked to.
	VswitchId string `pulumi:"vswitchId"`
	// ID of the availability zone that the ENI belongs to.
	ZoneId string `pulumi:"zoneId"`
}

// GetNetworkInterfacesInterfaceInput is an input type that accepts GetNetworkInterfacesInterfaceArgs and GetNetworkInterfacesInterfaceOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesInterfaceInput` via:
//
//          GetNetworkInterfacesInterfaceArgs{...}
type GetNetworkInterfacesInterfaceInput interface {
	pulumi.Input

	ToGetNetworkInterfacesInterfaceOutput() GetNetworkInterfacesInterfaceOutput
	ToGetNetworkInterfacesInterfaceOutputWithContext(context.Context) GetNetworkInterfacesInterfaceOutput
}

type GetNetworkInterfacesInterfaceArgs struct {
	// Creation time of the ENI.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the ENI.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the ENI.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the instance that the ENI is attached to.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// MAC address of the ENI.
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of the ENI.
	Name pulumi.StringInput `pulumi:"name"`
	// Primary private IP of the ENI.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// A list of secondary private IP address that is assigned to the ENI.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
	// Public IP of the ENI.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The Id of resource group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// A list of security group that the ENI belongs to.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// Current status of the ENI.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the ENI.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC that the ENI belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch that the ENI is linked to.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// ID of the availability zone that the ENI belongs to.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetNetworkInterfacesInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesInterface)(nil)).Elem()
}

func (i GetNetworkInterfacesInterfaceArgs) ToGetNetworkInterfacesInterfaceOutput() GetNetworkInterfacesInterfaceOutput {
	return i.ToGetNetworkInterfacesInterfaceOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesInterfaceArgs) ToGetNetworkInterfacesInterfaceOutputWithContext(ctx context.Context) GetNetworkInterfacesInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesInterfaceOutput)
}

// GetNetworkInterfacesInterfaceArrayInput is an input type that accepts GetNetworkInterfacesInterfaceArray and GetNetworkInterfacesInterfaceArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesInterfaceArrayInput` via:
//
//          GetNetworkInterfacesInterfaceArray{ GetNetworkInterfacesInterfaceArgs{...} }
type GetNetworkInterfacesInterfaceArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesInterfaceArrayOutput() GetNetworkInterfacesInterfaceArrayOutput
	ToGetNetworkInterfacesInterfaceArrayOutputWithContext(context.Context) GetNetworkInterfacesInterfaceArrayOutput
}

type GetNetworkInterfacesInterfaceArray []GetNetworkInterfacesInterfaceInput

func (GetNetworkInterfacesInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesInterface)(nil)).Elem()
}

func (i GetNetworkInterfacesInterfaceArray) ToGetNetworkInterfacesInterfaceArrayOutput() GetNetworkInterfacesInterfaceArrayOutput {
	return i.ToGetNetworkInterfacesInterfaceArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesInterfaceArray) ToGetNetworkInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesInterfaceArrayOutput)
}

type GetNetworkInterfacesInterfaceOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesInterface)(nil)).Elem()
}

func (o GetNetworkInterfacesInterfaceOutput) ToGetNetworkInterfacesInterfaceOutput() GetNetworkInterfacesInterfaceOutput {
	return o
}

func (o GetNetworkInterfacesInterfaceOutput) ToGetNetworkInterfacesInterfaceOutputWithContext(ctx context.Context) GetNetworkInterfacesInterfaceOutput {
	return o
}

// Creation time of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the instance that the ENI is attached to.
func (o GetNetworkInterfacesInterfaceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.InstanceId }).(pulumi.StringOutput)
}

// MAC address of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.Name }).(pulumi.StringOutput)
}

// Primary private IP of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// A list of secondary private IP address that is assigned to the ENI.
func (o GetNetworkInterfacesInterfaceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Public IP of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The Id of resource group.
func (o GetNetworkInterfacesInterfaceOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// A list of security group that the ENI belongs to.
func (o GetNetworkInterfacesInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Current status of the ENI.
func (o GetNetworkInterfacesInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the ENI.
func (o GetNetworkInterfacesInterfaceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC that the ENI belongs to.
func (o GetNetworkInterfacesInterfaceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch that the ENI is linked to.
func (o GetNetworkInterfacesInterfaceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.VswitchId }).(pulumi.StringOutput)
}

// ID of the availability zone that the ENI belongs to.
func (o GetNetworkInterfacesInterfaceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesInterface) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetNetworkInterfacesInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesInterface)(nil)).Elem()
}

func (o GetNetworkInterfacesInterfaceArrayOutput) ToGetNetworkInterfacesInterfaceArrayOutput() GetNetworkInterfacesInterfaceArrayOutput {
	return o
}

func (o GetNetworkInterfacesInterfaceArrayOutput) ToGetNetworkInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesInterfaceArrayOutput {
	return o
}

func (o GetNetworkInterfacesInterfaceArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesInterface {
		return vs[0].([]GetNetworkInterfacesInterface)[vs[1].(int)]
	}).(GetNetworkInterfacesInterfaceOutput)
}

type GetSecurityGroupRulesRule struct {
	// The description of the rule.
	Description string `pulumi:"description"`
	// Target IP address segment for egress authorization.
	DestCidrIp string `pulumi:"destCidrIp"`
	// Target security group id for ingress authorization.
	DestGroupId string `pulumi:"destGroupId"`
	// Alibaba Cloud account of the target security group.
	DestGroupOwnerAccount string `pulumi:"destGroupOwnerAccount"`
	// Authorization direction. Valid values are: `ingress` or `egress`.
	Direction string `pulumi:"direction"`
	// The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
	IpProtocol string `pulumi:"ipProtocol"`
	// Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
	NicType string `pulumi:"nicType"`
	// Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
	Policy string `pulumi:"policy"`
	// The range of port numbers.
	PortRange string `pulumi:"portRange"`
	// Rule priority.
	Priority int `pulumi:"priority"`
	// Source IP address segment for ingress authorization.
	SourceCidrIp string `pulumi:"sourceCidrIp"`
	// Source security group ID for ingress authorization.
	SourceGroupId string `pulumi:"sourceGroupId"`
	// Alibaba Cloud account of the source security group.
	SourceGroupOwnerAccount string `pulumi:"sourceGroupOwnerAccount"`
}

// GetSecurityGroupRulesRuleInput is an input type that accepts GetSecurityGroupRulesRuleArgs and GetSecurityGroupRulesRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupRulesRuleInput` via:
//
//          GetSecurityGroupRulesRuleArgs{...}
type GetSecurityGroupRulesRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupRulesRuleOutput() GetSecurityGroupRulesRuleOutput
	ToGetSecurityGroupRulesRuleOutputWithContext(context.Context) GetSecurityGroupRulesRuleOutput
}

type GetSecurityGroupRulesRuleArgs struct {
	// The description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Target IP address segment for egress authorization.
	DestCidrIp pulumi.StringInput `pulumi:"destCidrIp"`
	// Target security group id for ingress authorization.
	DestGroupId pulumi.StringInput `pulumi:"destGroupId"`
	// Alibaba Cloud account of the target security group.
	DestGroupOwnerAccount pulumi.StringInput `pulumi:"destGroupOwnerAccount"`
	// Authorization direction. Valid values are: `ingress` or `egress`.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
	NicType pulumi.StringInput `pulumi:"nicType"`
	// Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The range of port numbers.
	PortRange pulumi.StringInput `pulumi:"portRange"`
	// Rule priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Source IP address segment for ingress authorization.
	SourceCidrIp pulumi.StringInput `pulumi:"sourceCidrIp"`
	// Source security group ID for ingress authorization.
	SourceGroupId pulumi.StringInput `pulumi:"sourceGroupId"`
	// Alibaba Cloud account of the source security group.
	SourceGroupOwnerAccount pulumi.StringInput `pulumi:"sourceGroupOwnerAccount"`
}

func (GetSecurityGroupRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesRule)(nil)).Elem()
}

func (i GetSecurityGroupRulesRuleArgs) ToGetSecurityGroupRulesRuleOutput() GetSecurityGroupRulesRuleOutput {
	return i.ToGetSecurityGroupRulesRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupRulesRuleArgs) ToGetSecurityGroupRulesRuleOutputWithContext(ctx context.Context) GetSecurityGroupRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupRulesRuleOutput)
}

// GetSecurityGroupRulesRuleArrayInput is an input type that accepts GetSecurityGroupRulesRuleArray and GetSecurityGroupRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupRulesRuleArrayInput` via:
//
//          GetSecurityGroupRulesRuleArray{ GetSecurityGroupRulesRuleArgs{...} }
type GetSecurityGroupRulesRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupRulesRuleArrayOutput() GetSecurityGroupRulesRuleArrayOutput
	ToGetSecurityGroupRulesRuleArrayOutputWithContext(context.Context) GetSecurityGroupRulesRuleArrayOutput
}

type GetSecurityGroupRulesRuleArray []GetSecurityGroupRulesRuleInput

func (GetSecurityGroupRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupRulesRule)(nil)).Elem()
}

func (i GetSecurityGroupRulesRuleArray) ToGetSecurityGroupRulesRuleArrayOutput() GetSecurityGroupRulesRuleArrayOutput {
	return i.ToGetSecurityGroupRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupRulesRuleArray) ToGetSecurityGroupRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupRulesRuleArrayOutput)
}

type GetSecurityGroupRulesRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesRule)(nil)).Elem()
}

func (o GetSecurityGroupRulesRuleOutput) ToGetSecurityGroupRulesRuleOutput() GetSecurityGroupRulesRuleOutput {
	return o
}

func (o GetSecurityGroupRulesRuleOutput) ToGetSecurityGroupRulesRuleOutputWithContext(ctx context.Context) GetSecurityGroupRulesRuleOutput {
	return o
}

// The description of the rule.
func (o GetSecurityGroupRulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// Target IP address segment for egress authorization.
func (o GetSecurityGroupRulesRuleOutput) DestCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.DestCidrIp }).(pulumi.StringOutput)
}

// Target security group id for ingress authorization.
func (o GetSecurityGroupRulesRuleOutput) DestGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.DestGroupId }).(pulumi.StringOutput)
}

// Alibaba Cloud account of the target security group.
func (o GetSecurityGroupRulesRuleOutput) DestGroupOwnerAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.DestGroupOwnerAccount }).(pulumi.StringOutput)
}

// Authorization direction. Valid values are: `ingress` or `egress`.
func (o GetSecurityGroupRulesRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.Direction }).(pulumi.StringOutput)
}

// The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
func (o GetSecurityGroupRulesRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
func (o GetSecurityGroupRulesRuleOutput) NicType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.NicType }).(pulumi.StringOutput)
}

// Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
func (o GetSecurityGroupRulesRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The range of port numbers.
func (o GetSecurityGroupRulesRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.PortRange }).(pulumi.StringOutput)
}

// Rule priority.
func (o GetSecurityGroupRulesRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Source IP address segment for ingress authorization.
func (o GetSecurityGroupRulesRuleOutput) SourceCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.SourceCidrIp }).(pulumi.StringOutput)
}

// Source security group ID for ingress authorization.
func (o GetSecurityGroupRulesRuleOutput) SourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.SourceGroupId }).(pulumi.StringOutput)
}

// Alibaba Cloud account of the source security group.
func (o GetSecurityGroupRulesRuleOutput) SourceGroupOwnerAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesRule) string { return v.SourceGroupOwnerAccount }).(pulumi.StringOutput)
}

type GetSecurityGroupRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupRulesRule)(nil)).Elem()
}

func (o GetSecurityGroupRulesRuleArrayOutput) ToGetSecurityGroupRulesRuleArrayOutput() GetSecurityGroupRulesRuleArrayOutput {
	return o
}

func (o GetSecurityGroupRulesRuleArrayOutput) ToGetSecurityGroupRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupRulesRuleArrayOutput {
	return o
}

func (o GetSecurityGroupRulesRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupRulesRule {
		return vs[0].([]GetSecurityGroupRulesRule)[vs[1].(int)]
	}).(GetSecurityGroupRulesRuleOutput)
}

type GetSecurityGroupsGroup struct {
	// Creation time of the security group.
	CreationTime string `pulumi:"creationTime"`
	// The description of the security group.
	Description string `pulumi:"description"`
	// The ID of the security group.
	Id string `pulumi:"id"`
	// Whether to allow inner network access.
	InnerAccess bool `pulumi:"innerAccess"`
	// The name of the security group.
	Name string `pulumi:"name"`
	// The Id of resource group which the securityGroup belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The type of the security group.
	SecurityGroupType string `pulumi:"securityGroupType"`
	// A map of tags assigned to the ECS instances. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
	// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ecs.GetSecurityGroups(ctx, &ecs.GetSecurityGroupsArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// Used to retrieve security groups that belong to the specified VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// GetSecurityGroupsGroupInput is an input type that accepts GetSecurityGroupsGroupArgs and GetSecurityGroupsGroupOutput values.
// You can construct a concrete instance of `GetSecurityGroupsGroupInput` via:
//
//          GetSecurityGroupsGroupArgs{...}
type GetSecurityGroupsGroupInput interface {
	pulumi.Input

	ToGetSecurityGroupsGroupOutput() GetSecurityGroupsGroupOutput
	ToGetSecurityGroupsGroupOutputWithContext(context.Context) GetSecurityGroupsGroupOutput
}

type GetSecurityGroupsGroupArgs struct {
	// Creation time of the security group.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the security group.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the security group.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether to allow inner network access.
	InnerAccess pulumi.BoolInput `pulumi:"innerAccess"`
	// The name of the security group.
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of resource group which the securityGroup belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The type of the security group.
	SecurityGroupType pulumi.StringInput `pulumi:"securityGroupType"`
	// A map of tags assigned to the ECS instances. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
	// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ecs.GetSecurityGroups(ctx, &ecs.GetSecurityGroupsArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// Used to retrieve security groups that belong to the specified VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetSecurityGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsGroup)(nil)).Elem()
}

func (i GetSecurityGroupsGroupArgs) ToGetSecurityGroupsGroupOutput() GetSecurityGroupsGroupOutput {
	return i.ToGetSecurityGroupsGroupOutputWithContext(context.Background())
}

func (i GetSecurityGroupsGroupArgs) ToGetSecurityGroupsGroupOutputWithContext(ctx context.Context) GetSecurityGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsGroupOutput)
}

// GetSecurityGroupsGroupArrayInput is an input type that accepts GetSecurityGroupsGroupArray and GetSecurityGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsGroupArrayInput` via:
//
//          GetSecurityGroupsGroupArray{ GetSecurityGroupsGroupArgs{...} }
type GetSecurityGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsGroupArrayOutput() GetSecurityGroupsGroupArrayOutput
	ToGetSecurityGroupsGroupArrayOutputWithContext(context.Context) GetSecurityGroupsGroupArrayOutput
}

type GetSecurityGroupsGroupArray []GetSecurityGroupsGroupInput

func (GetSecurityGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsGroup)(nil)).Elem()
}

func (i GetSecurityGroupsGroupArray) ToGetSecurityGroupsGroupArrayOutput() GetSecurityGroupsGroupArrayOutput {
	return i.ToGetSecurityGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsGroupArray) ToGetSecurityGroupsGroupArrayOutputWithContext(ctx context.Context) GetSecurityGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsGroupArrayOutput)
}

type GetSecurityGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsGroup)(nil)).Elem()
}

func (o GetSecurityGroupsGroupOutput) ToGetSecurityGroupsGroupOutput() GetSecurityGroupsGroupOutput {
	return o
}

func (o GetSecurityGroupsGroupOutput) ToGetSecurityGroupsGroupOutputWithContext(ctx context.Context) GetSecurityGroupsGroupOutput {
	return o
}

// Creation time of the security group.
func (o GetSecurityGroupsGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the security group.
func (o GetSecurityGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o GetSecurityGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to allow inner network access.
func (o GetSecurityGroupsGroupOutput) InnerAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) bool { return v.InnerAccess }).(pulumi.BoolOutput)
}

// The name of the security group.
func (o GetSecurityGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The Id of resource group which the securityGroup belongs.
func (o GetSecurityGroupsGroupOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The type of the security group.
func (o GetSecurityGroupsGroupOutput) SecurityGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.SecurityGroupType }).(pulumi.StringOutput)
}

// A map of tags assigned to the ECS instances. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ecs"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ecs.GetSecurityGroups(ctx, &ecs.GetSecurityGroupsArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 				"tagKey2": "tagValue2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetSecurityGroupsGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Used to retrieve security groups that belong to the specified VPC ID.
func (o GetSecurityGroupsGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetSecurityGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsGroup)(nil)).Elem()
}

func (o GetSecurityGroupsGroupArrayOutput) ToGetSecurityGroupsGroupArrayOutput() GetSecurityGroupsGroupArrayOutput {
	return o
}

func (o GetSecurityGroupsGroupArrayOutput) ToGetSecurityGroupsGroupArrayOutputWithContext(ctx context.Context) GetSecurityGroupsGroupArrayOutput {
	return o
}

func (o GetSecurityGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsGroup {
		return vs[0].([]GetSecurityGroupsGroup)[vs[1].(int)]
	}).(GetSecurityGroupsGroupOutput)
}

type GetSnapshotsSnapshot struct {
	Category string `pulumi:"category"`
	// Creation time. Time of creation. It is represented according to ISO8601, and UTC time is used. Format: YYYY-MM-DDThh:mmZ.
	CreationTime string `pulumi:"creationTime"`
	// Description of the snapshot.
	Description string `pulumi:"description"`
	DiskId      string `pulumi:"diskId"`
	// Whether the snapshot is encrypted or not.
	Encrypted bool `pulumi:"encrypted"`
	// ID of the snapshot.
	Id                         string `pulumi:"id"`
	InstantAccess              bool   `pulumi:"instantAccess"`
	InstantAccessRetentionDays int    `pulumi:"instantAccessRetentionDays"`
	// Name of the snapshot.
	Name string `pulumi:"name"`
	// Product code on the image market place.
	ProductCode string `pulumi:"productCode"`
	// Progress of snapshot creation, presented in percentage.
	Progress string `pulumi:"progress"`
	// The remaining time of a snapshot creation task, in seconds.
	RemainTime      int    `pulumi:"remainTime"`
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The number of days that an automatic snapshot retains in the console for your instance.
	RetentionDays int    `pulumi:"retentionDays"`
	SnapshotId    string `pulumi:"snapshotId"`
	SnapshotName  string `pulumi:"snapshotName"`
	SnapshotSn    string `pulumi:"snapshotSn"`
	SnapshotType  string `pulumi:"snapshotType"`
	// Source disk ID, which is retained after the source disk of the snapshot is deleted.
	SourceDiskId string `pulumi:"sourceDiskId"`
	// Size of the source disk, measured in GB.
	SourceDiskSize string `pulumi:"sourceDiskSize"`
	// Source disk attribute. Value range: `System`,`Data`.
	SourceDiskType    string `pulumi:"sourceDiskType"`
	SourceStorageType string `pulumi:"sourceStorageType"`
	// The snapshot status. Value range: `progressing`, `accomplished` and `failed`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the snapshot.
	Tags map[string]interface{} `pulumi:"tags"`
	Type string                 `pulumi:"type"`
	// Whether the snapshots are used to create resources or not. Value range: `image`, `disk`, `imageDisk` and `none`.
	Usage string `pulumi:"usage"`
}

// GetSnapshotsSnapshotInput is an input type that accepts GetSnapshotsSnapshotArgs and GetSnapshotsSnapshotOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotInput` via:
//
//          GetSnapshotsSnapshotArgs{...}
type GetSnapshotsSnapshotInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput
	ToGetSnapshotsSnapshotOutputWithContext(context.Context) GetSnapshotsSnapshotOutput
}

type GetSnapshotsSnapshotArgs struct {
	Category pulumi.StringInput `pulumi:"category"`
	// Creation time. Time of creation. It is represented according to ISO8601, and UTC time is used. Format: YYYY-MM-DDThh:mmZ.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the snapshot.
	Description pulumi.StringInput `pulumi:"description"`
	DiskId      pulumi.StringInput `pulumi:"diskId"`
	// Whether the snapshot is encrypted or not.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// ID of the snapshot.
	Id                         pulumi.StringInput `pulumi:"id"`
	InstantAccess              pulumi.BoolInput   `pulumi:"instantAccess"`
	InstantAccessRetentionDays pulumi.IntInput    `pulumi:"instantAccessRetentionDays"`
	// Name of the snapshot.
	Name pulumi.StringInput `pulumi:"name"`
	// Product code on the image market place.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// Progress of snapshot creation, presented in percentage.
	Progress pulumi.StringInput `pulumi:"progress"`
	// The remaining time of a snapshot creation task, in seconds.
	RemainTime      pulumi.IntInput    `pulumi:"remainTime"`
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The number of days that an automatic snapshot retains in the console for your instance.
	RetentionDays pulumi.IntInput    `pulumi:"retentionDays"`
	SnapshotId    pulumi.StringInput `pulumi:"snapshotId"`
	SnapshotName  pulumi.StringInput `pulumi:"snapshotName"`
	SnapshotSn    pulumi.StringInput `pulumi:"snapshotSn"`
	SnapshotType  pulumi.StringInput `pulumi:"snapshotType"`
	// Source disk ID, which is retained after the source disk of the snapshot is deleted.
	SourceDiskId pulumi.StringInput `pulumi:"sourceDiskId"`
	// Size of the source disk, measured in GB.
	SourceDiskSize pulumi.StringInput `pulumi:"sourceDiskSize"`
	// Source disk attribute. Value range: `System`,`Data`.
	SourceDiskType    pulumi.StringInput `pulumi:"sourceDiskType"`
	SourceStorageType pulumi.StringInput `pulumi:"sourceStorageType"`
	// The snapshot status. Value range: `progressing`, `accomplished` and `failed`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the snapshot.
	Tags pulumi.MapInput    `pulumi:"tags"`
	Type pulumi.StringInput `pulumi:"type"`
	// Whether the snapshots are used to create resources or not. Value range: `image`, `disk`, `imageDisk` and `none`.
	Usage pulumi.StringInput `pulumi:"usage"`
}

func (GetSnapshotsSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return i.ToGetSnapshotsSnapshotOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotOutput)
}

// GetSnapshotsSnapshotArrayInput is an input type that accepts GetSnapshotsSnapshotArray and GetSnapshotsSnapshotArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotArrayInput` via:
//
//          GetSnapshotsSnapshotArray{ GetSnapshotsSnapshotArgs{...} }
type GetSnapshotsSnapshotArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput
	ToGetSnapshotsSnapshotArrayOutputWithContext(context.Context) GetSnapshotsSnapshotArrayOutput
}

type GetSnapshotsSnapshotArray []GetSnapshotsSnapshotInput

func (GetSnapshotsSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return i.ToGetSnapshotsSnapshotArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotArrayOutput)
}

type GetSnapshotsSnapshotOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return o
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return o
}

func (o GetSnapshotsSnapshotOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Category }).(pulumi.StringOutput)
}

// Creation time. Time of creation. It is represented according to ISO8601, and UTC time is used. Format: YYYY-MM-DDThh:mmZ.
func (o GetSnapshotsSnapshotOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the snapshot.
func (o GetSnapshotsSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.DiskId }).(pulumi.StringOutput)
}

// Whether the snapshot is encrypted or not.
func (o GetSnapshotsSnapshotOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// ID of the snapshot.
func (o GetSnapshotsSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) InstantAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) bool { return v.InstantAccess }).(pulumi.BoolOutput)
}

func (o GetSnapshotsSnapshotOutput) InstantAccessRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.InstantAccessRetentionDays }).(pulumi.IntOutput)
}

// Name of the snapshot.
func (o GetSnapshotsSnapshotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Name }).(pulumi.StringOutput)
}

// Product code on the image market place.
func (o GetSnapshotsSnapshotOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.ProductCode }).(pulumi.StringOutput)
}

// Progress of snapshot creation, presented in percentage.
func (o GetSnapshotsSnapshotOutput) Progress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Progress }).(pulumi.StringOutput)
}

// The remaining time of a snapshot creation task, in seconds.
func (o GetSnapshotsSnapshotOutput) RemainTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.RemainTime }).(pulumi.IntOutput)
}

func (o GetSnapshotsSnapshotOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The number of days that an automatic snapshot retains in the console for your instance.
func (o GetSnapshotsSnapshotOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.RetentionDays }).(pulumi.IntOutput)
}

func (o GetSnapshotsSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) SnapshotSn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotSn }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotType }).(pulumi.StringOutput)
}

// Source disk ID, which is retained after the source disk of the snapshot is deleted.
func (o GetSnapshotsSnapshotOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceDiskId }).(pulumi.StringOutput)
}

// Size of the source disk, measured in GB.
func (o GetSnapshotsSnapshotOutput) SourceDiskSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceDiskSize }).(pulumi.StringOutput)
}

// Source disk attribute. Value range: `System`,`Data`.
func (o GetSnapshotsSnapshotOutput) SourceDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceDiskType }).(pulumi.StringOutput)
}

func (o GetSnapshotsSnapshotOutput) SourceStorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceStorageType }).(pulumi.StringOutput)
}

// The snapshot status. Value range: `progressing`, `accomplished` and `failed`.
func (o GetSnapshotsSnapshotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the snapshot.
func (o GetSnapshotsSnapshotOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetSnapshotsSnapshotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Type }).(pulumi.StringOutput)
}

// Whether the snapshots are used to create resources or not. Value range: `image`, `disk`, `imageDisk` and `none`.
func (o GetSnapshotsSnapshotOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Usage }).(pulumi.StringOutput)
}

type GetSnapshotsSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshot {
		return vs[0].([]GetSnapshotsSnapshot)[vs[1].(int)]
	}).(GetSnapshotsSnapshotOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoProvisioningGroupLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(AutoProvisioningGroupLaunchTemplateConfigArrayOutput{})
	pulumi.RegisterOutputType(DedicatedHostNetworkAttributeOutput{})
	pulumi.RegisterOutputType(DedicatedHostNetworkAttributeArrayOutput{})
	pulumi.RegisterOutputType(EcsLaunchTemplateDataDiskOutput{})
	pulumi.RegisterOutputType(EcsLaunchTemplateDataDiskArrayOutput{})
	pulumi.RegisterOutputType(EcsLaunchTemplateNetworkInterfacesOutput{})
	pulumi.RegisterOutputType(EcsLaunchTemplateNetworkInterfacesPtrOutput{})
	pulumi.RegisterOutputType(EcsLaunchTemplateSystemDiskOutput{})
	pulumi.RegisterOutputType(EcsLaunchTemplateSystemDiskPtrOutput{})
	pulumi.RegisterOutputType(ImageDiskDeviceMappingOutput{})
	pulumi.RegisterOutputType(ImageDiskDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(ImageImportDiskDeviceMappingOutput{})
	pulumi.RegisterOutputType(ImageImportDiskDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(InstanceDataDiskOutput{})
	pulumi.RegisterOutputType(InstanceDataDiskArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateDataDiskOutput{})
	pulumi.RegisterOutputType(LaunchTemplateDataDiskArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfacesOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfacesPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateSystemDiskOutput{})
	pulumi.RegisterOutputType(LaunchTemplateSystemDiskPtrOutput{})
	pulumi.RegisterOutputType(GetAutoSnapshotPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetAutoSnapshotPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetCommandsCommandOutput{})
	pulumi.RegisterOutputType(GetCommandsCommandArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostsHostOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostsHostArrayOutput{})
	pulumi.RegisterOutputType(GetDisksDiskOutput{})
	pulumi.RegisterOutputType(GetDisksDiskArrayOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateDataDiskOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateDataDiskArrayOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateSystemDiskOutput{})
	pulumi.RegisterOutputType(GetEcsLaunchTemplatesTemplateSystemDiskArrayOutput{})
	pulumi.RegisterOutputType(GetEcsSnapshotsSnapshotOutput{})
	pulumi.RegisterOutputType(GetEcsSnapshotsSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetEipsEipOutput{})
	pulumi.RegisterOutputType(GetEipsEipArrayOutput{})
	pulumi.RegisterOutputType(GetHpcClustersClusterOutput{})
	pulumi.RegisterOutputType(GetHpcClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageDiskDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetImagesImageDiskDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeFamiliesFamilyOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeFamiliesFamilyArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeBurstableInstanceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeGpuOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeLocalStorageOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDiskDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDiskDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetKeyPairsKeyPairOutput{})
	pulumi.RegisterOutputType(GetKeyPairsKeyPairArrayOutput{})
	pulumi.RegisterOutputType(GetKeyPairsKeyPairInstanceOutput{})
	pulumi.RegisterOutputType(GetKeyPairsKeyPairInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesInterfaceOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupRulesRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotArrayOutput{})
}
