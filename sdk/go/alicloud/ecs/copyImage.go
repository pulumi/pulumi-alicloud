// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CopyImage struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput `pulumi:"description"`
	Encrypted   pulumi.BoolPtrOutput   `pulumi:"encrypted"`
	Force       pulumi.BoolPtrOutput   `pulumi:"force"`
	ImageName   pulumi.StringOutput    `pulumi:"imageName"`
	KmsKeyId    pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// Deprecated: Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
	Name           pulumi.StringOutput `pulumi:"name"`
	SourceImageId  pulumi.StringOutput `pulumi:"sourceImageId"`
	SourceRegionId pulumi.StringOutput `pulumi:"sourceRegionId"`
	Tags           pulumi.MapOutput    `pulumi:"tags"`
}

// NewCopyImage registers a new resource with the given unique name, arguments, and options.
func NewCopyImage(ctx *pulumi.Context,
	name string, args *CopyImageArgs, opts ...pulumi.ResourceOption) (*CopyImage, error) {
	if args == nil || args.SourceImageId == nil {
		return nil, errors.New("missing required argument 'SourceImageId'")
	}
	if args == nil || args.SourceRegionId == nil {
		return nil, errors.New("missing required argument 'SourceRegionId'")
	}
	if args == nil {
		args = &CopyImageArgs{}
	}
	var resource CopyImage
	err := ctx.RegisterResource("alicloud:ecs/copyImage:CopyImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCopyImage gets an existing CopyImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCopyImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CopyImageState, opts ...pulumi.ResourceOption) (*CopyImage, error) {
	var resource CopyImage
	err := ctx.ReadResource("alicloud:ecs/copyImage:CopyImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CopyImage resources.
type copyImageState struct {
	Description *string `pulumi:"description"`
	Encrypted   *bool   `pulumi:"encrypted"`
	Force       *bool   `pulumi:"force"`
	ImageName   *string `pulumi:"imageName"`
	KmsKeyId    *string `pulumi:"kmsKeyId"`
	// Deprecated: Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
	Name           *string                `pulumi:"name"`
	SourceImageId  *string                `pulumi:"sourceImageId"`
	SourceRegionId *string                `pulumi:"sourceRegionId"`
	Tags           map[string]interface{} `pulumi:"tags"`
}

type CopyImageState struct {
	Description pulumi.StringPtrInput
	Encrypted   pulumi.BoolPtrInput
	Force       pulumi.BoolPtrInput
	ImageName   pulumi.StringPtrInput
	KmsKeyId    pulumi.StringPtrInput
	// Deprecated: Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
	Name           pulumi.StringPtrInput
	SourceImageId  pulumi.StringPtrInput
	SourceRegionId pulumi.StringPtrInput
	Tags           pulumi.MapInput
}

func (CopyImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*copyImageState)(nil)).Elem()
}

type copyImageArgs struct {
	Description *string `pulumi:"description"`
	Encrypted   *bool   `pulumi:"encrypted"`
	Force       *bool   `pulumi:"force"`
	ImageName   *string `pulumi:"imageName"`
	KmsKeyId    *string `pulumi:"kmsKeyId"`
	// Deprecated: Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
	Name           *string                `pulumi:"name"`
	SourceImageId  string                 `pulumi:"sourceImageId"`
	SourceRegionId string                 `pulumi:"sourceRegionId"`
	Tags           map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a CopyImage resource.
type CopyImageArgs struct {
	Description pulumi.StringPtrInput
	Encrypted   pulumi.BoolPtrInput
	Force       pulumi.BoolPtrInput
	ImageName   pulumi.StringPtrInput
	KmsKeyId    pulumi.StringPtrInput
	// Deprecated: Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
	Name           pulumi.StringPtrInput
	SourceImageId  pulumi.StringInput
	SourceRegionId pulumi.StringInput
	Tags           pulumi.MapInput
}

func (CopyImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*copyImageArgs)(nil)).Elem()
}

type CopyImageInput interface {
	pulumi.Input

	ToCopyImageOutput() CopyImageOutput
	ToCopyImageOutputWithContext(ctx context.Context) CopyImageOutput
}

func (CopyImage) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyImage)(nil)).Elem()
}

func (i CopyImage) ToCopyImageOutput() CopyImageOutput {
	return i.ToCopyImageOutputWithContext(context.Background())
}

func (i CopyImage) ToCopyImageOutputWithContext(ctx context.Context) CopyImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyImageOutput)
}

type CopyImageOutput struct {
	*pulumi.OutputState
}

func (CopyImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyImageOutput)(nil)).Elem()
}

func (o CopyImageOutput) ToCopyImageOutput() CopyImageOutput {
	return o
}

func (o CopyImageOutput) ToCopyImageOutputWithContext(ctx context.Context) CopyImageOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CopyImageOutput{})
}
