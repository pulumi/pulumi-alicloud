// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package threatdetection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type HoneypotPresetMeta struct {
	// Burp counter.
	Burp string `pulumi:"burp"`
	// Social traceability.
	PortraitOption *bool `pulumi:"portraitOption"`
	// Git countered.
	TrojanGit *string `pulumi:"trojanGit"`
}

// HoneypotPresetMetaInput is an input type that accepts HoneypotPresetMetaArgs and HoneypotPresetMetaOutput values.
// You can construct a concrete instance of `HoneypotPresetMetaInput` via:
//
//	HoneypotPresetMetaArgs{...}
type HoneypotPresetMetaInput interface {
	pulumi.Input

	ToHoneypotPresetMetaOutput() HoneypotPresetMetaOutput
	ToHoneypotPresetMetaOutputWithContext(context.Context) HoneypotPresetMetaOutput
}

type HoneypotPresetMetaArgs struct {
	// Burp counter.
	Burp pulumi.StringInput `pulumi:"burp"`
	// Social traceability.
	PortraitOption pulumi.BoolPtrInput `pulumi:"portraitOption"`
	// Git countered.
	TrojanGit pulumi.StringPtrInput `pulumi:"trojanGit"`
}

func (HoneypotPresetMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoneypotPresetMeta)(nil)).Elem()
}

func (i HoneypotPresetMetaArgs) ToHoneypotPresetMetaOutput() HoneypotPresetMetaOutput {
	return i.ToHoneypotPresetMetaOutputWithContext(context.Background())
}

func (i HoneypotPresetMetaArgs) ToHoneypotPresetMetaOutputWithContext(ctx context.Context) HoneypotPresetMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotPresetMetaOutput)
}

func (i HoneypotPresetMetaArgs) ToHoneypotPresetMetaPtrOutput() HoneypotPresetMetaPtrOutput {
	return i.ToHoneypotPresetMetaPtrOutputWithContext(context.Background())
}

func (i HoneypotPresetMetaArgs) ToHoneypotPresetMetaPtrOutputWithContext(ctx context.Context) HoneypotPresetMetaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotPresetMetaOutput).ToHoneypotPresetMetaPtrOutputWithContext(ctx)
}

// HoneypotPresetMetaPtrInput is an input type that accepts HoneypotPresetMetaArgs, HoneypotPresetMetaPtr and HoneypotPresetMetaPtrOutput values.
// You can construct a concrete instance of `HoneypotPresetMetaPtrInput` via:
//
//	        HoneypotPresetMetaArgs{...}
//
//	or:
//
//	        nil
type HoneypotPresetMetaPtrInput interface {
	pulumi.Input

	ToHoneypotPresetMetaPtrOutput() HoneypotPresetMetaPtrOutput
	ToHoneypotPresetMetaPtrOutputWithContext(context.Context) HoneypotPresetMetaPtrOutput
}

type honeypotPresetMetaPtrType HoneypotPresetMetaArgs

func HoneypotPresetMetaPtr(v *HoneypotPresetMetaArgs) HoneypotPresetMetaPtrInput {
	return (*honeypotPresetMetaPtrType)(v)
}

func (*honeypotPresetMetaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HoneypotPresetMeta)(nil)).Elem()
}

func (i *honeypotPresetMetaPtrType) ToHoneypotPresetMetaPtrOutput() HoneypotPresetMetaPtrOutput {
	return i.ToHoneypotPresetMetaPtrOutputWithContext(context.Background())
}

func (i *honeypotPresetMetaPtrType) ToHoneypotPresetMetaPtrOutputWithContext(ctx context.Context) HoneypotPresetMetaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotPresetMetaPtrOutput)
}

type HoneypotPresetMetaOutput struct{ *pulumi.OutputState }

func (HoneypotPresetMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoneypotPresetMeta)(nil)).Elem()
}

func (o HoneypotPresetMetaOutput) ToHoneypotPresetMetaOutput() HoneypotPresetMetaOutput {
	return o
}

func (o HoneypotPresetMetaOutput) ToHoneypotPresetMetaOutputWithContext(ctx context.Context) HoneypotPresetMetaOutput {
	return o
}

func (o HoneypotPresetMetaOutput) ToHoneypotPresetMetaPtrOutput() HoneypotPresetMetaPtrOutput {
	return o.ToHoneypotPresetMetaPtrOutputWithContext(context.Background())
}

func (o HoneypotPresetMetaOutput) ToHoneypotPresetMetaPtrOutputWithContext(ctx context.Context) HoneypotPresetMetaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HoneypotPresetMeta) *HoneypotPresetMeta {
		return &v
	}).(HoneypotPresetMetaPtrOutput)
}

// Burp counter.
func (o HoneypotPresetMetaOutput) Burp() pulumi.StringOutput {
	return o.ApplyT(func(v HoneypotPresetMeta) string { return v.Burp }).(pulumi.StringOutput)
}

// Social traceability.
func (o HoneypotPresetMetaOutput) PortraitOption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HoneypotPresetMeta) *bool { return v.PortraitOption }).(pulumi.BoolPtrOutput)
}

// Git countered.
func (o HoneypotPresetMetaOutput) TrojanGit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HoneypotPresetMeta) *string { return v.TrojanGit }).(pulumi.StringPtrOutput)
}

type HoneypotPresetMetaPtrOutput struct{ *pulumi.OutputState }

func (HoneypotPresetMetaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HoneypotPresetMeta)(nil)).Elem()
}

func (o HoneypotPresetMetaPtrOutput) ToHoneypotPresetMetaPtrOutput() HoneypotPresetMetaPtrOutput {
	return o
}

func (o HoneypotPresetMetaPtrOutput) ToHoneypotPresetMetaPtrOutputWithContext(ctx context.Context) HoneypotPresetMetaPtrOutput {
	return o
}

func (o HoneypotPresetMetaPtrOutput) Elem() HoneypotPresetMetaOutput {
	return o.ApplyT(func(v *HoneypotPresetMeta) HoneypotPresetMeta {
		if v != nil {
			return *v
		}
		var ret HoneypotPresetMeta
		return ret
	}).(HoneypotPresetMetaOutput)
}

// Burp counter.
func (o HoneypotPresetMetaPtrOutput) Burp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HoneypotPresetMeta) *string {
		if v == nil {
			return nil
		}
		return &v.Burp
	}).(pulumi.StringPtrOutput)
}

// Social traceability.
func (o HoneypotPresetMetaPtrOutput) PortraitOption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HoneypotPresetMeta) *bool {
		if v == nil {
			return nil
		}
		return v.PortraitOption
	}).(pulumi.BoolPtrOutput)
}

// Git countered.
func (o HoneypotPresetMetaPtrOutput) TrojanGit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HoneypotPresetMeta) *string {
		if v == nil {
			return nil
		}
		return v.TrojanGit
	}).(pulumi.StringPtrOutput)
}

type HoneypotProbeHoneypotBindList struct {
	// List of listening ports.See the following `Block BindPortList`.
	BindPortLists []HoneypotProbeHoneypotBindListBindPortList `pulumi:"bindPortLists"`
	// Honeypot ID.
	HoneypotId *string `pulumi:"honeypotId"`
}

// HoneypotProbeHoneypotBindListInput is an input type that accepts HoneypotProbeHoneypotBindListArgs and HoneypotProbeHoneypotBindListOutput values.
// You can construct a concrete instance of `HoneypotProbeHoneypotBindListInput` via:
//
//	HoneypotProbeHoneypotBindListArgs{...}
type HoneypotProbeHoneypotBindListInput interface {
	pulumi.Input

	ToHoneypotProbeHoneypotBindListOutput() HoneypotProbeHoneypotBindListOutput
	ToHoneypotProbeHoneypotBindListOutputWithContext(context.Context) HoneypotProbeHoneypotBindListOutput
}

type HoneypotProbeHoneypotBindListArgs struct {
	// List of listening ports.See the following `Block BindPortList`.
	BindPortLists HoneypotProbeHoneypotBindListBindPortListArrayInput `pulumi:"bindPortLists"`
	// Honeypot ID.
	HoneypotId pulumi.StringPtrInput `pulumi:"honeypotId"`
}

func (HoneypotProbeHoneypotBindListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoneypotProbeHoneypotBindList)(nil)).Elem()
}

func (i HoneypotProbeHoneypotBindListArgs) ToHoneypotProbeHoneypotBindListOutput() HoneypotProbeHoneypotBindListOutput {
	return i.ToHoneypotProbeHoneypotBindListOutputWithContext(context.Background())
}

func (i HoneypotProbeHoneypotBindListArgs) ToHoneypotProbeHoneypotBindListOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotProbeHoneypotBindListOutput)
}

// HoneypotProbeHoneypotBindListArrayInput is an input type that accepts HoneypotProbeHoneypotBindListArray and HoneypotProbeHoneypotBindListArrayOutput values.
// You can construct a concrete instance of `HoneypotProbeHoneypotBindListArrayInput` via:
//
//	HoneypotProbeHoneypotBindListArray{ HoneypotProbeHoneypotBindListArgs{...} }
type HoneypotProbeHoneypotBindListArrayInput interface {
	pulumi.Input

	ToHoneypotProbeHoneypotBindListArrayOutput() HoneypotProbeHoneypotBindListArrayOutput
	ToHoneypotProbeHoneypotBindListArrayOutputWithContext(context.Context) HoneypotProbeHoneypotBindListArrayOutput
}

type HoneypotProbeHoneypotBindListArray []HoneypotProbeHoneypotBindListInput

func (HoneypotProbeHoneypotBindListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoneypotProbeHoneypotBindList)(nil)).Elem()
}

func (i HoneypotProbeHoneypotBindListArray) ToHoneypotProbeHoneypotBindListArrayOutput() HoneypotProbeHoneypotBindListArrayOutput {
	return i.ToHoneypotProbeHoneypotBindListArrayOutputWithContext(context.Background())
}

func (i HoneypotProbeHoneypotBindListArray) ToHoneypotProbeHoneypotBindListArrayOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotProbeHoneypotBindListArrayOutput)
}

type HoneypotProbeHoneypotBindListOutput struct{ *pulumi.OutputState }

func (HoneypotProbeHoneypotBindListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoneypotProbeHoneypotBindList)(nil)).Elem()
}

func (o HoneypotProbeHoneypotBindListOutput) ToHoneypotProbeHoneypotBindListOutput() HoneypotProbeHoneypotBindListOutput {
	return o
}

func (o HoneypotProbeHoneypotBindListOutput) ToHoneypotProbeHoneypotBindListOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListOutput {
	return o
}

// List of listening ports.See the following `Block BindPortList`.
func (o HoneypotProbeHoneypotBindListOutput) BindPortLists() HoneypotProbeHoneypotBindListBindPortListArrayOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindList) []HoneypotProbeHoneypotBindListBindPortList {
		return v.BindPortLists
	}).(HoneypotProbeHoneypotBindListBindPortListArrayOutput)
}

// Honeypot ID.
func (o HoneypotProbeHoneypotBindListOutput) HoneypotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindList) *string { return v.HoneypotId }).(pulumi.StringPtrOutput)
}

type HoneypotProbeHoneypotBindListArrayOutput struct{ *pulumi.OutputState }

func (HoneypotProbeHoneypotBindListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoneypotProbeHoneypotBindList)(nil)).Elem()
}

func (o HoneypotProbeHoneypotBindListArrayOutput) ToHoneypotProbeHoneypotBindListArrayOutput() HoneypotProbeHoneypotBindListArrayOutput {
	return o
}

func (o HoneypotProbeHoneypotBindListArrayOutput) ToHoneypotProbeHoneypotBindListArrayOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListArrayOutput {
	return o
}

func (o HoneypotProbeHoneypotBindListArrayOutput) Index(i pulumi.IntInput) HoneypotProbeHoneypotBindListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoneypotProbeHoneypotBindList {
		return vs[0].([]HoneypotProbeHoneypotBindList)[vs[1].(int)]
	}).(HoneypotProbeHoneypotBindListOutput)
}

type HoneypotProbeHoneypotBindListBindPortList struct {
	// Whether to bind the port.
	BindPort *bool `pulumi:"bindPort"`
	// End port.
	EndPort *int `pulumi:"endPort"`
	// Whether the port is fixed.
	Fixed *bool `pulumi:"fixed"`
	// Start port.
	StartPort *int `pulumi:"startPort"`
	// Destination port.
	TargetPort *int `pulumi:"targetPort"`
}

// HoneypotProbeHoneypotBindListBindPortListInput is an input type that accepts HoneypotProbeHoneypotBindListBindPortListArgs and HoneypotProbeHoneypotBindListBindPortListOutput values.
// You can construct a concrete instance of `HoneypotProbeHoneypotBindListBindPortListInput` via:
//
//	HoneypotProbeHoneypotBindListBindPortListArgs{...}
type HoneypotProbeHoneypotBindListBindPortListInput interface {
	pulumi.Input

	ToHoneypotProbeHoneypotBindListBindPortListOutput() HoneypotProbeHoneypotBindListBindPortListOutput
	ToHoneypotProbeHoneypotBindListBindPortListOutputWithContext(context.Context) HoneypotProbeHoneypotBindListBindPortListOutput
}

type HoneypotProbeHoneypotBindListBindPortListArgs struct {
	// Whether to bind the port.
	BindPort pulumi.BoolPtrInput `pulumi:"bindPort"`
	// End port.
	EndPort pulumi.IntPtrInput `pulumi:"endPort"`
	// Whether the port is fixed.
	Fixed pulumi.BoolPtrInput `pulumi:"fixed"`
	// Start port.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Destination port.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (HoneypotProbeHoneypotBindListBindPortListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoneypotProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (i HoneypotProbeHoneypotBindListBindPortListArgs) ToHoneypotProbeHoneypotBindListBindPortListOutput() HoneypotProbeHoneypotBindListBindPortListOutput {
	return i.ToHoneypotProbeHoneypotBindListBindPortListOutputWithContext(context.Background())
}

func (i HoneypotProbeHoneypotBindListBindPortListArgs) ToHoneypotProbeHoneypotBindListBindPortListOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListBindPortListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotProbeHoneypotBindListBindPortListOutput)
}

// HoneypotProbeHoneypotBindListBindPortListArrayInput is an input type that accepts HoneypotProbeHoneypotBindListBindPortListArray and HoneypotProbeHoneypotBindListBindPortListArrayOutput values.
// You can construct a concrete instance of `HoneypotProbeHoneypotBindListBindPortListArrayInput` via:
//
//	HoneypotProbeHoneypotBindListBindPortListArray{ HoneypotProbeHoneypotBindListBindPortListArgs{...} }
type HoneypotProbeHoneypotBindListBindPortListArrayInput interface {
	pulumi.Input

	ToHoneypotProbeHoneypotBindListBindPortListArrayOutput() HoneypotProbeHoneypotBindListBindPortListArrayOutput
	ToHoneypotProbeHoneypotBindListBindPortListArrayOutputWithContext(context.Context) HoneypotProbeHoneypotBindListBindPortListArrayOutput
}

type HoneypotProbeHoneypotBindListBindPortListArray []HoneypotProbeHoneypotBindListBindPortListInput

func (HoneypotProbeHoneypotBindListBindPortListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoneypotProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (i HoneypotProbeHoneypotBindListBindPortListArray) ToHoneypotProbeHoneypotBindListBindPortListArrayOutput() HoneypotProbeHoneypotBindListBindPortListArrayOutput {
	return i.ToHoneypotProbeHoneypotBindListBindPortListArrayOutputWithContext(context.Background())
}

func (i HoneypotProbeHoneypotBindListBindPortListArray) ToHoneypotProbeHoneypotBindListBindPortListArrayOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListBindPortListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoneypotProbeHoneypotBindListBindPortListArrayOutput)
}

type HoneypotProbeHoneypotBindListBindPortListOutput struct{ *pulumi.OutputState }

func (HoneypotProbeHoneypotBindListBindPortListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoneypotProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (o HoneypotProbeHoneypotBindListBindPortListOutput) ToHoneypotProbeHoneypotBindListBindPortListOutput() HoneypotProbeHoneypotBindListBindPortListOutput {
	return o
}

func (o HoneypotProbeHoneypotBindListBindPortListOutput) ToHoneypotProbeHoneypotBindListBindPortListOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListBindPortListOutput {
	return o
}

// Whether to bind the port.
func (o HoneypotProbeHoneypotBindListBindPortListOutput) BindPort() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindListBindPortList) *bool { return v.BindPort }).(pulumi.BoolPtrOutput)
}

// End port.
func (o HoneypotProbeHoneypotBindListBindPortListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindListBindPortList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

// Whether the port is fixed.
func (o HoneypotProbeHoneypotBindListBindPortListOutput) Fixed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindListBindPortList) *bool { return v.Fixed }).(pulumi.BoolPtrOutput)
}

// Start port.
func (o HoneypotProbeHoneypotBindListBindPortListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindListBindPortList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Destination port.
func (o HoneypotProbeHoneypotBindListBindPortListOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HoneypotProbeHoneypotBindListBindPortList) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type HoneypotProbeHoneypotBindListBindPortListArrayOutput struct{ *pulumi.OutputState }

func (HoneypotProbeHoneypotBindListBindPortListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoneypotProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (o HoneypotProbeHoneypotBindListBindPortListArrayOutput) ToHoneypotProbeHoneypotBindListBindPortListArrayOutput() HoneypotProbeHoneypotBindListBindPortListArrayOutput {
	return o
}

func (o HoneypotProbeHoneypotBindListBindPortListArrayOutput) ToHoneypotProbeHoneypotBindListBindPortListArrayOutputWithContext(ctx context.Context) HoneypotProbeHoneypotBindListBindPortListArrayOutput {
	return o
}

func (o HoneypotProbeHoneypotBindListBindPortListArrayOutput) Index(i pulumi.IntInput) HoneypotProbeHoneypotBindListBindPortListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoneypotProbeHoneypotBindListBindPortList {
		return vs[0].([]HoneypotProbeHoneypotBindListBindPortList)[vs[1].(int)]
	}).(HoneypotProbeHoneypotBindListBindPortListOutput)
}

type SasTrailServiceTrail struct {
	// Service tracking on status. The value is:
	// - **on:** Open
	// - **off:** off.
	Config *string `pulumi:"config"`
	// The timestamp of the last service update. Unit: milliseconds.
	UpdateTime *int `pulumi:"updateTime"`
}

// SasTrailServiceTrailInput is an input type that accepts SasTrailServiceTrailArgs and SasTrailServiceTrailOutput values.
// You can construct a concrete instance of `SasTrailServiceTrailInput` via:
//
//	SasTrailServiceTrailArgs{...}
type SasTrailServiceTrailInput interface {
	pulumi.Input

	ToSasTrailServiceTrailOutput() SasTrailServiceTrailOutput
	ToSasTrailServiceTrailOutputWithContext(context.Context) SasTrailServiceTrailOutput
}

type SasTrailServiceTrailArgs struct {
	// Service tracking on status. The value is:
	// - **on:** Open
	// - **off:** off.
	Config pulumi.StringPtrInput `pulumi:"config"`
	// The timestamp of the last service update. Unit: milliseconds.
	UpdateTime pulumi.IntPtrInput `pulumi:"updateTime"`
}

func (SasTrailServiceTrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasTrailServiceTrail)(nil)).Elem()
}

func (i SasTrailServiceTrailArgs) ToSasTrailServiceTrailOutput() SasTrailServiceTrailOutput {
	return i.ToSasTrailServiceTrailOutputWithContext(context.Background())
}

func (i SasTrailServiceTrailArgs) ToSasTrailServiceTrailOutputWithContext(ctx context.Context) SasTrailServiceTrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTrailServiceTrailOutput)
}

func (i SasTrailServiceTrailArgs) ToSasTrailServiceTrailPtrOutput() SasTrailServiceTrailPtrOutput {
	return i.ToSasTrailServiceTrailPtrOutputWithContext(context.Background())
}

func (i SasTrailServiceTrailArgs) ToSasTrailServiceTrailPtrOutputWithContext(ctx context.Context) SasTrailServiceTrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTrailServiceTrailOutput).ToSasTrailServiceTrailPtrOutputWithContext(ctx)
}

// SasTrailServiceTrailPtrInput is an input type that accepts SasTrailServiceTrailArgs, SasTrailServiceTrailPtr and SasTrailServiceTrailPtrOutput values.
// You can construct a concrete instance of `SasTrailServiceTrailPtrInput` via:
//
//	        SasTrailServiceTrailArgs{...}
//
//	or:
//
//	        nil
type SasTrailServiceTrailPtrInput interface {
	pulumi.Input

	ToSasTrailServiceTrailPtrOutput() SasTrailServiceTrailPtrOutput
	ToSasTrailServiceTrailPtrOutputWithContext(context.Context) SasTrailServiceTrailPtrOutput
}

type sasTrailServiceTrailPtrType SasTrailServiceTrailArgs

func SasTrailServiceTrailPtr(v *SasTrailServiceTrailArgs) SasTrailServiceTrailPtrInput {
	return (*sasTrailServiceTrailPtrType)(v)
}

func (*sasTrailServiceTrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SasTrailServiceTrail)(nil)).Elem()
}

func (i *sasTrailServiceTrailPtrType) ToSasTrailServiceTrailPtrOutput() SasTrailServiceTrailPtrOutput {
	return i.ToSasTrailServiceTrailPtrOutputWithContext(context.Background())
}

func (i *sasTrailServiceTrailPtrType) ToSasTrailServiceTrailPtrOutputWithContext(ctx context.Context) SasTrailServiceTrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTrailServiceTrailPtrOutput)
}

type SasTrailServiceTrailOutput struct{ *pulumi.OutputState }

func (SasTrailServiceTrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasTrailServiceTrail)(nil)).Elem()
}

func (o SasTrailServiceTrailOutput) ToSasTrailServiceTrailOutput() SasTrailServiceTrailOutput {
	return o
}

func (o SasTrailServiceTrailOutput) ToSasTrailServiceTrailOutputWithContext(ctx context.Context) SasTrailServiceTrailOutput {
	return o
}

func (o SasTrailServiceTrailOutput) ToSasTrailServiceTrailPtrOutput() SasTrailServiceTrailPtrOutput {
	return o.ToSasTrailServiceTrailPtrOutputWithContext(context.Background())
}

func (o SasTrailServiceTrailOutput) ToSasTrailServiceTrailPtrOutputWithContext(ctx context.Context) SasTrailServiceTrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SasTrailServiceTrail) *SasTrailServiceTrail {
		return &v
	}).(SasTrailServiceTrailPtrOutput)
}

// Service tracking on status. The value is:
// - **on:** Open
// - **off:** off.
func (o SasTrailServiceTrailOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SasTrailServiceTrail) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// The timestamp of the last service update. Unit: milliseconds.
func (o SasTrailServiceTrailOutput) UpdateTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SasTrailServiceTrail) *int { return v.UpdateTime }).(pulumi.IntPtrOutput)
}

type SasTrailServiceTrailPtrOutput struct{ *pulumi.OutputState }

func (SasTrailServiceTrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SasTrailServiceTrail)(nil)).Elem()
}

func (o SasTrailServiceTrailPtrOutput) ToSasTrailServiceTrailPtrOutput() SasTrailServiceTrailPtrOutput {
	return o
}

func (o SasTrailServiceTrailPtrOutput) ToSasTrailServiceTrailPtrOutputWithContext(ctx context.Context) SasTrailServiceTrailPtrOutput {
	return o
}

func (o SasTrailServiceTrailPtrOutput) Elem() SasTrailServiceTrailOutput {
	return o.ApplyT(func(v *SasTrailServiceTrail) SasTrailServiceTrail {
		if v != nil {
			return *v
		}
		var ret SasTrailServiceTrail
		return ret
	}).(SasTrailServiceTrailOutput)
}

// Service tracking on status. The value is:
// - **on:** Open
// - **off:** off.
func (o SasTrailServiceTrailPtrOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasTrailServiceTrail) *string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringPtrOutput)
}

// The timestamp of the last service update. Unit: milliseconds.
func (o SasTrailServiceTrailPtrOutput) UpdateTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SasTrailServiceTrail) *int {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.IntPtrOutput)
}

type GetAntiBruteForceRulesRule struct {
	// The ID of the defense rule.
	AntiBruteForceRuleId string `pulumi:"antiBruteForceRuleId"`
	// The name of the defense rule.
	AntiBruteForceRuleName string `pulumi:"antiBruteForceRuleName"`
	// Specifies whether to set the defense rule as the default rule.
	DefaultRule bool `pulumi:"defaultRule"`
	// The threshold for the number of failed user logins when the brute-force defense rule takes effect.
	FailCount int `pulumi:"failCount"`
	// The period of time during which logons from an account are not allowed. Unit: minutes.
	ForbiddenTime int `pulumi:"forbiddenTime"`
	// The ID of the defense rule.
	Id string `pulumi:"id"`
	// The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
	Span int `pulumi:"span"`
	// An array consisting of the UUIDs of servers to which the defense rule is applied.
	UuidLists []string `pulumi:"uuidLists"`
}

// GetAntiBruteForceRulesRuleInput is an input type that accepts GetAntiBruteForceRulesRuleArgs and GetAntiBruteForceRulesRuleOutput values.
// You can construct a concrete instance of `GetAntiBruteForceRulesRuleInput` via:
//
//	GetAntiBruteForceRulesRuleArgs{...}
type GetAntiBruteForceRulesRuleInput interface {
	pulumi.Input

	ToGetAntiBruteForceRulesRuleOutput() GetAntiBruteForceRulesRuleOutput
	ToGetAntiBruteForceRulesRuleOutputWithContext(context.Context) GetAntiBruteForceRulesRuleOutput
}

type GetAntiBruteForceRulesRuleArgs struct {
	// The ID of the defense rule.
	AntiBruteForceRuleId pulumi.StringInput `pulumi:"antiBruteForceRuleId"`
	// The name of the defense rule.
	AntiBruteForceRuleName pulumi.StringInput `pulumi:"antiBruteForceRuleName"`
	// Specifies whether to set the defense rule as the default rule.
	DefaultRule pulumi.BoolInput `pulumi:"defaultRule"`
	// The threshold for the number of failed user logins when the brute-force defense rule takes effect.
	FailCount pulumi.IntInput `pulumi:"failCount"`
	// The period of time during which logons from an account are not allowed. Unit: minutes.
	ForbiddenTime pulumi.IntInput `pulumi:"forbiddenTime"`
	// The ID of the defense rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
	Span pulumi.IntInput `pulumi:"span"`
	// An array consisting of the UUIDs of servers to which the defense rule is applied.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (GetAntiBruteForceRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAntiBruteForceRulesRule)(nil)).Elem()
}

func (i GetAntiBruteForceRulesRuleArgs) ToGetAntiBruteForceRulesRuleOutput() GetAntiBruteForceRulesRuleOutput {
	return i.ToGetAntiBruteForceRulesRuleOutputWithContext(context.Background())
}

func (i GetAntiBruteForceRulesRuleArgs) ToGetAntiBruteForceRulesRuleOutputWithContext(ctx context.Context) GetAntiBruteForceRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAntiBruteForceRulesRuleOutput)
}

// GetAntiBruteForceRulesRuleArrayInput is an input type that accepts GetAntiBruteForceRulesRuleArray and GetAntiBruteForceRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetAntiBruteForceRulesRuleArrayInput` via:
//
//	GetAntiBruteForceRulesRuleArray{ GetAntiBruteForceRulesRuleArgs{...} }
type GetAntiBruteForceRulesRuleArrayInput interface {
	pulumi.Input

	ToGetAntiBruteForceRulesRuleArrayOutput() GetAntiBruteForceRulesRuleArrayOutput
	ToGetAntiBruteForceRulesRuleArrayOutputWithContext(context.Context) GetAntiBruteForceRulesRuleArrayOutput
}

type GetAntiBruteForceRulesRuleArray []GetAntiBruteForceRulesRuleInput

func (GetAntiBruteForceRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAntiBruteForceRulesRule)(nil)).Elem()
}

func (i GetAntiBruteForceRulesRuleArray) ToGetAntiBruteForceRulesRuleArrayOutput() GetAntiBruteForceRulesRuleArrayOutput {
	return i.ToGetAntiBruteForceRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetAntiBruteForceRulesRuleArray) ToGetAntiBruteForceRulesRuleArrayOutputWithContext(ctx context.Context) GetAntiBruteForceRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAntiBruteForceRulesRuleArrayOutput)
}

type GetAntiBruteForceRulesRuleOutput struct{ *pulumi.OutputState }

func (GetAntiBruteForceRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAntiBruteForceRulesRule)(nil)).Elem()
}

func (o GetAntiBruteForceRulesRuleOutput) ToGetAntiBruteForceRulesRuleOutput() GetAntiBruteForceRulesRuleOutput {
	return o
}

func (o GetAntiBruteForceRulesRuleOutput) ToGetAntiBruteForceRulesRuleOutputWithContext(ctx context.Context) GetAntiBruteForceRulesRuleOutput {
	return o
}

// The ID of the defense rule.
func (o GetAntiBruteForceRulesRuleOutput) AntiBruteForceRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) string { return v.AntiBruteForceRuleId }).(pulumi.StringOutput)
}

// The name of the defense rule.
func (o GetAntiBruteForceRulesRuleOutput) AntiBruteForceRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) string { return v.AntiBruteForceRuleName }).(pulumi.StringOutput)
}

// Specifies whether to set the defense rule as the default rule.
func (o GetAntiBruteForceRulesRuleOutput) DefaultRule() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) bool { return v.DefaultRule }).(pulumi.BoolOutput)
}

// The threshold for the number of failed user logins when the brute-force defense rule takes effect.
func (o GetAntiBruteForceRulesRuleOutput) FailCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) int { return v.FailCount }).(pulumi.IntOutput)
}

// The period of time during which logons from an account are not allowed. Unit: minutes.
func (o GetAntiBruteForceRulesRuleOutput) ForbiddenTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) int { return v.ForbiddenTime }).(pulumi.IntOutput)
}

// The ID of the defense rule.
func (o GetAntiBruteForceRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
func (o GetAntiBruteForceRulesRuleOutput) Span() pulumi.IntOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) int { return v.Span }).(pulumi.IntOutput)
}

// An array consisting of the UUIDs of servers to which the defense rule is applied.
func (o GetAntiBruteForceRulesRuleOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAntiBruteForceRulesRule) []string { return v.UuidLists }).(pulumi.StringArrayOutput)
}

type GetAntiBruteForceRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAntiBruteForceRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAntiBruteForceRulesRule)(nil)).Elem()
}

func (o GetAntiBruteForceRulesRuleArrayOutput) ToGetAntiBruteForceRulesRuleArrayOutput() GetAntiBruteForceRulesRuleArrayOutput {
	return o
}

func (o GetAntiBruteForceRulesRuleArrayOutput) ToGetAntiBruteForceRulesRuleArrayOutputWithContext(ctx context.Context) GetAntiBruteForceRulesRuleArrayOutput {
	return o
}

func (o GetAntiBruteForceRulesRuleArrayOutput) Index(i pulumi.IntInput) GetAntiBruteForceRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAntiBruteForceRulesRule {
		return vs[0].([]GetAntiBruteForceRulesRule)[vs[1].(int)]
	}).(GetAntiBruteForceRulesRuleOutput)
}

type GetAssetsAsset struct {
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// The ID of the instance.
	Id string `pulumi:"id"`
	// The UUID of the instance.
	Uuid string `pulumi:"uuid"`
}

// GetAssetsAssetInput is an input type that accepts GetAssetsAssetArgs and GetAssetsAssetOutput values.
// You can construct a concrete instance of `GetAssetsAssetInput` via:
//
//	GetAssetsAssetArgs{...}
type GetAssetsAssetInput interface {
	pulumi.Input

	ToGetAssetsAssetOutput() GetAssetsAssetOutput
	ToGetAssetsAssetOutputWithContext(context.Context) GetAssetsAssetOutput
}

type GetAssetsAssetArgs struct {
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The UUID of the instance.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetAssetsAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetsAsset)(nil)).Elem()
}

func (i GetAssetsAssetArgs) ToGetAssetsAssetOutput() GetAssetsAssetOutput {
	return i.ToGetAssetsAssetOutputWithContext(context.Background())
}

func (i GetAssetsAssetArgs) ToGetAssetsAssetOutputWithContext(ctx context.Context) GetAssetsAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssetsAssetOutput)
}

// GetAssetsAssetArrayInput is an input type that accepts GetAssetsAssetArray and GetAssetsAssetArrayOutput values.
// You can construct a concrete instance of `GetAssetsAssetArrayInput` via:
//
//	GetAssetsAssetArray{ GetAssetsAssetArgs{...} }
type GetAssetsAssetArrayInput interface {
	pulumi.Input

	ToGetAssetsAssetArrayOutput() GetAssetsAssetArrayOutput
	ToGetAssetsAssetArrayOutputWithContext(context.Context) GetAssetsAssetArrayOutput
}

type GetAssetsAssetArray []GetAssetsAssetInput

func (GetAssetsAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssetsAsset)(nil)).Elem()
}

func (i GetAssetsAssetArray) ToGetAssetsAssetArrayOutput() GetAssetsAssetArrayOutput {
	return i.ToGetAssetsAssetArrayOutputWithContext(context.Background())
}

func (i GetAssetsAssetArray) ToGetAssetsAssetArrayOutputWithContext(ctx context.Context) GetAssetsAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssetsAssetArrayOutput)
}

type GetAssetsAssetOutput struct{ *pulumi.OutputState }

func (GetAssetsAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetsAsset)(nil)).Elem()
}

func (o GetAssetsAssetOutput) ToGetAssetsAssetOutput() GetAssetsAssetOutput {
	return o
}

func (o GetAssetsAssetOutput) ToGetAssetsAssetOutputWithContext(ctx context.Context) GetAssetsAssetOutput {
	return o
}

// The creation time of the resource
func (o GetAssetsAssetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetsAsset) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetAssetsAssetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetsAsset) string { return v.Id }).(pulumi.StringOutput)
}

// The UUID of the instance.
func (o GetAssetsAssetOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetsAsset) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetAssetsAssetArrayOutput struct{ *pulumi.OutputState }

func (GetAssetsAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssetsAsset)(nil)).Elem()
}

func (o GetAssetsAssetArrayOutput) ToGetAssetsAssetArrayOutput() GetAssetsAssetArrayOutput {
	return o
}

func (o GetAssetsAssetArrayOutput) ToGetAssetsAssetArrayOutputWithContext(ctx context.Context) GetAssetsAssetArrayOutput {
	return o
}

func (o GetAssetsAssetArrayOutput) Index(i pulumi.IntInput) GetAssetsAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssetsAsset {
		return vs[0].([]GetAssetsAsset)[vs[1].(int)]
	}).(GetAssetsAssetOutput)
}

type GetBackupPoliciesPolicy struct {
	// The ID of the anti-ransomware policy.
	BackupPolicyId int `pulumi:"backupPolicyId"`
	// The name of the anti-ransomware policy.
	BackupPolicyName string `pulumi:"backupPolicyName"`
	// The ID of the anti-ransomware policy.
	Id int `pulumi:"id"`
	// The configurations of the anti-ransomware policy.
	Policy string `pulumi:"policy"`
	// The ID of the region that you specified for data backup when you installed the anti-ransomware agent for the server not deployed on Alibaba Cloud.
	PolicyRegionId string `pulumi:"policyRegionId"`
	// The version of the anti-ransomware policy.
	PolicyVersion string `pulumi:"policyVersion"`
	// The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
	Status string `pulumi:"status"`
	// The UUIDs of the servers to which the anti-ransomware policy is applied.
	UuidLists []string `pulumi:"uuidLists"`
}

// GetBackupPoliciesPolicyInput is an input type that accepts GetBackupPoliciesPolicyArgs and GetBackupPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetBackupPoliciesPolicyInput` via:
//
//	GetBackupPoliciesPolicyArgs{...}
type GetBackupPoliciesPolicyInput interface {
	pulumi.Input

	ToGetBackupPoliciesPolicyOutput() GetBackupPoliciesPolicyOutput
	ToGetBackupPoliciesPolicyOutputWithContext(context.Context) GetBackupPoliciesPolicyOutput
}

type GetBackupPoliciesPolicyArgs struct {
	// The ID of the anti-ransomware policy.
	BackupPolicyId pulumi.IntInput `pulumi:"backupPolicyId"`
	// The name of the anti-ransomware policy.
	BackupPolicyName pulumi.StringInput `pulumi:"backupPolicyName"`
	// The ID of the anti-ransomware policy.
	Id pulumi.IntInput `pulumi:"id"`
	// The configurations of the anti-ransomware policy.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The ID of the region that you specified for data backup when you installed the anti-ransomware agent for the server not deployed on Alibaba Cloud.
	PolicyRegionId pulumi.StringInput `pulumi:"policyRegionId"`
	// The version of the anti-ransomware policy.
	PolicyVersion pulumi.StringInput `pulumi:"policyVersion"`
	// The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
	Status pulumi.StringInput `pulumi:"status"`
	// The UUIDs of the servers to which the anti-ransomware policy is applied.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (GetBackupPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupPoliciesPolicy)(nil)).Elem()
}

func (i GetBackupPoliciesPolicyArgs) ToGetBackupPoliciesPolicyOutput() GetBackupPoliciesPolicyOutput {
	return i.ToGetBackupPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetBackupPoliciesPolicyArgs) ToGetBackupPoliciesPolicyOutputWithContext(ctx context.Context) GetBackupPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupPoliciesPolicyOutput)
}

// GetBackupPoliciesPolicyArrayInput is an input type that accepts GetBackupPoliciesPolicyArray and GetBackupPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetBackupPoliciesPolicyArrayInput` via:
//
//	GetBackupPoliciesPolicyArray{ GetBackupPoliciesPolicyArgs{...} }
type GetBackupPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetBackupPoliciesPolicyArrayOutput() GetBackupPoliciesPolicyArrayOutput
	ToGetBackupPoliciesPolicyArrayOutputWithContext(context.Context) GetBackupPoliciesPolicyArrayOutput
}

type GetBackupPoliciesPolicyArray []GetBackupPoliciesPolicyInput

func (GetBackupPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupPoliciesPolicy)(nil)).Elem()
}

func (i GetBackupPoliciesPolicyArray) ToGetBackupPoliciesPolicyArrayOutput() GetBackupPoliciesPolicyArrayOutput {
	return i.ToGetBackupPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetBackupPoliciesPolicyArray) ToGetBackupPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetBackupPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupPoliciesPolicyArrayOutput)
}

type GetBackupPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetBackupPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupPoliciesPolicy)(nil)).Elem()
}

func (o GetBackupPoliciesPolicyOutput) ToGetBackupPoliciesPolicyOutput() GetBackupPoliciesPolicyOutput {
	return o
}

func (o GetBackupPoliciesPolicyOutput) ToGetBackupPoliciesPolicyOutputWithContext(ctx context.Context) GetBackupPoliciesPolicyOutput {
	return o
}

// The ID of the anti-ransomware policy.
func (o GetBackupPoliciesPolicyOutput) BackupPolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) int { return v.BackupPolicyId }).(pulumi.IntOutput)
}

// The name of the anti-ransomware policy.
func (o GetBackupPoliciesPolicyOutput) BackupPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) string { return v.BackupPolicyName }).(pulumi.StringOutput)
}

// The ID of the anti-ransomware policy.
func (o GetBackupPoliciesPolicyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) int { return v.Id }).(pulumi.IntOutput)
}

// The configurations of the anti-ransomware policy.
func (o GetBackupPoliciesPolicyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) string { return v.Policy }).(pulumi.StringOutput)
}

// The ID of the region that you specified for data backup when you installed the anti-ransomware agent for the server not deployed on Alibaba Cloud.
func (o GetBackupPoliciesPolicyOutput) PolicyRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) string { return v.PolicyRegionId }).(pulumi.StringOutput)
}

// The version of the anti-ransomware policy.
func (o GetBackupPoliciesPolicyOutput) PolicyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) string { return v.PolicyVersion }).(pulumi.StringOutput)
}

// The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
func (o GetBackupPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// The UUIDs of the servers to which the anti-ransomware policy is applied.
func (o GetBackupPoliciesPolicyOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupPoliciesPolicy) []string { return v.UuidLists }).(pulumi.StringArrayOutput)
}

type GetBackupPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetBackupPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupPoliciesPolicy)(nil)).Elem()
}

func (o GetBackupPoliciesPolicyArrayOutput) ToGetBackupPoliciesPolicyArrayOutput() GetBackupPoliciesPolicyArrayOutput {
	return o
}

func (o GetBackupPoliciesPolicyArrayOutput) ToGetBackupPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetBackupPoliciesPolicyArrayOutput {
	return o
}

func (o GetBackupPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetBackupPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupPoliciesPolicy {
		return vs[0].([]GetBackupPoliciesPolicy)[vs[1].(int)]
	}).(GetBackupPoliciesPolicyOutput)
}

type GetBaselineStrategiesStrategy struct {
	// The ID of the baseline check policy.
	BaselineStrategyId string `pulumi:"baselineStrategyId"`
	// Policy name.
	BaselineStrategyName string `pulumi:"baselineStrategyName"`
	// The type of policy. Value:-**common**: standard policy-**custom**: custom policy
	CustomType string `pulumi:"customType"`
	// The detection period of the policy.
	CycleDays int `pulumi:"cycleDays"`
	// The detection period of the policy. Value:
	// * **0**: 0:00~06:00
	// * **6**: 6:00~12:00
	// * *12**: 12:00~18:00
	// * **18**: 18:00~24:00
	CycleStartTime int `pulumi:"cycleStartTime"`
	// The baseline check policy execution end time.
	EndTime string `pulumi:"endTime"`
	// The ID of the baseline check policy.
	Id              string `pulumi:"id"`
	RiskSubTypeName string `pulumi:"riskSubTypeName"`
	// The baseline check policy start time.
	StartTime  string `pulumi:"startTime"`
	TargetType string `pulumi:"targetType"`
}

// GetBaselineStrategiesStrategyInput is an input type that accepts GetBaselineStrategiesStrategyArgs and GetBaselineStrategiesStrategyOutput values.
// You can construct a concrete instance of `GetBaselineStrategiesStrategyInput` via:
//
//	GetBaselineStrategiesStrategyArgs{...}
type GetBaselineStrategiesStrategyInput interface {
	pulumi.Input

	ToGetBaselineStrategiesStrategyOutput() GetBaselineStrategiesStrategyOutput
	ToGetBaselineStrategiesStrategyOutputWithContext(context.Context) GetBaselineStrategiesStrategyOutput
}

type GetBaselineStrategiesStrategyArgs struct {
	// The ID of the baseline check policy.
	BaselineStrategyId pulumi.StringInput `pulumi:"baselineStrategyId"`
	// Policy name.
	BaselineStrategyName pulumi.StringInput `pulumi:"baselineStrategyName"`
	// The type of policy. Value:-**common**: standard policy-**custom**: custom policy
	CustomType pulumi.StringInput `pulumi:"customType"`
	// The detection period of the policy.
	CycleDays pulumi.IntInput `pulumi:"cycleDays"`
	// The detection period of the policy. Value:
	// * **0**: 0:00~06:00
	// * **6**: 6:00~12:00
	// * *12**: 12:00~18:00
	// * **18**: 18:00~24:00
	CycleStartTime pulumi.IntInput `pulumi:"cycleStartTime"`
	// The baseline check policy execution end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The ID of the baseline check policy.
	Id              pulumi.StringInput `pulumi:"id"`
	RiskSubTypeName pulumi.StringInput `pulumi:"riskSubTypeName"`
	// The baseline check policy start time.
	StartTime  pulumi.StringInput `pulumi:"startTime"`
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetBaselineStrategiesStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaselineStrategiesStrategy)(nil)).Elem()
}

func (i GetBaselineStrategiesStrategyArgs) ToGetBaselineStrategiesStrategyOutput() GetBaselineStrategiesStrategyOutput {
	return i.ToGetBaselineStrategiesStrategyOutputWithContext(context.Background())
}

func (i GetBaselineStrategiesStrategyArgs) ToGetBaselineStrategiesStrategyOutputWithContext(ctx context.Context) GetBaselineStrategiesStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaselineStrategiesStrategyOutput)
}

// GetBaselineStrategiesStrategyArrayInput is an input type that accepts GetBaselineStrategiesStrategyArray and GetBaselineStrategiesStrategyArrayOutput values.
// You can construct a concrete instance of `GetBaselineStrategiesStrategyArrayInput` via:
//
//	GetBaselineStrategiesStrategyArray{ GetBaselineStrategiesStrategyArgs{...} }
type GetBaselineStrategiesStrategyArrayInput interface {
	pulumi.Input

	ToGetBaselineStrategiesStrategyArrayOutput() GetBaselineStrategiesStrategyArrayOutput
	ToGetBaselineStrategiesStrategyArrayOutputWithContext(context.Context) GetBaselineStrategiesStrategyArrayOutput
}

type GetBaselineStrategiesStrategyArray []GetBaselineStrategiesStrategyInput

func (GetBaselineStrategiesStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaselineStrategiesStrategy)(nil)).Elem()
}

func (i GetBaselineStrategiesStrategyArray) ToGetBaselineStrategiesStrategyArrayOutput() GetBaselineStrategiesStrategyArrayOutput {
	return i.ToGetBaselineStrategiesStrategyArrayOutputWithContext(context.Background())
}

func (i GetBaselineStrategiesStrategyArray) ToGetBaselineStrategiesStrategyArrayOutputWithContext(ctx context.Context) GetBaselineStrategiesStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaselineStrategiesStrategyArrayOutput)
}

type GetBaselineStrategiesStrategyOutput struct{ *pulumi.OutputState }

func (GetBaselineStrategiesStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaselineStrategiesStrategy)(nil)).Elem()
}

func (o GetBaselineStrategiesStrategyOutput) ToGetBaselineStrategiesStrategyOutput() GetBaselineStrategiesStrategyOutput {
	return o
}

func (o GetBaselineStrategiesStrategyOutput) ToGetBaselineStrategiesStrategyOutputWithContext(ctx context.Context) GetBaselineStrategiesStrategyOutput {
	return o
}

// The ID of the baseline check policy.
func (o GetBaselineStrategiesStrategyOutput) BaselineStrategyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.BaselineStrategyId }).(pulumi.StringOutput)
}

// Policy name.
func (o GetBaselineStrategiesStrategyOutput) BaselineStrategyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.BaselineStrategyName }).(pulumi.StringOutput)
}

// The type of policy. Value:-**common**: standard policy-**custom**: custom policy
func (o GetBaselineStrategiesStrategyOutput) CustomType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.CustomType }).(pulumi.StringOutput)
}

// The detection period of the policy.
func (o GetBaselineStrategiesStrategyOutput) CycleDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) int { return v.CycleDays }).(pulumi.IntOutput)
}

// The detection period of the policy. Value:
// * **0**: 0:00~06:00
// * **6**: 6:00~12:00
// * *12**: 12:00~18:00
// * **18**: 18:00~24:00
func (o GetBaselineStrategiesStrategyOutput) CycleStartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) int { return v.CycleStartTime }).(pulumi.IntOutput)
}

// The baseline check policy execution end time.
func (o GetBaselineStrategiesStrategyOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.EndTime }).(pulumi.StringOutput)
}

// The ID of the baseline check policy.
func (o GetBaselineStrategiesStrategyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBaselineStrategiesStrategyOutput) RiskSubTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.RiskSubTypeName }).(pulumi.StringOutput)
}

// The baseline check policy start time.
func (o GetBaselineStrategiesStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

func (o GetBaselineStrategiesStrategyOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaselineStrategiesStrategy) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetBaselineStrategiesStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetBaselineStrategiesStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaselineStrategiesStrategy)(nil)).Elem()
}

func (o GetBaselineStrategiesStrategyArrayOutput) ToGetBaselineStrategiesStrategyArrayOutput() GetBaselineStrategiesStrategyArrayOutput {
	return o
}

func (o GetBaselineStrategiesStrategyArrayOutput) ToGetBaselineStrategiesStrategyArrayOutputWithContext(ctx context.Context) GetBaselineStrategiesStrategyArrayOutput {
	return o
}

func (o GetBaselineStrategiesStrategyArrayOutput) Index(i pulumi.IntInput) GetBaselineStrategiesStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaselineStrategiesStrategy {
		return vs[0].([]GetBaselineStrategiesStrategy)[vs[1].(int)]
	}).(GetBaselineStrategiesStrategyOutput)
}

type GetHoneyPotsPot struct {
	// Honeypot ID.
	HoneypotId string `pulumi:"honeypotId"`
	// The image ID of the honeypot.
	HoneypotImageId string `pulumi:"honeypotImageId"`
	// Honeypot mirror name.
	HoneypotImageName string `pulumi:"honeypotImageName"`
	// Honeypot custom name.
	HoneypotName string `pulumi:"honeypotName"`
	// Honeypot ID. The value is the same as `honeypotId`.
	Id string `pulumi:"id"`
	// The ID of the honeypot management node.
	NodeId string `pulumi:"nodeId"`
	// The custom parameter ID of honeypot.
	PresetId string `pulumi:"presetId"`
	// Honeypot status.
	States []string `pulumi:"states"`
	// The status of the resource
	Status string `pulumi:"status"`
}

// GetHoneyPotsPotInput is an input type that accepts GetHoneyPotsPotArgs and GetHoneyPotsPotOutput values.
// You can construct a concrete instance of `GetHoneyPotsPotInput` via:
//
//	GetHoneyPotsPotArgs{...}
type GetHoneyPotsPotInput interface {
	pulumi.Input

	ToGetHoneyPotsPotOutput() GetHoneyPotsPotOutput
	ToGetHoneyPotsPotOutputWithContext(context.Context) GetHoneyPotsPotOutput
}

type GetHoneyPotsPotArgs struct {
	// Honeypot ID.
	HoneypotId pulumi.StringInput `pulumi:"honeypotId"`
	// The image ID of the honeypot.
	HoneypotImageId pulumi.StringInput `pulumi:"honeypotImageId"`
	// Honeypot mirror name.
	HoneypotImageName pulumi.StringInput `pulumi:"honeypotImageName"`
	// Honeypot custom name.
	HoneypotName pulumi.StringInput `pulumi:"honeypotName"`
	// Honeypot ID. The value is the same as `honeypotId`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the honeypot management node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The custom parameter ID of honeypot.
	PresetId pulumi.StringInput `pulumi:"presetId"`
	// Honeypot status.
	States pulumi.StringArrayInput `pulumi:"states"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetHoneyPotsPotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneyPotsPot)(nil)).Elem()
}

func (i GetHoneyPotsPotArgs) ToGetHoneyPotsPotOutput() GetHoneyPotsPotOutput {
	return i.ToGetHoneyPotsPotOutputWithContext(context.Background())
}

func (i GetHoneyPotsPotArgs) ToGetHoneyPotsPotOutputWithContext(ctx context.Context) GetHoneyPotsPotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneyPotsPotOutput)
}

// GetHoneyPotsPotArrayInput is an input type that accepts GetHoneyPotsPotArray and GetHoneyPotsPotArrayOutput values.
// You can construct a concrete instance of `GetHoneyPotsPotArrayInput` via:
//
//	GetHoneyPotsPotArray{ GetHoneyPotsPotArgs{...} }
type GetHoneyPotsPotArrayInput interface {
	pulumi.Input

	ToGetHoneyPotsPotArrayOutput() GetHoneyPotsPotArrayOutput
	ToGetHoneyPotsPotArrayOutputWithContext(context.Context) GetHoneyPotsPotArrayOutput
}

type GetHoneyPotsPotArray []GetHoneyPotsPotInput

func (GetHoneyPotsPotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneyPotsPot)(nil)).Elem()
}

func (i GetHoneyPotsPotArray) ToGetHoneyPotsPotArrayOutput() GetHoneyPotsPotArrayOutput {
	return i.ToGetHoneyPotsPotArrayOutputWithContext(context.Background())
}

func (i GetHoneyPotsPotArray) ToGetHoneyPotsPotArrayOutputWithContext(ctx context.Context) GetHoneyPotsPotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneyPotsPotArrayOutput)
}

type GetHoneyPotsPotOutput struct{ *pulumi.OutputState }

func (GetHoneyPotsPotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneyPotsPot)(nil)).Elem()
}

func (o GetHoneyPotsPotOutput) ToGetHoneyPotsPotOutput() GetHoneyPotsPotOutput {
	return o
}

func (o GetHoneyPotsPotOutput) ToGetHoneyPotsPotOutputWithContext(ctx context.Context) GetHoneyPotsPotOutput {
	return o
}

// Honeypot ID.
func (o GetHoneyPotsPotOutput) HoneypotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.HoneypotId }).(pulumi.StringOutput)
}

// The image ID of the honeypot.
func (o GetHoneyPotsPotOutput) HoneypotImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.HoneypotImageId }).(pulumi.StringOutput)
}

// Honeypot mirror name.
func (o GetHoneyPotsPotOutput) HoneypotImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.HoneypotImageName }).(pulumi.StringOutput)
}

// Honeypot custom name.
func (o GetHoneyPotsPotOutput) HoneypotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.HoneypotName }).(pulumi.StringOutput)
}

// Honeypot ID. The value is the same as `honeypotId`.
func (o GetHoneyPotsPotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the honeypot management node.
func (o GetHoneyPotsPotOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.NodeId }).(pulumi.StringOutput)
}

// The custom parameter ID of honeypot.
func (o GetHoneyPotsPotOutput) PresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.PresetId }).(pulumi.StringOutput)
}

// Honeypot status.
func (o GetHoneyPotsPotOutput) States() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) []string { return v.States }).(pulumi.StringArrayOutput)
}

// The status of the resource
func (o GetHoneyPotsPotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneyPotsPot) string { return v.Status }).(pulumi.StringOutput)
}

type GetHoneyPotsPotArrayOutput struct{ *pulumi.OutputState }

func (GetHoneyPotsPotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneyPotsPot)(nil)).Elem()
}

func (o GetHoneyPotsPotArrayOutput) ToGetHoneyPotsPotArrayOutput() GetHoneyPotsPotArrayOutput {
	return o
}

func (o GetHoneyPotsPotArrayOutput) ToGetHoneyPotsPotArrayOutputWithContext(ctx context.Context) GetHoneyPotsPotArrayOutput {
	return o
}

func (o GetHoneyPotsPotArrayOutput) Index(i pulumi.IntInput) GetHoneyPotsPotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneyPotsPot {
		return vs[0].([]GetHoneyPotsPot)[vs[1].(int)]
	}).(GetHoneyPotsPotOutput)
}

type GetHoneypotImagesImage struct {
	// The name of the honeypot image display.
	HoneypotImageDisplayName string `pulumi:"honeypotImageDisplayName"`
	// The image ID of the honeypot.
	HoneypotImageId string `pulumi:"honeypotImageId"`
	// Honeypot mirror name.
	HoneypotImageName string `pulumi:"honeypotImageName"`
	// Honeypot mirror type.
	HoneypotImageType string `pulumi:"honeypotImageType"`
	// Honeypot Mirror version.
	HoneypotImageVersion string `pulumi:"honeypotImageVersion"`
	// The image ID of the honeypot.The value is the same as `honeypotImageId`.
	Id string `pulumi:"id"`
	// Ports supported by honeypots. In JSON format. Contains the following fields:-**log_type**: log type-**proto**: Support Protocol-**description**: description-**ports**: supports Port collection-**port_str**: supports port strings-**type**: type
	Multiports string `pulumi:"multiports"`
	// Honeypot-supported protocols.
	Proto string `pulumi:"proto"`
	// Honeypot service port.
	ServicePort string `pulumi:"servicePort"`
	// Honeypot configuration parameter template.
	Template string `pulumi:"template"`
}

// GetHoneypotImagesImageInput is an input type that accepts GetHoneypotImagesImageArgs and GetHoneypotImagesImageOutput values.
// You can construct a concrete instance of `GetHoneypotImagesImageInput` via:
//
//	GetHoneypotImagesImageArgs{...}
type GetHoneypotImagesImageInput interface {
	pulumi.Input

	ToGetHoneypotImagesImageOutput() GetHoneypotImagesImageOutput
	ToGetHoneypotImagesImageOutputWithContext(context.Context) GetHoneypotImagesImageOutput
}

type GetHoneypotImagesImageArgs struct {
	// The name of the honeypot image display.
	HoneypotImageDisplayName pulumi.StringInput `pulumi:"honeypotImageDisplayName"`
	// The image ID of the honeypot.
	HoneypotImageId pulumi.StringInput `pulumi:"honeypotImageId"`
	// Honeypot mirror name.
	HoneypotImageName pulumi.StringInput `pulumi:"honeypotImageName"`
	// Honeypot mirror type.
	HoneypotImageType pulumi.StringInput `pulumi:"honeypotImageType"`
	// Honeypot Mirror version.
	HoneypotImageVersion pulumi.StringInput `pulumi:"honeypotImageVersion"`
	// The image ID of the honeypot.The value is the same as `honeypotImageId`.
	Id pulumi.StringInput `pulumi:"id"`
	// Ports supported by honeypots. In JSON format. Contains the following fields:-**log_type**: log type-**proto**: Support Protocol-**description**: description-**ports**: supports Port collection-**port_str**: supports port strings-**type**: type
	Multiports pulumi.StringInput `pulumi:"multiports"`
	// Honeypot-supported protocols.
	Proto pulumi.StringInput `pulumi:"proto"`
	// Honeypot service port.
	ServicePort pulumi.StringInput `pulumi:"servicePort"`
	// Honeypot configuration parameter template.
	Template pulumi.StringInput `pulumi:"template"`
}

func (GetHoneypotImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotImagesImage)(nil)).Elem()
}

func (i GetHoneypotImagesImageArgs) ToGetHoneypotImagesImageOutput() GetHoneypotImagesImageOutput {
	return i.ToGetHoneypotImagesImageOutputWithContext(context.Background())
}

func (i GetHoneypotImagesImageArgs) ToGetHoneypotImagesImageOutputWithContext(ctx context.Context) GetHoneypotImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotImagesImageOutput)
}

// GetHoneypotImagesImageArrayInput is an input type that accepts GetHoneypotImagesImageArray and GetHoneypotImagesImageArrayOutput values.
// You can construct a concrete instance of `GetHoneypotImagesImageArrayInput` via:
//
//	GetHoneypotImagesImageArray{ GetHoneypotImagesImageArgs{...} }
type GetHoneypotImagesImageArrayInput interface {
	pulumi.Input

	ToGetHoneypotImagesImageArrayOutput() GetHoneypotImagesImageArrayOutput
	ToGetHoneypotImagesImageArrayOutputWithContext(context.Context) GetHoneypotImagesImageArrayOutput
}

type GetHoneypotImagesImageArray []GetHoneypotImagesImageInput

func (GetHoneypotImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotImagesImage)(nil)).Elem()
}

func (i GetHoneypotImagesImageArray) ToGetHoneypotImagesImageArrayOutput() GetHoneypotImagesImageArrayOutput {
	return i.ToGetHoneypotImagesImageArrayOutputWithContext(context.Background())
}

func (i GetHoneypotImagesImageArray) ToGetHoneypotImagesImageArrayOutputWithContext(ctx context.Context) GetHoneypotImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotImagesImageArrayOutput)
}

type GetHoneypotImagesImageOutput struct{ *pulumi.OutputState }

func (GetHoneypotImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotImagesImage)(nil)).Elem()
}

func (o GetHoneypotImagesImageOutput) ToGetHoneypotImagesImageOutput() GetHoneypotImagesImageOutput {
	return o
}

func (o GetHoneypotImagesImageOutput) ToGetHoneypotImagesImageOutputWithContext(ctx context.Context) GetHoneypotImagesImageOutput {
	return o
}

// The name of the honeypot image display.
func (o GetHoneypotImagesImageOutput) HoneypotImageDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.HoneypotImageDisplayName }).(pulumi.StringOutput)
}

// The image ID of the honeypot.
func (o GetHoneypotImagesImageOutput) HoneypotImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.HoneypotImageId }).(pulumi.StringOutput)
}

// Honeypot mirror name.
func (o GetHoneypotImagesImageOutput) HoneypotImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.HoneypotImageName }).(pulumi.StringOutput)
}

// Honeypot mirror type.
func (o GetHoneypotImagesImageOutput) HoneypotImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.HoneypotImageType }).(pulumi.StringOutput)
}

// Honeypot Mirror version.
func (o GetHoneypotImagesImageOutput) HoneypotImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.HoneypotImageVersion }).(pulumi.StringOutput)
}

// The image ID of the honeypot.The value is the same as `honeypotImageId`.
func (o GetHoneypotImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

// Ports supported by honeypots. In JSON format. Contains the following fields:-**log_type**: log type-**proto**: Support Protocol-**description**: description-**ports**: supports Port collection-**port_str**: supports port strings-**type**: type
func (o GetHoneypotImagesImageOutput) Multiports() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.Multiports }).(pulumi.StringOutput)
}

// Honeypot-supported protocols.
func (o GetHoneypotImagesImageOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.Proto }).(pulumi.StringOutput)
}

// Honeypot service port.
func (o GetHoneypotImagesImageOutput) ServicePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.ServicePort }).(pulumi.StringOutput)
}

// Honeypot configuration parameter template.
func (o GetHoneypotImagesImageOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotImagesImage) string { return v.Template }).(pulumi.StringOutput)
}

type GetHoneypotImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotImagesImage)(nil)).Elem()
}

func (o GetHoneypotImagesImageArrayOutput) ToGetHoneypotImagesImageArrayOutput() GetHoneypotImagesImageArrayOutput {
	return o
}

func (o GetHoneypotImagesImageArrayOutput) ToGetHoneypotImagesImageArrayOutputWithContext(ctx context.Context) GetHoneypotImagesImageArrayOutput {
	return o
}

func (o GetHoneypotImagesImageArrayOutput) Index(i pulumi.IntInput) GetHoneypotImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotImagesImage {
		return vs[0].([]GetHoneypotImagesImage)[vs[1].(int)]
	}).(GetHoneypotImagesImageOutput)
}

type GetHoneypotNodesNode struct {
	// Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
	AllowHoneypotAccessInternet bool `pulumi:"allowHoneypotAccessInternet"`
	// Number of probes available.
	AvailableProbeNum int    `pulumi:"availableProbeNum"`
	CreateTime        string `pulumi:"createTime"`
	// The ID of the Honeypot management node.
	Id string `pulumi:"id"`
	// Honeypot management node id.
	NodeId string `pulumi:"nodeId"`
	// The name of the management node.
	NodeName string `pulumi:"nodeName"`
	// Release the collection of network segments.
	SecurityGroupProbeIpLists []string `pulumi:"securityGroupProbeIpLists"`
	Status                    int      `pulumi:"status"`
}

// GetHoneypotNodesNodeInput is an input type that accepts GetHoneypotNodesNodeArgs and GetHoneypotNodesNodeOutput values.
// You can construct a concrete instance of `GetHoneypotNodesNodeInput` via:
//
//	GetHoneypotNodesNodeArgs{...}
type GetHoneypotNodesNodeInput interface {
	pulumi.Input

	ToGetHoneypotNodesNodeOutput() GetHoneypotNodesNodeOutput
	ToGetHoneypotNodesNodeOutputWithContext(context.Context) GetHoneypotNodesNodeOutput
}

type GetHoneypotNodesNodeArgs struct {
	// Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
	AllowHoneypotAccessInternet pulumi.BoolInput `pulumi:"allowHoneypotAccessInternet"`
	// Number of probes available.
	AvailableProbeNum pulumi.IntInput    `pulumi:"availableProbeNum"`
	CreateTime        pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Honeypot management node.
	Id pulumi.StringInput `pulumi:"id"`
	// Honeypot management node id.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The name of the management node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	// Release the collection of network segments.
	SecurityGroupProbeIpLists pulumi.StringArrayInput `pulumi:"securityGroupProbeIpLists"`
	Status                    pulumi.IntInput         `pulumi:"status"`
}

func (GetHoneypotNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotNodesNode)(nil)).Elem()
}

func (i GetHoneypotNodesNodeArgs) ToGetHoneypotNodesNodeOutput() GetHoneypotNodesNodeOutput {
	return i.ToGetHoneypotNodesNodeOutputWithContext(context.Background())
}

func (i GetHoneypotNodesNodeArgs) ToGetHoneypotNodesNodeOutputWithContext(ctx context.Context) GetHoneypotNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotNodesNodeOutput)
}

// GetHoneypotNodesNodeArrayInput is an input type that accepts GetHoneypotNodesNodeArray and GetHoneypotNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetHoneypotNodesNodeArrayInput` via:
//
//	GetHoneypotNodesNodeArray{ GetHoneypotNodesNodeArgs{...} }
type GetHoneypotNodesNodeArrayInput interface {
	pulumi.Input

	ToGetHoneypotNodesNodeArrayOutput() GetHoneypotNodesNodeArrayOutput
	ToGetHoneypotNodesNodeArrayOutputWithContext(context.Context) GetHoneypotNodesNodeArrayOutput
}

type GetHoneypotNodesNodeArray []GetHoneypotNodesNodeInput

func (GetHoneypotNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotNodesNode)(nil)).Elem()
}

func (i GetHoneypotNodesNodeArray) ToGetHoneypotNodesNodeArrayOutput() GetHoneypotNodesNodeArrayOutput {
	return i.ToGetHoneypotNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetHoneypotNodesNodeArray) ToGetHoneypotNodesNodeArrayOutputWithContext(ctx context.Context) GetHoneypotNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotNodesNodeArrayOutput)
}

type GetHoneypotNodesNodeOutput struct{ *pulumi.OutputState }

func (GetHoneypotNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotNodesNode)(nil)).Elem()
}

func (o GetHoneypotNodesNodeOutput) ToGetHoneypotNodesNodeOutput() GetHoneypotNodesNodeOutput {
	return o
}

func (o GetHoneypotNodesNodeOutput) ToGetHoneypotNodesNodeOutputWithContext(ctx context.Context) GetHoneypotNodesNodeOutput {
	return o
}

// Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
func (o GetHoneypotNodesNodeOutput) AllowHoneypotAccessInternet() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) bool { return v.AllowHoneypotAccessInternet }).(pulumi.BoolOutput)
}

// Number of probes available.
func (o GetHoneypotNodesNodeOutput) AvailableProbeNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) int { return v.AvailableProbeNum }).(pulumi.IntOutput)
}

func (o GetHoneypotNodesNodeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Honeypot management node.
func (o GetHoneypotNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

// Honeypot management node id.
func (o GetHoneypotNodesNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The name of the management node.
func (o GetHoneypotNodesNodeOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) string { return v.NodeName }).(pulumi.StringOutput)
}

// Release the collection of network segments.
func (o GetHoneypotNodesNodeOutput) SecurityGroupProbeIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) []string { return v.SecurityGroupProbeIpLists }).(pulumi.StringArrayOutput)
}

func (o GetHoneypotNodesNodeOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoneypotNodesNode) int { return v.Status }).(pulumi.IntOutput)
}

type GetHoneypotNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotNodesNode)(nil)).Elem()
}

func (o GetHoneypotNodesNodeArrayOutput) ToGetHoneypotNodesNodeArrayOutput() GetHoneypotNodesNodeArrayOutput {
	return o
}

func (o GetHoneypotNodesNodeArrayOutput) ToGetHoneypotNodesNodeArrayOutputWithContext(ctx context.Context) GetHoneypotNodesNodeArrayOutput {
	return o
}

func (o GetHoneypotNodesNodeArrayOutput) Index(i pulumi.IntInput) GetHoneypotNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotNodesNode {
		return vs[0].([]GetHoneypotNodesNode)[vs[1].(int)]
	}).(GetHoneypotNodesNodeOutput)
}

type GetHoneypotPresetsPreset struct {
	// Honeypot mirror name
	HoneypotImageName string `pulumi:"honeypotImageName"`
	// Unique ID of honeypot Template.
	HoneypotPresetId string `pulumi:"honeypotPresetId"`
	// The id of the Honeypot template.
	Id string `pulumi:"id"`
	// Honeypot template custom parameters.
	Metas []GetHoneypotPresetsPresetMeta `pulumi:"metas"`
	// Unique id of management node
	NodeId string `pulumi:"nodeId"`
	// Honeypot template custom name
	PresetName string `pulumi:"presetName"`
}

// GetHoneypotPresetsPresetInput is an input type that accepts GetHoneypotPresetsPresetArgs and GetHoneypotPresetsPresetOutput values.
// You can construct a concrete instance of `GetHoneypotPresetsPresetInput` via:
//
//	GetHoneypotPresetsPresetArgs{...}
type GetHoneypotPresetsPresetInput interface {
	pulumi.Input

	ToGetHoneypotPresetsPresetOutput() GetHoneypotPresetsPresetOutput
	ToGetHoneypotPresetsPresetOutputWithContext(context.Context) GetHoneypotPresetsPresetOutput
}

type GetHoneypotPresetsPresetArgs struct {
	// Honeypot mirror name
	HoneypotImageName pulumi.StringInput `pulumi:"honeypotImageName"`
	// Unique ID of honeypot Template.
	HoneypotPresetId pulumi.StringInput `pulumi:"honeypotPresetId"`
	// The id of the Honeypot template.
	Id pulumi.StringInput `pulumi:"id"`
	// Honeypot template custom parameters.
	Metas GetHoneypotPresetsPresetMetaArrayInput `pulumi:"metas"`
	// Unique id of management node
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// Honeypot template custom name
	PresetName pulumi.StringInput `pulumi:"presetName"`
}

func (GetHoneypotPresetsPresetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotPresetsPreset)(nil)).Elem()
}

func (i GetHoneypotPresetsPresetArgs) ToGetHoneypotPresetsPresetOutput() GetHoneypotPresetsPresetOutput {
	return i.ToGetHoneypotPresetsPresetOutputWithContext(context.Background())
}

func (i GetHoneypotPresetsPresetArgs) ToGetHoneypotPresetsPresetOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotPresetsPresetOutput)
}

// GetHoneypotPresetsPresetArrayInput is an input type that accepts GetHoneypotPresetsPresetArray and GetHoneypotPresetsPresetArrayOutput values.
// You can construct a concrete instance of `GetHoneypotPresetsPresetArrayInput` via:
//
//	GetHoneypotPresetsPresetArray{ GetHoneypotPresetsPresetArgs{...} }
type GetHoneypotPresetsPresetArrayInput interface {
	pulumi.Input

	ToGetHoneypotPresetsPresetArrayOutput() GetHoneypotPresetsPresetArrayOutput
	ToGetHoneypotPresetsPresetArrayOutputWithContext(context.Context) GetHoneypotPresetsPresetArrayOutput
}

type GetHoneypotPresetsPresetArray []GetHoneypotPresetsPresetInput

func (GetHoneypotPresetsPresetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotPresetsPreset)(nil)).Elem()
}

func (i GetHoneypotPresetsPresetArray) ToGetHoneypotPresetsPresetArrayOutput() GetHoneypotPresetsPresetArrayOutput {
	return i.ToGetHoneypotPresetsPresetArrayOutputWithContext(context.Background())
}

func (i GetHoneypotPresetsPresetArray) ToGetHoneypotPresetsPresetArrayOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotPresetsPresetArrayOutput)
}

type GetHoneypotPresetsPresetOutput struct{ *pulumi.OutputState }

func (GetHoneypotPresetsPresetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotPresetsPreset)(nil)).Elem()
}

func (o GetHoneypotPresetsPresetOutput) ToGetHoneypotPresetsPresetOutput() GetHoneypotPresetsPresetOutput {
	return o
}

func (o GetHoneypotPresetsPresetOutput) ToGetHoneypotPresetsPresetOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetOutput {
	return o
}

// Honeypot mirror name
func (o GetHoneypotPresetsPresetOutput) HoneypotImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPreset) string { return v.HoneypotImageName }).(pulumi.StringOutput)
}

// Unique ID of honeypot Template.
func (o GetHoneypotPresetsPresetOutput) HoneypotPresetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPreset) string { return v.HoneypotPresetId }).(pulumi.StringOutput)
}

// The id of the Honeypot template.
func (o GetHoneypotPresetsPresetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPreset) string { return v.Id }).(pulumi.StringOutput)
}

// Honeypot template custom parameters.
func (o GetHoneypotPresetsPresetOutput) Metas() GetHoneypotPresetsPresetMetaArrayOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPreset) []GetHoneypotPresetsPresetMeta { return v.Metas }).(GetHoneypotPresetsPresetMetaArrayOutput)
}

// Unique id of management node
func (o GetHoneypotPresetsPresetOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPreset) string { return v.NodeId }).(pulumi.StringOutput)
}

// Honeypot template custom name
func (o GetHoneypotPresetsPresetOutput) PresetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPreset) string { return v.PresetName }).(pulumi.StringOutput)
}

type GetHoneypotPresetsPresetArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotPresetsPresetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotPresetsPreset)(nil)).Elem()
}

func (o GetHoneypotPresetsPresetArrayOutput) ToGetHoneypotPresetsPresetArrayOutput() GetHoneypotPresetsPresetArrayOutput {
	return o
}

func (o GetHoneypotPresetsPresetArrayOutput) ToGetHoneypotPresetsPresetArrayOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetArrayOutput {
	return o
}

func (o GetHoneypotPresetsPresetArrayOutput) Index(i pulumi.IntInput) GetHoneypotPresetsPresetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotPresetsPreset {
		return vs[0].([]GetHoneypotPresetsPreset)[vs[1].(int)]
	}).(GetHoneypotPresetsPresetOutput)
}

type GetHoneypotPresetsPresetMeta struct {
	// Burp counter.
	Burp string `pulumi:"burp"`
	// Social traceability.
	PortraitOption bool `pulumi:"portraitOption"`
	// Git countered.
	TrojanGit string `pulumi:"trojanGit"`
}

// GetHoneypotPresetsPresetMetaInput is an input type that accepts GetHoneypotPresetsPresetMetaArgs and GetHoneypotPresetsPresetMetaOutput values.
// You can construct a concrete instance of `GetHoneypotPresetsPresetMetaInput` via:
//
//	GetHoneypotPresetsPresetMetaArgs{...}
type GetHoneypotPresetsPresetMetaInput interface {
	pulumi.Input

	ToGetHoneypotPresetsPresetMetaOutput() GetHoneypotPresetsPresetMetaOutput
	ToGetHoneypotPresetsPresetMetaOutputWithContext(context.Context) GetHoneypotPresetsPresetMetaOutput
}

type GetHoneypotPresetsPresetMetaArgs struct {
	// Burp counter.
	Burp pulumi.StringInput `pulumi:"burp"`
	// Social traceability.
	PortraitOption pulumi.BoolInput `pulumi:"portraitOption"`
	// Git countered.
	TrojanGit pulumi.StringInput `pulumi:"trojanGit"`
}

func (GetHoneypotPresetsPresetMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotPresetsPresetMeta)(nil)).Elem()
}

func (i GetHoneypotPresetsPresetMetaArgs) ToGetHoneypotPresetsPresetMetaOutput() GetHoneypotPresetsPresetMetaOutput {
	return i.ToGetHoneypotPresetsPresetMetaOutputWithContext(context.Background())
}

func (i GetHoneypotPresetsPresetMetaArgs) ToGetHoneypotPresetsPresetMetaOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotPresetsPresetMetaOutput)
}

// GetHoneypotPresetsPresetMetaArrayInput is an input type that accepts GetHoneypotPresetsPresetMetaArray and GetHoneypotPresetsPresetMetaArrayOutput values.
// You can construct a concrete instance of `GetHoneypotPresetsPresetMetaArrayInput` via:
//
//	GetHoneypotPresetsPresetMetaArray{ GetHoneypotPresetsPresetMetaArgs{...} }
type GetHoneypotPresetsPresetMetaArrayInput interface {
	pulumi.Input

	ToGetHoneypotPresetsPresetMetaArrayOutput() GetHoneypotPresetsPresetMetaArrayOutput
	ToGetHoneypotPresetsPresetMetaArrayOutputWithContext(context.Context) GetHoneypotPresetsPresetMetaArrayOutput
}

type GetHoneypotPresetsPresetMetaArray []GetHoneypotPresetsPresetMetaInput

func (GetHoneypotPresetsPresetMetaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotPresetsPresetMeta)(nil)).Elem()
}

func (i GetHoneypotPresetsPresetMetaArray) ToGetHoneypotPresetsPresetMetaArrayOutput() GetHoneypotPresetsPresetMetaArrayOutput {
	return i.ToGetHoneypotPresetsPresetMetaArrayOutputWithContext(context.Background())
}

func (i GetHoneypotPresetsPresetMetaArray) ToGetHoneypotPresetsPresetMetaArrayOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetMetaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotPresetsPresetMetaArrayOutput)
}

type GetHoneypotPresetsPresetMetaOutput struct{ *pulumi.OutputState }

func (GetHoneypotPresetsPresetMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotPresetsPresetMeta)(nil)).Elem()
}

func (o GetHoneypotPresetsPresetMetaOutput) ToGetHoneypotPresetsPresetMetaOutput() GetHoneypotPresetsPresetMetaOutput {
	return o
}

func (o GetHoneypotPresetsPresetMetaOutput) ToGetHoneypotPresetsPresetMetaOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetMetaOutput {
	return o
}

// Burp counter.
func (o GetHoneypotPresetsPresetMetaOutput) Burp() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPresetMeta) string { return v.Burp }).(pulumi.StringOutput)
}

// Social traceability.
func (o GetHoneypotPresetsPresetMetaOutput) PortraitOption() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPresetMeta) bool { return v.PortraitOption }).(pulumi.BoolOutput)
}

// Git countered.
func (o GetHoneypotPresetsPresetMetaOutput) TrojanGit() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotPresetsPresetMeta) string { return v.TrojanGit }).(pulumi.StringOutput)
}

type GetHoneypotPresetsPresetMetaArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotPresetsPresetMetaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotPresetsPresetMeta)(nil)).Elem()
}

func (o GetHoneypotPresetsPresetMetaArrayOutput) ToGetHoneypotPresetsPresetMetaArrayOutput() GetHoneypotPresetsPresetMetaArrayOutput {
	return o
}

func (o GetHoneypotPresetsPresetMetaArrayOutput) ToGetHoneypotPresetsPresetMetaArrayOutputWithContext(ctx context.Context) GetHoneypotPresetsPresetMetaArrayOutput {
	return o
}

func (o GetHoneypotPresetsPresetMetaArrayOutput) Index(i pulumi.IntInput) GetHoneypotPresetsPresetMetaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotPresetsPresetMeta {
		return vs[0].([]GetHoneypotPresetsPresetMeta)[vs[1].(int)]
	}).(GetHoneypotPresetsPresetMetaOutput)
}

type GetHoneypotProbesProbe struct {
	// ARP spoofing detection.-**true**: Enable-**false**: Disabled. Available when `enableDetails` is on.
	Arp bool `pulumi:"arp"`
	// The ID of the management node.
	ControlNodeId string `pulumi:"controlNodeId"`
	// Probe name
	DisplayName       string                                   `pulumi:"displayName"`
	HoneypotBindLists []GetHoneypotProbesProbeHoneypotBindList `pulumi:"honeypotBindLists"`
	// The first ID of the resource
	HoneypotProbeId string `pulumi:"honeypotProbeId"`
	// The ID of the honeypot probe. Its value is the same as `honeypotProbeId`.
	Id string `pulumi:"id"`
	// Ping scan detection. Value:**true**: Enable **false**: Disabled. Available when `enableDetails` is on.
	Ping bool `pulumi:"ping"`
	// Probe type
	ProbeType string `pulumi:"probeType"`
	// Listen to the IP address list. Available when `enableDetails` is on.
	ServiceIpLists []string `pulumi:"serviceIpLists"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// Machine uuid. Has a value when the type is `hostProbe`.
	Uuid string `pulumi:"uuid"`
	// The ID of the VPC. Has a value when the type is `vpcBlackHoleProbe`.
	VpcId string `pulumi:"vpcId"`
}

// GetHoneypotProbesProbeInput is an input type that accepts GetHoneypotProbesProbeArgs and GetHoneypotProbesProbeOutput values.
// You can construct a concrete instance of `GetHoneypotProbesProbeInput` via:
//
//	GetHoneypotProbesProbeArgs{...}
type GetHoneypotProbesProbeInput interface {
	pulumi.Input

	ToGetHoneypotProbesProbeOutput() GetHoneypotProbesProbeOutput
	ToGetHoneypotProbesProbeOutputWithContext(context.Context) GetHoneypotProbesProbeOutput
}

type GetHoneypotProbesProbeArgs struct {
	// ARP spoofing detection.-**true**: Enable-**false**: Disabled. Available when `enableDetails` is on.
	Arp pulumi.BoolInput `pulumi:"arp"`
	// The ID of the management node.
	ControlNodeId pulumi.StringInput `pulumi:"controlNodeId"`
	// Probe name
	DisplayName       pulumi.StringInput                               `pulumi:"displayName"`
	HoneypotBindLists GetHoneypotProbesProbeHoneypotBindListArrayInput `pulumi:"honeypotBindLists"`
	// The first ID of the resource
	HoneypotProbeId pulumi.StringInput `pulumi:"honeypotProbeId"`
	// The ID of the honeypot probe. Its value is the same as `honeypotProbeId`.
	Id pulumi.StringInput `pulumi:"id"`
	// Ping scan detection. Value:**true**: Enable **false**: Disabled. Available when `enableDetails` is on.
	Ping pulumi.BoolInput `pulumi:"ping"`
	// Probe type
	ProbeType pulumi.StringInput `pulumi:"probeType"`
	// Listen to the IP address list. Available when `enableDetails` is on.
	ServiceIpLists pulumi.StringArrayInput `pulumi:"serviceIpLists"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// Machine uuid. Has a value when the type is `hostProbe`.
	Uuid pulumi.StringInput `pulumi:"uuid"`
	// The ID of the VPC. Has a value when the type is `vpcBlackHoleProbe`.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetHoneypotProbesProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotProbesProbe)(nil)).Elem()
}

func (i GetHoneypotProbesProbeArgs) ToGetHoneypotProbesProbeOutput() GetHoneypotProbesProbeOutput {
	return i.ToGetHoneypotProbesProbeOutputWithContext(context.Background())
}

func (i GetHoneypotProbesProbeArgs) ToGetHoneypotProbesProbeOutputWithContext(ctx context.Context) GetHoneypotProbesProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotProbesProbeOutput)
}

// GetHoneypotProbesProbeArrayInput is an input type that accepts GetHoneypotProbesProbeArray and GetHoneypotProbesProbeArrayOutput values.
// You can construct a concrete instance of `GetHoneypotProbesProbeArrayInput` via:
//
//	GetHoneypotProbesProbeArray{ GetHoneypotProbesProbeArgs{...} }
type GetHoneypotProbesProbeArrayInput interface {
	pulumi.Input

	ToGetHoneypotProbesProbeArrayOutput() GetHoneypotProbesProbeArrayOutput
	ToGetHoneypotProbesProbeArrayOutputWithContext(context.Context) GetHoneypotProbesProbeArrayOutput
}

type GetHoneypotProbesProbeArray []GetHoneypotProbesProbeInput

func (GetHoneypotProbesProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotProbesProbe)(nil)).Elem()
}

func (i GetHoneypotProbesProbeArray) ToGetHoneypotProbesProbeArrayOutput() GetHoneypotProbesProbeArrayOutput {
	return i.ToGetHoneypotProbesProbeArrayOutputWithContext(context.Background())
}

func (i GetHoneypotProbesProbeArray) ToGetHoneypotProbesProbeArrayOutputWithContext(ctx context.Context) GetHoneypotProbesProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotProbesProbeArrayOutput)
}

type GetHoneypotProbesProbeOutput struct{ *pulumi.OutputState }

func (GetHoneypotProbesProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotProbesProbe)(nil)).Elem()
}

func (o GetHoneypotProbesProbeOutput) ToGetHoneypotProbesProbeOutput() GetHoneypotProbesProbeOutput {
	return o
}

func (o GetHoneypotProbesProbeOutput) ToGetHoneypotProbesProbeOutputWithContext(ctx context.Context) GetHoneypotProbesProbeOutput {
	return o
}

// ARP spoofing detection.-**true**: Enable-**false**: Disabled. Available when `enableDetails` is on.
func (o GetHoneypotProbesProbeOutput) Arp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) bool { return v.Arp }).(pulumi.BoolOutput)
}

// The ID of the management node.
func (o GetHoneypotProbesProbeOutput) ControlNodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.ControlNodeId }).(pulumi.StringOutput)
}

// Probe name
func (o GetHoneypotProbesProbeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetHoneypotProbesProbeOutput) HoneypotBindLists() GetHoneypotProbesProbeHoneypotBindListArrayOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) []GetHoneypotProbesProbeHoneypotBindList { return v.HoneypotBindLists }).(GetHoneypotProbesProbeHoneypotBindListArrayOutput)
}

// The first ID of the resource
func (o GetHoneypotProbesProbeOutput) HoneypotProbeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.HoneypotProbeId }).(pulumi.StringOutput)
}

// The ID of the honeypot probe. Its value is the same as `honeypotProbeId`.
func (o GetHoneypotProbesProbeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.Id }).(pulumi.StringOutput)
}

// Ping scan detection. Value:**true**: Enable **false**: Disabled. Available when `enableDetails` is on.
func (o GetHoneypotProbesProbeOutput) Ping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) bool { return v.Ping }).(pulumi.BoolOutput)
}

// Probe type
func (o GetHoneypotProbesProbeOutput) ProbeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.ProbeType }).(pulumi.StringOutput)
}

// Listen to the IP address list. Available when `enableDetails` is on.
func (o GetHoneypotProbesProbeOutput) ServiceIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) []string { return v.ServiceIpLists }).(pulumi.StringArrayOutput)
}

// The status of the resource.
func (o GetHoneypotProbesProbeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.Status }).(pulumi.StringOutput)
}

// Machine uuid. Has a value when the type is `hostProbe`.
func (o GetHoneypotProbesProbeOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.Uuid }).(pulumi.StringOutput)
}

// The ID of the VPC. Has a value when the type is `vpcBlackHoleProbe`.
func (o GetHoneypotProbesProbeOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbe) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetHoneypotProbesProbeArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotProbesProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotProbesProbe)(nil)).Elem()
}

func (o GetHoneypotProbesProbeArrayOutput) ToGetHoneypotProbesProbeArrayOutput() GetHoneypotProbesProbeArrayOutput {
	return o
}

func (o GetHoneypotProbesProbeArrayOutput) ToGetHoneypotProbesProbeArrayOutputWithContext(ctx context.Context) GetHoneypotProbesProbeArrayOutput {
	return o
}

func (o GetHoneypotProbesProbeArrayOutput) Index(i pulumi.IntInput) GetHoneypotProbesProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotProbesProbe {
		return vs[0].([]GetHoneypotProbesProbe)[vs[1].(int)]
	}).(GetHoneypotProbesProbeOutput)
}

type GetHoneypotProbesProbeHoneypotBindList struct {
	// List of listening ports. Available when `enableDetails` is on.
	BindPortLists []GetHoneypotProbesProbeHoneypotBindListBindPortList `pulumi:"bindPortLists"`
	HoneypotId    string                                               `pulumi:"honeypotId"`
}

// GetHoneypotProbesProbeHoneypotBindListInput is an input type that accepts GetHoneypotProbesProbeHoneypotBindListArgs and GetHoneypotProbesProbeHoneypotBindListOutput values.
// You can construct a concrete instance of `GetHoneypotProbesProbeHoneypotBindListInput` via:
//
//	GetHoneypotProbesProbeHoneypotBindListArgs{...}
type GetHoneypotProbesProbeHoneypotBindListInput interface {
	pulumi.Input

	ToGetHoneypotProbesProbeHoneypotBindListOutput() GetHoneypotProbesProbeHoneypotBindListOutput
	ToGetHoneypotProbesProbeHoneypotBindListOutputWithContext(context.Context) GetHoneypotProbesProbeHoneypotBindListOutput
}

type GetHoneypotProbesProbeHoneypotBindListArgs struct {
	// List of listening ports. Available when `enableDetails` is on.
	BindPortLists GetHoneypotProbesProbeHoneypotBindListBindPortListArrayInput `pulumi:"bindPortLists"`
	HoneypotId    pulumi.StringInput                                           `pulumi:"honeypotId"`
}

func (GetHoneypotProbesProbeHoneypotBindListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindList)(nil)).Elem()
}

func (i GetHoneypotProbesProbeHoneypotBindListArgs) ToGetHoneypotProbesProbeHoneypotBindListOutput() GetHoneypotProbesProbeHoneypotBindListOutput {
	return i.ToGetHoneypotProbesProbeHoneypotBindListOutputWithContext(context.Background())
}

func (i GetHoneypotProbesProbeHoneypotBindListArgs) ToGetHoneypotProbesProbeHoneypotBindListOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotProbesProbeHoneypotBindListOutput)
}

// GetHoneypotProbesProbeHoneypotBindListArrayInput is an input type that accepts GetHoneypotProbesProbeHoneypotBindListArray and GetHoneypotProbesProbeHoneypotBindListArrayOutput values.
// You can construct a concrete instance of `GetHoneypotProbesProbeHoneypotBindListArrayInput` via:
//
//	GetHoneypotProbesProbeHoneypotBindListArray{ GetHoneypotProbesProbeHoneypotBindListArgs{...} }
type GetHoneypotProbesProbeHoneypotBindListArrayInput interface {
	pulumi.Input

	ToGetHoneypotProbesProbeHoneypotBindListArrayOutput() GetHoneypotProbesProbeHoneypotBindListArrayOutput
	ToGetHoneypotProbesProbeHoneypotBindListArrayOutputWithContext(context.Context) GetHoneypotProbesProbeHoneypotBindListArrayOutput
}

type GetHoneypotProbesProbeHoneypotBindListArray []GetHoneypotProbesProbeHoneypotBindListInput

func (GetHoneypotProbesProbeHoneypotBindListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotProbesProbeHoneypotBindList)(nil)).Elem()
}

func (i GetHoneypotProbesProbeHoneypotBindListArray) ToGetHoneypotProbesProbeHoneypotBindListArrayOutput() GetHoneypotProbesProbeHoneypotBindListArrayOutput {
	return i.ToGetHoneypotProbesProbeHoneypotBindListArrayOutputWithContext(context.Background())
}

func (i GetHoneypotProbesProbeHoneypotBindListArray) ToGetHoneypotProbesProbeHoneypotBindListArrayOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotProbesProbeHoneypotBindListArrayOutput)
}

type GetHoneypotProbesProbeHoneypotBindListOutput struct{ *pulumi.OutputState }

func (GetHoneypotProbesProbeHoneypotBindListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindList)(nil)).Elem()
}

func (o GetHoneypotProbesProbeHoneypotBindListOutput) ToGetHoneypotProbesProbeHoneypotBindListOutput() GetHoneypotProbesProbeHoneypotBindListOutput {
	return o
}

func (o GetHoneypotProbesProbeHoneypotBindListOutput) ToGetHoneypotProbesProbeHoneypotBindListOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListOutput {
	return o
}

// List of listening ports. Available when `enableDetails` is on.
func (o GetHoneypotProbesProbeHoneypotBindListOutput) BindPortLists() GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindList) []GetHoneypotProbesProbeHoneypotBindListBindPortList {
		return v.BindPortLists
	}).(GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput)
}

func (o GetHoneypotProbesProbeHoneypotBindListOutput) HoneypotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindList) string { return v.HoneypotId }).(pulumi.StringOutput)
}

type GetHoneypotProbesProbeHoneypotBindListArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotProbesProbeHoneypotBindListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotProbesProbeHoneypotBindList)(nil)).Elem()
}

func (o GetHoneypotProbesProbeHoneypotBindListArrayOutput) ToGetHoneypotProbesProbeHoneypotBindListArrayOutput() GetHoneypotProbesProbeHoneypotBindListArrayOutput {
	return o
}

func (o GetHoneypotProbesProbeHoneypotBindListArrayOutput) ToGetHoneypotProbesProbeHoneypotBindListArrayOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListArrayOutput {
	return o
}

func (o GetHoneypotProbesProbeHoneypotBindListArrayOutput) Index(i pulumi.IntInput) GetHoneypotProbesProbeHoneypotBindListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotProbesProbeHoneypotBindList {
		return vs[0].([]GetHoneypotProbesProbeHoneypotBindList)[vs[1].(int)]
	}).(GetHoneypotProbesProbeHoneypotBindListOutput)
}

type GetHoneypotProbesProbeHoneypotBindListBindPortList struct {
	// Whether to bind the port.
	BindPort bool `pulumi:"bindPort"`
	// End port.
	EndPort int `pulumi:"endPort"`
	// Whether the port is fixed.
	Fixed bool `pulumi:"fixed"`
	// Start port.
	StartPort int `pulumi:"startPort"`
	// Destination port.
	TargetPort int `pulumi:"targetPort"`
}

// GetHoneypotProbesProbeHoneypotBindListBindPortListInput is an input type that accepts GetHoneypotProbesProbeHoneypotBindListBindPortListArgs and GetHoneypotProbesProbeHoneypotBindListBindPortListOutput values.
// You can construct a concrete instance of `GetHoneypotProbesProbeHoneypotBindListBindPortListInput` via:
//
//	GetHoneypotProbesProbeHoneypotBindListBindPortListArgs{...}
type GetHoneypotProbesProbeHoneypotBindListBindPortListInput interface {
	pulumi.Input

	ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutput() GetHoneypotProbesProbeHoneypotBindListBindPortListOutput
	ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutputWithContext(context.Context) GetHoneypotProbesProbeHoneypotBindListBindPortListOutput
}

type GetHoneypotProbesProbeHoneypotBindListBindPortListArgs struct {
	// Whether to bind the port.
	BindPort pulumi.BoolInput `pulumi:"bindPort"`
	// End port.
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// Whether the port is fixed.
	Fixed pulumi.BoolInput `pulumi:"fixed"`
	// Start port.
	StartPort pulumi.IntInput `pulumi:"startPort"`
	// Destination port.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
}

func (GetHoneypotProbesProbeHoneypotBindListBindPortListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (i GetHoneypotProbesProbeHoneypotBindListBindPortListArgs) ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutput() GetHoneypotProbesProbeHoneypotBindListBindPortListOutput {
	return i.ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutputWithContext(context.Background())
}

func (i GetHoneypotProbesProbeHoneypotBindListBindPortListArgs) ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListBindPortListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotProbesProbeHoneypotBindListBindPortListOutput)
}

// GetHoneypotProbesProbeHoneypotBindListBindPortListArrayInput is an input type that accepts GetHoneypotProbesProbeHoneypotBindListBindPortListArray and GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput values.
// You can construct a concrete instance of `GetHoneypotProbesProbeHoneypotBindListBindPortListArrayInput` via:
//
//	GetHoneypotProbesProbeHoneypotBindListBindPortListArray{ GetHoneypotProbesProbeHoneypotBindListBindPortListArgs{...} }
type GetHoneypotProbesProbeHoneypotBindListBindPortListArrayInput interface {
	pulumi.Input

	ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput() GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput
	ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutputWithContext(context.Context) GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput
}

type GetHoneypotProbesProbeHoneypotBindListBindPortListArray []GetHoneypotProbesProbeHoneypotBindListBindPortListInput

func (GetHoneypotProbesProbeHoneypotBindListBindPortListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotProbesProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (i GetHoneypotProbesProbeHoneypotBindListBindPortListArray) ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput() GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput {
	return i.ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutputWithContext(context.Background())
}

func (i GetHoneypotProbesProbeHoneypotBindListBindPortListArray) ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput)
}

type GetHoneypotProbesProbeHoneypotBindListBindPortListOutput struct{ *pulumi.OutputState }

func (GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutput() GetHoneypotProbesProbeHoneypotBindListBindPortListOutput {
	return o
}

func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) ToGetHoneypotProbesProbeHoneypotBindListBindPortListOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListBindPortListOutput {
	return o
}

// Whether to bind the port.
func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) BindPort() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindListBindPortList) bool { return v.BindPort }).(pulumi.BoolOutput)
}

// End port.
func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindListBindPortList) int { return v.EndPort }).(pulumi.IntOutput)
}

// Whether the port is fixed.
func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) Fixed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindListBindPortList) bool { return v.Fixed }).(pulumi.BoolOutput)
}

// Start port.
func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindListBindPortList) int { return v.StartPort }).(pulumi.IntOutput)
}

// Destination port.
func (o GetHoneypotProbesProbeHoneypotBindListBindPortListOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoneypotProbesProbeHoneypotBindListBindPortList) int { return v.TargetPort }).(pulumi.IntOutput)
}

type GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput struct{ *pulumi.OutputState }

func (GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoneypotProbesProbeHoneypotBindListBindPortList)(nil)).Elem()
}

func (o GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput) ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput() GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput {
	return o
}

func (o GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput) ToGetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutputWithContext(ctx context.Context) GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput {
	return o
}

func (o GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput) Index(i pulumi.IntInput) GetHoneypotProbesProbeHoneypotBindListBindPortListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoneypotProbesProbeHoneypotBindListBindPortList {
		return vs[0].([]GetHoneypotProbesProbeHoneypotBindListBindPortList)[vs[1].(int)]
	}).(GetHoneypotProbesProbeHoneypotBindListBindPortListOutput)
}

type GetInstancesInstance struct {
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// ID of the instance.
	Id string `pulumi:"id"`
	// The first ID of the resource
	InstanceId string `pulumi:"instanceId"`
	// The payment type of the resource.
	PaymentType string `pulumi:"paymentType"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The first ID of the resource
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The payment type of the resource.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The creation time of the resource
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// ID of the instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The payment type of the resource.
func (o GetInstancesInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetVulWhitelistsWhitelist struct {
	// The ID of the Vul Whitelist.
	Id string `pulumi:"id"`
	// Reason for adding whitelist.
	Reason string `pulumi:"reason"`
	// Set the effective range of the whitelist.
	TargetInfo string `pulumi:"targetInfo"`
	// The ID of the Vul Whitelist.
	VulWhitelistId string `pulumi:"vulWhitelistId"`
	// Information about the vulnerability to be added to the whitelist.
	Whitelist string `pulumi:"whitelist"`
}

// GetVulWhitelistsWhitelistInput is an input type that accepts GetVulWhitelistsWhitelistArgs and GetVulWhitelistsWhitelistOutput values.
// You can construct a concrete instance of `GetVulWhitelistsWhitelistInput` via:
//
//	GetVulWhitelistsWhitelistArgs{...}
type GetVulWhitelistsWhitelistInput interface {
	pulumi.Input

	ToGetVulWhitelistsWhitelistOutput() GetVulWhitelistsWhitelistOutput
	ToGetVulWhitelistsWhitelistOutputWithContext(context.Context) GetVulWhitelistsWhitelistOutput
}

type GetVulWhitelistsWhitelistArgs struct {
	// The ID of the Vul Whitelist.
	Id pulumi.StringInput `pulumi:"id"`
	// Reason for adding whitelist.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Set the effective range of the whitelist.
	TargetInfo pulumi.StringInput `pulumi:"targetInfo"`
	// The ID of the Vul Whitelist.
	VulWhitelistId pulumi.StringInput `pulumi:"vulWhitelistId"`
	// Information about the vulnerability to be added to the whitelist.
	Whitelist pulumi.StringInput `pulumi:"whitelist"`
}

func (GetVulWhitelistsWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVulWhitelistsWhitelist)(nil)).Elem()
}

func (i GetVulWhitelistsWhitelistArgs) ToGetVulWhitelistsWhitelistOutput() GetVulWhitelistsWhitelistOutput {
	return i.ToGetVulWhitelistsWhitelistOutputWithContext(context.Background())
}

func (i GetVulWhitelistsWhitelistArgs) ToGetVulWhitelistsWhitelistOutputWithContext(ctx context.Context) GetVulWhitelistsWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVulWhitelistsWhitelistOutput)
}

// GetVulWhitelistsWhitelistArrayInput is an input type that accepts GetVulWhitelistsWhitelistArray and GetVulWhitelistsWhitelistArrayOutput values.
// You can construct a concrete instance of `GetVulWhitelistsWhitelistArrayInput` via:
//
//	GetVulWhitelistsWhitelistArray{ GetVulWhitelistsWhitelistArgs{...} }
type GetVulWhitelistsWhitelistArrayInput interface {
	pulumi.Input

	ToGetVulWhitelistsWhitelistArrayOutput() GetVulWhitelistsWhitelistArrayOutput
	ToGetVulWhitelistsWhitelistArrayOutputWithContext(context.Context) GetVulWhitelistsWhitelistArrayOutput
}

type GetVulWhitelistsWhitelistArray []GetVulWhitelistsWhitelistInput

func (GetVulWhitelistsWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVulWhitelistsWhitelist)(nil)).Elem()
}

func (i GetVulWhitelistsWhitelistArray) ToGetVulWhitelistsWhitelistArrayOutput() GetVulWhitelistsWhitelistArrayOutput {
	return i.ToGetVulWhitelistsWhitelistArrayOutputWithContext(context.Background())
}

func (i GetVulWhitelistsWhitelistArray) ToGetVulWhitelistsWhitelistArrayOutputWithContext(ctx context.Context) GetVulWhitelistsWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVulWhitelistsWhitelistArrayOutput)
}

type GetVulWhitelistsWhitelistOutput struct{ *pulumi.OutputState }

func (GetVulWhitelistsWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVulWhitelistsWhitelist)(nil)).Elem()
}

func (o GetVulWhitelistsWhitelistOutput) ToGetVulWhitelistsWhitelistOutput() GetVulWhitelistsWhitelistOutput {
	return o
}

func (o GetVulWhitelistsWhitelistOutput) ToGetVulWhitelistsWhitelistOutputWithContext(ctx context.Context) GetVulWhitelistsWhitelistOutput {
	return o
}

// The ID of the Vul Whitelist.
func (o GetVulWhitelistsWhitelistOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVulWhitelistsWhitelist) string { return v.Id }).(pulumi.StringOutput)
}

// Reason for adding whitelist.
func (o GetVulWhitelistsWhitelistOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetVulWhitelistsWhitelist) string { return v.Reason }).(pulumi.StringOutput)
}

// Set the effective range of the whitelist.
func (o GetVulWhitelistsWhitelistOutput) TargetInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetVulWhitelistsWhitelist) string { return v.TargetInfo }).(pulumi.StringOutput)
}

// The ID of the Vul Whitelist.
func (o GetVulWhitelistsWhitelistOutput) VulWhitelistId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVulWhitelistsWhitelist) string { return v.VulWhitelistId }).(pulumi.StringOutput)
}

// Information about the vulnerability to be added to the whitelist.
func (o GetVulWhitelistsWhitelistOutput) Whitelist() pulumi.StringOutput {
	return o.ApplyT(func(v GetVulWhitelistsWhitelist) string { return v.Whitelist }).(pulumi.StringOutput)
}

type GetVulWhitelistsWhitelistArrayOutput struct{ *pulumi.OutputState }

func (GetVulWhitelistsWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVulWhitelistsWhitelist)(nil)).Elem()
}

func (o GetVulWhitelistsWhitelistArrayOutput) ToGetVulWhitelistsWhitelistArrayOutput() GetVulWhitelistsWhitelistArrayOutput {
	return o
}

func (o GetVulWhitelistsWhitelistArrayOutput) ToGetVulWhitelistsWhitelistArrayOutputWithContext(ctx context.Context) GetVulWhitelistsWhitelistArrayOutput {
	return o
}

func (o GetVulWhitelistsWhitelistArrayOutput) Index(i pulumi.IntInput) GetVulWhitelistsWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVulWhitelistsWhitelist {
		return vs[0].([]GetVulWhitelistsWhitelist)[vs[1].(int)]
	}).(GetVulWhitelistsWhitelistOutput)
}

type GetWebLockConfigsConfig struct {
	// The prevention mode.
	DefenceMode string `pulumi:"defenceMode"`
	// The directory that has web tamper proofing enabled.
	Dir string `pulumi:"dir"`
	// The directory that has web tamper proofing disabled.
	ExclusiveDir string `pulumi:"exclusiveDir"`
	// The file that has web tamper proofing disabled. **Note:** If the value of `mode` is `blacklist`, this parameter is returned.
	ExclusiveFile string `pulumi:"exclusiveFile"`
	// The type of the file that has web tamper proofing disabled. **Note:** If the value of `mode` is `blacklist`, this parameter is returned.
	ExclusiveFileType string `pulumi:"exclusiveFileType"`
	// The ID of the resource.
	Id string `pulumi:"id"`
	// The type of the file that has web tamper proofing enabled. **Note:** If the value of `mode` is `whitelist`, this parameter is returned.
	InclusiveFileType string `pulumi:"inclusiveFileType"`
	// The local path to the backup files of the protected directory.
	LocalBackupDir string `pulumi:"localBackupDir"`
	// The protection mode of web tamper proofing.
	Mode string `pulumi:"mode"`
	// The UUID of the server that has web tamper proofing enabled.
	Uuid string `pulumi:"uuid"`
}

// GetWebLockConfigsConfigInput is an input type that accepts GetWebLockConfigsConfigArgs and GetWebLockConfigsConfigOutput values.
// You can construct a concrete instance of `GetWebLockConfigsConfigInput` via:
//
//	GetWebLockConfigsConfigArgs{...}
type GetWebLockConfigsConfigInput interface {
	pulumi.Input

	ToGetWebLockConfigsConfigOutput() GetWebLockConfigsConfigOutput
	ToGetWebLockConfigsConfigOutputWithContext(context.Context) GetWebLockConfigsConfigOutput
}

type GetWebLockConfigsConfigArgs struct {
	// The prevention mode.
	DefenceMode pulumi.StringInput `pulumi:"defenceMode"`
	// The directory that has web tamper proofing enabled.
	Dir pulumi.StringInput `pulumi:"dir"`
	// The directory that has web tamper proofing disabled.
	ExclusiveDir pulumi.StringInput `pulumi:"exclusiveDir"`
	// The file that has web tamper proofing disabled. **Note:** If the value of `mode` is `blacklist`, this parameter is returned.
	ExclusiveFile pulumi.StringInput `pulumi:"exclusiveFile"`
	// The type of the file that has web tamper proofing disabled. **Note:** If the value of `mode` is `blacklist`, this parameter is returned.
	ExclusiveFileType pulumi.StringInput `pulumi:"exclusiveFileType"`
	// The ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the file that has web tamper proofing enabled. **Note:** If the value of `mode` is `whitelist`, this parameter is returned.
	InclusiveFileType pulumi.StringInput `pulumi:"inclusiveFileType"`
	// The local path to the backup files of the protected directory.
	LocalBackupDir pulumi.StringInput `pulumi:"localBackupDir"`
	// The protection mode of web tamper proofing.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The UUID of the server that has web tamper proofing enabled.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetWebLockConfigsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebLockConfigsConfig)(nil)).Elem()
}

func (i GetWebLockConfigsConfigArgs) ToGetWebLockConfigsConfigOutput() GetWebLockConfigsConfigOutput {
	return i.ToGetWebLockConfigsConfigOutputWithContext(context.Background())
}

func (i GetWebLockConfigsConfigArgs) ToGetWebLockConfigsConfigOutputWithContext(ctx context.Context) GetWebLockConfigsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebLockConfigsConfigOutput)
}

// GetWebLockConfigsConfigArrayInput is an input type that accepts GetWebLockConfigsConfigArray and GetWebLockConfigsConfigArrayOutput values.
// You can construct a concrete instance of `GetWebLockConfigsConfigArrayInput` via:
//
//	GetWebLockConfigsConfigArray{ GetWebLockConfigsConfigArgs{...} }
type GetWebLockConfigsConfigArrayInput interface {
	pulumi.Input

	ToGetWebLockConfigsConfigArrayOutput() GetWebLockConfigsConfigArrayOutput
	ToGetWebLockConfigsConfigArrayOutputWithContext(context.Context) GetWebLockConfigsConfigArrayOutput
}

type GetWebLockConfigsConfigArray []GetWebLockConfigsConfigInput

func (GetWebLockConfigsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebLockConfigsConfig)(nil)).Elem()
}

func (i GetWebLockConfigsConfigArray) ToGetWebLockConfigsConfigArrayOutput() GetWebLockConfigsConfigArrayOutput {
	return i.ToGetWebLockConfigsConfigArrayOutputWithContext(context.Background())
}

func (i GetWebLockConfigsConfigArray) ToGetWebLockConfigsConfigArrayOutputWithContext(ctx context.Context) GetWebLockConfigsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebLockConfigsConfigArrayOutput)
}

type GetWebLockConfigsConfigOutput struct{ *pulumi.OutputState }

func (GetWebLockConfigsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebLockConfigsConfig)(nil)).Elem()
}

func (o GetWebLockConfigsConfigOutput) ToGetWebLockConfigsConfigOutput() GetWebLockConfigsConfigOutput {
	return o
}

func (o GetWebLockConfigsConfigOutput) ToGetWebLockConfigsConfigOutputWithContext(ctx context.Context) GetWebLockConfigsConfigOutput {
	return o
}

// The prevention mode.
func (o GetWebLockConfigsConfigOutput) DefenceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.DefenceMode }).(pulumi.StringOutput)
}

// The directory that has web tamper proofing enabled.
func (o GetWebLockConfigsConfigOutput) Dir() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.Dir }).(pulumi.StringOutput)
}

// The directory that has web tamper proofing disabled.
func (o GetWebLockConfigsConfigOutput) ExclusiveDir() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.ExclusiveDir }).(pulumi.StringOutput)
}

// The file that has web tamper proofing disabled. **Note:** If the value of `mode` is `blacklist`, this parameter is returned.
func (o GetWebLockConfigsConfigOutput) ExclusiveFile() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.ExclusiveFile }).(pulumi.StringOutput)
}

// The type of the file that has web tamper proofing disabled. **Note:** If the value of `mode` is `blacklist`, this parameter is returned.
func (o GetWebLockConfigsConfigOutput) ExclusiveFileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.ExclusiveFileType }).(pulumi.StringOutput)
}

// The ID of the resource.
func (o GetWebLockConfigsConfigOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the file that has web tamper proofing enabled. **Note:** If the value of `mode` is `whitelist`, this parameter is returned.
func (o GetWebLockConfigsConfigOutput) InclusiveFileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.InclusiveFileType }).(pulumi.StringOutput)
}

// The local path to the backup files of the protected directory.
func (o GetWebLockConfigsConfigOutput) LocalBackupDir() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.LocalBackupDir }).(pulumi.StringOutput)
}

// The protection mode of web tamper proofing.
func (o GetWebLockConfigsConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// The UUID of the server that has web tamper proofing enabled.
func (o GetWebLockConfigsConfigOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebLockConfigsConfig) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetWebLockConfigsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetWebLockConfigsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebLockConfigsConfig)(nil)).Elem()
}

func (o GetWebLockConfigsConfigArrayOutput) ToGetWebLockConfigsConfigArrayOutput() GetWebLockConfigsConfigArrayOutput {
	return o
}

func (o GetWebLockConfigsConfigArrayOutput) ToGetWebLockConfigsConfigArrayOutputWithContext(ctx context.Context) GetWebLockConfigsConfigArrayOutput {
	return o
}

func (o GetWebLockConfigsConfigArrayOutput) Index(i pulumi.IntInput) GetWebLockConfigsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebLockConfigsConfig {
		return vs[0].([]GetWebLockConfigsConfig)[vs[1].(int)]
	}).(GetWebLockConfigsConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HoneypotPresetMetaInput)(nil)).Elem(), HoneypotPresetMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoneypotPresetMetaPtrInput)(nil)).Elem(), HoneypotPresetMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoneypotProbeHoneypotBindListInput)(nil)).Elem(), HoneypotProbeHoneypotBindListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoneypotProbeHoneypotBindListArrayInput)(nil)).Elem(), HoneypotProbeHoneypotBindListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoneypotProbeHoneypotBindListBindPortListInput)(nil)).Elem(), HoneypotProbeHoneypotBindListBindPortListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoneypotProbeHoneypotBindListBindPortListArrayInput)(nil)).Elem(), HoneypotProbeHoneypotBindListBindPortListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SasTrailServiceTrailInput)(nil)).Elem(), SasTrailServiceTrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SasTrailServiceTrailPtrInput)(nil)).Elem(), SasTrailServiceTrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAntiBruteForceRulesRuleInput)(nil)).Elem(), GetAntiBruteForceRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAntiBruteForceRulesRuleArrayInput)(nil)).Elem(), GetAntiBruteForceRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssetsAssetInput)(nil)).Elem(), GetAssetsAssetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssetsAssetArrayInput)(nil)).Elem(), GetAssetsAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupPoliciesPolicyInput)(nil)).Elem(), GetBackupPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupPoliciesPolicyArrayInput)(nil)).Elem(), GetBackupPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaselineStrategiesStrategyInput)(nil)).Elem(), GetBaselineStrategiesStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaselineStrategiesStrategyArrayInput)(nil)).Elem(), GetBaselineStrategiesStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneyPotsPotInput)(nil)).Elem(), GetHoneyPotsPotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneyPotsPotArrayInput)(nil)).Elem(), GetHoneyPotsPotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotImagesImageInput)(nil)).Elem(), GetHoneypotImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotImagesImageArrayInput)(nil)).Elem(), GetHoneypotImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotNodesNodeInput)(nil)).Elem(), GetHoneypotNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotNodesNodeArrayInput)(nil)).Elem(), GetHoneypotNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotPresetsPresetInput)(nil)).Elem(), GetHoneypotPresetsPresetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotPresetsPresetArrayInput)(nil)).Elem(), GetHoneypotPresetsPresetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotPresetsPresetMetaInput)(nil)).Elem(), GetHoneypotPresetsPresetMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotPresetsPresetMetaArrayInput)(nil)).Elem(), GetHoneypotPresetsPresetMetaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotProbesProbeInput)(nil)).Elem(), GetHoneypotProbesProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotProbesProbeArrayInput)(nil)).Elem(), GetHoneypotProbesProbeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindListInput)(nil)).Elem(), GetHoneypotProbesProbeHoneypotBindListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindListArrayInput)(nil)).Elem(), GetHoneypotProbesProbeHoneypotBindListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindListBindPortListInput)(nil)).Elem(), GetHoneypotProbesProbeHoneypotBindListBindPortListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoneypotProbesProbeHoneypotBindListBindPortListArrayInput)(nil)).Elem(), GetHoneypotProbesProbeHoneypotBindListBindPortListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVulWhitelistsWhitelistInput)(nil)).Elem(), GetVulWhitelistsWhitelistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVulWhitelistsWhitelistArrayInput)(nil)).Elem(), GetVulWhitelistsWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebLockConfigsConfigInput)(nil)).Elem(), GetWebLockConfigsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebLockConfigsConfigArrayInput)(nil)).Elem(), GetWebLockConfigsConfigArray{})
	pulumi.RegisterOutputType(HoneypotPresetMetaOutput{})
	pulumi.RegisterOutputType(HoneypotPresetMetaPtrOutput{})
	pulumi.RegisterOutputType(HoneypotProbeHoneypotBindListOutput{})
	pulumi.RegisterOutputType(HoneypotProbeHoneypotBindListArrayOutput{})
	pulumi.RegisterOutputType(HoneypotProbeHoneypotBindListBindPortListOutput{})
	pulumi.RegisterOutputType(HoneypotProbeHoneypotBindListBindPortListArrayOutput{})
	pulumi.RegisterOutputType(SasTrailServiceTrailOutput{})
	pulumi.RegisterOutputType(SasTrailServiceTrailPtrOutput{})
	pulumi.RegisterOutputType(GetAntiBruteForceRulesRuleOutput{})
	pulumi.RegisterOutputType(GetAntiBruteForceRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAssetsAssetOutput{})
	pulumi.RegisterOutputType(GetAssetsAssetArrayOutput{})
	pulumi.RegisterOutputType(GetBackupPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetBackupPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetBaselineStrategiesStrategyOutput{})
	pulumi.RegisterOutputType(GetBaselineStrategiesStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetHoneyPotsPotOutput{})
	pulumi.RegisterOutputType(GetHoneyPotsPotArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotImagesImageOutput{})
	pulumi.RegisterOutputType(GetHoneypotImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotNodesNodeOutput{})
	pulumi.RegisterOutputType(GetHoneypotNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotPresetsPresetOutput{})
	pulumi.RegisterOutputType(GetHoneypotPresetsPresetArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotPresetsPresetMetaOutput{})
	pulumi.RegisterOutputType(GetHoneypotPresetsPresetMetaArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotProbesProbeOutput{})
	pulumi.RegisterOutputType(GetHoneypotProbesProbeArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotProbesProbeHoneypotBindListOutput{})
	pulumi.RegisterOutputType(GetHoneypotProbesProbeHoneypotBindListArrayOutput{})
	pulumi.RegisterOutputType(GetHoneypotProbesProbeHoneypotBindListBindPortListOutput{})
	pulumi.RegisterOutputType(GetHoneypotProbesProbeHoneypotBindListBindPortListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetVulWhitelistsWhitelistOutput{})
	pulumi.RegisterOutputType(GetVulWhitelistsWhitelistArrayOutput{})
	pulumi.RegisterOutputType(GetWebLockConfigsConfigOutput{})
	pulumi.RegisterOutputType(GetWebLockConfigsConfigArrayOutput{})
}
