// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package threatdetection

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Threat Detection Client File Protect resource. Client core file protection event monitoring, including file reading and writing, deletion, and permission change.
//
// For information about Threat Detection Client File Protect and how to use it, see [What is Client File Protect](https://www.alibabacloud.com/help/zh/security-center/developer-reference/api-sas-2018-12-03-createfileprotectrule).
//
// > **NOTE:** Available since v1.212.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/threatdetection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := threatdetection.NewClientFileProtect(ctx, "default", &threatdetection.ClientFileProtectArgs{
//				AlertLevel: pulumi.Int(0),
//				FileOps: pulumi.StringArray{
//					pulumi.String("CREATE"),
//				},
//				FilePaths: pulumi.StringArray{
//					pulumi.String("/usr/local"),
//				},
//				ProcPaths: pulumi.StringArray{
//					pulumi.String("/usr/local"),
//				},
//				RuleAction: pulumi.String("pass"),
//				RuleName:   pulumi.String("rule_example"),
//				Status:     pulumi.Int(0),
//				SwitchId:   pulumi.String("FILE_PROTECT_RULE_SWITCH_TYPE_1693474122929"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Threat Detection Client File Protect can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:threatdetection/clientFileProtect:ClientFileProtect example <id>
// ```
type ClientFileProtect struct {
	pulumi.CustomResourceState

	// 0 no alert 1 info 2 suspicious 3 critical.
	AlertLevel pulumi.IntPtrOutput `pulumi:"alertLevel"`
	// file operation.
	FileOps pulumi.StringArrayOutput `pulumi:"fileOps"`
	// file path.
	FilePaths pulumi.StringArrayOutput `pulumi:"filePaths"`
	// process path.
	ProcPaths pulumi.StringArrayOutput `pulumi:"procPaths"`
	// rule action, pass or alert.
	RuleAction pulumi.StringOutput `pulumi:"ruleAction"`
	// ruleName.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// rule status 0 is disable 1 is enable.
	Status pulumi.IntOutput `pulumi:"status"`
	// switch id.
	SwitchId pulumi.StringPtrOutput `pulumi:"switchId"`
}

// NewClientFileProtect registers a new resource with the given unique name, arguments, and options.
func NewClientFileProtect(ctx *pulumi.Context,
	name string, args *ClientFileProtectArgs, opts ...pulumi.ResourceOption) (*ClientFileProtect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileOps == nil {
		return nil, errors.New("invalid value for required argument 'FileOps'")
	}
	if args.FilePaths == nil {
		return nil, errors.New("invalid value for required argument 'FilePaths'")
	}
	if args.ProcPaths == nil {
		return nil, errors.New("invalid value for required argument 'ProcPaths'")
	}
	if args.RuleAction == nil {
		return nil, errors.New("invalid value for required argument 'RuleAction'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClientFileProtect
	err := ctx.RegisterResource("alicloud:threatdetection/clientFileProtect:ClientFileProtect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientFileProtect gets an existing ClientFileProtect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientFileProtect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientFileProtectState, opts ...pulumi.ResourceOption) (*ClientFileProtect, error) {
	var resource ClientFileProtect
	err := ctx.ReadResource("alicloud:threatdetection/clientFileProtect:ClientFileProtect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientFileProtect resources.
type clientFileProtectState struct {
	// 0 no alert 1 info 2 suspicious 3 critical.
	AlertLevel *int `pulumi:"alertLevel"`
	// file operation.
	FileOps []string `pulumi:"fileOps"`
	// file path.
	FilePaths []string `pulumi:"filePaths"`
	// process path.
	ProcPaths []string `pulumi:"procPaths"`
	// rule action, pass or alert.
	RuleAction *string `pulumi:"ruleAction"`
	// ruleName.
	RuleName *string `pulumi:"ruleName"`
	// rule status 0 is disable 1 is enable.
	Status *int `pulumi:"status"`
	// switch id.
	SwitchId *string `pulumi:"switchId"`
}

type ClientFileProtectState struct {
	// 0 no alert 1 info 2 suspicious 3 critical.
	AlertLevel pulumi.IntPtrInput
	// file operation.
	FileOps pulumi.StringArrayInput
	// file path.
	FilePaths pulumi.StringArrayInput
	// process path.
	ProcPaths pulumi.StringArrayInput
	// rule action, pass or alert.
	RuleAction pulumi.StringPtrInput
	// ruleName.
	RuleName pulumi.StringPtrInput
	// rule status 0 is disable 1 is enable.
	Status pulumi.IntPtrInput
	// switch id.
	SwitchId pulumi.StringPtrInput
}

func (ClientFileProtectState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientFileProtectState)(nil)).Elem()
}

type clientFileProtectArgs struct {
	// 0 no alert 1 info 2 suspicious 3 critical.
	AlertLevel *int `pulumi:"alertLevel"`
	// file operation.
	FileOps []string `pulumi:"fileOps"`
	// file path.
	FilePaths []string `pulumi:"filePaths"`
	// process path.
	ProcPaths []string `pulumi:"procPaths"`
	// rule action, pass or alert.
	RuleAction string `pulumi:"ruleAction"`
	// ruleName.
	RuleName string `pulumi:"ruleName"`
	// rule status 0 is disable 1 is enable.
	Status *int `pulumi:"status"`
	// switch id.
	SwitchId *string `pulumi:"switchId"`
}

// The set of arguments for constructing a ClientFileProtect resource.
type ClientFileProtectArgs struct {
	// 0 no alert 1 info 2 suspicious 3 critical.
	AlertLevel pulumi.IntPtrInput
	// file operation.
	FileOps pulumi.StringArrayInput
	// file path.
	FilePaths pulumi.StringArrayInput
	// process path.
	ProcPaths pulumi.StringArrayInput
	// rule action, pass or alert.
	RuleAction pulumi.StringInput
	// ruleName.
	RuleName pulumi.StringInput
	// rule status 0 is disable 1 is enable.
	Status pulumi.IntPtrInput
	// switch id.
	SwitchId pulumi.StringPtrInput
}

func (ClientFileProtectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientFileProtectArgs)(nil)).Elem()
}

type ClientFileProtectInput interface {
	pulumi.Input

	ToClientFileProtectOutput() ClientFileProtectOutput
	ToClientFileProtectOutputWithContext(ctx context.Context) ClientFileProtectOutput
}

func (*ClientFileProtect) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientFileProtect)(nil)).Elem()
}

func (i *ClientFileProtect) ToClientFileProtectOutput() ClientFileProtectOutput {
	return i.ToClientFileProtectOutputWithContext(context.Background())
}

func (i *ClientFileProtect) ToClientFileProtectOutputWithContext(ctx context.Context) ClientFileProtectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientFileProtectOutput)
}

// ClientFileProtectArrayInput is an input type that accepts ClientFileProtectArray and ClientFileProtectArrayOutput values.
// You can construct a concrete instance of `ClientFileProtectArrayInput` via:
//
//	ClientFileProtectArray{ ClientFileProtectArgs{...} }
type ClientFileProtectArrayInput interface {
	pulumi.Input

	ToClientFileProtectArrayOutput() ClientFileProtectArrayOutput
	ToClientFileProtectArrayOutputWithContext(context.Context) ClientFileProtectArrayOutput
}

type ClientFileProtectArray []ClientFileProtectInput

func (ClientFileProtectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientFileProtect)(nil)).Elem()
}

func (i ClientFileProtectArray) ToClientFileProtectArrayOutput() ClientFileProtectArrayOutput {
	return i.ToClientFileProtectArrayOutputWithContext(context.Background())
}

func (i ClientFileProtectArray) ToClientFileProtectArrayOutputWithContext(ctx context.Context) ClientFileProtectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientFileProtectArrayOutput)
}

// ClientFileProtectMapInput is an input type that accepts ClientFileProtectMap and ClientFileProtectMapOutput values.
// You can construct a concrete instance of `ClientFileProtectMapInput` via:
//
//	ClientFileProtectMap{ "key": ClientFileProtectArgs{...} }
type ClientFileProtectMapInput interface {
	pulumi.Input

	ToClientFileProtectMapOutput() ClientFileProtectMapOutput
	ToClientFileProtectMapOutputWithContext(context.Context) ClientFileProtectMapOutput
}

type ClientFileProtectMap map[string]ClientFileProtectInput

func (ClientFileProtectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientFileProtect)(nil)).Elem()
}

func (i ClientFileProtectMap) ToClientFileProtectMapOutput() ClientFileProtectMapOutput {
	return i.ToClientFileProtectMapOutputWithContext(context.Background())
}

func (i ClientFileProtectMap) ToClientFileProtectMapOutputWithContext(ctx context.Context) ClientFileProtectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientFileProtectMapOutput)
}

type ClientFileProtectOutput struct{ *pulumi.OutputState }

func (ClientFileProtectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientFileProtect)(nil)).Elem()
}

func (o ClientFileProtectOutput) ToClientFileProtectOutput() ClientFileProtectOutput {
	return o
}

func (o ClientFileProtectOutput) ToClientFileProtectOutputWithContext(ctx context.Context) ClientFileProtectOutput {
	return o
}

// 0 no alert 1 info 2 suspicious 3 critical.
func (o ClientFileProtectOutput) AlertLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.IntPtrOutput { return v.AlertLevel }).(pulumi.IntPtrOutput)
}

// file operation.
func (o ClientFileProtectOutput) FileOps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.StringArrayOutput { return v.FileOps }).(pulumi.StringArrayOutput)
}

// file path.
func (o ClientFileProtectOutput) FilePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.StringArrayOutput { return v.FilePaths }).(pulumi.StringArrayOutput)
}

// process path.
func (o ClientFileProtectOutput) ProcPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.StringArrayOutput { return v.ProcPaths }).(pulumi.StringArrayOutput)
}

// rule action, pass or alert.
func (o ClientFileProtectOutput) RuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.StringOutput { return v.RuleAction }).(pulumi.StringOutput)
}

// ruleName.
func (o ClientFileProtectOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// rule status 0 is disable 1 is enable.
func (o ClientFileProtectOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

// switch id.
func (o ClientFileProtectOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientFileProtect) pulumi.StringPtrOutput { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type ClientFileProtectArrayOutput struct{ *pulumi.OutputState }

func (ClientFileProtectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientFileProtect)(nil)).Elem()
}

func (o ClientFileProtectArrayOutput) ToClientFileProtectArrayOutput() ClientFileProtectArrayOutput {
	return o
}

func (o ClientFileProtectArrayOutput) ToClientFileProtectArrayOutputWithContext(ctx context.Context) ClientFileProtectArrayOutput {
	return o
}

func (o ClientFileProtectArrayOutput) Index(i pulumi.IntInput) ClientFileProtectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClientFileProtect {
		return vs[0].([]*ClientFileProtect)[vs[1].(int)]
	}).(ClientFileProtectOutput)
}

type ClientFileProtectMapOutput struct{ *pulumi.OutputState }

func (ClientFileProtectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientFileProtect)(nil)).Elem()
}

func (o ClientFileProtectMapOutput) ToClientFileProtectMapOutput() ClientFileProtectMapOutput {
	return o
}

func (o ClientFileProtectMapOutput) ToClientFileProtectMapOutputWithContext(ctx context.Context) ClientFileProtectMapOutput {
	return o
}

func (o ClientFileProtectMapOutput) MapIndex(k pulumi.StringInput) ClientFileProtectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClientFileProtect {
		return vs[0].(map[string]*ClientFileProtect)[vs[1].(string)]
	}).(ClientFileProtectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientFileProtectInput)(nil)).Elem(), &ClientFileProtect{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientFileProtectArrayInput)(nil)).Elem(), ClientFileProtectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientFileProtectMapInput)(nil)).Elem(), ClientFileProtectMap{})
	pulumi.RegisterOutputType(ClientFileProtectOutput{})
	pulumi.RegisterOutputType(ClientFileProtectArrayOutput{})
	pulumi.RegisterOutputType(ClientFileProtectMapOutput{})
}
