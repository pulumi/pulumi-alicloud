// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package threatdetection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Threat Detection Sas Trail resource.
//
// For information about Threat Detection Sas Trail and how to use it, see [What is Sas Trail](https://www.alibabacloud.com/help/zh/security-center/developer-reference/api-sas-2018-12-03-createservicetrail).
//
// > **NOTE:** Available since v1.212.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/threatdetection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := threatdetection.NewSasTrail(ctx, "default", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Threat Detection Sas Trail can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:threatdetection/sasTrail:SasTrail example
// ```
type SasTrail struct {
	pulumi.CustomResourceState

	// The service trace creation timestamp, in milliseconds.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// Service trace configuration information.
	ServiceTrail SasTrailServiceTrailOutput `pulumi:"serviceTrail"`
}

// NewSasTrail registers a new resource with the given unique name, arguments, and options.
func NewSasTrail(ctx *pulumi.Context,
	name string, args *SasTrailArgs, opts ...pulumi.ResourceOption) (*SasTrail, error) {
	if args == nil {
		args = &SasTrailArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SasTrail
	err := ctx.RegisterResource("alicloud:threatdetection/sasTrail:SasTrail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSasTrail gets an existing SasTrail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSasTrail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SasTrailState, opts ...pulumi.ResourceOption) (*SasTrail, error) {
	var resource SasTrail
	err := ctx.ReadResource("alicloud:threatdetection/sasTrail:SasTrail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SasTrail resources.
type sasTrailState struct {
	// The service trace creation timestamp, in milliseconds.
	CreateTime *int `pulumi:"createTime"`
	// Service trace configuration information.
	ServiceTrail *SasTrailServiceTrail `pulumi:"serviceTrail"`
}

type SasTrailState struct {
	// The service trace creation timestamp, in milliseconds.
	CreateTime pulumi.IntPtrInput
	// Service trace configuration information.
	ServiceTrail SasTrailServiceTrailPtrInput
}

func (SasTrailState) ElementType() reflect.Type {
	return reflect.TypeOf((*sasTrailState)(nil)).Elem()
}

type sasTrailArgs struct {
}

// The set of arguments for constructing a SasTrail resource.
type SasTrailArgs struct {
}

func (SasTrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sasTrailArgs)(nil)).Elem()
}

type SasTrailInput interface {
	pulumi.Input

	ToSasTrailOutput() SasTrailOutput
	ToSasTrailOutputWithContext(ctx context.Context) SasTrailOutput
}

func (*SasTrail) ElementType() reflect.Type {
	return reflect.TypeOf((**SasTrail)(nil)).Elem()
}

func (i *SasTrail) ToSasTrailOutput() SasTrailOutput {
	return i.ToSasTrailOutputWithContext(context.Background())
}

func (i *SasTrail) ToSasTrailOutputWithContext(ctx context.Context) SasTrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTrailOutput)
}

// SasTrailArrayInput is an input type that accepts SasTrailArray and SasTrailArrayOutput values.
// You can construct a concrete instance of `SasTrailArrayInput` via:
//
//	SasTrailArray{ SasTrailArgs{...} }
type SasTrailArrayInput interface {
	pulumi.Input

	ToSasTrailArrayOutput() SasTrailArrayOutput
	ToSasTrailArrayOutputWithContext(context.Context) SasTrailArrayOutput
}

type SasTrailArray []SasTrailInput

func (SasTrailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SasTrail)(nil)).Elem()
}

func (i SasTrailArray) ToSasTrailArrayOutput() SasTrailArrayOutput {
	return i.ToSasTrailArrayOutputWithContext(context.Background())
}

func (i SasTrailArray) ToSasTrailArrayOutputWithContext(ctx context.Context) SasTrailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTrailArrayOutput)
}

// SasTrailMapInput is an input type that accepts SasTrailMap and SasTrailMapOutput values.
// You can construct a concrete instance of `SasTrailMapInput` via:
//
//	SasTrailMap{ "key": SasTrailArgs{...} }
type SasTrailMapInput interface {
	pulumi.Input

	ToSasTrailMapOutput() SasTrailMapOutput
	ToSasTrailMapOutputWithContext(context.Context) SasTrailMapOutput
}

type SasTrailMap map[string]SasTrailInput

func (SasTrailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SasTrail)(nil)).Elem()
}

func (i SasTrailMap) ToSasTrailMapOutput() SasTrailMapOutput {
	return i.ToSasTrailMapOutputWithContext(context.Background())
}

func (i SasTrailMap) ToSasTrailMapOutputWithContext(ctx context.Context) SasTrailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTrailMapOutput)
}

type SasTrailOutput struct{ *pulumi.OutputState }

func (SasTrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SasTrail)(nil)).Elem()
}

func (o SasTrailOutput) ToSasTrailOutput() SasTrailOutput {
	return o
}

func (o SasTrailOutput) ToSasTrailOutputWithContext(ctx context.Context) SasTrailOutput {
	return o
}

// The service trace creation timestamp, in milliseconds.
func (o SasTrailOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SasTrail) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// Service trace configuration information.
func (o SasTrailOutput) ServiceTrail() SasTrailServiceTrailOutput {
	return o.ApplyT(func(v *SasTrail) SasTrailServiceTrailOutput { return v.ServiceTrail }).(SasTrailServiceTrailOutput)
}

type SasTrailArrayOutput struct{ *pulumi.OutputState }

func (SasTrailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SasTrail)(nil)).Elem()
}

func (o SasTrailArrayOutput) ToSasTrailArrayOutput() SasTrailArrayOutput {
	return o
}

func (o SasTrailArrayOutput) ToSasTrailArrayOutputWithContext(ctx context.Context) SasTrailArrayOutput {
	return o
}

func (o SasTrailArrayOutput) Index(i pulumi.IntInput) SasTrailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SasTrail {
		return vs[0].([]*SasTrail)[vs[1].(int)]
	}).(SasTrailOutput)
}

type SasTrailMapOutput struct{ *pulumi.OutputState }

func (SasTrailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SasTrail)(nil)).Elem()
}

func (o SasTrailMapOutput) ToSasTrailMapOutput() SasTrailMapOutput {
	return o
}

func (o SasTrailMapOutput) ToSasTrailMapOutputWithContext(ctx context.Context) SasTrailMapOutput {
	return o
}

func (o SasTrailMapOutput) MapIndex(k pulumi.StringInput) SasTrailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SasTrail {
		return vs[0].(map[string]*SasTrail)[vs[1].(string)]
	}).(SasTrailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SasTrailInput)(nil)).Elem(), &SasTrail{})
	pulumi.RegisterInputType(reflect.TypeOf((*SasTrailArrayInput)(nil)).Elem(), SasTrailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SasTrailMapInput)(nil)).Elem(), SasTrailMap{})
	pulumi.RegisterOutputType(SasTrailOutput{})
	pulumi.RegisterOutputType(SasTrailArrayOutput{})
	pulumi.RegisterOutputType(SasTrailMapOutput{})
}
