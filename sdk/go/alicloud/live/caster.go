// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package live

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Live Caster resource.
//
// Relying on Alibaba Cloud's powerful technologies such as live video broadcasting, media processing, and video AI, cloud guide integrates capabilities such as graphic packaging, real-time keying, multi-language translation, and multi-channel mixed streaming to innovate traditional guide services in the cloud. Provide easy-to-use cloud-based guide services for event performances, news reports, live events, off-site broadcasts and other scenes, without hardware, reduce user guide costs, and create a better live broadcast experience.
//
// For information about Live Caster and how to use it, see [What is Caster](https://www.alibabacloud.com/help/en/live/developer-reference/api-live-2016-11-01-createcaster).
//
// > **NOTE:** Available since v1.238.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/live"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := live.NewCaster(ctx, "default", &live.CasterArgs{
//				CasterName:  pulumi.String(name),
//				PaymentType: pulumi.String("PayAsYouGo"),
//				NormType:    pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Live Caster can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:live/caster:Caster example <id>
// ```
type Caster struct {
	pulumi.CustomResourceState

	// Automatic standby broadcast configuration. eofThres: indicates that the broadcast is automatically cut and prepared after the flow interruption time, in seconds.
	AutoSwitchUrgentConfig pulumi.StringPtrOutput `pulumi:"autoSwitchUrgentConfig"`
	// Turn on the cut-off automatic switch for broadcast preparation.
	//
	// true: open.
	//
	// false: closed.
	AutoSwitchUrgentOn pulumi.BoolPtrOutput `pulumi:"autoSwitchUrgentOn"`
	// The callback address of the user. To receive Callback Notifications, enter an available address and accept the HTTP protocol. If this parameter is set to null, the callback notification from the director Station is canceled by default.
	CallbackUrl pulumi.StringPtrOutput `pulumi:"callbackUrl"`
	// Guide station name.
	CasterName pulumi.StringPtrOutput `pulumi:"casterName"`
	// Creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Delayed playback. Time unit: seconds.
	Delay pulumi.Float64PtrOutput `pulumi:"delay"`
	// Master play domain name.
	DomainName pulumi.StringPtrOutput `pulumi:"domainName"`
	// Guide station specification type. Value:
	// - 0: Broadcast single type.
	// - 1: General purpose.
	NormType pulumi.IntOutput `pulumi:"normType"`
	// The paymen type of the resource
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Carousel effective flag.
	//
	// 0: Not in effect.
	//
	// 1: Entry into force.
	ProgramEffect pulumi.IntPtrOutput `pulumi:"programEffect"`
	// The carousel station name, which can be configured when using the carousel function.
	ProgramName pulumi.StringPtrOutput `pulumi:"programName"`
	// Record configuration information. The format is JSON. The configuration element information is as follows:
	RecordConfig pulumi.StringPtrOutput `pulumi:"recordConfig"`
	// Resource Group id
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// resource type
	ResourceType pulumi.StringPtrOutput `pulumi:"resourceType"`
	// The user-defined stream ingest address corresponding to the bypass output address of the guide station. If this parameter is left blank, the streaming address corresponding to the output address automatically generated by Alibaba Cloud is used by default.
	SideOutputUrl pulumi.StringPtrOutput `pulumi:"sideOutputUrl"`
	// The list of multiple forwarding stream addresses, which can be the CDN forwarding stream addresses of Alibaba Cloud or a third-party vendor. A guide can add up to 20 RTMP forwarding addresses.
	SideOutputUrlList pulumi.StringPtrOutput `pulumi:"sideOutputUrlList"`
	// Multi-View synchronization configuration to synchronize multiple video sources. Multi-View synchronization is divided into two modes:
	// - `mode 0`: (In the anchor mode, multiple video sources are synchronized according to the specified mode.)
	// - `mode 1`: (Conference mode, there is no concept of anchor video, all video sources are synchronized with each other.)
	// - `Anchor mode`: hostResourceId: the video source of the anchor in Anchor mode.
	// - `Conference mode`: no hostRsoureId field, only the resource ids in the resourceIds to be provided.
	SyncGroupsConfig pulumi.StringPtrOutput `pulumi:"syncGroupsConfig"`
	// The tag of the resource
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Transcoding configuration.
	//
	// JSON format string, Please capitalize the first letter of the internal field of the structure, hump format input. If this parameter is set to null, the transcoding configuration is cleared by default. If the transcoding template is null, an error is reported when the director starts.
	TranscodeConfig pulumi.StringPtrOutput `pulumi:"transcodeConfig"`
	// The ID of the picture material of the media library.
	UrgentImageId pulumi.StringPtrOutput `pulumi:"urgentImageId"`
	// Prepare the URL of the picture material.
	UrgentImageUrl pulumi.StringPtrOutput `pulumi:"urgentImageUrl"`
	// The prepared live stream URL.
	UrgentLiveStreamUrl pulumi.StringPtrOutput `pulumi:"urgentLiveStreamUrl"`
	// Prepared video, media library material ID. If this parameter is set to null, the standby configuration is cleared by default.
	UrgentMaterialId pulumi.StringPtrOutput `pulumi:"urgentMaterialId"`
}

// NewCaster registers a new resource with the given unique name, arguments, and options.
func NewCaster(ctx *pulumi.Context,
	name string, args *CasterArgs, opts ...pulumi.ResourceOption) (*Caster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NormType == nil {
		return nil, errors.New("invalid value for required argument 'NormType'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Caster
	err := ctx.RegisterResource("alicloud:live/caster:Caster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCaster gets an existing Caster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCaster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CasterState, opts ...pulumi.ResourceOption) (*Caster, error) {
	var resource Caster
	err := ctx.ReadResource("alicloud:live/caster:Caster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Caster resources.
type casterState struct {
	// Automatic standby broadcast configuration. eofThres: indicates that the broadcast is automatically cut and prepared after the flow interruption time, in seconds.
	AutoSwitchUrgentConfig *string `pulumi:"autoSwitchUrgentConfig"`
	// Turn on the cut-off automatic switch for broadcast preparation.
	//
	// true: open.
	//
	// false: closed.
	AutoSwitchUrgentOn *bool `pulumi:"autoSwitchUrgentOn"`
	// The callback address of the user. To receive Callback Notifications, enter an available address and accept the HTTP protocol. If this parameter is set to null, the callback notification from the director Station is canceled by default.
	CallbackUrl *string `pulumi:"callbackUrl"`
	// Guide station name.
	CasterName *string `pulumi:"casterName"`
	// Creation time.
	CreateTime *string `pulumi:"createTime"`
	// Delayed playback. Time unit: seconds.
	Delay *float64 `pulumi:"delay"`
	// Master play domain name.
	DomainName *string `pulumi:"domainName"`
	// Guide station specification type. Value:
	// - 0: Broadcast single type.
	// - 1: General purpose.
	NormType *int `pulumi:"normType"`
	// The paymen type of the resource
	PaymentType *string `pulumi:"paymentType"`
	// Carousel effective flag.
	//
	// 0: Not in effect.
	//
	// 1: Entry into force.
	ProgramEffect *int `pulumi:"programEffect"`
	// The carousel station name, which can be configured when using the carousel function.
	ProgramName *string `pulumi:"programName"`
	// Record configuration information. The format is JSON. The configuration element information is as follows:
	RecordConfig *string `pulumi:"recordConfig"`
	// Resource Group id
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// resource type
	ResourceType *string `pulumi:"resourceType"`
	// The user-defined stream ingest address corresponding to the bypass output address of the guide station. If this parameter is left blank, the streaming address corresponding to the output address automatically generated by Alibaba Cloud is used by default.
	SideOutputUrl *string `pulumi:"sideOutputUrl"`
	// The list of multiple forwarding stream addresses, which can be the CDN forwarding stream addresses of Alibaba Cloud or a third-party vendor. A guide can add up to 20 RTMP forwarding addresses.
	SideOutputUrlList *string `pulumi:"sideOutputUrlList"`
	// Multi-View synchronization configuration to synchronize multiple video sources. Multi-View synchronization is divided into two modes:
	// - `mode 0`: (In the anchor mode, multiple video sources are synchronized according to the specified mode.)
	// - `mode 1`: (Conference mode, there is no concept of anchor video, all video sources are synchronized with each other.)
	// - `Anchor mode`: hostResourceId: the video source of the anchor in Anchor mode.
	// - `Conference mode`: no hostRsoureId field, only the resource ids in the resourceIds to be provided.
	SyncGroupsConfig *string `pulumi:"syncGroupsConfig"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// Transcoding configuration.
	//
	// JSON format string, Please capitalize the first letter of the internal field of the structure, hump format input. If this parameter is set to null, the transcoding configuration is cleared by default. If the transcoding template is null, an error is reported when the director starts.
	TranscodeConfig *string `pulumi:"transcodeConfig"`
	// The ID of the picture material of the media library.
	UrgentImageId *string `pulumi:"urgentImageId"`
	// Prepare the URL of the picture material.
	UrgentImageUrl *string `pulumi:"urgentImageUrl"`
	// The prepared live stream URL.
	UrgentLiveStreamUrl *string `pulumi:"urgentLiveStreamUrl"`
	// Prepared video, media library material ID. If this parameter is set to null, the standby configuration is cleared by default.
	UrgentMaterialId *string `pulumi:"urgentMaterialId"`
}

type CasterState struct {
	// Automatic standby broadcast configuration. eofThres: indicates that the broadcast is automatically cut and prepared after the flow interruption time, in seconds.
	AutoSwitchUrgentConfig pulumi.StringPtrInput
	// Turn on the cut-off automatic switch for broadcast preparation.
	//
	// true: open.
	//
	// false: closed.
	AutoSwitchUrgentOn pulumi.BoolPtrInput
	// The callback address of the user. To receive Callback Notifications, enter an available address and accept the HTTP protocol. If this parameter is set to null, the callback notification from the director Station is canceled by default.
	CallbackUrl pulumi.StringPtrInput
	// Guide station name.
	CasterName pulumi.StringPtrInput
	// Creation time.
	CreateTime pulumi.StringPtrInput
	// Delayed playback. Time unit: seconds.
	Delay pulumi.Float64PtrInput
	// Master play domain name.
	DomainName pulumi.StringPtrInput
	// Guide station specification type. Value:
	// - 0: Broadcast single type.
	// - 1: General purpose.
	NormType pulumi.IntPtrInput
	// The paymen type of the resource
	PaymentType pulumi.StringPtrInput
	// Carousel effective flag.
	//
	// 0: Not in effect.
	//
	// 1: Entry into force.
	ProgramEffect pulumi.IntPtrInput
	// The carousel station name, which can be configured when using the carousel function.
	ProgramName pulumi.StringPtrInput
	// Record configuration information. The format is JSON. The configuration element information is as follows:
	RecordConfig pulumi.StringPtrInput
	// Resource Group id
	ResourceGroupId pulumi.StringPtrInput
	// resource type
	ResourceType pulumi.StringPtrInput
	// The user-defined stream ingest address corresponding to the bypass output address of the guide station. If this parameter is left blank, the streaming address corresponding to the output address automatically generated by Alibaba Cloud is used by default.
	SideOutputUrl pulumi.StringPtrInput
	// The list of multiple forwarding stream addresses, which can be the CDN forwarding stream addresses of Alibaba Cloud or a third-party vendor. A guide can add up to 20 RTMP forwarding addresses.
	SideOutputUrlList pulumi.StringPtrInput
	// Multi-View synchronization configuration to synchronize multiple video sources. Multi-View synchronization is divided into two modes:
	// - `mode 0`: (In the anchor mode, multiple video sources are synchronized according to the specified mode.)
	// - `mode 1`: (Conference mode, there is no concept of anchor video, all video sources are synchronized with each other.)
	// - `Anchor mode`: hostResourceId: the video source of the anchor in Anchor mode.
	// - `Conference mode`: no hostRsoureId field, only the resource ids in the resourceIds to be provided.
	SyncGroupsConfig pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// Transcoding configuration.
	//
	// JSON format string, Please capitalize the first letter of the internal field of the structure, hump format input. If this parameter is set to null, the transcoding configuration is cleared by default. If the transcoding template is null, an error is reported when the director starts.
	TranscodeConfig pulumi.StringPtrInput
	// The ID of the picture material of the media library.
	UrgentImageId pulumi.StringPtrInput
	// Prepare the URL of the picture material.
	UrgentImageUrl pulumi.StringPtrInput
	// The prepared live stream URL.
	UrgentLiveStreamUrl pulumi.StringPtrInput
	// Prepared video, media library material ID. If this parameter is set to null, the standby configuration is cleared by default.
	UrgentMaterialId pulumi.StringPtrInput
}

func (CasterState) ElementType() reflect.Type {
	return reflect.TypeOf((*casterState)(nil)).Elem()
}

type casterArgs struct {
	// Automatic standby broadcast configuration. eofThres: indicates that the broadcast is automatically cut and prepared after the flow interruption time, in seconds.
	AutoSwitchUrgentConfig *string `pulumi:"autoSwitchUrgentConfig"`
	// Turn on the cut-off automatic switch for broadcast preparation.
	//
	// true: open.
	//
	// false: closed.
	AutoSwitchUrgentOn *bool `pulumi:"autoSwitchUrgentOn"`
	// The callback address of the user. To receive Callback Notifications, enter an available address and accept the HTTP protocol. If this parameter is set to null, the callback notification from the director Station is canceled by default.
	CallbackUrl *string `pulumi:"callbackUrl"`
	// Guide station name.
	CasterName *string `pulumi:"casterName"`
	// Delayed playback. Time unit: seconds.
	Delay *float64 `pulumi:"delay"`
	// Master play domain name.
	DomainName *string `pulumi:"domainName"`
	// Guide station specification type. Value:
	// - 0: Broadcast single type.
	// - 1: General purpose.
	NormType int `pulumi:"normType"`
	// The paymen type of the resource
	PaymentType string `pulumi:"paymentType"`
	// Carousel effective flag.
	//
	// 0: Not in effect.
	//
	// 1: Entry into force.
	ProgramEffect *int `pulumi:"programEffect"`
	// The carousel station name, which can be configured when using the carousel function.
	ProgramName *string `pulumi:"programName"`
	// Record configuration information. The format is JSON. The configuration element information is as follows:
	RecordConfig *string `pulumi:"recordConfig"`
	// Resource Group id
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// resource type
	ResourceType *string `pulumi:"resourceType"`
	// The user-defined stream ingest address corresponding to the bypass output address of the guide station. If this parameter is left blank, the streaming address corresponding to the output address automatically generated by Alibaba Cloud is used by default.
	SideOutputUrl *string `pulumi:"sideOutputUrl"`
	// The list of multiple forwarding stream addresses, which can be the CDN forwarding stream addresses of Alibaba Cloud or a third-party vendor. A guide can add up to 20 RTMP forwarding addresses.
	SideOutputUrlList *string `pulumi:"sideOutputUrlList"`
	// Multi-View synchronization configuration to synchronize multiple video sources. Multi-View synchronization is divided into two modes:
	// - `mode 0`: (In the anchor mode, multiple video sources are synchronized according to the specified mode.)
	// - `mode 1`: (Conference mode, there is no concept of anchor video, all video sources are synchronized with each other.)
	// - `Anchor mode`: hostResourceId: the video source of the anchor in Anchor mode.
	// - `Conference mode`: no hostRsoureId field, only the resource ids in the resourceIds to be provided.
	SyncGroupsConfig *string `pulumi:"syncGroupsConfig"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// Transcoding configuration.
	//
	// JSON format string, Please capitalize the first letter of the internal field of the structure, hump format input. If this parameter is set to null, the transcoding configuration is cleared by default. If the transcoding template is null, an error is reported when the director starts.
	TranscodeConfig *string `pulumi:"transcodeConfig"`
	// The ID of the picture material of the media library.
	UrgentImageId *string `pulumi:"urgentImageId"`
	// Prepare the URL of the picture material.
	UrgentImageUrl *string `pulumi:"urgentImageUrl"`
	// The prepared live stream URL.
	UrgentLiveStreamUrl *string `pulumi:"urgentLiveStreamUrl"`
	// Prepared video, media library material ID. If this parameter is set to null, the standby configuration is cleared by default.
	UrgentMaterialId *string `pulumi:"urgentMaterialId"`
}

// The set of arguments for constructing a Caster resource.
type CasterArgs struct {
	// Automatic standby broadcast configuration. eofThres: indicates that the broadcast is automatically cut and prepared after the flow interruption time, in seconds.
	AutoSwitchUrgentConfig pulumi.StringPtrInput
	// Turn on the cut-off automatic switch for broadcast preparation.
	//
	// true: open.
	//
	// false: closed.
	AutoSwitchUrgentOn pulumi.BoolPtrInput
	// The callback address of the user. To receive Callback Notifications, enter an available address and accept the HTTP protocol. If this parameter is set to null, the callback notification from the director Station is canceled by default.
	CallbackUrl pulumi.StringPtrInput
	// Guide station name.
	CasterName pulumi.StringPtrInput
	// Delayed playback. Time unit: seconds.
	Delay pulumi.Float64PtrInput
	// Master play domain name.
	DomainName pulumi.StringPtrInput
	// Guide station specification type. Value:
	// - 0: Broadcast single type.
	// - 1: General purpose.
	NormType pulumi.IntInput
	// The paymen type of the resource
	PaymentType pulumi.StringInput
	// Carousel effective flag.
	//
	// 0: Not in effect.
	//
	// 1: Entry into force.
	ProgramEffect pulumi.IntPtrInput
	// The carousel station name, which can be configured when using the carousel function.
	ProgramName pulumi.StringPtrInput
	// Record configuration information. The format is JSON. The configuration element information is as follows:
	RecordConfig pulumi.StringPtrInput
	// Resource Group id
	ResourceGroupId pulumi.StringPtrInput
	// resource type
	ResourceType pulumi.StringPtrInput
	// The user-defined stream ingest address corresponding to the bypass output address of the guide station. If this parameter is left blank, the streaming address corresponding to the output address automatically generated by Alibaba Cloud is used by default.
	SideOutputUrl pulumi.StringPtrInput
	// The list of multiple forwarding stream addresses, which can be the CDN forwarding stream addresses of Alibaba Cloud or a third-party vendor. A guide can add up to 20 RTMP forwarding addresses.
	SideOutputUrlList pulumi.StringPtrInput
	// Multi-View synchronization configuration to synchronize multiple video sources. Multi-View synchronization is divided into two modes:
	// - `mode 0`: (In the anchor mode, multiple video sources are synchronized according to the specified mode.)
	// - `mode 1`: (Conference mode, there is no concept of anchor video, all video sources are synchronized with each other.)
	// - `Anchor mode`: hostResourceId: the video source of the anchor in Anchor mode.
	// - `Conference mode`: no hostRsoureId field, only the resource ids in the resourceIds to be provided.
	SyncGroupsConfig pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// Transcoding configuration.
	//
	// JSON format string, Please capitalize the first letter of the internal field of the structure, hump format input. If this parameter is set to null, the transcoding configuration is cleared by default. If the transcoding template is null, an error is reported when the director starts.
	TranscodeConfig pulumi.StringPtrInput
	// The ID of the picture material of the media library.
	UrgentImageId pulumi.StringPtrInput
	// Prepare the URL of the picture material.
	UrgentImageUrl pulumi.StringPtrInput
	// The prepared live stream URL.
	UrgentLiveStreamUrl pulumi.StringPtrInput
	// Prepared video, media library material ID. If this parameter is set to null, the standby configuration is cleared by default.
	UrgentMaterialId pulumi.StringPtrInput
}

func (CasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*casterArgs)(nil)).Elem()
}

type CasterInput interface {
	pulumi.Input

	ToCasterOutput() CasterOutput
	ToCasterOutputWithContext(ctx context.Context) CasterOutput
}

func (*Caster) ElementType() reflect.Type {
	return reflect.TypeOf((**Caster)(nil)).Elem()
}

func (i *Caster) ToCasterOutput() CasterOutput {
	return i.ToCasterOutputWithContext(context.Background())
}

func (i *Caster) ToCasterOutputWithContext(ctx context.Context) CasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasterOutput)
}

// CasterArrayInput is an input type that accepts CasterArray and CasterArrayOutput values.
// You can construct a concrete instance of `CasterArrayInput` via:
//
//	CasterArray{ CasterArgs{...} }
type CasterArrayInput interface {
	pulumi.Input

	ToCasterArrayOutput() CasterArrayOutput
	ToCasterArrayOutputWithContext(context.Context) CasterArrayOutput
}

type CasterArray []CasterInput

func (CasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Caster)(nil)).Elem()
}

func (i CasterArray) ToCasterArrayOutput() CasterArrayOutput {
	return i.ToCasterArrayOutputWithContext(context.Background())
}

func (i CasterArray) ToCasterArrayOutputWithContext(ctx context.Context) CasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasterArrayOutput)
}

// CasterMapInput is an input type that accepts CasterMap and CasterMapOutput values.
// You can construct a concrete instance of `CasterMapInput` via:
//
//	CasterMap{ "key": CasterArgs{...} }
type CasterMapInput interface {
	pulumi.Input

	ToCasterMapOutput() CasterMapOutput
	ToCasterMapOutputWithContext(context.Context) CasterMapOutput
}

type CasterMap map[string]CasterInput

func (CasterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Caster)(nil)).Elem()
}

func (i CasterMap) ToCasterMapOutput() CasterMapOutput {
	return i.ToCasterMapOutputWithContext(context.Background())
}

func (i CasterMap) ToCasterMapOutputWithContext(ctx context.Context) CasterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasterMapOutput)
}

type CasterOutput struct{ *pulumi.OutputState }

func (CasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Caster)(nil)).Elem()
}

func (o CasterOutput) ToCasterOutput() CasterOutput {
	return o
}

func (o CasterOutput) ToCasterOutputWithContext(ctx context.Context) CasterOutput {
	return o
}

// Automatic standby broadcast configuration. eofThres: indicates that the broadcast is automatically cut and prepared after the flow interruption time, in seconds.
func (o CasterOutput) AutoSwitchUrgentConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.AutoSwitchUrgentConfig }).(pulumi.StringPtrOutput)
}

// Turn on the cut-off automatic switch for broadcast preparation.
//
// true: open.
//
// false: closed.
func (o CasterOutput) AutoSwitchUrgentOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.BoolPtrOutput { return v.AutoSwitchUrgentOn }).(pulumi.BoolPtrOutput)
}

// The callback address of the user. To receive Callback Notifications, enter an available address and accept the HTTP protocol. If this parameter is set to null, the callback notification from the director Station is canceled by default.
func (o CasterOutput) CallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.CallbackUrl }).(pulumi.StringPtrOutput)
}

// Guide station name.
func (o CasterOutput) CasterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.CasterName }).(pulumi.StringPtrOutput)
}

// Creation time.
func (o CasterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Delayed playback. Time unit: seconds.
func (o CasterOutput) Delay() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.Float64PtrOutput { return v.Delay }).(pulumi.Float64PtrOutput)
}

// Master play domain name.
func (o CasterOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Guide station specification type. Value:
// - 0: Broadcast single type.
// - 1: General purpose.
func (o CasterOutput) NormType() pulumi.IntOutput {
	return o.ApplyT(func(v *Caster) pulumi.IntOutput { return v.NormType }).(pulumi.IntOutput)
}

// The paymen type of the resource
func (o CasterOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Carousel effective flag.
//
// 0: Not in effect.
//
// 1: Entry into force.
func (o CasterOutput) ProgramEffect() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.IntPtrOutput { return v.ProgramEffect }).(pulumi.IntPtrOutput)
}

// The carousel station name, which can be configured when using the carousel function.
func (o CasterOutput) ProgramName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.ProgramName }).(pulumi.StringPtrOutput)
}

// Record configuration information. The format is JSON. The configuration element information is as follows:
func (o CasterOutput) RecordConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.RecordConfig }).(pulumi.StringPtrOutput)
}

// Resource Group id
func (o CasterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// resource type
func (o CasterOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The user-defined stream ingest address corresponding to the bypass output address of the guide station. If this parameter is left blank, the streaming address corresponding to the output address automatically generated by Alibaba Cloud is used by default.
func (o CasterOutput) SideOutputUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.SideOutputUrl }).(pulumi.StringPtrOutput)
}

// The list of multiple forwarding stream addresses, which can be the CDN forwarding stream addresses of Alibaba Cloud or a third-party vendor. A guide can add up to 20 RTMP forwarding addresses.
func (o CasterOutput) SideOutputUrlList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.SideOutputUrlList }).(pulumi.StringPtrOutput)
}

// Multi-View synchronization configuration to synchronize multiple video sources. Multi-View synchronization is divided into two modes:
// - `mode 0`: (In the anchor mode, multiple video sources are synchronized according to the specified mode.)
// - `mode 1`: (Conference mode, there is no concept of anchor video, all video sources are synchronized with each other.)
// - `Anchor mode`: hostResourceId: the video source of the anchor in Anchor mode.
// - `Conference mode`: no hostRsoureId field, only the resource ids in the resourceIds to be provided.
func (o CasterOutput) SyncGroupsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.SyncGroupsConfig }).(pulumi.StringPtrOutput)
}

// The tag of the resource
func (o CasterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Transcoding configuration.
//
// JSON format string, Please capitalize the first letter of the internal field of the structure, hump format input. If this parameter is set to null, the transcoding configuration is cleared by default. If the transcoding template is null, an error is reported when the director starts.
func (o CasterOutput) TranscodeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.TranscodeConfig }).(pulumi.StringPtrOutput)
}

// The ID of the picture material of the media library.
func (o CasterOutput) UrgentImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.UrgentImageId }).(pulumi.StringPtrOutput)
}

// Prepare the URL of the picture material.
func (o CasterOutput) UrgentImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.UrgentImageUrl }).(pulumi.StringPtrOutput)
}

// The prepared live stream URL.
func (o CasterOutput) UrgentLiveStreamUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.UrgentLiveStreamUrl }).(pulumi.StringPtrOutput)
}

// Prepared video, media library material ID. If this parameter is set to null, the standby configuration is cleared by default.
func (o CasterOutput) UrgentMaterialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caster) pulumi.StringPtrOutput { return v.UrgentMaterialId }).(pulumi.StringPtrOutput)
}

type CasterArrayOutput struct{ *pulumi.OutputState }

func (CasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Caster)(nil)).Elem()
}

func (o CasterArrayOutput) ToCasterArrayOutput() CasterArrayOutput {
	return o
}

func (o CasterArrayOutput) ToCasterArrayOutputWithContext(ctx context.Context) CasterArrayOutput {
	return o
}

func (o CasterArrayOutput) Index(i pulumi.IntInput) CasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Caster {
		return vs[0].([]*Caster)[vs[1].(int)]
	}).(CasterOutput)
}

type CasterMapOutput struct{ *pulumi.OutputState }

func (CasterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Caster)(nil)).Elem()
}

func (o CasterMapOutput) ToCasterMapOutput() CasterMapOutput {
	return o
}

func (o CasterMapOutput) ToCasterMapOutputWithContext(ctx context.Context) CasterMapOutput {
	return o
}

func (o CasterMapOutput) MapIndex(k pulumi.StringInput) CasterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Caster {
		return vs[0].(map[string]*Caster)[vs[1].(string)]
	}).(CasterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CasterInput)(nil)).Elem(), &Caster{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasterArrayInput)(nil)).Elem(), CasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasterMapInput)(nil)).Elem(), CasterMap{})
	pulumi.RegisterOutputType(CasterOutput{})
	pulumi.RegisterOutputType(CasterArrayOutput{})
	pulumi.RegisterOutputType(CasterMapOutput{})
}
