// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudstoragegateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Storage Gateway Gateway File Share resource.
//
// For information about Cloud Storage Gateway Gateway File Share and how to use it, see [What is Gateway File Share](https://www.alibabacloud.com/help/zh/doc-detail/170298.htm).
//
// > **NOTE:** Available in v1.144.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudstoragegateway"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/oss"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			defaultStocks, err := cloudstoragegateway.GetStocks(ctx, &cloudstoragegateway.GetStocksArgs{
//				GatewayClass: pulumi.StringRef("Standard"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			vpc, err := vpc.NewNetwork(ctx, "vpc", &vpc.NetworkArgs{
//				VpcName:   pulumi.String("example_value"),
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
//				VpcId:       vpc.ID(),
//				CidrBlock:   pulumi.String("172.16.0.0/21"),
//				ZoneId:      *pulumi.String(defaultStocks.Stocks[0].ZoneId),
//				VswitchName: pulumi.String("example_value"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultStorageBundle, err := cloudstoragegateway.NewStorageBundle(ctx, "defaultStorageBundle", &cloudstoragegateway.StorageBundleArgs{
//				StorageBundleName: pulumi.String("example_value"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultGateway, err := cloudstoragegateway.NewGateway(ctx, "defaultGateway", &cloudstoragegateway.GatewayArgs{
//				Description:            pulumi.String("tf-acctestDesalone"),
//				GatewayClass:           pulumi.String("Standard"),
//				Type:                   pulumi.String("File"),
//				PaymentType:            pulumi.String("PayAsYouGo"),
//				VswitchId:              defaultSwitch.ID(),
//				ReleaseAfterExpiration: pulumi.Bool(true),
//				PublicNetworkBandwidth: pulumi.Int(10),
//				StorageBundleId:        defaultStorageBundle.ID(),
//				Location:               pulumi.String("Cloud"),
//				GatewayName:            pulumi.String("example_value"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultGatewayCacheDisk, err := cloudstoragegateway.NewGatewayCacheDisk(ctx, "defaultGatewayCacheDisk", &cloudstoragegateway.GatewayCacheDiskArgs{
//				CacheDiskCategory: pulumi.String("cloud_efficiency"),
//				GatewayId:         defaultGateway.ID(),
//				CacheDiskSizeInGb: pulumi.Int(50),
//			})
//			if err != nil {
//				return err
//			}
//			defaultBucket, err := oss.NewBucket(ctx, "defaultBucket", &oss.BucketArgs{
//				Bucket: pulumi.String("example_value"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudstoragegateway.NewGatewayFileShare(ctx, "defaultGatewayFileShare", &cloudstoragegateway.GatewayFileShareArgs{
//				GatewayFileShareName: pulumi.String("example_value"),
//				GatewayId:            defaultGateway.ID(),
//				LocalPath:            defaultGatewayCacheDisk.LocalFilePath,
//				OssBucketName:        defaultBucket.Bucket,
//				OssEndpoint:          defaultBucket.ExtranetEndpoint,
//				Protocol:             pulumi.String("NFS"),
//				RemoteSync:           pulumi.Bool(true),
//				PollingInterval:      pulumi.Int(4500),
//				FeLimit:              pulumi.Int(0),
//				BackendLimit:         pulumi.Int(0),
//				CacheMode:            pulumi.String("Cache"),
//				Squash:               pulumi.String("none"),
//				LagPeriod:            pulumi.Int(5),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Storage Gateway Gateway File Share can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:cloudstoragegateway/gatewayFileShare:GatewayFileShare example <gateway_id>:<index_id>
//
// ```
type GatewayFileShare struct {
	pulumi.CustomResourceState

	// Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	AccessBasedEnumeration pulumi.BoolOutput `pulumi:"accessBasedEnumeration"`
	// The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
	BackendLimit pulumi.IntOutput `pulumi:"backendLimit"`
	// The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
	Browsable pulumi.BoolOutput `pulumi:"browsable"`
	// Direct reading OSS of the gateway file share.
	BypassCacheRead pulumi.BoolOutput `pulumi:"bypassCacheRead"`
	// The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
	CacheMode pulumi.StringOutput `pulumi:"cacheMode"`
	// File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
	DirectIo pulumi.BoolOutput `pulumi:"directIo"`
	// The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version >= 1.3.0 above support.
	DownloadLimit pulumi.IntOutput `pulumi:"downloadLimit"`
	// The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version >= 1.0.39 above support.
	FastReclaim pulumi.BoolOutput `pulumi:"fastReclaim"`
	// The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
	FeLimit pulumi.IntOutput `pulumi:"feLimit"`
	// The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
	GatewayFileShareName pulumi.StringOutput `pulumi:"gatewayFileShareName"`
	// The ID of the gateway.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignoreDelete` and `remoteSync` cannot be enabled simultaneously. Gateway version >= 1.0.40 above support.
	IgnoreDelete pulumi.BoolOutput `pulumi:"ignoreDelete"`
	// The whether debris optimization of the gateway file share. Default value: `false`.
	InPlace pulumi.BoolOutput `pulumi:"inPlace"`
	// The ID of the file share.
	IndexId pulumi.StringOutput `pulumi:"indexId"`
	// The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version >= 1.0.40 above support.
	LagPeriod pulumi.IntOutput `pulumi:"lagPeriod"`
	// The cache disk inside the device name.
	LocalPath pulumi.StringOutput `pulumi:"localPath"`
	// The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version >= 1.2.0 above support.
	NfsV4Optimization pulumi.BoolOutput `pulumi:"nfsV4Optimization"`
	// The name of the OSS Bucket.
	OssBucketName pulumi.StringOutput `pulumi:"ossBucketName"`
	// Whether they are using SSL connect to OSS Bucket.
	OssBucketSsl pulumi.BoolOutput `pulumi:"ossBucketSsl"`
	// The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
	OssEndpoint pulumi.StringOutput `pulumi:"ossEndpoint"`
	// In part mode, the directory path group JSON format.
	PartialSyncPaths pulumi.StringPtrOutput `pulumi:"partialSyncPaths"`
	// The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
	PathPrefix pulumi.StringPtrOutput `pulumi:"pathPrefix"`
	// The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
	PollingInterval pulumi.IntPtrOutput `pulumi:"pollingInterval"`
	// Share types. Valid values: `SMB`, `NFS`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
	RemoteSync pulumi.BoolOutput `pulumi:"remoteSync"`
	// Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remoteSync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
	RemoteSyncDownload pulumi.BoolOutput `pulumi:"remoteSyncDownload"`
	// File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
	RoClientList pulumi.StringPtrOutput `pulumi:"roClientList"`
	// The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
	RoUserList pulumi.StringPtrOutput `pulumi:"roUserList"`
	// Read and write the client list. When Protocol NFS is returned when the status is.
	RwClientList pulumi.StringPtrOutput `pulumi:"rwClientList"`
	// Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
	RwUserList pulumi.StringPtrOutput `pulumi:"rwUserList"`
	// The NFS protocol user mapping of the gateway file share. Valid values: `none`, `rootSquash`, `allSquash`, `allAnonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
	Squash pulumi.StringOutput `pulumi:"squash"`
	// Whether to support the archive transparent read.
	SupportArchive pulumi.BoolOutput `pulumi:"supportArchive"`
	// The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version >= 1.3.0 above support.
	TransferAcceleration pulumi.BoolOutput `pulumi:"transferAcceleration"`
	// Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	WindowsAcl pulumi.BoolOutput `pulumi:"windowsAcl"`
}

// NewGatewayFileShare registers a new resource with the given unique name, arguments, and options.
func NewGatewayFileShare(ctx *pulumi.Context,
	name string, args *GatewayFileShareArgs, opts ...pulumi.ResourceOption) (*GatewayFileShare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayFileShareName == nil {
		return nil, errors.New("invalid value for required argument 'GatewayFileShareName'")
	}
	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.LocalPath == nil {
		return nil, errors.New("invalid value for required argument 'LocalPath'")
	}
	if args.OssBucketName == nil {
		return nil, errors.New("invalid value for required argument 'OssBucketName'")
	}
	if args.OssEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'OssEndpoint'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	var resource GatewayFileShare
	err := ctx.RegisterResource("alicloud:cloudstoragegateway/gatewayFileShare:GatewayFileShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayFileShare gets an existing GatewayFileShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayFileShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayFileShareState, opts ...pulumi.ResourceOption) (*GatewayFileShare, error) {
	var resource GatewayFileShare
	err := ctx.ReadResource("alicloud:cloudstoragegateway/gatewayFileShare:GatewayFileShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayFileShare resources.
type gatewayFileShareState struct {
	// Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	AccessBasedEnumeration *bool `pulumi:"accessBasedEnumeration"`
	// The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
	BackendLimit *int `pulumi:"backendLimit"`
	// The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
	Browsable *bool `pulumi:"browsable"`
	// Direct reading OSS of the gateway file share.
	BypassCacheRead *bool `pulumi:"bypassCacheRead"`
	// The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
	CacheMode *string `pulumi:"cacheMode"`
	// File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
	DirectIo *bool `pulumi:"directIo"`
	// The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version >= 1.3.0 above support.
	DownloadLimit *int `pulumi:"downloadLimit"`
	// The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version >= 1.0.39 above support.
	FastReclaim *bool `pulumi:"fastReclaim"`
	// The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
	FeLimit *int `pulumi:"feLimit"`
	// The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
	GatewayFileShareName *string `pulumi:"gatewayFileShareName"`
	// The ID of the gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignoreDelete` and `remoteSync` cannot be enabled simultaneously. Gateway version >= 1.0.40 above support.
	IgnoreDelete *bool `pulumi:"ignoreDelete"`
	// The whether debris optimization of the gateway file share. Default value: `false`.
	InPlace *bool `pulumi:"inPlace"`
	// The ID of the file share.
	IndexId *string `pulumi:"indexId"`
	// The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version >= 1.0.40 above support.
	LagPeriod *int `pulumi:"lagPeriod"`
	// The cache disk inside the device name.
	LocalPath *string `pulumi:"localPath"`
	// The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version >= 1.2.0 above support.
	NfsV4Optimization *bool `pulumi:"nfsV4Optimization"`
	// The name of the OSS Bucket.
	OssBucketName *string `pulumi:"ossBucketName"`
	// Whether they are using SSL connect to OSS Bucket.
	OssBucketSsl *bool `pulumi:"ossBucketSsl"`
	// The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
	OssEndpoint *string `pulumi:"ossEndpoint"`
	// In part mode, the directory path group JSON format.
	PartialSyncPaths *string `pulumi:"partialSyncPaths"`
	// The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
	PathPrefix *string `pulumi:"pathPrefix"`
	// The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
	PollingInterval *int `pulumi:"pollingInterval"`
	// Share types. Valid values: `SMB`, `NFS`.
	Protocol *string `pulumi:"protocol"`
	// Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
	RemoteSync *bool `pulumi:"remoteSync"`
	// Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remoteSync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
	RemoteSyncDownload *bool `pulumi:"remoteSyncDownload"`
	// File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
	RoClientList *string `pulumi:"roClientList"`
	// The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
	RoUserList *string `pulumi:"roUserList"`
	// Read and write the client list. When Protocol NFS is returned when the status is.
	RwClientList *string `pulumi:"rwClientList"`
	// Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
	RwUserList *string `pulumi:"rwUserList"`
	// The NFS protocol user mapping of the gateway file share. Valid values: `none`, `rootSquash`, `allSquash`, `allAnonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
	Squash *string `pulumi:"squash"`
	// Whether to support the archive transparent read.
	SupportArchive *bool `pulumi:"supportArchive"`
	// The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version >= 1.3.0 above support.
	TransferAcceleration *bool `pulumi:"transferAcceleration"`
	// Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	WindowsAcl *bool `pulumi:"windowsAcl"`
}

type GatewayFileShareState struct {
	// Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	AccessBasedEnumeration pulumi.BoolPtrInput
	// The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
	BackendLimit pulumi.IntPtrInput
	// The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
	Browsable pulumi.BoolPtrInput
	// Direct reading OSS of the gateway file share.
	BypassCacheRead pulumi.BoolPtrInput
	// The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
	CacheMode pulumi.StringPtrInput
	// File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
	DirectIo pulumi.BoolPtrInput
	// The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version >= 1.3.0 above support.
	DownloadLimit pulumi.IntPtrInput
	// The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version >= 1.0.39 above support.
	FastReclaim pulumi.BoolPtrInput
	// The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
	FeLimit pulumi.IntPtrInput
	// The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
	GatewayFileShareName pulumi.StringPtrInput
	// The ID of the gateway.
	GatewayId pulumi.StringPtrInput
	// The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignoreDelete` and `remoteSync` cannot be enabled simultaneously. Gateway version >= 1.0.40 above support.
	IgnoreDelete pulumi.BoolPtrInput
	// The whether debris optimization of the gateway file share. Default value: `false`.
	InPlace pulumi.BoolPtrInput
	// The ID of the file share.
	IndexId pulumi.StringPtrInput
	// The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version >= 1.0.40 above support.
	LagPeriod pulumi.IntPtrInput
	// The cache disk inside the device name.
	LocalPath pulumi.StringPtrInput
	// The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version >= 1.2.0 above support.
	NfsV4Optimization pulumi.BoolPtrInput
	// The name of the OSS Bucket.
	OssBucketName pulumi.StringPtrInput
	// Whether they are using SSL connect to OSS Bucket.
	OssBucketSsl pulumi.BoolPtrInput
	// The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
	OssEndpoint pulumi.StringPtrInput
	// In part mode, the directory path group JSON format.
	PartialSyncPaths pulumi.StringPtrInput
	// The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
	PathPrefix pulumi.StringPtrInput
	// The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
	PollingInterval pulumi.IntPtrInput
	// Share types. Valid values: `SMB`, `NFS`.
	Protocol pulumi.StringPtrInput
	// Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
	RemoteSync pulumi.BoolPtrInput
	// Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remoteSync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
	RemoteSyncDownload pulumi.BoolPtrInput
	// File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
	RoClientList pulumi.StringPtrInput
	// The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
	RoUserList pulumi.StringPtrInput
	// Read and write the client list. When Protocol NFS is returned when the status is.
	RwClientList pulumi.StringPtrInput
	// Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
	RwUserList pulumi.StringPtrInput
	// The NFS protocol user mapping of the gateway file share. Valid values: `none`, `rootSquash`, `allSquash`, `allAnonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
	Squash pulumi.StringPtrInput
	// Whether to support the archive transparent read.
	SupportArchive pulumi.BoolPtrInput
	// The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version >= 1.3.0 above support.
	TransferAcceleration pulumi.BoolPtrInput
	// Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	WindowsAcl pulumi.BoolPtrInput
}

func (GatewayFileShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayFileShareState)(nil)).Elem()
}

type gatewayFileShareArgs struct {
	// Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	AccessBasedEnumeration *bool `pulumi:"accessBasedEnumeration"`
	// The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
	BackendLimit *int `pulumi:"backendLimit"`
	// The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
	Browsable *bool `pulumi:"browsable"`
	// Direct reading OSS of the gateway file share.
	BypassCacheRead *bool `pulumi:"bypassCacheRead"`
	// The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
	CacheMode *string `pulumi:"cacheMode"`
	// File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
	DirectIo *bool `pulumi:"directIo"`
	// The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version >= 1.3.0 above support.
	DownloadLimit *int `pulumi:"downloadLimit"`
	// The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version >= 1.0.39 above support.
	FastReclaim *bool `pulumi:"fastReclaim"`
	// The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
	FeLimit *int `pulumi:"feLimit"`
	// The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
	GatewayFileShareName string `pulumi:"gatewayFileShareName"`
	// The ID of the gateway.
	GatewayId string `pulumi:"gatewayId"`
	// The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignoreDelete` and `remoteSync` cannot be enabled simultaneously. Gateway version >= 1.0.40 above support.
	IgnoreDelete *bool `pulumi:"ignoreDelete"`
	// The whether debris optimization of the gateway file share. Default value: `false`.
	InPlace *bool `pulumi:"inPlace"`
	// The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version >= 1.0.40 above support.
	LagPeriod *int `pulumi:"lagPeriod"`
	// The cache disk inside the device name.
	LocalPath string `pulumi:"localPath"`
	// The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version >= 1.2.0 above support.
	NfsV4Optimization *bool `pulumi:"nfsV4Optimization"`
	// The name of the OSS Bucket.
	OssBucketName string `pulumi:"ossBucketName"`
	// Whether they are using SSL connect to OSS Bucket.
	OssBucketSsl *bool `pulumi:"ossBucketSsl"`
	// The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
	OssEndpoint string `pulumi:"ossEndpoint"`
	// In part mode, the directory path group JSON format.
	PartialSyncPaths *string `pulumi:"partialSyncPaths"`
	// The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
	PathPrefix *string `pulumi:"pathPrefix"`
	// The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
	PollingInterval *int `pulumi:"pollingInterval"`
	// Share types. Valid values: `SMB`, `NFS`.
	Protocol string `pulumi:"protocol"`
	// Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
	RemoteSync *bool `pulumi:"remoteSync"`
	// Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remoteSync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
	RemoteSyncDownload *bool `pulumi:"remoteSyncDownload"`
	// File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
	RoClientList *string `pulumi:"roClientList"`
	// The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
	RoUserList *string `pulumi:"roUserList"`
	// Read and write the client list. When Protocol NFS is returned when the status is.
	RwClientList *string `pulumi:"rwClientList"`
	// Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
	RwUserList *string `pulumi:"rwUserList"`
	// The NFS protocol user mapping of the gateway file share. Valid values: `none`, `rootSquash`, `allSquash`, `allAnonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
	Squash *string `pulumi:"squash"`
	// Whether to support the archive transparent read.
	SupportArchive *bool `pulumi:"supportArchive"`
	// The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version >= 1.3.0 above support.
	TransferAcceleration *bool `pulumi:"transferAcceleration"`
	// Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	WindowsAcl *bool `pulumi:"windowsAcl"`
}

// The set of arguments for constructing a GatewayFileShare resource.
type GatewayFileShareArgs struct {
	// Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	AccessBasedEnumeration pulumi.BoolPtrInput
	// The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
	BackendLimit pulumi.IntPtrInput
	// The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
	Browsable pulumi.BoolPtrInput
	// Direct reading OSS of the gateway file share.
	BypassCacheRead pulumi.BoolPtrInput
	// The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
	CacheMode pulumi.StringPtrInput
	// File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
	DirectIo pulumi.BoolPtrInput
	// The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version >= 1.3.0 above support.
	DownloadLimit pulumi.IntPtrInput
	// The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version >= 1.0.39 above support.
	FastReclaim pulumi.BoolPtrInput
	// The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
	FeLimit pulumi.IntPtrInput
	// The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
	GatewayFileShareName pulumi.StringInput
	// The ID of the gateway.
	GatewayId pulumi.StringInput
	// The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignoreDelete` and `remoteSync` cannot be enabled simultaneously. Gateway version >= 1.0.40 above support.
	IgnoreDelete pulumi.BoolPtrInput
	// The whether debris optimization of the gateway file share. Default value: `false`.
	InPlace pulumi.BoolPtrInput
	// The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version >= 1.0.40 above support.
	LagPeriod pulumi.IntPtrInput
	// The cache disk inside the device name.
	LocalPath pulumi.StringInput
	// The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version >= 1.2.0 above support.
	NfsV4Optimization pulumi.BoolPtrInput
	// The name of the OSS Bucket.
	OssBucketName pulumi.StringInput
	// Whether they are using SSL connect to OSS Bucket.
	OssBucketSsl pulumi.BoolPtrInput
	// The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
	OssEndpoint pulumi.StringInput
	// In part mode, the directory path group JSON format.
	PartialSyncPaths pulumi.StringPtrInput
	// The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
	PathPrefix pulumi.StringPtrInput
	// The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
	PollingInterval pulumi.IntPtrInput
	// Share types. Valid values: `SMB`, `NFS`.
	Protocol pulumi.StringInput
	// Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
	RemoteSync pulumi.BoolPtrInput
	// Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remoteSync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
	RemoteSyncDownload pulumi.BoolPtrInput
	// File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
	RoClientList pulumi.StringPtrInput
	// The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
	RoUserList pulumi.StringPtrInput
	// Read and write the client list. When Protocol NFS is returned when the status is.
	RwClientList pulumi.StringPtrInput
	// Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
	RwUserList pulumi.StringPtrInput
	// The NFS protocol user mapping of the gateway file share. Valid values: `none`, `rootSquash`, `allSquash`, `allAnonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
	Squash pulumi.StringPtrInput
	// Whether to support the archive transparent read.
	SupportArchive pulumi.BoolPtrInput
	// The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version >= 1.3.0 above support.
	TransferAcceleration pulumi.BoolPtrInput
	// Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
	WindowsAcl pulumi.BoolPtrInput
}

func (GatewayFileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayFileShareArgs)(nil)).Elem()
}

type GatewayFileShareInput interface {
	pulumi.Input

	ToGatewayFileShareOutput() GatewayFileShareOutput
	ToGatewayFileShareOutputWithContext(ctx context.Context) GatewayFileShareOutput
}

func (*GatewayFileShare) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayFileShare)(nil)).Elem()
}

func (i *GatewayFileShare) ToGatewayFileShareOutput() GatewayFileShareOutput {
	return i.ToGatewayFileShareOutputWithContext(context.Background())
}

func (i *GatewayFileShare) ToGatewayFileShareOutputWithContext(ctx context.Context) GatewayFileShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayFileShareOutput)
}

// GatewayFileShareArrayInput is an input type that accepts GatewayFileShareArray and GatewayFileShareArrayOutput values.
// You can construct a concrete instance of `GatewayFileShareArrayInput` via:
//
//	GatewayFileShareArray{ GatewayFileShareArgs{...} }
type GatewayFileShareArrayInput interface {
	pulumi.Input

	ToGatewayFileShareArrayOutput() GatewayFileShareArrayOutput
	ToGatewayFileShareArrayOutputWithContext(context.Context) GatewayFileShareArrayOutput
}

type GatewayFileShareArray []GatewayFileShareInput

func (GatewayFileShareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayFileShare)(nil)).Elem()
}

func (i GatewayFileShareArray) ToGatewayFileShareArrayOutput() GatewayFileShareArrayOutput {
	return i.ToGatewayFileShareArrayOutputWithContext(context.Background())
}

func (i GatewayFileShareArray) ToGatewayFileShareArrayOutputWithContext(ctx context.Context) GatewayFileShareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayFileShareArrayOutput)
}

// GatewayFileShareMapInput is an input type that accepts GatewayFileShareMap and GatewayFileShareMapOutput values.
// You can construct a concrete instance of `GatewayFileShareMapInput` via:
//
//	GatewayFileShareMap{ "key": GatewayFileShareArgs{...} }
type GatewayFileShareMapInput interface {
	pulumi.Input

	ToGatewayFileShareMapOutput() GatewayFileShareMapOutput
	ToGatewayFileShareMapOutputWithContext(context.Context) GatewayFileShareMapOutput
}

type GatewayFileShareMap map[string]GatewayFileShareInput

func (GatewayFileShareMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayFileShare)(nil)).Elem()
}

func (i GatewayFileShareMap) ToGatewayFileShareMapOutput() GatewayFileShareMapOutput {
	return i.ToGatewayFileShareMapOutputWithContext(context.Background())
}

func (i GatewayFileShareMap) ToGatewayFileShareMapOutputWithContext(ctx context.Context) GatewayFileShareMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayFileShareMapOutput)
}

type GatewayFileShareOutput struct{ *pulumi.OutputState }

func (GatewayFileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayFileShare)(nil)).Elem()
}

func (o GatewayFileShareOutput) ToGatewayFileShareOutput() GatewayFileShareOutput {
	return o
}

func (o GatewayFileShareOutput) ToGatewayFileShareOutputWithContext(ctx context.Context) GatewayFileShareOutput {
	return o
}

// Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
func (o GatewayFileShareOutput) AccessBasedEnumeration() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.AccessBasedEnumeration }).(pulumi.BoolOutput)
}

// The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
func (o GatewayFileShareOutput) BackendLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.IntOutput { return v.BackendLimit }).(pulumi.IntOutput)
}

// The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
func (o GatewayFileShareOutput) Browsable() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.Browsable }).(pulumi.BoolOutput)
}

// Direct reading OSS of the gateway file share.
func (o GatewayFileShareOutput) BypassCacheRead() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.BypassCacheRead }).(pulumi.BoolOutput)
}

// The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
func (o GatewayFileShareOutput) CacheMode() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.CacheMode }).(pulumi.StringOutput)
}

// File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
func (o GatewayFileShareOutput) DirectIo() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.DirectIo }).(pulumi.BoolOutput)
}

// The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version >= 1.3.0 above support.
func (o GatewayFileShareOutput) DownloadLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.IntOutput { return v.DownloadLimit }).(pulumi.IntOutput)
}

// The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version >= 1.0.39 above support.
func (o GatewayFileShareOutput) FastReclaim() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.FastReclaim }).(pulumi.BoolOutput)
}

// The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
func (o GatewayFileShareOutput) FeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.IntOutput { return v.FeLimit }).(pulumi.IntOutput)
}

// The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
func (o GatewayFileShareOutput) GatewayFileShareName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.GatewayFileShareName }).(pulumi.StringOutput)
}

// The ID of the gateway.
func (o GatewayFileShareOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignoreDelete` and `remoteSync` cannot be enabled simultaneously. Gateway version >= 1.0.40 above support.
func (o GatewayFileShareOutput) IgnoreDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.IgnoreDelete }).(pulumi.BoolOutput)
}

// The whether debris optimization of the gateway file share. Default value: `false`.
func (o GatewayFileShareOutput) InPlace() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.InPlace }).(pulumi.BoolOutput)
}

// The ID of the file share.
func (o GatewayFileShareOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.IndexId }).(pulumi.StringOutput)
}

// The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version >= 1.0.40 above support.
func (o GatewayFileShareOutput) LagPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.IntOutput { return v.LagPeriod }).(pulumi.IntOutput)
}

// The cache disk inside the device name.
func (o GatewayFileShareOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.LocalPath }).(pulumi.StringOutput)
}

// The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version >= 1.2.0 above support.
func (o GatewayFileShareOutput) NfsV4Optimization() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.NfsV4Optimization }).(pulumi.BoolOutput)
}

// The name of the OSS Bucket.
func (o GatewayFileShareOutput) OssBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.OssBucketName }).(pulumi.StringOutput)
}

// Whether they are using SSL connect to OSS Bucket.
func (o GatewayFileShareOutput) OssBucketSsl() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.OssBucketSsl }).(pulumi.BoolOutput)
}

// The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
func (o GatewayFileShareOutput) OssEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.OssEndpoint }).(pulumi.StringOutput)
}

// In part mode, the directory path group JSON format.
func (o GatewayFileShareOutput) PartialSyncPaths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringPtrOutput { return v.PartialSyncPaths }).(pulumi.StringPtrOutput)
}

// The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
func (o GatewayFileShareOutput) PathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringPtrOutput { return v.PathPrefix }).(pulumi.StringPtrOutput)
}

// The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
func (o GatewayFileShareOutput) PollingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.IntPtrOutput { return v.PollingInterval }).(pulumi.IntPtrOutput)
}

// Share types. Valid values: `SMB`, `NFS`.
func (o GatewayFileShareOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
func (o GatewayFileShareOutput) RemoteSync() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.RemoteSync }).(pulumi.BoolOutput)
}

// Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remoteSync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
func (o GatewayFileShareOutput) RemoteSyncDownload() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.RemoteSyncDownload }).(pulumi.BoolOutput)
}

// File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
func (o GatewayFileShareOutput) RoClientList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringPtrOutput { return v.RoClientList }).(pulumi.StringPtrOutput)
}

// The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
func (o GatewayFileShareOutput) RoUserList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringPtrOutput { return v.RoUserList }).(pulumi.StringPtrOutput)
}

// Read and write the client list. When Protocol NFS is returned when the status is.
func (o GatewayFileShareOutput) RwClientList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringPtrOutput { return v.RwClientList }).(pulumi.StringPtrOutput)
}

// Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
func (o GatewayFileShareOutput) RwUserList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringPtrOutput { return v.RwUserList }).(pulumi.StringPtrOutput)
}

// The NFS protocol user mapping of the gateway file share. Valid values: `none`, `rootSquash`, `allSquash`, `allAnonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
func (o GatewayFileShareOutput) Squash() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.StringOutput { return v.Squash }).(pulumi.StringOutput)
}

// Whether to support the archive transparent read.
func (o GatewayFileShareOutput) SupportArchive() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.SupportArchive }).(pulumi.BoolOutput)
}

// The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version >= 1.3.0 above support.
func (o GatewayFileShareOutput) TransferAcceleration() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.TransferAcceleration }).(pulumi.BoolOutput)
}

// Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version >= 1.0.45 above support.
func (o GatewayFileShareOutput) WindowsAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayFileShare) pulumi.BoolOutput { return v.WindowsAcl }).(pulumi.BoolOutput)
}

type GatewayFileShareArrayOutput struct{ *pulumi.OutputState }

func (GatewayFileShareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayFileShare)(nil)).Elem()
}

func (o GatewayFileShareArrayOutput) ToGatewayFileShareArrayOutput() GatewayFileShareArrayOutput {
	return o
}

func (o GatewayFileShareArrayOutput) ToGatewayFileShareArrayOutputWithContext(ctx context.Context) GatewayFileShareArrayOutput {
	return o
}

func (o GatewayFileShareArrayOutput) Index(i pulumi.IntInput) GatewayFileShareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayFileShare {
		return vs[0].([]*GatewayFileShare)[vs[1].(int)]
	}).(GatewayFileShareOutput)
}

type GatewayFileShareMapOutput struct{ *pulumi.OutputState }

func (GatewayFileShareMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayFileShare)(nil)).Elem()
}

func (o GatewayFileShareMapOutput) ToGatewayFileShareMapOutput() GatewayFileShareMapOutput {
	return o
}

func (o GatewayFileShareMapOutput) ToGatewayFileShareMapOutputWithContext(ctx context.Context) GatewayFileShareMapOutput {
	return o
}

func (o GatewayFileShareMapOutput) MapIndex(k pulumi.StringInput) GatewayFileShareOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayFileShare {
		return vs[0].(map[string]*GatewayFileShare)[vs[1].(string)]
	}).(GatewayFileShareOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayFileShareInput)(nil)).Elem(), &GatewayFileShare{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayFileShareArrayInput)(nil)).Elem(), GatewayFileShareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayFileShareMapInput)(nil)).Elem(), GatewayFileShareMap{})
	pulumi.RegisterOutputType(GatewayFileShareOutput{})
	pulumi.RegisterOutputType(GatewayFileShareArrayOutput{})
	pulumi.RegisterOutputType(GatewayFileShareMapOutput{})
}
