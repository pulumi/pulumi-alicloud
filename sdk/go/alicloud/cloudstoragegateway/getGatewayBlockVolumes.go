// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudstoragegateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Cloud Storage Gateway Gateway Block Volumes of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.144.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudstoragegateway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := cloudstoragegateway.GetGatewayBlockVolumes(ctx, &cloudstoragegateway.GetGatewayBlockVolumesArgs{
// 			GatewayId: "example_value",
// 			Ids: []string{
// 				"example_value-1",
// 				"example_value-2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("cloudStorageGatewayGatewayBlockVolumeId1", ids.Volumes[0].Id)
// 		nameRegex, err := cloudstoragegateway.GetGatewayBlockVolumes(ctx, &cloudstoragegateway.GetGatewayBlockVolumesArgs{
// 			GatewayId: "example_value",
// 			NameRegex: pulumi.StringRef("^my-GatewayBlockVolume"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("cloudStorageGatewayGatewayBlockVolumeId2", nameRegex.Volumes[0].Id)
// 		return nil
// 	})
// }
// ```
func GetGatewayBlockVolumes(ctx *pulumi.Context, args *GetGatewayBlockVolumesArgs, opts ...pulumi.InvokeOption) (*GetGatewayBlockVolumesResult, error) {
	var rv GetGatewayBlockVolumesResult
	err := ctx.Invoke("alicloud:cloudstoragegateway/getGatewayBlockVolumes:getGatewayBlockVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayBlockVolumes.
type GetGatewayBlockVolumesArgs struct {
	// The Gateway ID.
	GatewayId string `pulumi:"gatewayId"`
	// A list of Gateway Block Volume IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Gateway Block Volume name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of volume.
	Status *int `pulumi:"status"`
}

// A collection of values returned by getGatewayBlockVolumes.
type GetGatewayBlockVolumesResult struct {
	GatewayId string `pulumi:"gatewayId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                         `pulumi:"id"`
	Ids        []string                       `pulumi:"ids"`
	NameRegex  *string                        `pulumi:"nameRegex"`
	Names      []string                       `pulumi:"names"`
	OutputFile *string                        `pulumi:"outputFile"`
	Status     *int                           `pulumi:"status"`
	Volumes    []GetGatewayBlockVolumesVolume `pulumi:"volumes"`
}

func GetGatewayBlockVolumesOutput(ctx *pulumi.Context, args GetGatewayBlockVolumesOutputArgs, opts ...pulumi.InvokeOption) GetGatewayBlockVolumesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGatewayBlockVolumesResult, error) {
			args := v.(GetGatewayBlockVolumesArgs)
			r, err := GetGatewayBlockVolumes(ctx, &args, opts...)
			var s GetGatewayBlockVolumesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGatewayBlockVolumesResultOutput)
}

// A collection of arguments for invoking getGatewayBlockVolumes.
type GetGatewayBlockVolumesOutputArgs struct {
	// The Gateway ID.
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// A list of Gateway Block Volume IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Gateway Block Volume name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of volume.
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (GetGatewayBlockVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayBlockVolumesArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayBlockVolumes.
type GetGatewayBlockVolumesResultOutput struct{ *pulumi.OutputState }

func (GetGatewayBlockVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayBlockVolumesResult)(nil)).Elem()
}

func (o GetGatewayBlockVolumesResultOutput) ToGetGatewayBlockVolumesResultOutput() GetGatewayBlockVolumesResultOutput {
	return o
}

func (o GetGatewayBlockVolumesResultOutput) ToGetGatewayBlockVolumesResultOutputWithContext(ctx context.Context) GetGatewayBlockVolumesResultOutput {
	return o
}

func (o GetGatewayBlockVolumesResultOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGatewayBlockVolumesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGatewayBlockVolumesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetGatewayBlockVolumesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetGatewayBlockVolumesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetGatewayBlockVolumesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetGatewayBlockVolumesResultOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) *int { return v.Status }).(pulumi.IntPtrOutput)
}

func (o GetGatewayBlockVolumesResultOutput) Volumes() GetGatewayBlockVolumesVolumeArrayOutput {
	return o.ApplyT(func(v GetGatewayBlockVolumesResult) []GetGatewayBlockVolumesVolume { return v.Volumes }).(GetGatewayBlockVolumesVolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGatewayBlockVolumesResultOutput{})
}
