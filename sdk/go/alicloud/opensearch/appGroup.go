// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Open Search App Group resource.
//
// For information about Open Search App Group and how to use it, see [What is App Group](https://www.aliyun.com/product/opensearch).
//
// > **NOTE:** Available in v1.136.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/opensearch"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "name"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		_, err := opensearch.NewAppGroup(ctx, "default", &opensearch.AppGroupArgs{
// 			AppGroupName: pulumi.String(name),
// 			PaymentType:  pulumi.String("PayAsYouGo"),
// 			Type:         pulumi.String("standard"),
// 			Quota: &opensearch.AppGroupQuotaArgs{
// 				DocSize:         pulumi.Int(1),
// 				ComputeResource: pulumi.Int(20),
// 				Spec:            pulumi.String("opensearch.share.common"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Open Search App Group can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:opensearch/appGroup:AppGroup example <id>
// ```
type AppGroup struct {
	pulumi.CustomResourceState

	// Application Group Name.
	AppGroupName pulumi.StringOutput `pulumi:"appGroupName"`
	// Billing model. Valid values:`computeResource` and `qps`.
	ChargeWay pulumi.StringOutput `pulumi:"chargeWay"`
	// The version of Application Group Name.
	CurrentVersion pulumi.StringPtrOutput `pulumi:"currentVersion"`
	// The description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
	OrderType pulumi.StringOutput `pulumi:"orderType"`
	// Order cycle information. The details see Block order.
	Orders AppGroupOrderArrayOutput `pulumi:"orders"`
	// The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Quota information.  The details see Block quota.
	Quota AppGroupQuotaOutput `pulumi:"quota"`
	// The status of the resource. Valid values: `producing`,`reviewPending`,`configPending`,`normal`,`frozen`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Application type. Valid Values: `standard`, `enhanced`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAppGroup registers a new resource with the given unique name, arguments, and options.
func NewAppGroup(ctx *pulumi.Context,
	name string, args *AppGroupArgs, opts ...pulumi.ResourceOption) (*AppGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppGroupName == nil {
		return nil, errors.New("invalid value for required argument 'AppGroupName'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	if args.Quota == nil {
		return nil, errors.New("invalid value for required argument 'Quota'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource AppGroup
	err := ctx.RegisterResource("alicloud:opensearch/appGroup:AppGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppGroup gets an existing AppGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppGroupState, opts ...pulumi.ResourceOption) (*AppGroup, error) {
	var resource AppGroup
	err := ctx.ReadResource("alicloud:opensearch/appGroup:AppGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppGroup resources.
type appGroupState struct {
	// Application Group Name.
	AppGroupName *string `pulumi:"appGroupName"`
	// Billing model. Valid values:`computeResource` and `qps`.
	ChargeWay *string `pulumi:"chargeWay"`
	// The version of Application Group Name.
	CurrentVersion *string `pulumi:"currentVersion"`
	// The description of the resource.
	Description *string `pulumi:"description"`
	// Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
	OrderType *string `pulumi:"orderType"`
	// Order cycle information. The details see Block order.
	Orders []AppGroupOrder `pulumi:"orders"`
	// The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
	PaymentType *string `pulumi:"paymentType"`
	// Quota information.  The details see Block quota.
	Quota *AppGroupQuota `pulumi:"quota"`
	// The status of the resource. Valid values: `producing`,`reviewPending`,`configPending`,`normal`,`frozen`.
	Status *string `pulumi:"status"`
	// Application type. Valid Values: `standard`, `enhanced`.
	Type *string `pulumi:"type"`
}

type AppGroupState struct {
	// Application Group Name.
	AppGroupName pulumi.StringPtrInput
	// Billing model. Valid values:`computeResource` and `qps`.
	ChargeWay pulumi.StringPtrInput
	// The version of Application Group Name.
	CurrentVersion pulumi.StringPtrInput
	// The description of the resource.
	Description pulumi.StringPtrInput
	// Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
	OrderType pulumi.StringPtrInput
	// Order cycle information. The details see Block order.
	Orders AppGroupOrderArrayInput
	// The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
	PaymentType pulumi.StringPtrInput
	// Quota information.  The details see Block quota.
	Quota AppGroupQuotaPtrInput
	// The status of the resource. Valid values: `producing`,`reviewPending`,`configPending`,`normal`,`frozen`.
	Status pulumi.StringPtrInput
	// Application type. Valid Values: `standard`, `enhanced`.
	Type pulumi.StringPtrInput
}

func (AppGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*appGroupState)(nil)).Elem()
}

type appGroupArgs struct {
	// Application Group Name.
	AppGroupName string `pulumi:"appGroupName"`
	// Billing model. Valid values:`computeResource` and `qps`.
	ChargeWay *string `pulumi:"chargeWay"`
	// The version of Application Group Name.
	CurrentVersion *string `pulumi:"currentVersion"`
	// The description of the resource.
	Description *string `pulumi:"description"`
	// Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
	OrderType *string `pulumi:"orderType"`
	// Order cycle information. The details see Block order.
	Orders []AppGroupOrder `pulumi:"orders"`
	// The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
	PaymentType string `pulumi:"paymentType"`
	// Quota information.  The details see Block quota.
	Quota AppGroupQuota `pulumi:"quota"`
	// Application type. Valid Values: `standard`, `enhanced`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AppGroup resource.
type AppGroupArgs struct {
	// Application Group Name.
	AppGroupName pulumi.StringInput
	// Billing model. Valid values:`computeResource` and `qps`.
	ChargeWay pulumi.StringPtrInput
	// The version of Application Group Name.
	CurrentVersion pulumi.StringPtrInput
	// The description of the resource.
	Description pulumi.StringPtrInput
	// Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
	OrderType pulumi.StringPtrInput
	// Order cycle information. The details see Block order.
	Orders AppGroupOrderArrayInput
	// The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
	PaymentType pulumi.StringInput
	// Quota information.  The details see Block quota.
	Quota AppGroupQuotaInput
	// Application type. Valid Values: `standard`, `enhanced`.
	Type pulumi.StringInput
}

func (AppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appGroupArgs)(nil)).Elem()
}

type AppGroupInput interface {
	pulumi.Input

	ToAppGroupOutput() AppGroupOutput
	ToAppGroupOutputWithContext(ctx context.Context) AppGroupOutput
}

func (*AppGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGroup)(nil)).Elem()
}

func (i *AppGroup) ToAppGroupOutput() AppGroupOutput {
	return i.ToAppGroupOutputWithContext(context.Background())
}

func (i *AppGroup) ToAppGroupOutputWithContext(ctx context.Context) AppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGroupOutput)
}

// AppGroupArrayInput is an input type that accepts AppGroupArray and AppGroupArrayOutput values.
// You can construct a concrete instance of `AppGroupArrayInput` via:
//
//          AppGroupArray{ AppGroupArgs{...} }
type AppGroupArrayInput interface {
	pulumi.Input

	ToAppGroupArrayOutput() AppGroupArrayOutput
	ToAppGroupArrayOutputWithContext(context.Context) AppGroupArrayOutput
}

type AppGroupArray []AppGroupInput

func (AppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppGroup)(nil)).Elem()
}

func (i AppGroupArray) ToAppGroupArrayOutput() AppGroupArrayOutput {
	return i.ToAppGroupArrayOutputWithContext(context.Background())
}

func (i AppGroupArray) ToAppGroupArrayOutputWithContext(ctx context.Context) AppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGroupArrayOutput)
}

// AppGroupMapInput is an input type that accepts AppGroupMap and AppGroupMapOutput values.
// You can construct a concrete instance of `AppGroupMapInput` via:
//
//          AppGroupMap{ "key": AppGroupArgs{...} }
type AppGroupMapInput interface {
	pulumi.Input

	ToAppGroupMapOutput() AppGroupMapOutput
	ToAppGroupMapOutputWithContext(context.Context) AppGroupMapOutput
}

type AppGroupMap map[string]AppGroupInput

func (AppGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppGroup)(nil)).Elem()
}

func (i AppGroupMap) ToAppGroupMapOutput() AppGroupMapOutput {
	return i.ToAppGroupMapOutputWithContext(context.Background())
}

func (i AppGroupMap) ToAppGroupMapOutputWithContext(ctx context.Context) AppGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGroupMapOutput)
}

type AppGroupOutput struct{ *pulumi.OutputState }

func (AppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGroup)(nil)).Elem()
}

func (o AppGroupOutput) ToAppGroupOutput() AppGroupOutput {
	return o
}

func (o AppGroupOutput) ToAppGroupOutputWithContext(ctx context.Context) AppGroupOutput {
	return o
}

type AppGroupArrayOutput struct{ *pulumi.OutputState }

func (AppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppGroup)(nil)).Elem()
}

func (o AppGroupArrayOutput) ToAppGroupArrayOutput() AppGroupArrayOutput {
	return o
}

func (o AppGroupArrayOutput) ToAppGroupArrayOutputWithContext(ctx context.Context) AppGroupArrayOutput {
	return o
}

func (o AppGroupArrayOutput) Index(i pulumi.IntInput) AppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppGroup {
		return vs[0].([]*AppGroup)[vs[1].(int)]
	}).(AppGroupOutput)
}

type AppGroupMapOutput struct{ *pulumi.OutputState }

func (AppGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppGroup)(nil)).Elem()
}

func (o AppGroupMapOutput) ToAppGroupMapOutput() AppGroupMapOutput {
	return o
}

func (o AppGroupMapOutput) ToAppGroupMapOutputWithContext(ctx context.Context) AppGroupMapOutput {
	return o
}

func (o AppGroupMapOutput) MapIndex(k pulumi.StringInput) AppGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppGroup {
		return vs[0].(map[string]*AppGroup)[vs[1].(string)]
	}).(AppGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppGroupInput)(nil)).Elem(), &AppGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppGroupArrayInput)(nil)).Elem(), AppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppGroupMapInput)(nil)).Elem(), AppGroupMap{})
	pulumi.RegisterOutputType(AppGroupOutput{})
	pulumi.RegisterOutputType(AppGroupArrayOutput{})
	pulumi.RegisterOutputType(AppGroupMapOutput{})
}
