// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Waiting Room Rule resource.
//
// For information about ESA Waiting Room Rule and how to use it, see [What is Waiting Room Rule](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateWaitingRoomRule).
//
// > **NOTE:** Available since v1.244.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.String("terraform.site"),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultWaitingRoom, err := esa.NewWaitingRoom(ctx, "default", &esa.WaitingRoomArgs{
//				Status:                      pulumi.String("off"),
//				SiteId:                      defaultSite.ID(),
//				JsonResponseEnable:          pulumi.String("off"),
//				Description:                 pulumi.String("example"),
//				WaitingRoomType:             pulumi.String("default"),
//				DisableSessionRenewalEnable: pulumi.String("off"),
//				CookieName:                  pulumi.String("__aliwaitingroom_example"),
//				WaitingRoomName:             pulumi.String("waitingroom_example"),
//				QueueAllEnable:              pulumi.String("off"),
//				QueuingStatusCode:           pulumi.String("200"),
//				CustomPageHtml:              pulumi.String(""),
//				NewUsersPerMinute:           pulumi.String("200"),
//				SessionDuration:             pulumi.String("5"),
//				Language:                    pulumi.String("zhcn"),
//				TotalActiveUsers:            pulumi.String("300"),
//				QueuingMethod:               pulumi.String("fifo"),
//				HostNameAndPaths: esa.WaitingRoomHostNameAndPathArray{
//					&esa.WaitingRoomHostNameAndPathArgs{
//						Domain:    pulumi.String("sub_domain.com"),
//						Path:      pulumi.String("/example"),
//						Subdomain: pulumi.String("example_sub_domain.com."),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewWaitingRoomRule(ctx, "default", &esa.WaitingRoomRuleArgs{
//				Rule:          pulumi.String("(http.host eq \"video.example.com\")"),
//				WaitingRoomId: defaultWaitingRoom.WaitingRoomId,
//				RuleName:      pulumi.String("WaitingRoomRule_example1"),
//				Status:        pulumi.String("off"),
//				SiteId:        defaultSite.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Waiting Room Rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/waitingRoomRule:WaitingRoomRule example <site_id>:<waiting_room_id>:<waiting_room_rule_id>
// ```
type WaitingRoomRule struct {
	pulumi.CustomResourceState

	// The content of the rule, the implemented policy or conditional expression.
	Rule pulumi.StringOutput `pulumi:"rule"`
	// Rule name, optional, used to query by waiting room bypass rule name.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// Rule enabled status, supporting:
	// -'on': means enabled.
	// -'off': means disabled.
	Status pulumi.StringOutput `pulumi:"status"`
	// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
	WaitingRoomId pulumi.StringOutput `pulumi:"waitingRoomId"`
	// The rule ID, which can be used to query a specific rule.
	WaitingRoomRuleId pulumi.IntOutput `pulumi:"waitingRoomRuleId"`
}

// NewWaitingRoomRule registers a new resource with the given unique name, arguments, and options.
func NewWaitingRoomRule(ctx *pulumi.Context,
	name string, args *WaitingRoomRuleArgs, opts ...pulumi.ResourceOption) (*WaitingRoomRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.WaitingRoomId == nil {
		return nil, errors.New("invalid value for required argument 'WaitingRoomId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WaitingRoomRule
	err := ctx.RegisterResource("alicloud:esa/waitingRoomRule:WaitingRoomRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWaitingRoomRule gets an existing WaitingRoomRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWaitingRoomRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WaitingRoomRuleState, opts ...pulumi.ResourceOption) (*WaitingRoomRule, error) {
	var resource WaitingRoomRule
	err := ctx.ReadResource("alicloud:esa/waitingRoomRule:WaitingRoomRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WaitingRoomRule resources.
type waitingRoomRuleState struct {
	// The content of the rule, the implemented policy or conditional expression.
	Rule *string `pulumi:"rule"`
	// Rule name, optional, used to query by waiting room bypass rule name.
	RuleName *string `pulumi:"ruleName"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId *int `pulumi:"siteId"`
	// Rule enabled status, supporting:
	// -'on': means enabled.
	// -'off': means disabled.
	Status *string `pulumi:"status"`
	// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
	WaitingRoomId *string `pulumi:"waitingRoomId"`
	// The rule ID, which can be used to query a specific rule.
	WaitingRoomRuleId *int `pulumi:"waitingRoomRuleId"`
}

type WaitingRoomRuleState struct {
	// The content of the rule, the implemented policy or conditional expression.
	Rule pulumi.StringPtrInput
	// Rule name, optional, used to query by waiting room bypass rule name.
	RuleName pulumi.StringPtrInput
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntPtrInput
	// Rule enabled status, supporting:
	// -'on': means enabled.
	// -'off': means disabled.
	Status pulumi.StringPtrInput
	// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
	WaitingRoomId pulumi.StringPtrInput
	// The rule ID, which can be used to query a specific rule.
	WaitingRoomRuleId pulumi.IntPtrInput
}

func (WaitingRoomRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*waitingRoomRuleState)(nil)).Elem()
}

type waitingRoomRuleArgs struct {
	// The content of the rule, the implemented policy or conditional expression.
	Rule string `pulumi:"rule"`
	// Rule name, optional, used to query by waiting room bypass rule name.
	RuleName string `pulumi:"ruleName"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId int `pulumi:"siteId"`
	// Rule enabled status, supporting:
	// -'on': means enabled.
	// -'off': means disabled.
	Status string `pulumi:"status"`
	// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
	WaitingRoomId string `pulumi:"waitingRoomId"`
}

// The set of arguments for constructing a WaitingRoomRule resource.
type WaitingRoomRuleArgs struct {
	// The content of the rule, the implemented policy or conditional expression.
	Rule pulumi.StringInput
	// Rule name, optional, used to query by waiting room bypass rule name.
	RuleName pulumi.StringInput
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntInput
	// Rule enabled status, supporting:
	// -'on': means enabled.
	// -'off': means disabled.
	Status pulumi.StringInput
	// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
	WaitingRoomId pulumi.StringInput
}

func (WaitingRoomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*waitingRoomRuleArgs)(nil)).Elem()
}

type WaitingRoomRuleInput interface {
	pulumi.Input

	ToWaitingRoomRuleOutput() WaitingRoomRuleOutput
	ToWaitingRoomRuleOutputWithContext(ctx context.Context) WaitingRoomRuleOutput
}

func (*WaitingRoomRule) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitingRoomRule)(nil)).Elem()
}

func (i *WaitingRoomRule) ToWaitingRoomRuleOutput() WaitingRoomRuleOutput {
	return i.ToWaitingRoomRuleOutputWithContext(context.Background())
}

func (i *WaitingRoomRule) ToWaitingRoomRuleOutputWithContext(ctx context.Context) WaitingRoomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitingRoomRuleOutput)
}

// WaitingRoomRuleArrayInput is an input type that accepts WaitingRoomRuleArray and WaitingRoomRuleArrayOutput values.
// You can construct a concrete instance of `WaitingRoomRuleArrayInput` via:
//
//	WaitingRoomRuleArray{ WaitingRoomRuleArgs{...} }
type WaitingRoomRuleArrayInput interface {
	pulumi.Input

	ToWaitingRoomRuleArrayOutput() WaitingRoomRuleArrayOutput
	ToWaitingRoomRuleArrayOutputWithContext(context.Context) WaitingRoomRuleArrayOutput
}

type WaitingRoomRuleArray []WaitingRoomRuleInput

func (WaitingRoomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaitingRoomRule)(nil)).Elem()
}

func (i WaitingRoomRuleArray) ToWaitingRoomRuleArrayOutput() WaitingRoomRuleArrayOutput {
	return i.ToWaitingRoomRuleArrayOutputWithContext(context.Background())
}

func (i WaitingRoomRuleArray) ToWaitingRoomRuleArrayOutputWithContext(ctx context.Context) WaitingRoomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitingRoomRuleArrayOutput)
}

// WaitingRoomRuleMapInput is an input type that accepts WaitingRoomRuleMap and WaitingRoomRuleMapOutput values.
// You can construct a concrete instance of `WaitingRoomRuleMapInput` via:
//
//	WaitingRoomRuleMap{ "key": WaitingRoomRuleArgs{...} }
type WaitingRoomRuleMapInput interface {
	pulumi.Input

	ToWaitingRoomRuleMapOutput() WaitingRoomRuleMapOutput
	ToWaitingRoomRuleMapOutputWithContext(context.Context) WaitingRoomRuleMapOutput
}

type WaitingRoomRuleMap map[string]WaitingRoomRuleInput

func (WaitingRoomRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaitingRoomRule)(nil)).Elem()
}

func (i WaitingRoomRuleMap) ToWaitingRoomRuleMapOutput() WaitingRoomRuleMapOutput {
	return i.ToWaitingRoomRuleMapOutputWithContext(context.Background())
}

func (i WaitingRoomRuleMap) ToWaitingRoomRuleMapOutputWithContext(ctx context.Context) WaitingRoomRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitingRoomRuleMapOutput)
}

type WaitingRoomRuleOutput struct{ *pulumi.OutputState }

func (WaitingRoomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitingRoomRule)(nil)).Elem()
}

func (o WaitingRoomRuleOutput) ToWaitingRoomRuleOutput() WaitingRoomRuleOutput {
	return o
}

func (o WaitingRoomRuleOutput) ToWaitingRoomRuleOutputWithContext(ctx context.Context) WaitingRoomRuleOutput {
	return o
}

// The content of the rule, the implemented policy or conditional expression.
func (o WaitingRoomRuleOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v *WaitingRoomRule) pulumi.StringOutput { return v.Rule }).(pulumi.StringOutput)
}

// Rule name, optional, used to query by waiting room bypass rule name.
func (o WaitingRoomRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *WaitingRoomRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// The site ID, which can be obtained by calling the ListSites API.
func (o WaitingRoomRuleOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *WaitingRoomRule) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// Rule enabled status, supporting:
// -'on': means enabled.
// -'off': means disabled.
func (o WaitingRoomRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *WaitingRoomRule) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Waiting room ID, used to identify a specific waiting room. It can be obtained by calling the [listwaitingroom](https://help.aliyun.com/document_detail/2850279.html) interface.
func (o WaitingRoomRuleOutput) WaitingRoomId() pulumi.StringOutput {
	return o.ApplyT(func(v *WaitingRoomRule) pulumi.StringOutput { return v.WaitingRoomId }).(pulumi.StringOutput)
}

// The rule ID, which can be used to query a specific rule.
func (o WaitingRoomRuleOutput) WaitingRoomRuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *WaitingRoomRule) pulumi.IntOutput { return v.WaitingRoomRuleId }).(pulumi.IntOutput)
}

type WaitingRoomRuleArrayOutput struct{ *pulumi.OutputState }

func (WaitingRoomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WaitingRoomRule)(nil)).Elem()
}

func (o WaitingRoomRuleArrayOutput) ToWaitingRoomRuleArrayOutput() WaitingRoomRuleArrayOutput {
	return o
}

func (o WaitingRoomRuleArrayOutput) ToWaitingRoomRuleArrayOutputWithContext(ctx context.Context) WaitingRoomRuleArrayOutput {
	return o
}

func (o WaitingRoomRuleArrayOutput) Index(i pulumi.IntInput) WaitingRoomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WaitingRoomRule {
		return vs[0].([]*WaitingRoomRule)[vs[1].(int)]
	}).(WaitingRoomRuleOutput)
}

type WaitingRoomRuleMapOutput struct{ *pulumi.OutputState }

func (WaitingRoomRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WaitingRoomRule)(nil)).Elem()
}

func (o WaitingRoomRuleMapOutput) ToWaitingRoomRuleMapOutput() WaitingRoomRuleMapOutput {
	return o
}

func (o WaitingRoomRuleMapOutput) ToWaitingRoomRuleMapOutputWithContext(ctx context.Context) WaitingRoomRuleMapOutput {
	return o
}

func (o WaitingRoomRuleMapOutput) MapIndex(k pulumi.StringInput) WaitingRoomRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WaitingRoomRule {
		return vs[0].(map[string]*WaitingRoomRule)[vs[1].(string)]
	}).(WaitingRoomRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WaitingRoomRuleInput)(nil)).Elem(), &WaitingRoomRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*WaitingRoomRuleArrayInput)(nil)).Elem(), WaitingRoomRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WaitingRoomRuleMapInput)(nil)).Elem(), WaitingRoomRuleMap{})
	pulumi.RegisterOutputType(WaitingRoomRuleOutput{})
	pulumi.RegisterOutputType(WaitingRoomRuleArrayOutput{})
	pulumi.RegisterOutputType(WaitingRoomRuleMapOutput{})
}
