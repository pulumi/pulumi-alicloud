// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Video Processing resource.
//
// For information about ESA Video Processing and how to use it, see [What is Video Processing](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateVideoProcessing).
//
// > **NOTE:** Available since v1.251.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.String("chenxin0116.site"),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewVideoProcessing(ctx, "default", &esa.VideoProcessingArgs{
//				VideoSeekEnable:  pulumi.String("on"),
//				RuleEnable:       pulumi.String("on"),
//				Mp4SeekEnd:       pulumi.String("end"),
//				FlvSeekStart:     pulumi.String("start"),
//				Rule:             pulumi.String("(http.host eq \"video.example.com\")"),
//				FlvVideoSeekMode: pulumi.String("by_byte"),
//				Mp4SeekStart:     pulumi.String("start"),
//				FlvSeekEnd:       pulumi.String("end"),
//				SiteId:           defaultSite.ID(),
//				Sequence:         pulumi.Int(1),
//				SiteVersion:      pulumi.Int(0),
//				RuleName:         pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Video Processing can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/videoProcessing:VideoProcessing example <site_id>:<config_id>
// ```
type VideoProcessing struct {
	pulumi.CustomResourceState

	// Config Id
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Custom FLV end parameters.
	FlvSeekEnd pulumi.StringPtrOutput `pulumi:"flvSeekEnd"`
	// Custom FLV start parameters.
	FlvSeekStart pulumi.StringPtrOutput `pulumi:"flvSeekStart"`
	// FLV drag mode. Value range:
	FlvVideoSeekMode pulumi.StringPtrOutput `pulumi:"flvVideoSeekMode"`
	// Custom mp4 end parameters.
	Mp4SeekEnd pulumi.StringPtrOutput `pulumi:"mp4SeekEnd"`
	// Custom mp4 start parameters.
	Mp4SeekStart pulumi.StringPtrOutput `pulumi:"mp4SeekStart"`
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// - Match all incoming requests: value set to true
	// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule pulumi.StringPtrOutput `pulumi:"rule"`
	// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
	RuleEnable pulumi.StringPtrOutput `pulumi:"ruleEnable"`
	// Rule name. When adding global configuration, this parameter does not need to be set.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// Order of rule execution. The smaller the value, the higher the priority for execution.
	Sequence pulumi.IntPtrOutput `pulumi:"sequence"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
	SiteVersion pulumi.IntPtrOutput `pulumi:"siteVersion"`
	// Drag and drop the play function switch. Value range:
	VideoSeekEnable pulumi.StringPtrOutput `pulumi:"videoSeekEnable"`
}

// NewVideoProcessing registers a new resource with the given unique name, arguments, and options.
func NewVideoProcessing(ctx *pulumi.Context,
	name string, args *VideoProcessingArgs, opts ...pulumi.ResourceOption) (*VideoProcessing, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VideoProcessing
	err := ctx.RegisterResource("alicloud:esa/videoProcessing:VideoProcessing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVideoProcessing gets an existing VideoProcessing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVideoProcessing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VideoProcessingState, opts ...pulumi.ResourceOption) (*VideoProcessing, error) {
	var resource VideoProcessing
	err := ctx.ReadResource("alicloud:esa/videoProcessing:VideoProcessing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VideoProcessing resources.
type videoProcessingState struct {
	// Config Id
	ConfigId *int `pulumi:"configId"`
	// Custom FLV end parameters.
	FlvSeekEnd *string `pulumi:"flvSeekEnd"`
	// Custom FLV start parameters.
	FlvSeekStart *string `pulumi:"flvSeekStart"`
	// FLV drag mode. Value range:
	FlvVideoSeekMode *string `pulumi:"flvVideoSeekMode"`
	// Custom mp4 end parameters.
	Mp4SeekEnd *string `pulumi:"mp4SeekEnd"`
	// Custom mp4 start parameters.
	Mp4SeekStart *string `pulumi:"mp4SeekStart"`
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// - Match all incoming requests: value set to true
	// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule *string `pulumi:"rule"`
	// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name. When adding global configuration, this parameter does not need to be set.
	RuleName *string `pulumi:"ruleName"`
	// Order of rule execution. The smaller the value, the higher the priority for execution.
	Sequence *int `pulumi:"sequence"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId *int `pulumi:"siteId"`
	// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
	SiteVersion *int `pulumi:"siteVersion"`
	// Drag and drop the play function switch. Value range:
	VideoSeekEnable *string `pulumi:"videoSeekEnable"`
}

type VideoProcessingState struct {
	// Config Id
	ConfigId pulumi.IntPtrInput
	// Custom FLV end parameters.
	FlvSeekEnd pulumi.StringPtrInput
	// Custom FLV start parameters.
	FlvSeekStart pulumi.StringPtrInput
	// FLV drag mode. Value range:
	FlvVideoSeekMode pulumi.StringPtrInput
	// Custom mp4 end parameters.
	Mp4SeekEnd pulumi.StringPtrInput
	// Custom mp4 start parameters.
	Mp4SeekStart pulumi.StringPtrInput
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// - Match all incoming requests: value set to true
	// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule pulumi.StringPtrInput
	// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
	RuleEnable pulumi.StringPtrInput
	// Rule name. When adding global configuration, this parameter does not need to be set.
	RuleName pulumi.StringPtrInput
	// Order of rule execution. The smaller the value, the higher the priority for execution.
	Sequence pulumi.IntPtrInput
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntPtrInput
	// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
	SiteVersion pulumi.IntPtrInput
	// Drag and drop the play function switch. Value range:
	VideoSeekEnable pulumi.StringPtrInput
}

func (VideoProcessingState) ElementType() reflect.Type {
	return reflect.TypeOf((*videoProcessingState)(nil)).Elem()
}

type videoProcessingArgs struct {
	// Custom FLV end parameters.
	FlvSeekEnd *string `pulumi:"flvSeekEnd"`
	// Custom FLV start parameters.
	FlvSeekStart *string `pulumi:"flvSeekStart"`
	// FLV drag mode. Value range:
	FlvVideoSeekMode *string `pulumi:"flvVideoSeekMode"`
	// Custom mp4 end parameters.
	Mp4SeekEnd *string `pulumi:"mp4SeekEnd"`
	// Custom mp4 start parameters.
	Mp4SeekStart *string `pulumi:"mp4SeekStart"`
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// - Match all incoming requests: value set to true
	// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule *string `pulumi:"rule"`
	// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name. When adding global configuration, this parameter does not need to be set.
	RuleName *string `pulumi:"ruleName"`
	// Order of rule execution. The smaller the value, the higher the priority for execution.
	Sequence *int `pulumi:"sequence"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId int `pulumi:"siteId"`
	// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
	SiteVersion *int `pulumi:"siteVersion"`
	// Drag and drop the play function switch. Value range:
	VideoSeekEnable *string `pulumi:"videoSeekEnable"`
}

// The set of arguments for constructing a VideoProcessing resource.
type VideoProcessingArgs struct {
	// Custom FLV end parameters.
	FlvSeekEnd pulumi.StringPtrInput
	// Custom FLV start parameters.
	FlvSeekStart pulumi.StringPtrInput
	// FLV drag mode. Value range:
	FlvVideoSeekMode pulumi.StringPtrInput
	// Custom mp4 end parameters.
	Mp4SeekEnd pulumi.StringPtrInput
	// Custom mp4 start parameters.
	Mp4SeekStart pulumi.StringPtrInput
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// - Match all incoming requests: value set to true
	// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule pulumi.StringPtrInput
	// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
	RuleEnable pulumi.StringPtrInput
	// Rule name. When adding global configuration, this parameter does not need to be set.
	RuleName pulumi.StringPtrInput
	// Order of rule execution. The smaller the value, the higher the priority for execution.
	Sequence pulumi.IntPtrInput
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntInput
	// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
	SiteVersion pulumi.IntPtrInput
	// Drag and drop the play function switch. Value range:
	VideoSeekEnable pulumi.StringPtrInput
}

func (VideoProcessingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*videoProcessingArgs)(nil)).Elem()
}

type VideoProcessingInput interface {
	pulumi.Input

	ToVideoProcessingOutput() VideoProcessingOutput
	ToVideoProcessingOutputWithContext(ctx context.Context) VideoProcessingOutput
}

func (*VideoProcessing) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoProcessing)(nil)).Elem()
}

func (i *VideoProcessing) ToVideoProcessingOutput() VideoProcessingOutput {
	return i.ToVideoProcessingOutputWithContext(context.Background())
}

func (i *VideoProcessing) ToVideoProcessingOutputWithContext(ctx context.Context) VideoProcessingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoProcessingOutput)
}

// VideoProcessingArrayInput is an input type that accepts VideoProcessingArray and VideoProcessingArrayOutput values.
// You can construct a concrete instance of `VideoProcessingArrayInput` via:
//
//	VideoProcessingArray{ VideoProcessingArgs{...} }
type VideoProcessingArrayInput interface {
	pulumi.Input

	ToVideoProcessingArrayOutput() VideoProcessingArrayOutput
	ToVideoProcessingArrayOutputWithContext(context.Context) VideoProcessingArrayOutput
}

type VideoProcessingArray []VideoProcessingInput

func (VideoProcessingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VideoProcessing)(nil)).Elem()
}

func (i VideoProcessingArray) ToVideoProcessingArrayOutput() VideoProcessingArrayOutput {
	return i.ToVideoProcessingArrayOutputWithContext(context.Background())
}

func (i VideoProcessingArray) ToVideoProcessingArrayOutputWithContext(ctx context.Context) VideoProcessingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoProcessingArrayOutput)
}

// VideoProcessingMapInput is an input type that accepts VideoProcessingMap and VideoProcessingMapOutput values.
// You can construct a concrete instance of `VideoProcessingMapInput` via:
//
//	VideoProcessingMap{ "key": VideoProcessingArgs{...} }
type VideoProcessingMapInput interface {
	pulumi.Input

	ToVideoProcessingMapOutput() VideoProcessingMapOutput
	ToVideoProcessingMapOutputWithContext(context.Context) VideoProcessingMapOutput
}

type VideoProcessingMap map[string]VideoProcessingInput

func (VideoProcessingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VideoProcessing)(nil)).Elem()
}

func (i VideoProcessingMap) ToVideoProcessingMapOutput() VideoProcessingMapOutput {
	return i.ToVideoProcessingMapOutputWithContext(context.Background())
}

func (i VideoProcessingMap) ToVideoProcessingMapOutputWithContext(ctx context.Context) VideoProcessingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideoProcessingMapOutput)
}

type VideoProcessingOutput struct{ *pulumi.OutputState }

func (VideoProcessingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideoProcessing)(nil)).Elem()
}

func (o VideoProcessingOutput) ToVideoProcessingOutput() VideoProcessingOutput {
	return o
}

func (o VideoProcessingOutput) ToVideoProcessingOutputWithContext(ctx context.Context) VideoProcessingOutput {
	return o
}

// Config Id
func (o VideoProcessingOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Custom FLV end parameters.
func (o VideoProcessingOutput) FlvSeekEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.FlvSeekEnd }).(pulumi.StringPtrOutput)
}

// Custom FLV start parameters.
func (o VideoProcessingOutput) FlvSeekStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.FlvSeekStart }).(pulumi.StringPtrOutput)
}

// FLV drag mode. Value range:
func (o VideoProcessingOutput) FlvVideoSeekMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.FlvVideoSeekMode }).(pulumi.StringPtrOutput)
}

// Custom mp4 end parameters.
func (o VideoProcessingOutput) Mp4SeekEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.Mp4SeekEnd }).(pulumi.StringPtrOutput)
}

// Custom mp4 start parameters.
func (o VideoProcessingOutput) Mp4SeekStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.Mp4SeekStart }).(pulumi.StringPtrOutput)
}

// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
// - Match all incoming requests: value set to true
// - Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
func (o VideoProcessingOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.Rule }).(pulumi.StringPtrOutput)
}

// Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
func (o VideoProcessingOutput) RuleEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.RuleEnable }).(pulumi.StringPtrOutput)
}

// Rule name. When adding global configuration, this parameter does not need to be set.
func (o VideoProcessingOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Order of rule execution. The smaller the value, the higher the priority for execution.
func (o VideoProcessingOutput) Sequence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.IntPtrOutput { return v.Sequence }).(pulumi.IntPtrOutput)
}

// The site ID, which can be obtained by calling the ListSites API.
func (o VideoProcessingOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
func (o VideoProcessingOutput) SiteVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.IntPtrOutput { return v.SiteVersion }).(pulumi.IntPtrOutput)
}

// Drag and drop the play function switch. Value range:
func (o VideoProcessingOutput) VideoSeekEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VideoProcessing) pulumi.StringPtrOutput { return v.VideoSeekEnable }).(pulumi.StringPtrOutput)
}

type VideoProcessingArrayOutput struct{ *pulumi.OutputState }

func (VideoProcessingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VideoProcessing)(nil)).Elem()
}

func (o VideoProcessingArrayOutput) ToVideoProcessingArrayOutput() VideoProcessingArrayOutput {
	return o
}

func (o VideoProcessingArrayOutput) ToVideoProcessingArrayOutputWithContext(ctx context.Context) VideoProcessingArrayOutput {
	return o
}

func (o VideoProcessingArrayOutput) Index(i pulumi.IntInput) VideoProcessingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VideoProcessing {
		return vs[0].([]*VideoProcessing)[vs[1].(int)]
	}).(VideoProcessingOutput)
}

type VideoProcessingMapOutput struct{ *pulumi.OutputState }

func (VideoProcessingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VideoProcessing)(nil)).Elem()
}

func (o VideoProcessingMapOutput) ToVideoProcessingMapOutput() VideoProcessingMapOutput {
	return o
}

func (o VideoProcessingMapOutput) ToVideoProcessingMapOutputWithContext(ctx context.Context) VideoProcessingMapOutput {
	return o
}

func (o VideoProcessingMapOutput) MapIndex(k pulumi.StringInput) VideoProcessingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VideoProcessing {
		return vs[0].(map[string]*VideoProcessing)[vs[1].(string)]
	}).(VideoProcessingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VideoProcessingInput)(nil)).Elem(), &VideoProcessing{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideoProcessingArrayInput)(nil)).Elem(), VideoProcessingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideoProcessingMapInput)(nil)).Elem(), VideoProcessingMap{})
	pulumi.RegisterOutputType(VideoProcessingOutput{})
	pulumi.RegisterOutputType(VideoProcessingArrayOutput{})
	pulumi.RegisterOutputType(VideoProcessingMapOutput{})
}
