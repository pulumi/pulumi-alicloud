// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Http Response Header Modification Rule resource.
//
// For information about ESA Http Response Header Modification Rule and how to use it, see [What is Http Response Header Modification Rule](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/api-esa-2024-09-10-createhttpresponseheadermodificationrule).
//
// > **NOTE:** Available since v1.243.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			resourceHttpResponseHeaderModificationRuleExample, err := esa.NewRatePlanInstance(ctx, "resource_HttpResponseHeaderModificationRule_example", &esa.RatePlanInstanceArgs{
//				Type:        pulumi.String("NS"),
//				AutoRenew:   pulumi.Bool(false),
//				Period:      pulumi.Int(1),
//				PaymentType: pulumi.String("Subscription"),
//				Coverage:    pulumi.String("overseas"),
//				AutoPay:     pulumi.Bool(true),
//				PlanName:    pulumi.String("high"),
//			})
//			if err != nil {
//				return err
//			}
//			resourceSiteHttpResponseHeaderModificationRuleExample, err := esa.NewSite(ctx, "resource_Site_HttpResponseHeaderModificationRule_example", &esa.SiteArgs{
//				SiteName:   pulumi.String("gositecdn.cn"),
//				InstanceId: resourceHttpResponseHeaderModificationRuleExample.ID(),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewHttpResponseHeaderModificationRule(ctx, "default", &esa.HttpResponseHeaderModificationRuleArgs{
//				RuleEnable: pulumi.String("on"),
//				ResponseHeaderModifications: esa.HttpResponseHeaderModificationRuleResponseHeaderModificationArray{
//					&esa.HttpResponseHeaderModificationRuleResponseHeaderModificationArgs{
//						Value:     pulumi.String("add"),
//						Operation: pulumi.String("add"),
//						Name:      pulumi.String("exampleadd"),
//					},
//					&esa.HttpResponseHeaderModificationRuleResponseHeaderModificationArgs{
//						Operation: pulumi.String("del"),
//						Name:      pulumi.String("exampledel"),
//					},
//					&esa.HttpResponseHeaderModificationRuleResponseHeaderModificationArgs{
//						Operation: pulumi.String("modify"),
//						Name:      pulumi.String("examplemodify"),
//						Value:     pulumi.String("modify"),
//					},
//				},
//				Rule:        pulumi.String("(http.host eq \"video.example.com\")"),
//				SiteVersion: pulumi.Int(0),
//				RuleName:    pulumi.String("exampleResponseHeader"),
//				SiteId:      resourceSiteHttpResponseHeaderModificationRuleExample.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Http Response Header Modification Rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/httpResponseHeaderModificationRule:HttpResponseHeaderModificationRule example <site_id>:<config_id>
// ```
type HttpResponseHeaderModificationRule struct {
	pulumi.CustomResourceState

	// Config Id
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Modify response headers, supporting add, delete, and modify operations. See `responseHeaderModification` below.
	ResponseHeaderModifications HttpResponseHeaderModificationRuleResponseHeaderModificationArrayOutput `pulumi:"responseHeaderModifications"`
	// Rule content.
	Rule pulumi.StringPtrOutput `pulumi:"rule"`
	// Rule switch. Possible values:
	RuleEnable pulumi.StringPtrOutput `pulumi:"ruleEnable"`
	// Rule name.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// The site ID.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// The version number of the website configurations.
	SiteVersion pulumi.IntPtrOutput `pulumi:"siteVersion"`
}

// NewHttpResponseHeaderModificationRule registers a new resource with the given unique name, arguments, and options.
func NewHttpResponseHeaderModificationRule(ctx *pulumi.Context,
	name string, args *HttpResponseHeaderModificationRuleArgs, opts ...pulumi.ResourceOption) (*HttpResponseHeaderModificationRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResponseHeaderModifications == nil {
		return nil, errors.New("invalid value for required argument 'ResponseHeaderModifications'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HttpResponseHeaderModificationRule
	err := ctx.RegisterResource("alicloud:esa/httpResponseHeaderModificationRule:HttpResponseHeaderModificationRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHttpResponseHeaderModificationRule gets an existing HttpResponseHeaderModificationRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHttpResponseHeaderModificationRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HttpResponseHeaderModificationRuleState, opts ...pulumi.ResourceOption) (*HttpResponseHeaderModificationRule, error) {
	var resource HttpResponseHeaderModificationRule
	err := ctx.ReadResource("alicloud:esa/httpResponseHeaderModificationRule:HttpResponseHeaderModificationRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HttpResponseHeaderModificationRule resources.
type httpResponseHeaderModificationRuleState struct {
	// Config Id
	ConfigId *int `pulumi:"configId"`
	// Modify response headers, supporting add, delete, and modify operations. See `responseHeaderModification` below.
	ResponseHeaderModifications []HttpResponseHeaderModificationRuleResponseHeaderModification `pulumi:"responseHeaderModifications"`
	// Rule content.
	Rule *string `pulumi:"rule"`
	// Rule switch. Possible values:
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name.
	RuleName *string `pulumi:"ruleName"`
	// The site ID.
	SiteId *int `pulumi:"siteId"`
	// The version number of the website configurations.
	SiteVersion *int `pulumi:"siteVersion"`
}

type HttpResponseHeaderModificationRuleState struct {
	// Config Id
	ConfigId pulumi.IntPtrInput
	// Modify response headers, supporting add, delete, and modify operations. See `responseHeaderModification` below.
	ResponseHeaderModifications HttpResponseHeaderModificationRuleResponseHeaderModificationArrayInput
	// Rule content.
	Rule pulumi.StringPtrInput
	// Rule switch. Possible values:
	RuleEnable pulumi.StringPtrInput
	// Rule name.
	RuleName pulumi.StringPtrInput
	// The site ID.
	SiteId pulumi.IntPtrInput
	// The version number of the website configurations.
	SiteVersion pulumi.IntPtrInput
}

func (HttpResponseHeaderModificationRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*httpResponseHeaderModificationRuleState)(nil)).Elem()
}

type httpResponseHeaderModificationRuleArgs struct {
	// Modify response headers, supporting add, delete, and modify operations. See `responseHeaderModification` below.
	ResponseHeaderModifications []HttpResponseHeaderModificationRuleResponseHeaderModification `pulumi:"responseHeaderModifications"`
	// Rule content.
	Rule *string `pulumi:"rule"`
	// Rule switch. Possible values:
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name.
	RuleName *string `pulumi:"ruleName"`
	// The site ID.
	SiteId int `pulumi:"siteId"`
	// The version number of the website configurations.
	SiteVersion *int `pulumi:"siteVersion"`
}

// The set of arguments for constructing a HttpResponseHeaderModificationRule resource.
type HttpResponseHeaderModificationRuleArgs struct {
	// Modify response headers, supporting add, delete, and modify operations. See `responseHeaderModification` below.
	ResponseHeaderModifications HttpResponseHeaderModificationRuleResponseHeaderModificationArrayInput
	// Rule content.
	Rule pulumi.StringPtrInput
	// Rule switch. Possible values:
	RuleEnable pulumi.StringPtrInput
	// Rule name.
	RuleName pulumi.StringPtrInput
	// The site ID.
	SiteId pulumi.IntInput
	// The version number of the website configurations.
	SiteVersion pulumi.IntPtrInput
}

func (HttpResponseHeaderModificationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*httpResponseHeaderModificationRuleArgs)(nil)).Elem()
}

type HttpResponseHeaderModificationRuleInput interface {
	pulumi.Input

	ToHttpResponseHeaderModificationRuleOutput() HttpResponseHeaderModificationRuleOutput
	ToHttpResponseHeaderModificationRuleOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleOutput
}

func (*HttpResponseHeaderModificationRule) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpResponseHeaderModificationRule)(nil)).Elem()
}

func (i *HttpResponseHeaderModificationRule) ToHttpResponseHeaderModificationRuleOutput() HttpResponseHeaderModificationRuleOutput {
	return i.ToHttpResponseHeaderModificationRuleOutputWithContext(context.Background())
}

func (i *HttpResponseHeaderModificationRule) ToHttpResponseHeaderModificationRuleOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpResponseHeaderModificationRuleOutput)
}

// HttpResponseHeaderModificationRuleArrayInput is an input type that accepts HttpResponseHeaderModificationRuleArray and HttpResponseHeaderModificationRuleArrayOutput values.
// You can construct a concrete instance of `HttpResponseHeaderModificationRuleArrayInput` via:
//
//	HttpResponseHeaderModificationRuleArray{ HttpResponseHeaderModificationRuleArgs{...} }
type HttpResponseHeaderModificationRuleArrayInput interface {
	pulumi.Input

	ToHttpResponseHeaderModificationRuleArrayOutput() HttpResponseHeaderModificationRuleArrayOutput
	ToHttpResponseHeaderModificationRuleArrayOutputWithContext(context.Context) HttpResponseHeaderModificationRuleArrayOutput
}

type HttpResponseHeaderModificationRuleArray []HttpResponseHeaderModificationRuleInput

func (HttpResponseHeaderModificationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HttpResponseHeaderModificationRule)(nil)).Elem()
}

func (i HttpResponseHeaderModificationRuleArray) ToHttpResponseHeaderModificationRuleArrayOutput() HttpResponseHeaderModificationRuleArrayOutput {
	return i.ToHttpResponseHeaderModificationRuleArrayOutputWithContext(context.Background())
}

func (i HttpResponseHeaderModificationRuleArray) ToHttpResponseHeaderModificationRuleArrayOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpResponseHeaderModificationRuleArrayOutput)
}

// HttpResponseHeaderModificationRuleMapInput is an input type that accepts HttpResponseHeaderModificationRuleMap and HttpResponseHeaderModificationRuleMapOutput values.
// You can construct a concrete instance of `HttpResponseHeaderModificationRuleMapInput` via:
//
//	HttpResponseHeaderModificationRuleMap{ "key": HttpResponseHeaderModificationRuleArgs{...} }
type HttpResponseHeaderModificationRuleMapInput interface {
	pulumi.Input

	ToHttpResponseHeaderModificationRuleMapOutput() HttpResponseHeaderModificationRuleMapOutput
	ToHttpResponseHeaderModificationRuleMapOutputWithContext(context.Context) HttpResponseHeaderModificationRuleMapOutput
}

type HttpResponseHeaderModificationRuleMap map[string]HttpResponseHeaderModificationRuleInput

func (HttpResponseHeaderModificationRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HttpResponseHeaderModificationRule)(nil)).Elem()
}

func (i HttpResponseHeaderModificationRuleMap) ToHttpResponseHeaderModificationRuleMapOutput() HttpResponseHeaderModificationRuleMapOutput {
	return i.ToHttpResponseHeaderModificationRuleMapOutputWithContext(context.Background())
}

func (i HttpResponseHeaderModificationRuleMap) ToHttpResponseHeaderModificationRuleMapOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpResponseHeaderModificationRuleMapOutput)
}

type HttpResponseHeaderModificationRuleOutput struct{ *pulumi.OutputState }

func (HttpResponseHeaderModificationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpResponseHeaderModificationRule)(nil)).Elem()
}

func (o HttpResponseHeaderModificationRuleOutput) ToHttpResponseHeaderModificationRuleOutput() HttpResponseHeaderModificationRuleOutput {
	return o
}

func (o HttpResponseHeaderModificationRuleOutput) ToHttpResponseHeaderModificationRuleOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleOutput {
	return o
}

// Config Id
func (o HttpResponseHeaderModificationRuleOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Modify response headers, supporting add, delete, and modify operations. See `responseHeaderModification` below.
func (o HttpResponseHeaderModificationRuleOutput) ResponseHeaderModifications() HttpResponseHeaderModificationRuleResponseHeaderModificationArrayOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) HttpResponseHeaderModificationRuleResponseHeaderModificationArrayOutput {
		return v.ResponseHeaderModifications
	}).(HttpResponseHeaderModificationRuleResponseHeaderModificationArrayOutput)
}

// Rule content.
func (o HttpResponseHeaderModificationRuleOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) pulumi.StringPtrOutput { return v.Rule }).(pulumi.StringPtrOutput)
}

// Rule switch. Possible values:
func (o HttpResponseHeaderModificationRuleOutput) RuleEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) pulumi.StringPtrOutput { return v.RuleEnable }).(pulumi.StringPtrOutput)
}

// Rule name.
func (o HttpResponseHeaderModificationRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// The site ID.
func (o HttpResponseHeaderModificationRuleOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// The version number of the website configurations.
func (o HttpResponseHeaderModificationRuleOutput) SiteVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HttpResponseHeaderModificationRule) pulumi.IntPtrOutput { return v.SiteVersion }).(pulumi.IntPtrOutput)
}

type HttpResponseHeaderModificationRuleArrayOutput struct{ *pulumi.OutputState }

func (HttpResponseHeaderModificationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HttpResponseHeaderModificationRule)(nil)).Elem()
}

func (o HttpResponseHeaderModificationRuleArrayOutput) ToHttpResponseHeaderModificationRuleArrayOutput() HttpResponseHeaderModificationRuleArrayOutput {
	return o
}

func (o HttpResponseHeaderModificationRuleArrayOutput) ToHttpResponseHeaderModificationRuleArrayOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleArrayOutput {
	return o
}

func (o HttpResponseHeaderModificationRuleArrayOutput) Index(i pulumi.IntInput) HttpResponseHeaderModificationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HttpResponseHeaderModificationRule {
		return vs[0].([]*HttpResponseHeaderModificationRule)[vs[1].(int)]
	}).(HttpResponseHeaderModificationRuleOutput)
}

type HttpResponseHeaderModificationRuleMapOutput struct{ *pulumi.OutputState }

func (HttpResponseHeaderModificationRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HttpResponseHeaderModificationRule)(nil)).Elem()
}

func (o HttpResponseHeaderModificationRuleMapOutput) ToHttpResponseHeaderModificationRuleMapOutput() HttpResponseHeaderModificationRuleMapOutput {
	return o
}

func (o HttpResponseHeaderModificationRuleMapOutput) ToHttpResponseHeaderModificationRuleMapOutputWithContext(ctx context.Context) HttpResponseHeaderModificationRuleMapOutput {
	return o
}

func (o HttpResponseHeaderModificationRuleMapOutput) MapIndex(k pulumi.StringInput) HttpResponseHeaderModificationRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HttpResponseHeaderModificationRule {
		return vs[0].(map[string]*HttpResponseHeaderModificationRule)[vs[1].(string)]
	}).(HttpResponseHeaderModificationRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HttpResponseHeaderModificationRuleInput)(nil)).Elem(), &HttpResponseHeaderModificationRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpResponseHeaderModificationRuleArrayInput)(nil)).Elem(), HttpResponseHeaderModificationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpResponseHeaderModificationRuleMapInput)(nil)).Elem(), HttpResponseHeaderModificationRuleMap{})
	pulumi.RegisterOutputType(HttpResponseHeaderModificationRuleOutput{})
	pulumi.RegisterOutputType(HttpResponseHeaderModificationRuleArrayOutput{})
	pulumi.RegisterOutputType(HttpResponseHeaderModificationRuleMapOutput{})
}
