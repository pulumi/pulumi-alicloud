// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Rewrite Url Rule resource.
//
// For information about ESA Rewrite Url Rule and how to use it, see [What is Rewrite Url Rule](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/api-esa-2024-09-10-createrewriteurlrule).
//
// > **NOTE:** Available since v1.243.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			resourceRewriteUrlRuleRatePlanInstanceExample, err := esa.NewRatePlanInstance(ctx, "resource_RewriteUrlRule_RatePlanInstance_example", &esa.RatePlanInstanceArgs{
//				Type:        pulumi.String("NS"),
//				AutoRenew:   pulumi.Bool(false),
//				Period:      pulumi.Int(1),
//				PaymentType: pulumi.String("Subscription"),
//				Coverage:    pulumi.String("overseas"),
//				AutoPay:     pulumi.Bool(true),
//				PlanName:    pulumi.String("high"),
//			})
//			if err != nil {
//				return err
//			}
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			resourceRewriteUrlRuleSiteExample, err := esa.NewSite(ctx, "resource_RewriteUrlRule_Site_example", &esa.SiteArgs{
//				SiteName:   pulumi.Sprintf("gositecdn-%v.cn", _default.Result),
//				InstanceId: resourceRewriteUrlRuleRatePlanInstanceExample.ID(),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewRewriteUrlRule(ctx, "default", &esa.RewriteUrlRuleArgs{
//				RewriteUriType:         pulumi.String("static"),
//				RewriteQueryStringType: pulumi.String("static"),
//				SiteId:                 resourceRewriteUrlRuleSiteExample.ID(),
//				RuleName:               pulumi.String("example"),
//				RuleEnable:             pulumi.String("on"),
//				QueryString:            pulumi.String("example=123"),
//				SiteVersion:            pulumi.Int(0),
//				Rule:                   pulumi.String("http.host eq \"video.example.com\""),
//				Uri:                    pulumi.String("/image/example.jpg"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Rewrite Url Rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/rewriteUrlRule:RewriteUrlRule example <site_id>:<config_id>
// ```
type RewriteUrlRule struct {
	pulumi.CustomResourceState

	// ConfigId
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The desired query string to which you want to rewrite the query string in the original request.
	QueryString pulumi.StringPtrOutput `pulumi:"queryString"`
	// Query string rewrite type. Value range:
	RewriteQueryStringType pulumi.StringPtrOutput `pulumi:"rewriteQueryStringType"`
	// URI rewrite type. Value range:
	RewriteUriType pulumi.StringPtrOutput `pulumi:"rewriteUriType"`
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// ● Match all incoming requests: value set to true
	// ● Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule pulumi.StringPtrOutput `pulumi:"rule"`
	// Indicates whether the rule is enabled. Valid values:
	//
	// - on
	// - off
	RuleEnable pulumi.StringPtrOutput `pulumi:"ruleEnable"`
	// The rule name. You do not need to set this parameter when adding a global configuration.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// Version number of the site configuration. For a site with configuration version management enabled, you can use this parameter to specify the site version in which the configuration takes effect. The default version is 0.
	SiteVersion pulumi.IntPtrOutput `pulumi:"siteVersion"`
	// The desired URI to which you want to rewrite the path in the original request.
	Uri pulumi.StringPtrOutput `pulumi:"uri"`
}

// NewRewriteUrlRule registers a new resource with the given unique name, arguments, and options.
func NewRewriteUrlRule(ctx *pulumi.Context,
	name string, args *RewriteUrlRuleArgs, opts ...pulumi.ResourceOption) (*RewriteUrlRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RewriteUrlRule
	err := ctx.RegisterResource("alicloud:esa/rewriteUrlRule:RewriteUrlRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRewriteUrlRule gets an existing RewriteUrlRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRewriteUrlRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RewriteUrlRuleState, opts ...pulumi.ResourceOption) (*RewriteUrlRule, error) {
	var resource RewriteUrlRule
	err := ctx.ReadResource("alicloud:esa/rewriteUrlRule:RewriteUrlRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RewriteUrlRule resources.
type rewriteUrlRuleState struct {
	// ConfigId
	ConfigId *int `pulumi:"configId"`
	// The desired query string to which you want to rewrite the query string in the original request.
	QueryString *string `pulumi:"queryString"`
	// Query string rewrite type. Value range:
	RewriteQueryStringType *string `pulumi:"rewriteQueryStringType"`
	// URI rewrite type. Value range:
	RewriteUriType *string `pulumi:"rewriteUriType"`
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// ● Match all incoming requests: value set to true
	// ● Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule *string `pulumi:"rule"`
	// Indicates whether the rule is enabled. Valid values:
	//
	// - on
	// - off
	RuleEnable *string `pulumi:"ruleEnable"`
	// The rule name. You do not need to set this parameter when adding a global configuration.
	RuleName *string `pulumi:"ruleName"`
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId *int `pulumi:"siteId"`
	// Version number of the site configuration. For a site with configuration version management enabled, you can use this parameter to specify the site version in which the configuration takes effect. The default version is 0.
	SiteVersion *int `pulumi:"siteVersion"`
	// The desired URI to which you want to rewrite the path in the original request.
	Uri *string `pulumi:"uri"`
}

type RewriteUrlRuleState struct {
	// ConfigId
	ConfigId pulumi.IntPtrInput
	// The desired query string to which you want to rewrite the query string in the original request.
	QueryString pulumi.StringPtrInput
	// Query string rewrite type. Value range:
	RewriteQueryStringType pulumi.StringPtrInput
	// URI rewrite type. Value range:
	RewriteUriType pulumi.StringPtrInput
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// ● Match all incoming requests: value set to true
	// ● Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule pulumi.StringPtrInput
	// Indicates whether the rule is enabled. Valid values:
	//
	// - on
	// - off
	RuleEnable pulumi.StringPtrInput
	// The rule name. You do not need to set this parameter when adding a global configuration.
	RuleName pulumi.StringPtrInput
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId pulumi.IntPtrInput
	// Version number of the site configuration. For a site with configuration version management enabled, you can use this parameter to specify the site version in which the configuration takes effect. The default version is 0.
	SiteVersion pulumi.IntPtrInput
	// The desired URI to which you want to rewrite the path in the original request.
	Uri pulumi.StringPtrInput
}

func (RewriteUrlRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*rewriteUrlRuleState)(nil)).Elem()
}

type rewriteUrlRuleArgs struct {
	// The desired query string to which you want to rewrite the query string in the original request.
	QueryString *string `pulumi:"queryString"`
	// Query string rewrite type. Value range:
	RewriteQueryStringType *string `pulumi:"rewriteQueryStringType"`
	// URI rewrite type. Value range:
	RewriteUriType *string `pulumi:"rewriteUriType"`
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// ● Match all incoming requests: value set to true
	// ● Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule *string `pulumi:"rule"`
	// Indicates whether the rule is enabled. Valid values:
	//
	// - on
	// - off
	RuleEnable *string `pulumi:"ruleEnable"`
	// The rule name. You do not need to set this parameter when adding a global configuration.
	RuleName *string `pulumi:"ruleName"`
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId int `pulumi:"siteId"`
	// Version number of the site configuration. For a site with configuration version management enabled, you can use this parameter to specify the site version in which the configuration takes effect. The default version is 0.
	SiteVersion *int `pulumi:"siteVersion"`
	// The desired URI to which you want to rewrite the path in the original request.
	Uri *string `pulumi:"uri"`
}

// The set of arguments for constructing a RewriteUrlRule resource.
type RewriteUrlRuleArgs struct {
	// The desired query string to which you want to rewrite the query string in the original request.
	QueryString pulumi.StringPtrInput
	// Query string rewrite type. Value range:
	RewriteQueryStringType pulumi.StringPtrInput
	// URI rewrite type. Value range:
	RewriteUriType pulumi.StringPtrInput
	// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
	// ● Match all incoming requests: value set to true
	// ● Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
	Rule pulumi.StringPtrInput
	// Indicates whether the rule is enabled. Valid values:
	//
	// - on
	// - off
	RuleEnable pulumi.StringPtrInput
	// The rule name. You do not need to set this parameter when adding a global configuration.
	RuleName pulumi.StringPtrInput
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId pulumi.IntInput
	// Version number of the site configuration. For a site with configuration version management enabled, you can use this parameter to specify the site version in which the configuration takes effect. The default version is 0.
	SiteVersion pulumi.IntPtrInput
	// The desired URI to which you want to rewrite the path in the original request.
	Uri pulumi.StringPtrInput
}

func (RewriteUrlRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rewriteUrlRuleArgs)(nil)).Elem()
}

type RewriteUrlRuleInput interface {
	pulumi.Input

	ToRewriteUrlRuleOutput() RewriteUrlRuleOutput
	ToRewriteUrlRuleOutputWithContext(ctx context.Context) RewriteUrlRuleOutput
}

func (*RewriteUrlRule) ElementType() reflect.Type {
	return reflect.TypeOf((**RewriteUrlRule)(nil)).Elem()
}

func (i *RewriteUrlRule) ToRewriteUrlRuleOutput() RewriteUrlRuleOutput {
	return i.ToRewriteUrlRuleOutputWithContext(context.Background())
}

func (i *RewriteUrlRule) ToRewriteUrlRuleOutputWithContext(ctx context.Context) RewriteUrlRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RewriteUrlRuleOutput)
}

// RewriteUrlRuleArrayInput is an input type that accepts RewriteUrlRuleArray and RewriteUrlRuleArrayOutput values.
// You can construct a concrete instance of `RewriteUrlRuleArrayInput` via:
//
//	RewriteUrlRuleArray{ RewriteUrlRuleArgs{...} }
type RewriteUrlRuleArrayInput interface {
	pulumi.Input

	ToRewriteUrlRuleArrayOutput() RewriteUrlRuleArrayOutput
	ToRewriteUrlRuleArrayOutputWithContext(context.Context) RewriteUrlRuleArrayOutput
}

type RewriteUrlRuleArray []RewriteUrlRuleInput

func (RewriteUrlRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RewriteUrlRule)(nil)).Elem()
}

func (i RewriteUrlRuleArray) ToRewriteUrlRuleArrayOutput() RewriteUrlRuleArrayOutput {
	return i.ToRewriteUrlRuleArrayOutputWithContext(context.Background())
}

func (i RewriteUrlRuleArray) ToRewriteUrlRuleArrayOutputWithContext(ctx context.Context) RewriteUrlRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RewriteUrlRuleArrayOutput)
}

// RewriteUrlRuleMapInput is an input type that accepts RewriteUrlRuleMap and RewriteUrlRuleMapOutput values.
// You can construct a concrete instance of `RewriteUrlRuleMapInput` via:
//
//	RewriteUrlRuleMap{ "key": RewriteUrlRuleArgs{...} }
type RewriteUrlRuleMapInput interface {
	pulumi.Input

	ToRewriteUrlRuleMapOutput() RewriteUrlRuleMapOutput
	ToRewriteUrlRuleMapOutputWithContext(context.Context) RewriteUrlRuleMapOutput
}

type RewriteUrlRuleMap map[string]RewriteUrlRuleInput

func (RewriteUrlRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RewriteUrlRule)(nil)).Elem()
}

func (i RewriteUrlRuleMap) ToRewriteUrlRuleMapOutput() RewriteUrlRuleMapOutput {
	return i.ToRewriteUrlRuleMapOutputWithContext(context.Background())
}

func (i RewriteUrlRuleMap) ToRewriteUrlRuleMapOutputWithContext(ctx context.Context) RewriteUrlRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RewriteUrlRuleMapOutput)
}

type RewriteUrlRuleOutput struct{ *pulumi.OutputState }

func (RewriteUrlRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RewriteUrlRule)(nil)).Elem()
}

func (o RewriteUrlRuleOutput) ToRewriteUrlRuleOutput() RewriteUrlRuleOutput {
	return o
}

func (o RewriteUrlRuleOutput) ToRewriteUrlRuleOutputWithContext(ctx context.Context) RewriteUrlRuleOutput {
	return o
}

// ConfigId
func (o RewriteUrlRuleOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// The desired query string to which you want to rewrite the query string in the original request.
func (o RewriteUrlRuleOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.QueryString }).(pulumi.StringPtrOutput)
}

// Query string rewrite type. Value range:
func (o RewriteUrlRuleOutput) RewriteQueryStringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.RewriteQueryStringType }).(pulumi.StringPtrOutput)
}

// URI rewrite type. Value range:
func (o RewriteUrlRuleOutput) RewriteUriType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.RewriteUriType }).(pulumi.StringPtrOutput)
}

// Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
// ● Match all incoming requests: value set to true
// ● Match specified request: Set the value to a custom expression, for example: (http.host eq \"video.example.com\")
func (o RewriteUrlRuleOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.Rule }).(pulumi.StringPtrOutput)
}

// Indicates whether the rule is enabled. Valid values:
//
// - on
// - off
func (o RewriteUrlRuleOutput) RuleEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.RuleEnable }).(pulumi.StringPtrOutput)
}

// The rule name. You do not need to set this parameter when adding a global configuration.
func (o RewriteUrlRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
func (o RewriteUrlRuleOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// Version number of the site configuration. For a site with configuration version management enabled, you can use this parameter to specify the site version in which the configuration takes effect. The default version is 0.
func (o RewriteUrlRuleOutput) SiteVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.IntPtrOutput { return v.SiteVersion }).(pulumi.IntPtrOutput)
}

// The desired URI to which you want to rewrite the path in the original request.
func (o RewriteUrlRuleOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RewriteUrlRule) pulumi.StringPtrOutput { return v.Uri }).(pulumi.StringPtrOutput)
}

type RewriteUrlRuleArrayOutput struct{ *pulumi.OutputState }

func (RewriteUrlRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RewriteUrlRule)(nil)).Elem()
}

func (o RewriteUrlRuleArrayOutput) ToRewriteUrlRuleArrayOutput() RewriteUrlRuleArrayOutput {
	return o
}

func (o RewriteUrlRuleArrayOutput) ToRewriteUrlRuleArrayOutputWithContext(ctx context.Context) RewriteUrlRuleArrayOutput {
	return o
}

func (o RewriteUrlRuleArrayOutput) Index(i pulumi.IntInput) RewriteUrlRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RewriteUrlRule {
		return vs[0].([]*RewriteUrlRule)[vs[1].(int)]
	}).(RewriteUrlRuleOutput)
}

type RewriteUrlRuleMapOutput struct{ *pulumi.OutputState }

func (RewriteUrlRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RewriteUrlRule)(nil)).Elem()
}

func (o RewriteUrlRuleMapOutput) ToRewriteUrlRuleMapOutput() RewriteUrlRuleMapOutput {
	return o
}

func (o RewriteUrlRuleMapOutput) ToRewriteUrlRuleMapOutputWithContext(ctx context.Context) RewriteUrlRuleMapOutput {
	return o
}

func (o RewriteUrlRuleMapOutput) MapIndex(k pulumi.StringInput) RewriteUrlRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RewriteUrlRule {
		return vs[0].(map[string]*RewriteUrlRule)[vs[1].(string)]
	}).(RewriteUrlRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RewriteUrlRuleInput)(nil)).Elem(), &RewriteUrlRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*RewriteUrlRuleArrayInput)(nil)).Elem(), RewriteUrlRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RewriteUrlRuleMapInput)(nil)).Elem(), RewriteUrlRuleMap{})
	pulumi.RegisterOutputType(RewriteUrlRuleOutput{})
	pulumi.RegisterOutputType(RewriteUrlRuleArrayOutput{})
	pulumi.RegisterOutputType(RewriteUrlRuleMapOutput{})
}
