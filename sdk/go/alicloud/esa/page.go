// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Page resource.
//
// For information about ESA Page and how to use it, see [What is Page](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/user-guide/customize-page).
//
// > **NOTE:** Available since v1.242.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := esa.NewPage(ctx, "default", &esa.PageArgs{
//				Description: pulumi.String("example resource html page"),
//				ContentType: pulumi.String("text/html"),
//				Content:     pulumi.String("PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InpoLUNOIj4KICA8aGVhZD4KICAgIDx0aXRsZT40MDMgRm9yYmlkZGVuPC90aXRsZT4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8aDE+NDAzIEZvcmJpZGRlbjwvaDE+CiAgPC9ib2R5Pgo8L2h0bWw+"),
//				PageName:    pulumi.String("resource_example_html_page"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Page can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/page:Page example <id>
// ```
type Page struct {
	pulumi.CustomResourceState

	// The Base64-encoded content of the error page. The content type is specified by the Content-Type field.
	Content pulumi.StringPtrOutput `pulumi:"content"`
	// The Content-Type field in the HTTP header.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// The description of the custom error page.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the custom response page.
	PageName pulumi.StringOutput `pulumi:"pageName"`
}

// NewPage registers a new resource with the given unique name, arguments, and options.
func NewPage(ctx *pulumi.Context,
	name string, args *PageArgs, opts ...pulumi.ResourceOption) (*Page, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.PageName == nil {
		return nil, errors.New("invalid value for required argument 'PageName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Page
	err := ctx.RegisterResource("alicloud:esa/page:Page", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPage gets an existing Page resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PageState, opts ...pulumi.ResourceOption) (*Page, error) {
	var resource Page
	err := ctx.ReadResource("alicloud:esa/page:Page", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Page resources.
type pageState struct {
	// The Base64-encoded content of the error page. The content type is specified by the Content-Type field.
	Content *string `pulumi:"content"`
	// The Content-Type field in the HTTP header.
	ContentType *string `pulumi:"contentType"`
	// The description of the custom error page.
	Description *string `pulumi:"description"`
	// The name of the custom response page.
	PageName *string `pulumi:"pageName"`
}

type PageState struct {
	// The Base64-encoded content of the error page. The content type is specified by the Content-Type field.
	Content pulumi.StringPtrInput
	// The Content-Type field in the HTTP header.
	ContentType pulumi.StringPtrInput
	// The description of the custom error page.
	Description pulumi.StringPtrInput
	// The name of the custom response page.
	PageName pulumi.StringPtrInput
}

func (PageState) ElementType() reflect.Type {
	return reflect.TypeOf((*pageState)(nil)).Elem()
}

type pageArgs struct {
	// The Base64-encoded content of the error page. The content type is specified by the Content-Type field.
	Content *string `pulumi:"content"`
	// The Content-Type field in the HTTP header.
	ContentType string `pulumi:"contentType"`
	// The description of the custom error page.
	Description *string `pulumi:"description"`
	// The name of the custom response page.
	PageName string `pulumi:"pageName"`
}

// The set of arguments for constructing a Page resource.
type PageArgs struct {
	// The Base64-encoded content of the error page. The content type is specified by the Content-Type field.
	Content pulumi.StringPtrInput
	// The Content-Type field in the HTTP header.
	ContentType pulumi.StringInput
	// The description of the custom error page.
	Description pulumi.StringPtrInput
	// The name of the custom response page.
	PageName pulumi.StringInput
}

func (PageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pageArgs)(nil)).Elem()
}

type PageInput interface {
	pulumi.Input

	ToPageOutput() PageOutput
	ToPageOutputWithContext(ctx context.Context) PageOutput
}

func (*Page) ElementType() reflect.Type {
	return reflect.TypeOf((**Page)(nil)).Elem()
}

func (i *Page) ToPageOutput() PageOutput {
	return i.ToPageOutputWithContext(context.Background())
}

func (i *Page) ToPageOutputWithContext(ctx context.Context) PageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageOutput)
}

// PageArrayInput is an input type that accepts PageArray and PageArrayOutput values.
// You can construct a concrete instance of `PageArrayInput` via:
//
//	PageArray{ PageArgs{...} }
type PageArrayInput interface {
	pulumi.Input

	ToPageArrayOutput() PageArrayOutput
	ToPageArrayOutputWithContext(context.Context) PageArrayOutput
}

type PageArray []PageInput

func (PageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Page)(nil)).Elem()
}

func (i PageArray) ToPageArrayOutput() PageArrayOutput {
	return i.ToPageArrayOutputWithContext(context.Background())
}

func (i PageArray) ToPageArrayOutputWithContext(ctx context.Context) PageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageArrayOutput)
}

// PageMapInput is an input type that accepts PageMap and PageMapOutput values.
// You can construct a concrete instance of `PageMapInput` via:
//
//	PageMap{ "key": PageArgs{...} }
type PageMapInput interface {
	pulumi.Input

	ToPageMapOutput() PageMapOutput
	ToPageMapOutputWithContext(context.Context) PageMapOutput
}

type PageMap map[string]PageInput

func (PageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Page)(nil)).Elem()
}

func (i PageMap) ToPageMapOutput() PageMapOutput {
	return i.ToPageMapOutputWithContext(context.Background())
}

func (i PageMap) ToPageMapOutputWithContext(ctx context.Context) PageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageMapOutput)
}

type PageOutput struct{ *pulumi.OutputState }

func (PageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Page)(nil)).Elem()
}

func (o PageOutput) ToPageOutput() PageOutput {
	return o
}

func (o PageOutput) ToPageOutputWithContext(ctx context.Context) PageOutput {
	return o
}

// The Base64-encoded content of the error page. The content type is specified by the Content-Type field.
func (o PageOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Page) pulumi.StringPtrOutput { return v.Content }).(pulumi.StringPtrOutput)
}

// The Content-Type field in the HTTP header.
func (o PageOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Page) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

// The description of the custom error page.
func (o PageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Page) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the custom response page.
func (o PageOutput) PageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Page) pulumi.StringOutput { return v.PageName }).(pulumi.StringOutput)
}

type PageArrayOutput struct{ *pulumi.OutputState }

func (PageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Page)(nil)).Elem()
}

func (o PageArrayOutput) ToPageArrayOutput() PageArrayOutput {
	return o
}

func (o PageArrayOutput) ToPageArrayOutputWithContext(ctx context.Context) PageArrayOutput {
	return o
}

func (o PageArrayOutput) Index(i pulumi.IntInput) PageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Page {
		return vs[0].([]*Page)[vs[1].(int)]
	}).(PageOutput)
}

type PageMapOutput struct{ *pulumi.OutputState }

func (PageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Page)(nil)).Elem()
}

func (o PageMapOutput) ToPageMapOutput() PageMapOutput {
	return o
}

func (o PageMapOutput) ToPageMapOutputWithContext(ctx context.Context) PageMapOutput {
	return o
}

func (o PageMapOutput) MapIndex(k pulumi.StringInput) PageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Page {
		return vs[0].(map[string]*Page)[vs[1].(string)]
	}).(PageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PageInput)(nil)).Elem(), &Page{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageArrayInput)(nil)).Elem(), PageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageMapInput)(nil)).Elem(), PageMap{})
	pulumi.RegisterOutputType(PageOutput{})
	pulumi.RegisterOutputType(PageArrayOutput{})
	pulumi.RegisterOutputType(PageMapOutput{})
}
