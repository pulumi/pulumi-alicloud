// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Site Origin Client Certificate resource.
//
// For information about ESA Site Origin Client Certificate and how to use it, see [What is Site Origin Client Certificate](https://next.api.alibabacloud.com/document/ESA/2024-09-10/UploadSiteOriginClientCertificate).
//
// > **NOTE:** Available since v1.256.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.String("chenxin0116.site"),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewSiteOriginClientCertificate(ctx, "default", &esa.SiteOriginClientCertificateArgs{
//				SiteOriginClientCertificateName: pulumi.String("exampleCertificate"),
//				Certificate: pulumi.String(`-----BEGIN CERTIFICATE-----
//
// MIICQTCCAaoCCQCFfdyqahygLzANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJj
// bjEQMA4GA1UECAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwI
// YWxpY2xvdWQxEDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwHhcNMjAw
// ODA2MTAwMDAyWhcNMzAwODA0MTAwMDAyWjBlMQswCQYDVQQGEwJjbjEQMA4GA1UE
// CAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwIYWxpY2xvdWQx
// EDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwgZ8wDQYJKoZIhvcNAQEB
// BQADgY0AMIGJAoGBAL7t2CmRCJ8irM5Too2QVGNm0xk6g3v+KE1/8Gthw+EtBKRw
// 859SxM/+q8fS73rkadgWICgre5YZCj1oIG6hrBEUo0Fr1mklXJVtqYFZMFD8XGx+
// iur2Mk1Hs5YDd/G8PGDDISS/SqyeHXNo6SPJSXEVjAOIXFnX9EcCP9IAEK5tAgMB
// AAEwDQYJKoZIhvcNAQEFBQADgYEAavYdM9s5jLFP9/ZPCrsRuRsjSJpe5y9VZL+1
// +Ebbw16V0xMYaqODyFH1meLRW/A4xUs15Ny2vLYOW15Mriif7Sixty3HUedBFa4l
// y6/gQ+mBEeZYzMaTTFgyzEZDMsfZxwV9GKfhOzAmK3jZ2LDpHIhnlJN4WwVf0lME
// pCPDN7g=
// -----END CERTIFICATE-----
// `),
//
//	SiteId: defaultSite.ID(),
//	PrivateKey: pulumi.String(`-----BEGIN RSA PRIVATE KEY-----
//
// MIICXAIBAAKBgQC+7dgpkQifIqzOU6KNkFRjZtMZOoN7/ihNf/BrYcPhLQSkcPOf
// UsTP/qvH0u965GnYFiAoK3uWGQo9aCBuoawRFKNBa9ZpJVyVbamBWTBQ/Fxsforq
// 9jJNR7OWA3fxvDxgwyEkv0qsnh1zaOkjyUlxFYwDiFxZ1/RHAj/SABCubQIDAQAB
// AoGADiobBUprN1MdOtldj98LQ6yXMKH0qzg5yTYaofzIyWXLmF+A02sSitO77sEp
// Xxae+5b4n8JKEuKcrd2RumNoHmN47iLQ0M2eodjUQ96kzm5Esq6nln62/NF5KLuK
// JDw63nTsg6K0O+gQZv4SYjZAL3cswSmeQmvmcoNgArfcaoECQQDgYy6S91ZIUsLx
// 6BB3tW+x7APYnvKysYbcKUEP8AutZSo4hdMfPQkOD0LwP5dWsrNippDWjNDiPZmt
// VKuZDoDdAkEA2dPxy1eQeJsRYTZmTWIuh3UY9xlL3G9skcSOM4LbFidroHWW9UDJ
// JDSSEMH2+/4quYTdPr28cj7RCjqL0brC0QJABXDCL1QJ5oUDLwRWaeCfTawQR89K
// ySRexbXGWxGR5uleBbLQ9J/xOUMLd3HDRJnemZS6TElrwyCFOlukMXjVjQJBALr5
// QC0opmu/vzVQepOl2QaQrrM7VXCLfAfLTbxNcD0d7TY4eTFfQMgBD/euZpB65LWF
// pFs8hcsSvGApTObjhmECQEydB1zzjU6kH171XlXCtRFnbORu2IB7rMsDP2CBPHyR
// tYBjBNVHIUGcmrMVFX4LeMuvvmUyzwfgLmLchHxbDP8=
// -----END RSA PRIVATE KEY-----
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Site Origin Client Certificate can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/siteOriginClientCertificate:SiteOriginClientCertificate example <site_id>:<site_origin_client_certificate_id>
// ```
type SiteOriginClientCertificate struct {
	pulumi.CustomResourceState

	// The certificate content.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// The time when the certificate was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The private key of the certificate.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// Site ID.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// The certificate ID on ESA.
	SiteOriginClientCertificateId pulumi.StringOutput `pulumi:"siteOriginClientCertificateId"`
	// The certificate name.
	SiteOriginClientCertificateName pulumi.StringPtrOutput `pulumi:"siteOriginClientCertificateName"`
	// The status of the certificate.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewSiteOriginClientCertificate registers a new resource with the given unique name, arguments, and options.
func NewSiteOriginClientCertificate(ctx *pulumi.Context,
	name string, args *SiteOriginClientCertificateArgs, opts ...pulumi.ResourceOption) (*SiteOriginClientCertificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Certificate == nil {
		return nil, errors.New("invalid value for required argument 'Certificate'")
	}
	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"privateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SiteOriginClientCertificate
	err := ctx.RegisterResource("alicloud:esa/siteOriginClientCertificate:SiteOriginClientCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSiteOriginClientCertificate gets an existing SiteOriginClientCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSiteOriginClientCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SiteOriginClientCertificateState, opts ...pulumi.ResourceOption) (*SiteOriginClientCertificate, error) {
	var resource SiteOriginClientCertificate
	err := ctx.ReadResource("alicloud:esa/siteOriginClientCertificate:SiteOriginClientCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SiteOriginClientCertificate resources.
type siteOriginClientCertificateState struct {
	// The certificate content.
	Certificate *string `pulumi:"certificate"`
	// The time when the certificate was created.
	CreateTime *string `pulumi:"createTime"`
	// The private key of the certificate.
	PrivateKey *string `pulumi:"privateKey"`
	// Site ID.
	SiteId *int `pulumi:"siteId"`
	// The certificate ID on ESA.
	SiteOriginClientCertificateId *string `pulumi:"siteOriginClientCertificateId"`
	// The certificate name.
	SiteOriginClientCertificateName *string `pulumi:"siteOriginClientCertificateName"`
	// The status of the certificate.
	Status *string `pulumi:"status"`
}

type SiteOriginClientCertificateState struct {
	// The certificate content.
	Certificate pulumi.StringPtrInput
	// The time when the certificate was created.
	CreateTime pulumi.StringPtrInput
	// The private key of the certificate.
	PrivateKey pulumi.StringPtrInput
	// Site ID.
	SiteId pulumi.IntPtrInput
	// The certificate ID on ESA.
	SiteOriginClientCertificateId pulumi.StringPtrInput
	// The certificate name.
	SiteOriginClientCertificateName pulumi.StringPtrInput
	// The status of the certificate.
	Status pulumi.StringPtrInput
}

func (SiteOriginClientCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*siteOriginClientCertificateState)(nil)).Elem()
}

type siteOriginClientCertificateArgs struct {
	// The certificate content.
	Certificate string `pulumi:"certificate"`
	// The private key of the certificate.
	PrivateKey string `pulumi:"privateKey"`
	// Site ID.
	SiteId int `pulumi:"siteId"`
	// The certificate name.
	SiteOriginClientCertificateName *string `pulumi:"siteOriginClientCertificateName"`
}

// The set of arguments for constructing a SiteOriginClientCertificate resource.
type SiteOriginClientCertificateArgs struct {
	// The certificate content.
	Certificate pulumi.StringInput
	// The private key of the certificate.
	PrivateKey pulumi.StringInput
	// Site ID.
	SiteId pulumi.IntInput
	// The certificate name.
	SiteOriginClientCertificateName pulumi.StringPtrInput
}

func (SiteOriginClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*siteOriginClientCertificateArgs)(nil)).Elem()
}

type SiteOriginClientCertificateInput interface {
	pulumi.Input

	ToSiteOriginClientCertificateOutput() SiteOriginClientCertificateOutput
	ToSiteOriginClientCertificateOutputWithContext(ctx context.Context) SiteOriginClientCertificateOutput
}

func (*SiteOriginClientCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteOriginClientCertificate)(nil)).Elem()
}

func (i *SiteOriginClientCertificate) ToSiteOriginClientCertificateOutput() SiteOriginClientCertificateOutput {
	return i.ToSiteOriginClientCertificateOutputWithContext(context.Background())
}

func (i *SiteOriginClientCertificate) ToSiteOriginClientCertificateOutputWithContext(ctx context.Context) SiteOriginClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteOriginClientCertificateOutput)
}

// SiteOriginClientCertificateArrayInput is an input type that accepts SiteOriginClientCertificateArray and SiteOriginClientCertificateArrayOutput values.
// You can construct a concrete instance of `SiteOriginClientCertificateArrayInput` via:
//
//	SiteOriginClientCertificateArray{ SiteOriginClientCertificateArgs{...} }
type SiteOriginClientCertificateArrayInput interface {
	pulumi.Input

	ToSiteOriginClientCertificateArrayOutput() SiteOriginClientCertificateArrayOutput
	ToSiteOriginClientCertificateArrayOutputWithContext(context.Context) SiteOriginClientCertificateArrayOutput
}

type SiteOriginClientCertificateArray []SiteOriginClientCertificateInput

func (SiteOriginClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SiteOriginClientCertificate)(nil)).Elem()
}

func (i SiteOriginClientCertificateArray) ToSiteOriginClientCertificateArrayOutput() SiteOriginClientCertificateArrayOutput {
	return i.ToSiteOriginClientCertificateArrayOutputWithContext(context.Background())
}

func (i SiteOriginClientCertificateArray) ToSiteOriginClientCertificateArrayOutputWithContext(ctx context.Context) SiteOriginClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteOriginClientCertificateArrayOutput)
}

// SiteOriginClientCertificateMapInput is an input type that accepts SiteOriginClientCertificateMap and SiteOriginClientCertificateMapOutput values.
// You can construct a concrete instance of `SiteOriginClientCertificateMapInput` via:
//
//	SiteOriginClientCertificateMap{ "key": SiteOriginClientCertificateArgs{...} }
type SiteOriginClientCertificateMapInput interface {
	pulumi.Input

	ToSiteOriginClientCertificateMapOutput() SiteOriginClientCertificateMapOutput
	ToSiteOriginClientCertificateMapOutputWithContext(context.Context) SiteOriginClientCertificateMapOutput
}

type SiteOriginClientCertificateMap map[string]SiteOriginClientCertificateInput

func (SiteOriginClientCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SiteOriginClientCertificate)(nil)).Elem()
}

func (i SiteOriginClientCertificateMap) ToSiteOriginClientCertificateMapOutput() SiteOriginClientCertificateMapOutput {
	return i.ToSiteOriginClientCertificateMapOutputWithContext(context.Background())
}

func (i SiteOriginClientCertificateMap) ToSiteOriginClientCertificateMapOutputWithContext(ctx context.Context) SiteOriginClientCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteOriginClientCertificateMapOutput)
}

type SiteOriginClientCertificateOutput struct{ *pulumi.OutputState }

func (SiteOriginClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteOriginClientCertificate)(nil)).Elem()
}

func (o SiteOriginClientCertificateOutput) ToSiteOriginClientCertificateOutput() SiteOriginClientCertificateOutput {
	return o
}

func (o SiteOriginClientCertificateOutput) ToSiteOriginClientCertificateOutputWithContext(ctx context.Context) SiteOriginClientCertificateOutput {
	return o
}

// The certificate content.
func (o SiteOriginClientCertificateOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

// The time when the certificate was created.
func (o SiteOriginClientCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The private key of the certificate.
func (o SiteOriginClientCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// Site ID.
func (o SiteOriginClientCertificateOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// The certificate ID on ESA.
func (o SiteOriginClientCertificateOutput) SiteOriginClientCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.StringOutput { return v.SiteOriginClientCertificateId }).(pulumi.StringOutput)
}

// The certificate name.
func (o SiteOriginClientCertificateOutput) SiteOriginClientCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.StringPtrOutput { return v.SiteOriginClientCertificateName }).(pulumi.StringPtrOutput)
}

// The status of the certificate.
func (o SiteOriginClientCertificateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SiteOriginClientCertificate) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type SiteOriginClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (SiteOriginClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SiteOriginClientCertificate)(nil)).Elem()
}

func (o SiteOriginClientCertificateArrayOutput) ToSiteOriginClientCertificateArrayOutput() SiteOriginClientCertificateArrayOutput {
	return o
}

func (o SiteOriginClientCertificateArrayOutput) ToSiteOriginClientCertificateArrayOutputWithContext(ctx context.Context) SiteOriginClientCertificateArrayOutput {
	return o
}

func (o SiteOriginClientCertificateArrayOutput) Index(i pulumi.IntInput) SiteOriginClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SiteOriginClientCertificate {
		return vs[0].([]*SiteOriginClientCertificate)[vs[1].(int)]
	}).(SiteOriginClientCertificateOutput)
}

type SiteOriginClientCertificateMapOutput struct{ *pulumi.OutputState }

func (SiteOriginClientCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SiteOriginClientCertificate)(nil)).Elem()
}

func (o SiteOriginClientCertificateMapOutput) ToSiteOriginClientCertificateMapOutput() SiteOriginClientCertificateMapOutput {
	return o
}

func (o SiteOriginClientCertificateMapOutput) ToSiteOriginClientCertificateMapOutputWithContext(ctx context.Context) SiteOriginClientCertificateMapOutput {
	return o
}

func (o SiteOriginClientCertificateMapOutput) MapIndex(k pulumi.StringInput) SiteOriginClientCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SiteOriginClientCertificate {
		return vs[0].(map[string]*SiteOriginClientCertificate)[vs[1].(string)]
	}).(SiteOriginClientCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SiteOriginClientCertificateInput)(nil)).Elem(), &SiteOriginClientCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteOriginClientCertificateArrayInput)(nil)).Elem(), SiteOriginClientCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteOriginClientCertificateMapInput)(nil)).Elem(), SiteOriginClientCertificateMap{})
	pulumi.RegisterOutputType(SiteOriginClientCertificateOutput{})
	pulumi.RegisterOutputType(SiteOriginClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(SiteOriginClientCertificateMapOutput{})
}
