// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Origin Client Certificate resource.
//
// For information about ESA Origin Client Certificate and how to use it, see [What is Origin Client Certificate](https://next.api.alibabacloud.com/document/ESA/2024-09-10/UploadOriginClientCertificate).
//
// > **NOTE:** Available since v1.255.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			resourceSiteOriginClientCertificateExample, err := esa.NewSite(ctx, "resource_Site_OriginClientCertificate_example", &esa.SiteArgs{
//				SiteName:   pulumi.String("chenxin0116.site"),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewOriginClientCertificate(ctx, "default", &esa.OriginClientCertificateArgs{
//				SiteId: resourceSiteOriginClientCertificateExample.ID(),
//				PrivateKey: pulumi.String(`-----BEGIN RSA PRIVATE KEY-----
//
// MIICXAIBAAKBgQC+7dgpkQifIqzOU6KNkFRjZtMZOoN7/ihNf/BrYcPhLQSkcPOf
// UsTP/qvH0u965GnYFiAoK3uWGQo9aCBuoawRFKNBa9ZpJVyVbamBWTBQ/Fxsforq
// 9jJNR7OWA3fxvDxgwyEkv0qsnh1zaOkjyUlxFYwDiFxZ1/RHAj/SABCubQIDAQAB
// AoGADiobBUprN1MdOtldj98LQ6yXMKH0qzg5yTYaofzIyWXLmF+A02sSitO77sEp
// Xxae+5b4n8JKEuKcrd2RumNoHmN47iLQ0M2eodjUQ96kzm5Esq6nln62/NF5KLuK
// JDw63nTsg6K0O+gQZv4SYjZAL3cswSmeQmvmcoNgArfcaoECQQDgYy6S91ZIUsLx
// 6BB3tW+x7APYnvKysYbcKUEP8AutZSo4hdMfPQkOD0LwP5dWsrNippDWjNDiPZmt
// VKuZDoDdAkEA2dPxy1eQeJsRYTZmTWIuh3UY9xlL3G9skcSOM4LbFidroHWW9UDJ
// JDSSEMH2+/4quYTdPr28cj7RCjqL0brC0QJABXDCL1QJ5oUDLwRWaeCfTawQR89K
// ySRexbXGWxGR5uleBbLQ9J/xOUMLd3HDRJnemZS6TElrwyCFOlukMXjVjQJBALr5
// QC0opmu/vzVQepOl2QaQrrM7VXCLfAfLTbxNcD0d7TY4eTFfQMgBD/euZpB65LWF
// pFs8hcsSvGApTObjhmECQEydB1zzjU6kH171XlXCtRFnbORu2IB7rMsDP2CBPHyR
// tYBjBNVHIUGcmrMVFX4LeMuvvmUyzwfgLmLchHxbDP8=
// -----END RSA PRIVATE KEY-----
// `),
//
//	Hostnames: pulumi.StringArray{
//		pulumi.String("www.example1.com"),
//		pulumi.String("www.example2.com"),
//		pulumi.String("www.example3.com"),
//	},
//	OriginClientCertificateName: pulumi.String("exampleCertificate"),
//	Certificate: pulumi.String(`-----BEGIN CERTIFICATE-----
//
// MIICQTCCAaoCCQCFfdyqahygLzANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJj
// bjEQMA4GA1UECAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwI
// YWxpY2xvdWQxEDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwHhcNMjAw
// ODA2MTAwMDAyWhcNMzAwODA0MTAwMDAyWjBlMQswCQYDVQQGEwJjbjEQMA4GA1UE
// CAwHYmVpamluZzEQMA4GA1UEBwwHYmVpamluZzERMA8GA1UECgwIYWxpY2xvdWQx
// EDAOBgNVBAsMB2FsaWJhYmExDTALBgNVBAMMBHRlc3QwgZ8wDQYJKoZIhvcNAQEB
// BQADgY0AMIGJAoGBAL7t2CmRCJ8irM5Too2QVGNm0xk6g3v+KE1/8Gthw+EtBKRw
// 859SxM/+q8fS73rkadgWICgre5YZCj1oIG6hrBEUo0Fr1mklXJVtqYFZMFD8XGx+
// iur2Mk1Hs5YDd/G8PGDDISS/SqyeHXNo6SPJSXEVjAOIXFnX9EcCP9IAEK5tAgMB
// AAEwDQYJKoZIhvcNAQEFBQADgYEAavYdM9s5jLFP9/ZPCrsRuRsjSJpe5y9VZL+1
// +Ebbw16V0xMYaqODyFH1meLRW/A4xUs15Ny2vLYOW15Mriif7Sixty3HUedBFa4l
// y6/gQ+mBEeZYzMaTTFgyzEZDMsfZxwV9GKfhOzAmK3jZ2LDpHIhnlJN4WwVf0lME
// pCPDN7g=
// -----END CERTIFICATE-----
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Origin Client Certificate can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/originClientCertificate:OriginClientCertificate example <site_id>:<origin_client_certificate_id>
// ```
type OriginClientCertificate struct {
	pulumi.CustomResourceState

	// The certificate content.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// The time when the certificate was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The domain names to associate.
	Hostnames pulumi.StringArrayOutput `pulumi:"hostnames"`
	// The certificate ID.
	OriginClientCertificateId pulumi.StringOutput `pulumi:"originClientCertificateId"`
	// The certificate name.
	OriginClientCertificateName pulumi.StringPtrOutput `pulumi:"originClientCertificateName"`
	// The private key of the certificate.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// Site ID.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// The status of the certificate.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewOriginClientCertificate registers a new resource with the given unique name, arguments, and options.
func NewOriginClientCertificate(ctx *pulumi.Context,
	name string, args *OriginClientCertificateArgs, opts ...pulumi.ResourceOption) (*OriginClientCertificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Certificate == nil {
		return nil, errors.New("invalid value for required argument 'Certificate'")
	}
	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"privateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OriginClientCertificate
	err := ctx.RegisterResource("alicloud:esa/originClientCertificate:OriginClientCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginClientCertificate gets an existing OriginClientCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginClientCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginClientCertificateState, opts ...pulumi.ResourceOption) (*OriginClientCertificate, error) {
	var resource OriginClientCertificate
	err := ctx.ReadResource("alicloud:esa/originClientCertificate:OriginClientCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginClientCertificate resources.
type originClientCertificateState struct {
	// The certificate content.
	Certificate *string `pulumi:"certificate"`
	// The time when the certificate was created.
	CreateTime *string `pulumi:"createTime"`
	// The domain names to associate.
	Hostnames []string `pulumi:"hostnames"`
	// The certificate ID.
	OriginClientCertificateId *string `pulumi:"originClientCertificateId"`
	// The certificate name.
	OriginClientCertificateName *string `pulumi:"originClientCertificateName"`
	// The private key of the certificate.
	PrivateKey *string `pulumi:"privateKey"`
	// Site ID.
	SiteId *int `pulumi:"siteId"`
	// The status of the certificate.
	Status *string `pulumi:"status"`
}

type OriginClientCertificateState struct {
	// The certificate content.
	Certificate pulumi.StringPtrInput
	// The time when the certificate was created.
	CreateTime pulumi.StringPtrInput
	// The domain names to associate.
	Hostnames pulumi.StringArrayInput
	// The certificate ID.
	OriginClientCertificateId pulumi.StringPtrInput
	// The certificate name.
	OriginClientCertificateName pulumi.StringPtrInput
	// The private key of the certificate.
	PrivateKey pulumi.StringPtrInput
	// Site ID.
	SiteId pulumi.IntPtrInput
	// The status of the certificate.
	Status pulumi.StringPtrInput
}

func (OriginClientCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*originClientCertificateState)(nil)).Elem()
}

type originClientCertificateArgs struct {
	// The certificate content.
	Certificate string `pulumi:"certificate"`
	// The domain names to associate.
	Hostnames []string `pulumi:"hostnames"`
	// The certificate name.
	OriginClientCertificateName *string `pulumi:"originClientCertificateName"`
	// The private key of the certificate.
	PrivateKey string `pulumi:"privateKey"`
	// Site ID.
	SiteId int `pulumi:"siteId"`
}

// The set of arguments for constructing a OriginClientCertificate resource.
type OriginClientCertificateArgs struct {
	// The certificate content.
	Certificate pulumi.StringInput
	// The domain names to associate.
	Hostnames pulumi.StringArrayInput
	// The certificate name.
	OriginClientCertificateName pulumi.StringPtrInput
	// The private key of the certificate.
	PrivateKey pulumi.StringInput
	// Site ID.
	SiteId pulumi.IntInput
}

func (OriginClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originClientCertificateArgs)(nil)).Elem()
}

type OriginClientCertificateInput interface {
	pulumi.Input

	ToOriginClientCertificateOutput() OriginClientCertificateOutput
	ToOriginClientCertificateOutputWithContext(ctx context.Context) OriginClientCertificateOutput
}

func (*OriginClientCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginClientCertificate)(nil)).Elem()
}

func (i *OriginClientCertificate) ToOriginClientCertificateOutput() OriginClientCertificateOutput {
	return i.ToOriginClientCertificateOutputWithContext(context.Background())
}

func (i *OriginClientCertificate) ToOriginClientCertificateOutputWithContext(ctx context.Context) OriginClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginClientCertificateOutput)
}

// OriginClientCertificateArrayInput is an input type that accepts OriginClientCertificateArray and OriginClientCertificateArrayOutput values.
// You can construct a concrete instance of `OriginClientCertificateArrayInput` via:
//
//	OriginClientCertificateArray{ OriginClientCertificateArgs{...} }
type OriginClientCertificateArrayInput interface {
	pulumi.Input

	ToOriginClientCertificateArrayOutput() OriginClientCertificateArrayOutput
	ToOriginClientCertificateArrayOutputWithContext(context.Context) OriginClientCertificateArrayOutput
}

type OriginClientCertificateArray []OriginClientCertificateInput

func (OriginClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginClientCertificate)(nil)).Elem()
}

func (i OriginClientCertificateArray) ToOriginClientCertificateArrayOutput() OriginClientCertificateArrayOutput {
	return i.ToOriginClientCertificateArrayOutputWithContext(context.Background())
}

func (i OriginClientCertificateArray) ToOriginClientCertificateArrayOutputWithContext(ctx context.Context) OriginClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginClientCertificateArrayOutput)
}

// OriginClientCertificateMapInput is an input type that accepts OriginClientCertificateMap and OriginClientCertificateMapOutput values.
// You can construct a concrete instance of `OriginClientCertificateMapInput` via:
//
//	OriginClientCertificateMap{ "key": OriginClientCertificateArgs{...} }
type OriginClientCertificateMapInput interface {
	pulumi.Input

	ToOriginClientCertificateMapOutput() OriginClientCertificateMapOutput
	ToOriginClientCertificateMapOutputWithContext(context.Context) OriginClientCertificateMapOutput
}

type OriginClientCertificateMap map[string]OriginClientCertificateInput

func (OriginClientCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginClientCertificate)(nil)).Elem()
}

func (i OriginClientCertificateMap) ToOriginClientCertificateMapOutput() OriginClientCertificateMapOutput {
	return i.ToOriginClientCertificateMapOutputWithContext(context.Background())
}

func (i OriginClientCertificateMap) ToOriginClientCertificateMapOutputWithContext(ctx context.Context) OriginClientCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginClientCertificateMapOutput)
}

type OriginClientCertificateOutput struct{ *pulumi.OutputState }

func (OriginClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginClientCertificate)(nil)).Elem()
}

func (o OriginClientCertificateOutput) ToOriginClientCertificateOutput() OriginClientCertificateOutput {
	return o
}

func (o OriginClientCertificateOutput) ToOriginClientCertificateOutputWithContext(ctx context.Context) OriginClientCertificateOutput {
	return o
}

// The certificate content.
func (o OriginClientCertificateOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

// The time when the certificate was created.
func (o OriginClientCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The domain names to associate.
func (o OriginClientCertificateOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringArrayOutput { return v.Hostnames }).(pulumi.StringArrayOutput)
}

// The certificate ID.
func (o OriginClientCertificateOutput) OriginClientCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringOutput { return v.OriginClientCertificateId }).(pulumi.StringOutput)
}

// The certificate name.
func (o OriginClientCertificateOutput) OriginClientCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringPtrOutput { return v.OriginClientCertificateName }).(pulumi.StringPtrOutput)
}

// The private key of the certificate.
func (o OriginClientCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// Site ID.
func (o OriginClientCertificateOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// The status of the certificate.
func (o OriginClientCertificateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginClientCertificate) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type OriginClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (OriginClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginClientCertificate)(nil)).Elem()
}

func (o OriginClientCertificateArrayOutput) ToOriginClientCertificateArrayOutput() OriginClientCertificateArrayOutput {
	return o
}

func (o OriginClientCertificateArrayOutput) ToOriginClientCertificateArrayOutputWithContext(ctx context.Context) OriginClientCertificateArrayOutput {
	return o
}

func (o OriginClientCertificateArrayOutput) Index(i pulumi.IntInput) OriginClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OriginClientCertificate {
		return vs[0].([]*OriginClientCertificate)[vs[1].(int)]
	}).(OriginClientCertificateOutput)
}

type OriginClientCertificateMapOutput struct{ *pulumi.OutputState }

func (OriginClientCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginClientCertificate)(nil)).Elem()
}

func (o OriginClientCertificateMapOutput) ToOriginClientCertificateMapOutput() OriginClientCertificateMapOutput {
	return o
}

func (o OriginClientCertificateMapOutput) ToOriginClientCertificateMapOutputWithContext(ctx context.Context) OriginClientCertificateMapOutput {
	return o
}

func (o OriginClientCertificateMapOutput) MapIndex(k pulumi.StringInput) OriginClientCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OriginClientCertificate {
		return vs[0].(map[string]*OriginClientCertificate)[vs[1].(string)]
	}).(OriginClientCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginClientCertificateInput)(nil)).Elem(), &OriginClientCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginClientCertificateArrayInput)(nil)).Elem(), OriginClientCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginClientCertificateMapInput)(nil)).Elem(), OriginClientCertificateMap{})
	pulumi.RegisterOutputType(OriginClientCertificateOutput{})
	pulumi.RegisterOutputType(OriginClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(OriginClientCertificateMapOutput{})
}
