// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Rate Plan Instance resource.
//
// For information about ESA Rate Plan Instance and how to use it, see [What is Rate Plan Instance](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/product-overview/query-package-information).
//
// > **NOTE:** Available since v1.234.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := esa.NewRatePlanInstance(ctx, "default", &esa.RatePlanInstanceArgs{
//				Type:        pulumi.String("NS"),
//				AutoRenew:   pulumi.Bool(true),
//				Period:      pulumi.Int(1),
//				PaymentType: pulumi.String("Subscription"),
//				Coverage:    pulumi.String("overseas"),
//				PlanName:    pulumi.String("basic"),
//				AutoPay:     pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Rate Plan Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/ratePlanInstance:RatePlanInstance example <id>
// ```
type RatePlanInstance struct {
	pulumi.CustomResourceState

	// Specifies whether to enable auto payment.
	AutoPay pulumi.BoolPtrOutput `pulumi:"autoPay"`
	// Auto-renewal:
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
	Coverage pulumi.StringPtrOutput `pulumi:"coverage"`
	// The time when the plan was purchased.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The plan instance status.
	// - `Renewing`: renewing
	InstanceStatus pulumi.StringOutput `pulumi:"instanceStatus"`
	// The payment type of the resource. Valid values:
	// - `Subscription`: subscription.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Subscription period (in months).
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Package name.Value range:
	PlanName pulumi.StringPtrOutput `pulumi:"planName"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
	// The DNS setup option for the website. Valid values:
	// - `NS`
	// - `CNAME`
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewRatePlanInstance registers a new resource with the given unique name, arguments, and options.
func NewRatePlanInstance(ctx *pulumi.Context,
	name string, args *RatePlanInstanceArgs, opts ...pulumi.ResourceOption) (*RatePlanInstance, error) {
	if args == nil {
		args = &RatePlanInstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RatePlanInstance
	err := ctx.RegisterResource("alicloud:esa/ratePlanInstance:RatePlanInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRatePlanInstance gets an existing RatePlanInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRatePlanInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RatePlanInstanceState, opts ...pulumi.ResourceOption) (*RatePlanInstance, error) {
	var resource RatePlanInstance
	err := ctx.ReadResource("alicloud:esa/ratePlanInstance:RatePlanInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RatePlanInstance resources.
type ratePlanInstanceState struct {
	// Specifies whether to enable auto payment.
	AutoPay *bool `pulumi:"autoPay"`
	// Auto-renewal:
	AutoRenew *bool `pulumi:"autoRenew"`
	// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
	Coverage *string `pulumi:"coverage"`
	// The time when the plan was purchased.
	CreateTime *string `pulumi:"createTime"`
	// The plan instance status.
	// - `Renewing`: renewing
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The payment type of the resource. Valid values:
	// - `Subscription`: subscription.
	PaymentType *string `pulumi:"paymentType"`
	// Subscription period (in months).
	Period *int `pulumi:"period"`
	// Package name.Value range:
	PlanName *string `pulumi:"planName"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The DNS setup option for the website. Valid values:
	// - `NS`
	// - `CNAME`
	Type *string `pulumi:"type"`
}

type RatePlanInstanceState struct {
	// Specifies whether to enable auto payment.
	AutoPay pulumi.BoolPtrInput
	// Auto-renewal:
	AutoRenew pulumi.BoolPtrInput
	// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
	Coverage pulumi.StringPtrInput
	// The time when the plan was purchased.
	CreateTime pulumi.StringPtrInput
	// The plan instance status.
	// - `Renewing`: renewing
	InstanceStatus pulumi.StringPtrInput
	// The payment type of the resource. Valid values:
	// - `Subscription`: subscription.
	PaymentType pulumi.StringPtrInput
	// Subscription period (in months).
	Period pulumi.IntPtrInput
	// Package name.Value range:
	PlanName pulumi.StringPtrInput
	// The status of the resource.
	Status pulumi.StringPtrInput
	// The DNS setup option for the website. Valid values:
	// - `NS`
	// - `CNAME`
	Type pulumi.StringPtrInput
}

func (RatePlanInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*ratePlanInstanceState)(nil)).Elem()
}

type ratePlanInstanceArgs struct {
	// Specifies whether to enable auto payment.
	AutoPay *bool `pulumi:"autoPay"`
	// Auto-renewal:
	AutoRenew *bool `pulumi:"autoRenew"`
	// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
	Coverage *string `pulumi:"coverage"`
	// The payment type of the resource. Valid values:
	// - `Subscription`: subscription.
	PaymentType *string `pulumi:"paymentType"`
	// Subscription period (in months).
	Period *int `pulumi:"period"`
	// Package name.Value range:
	PlanName *string `pulumi:"planName"`
	// The DNS setup option for the website. Valid values:
	// - `NS`
	// - `CNAME`
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a RatePlanInstance resource.
type RatePlanInstanceArgs struct {
	// Specifies whether to enable auto payment.
	AutoPay pulumi.BoolPtrInput
	// Auto-renewal:
	AutoRenew pulumi.BoolPtrInput
	// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
	Coverage pulumi.StringPtrInput
	// The payment type of the resource. Valid values:
	// - `Subscription`: subscription.
	PaymentType pulumi.StringPtrInput
	// Subscription period (in months).
	Period pulumi.IntPtrInput
	// Package name.Value range:
	PlanName pulumi.StringPtrInput
	// The DNS setup option for the website. Valid values:
	// - `NS`
	// - `CNAME`
	Type pulumi.StringPtrInput
}

func (RatePlanInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ratePlanInstanceArgs)(nil)).Elem()
}

type RatePlanInstanceInput interface {
	pulumi.Input

	ToRatePlanInstanceOutput() RatePlanInstanceOutput
	ToRatePlanInstanceOutputWithContext(ctx context.Context) RatePlanInstanceOutput
}

func (*RatePlanInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RatePlanInstance)(nil)).Elem()
}

func (i *RatePlanInstance) ToRatePlanInstanceOutput() RatePlanInstanceOutput {
	return i.ToRatePlanInstanceOutputWithContext(context.Background())
}

func (i *RatePlanInstance) ToRatePlanInstanceOutputWithContext(ctx context.Context) RatePlanInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RatePlanInstanceOutput)
}

// RatePlanInstanceArrayInput is an input type that accepts RatePlanInstanceArray and RatePlanInstanceArrayOutput values.
// You can construct a concrete instance of `RatePlanInstanceArrayInput` via:
//
//	RatePlanInstanceArray{ RatePlanInstanceArgs{...} }
type RatePlanInstanceArrayInput interface {
	pulumi.Input

	ToRatePlanInstanceArrayOutput() RatePlanInstanceArrayOutput
	ToRatePlanInstanceArrayOutputWithContext(context.Context) RatePlanInstanceArrayOutput
}

type RatePlanInstanceArray []RatePlanInstanceInput

func (RatePlanInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RatePlanInstance)(nil)).Elem()
}

func (i RatePlanInstanceArray) ToRatePlanInstanceArrayOutput() RatePlanInstanceArrayOutput {
	return i.ToRatePlanInstanceArrayOutputWithContext(context.Background())
}

func (i RatePlanInstanceArray) ToRatePlanInstanceArrayOutputWithContext(ctx context.Context) RatePlanInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RatePlanInstanceArrayOutput)
}

// RatePlanInstanceMapInput is an input type that accepts RatePlanInstanceMap and RatePlanInstanceMapOutput values.
// You can construct a concrete instance of `RatePlanInstanceMapInput` via:
//
//	RatePlanInstanceMap{ "key": RatePlanInstanceArgs{...} }
type RatePlanInstanceMapInput interface {
	pulumi.Input

	ToRatePlanInstanceMapOutput() RatePlanInstanceMapOutput
	ToRatePlanInstanceMapOutputWithContext(context.Context) RatePlanInstanceMapOutput
}

type RatePlanInstanceMap map[string]RatePlanInstanceInput

func (RatePlanInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RatePlanInstance)(nil)).Elem()
}

func (i RatePlanInstanceMap) ToRatePlanInstanceMapOutput() RatePlanInstanceMapOutput {
	return i.ToRatePlanInstanceMapOutputWithContext(context.Background())
}

func (i RatePlanInstanceMap) ToRatePlanInstanceMapOutputWithContext(ctx context.Context) RatePlanInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RatePlanInstanceMapOutput)
}

type RatePlanInstanceOutput struct{ *pulumi.OutputState }

func (RatePlanInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RatePlanInstance)(nil)).Elem()
}

func (o RatePlanInstanceOutput) ToRatePlanInstanceOutput() RatePlanInstanceOutput {
	return o
}

func (o RatePlanInstanceOutput) ToRatePlanInstanceOutputWithContext(ctx context.Context) RatePlanInstanceOutput {
	return o
}

// Specifies whether to enable auto payment.
func (o RatePlanInstanceOutput) AutoPay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.BoolPtrOutput { return v.AutoPay }).(pulumi.BoolPtrOutput)
}

// Auto-renewal:
func (o RatePlanInstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// The service locations for the websites that can be associated with the plan. Multiple values are separated by commas (,). Valid values:
func (o RatePlanInstanceOutput) Coverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringPtrOutput { return v.Coverage }).(pulumi.StringPtrOutput)
}

// The time when the plan was purchased.
func (o RatePlanInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The plan instance status.
// - `Renewing`: renewing
func (o RatePlanInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringOutput { return v.InstanceStatus }).(pulumi.StringOutput)
}

// The payment type of the resource. Valid values:
// - `Subscription`: subscription.
func (o RatePlanInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Subscription period (in months).
func (o RatePlanInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Package name.Value range:
func (o RatePlanInstanceOutput) PlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringPtrOutput { return v.PlanName }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o RatePlanInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The DNS setup option for the website. Valid values:
// - `NS`
// - `CNAME`
func (o RatePlanInstanceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RatePlanInstance) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type RatePlanInstanceArrayOutput struct{ *pulumi.OutputState }

func (RatePlanInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RatePlanInstance)(nil)).Elem()
}

func (o RatePlanInstanceArrayOutput) ToRatePlanInstanceArrayOutput() RatePlanInstanceArrayOutput {
	return o
}

func (o RatePlanInstanceArrayOutput) ToRatePlanInstanceArrayOutputWithContext(ctx context.Context) RatePlanInstanceArrayOutput {
	return o
}

func (o RatePlanInstanceArrayOutput) Index(i pulumi.IntInput) RatePlanInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RatePlanInstance {
		return vs[0].([]*RatePlanInstance)[vs[1].(int)]
	}).(RatePlanInstanceOutput)
}

type RatePlanInstanceMapOutput struct{ *pulumi.OutputState }

func (RatePlanInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RatePlanInstance)(nil)).Elem()
}

func (o RatePlanInstanceMapOutput) ToRatePlanInstanceMapOutput() RatePlanInstanceMapOutput {
	return o
}

func (o RatePlanInstanceMapOutput) ToRatePlanInstanceMapOutputWithContext(ctx context.Context) RatePlanInstanceMapOutput {
	return o
}

func (o RatePlanInstanceMapOutput) MapIndex(k pulumi.StringInput) RatePlanInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RatePlanInstance {
		return vs[0].(map[string]*RatePlanInstance)[vs[1].(string)]
	}).(RatePlanInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RatePlanInstanceInput)(nil)).Elem(), &RatePlanInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*RatePlanInstanceArrayInput)(nil)).Elem(), RatePlanInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RatePlanInstanceMapInput)(nil)).Elem(), RatePlanInstanceMap{})
	pulumi.RegisterOutputType(RatePlanInstanceOutput{})
	pulumi.RegisterOutputType(RatePlanInstanceArrayOutput{})
	pulumi.RegisterOutputType(RatePlanInstanceMapOutput{})
}
