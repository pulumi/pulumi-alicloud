// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Edge Container App Record resource.
//
// For information about ESA Edge Container App Record and how to use it, see [What is Edge Container App Record](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateEdgeContainerAppRecord).
//
// > **NOTE:** Available since v1.247.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform.com"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			resourceSiteOriginPoolTest, err := esa.NewSite(ctx, "resource_Site_OriginPool_test", &esa.SiteArgs{
//				SiteName:   pulumi.String(name),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultEdgeContainerApp, err := esa.NewEdgeContainerApp(ctx, "default", &esa.EdgeContainerAppArgs{
//				HealthCheckHost:      pulumi.String("example.com"),
//				HealthCheckType:      pulumi.String("l7"),
//				ServicePort:          pulumi.Int(80),
//				HealthCheckInterval:  pulumi.Int(5),
//				EdgeContainerAppName: pulumi.String("terraform-app"),
//				HealthCheckHttpCode:  pulumi.String("http_2xx"),
//				HealthCheckUri:       pulumi.String("/"),
//				HealthCheckTimeout:   pulumi.Int(3),
//				HealthCheckSuccTimes: pulumi.Int(2),
//				Remarks:              pulumi.String(name),
//				HealthCheckMethod:    pulumi.String("HEAD"),
//				HealthCheckPort:      pulumi.Int(80),
//				HealthCheckFailTimes: pulumi.Int(5),
//				TargetPort:           pulumi.Int(3000),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewEdgeContainerAppRecord(ctx, "default", &esa.EdgeContainerAppRecordArgs{
//				RecordName: pulumi.String("tf.terraform.com"),
//				SiteId:     resourceSiteOriginPoolTest.ID(),
//				AppId:      defaultEdgeContainerApp.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Edge Container App Record can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/edgeContainerAppRecord:EdgeContainerAppRecord example <site_id>:<app_id>:<record_name>
// ```
type EdgeContainerAppRecord struct {
	pulumi.CustomResourceState

	// The application ID
	AppId pulumi.StringOutput `pulumi:"appId"`
	// The time when the domain name was added. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The associated domain name.
	RecordName pulumi.StringOutput `pulumi:"recordName"`
	// The website ID.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
}

// NewEdgeContainerAppRecord registers a new resource with the given unique name, arguments, and options.
func NewEdgeContainerAppRecord(ctx *pulumi.Context,
	name string, args *EdgeContainerAppRecordArgs, opts ...pulumi.ResourceOption) (*EdgeContainerAppRecord, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.RecordName == nil {
		return nil, errors.New("invalid value for required argument 'RecordName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeContainerAppRecord
	err := ctx.RegisterResource("alicloud:esa/edgeContainerAppRecord:EdgeContainerAppRecord", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeContainerAppRecord gets an existing EdgeContainerAppRecord resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeContainerAppRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeContainerAppRecordState, opts ...pulumi.ResourceOption) (*EdgeContainerAppRecord, error) {
	var resource EdgeContainerAppRecord
	err := ctx.ReadResource("alicloud:esa/edgeContainerAppRecord:EdgeContainerAppRecord", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeContainerAppRecord resources.
type edgeContainerAppRecordState struct {
	// The application ID
	AppId *string `pulumi:"appId"`
	// The time when the domain name was added. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.
	CreateTime *string `pulumi:"createTime"`
	// The associated domain name.
	RecordName *string `pulumi:"recordName"`
	// The website ID.
	SiteId *int `pulumi:"siteId"`
}

type EdgeContainerAppRecordState struct {
	// The application ID
	AppId pulumi.StringPtrInput
	// The time when the domain name was added. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.
	CreateTime pulumi.StringPtrInput
	// The associated domain name.
	RecordName pulumi.StringPtrInput
	// The website ID.
	SiteId pulumi.IntPtrInput
}

func (EdgeContainerAppRecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeContainerAppRecordState)(nil)).Elem()
}

type edgeContainerAppRecordArgs struct {
	// The application ID
	AppId string `pulumi:"appId"`
	// The associated domain name.
	RecordName string `pulumi:"recordName"`
	// The website ID.
	SiteId *int `pulumi:"siteId"`
}

// The set of arguments for constructing a EdgeContainerAppRecord resource.
type EdgeContainerAppRecordArgs struct {
	// The application ID
	AppId pulumi.StringInput
	// The associated domain name.
	RecordName pulumi.StringInput
	// The website ID.
	SiteId pulumi.IntPtrInput
}

func (EdgeContainerAppRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeContainerAppRecordArgs)(nil)).Elem()
}

type EdgeContainerAppRecordInput interface {
	pulumi.Input

	ToEdgeContainerAppRecordOutput() EdgeContainerAppRecordOutput
	ToEdgeContainerAppRecordOutputWithContext(ctx context.Context) EdgeContainerAppRecordOutput
}

func (*EdgeContainerAppRecord) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeContainerAppRecord)(nil)).Elem()
}

func (i *EdgeContainerAppRecord) ToEdgeContainerAppRecordOutput() EdgeContainerAppRecordOutput {
	return i.ToEdgeContainerAppRecordOutputWithContext(context.Background())
}

func (i *EdgeContainerAppRecord) ToEdgeContainerAppRecordOutputWithContext(ctx context.Context) EdgeContainerAppRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeContainerAppRecordOutput)
}

// EdgeContainerAppRecordArrayInput is an input type that accepts EdgeContainerAppRecordArray and EdgeContainerAppRecordArrayOutput values.
// You can construct a concrete instance of `EdgeContainerAppRecordArrayInput` via:
//
//	EdgeContainerAppRecordArray{ EdgeContainerAppRecordArgs{...} }
type EdgeContainerAppRecordArrayInput interface {
	pulumi.Input

	ToEdgeContainerAppRecordArrayOutput() EdgeContainerAppRecordArrayOutput
	ToEdgeContainerAppRecordArrayOutputWithContext(context.Context) EdgeContainerAppRecordArrayOutput
}

type EdgeContainerAppRecordArray []EdgeContainerAppRecordInput

func (EdgeContainerAppRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeContainerAppRecord)(nil)).Elem()
}

func (i EdgeContainerAppRecordArray) ToEdgeContainerAppRecordArrayOutput() EdgeContainerAppRecordArrayOutput {
	return i.ToEdgeContainerAppRecordArrayOutputWithContext(context.Background())
}

func (i EdgeContainerAppRecordArray) ToEdgeContainerAppRecordArrayOutputWithContext(ctx context.Context) EdgeContainerAppRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeContainerAppRecordArrayOutput)
}

// EdgeContainerAppRecordMapInput is an input type that accepts EdgeContainerAppRecordMap and EdgeContainerAppRecordMapOutput values.
// You can construct a concrete instance of `EdgeContainerAppRecordMapInput` via:
//
//	EdgeContainerAppRecordMap{ "key": EdgeContainerAppRecordArgs{...} }
type EdgeContainerAppRecordMapInput interface {
	pulumi.Input

	ToEdgeContainerAppRecordMapOutput() EdgeContainerAppRecordMapOutput
	ToEdgeContainerAppRecordMapOutputWithContext(context.Context) EdgeContainerAppRecordMapOutput
}

type EdgeContainerAppRecordMap map[string]EdgeContainerAppRecordInput

func (EdgeContainerAppRecordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeContainerAppRecord)(nil)).Elem()
}

func (i EdgeContainerAppRecordMap) ToEdgeContainerAppRecordMapOutput() EdgeContainerAppRecordMapOutput {
	return i.ToEdgeContainerAppRecordMapOutputWithContext(context.Background())
}

func (i EdgeContainerAppRecordMap) ToEdgeContainerAppRecordMapOutputWithContext(ctx context.Context) EdgeContainerAppRecordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeContainerAppRecordMapOutput)
}

type EdgeContainerAppRecordOutput struct{ *pulumi.OutputState }

func (EdgeContainerAppRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeContainerAppRecord)(nil)).Elem()
}

func (o EdgeContainerAppRecordOutput) ToEdgeContainerAppRecordOutput() EdgeContainerAppRecordOutput {
	return o
}

func (o EdgeContainerAppRecordOutput) ToEdgeContainerAppRecordOutputWithContext(ctx context.Context) EdgeContainerAppRecordOutput {
	return o
}

// The application ID
func (o EdgeContainerAppRecordOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeContainerAppRecord) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

// The time when the domain name was added. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.
func (o EdgeContainerAppRecordOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeContainerAppRecord) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The associated domain name.
func (o EdgeContainerAppRecordOutput) RecordName() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeContainerAppRecord) pulumi.StringOutput { return v.RecordName }).(pulumi.StringOutput)
}

// The website ID.
func (o EdgeContainerAppRecordOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *EdgeContainerAppRecord) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

type EdgeContainerAppRecordArrayOutput struct{ *pulumi.OutputState }

func (EdgeContainerAppRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeContainerAppRecord)(nil)).Elem()
}

func (o EdgeContainerAppRecordArrayOutput) ToEdgeContainerAppRecordArrayOutput() EdgeContainerAppRecordArrayOutput {
	return o
}

func (o EdgeContainerAppRecordArrayOutput) ToEdgeContainerAppRecordArrayOutputWithContext(ctx context.Context) EdgeContainerAppRecordArrayOutput {
	return o
}

func (o EdgeContainerAppRecordArrayOutput) Index(i pulumi.IntInput) EdgeContainerAppRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeContainerAppRecord {
		return vs[0].([]*EdgeContainerAppRecord)[vs[1].(int)]
	}).(EdgeContainerAppRecordOutput)
}

type EdgeContainerAppRecordMapOutput struct{ *pulumi.OutputState }

func (EdgeContainerAppRecordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeContainerAppRecord)(nil)).Elem()
}

func (o EdgeContainerAppRecordMapOutput) ToEdgeContainerAppRecordMapOutput() EdgeContainerAppRecordMapOutput {
	return o
}

func (o EdgeContainerAppRecordMapOutput) ToEdgeContainerAppRecordMapOutputWithContext(ctx context.Context) EdgeContainerAppRecordMapOutput {
	return o
}

func (o EdgeContainerAppRecordMapOutput) MapIndex(k pulumi.StringInput) EdgeContainerAppRecordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeContainerAppRecord {
		return vs[0].(map[string]*EdgeContainerAppRecord)[vs[1].(string)]
	}).(EdgeContainerAppRecordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeContainerAppRecordInput)(nil)).Elem(), &EdgeContainerAppRecord{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeContainerAppRecordArrayInput)(nil)).Elem(), EdgeContainerAppRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeContainerAppRecordMapInput)(nil)).Elem(), EdgeContainerAppRecordMap{})
	pulumi.RegisterOutputType(EdgeContainerAppRecordOutput{})
	pulumi.RegisterOutputType(EdgeContainerAppRecordArrayOutput{})
	pulumi.RegisterOutputType(EdgeContainerAppRecordMapOutput{})
}
