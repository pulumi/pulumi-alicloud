// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Record resource.
//
// For information about ESA Record and how to use it, see [What is Record](https://www.alibabacloud.com/help/en/edge-security-acceleration/esa/user-guide/add-parsing-record/).
//
// > **NOTE:** Available since v1.240.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := esa.NewRatePlanInstance(ctx, "default", &esa.RatePlanInstanceArgs{
//				Type:        pulumi.String("NS"),
//				AutoRenew:   pulumi.Bool(false),
//				Period:      pulumi.Int(1),
//				PaymentType: pulumi.String("Subscription"),
//				Coverage:    pulumi.String("overseas"),
//				AutoPay:     pulumi.Bool(true),
//				PlanName:    pulumi.String("high"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.String("idlexamplerecord.com"),
//				InstanceId: _default.ID(),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewRecord(ctx, "default", &esa.RecordArgs{
//				Data: &esa.RecordDataArgs{
//					Value:    pulumi.String("www.eerrraaa.com"),
//					Weight:   pulumi.Int(1),
//					Priority: pulumi.Int(1),
//					Port:     pulumi.Int(80),
//				},
//				Ttl:        pulumi.Int(100),
//				RecordName: pulumi.String("_udp._sip.idlexamplerecord.com"),
//				Comment:    pulumi.String("This is a remark"),
//				SiteId:     defaultSite.ID(),
//				RecordType: pulumi.String("SRV"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Record can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/record:Record example <id>
// ```
type Record struct {
	pulumi.CustomResourceState

	// The origin authentication information of the CNAME record. See `authConf` below.
	AuthConf RecordAuthConfPtrOutput `pulumi:"authConf"`
	// The business scenario of the record for acceleration. Valid values:
	BizName pulumi.StringPtrOutput `pulumi:"bizName"`
	// The comments of the record.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// The creation time of the record. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The DNS record information. The format of this field varies based on the record type. For more information, see [Add DNS records](https://www.alibabacloud.com/help/doc-detail/2708761.html). See `data` below.
	Data RecordDataOutput `pulumi:"data"`
	// The origin host policy. This policy takes effect when the record type is CNAME. You can set the policy in two modes:
	HostPolicy pulumi.StringPtrOutput `pulumi:"hostPolicy"`
	// Filters by whether the record is proxied. Valid values:
	Proxied pulumi.BoolPtrOutput `pulumi:"proxied"`
	// The record name. This parameter specifies a filter condition for the query.
	RecordName pulumi.StringOutput `pulumi:"recordName"`
	// The DNS record type.
	RecordType pulumi.StringOutput `pulumi:"recordType"`
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// The origin type of the record. Only CNAME records can be filtered by using this field. Valid values:
	//
	// - `OSS`: OSS bucket.
	// - `S3`: S3 bucket.
	// - `LB`: load balancer.
	// - `OP`: origin pool.
	// - `Domain`: domain name.
	SourceType pulumi.StringPtrOutput `pulumi:"sourceType"`
	// The TTL of the record. Unit: seconds. The range is 30 to 86,400, or 1. If the value is 1, the TTL of the record is determined by the system.
	Ttl pulumi.IntPtrOutput `pulumi:"ttl"`
}

// NewRecord registers a new resource with the given unique name, arguments, and options.
func NewRecord(ctx *pulumi.Context,
	name string, args *RecordArgs, opts ...pulumi.ResourceOption) (*Record, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Data == nil {
		return nil, errors.New("invalid value for required argument 'Data'")
	}
	if args.RecordName == nil {
		return nil, errors.New("invalid value for required argument 'RecordName'")
	}
	if args.RecordType == nil {
		return nil, errors.New("invalid value for required argument 'RecordType'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Record
	err := ctx.RegisterResource("alicloud:esa/record:Record", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecord gets an existing Record resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecordState, opts ...pulumi.ResourceOption) (*Record, error) {
	var resource Record
	err := ctx.ReadResource("alicloud:esa/record:Record", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Record resources.
type recordState struct {
	// The origin authentication information of the CNAME record. See `authConf` below.
	AuthConf *RecordAuthConf `pulumi:"authConf"`
	// The business scenario of the record for acceleration. Valid values:
	BizName *string `pulumi:"bizName"`
	// The comments of the record.
	Comment *string `pulumi:"comment"`
	// The creation time of the record. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
	CreateTime *string `pulumi:"createTime"`
	// The DNS record information. The format of this field varies based on the record type. For more information, see [Add DNS records](https://www.alibabacloud.com/help/doc-detail/2708761.html). See `data` below.
	Data *RecordData `pulumi:"data"`
	// The origin host policy. This policy takes effect when the record type is CNAME. You can set the policy in two modes:
	HostPolicy *string `pulumi:"hostPolicy"`
	// Filters by whether the record is proxied. Valid values:
	Proxied *bool `pulumi:"proxied"`
	// The record name. This parameter specifies a filter condition for the query.
	RecordName *string `pulumi:"recordName"`
	// The DNS record type.
	RecordType *string `pulumi:"recordType"`
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId *int `pulumi:"siteId"`
	// The origin type of the record. Only CNAME records can be filtered by using this field. Valid values:
	//
	// - `OSS`: OSS bucket.
	// - `S3`: S3 bucket.
	// - `LB`: load balancer.
	// - `OP`: origin pool.
	// - `Domain`: domain name.
	SourceType *string `pulumi:"sourceType"`
	// The TTL of the record. Unit: seconds. The range is 30 to 86,400, or 1. If the value is 1, the TTL of the record is determined by the system.
	Ttl *int `pulumi:"ttl"`
}

type RecordState struct {
	// The origin authentication information of the CNAME record. See `authConf` below.
	AuthConf RecordAuthConfPtrInput
	// The business scenario of the record for acceleration. Valid values:
	BizName pulumi.StringPtrInput
	// The comments of the record.
	Comment pulumi.StringPtrInput
	// The creation time of the record. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
	CreateTime pulumi.StringPtrInput
	// The DNS record information. The format of this field varies based on the record type. For more information, see [Add DNS records](https://www.alibabacloud.com/help/doc-detail/2708761.html). See `data` below.
	Data RecordDataPtrInput
	// The origin host policy. This policy takes effect when the record type is CNAME. You can set the policy in two modes:
	HostPolicy pulumi.StringPtrInput
	// Filters by whether the record is proxied. Valid values:
	Proxied pulumi.BoolPtrInput
	// The record name. This parameter specifies a filter condition for the query.
	RecordName pulumi.StringPtrInput
	// The DNS record type.
	RecordType pulumi.StringPtrInput
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId pulumi.IntPtrInput
	// The origin type of the record. Only CNAME records can be filtered by using this field. Valid values:
	//
	// - `OSS`: OSS bucket.
	// - `S3`: S3 bucket.
	// - `LB`: load balancer.
	// - `OP`: origin pool.
	// - `Domain`: domain name.
	SourceType pulumi.StringPtrInput
	// The TTL of the record. Unit: seconds. The range is 30 to 86,400, or 1. If the value is 1, the TTL of the record is determined by the system.
	Ttl pulumi.IntPtrInput
}

func (RecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*recordState)(nil)).Elem()
}

type recordArgs struct {
	// The origin authentication information of the CNAME record. See `authConf` below.
	AuthConf *RecordAuthConf `pulumi:"authConf"`
	// The business scenario of the record for acceleration. Valid values:
	BizName *string `pulumi:"bizName"`
	// The comments of the record.
	Comment *string `pulumi:"comment"`
	// The DNS record information. The format of this field varies based on the record type. For more information, see [Add DNS records](https://www.alibabacloud.com/help/doc-detail/2708761.html). See `data` below.
	Data RecordData `pulumi:"data"`
	// The origin host policy. This policy takes effect when the record type is CNAME. You can set the policy in two modes:
	HostPolicy *string `pulumi:"hostPolicy"`
	// Filters by whether the record is proxied. Valid values:
	Proxied *bool `pulumi:"proxied"`
	// The record name. This parameter specifies a filter condition for the query.
	RecordName string `pulumi:"recordName"`
	// The DNS record type.
	RecordType string `pulumi:"recordType"`
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId int `pulumi:"siteId"`
	// The origin type of the record. Only CNAME records can be filtered by using this field. Valid values:
	//
	// - `OSS`: OSS bucket.
	// - `S3`: S3 bucket.
	// - `LB`: load balancer.
	// - `OP`: origin pool.
	// - `Domain`: domain name.
	SourceType *string `pulumi:"sourceType"`
	// The TTL of the record. Unit: seconds. The range is 30 to 86,400, or 1. If the value is 1, the TTL of the record is determined by the system.
	Ttl *int `pulumi:"ttl"`
}

// The set of arguments for constructing a Record resource.
type RecordArgs struct {
	// The origin authentication information of the CNAME record. See `authConf` below.
	AuthConf RecordAuthConfPtrInput
	// The business scenario of the record for acceleration. Valid values:
	BizName pulumi.StringPtrInput
	// The comments of the record.
	Comment pulumi.StringPtrInput
	// The DNS record information. The format of this field varies based on the record type. For more information, see [Add DNS records](https://www.alibabacloud.com/help/doc-detail/2708761.html). See `data` below.
	Data RecordDataInput
	// The origin host policy. This policy takes effect when the record type is CNAME. You can set the policy in two modes:
	HostPolicy pulumi.StringPtrInput
	// Filters by whether the record is proxied. Valid values:
	Proxied pulumi.BoolPtrInput
	// The record name. This parameter specifies a filter condition for the query.
	RecordName pulumi.StringInput
	// The DNS record type.
	RecordType pulumi.StringInput
	// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
	SiteId pulumi.IntInput
	// The origin type of the record. Only CNAME records can be filtered by using this field. Valid values:
	//
	// - `OSS`: OSS bucket.
	// - `S3`: S3 bucket.
	// - `LB`: load balancer.
	// - `OP`: origin pool.
	// - `Domain`: domain name.
	SourceType pulumi.StringPtrInput
	// The TTL of the record. Unit: seconds. The range is 30 to 86,400, or 1. If the value is 1, the TTL of the record is determined by the system.
	Ttl pulumi.IntPtrInput
}

func (RecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recordArgs)(nil)).Elem()
}

type RecordInput interface {
	pulumi.Input

	ToRecordOutput() RecordOutput
	ToRecordOutputWithContext(ctx context.Context) RecordOutput
}

func (*Record) ElementType() reflect.Type {
	return reflect.TypeOf((**Record)(nil)).Elem()
}

func (i *Record) ToRecordOutput() RecordOutput {
	return i.ToRecordOutputWithContext(context.Background())
}

func (i *Record) ToRecordOutputWithContext(ctx context.Context) RecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordOutput)
}

// RecordArrayInput is an input type that accepts RecordArray and RecordArrayOutput values.
// You can construct a concrete instance of `RecordArrayInput` via:
//
//	RecordArray{ RecordArgs{...} }
type RecordArrayInput interface {
	pulumi.Input

	ToRecordArrayOutput() RecordArrayOutput
	ToRecordArrayOutputWithContext(context.Context) RecordArrayOutput
}

type RecordArray []RecordInput

func (RecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Record)(nil)).Elem()
}

func (i RecordArray) ToRecordArrayOutput() RecordArrayOutput {
	return i.ToRecordArrayOutputWithContext(context.Background())
}

func (i RecordArray) ToRecordArrayOutputWithContext(ctx context.Context) RecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordArrayOutput)
}

// RecordMapInput is an input type that accepts RecordMap and RecordMapOutput values.
// You can construct a concrete instance of `RecordMapInput` via:
//
//	RecordMap{ "key": RecordArgs{...} }
type RecordMapInput interface {
	pulumi.Input

	ToRecordMapOutput() RecordMapOutput
	ToRecordMapOutputWithContext(context.Context) RecordMapOutput
}

type RecordMap map[string]RecordInput

func (RecordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Record)(nil)).Elem()
}

func (i RecordMap) ToRecordMapOutput() RecordMapOutput {
	return i.ToRecordMapOutputWithContext(context.Background())
}

func (i RecordMap) ToRecordMapOutputWithContext(ctx context.Context) RecordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordMapOutput)
}

type RecordOutput struct{ *pulumi.OutputState }

func (RecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Record)(nil)).Elem()
}

func (o RecordOutput) ToRecordOutput() RecordOutput {
	return o
}

func (o RecordOutput) ToRecordOutputWithContext(ctx context.Context) RecordOutput {
	return o
}

// The origin authentication information of the CNAME record. See `authConf` below.
func (o RecordOutput) AuthConf() RecordAuthConfPtrOutput {
	return o.ApplyT(func(v *Record) RecordAuthConfPtrOutput { return v.AuthConf }).(RecordAuthConfPtrOutput)
}

// The business scenario of the record for acceleration. Valid values:
func (o RecordOutput) BizName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Record) pulumi.StringPtrOutput { return v.BizName }).(pulumi.StringPtrOutput)
}

// The comments of the record.
func (o RecordOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Record) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// The creation time of the record. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
func (o RecordOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Record) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The DNS record information. The format of this field varies based on the record type. For more information, see [Add DNS records](https://www.alibabacloud.com/help/doc-detail/2708761.html). See `data` below.
func (o RecordOutput) Data() RecordDataOutput {
	return o.ApplyT(func(v *Record) RecordDataOutput { return v.Data }).(RecordDataOutput)
}

// The origin host policy. This policy takes effect when the record type is CNAME. You can set the policy in two modes:
func (o RecordOutput) HostPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Record) pulumi.StringPtrOutput { return v.HostPolicy }).(pulumi.StringPtrOutput)
}

// Filters by whether the record is proxied. Valid values:
func (o RecordOutput) Proxied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Record) pulumi.BoolPtrOutput { return v.Proxied }).(pulumi.BoolPtrOutput)
}

// The record name. This parameter specifies a filter condition for the query.
func (o RecordOutput) RecordName() pulumi.StringOutput {
	return o.ApplyT(func(v *Record) pulumi.StringOutput { return v.RecordName }).(pulumi.StringOutput)
}

// The DNS record type.
func (o RecordOutput) RecordType() pulumi.StringOutput {
	return o.ApplyT(func(v *Record) pulumi.StringOutput { return v.RecordType }).(pulumi.StringOutput)
}

// The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
func (o RecordOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *Record) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// The origin type of the record. Only CNAME records can be filtered by using this field. Valid values:
//
// - `OSS`: OSS bucket.
// - `S3`: S3 bucket.
// - `LB`: load balancer.
// - `OP`: origin pool.
// - `Domain`: domain name.
func (o RecordOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Record) pulumi.StringPtrOutput { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The TTL of the record. Unit: seconds. The range is 30 to 86,400, or 1. If the value is 1, the TTL of the record is determined by the system.
func (o RecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Record) pulumi.IntPtrOutput { return v.Ttl }).(pulumi.IntPtrOutput)
}

type RecordArrayOutput struct{ *pulumi.OutputState }

func (RecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Record)(nil)).Elem()
}

func (o RecordArrayOutput) ToRecordArrayOutput() RecordArrayOutput {
	return o
}

func (o RecordArrayOutput) ToRecordArrayOutputWithContext(ctx context.Context) RecordArrayOutput {
	return o
}

func (o RecordArrayOutput) Index(i pulumi.IntInput) RecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Record {
		return vs[0].([]*Record)[vs[1].(int)]
	}).(RecordOutput)
}

type RecordMapOutput struct{ *pulumi.OutputState }

func (RecordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Record)(nil)).Elem()
}

func (o RecordMapOutput) ToRecordMapOutput() RecordMapOutput {
	return o
}

func (o RecordMapOutput) ToRecordMapOutputWithContext(ctx context.Context) RecordMapOutput {
	return o
}

func (o RecordMapOutput) MapIndex(k pulumi.StringInput) RecordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Record {
		return vs[0].(map[string]*Record)[vs[1].(string)]
	}).(RecordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RecordInput)(nil)).Elem(), &Record{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecordArrayInput)(nil)).Elem(), RecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecordMapInput)(nil)).Elem(), RecordMap{})
	pulumi.RegisterOutputType(RecordOutput{})
	pulumi.RegisterOutputType(RecordArrayOutput{})
	pulumi.RegisterOutputType(RecordMapOutput{})
}
