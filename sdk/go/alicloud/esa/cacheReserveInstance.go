// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Cache Reserve Instance resource.
//
// For information about ESA Cache Reserve Instance and how to use it, see [What is Cache Reserve Instance](https://next.api.alibabacloud.com/document/ESA/2024-09-10/PurchaseCacheReserve).
//
// > **NOTE:** Available since v1.247.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := esa.NewCacheReserveInstance(ctx, "default", &esa.CacheReserveInstanceArgs{
//				QuotaGb:     pulumi.Int(10240),
//				CrRegion:    pulumi.String("CN-beijing"),
//				AutoRenew:   pulumi.Bool(true),
//				Period:      pulumi.Int(1),
//				PaymentType: pulumi.String("Subscription"),
//				AutoPay:     pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Cache Reserve Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/cacheReserveInstance:CacheReserveInstance example <id>
// ```
type CacheReserveInstance struct {
	pulumi.CustomResourceState

	// Automatic payment.
	AutoPay pulumi.BoolPtrOutput `pulumi:"autoPay"`
	// Whether to auto-renew:
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// Cache holding area
	// - `HK`: Hong Kong, China
	// - `CN`: Mainland China
	CrRegion pulumi.StringPtrOutput `pulumi:"crRegion"`
	// Instance purchase time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Specifies whether to enable auto payment.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Purchase period (unit: month).
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Cache retention specification (unit: GB).
	QuotaGb pulumi.IntPtrOutput `pulumi:"quotaGb"`
	// The status of the cache reserve instance. , it is unavailable.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewCacheReserveInstance registers a new resource with the given unique name, arguments, and options.
func NewCacheReserveInstance(ctx *pulumi.Context,
	name string, args *CacheReserveInstanceArgs, opts ...pulumi.ResourceOption) (*CacheReserveInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CacheReserveInstance
	err := ctx.RegisterResource("alicloud:esa/cacheReserveInstance:CacheReserveInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCacheReserveInstance gets an existing CacheReserveInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCacheReserveInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CacheReserveInstanceState, opts ...pulumi.ResourceOption) (*CacheReserveInstance, error) {
	var resource CacheReserveInstance
	err := ctx.ReadResource("alicloud:esa/cacheReserveInstance:CacheReserveInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CacheReserveInstance resources.
type cacheReserveInstanceState struct {
	// Automatic payment.
	AutoPay *bool `pulumi:"autoPay"`
	// Whether to auto-renew:
	AutoRenew *bool `pulumi:"autoRenew"`
	// Cache holding area
	// - `HK`: Hong Kong, China
	// - `CN`: Mainland China
	CrRegion *string `pulumi:"crRegion"`
	// Instance purchase time.
	CreateTime *string `pulumi:"createTime"`
	// Specifies whether to enable auto payment.
	PaymentType *string `pulumi:"paymentType"`
	// Purchase period (unit: month).
	Period *int `pulumi:"period"`
	// Cache retention specification (unit: GB).
	QuotaGb *int `pulumi:"quotaGb"`
	// The status of the cache reserve instance. , it is unavailable.
	Status *string `pulumi:"status"`
}

type CacheReserveInstanceState struct {
	// Automatic payment.
	AutoPay pulumi.BoolPtrInput
	// Whether to auto-renew:
	AutoRenew pulumi.BoolPtrInput
	// Cache holding area
	// - `HK`: Hong Kong, China
	// - `CN`: Mainland China
	CrRegion pulumi.StringPtrInput
	// Instance purchase time.
	CreateTime pulumi.StringPtrInput
	// Specifies whether to enable auto payment.
	PaymentType pulumi.StringPtrInput
	// Purchase period (unit: month).
	Period pulumi.IntPtrInput
	// Cache retention specification (unit: GB).
	QuotaGb pulumi.IntPtrInput
	// The status of the cache reserve instance. , it is unavailable.
	Status pulumi.StringPtrInput
}

func (CacheReserveInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cacheReserveInstanceState)(nil)).Elem()
}

type cacheReserveInstanceArgs struct {
	// Automatic payment.
	AutoPay *bool `pulumi:"autoPay"`
	// Whether to auto-renew:
	AutoRenew *bool `pulumi:"autoRenew"`
	// Cache holding area
	// - `HK`: Hong Kong, China
	// - `CN`: Mainland China
	CrRegion *string `pulumi:"crRegion"`
	// Specifies whether to enable auto payment.
	PaymentType string `pulumi:"paymentType"`
	// Purchase period (unit: month).
	Period *int `pulumi:"period"`
	// Cache retention specification (unit: GB).
	QuotaGb *int `pulumi:"quotaGb"`
}

// The set of arguments for constructing a CacheReserveInstance resource.
type CacheReserveInstanceArgs struct {
	// Automatic payment.
	AutoPay pulumi.BoolPtrInput
	// Whether to auto-renew:
	AutoRenew pulumi.BoolPtrInput
	// Cache holding area
	// - `HK`: Hong Kong, China
	// - `CN`: Mainland China
	CrRegion pulumi.StringPtrInput
	// Specifies whether to enable auto payment.
	PaymentType pulumi.StringInput
	// Purchase period (unit: month).
	Period pulumi.IntPtrInput
	// Cache retention specification (unit: GB).
	QuotaGb pulumi.IntPtrInput
}

func (CacheReserveInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cacheReserveInstanceArgs)(nil)).Elem()
}

type CacheReserveInstanceInput interface {
	pulumi.Input

	ToCacheReserveInstanceOutput() CacheReserveInstanceOutput
	ToCacheReserveInstanceOutputWithContext(ctx context.Context) CacheReserveInstanceOutput
}

func (*CacheReserveInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheReserveInstance)(nil)).Elem()
}

func (i *CacheReserveInstance) ToCacheReserveInstanceOutput() CacheReserveInstanceOutput {
	return i.ToCacheReserveInstanceOutputWithContext(context.Background())
}

func (i *CacheReserveInstance) ToCacheReserveInstanceOutputWithContext(ctx context.Context) CacheReserveInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheReserveInstanceOutput)
}

// CacheReserveInstanceArrayInput is an input type that accepts CacheReserveInstanceArray and CacheReserveInstanceArrayOutput values.
// You can construct a concrete instance of `CacheReserveInstanceArrayInput` via:
//
//	CacheReserveInstanceArray{ CacheReserveInstanceArgs{...} }
type CacheReserveInstanceArrayInput interface {
	pulumi.Input

	ToCacheReserveInstanceArrayOutput() CacheReserveInstanceArrayOutput
	ToCacheReserveInstanceArrayOutputWithContext(context.Context) CacheReserveInstanceArrayOutput
}

type CacheReserveInstanceArray []CacheReserveInstanceInput

func (CacheReserveInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CacheReserveInstance)(nil)).Elem()
}

func (i CacheReserveInstanceArray) ToCacheReserveInstanceArrayOutput() CacheReserveInstanceArrayOutput {
	return i.ToCacheReserveInstanceArrayOutputWithContext(context.Background())
}

func (i CacheReserveInstanceArray) ToCacheReserveInstanceArrayOutputWithContext(ctx context.Context) CacheReserveInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheReserveInstanceArrayOutput)
}

// CacheReserveInstanceMapInput is an input type that accepts CacheReserveInstanceMap and CacheReserveInstanceMapOutput values.
// You can construct a concrete instance of `CacheReserveInstanceMapInput` via:
//
//	CacheReserveInstanceMap{ "key": CacheReserveInstanceArgs{...} }
type CacheReserveInstanceMapInput interface {
	pulumi.Input

	ToCacheReserveInstanceMapOutput() CacheReserveInstanceMapOutput
	ToCacheReserveInstanceMapOutputWithContext(context.Context) CacheReserveInstanceMapOutput
}

type CacheReserveInstanceMap map[string]CacheReserveInstanceInput

func (CacheReserveInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CacheReserveInstance)(nil)).Elem()
}

func (i CacheReserveInstanceMap) ToCacheReserveInstanceMapOutput() CacheReserveInstanceMapOutput {
	return i.ToCacheReserveInstanceMapOutputWithContext(context.Background())
}

func (i CacheReserveInstanceMap) ToCacheReserveInstanceMapOutputWithContext(ctx context.Context) CacheReserveInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheReserveInstanceMapOutput)
}

type CacheReserveInstanceOutput struct{ *pulumi.OutputState }

func (CacheReserveInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheReserveInstance)(nil)).Elem()
}

func (o CacheReserveInstanceOutput) ToCacheReserveInstanceOutput() CacheReserveInstanceOutput {
	return o
}

func (o CacheReserveInstanceOutput) ToCacheReserveInstanceOutputWithContext(ctx context.Context) CacheReserveInstanceOutput {
	return o
}

// Automatic payment.
func (o CacheReserveInstanceOutput) AutoPay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.BoolPtrOutput { return v.AutoPay }).(pulumi.BoolPtrOutput)
}

// Whether to auto-renew:
func (o CacheReserveInstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Cache holding area
// - `HK`: Hong Kong, China
// - `CN`: Mainland China
func (o CacheReserveInstanceOutput) CrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.StringPtrOutput { return v.CrRegion }).(pulumi.StringPtrOutput)
}

// Instance purchase time.
func (o CacheReserveInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Specifies whether to enable auto payment.
func (o CacheReserveInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Purchase period (unit: month).
func (o CacheReserveInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Cache retention specification (unit: GB).
func (o CacheReserveInstanceOutput) QuotaGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.IntPtrOutput { return v.QuotaGb }).(pulumi.IntPtrOutput)
}

// The status of the cache reserve instance. , it is unavailable.
func (o CacheReserveInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CacheReserveInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type CacheReserveInstanceArrayOutput struct{ *pulumi.OutputState }

func (CacheReserveInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CacheReserveInstance)(nil)).Elem()
}

func (o CacheReserveInstanceArrayOutput) ToCacheReserveInstanceArrayOutput() CacheReserveInstanceArrayOutput {
	return o
}

func (o CacheReserveInstanceArrayOutput) ToCacheReserveInstanceArrayOutputWithContext(ctx context.Context) CacheReserveInstanceArrayOutput {
	return o
}

func (o CacheReserveInstanceArrayOutput) Index(i pulumi.IntInput) CacheReserveInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CacheReserveInstance {
		return vs[0].([]*CacheReserveInstance)[vs[1].(int)]
	}).(CacheReserveInstanceOutput)
}

type CacheReserveInstanceMapOutput struct{ *pulumi.OutputState }

func (CacheReserveInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CacheReserveInstance)(nil)).Elem()
}

func (o CacheReserveInstanceMapOutput) ToCacheReserveInstanceMapOutput() CacheReserveInstanceMapOutput {
	return o
}

func (o CacheReserveInstanceMapOutput) ToCacheReserveInstanceMapOutputWithContext(ctx context.Context) CacheReserveInstanceMapOutput {
	return o
}

func (o CacheReserveInstanceMapOutput) MapIndex(k pulumi.StringInput) CacheReserveInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CacheReserveInstance {
		return vs[0].(map[string]*CacheReserveInstance)[vs[1].(string)]
	}).(CacheReserveInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CacheReserveInstanceInput)(nil)).Elem(), &CacheReserveInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheReserveInstanceArrayInput)(nil)).Elem(), CacheReserveInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheReserveInstanceMapInput)(nil)).Elem(), CacheReserveInstanceMap{})
	pulumi.RegisterOutputType(CacheReserveInstanceOutput{})
	pulumi.RegisterOutputType(CacheReserveInstanceArrayOutput{})
	pulumi.RegisterOutputType(CacheReserveInstanceMapOutput{})
}
