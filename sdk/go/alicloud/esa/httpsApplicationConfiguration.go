// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Https Application Configuration resource.
//
// For information about ESA Https Application Configuration and how to use it, see [What is Https Application Configuration](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateHttpsApplicationConfiguration).
//
// > **NOTE:** Available since v1.244.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.String("httpsapplicationconfiguration.example.com"),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("domestic"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewHttpsApplicationConfiguration(ctx, "default", &esa.HttpsApplicationConfigurationArgs{
//				HstsMaxAge:            pulumi.String("31536000"),
//				AltSvcClear:           pulumi.String("off"),
//				Rule:                  pulumi.String("http.host eq \"video.example.com\""),
//				HttpsForce:            pulumi.String("off"),
//				AltSvcMa:              pulumi.String("86400"),
//				Hsts:                  pulumi.String("off"),
//				RuleName:              pulumi.String("rule_example"),
//				RuleEnable:            pulumi.String("off"),
//				SiteId:                defaultSite.ID(),
//				AltSvcPersist:         pulumi.String("off"),
//				HstsPreload:           pulumi.String("off"),
//				HstsIncludeSubdomains: pulumi.String("off"),
//				AltSvc:                pulumi.String("off"),
//				HttpsForceCode:        pulumi.String("301"),
//				SiteVersion:           pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Https Application Configuration can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration example <site_id>:<config_id>
// ```
type HttpsApplicationConfiguration struct {
	pulumi.CustomResourceState

	// Function switch, default off. Value range:
	AltSvc pulumi.StringPtrOutput `pulumi:"altSvc"`
	// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
	AltSvcClear pulumi.StringPtrOutput `pulumi:"altSvcClear"`
	// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
	AltSvcMa pulumi.StringPtrOutput `pulumi:"altSvcMa"`
	// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
	AltSvcPersist pulumi.StringPtrOutput `pulumi:"altSvcPersist"`
	// Config Id
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Whether to enable HSTS. It is disabled by default. Value range:
	Hsts pulumi.StringPtrOutput `pulumi:"hsts"`
	// Whether to include subdomains in HSTS is disabled by default. Value range:
	HstsIncludeSubdomains pulumi.StringPtrOutput `pulumi:"hstsIncludeSubdomains"`
	// The expiration time of HSTS, in seconds.
	HstsMaxAge pulumi.StringPtrOutput `pulumi:"hstsMaxAge"`
	// Whether to enable HSTS preloading. It is disabled by default. Value range:
	HstsPreload pulumi.StringPtrOutput `pulumi:"hstsPreload"`
	// Whether to enable forced HTTPS. It is disabled by default. Value range:
	HttpsForce pulumi.StringPtrOutput `pulumi:"httpsForce"`
	// Forced HTTPS jump status code, value range:
	HttpsForceCode pulumi.StringPtrOutput `pulumi:"httpsForceCode"`
	// Rule Content.
	Rule pulumi.StringPtrOutput `pulumi:"rule"`
	// Rule switch. Value range:
	RuleEnable pulumi.StringPtrOutput `pulumi:"ruleEnable"`
	// Rule name, you can find out the rule whose rule name is the passed field.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// The version of the website configurations.
	SiteVersion pulumi.IntPtrOutput `pulumi:"siteVersion"`
}

// NewHttpsApplicationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewHttpsApplicationConfiguration(ctx *pulumi.Context,
	name string, args *HttpsApplicationConfigurationArgs, opts ...pulumi.ResourceOption) (*HttpsApplicationConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HttpsApplicationConfiguration
	err := ctx.RegisterResource("alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHttpsApplicationConfiguration gets an existing HttpsApplicationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHttpsApplicationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HttpsApplicationConfigurationState, opts ...pulumi.ResourceOption) (*HttpsApplicationConfiguration, error) {
	var resource HttpsApplicationConfiguration
	err := ctx.ReadResource("alicloud:esa/httpsApplicationConfiguration:HttpsApplicationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HttpsApplicationConfiguration resources.
type httpsApplicationConfigurationState struct {
	// Function switch, default off. Value range:
	AltSvc *string `pulumi:"altSvc"`
	// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
	AltSvcClear *string `pulumi:"altSvcClear"`
	// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
	AltSvcMa *string `pulumi:"altSvcMa"`
	// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
	AltSvcPersist *string `pulumi:"altSvcPersist"`
	// Config Id
	ConfigId *int `pulumi:"configId"`
	// Whether to enable HSTS. It is disabled by default. Value range:
	Hsts *string `pulumi:"hsts"`
	// Whether to include subdomains in HSTS is disabled by default. Value range:
	HstsIncludeSubdomains *string `pulumi:"hstsIncludeSubdomains"`
	// The expiration time of HSTS, in seconds.
	HstsMaxAge *string `pulumi:"hstsMaxAge"`
	// Whether to enable HSTS preloading. It is disabled by default. Value range:
	HstsPreload *string `pulumi:"hstsPreload"`
	// Whether to enable forced HTTPS. It is disabled by default. Value range:
	HttpsForce *string `pulumi:"httpsForce"`
	// Forced HTTPS jump status code, value range:
	HttpsForceCode *string `pulumi:"httpsForceCode"`
	// Rule Content.
	Rule *string `pulumi:"rule"`
	// Rule switch. Value range:
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name, you can find out the rule whose rule name is the passed field.
	RuleName *string `pulumi:"ruleName"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId *int `pulumi:"siteId"`
	// The version of the website configurations.
	SiteVersion *int `pulumi:"siteVersion"`
}

type HttpsApplicationConfigurationState struct {
	// Function switch, default off. Value range:
	AltSvc pulumi.StringPtrInput
	// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
	AltSvcClear pulumi.StringPtrInput
	// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
	AltSvcMa pulumi.StringPtrInput
	// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
	AltSvcPersist pulumi.StringPtrInput
	// Config Id
	ConfigId pulumi.IntPtrInput
	// Whether to enable HSTS. It is disabled by default. Value range:
	Hsts pulumi.StringPtrInput
	// Whether to include subdomains in HSTS is disabled by default. Value range:
	HstsIncludeSubdomains pulumi.StringPtrInput
	// The expiration time of HSTS, in seconds.
	HstsMaxAge pulumi.StringPtrInput
	// Whether to enable HSTS preloading. It is disabled by default. Value range:
	HstsPreload pulumi.StringPtrInput
	// Whether to enable forced HTTPS. It is disabled by default. Value range:
	HttpsForce pulumi.StringPtrInput
	// Forced HTTPS jump status code, value range:
	HttpsForceCode pulumi.StringPtrInput
	// Rule Content.
	Rule pulumi.StringPtrInput
	// Rule switch. Value range:
	RuleEnable pulumi.StringPtrInput
	// Rule name, you can find out the rule whose rule name is the passed field.
	RuleName pulumi.StringPtrInput
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntPtrInput
	// The version of the website configurations.
	SiteVersion pulumi.IntPtrInput
}

func (HttpsApplicationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*httpsApplicationConfigurationState)(nil)).Elem()
}

type httpsApplicationConfigurationArgs struct {
	// Function switch, default off. Value range:
	AltSvc *string `pulumi:"altSvc"`
	// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
	AltSvcClear *string `pulumi:"altSvcClear"`
	// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
	AltSvcMa *string `pulumi:"altSvcMa"`
	// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
	AltSvcPersist *string `pulumi:"altSvcPersist"`
	// Whether to enable HSTS. It is disabled by default. Value range:
	Hsts *string `pulumi:"hsts"`
	// Whether to include subdomains in HSTS is disabled by default. Value range:
	HstsIncludeSubdomains *string `pulumi:"hstsIncludeSubdomains"`
	// The expiration time of HSTS, in seconds.
	HstsMaxAge *string `pulumi:"hstsMaxAge"`
	// Whether to enable HSTS preloading. It is disabled by default. Value range:
	HstsPreload *string `pulumi:"hstsPreload"`
	// Whether to enable forced HTTPS. It is disabled by default. Value range:
	HttpsForce *string `pulumi:"httpsForce"`
	// Forced HTTPS jump status code, value range:
	HttpsForceCode *string `pulumi:"httpsForceCode"`
	// Rule Content.
	Rule *string `pulumi:"rule"`
	// Rule switch. Value range:
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name, you can find out the rule whose rule name is the passed field.
	RuleName *string `pulumi:"ruleName"`
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId int `pulumi:"siteId"`
	// The version of the website configurations.
	SiteVersion *int `pulumi:"siteVersion"`
}

// The set of arguments for constructing a HttpsApplicationConfiguration resource.
type HttpsApplicationConfigurationArgs struct {
	// Function switch, default off. Value range:
	AltSvc pulumi.StringPtrInput
	// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
	AltSvcClear pulumi.StringPtrInput
	// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
	AltSvcMa pulumi.StringPtrInput
	// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
	AltSvcPersist pulumi.StringPtrInput
	// Whether to enable HSTS. It is disabled by default. Value range:
	Hsts pulumi.StringPtrInput
	// Whether to include subdomains in HSTS is disabled by default. Value range:
	HstsIncludeSubdomains pulumi.StringPtrInput
	// The expiration time of HSTS, in seconds.
	HstsMaxAge pulumi.StringPtrInput
	// Whether to enable HSTS preloading. It is disabled by default. Value range:
	HstsPreload pulumi.StringPtrInput
	// Whether to enable forced HTTPS. It is disabled by default. Value range:
	HttpsForce pulumi.StringPtrInput
	// Forced HTTPS jump status code, value range:
	HttpsForceCode pulumi.StringPtrInput
	// Rule Content.
	Rule pulumi.StringPtrInput
	// Rule switch. Value range:
	RuleEnable pulumi.StringPtrInput
	// Rule name, you can find out the rule whose rule name is the passed field.
	RuleName pulumi.StringPtrInput
	// The site ID, which can be obtained by calling the ListSites API.
	SiteId pulumi.IntInput
	// The version of the website configurations.
	SiteVersion pulumi.IntPtrInput
}

func (HttpsApplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*httpsApplicationConfigurationArgs)(nil)).Elem()
}

type HttpsApplicationConfigurationInput interface {
	pulumi.Input

	ToHttpsApplicationConfigurationOutput() HttpsApplicationConfigurationOutput
	ToHttpsApplicationConfigurationOutputWithContext(ctx context.Context) HttpsApplicationConfigurationOutput
}

func (*HttpsApplicationConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpsApplicationConfiguration)(nil)).Elem()
}

func (i *HttpsApplicationConfiguration) ToHttpsApplicationConfigurationOutput() HttpsApplicationConfigurationOutput {
	return i.ToHttpsApplicationConfigurationOutputWithContext(context.Background())
}

func (i *HttpsApplicationConfiguration) ToHttpsApplicationConfigurationOutputWithContext(ctx context.Context) HttpsApplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpsApplicationConfigurationOutput)
}

// HttpsApplicationConfigurationArrayInput is an input type that accepts HttpsApplicationConfigurationArray and HttpsApplicationConfigurationArrayOutput values.
// You can construct a concrete instance of `HttpsApplicationConfigurationArrayInput` via:
//
//	HttpsApplicationConfigurationArray{ HttpsApplicationConfigurationArgs{...} }
type HttpsApplicationConfigurationArrayInput interface {
	pulumi.Input

	ToHttpsApplicationConfigurationArrayOutput() HttpsApplicationConfigurationArrayOutput
	ToHttpsApplicationConfigurationArrayOutputWithContext(context.Context) HttpsApplicationConfigurationArrayOutput
}

type HttpsApplicationConfigurationArray []HttpsApplicationConfigurationInput

func (HttpsApplicationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HttpsApplicationConfiguration)(nil)).Elem()
}

func (i HttpsApplicationConfigurationArray) ToHttpsApplicationConfigurationArrayOutput() HttpsApplicationConfigurationArrayOutput {
	return i.ToHttpsApplicationConfigurationArrayOutputWithContext(context.Background())
}

func (i HttpsApplicationConfigurationArray) ToHttpsApplicationConfigurationArrayOutputWithContext(ctx context.Context) HttpsApplicationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpsApplicationConfigurationArrayOutput)
}

// HttpsApplicationConfigurationMapInput is an input type that accepts HttpsApplicationConfigurationMap and HttpsApplicationConfigurationMapOutput values.
// You can construct a concrete instance of `HttpsApplicationConfigurationMapInput` via:
//
//	HttpsApplicationConfigurationMap{ "key": HttpsApplicationConfigurationArgs{...} }
type HttpsApplicationConfigurationMapInput interface {
	pulumi.Input

	ToHttpsApplicationConfigurationMapOutput() HttpsApplicationConfigurationMapOutput
	ToHttpsApplicationConfigurationMapOutputWithContext(context.Context) HttpsApplicationConfigurationMapOutput
}

type HttpsApplicationConfigurationMap map[string]HttpsApplicationConfigurationInput

func (HttpsApplicationConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HttpsApplicationConfiguration)(nil)).Elem()
}

func (i HttpsApplicationConfigurationMap) ToHttpsApplicationConfigurationMapOutput() HttpsApplicationConfigurationMapOutput {
	return i.ToHttpsApplicationConfigurationMapOutputWithContext(context.Background())
}

func (i HttpsApplicationConfigurationMap) ToHttpsApplicationConfigurationMapOutputWithContext(ctx context.Context) HttpsApplicationConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpsApplicationConfigurationMapOutput)
}

type HttpsApplicationConfigurationOutput struct{ *pulumi.OutputState }

func (HttpsApplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpsApplicationConfiguration)(nil)).Elem()
}

func (o HttpsApplicationConfigurationOutput) ToHttpsApplicationConfigurationOutput() HttpsApplicationConfigurationOutput {
	return o
}

func (o HttpsApplicationConfigurationOutput) ToHttpsApplicationConfigurationOutputWithContext(ctx context.Context) HttpsApplicationConfigurationOutput {
	return o
}

// Function switch, default off. Value range:
func (o HttpsApplicationConfigurationOutput) AltSvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.AltSvc }).(pulumi.StringPtrOutput)
}

// Alt-Svc whether The header contains the clear parameter. This parameter is disabled by default. Value range:
func (o HttpsApplicationConfigurationOutput) AltSvcClear() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.AltSvcClear }).(pulumi.StringPtrOutput)
}

// The effective time of the Alt-Svc, in seconds. The default value is 86400 seconds.
func (o HttpsApplicationConfigurationOutput) AltSvcMa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.AltSvcMa }).(pulumi.StringPtrOutput)
}

// Alt-Svc whether The header contains the persist parameter. This parameter is disabled by default. Value range:
func (o HttpsApplicationConfigurationOutput) AltSvcPersist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.AltSvcPersist }).(pulumi.StringPtrOutput)
}

// Config Id
func (o HttpsApplicationConfigurationOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Whether to enable HSTS. It is disabled by default. Value range:
func (o HttpsApplicationConfigurationOutput) Hsts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.Hsts }).(pulumi.StringPtrOutput)
}

// Whether to include subdomains in HSTS is disabled by default. Value range:
func (o HttpsApplicationConfigurationOutput) HstsIncludeSubdomains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.HstsIncludeSubdomains }).(pulumi.StringPtrOutput)
}

// The expiration time of HSTS, in seconds.
func (o HttpsApplicationConfigurationOutput) HstsMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.HstsMaxAge }).(pulumi.StringPtrOutput)
}

// Whether to enable HSTS preloading. It is disabled by default. Value range:
func (o HttpsApplicationConfigurationOutput) HstsPreload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.HstsPreload }).(pulumi.StringPtrOutput)
}

// Whether to enable forced HTTPS. It is disabled by default. Value range:
func (o HttpsApplicationConfigurationOutput) HttpsForce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.HttpsForce }).(pulumi.StringPtrOutput)
}

// Forced HTTPS jump status code, value range:
func (o HttpsApplicationConfigurationOutput) HttpsForceCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.HttpsForceCode }).(pulumi.StringPtrOutput)
}

// Rule Content.
func (o HttpsApplicationConfigurationOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.Rule }).(pulumi.StringPtrOutput)
}

// Rule switch. Value range:
func (o HttpsApplicationConfigurationOutput) RuleEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.RuleEnable }).(pulumi.StringPtrOutput)
}

// Rule name, you can find out the rule whose rule name is the passed field.
func (o HttpsApplicationConfigurationOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// The site ID, which can be obtained by calling the ListSites API.
func (o HttpsApplicationConfigurationOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// The version of the website configurations.
func (o HttpsApplicationConfigurationOutput) SiteVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HttpsApplicationConfiguration) pulumi.IntPtrOutput { return v.SiteVersion }).(pulumi.IntPtrOutput)
}

type HttpsApplicationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (HttpsApplicationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HttpsApplicationConfiguration)(nil)).Elem()
}

func (o HttpsApplicationConfigurationArrayOutput) ToHttpsApplicationConfigurationArrayOutput() HttpsApplicationConfigurationArrayOutput {
	return o
}

func (o HttpsApplicationConfigurationArrayOutput) ToHttpsApplicationConfigurationArrayOutputWithContext(ctx context.Context) HttpsApplicationConfigurationArrayOutput {
	return o
}

func (o HttpsApplicationConfigurationArrayOutput) Index(i pulumi.IntInput) HttpsApplicationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HttpsApplicationConfiguration {
		return vs[0].([]*HttpsApplicationConfiguration)[vs[1].(int)]
	}).(HttpsApplicationConfigurationOutput)
}

type HttpsApplicationConfigurationMapOutput struct{ *pulumi.OutputState }

func (HttpsApplicationConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HttpsApplicationConfiguration)(nil)).Elem()
}

func (o HttpsApplicationConfigurationMapOutput) ToHttpsApplicationConfigurationMapOutput() HttpsApplicationConfigurationMapOutput {
	return o
}

func (o HttpsApplicationConfigurationMapOutput) ToHttpsApplicationConfigurationMapOutputWithContext(ctx context.Context) HttpsApplicationConfigurationMapOutput {
	return o
}

func (o HttpsApplicationConfigurationMapOutput) MapIndex(k pulumi.StringInput) HttpsApplicationConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HttpsApplicationConfiguration {
		return vs[0].(map[string]*HttpsApplicationConfiguration)[vs[1].(string)]
	}).(HttpsApplicationConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HttpsApplicationConfigurationInput)(nil)).Elem(), &HttpsApplicationConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpsApplicationConfigurationArrayInput)(nil)).Elem(), HttpsApplicationConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpsApplicationConfigurationMapInput)(nil)).Elem(), HttpsApplicationConfigurationMap{})
	pulumi.RegisterOutputType(HttpsApplicationConfigurationOutput{})
	pulumi.RegisterOutputType(HttpsApplicationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(HttpsApplicationConfigurationMapOutput{})
}
