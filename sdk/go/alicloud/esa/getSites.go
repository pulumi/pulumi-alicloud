// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Esa Site available to the user.[What is Site](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateSite)
//
// > **NOTE:** Available since v1.244.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// defaultIEoDfU, err := esa.NewRatePlanInstance(ctx, "defaultIEoDfU", &esa.RatePlanInstanceArgs{
// Type: pulumi.String("NS"),
// AutoRenew: pulumi.Bool(true),
// Period: pulumi.Int(1),
// PaymentType: pulumi.String("Subscription"),
// Coverage: pulumi.String("overseas"),
// AutoPay: pulumi.Bool(true),
// PlanName: pulumi.String("basic"),
// })
// if err != nil {
// return err
// }
// defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
// SiteName: pulumi.String("bcd.com"),
// Coverage: pulumi.String("overseas"),
// AccessType: pulumi.String("NS"),
// InstanceId: defaultIEoDfU.ID(),
// })
// if err != nil {
// return err
// }
// _default := esa.GetSitesOutput(ctx, esa.GetSitesOutputArgs{
// Ids: pulumi.StringArray{
// defaultSite.ID(),
// },
// NameRegex: defaultSite.SiteName,
// SiteName: pulumi.String("bcd.com"),
// }, nil);
// ctx.Export("alicloudEsaSiteExampleId", _default.ApplyT(func(_default esa.GetSitesResult) (*int, error) {
// return &default.Sites[0].Id, nil
// }).(pulumi.IntPtrOutput))
// return nil
// })
// }
// ```
func GetSites(ctx *pulumi.Context, args *GetSitesArgs, opts ...pulumi.InvokeOption) (*GetSitesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSitesResult
	err := ctx.Invoke("alicloud:esa/getSites:getSites", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSites.
type GetSitesArgs struct {
	// Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
	AccessType *string `pulumi:"accessType"`
	// Acceleration area
	Coverage *string `pulumi:"coverage"`
	// A list of Site IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
	OnlyEnterprise *bool `pulumi:"onlyEnterprise"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// Current page number.
	PageNumber *int `pulumi:"pageNumber"`
	// Number of records per page.
	PageSize *int `pulumi:"pageSize"`
	// Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
	PlanSubscribeType *string `pulumi:"planSubscribeType"`
	// The ID of the resource group
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Site Name
	SiteName *string `pulumi:"siteName"`
	// The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
	SiteSearchType *string `pulumi:"siteSearchType"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSites.
type GetSitesResult struct {
	// Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
	AccessType *string `pulumi:"accessType"`
	// Acceleration area
	Coverage *string `pulumi:"coverage"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Site IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of name of Sites.
	Names             []string `pulumi:"names"`
	OnlyEnterprise    *bool    `pulumi:"onlyEnterprise"`
	OutputFile        *string  `pulumi:"outputFile"`
	PageNumber        *int     `pulumi:"pageNumber"`
	PageSize          *int     `pulumi:"pageSize"`
	PlanSubscribeType *string  `pulumi:"planSubscribeType"`
	// The ID of the resource group
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Site Name
	SiteName       *string `pulumi:"siteName"`
	SiteSearchType *string `pulumi:"siteSearchType"`
	// A list of Site Entries. Each element contains the following attributes:
	Sites []GetSitesSite `pulumi:"sites"`
	// The status of the resource
	Status *string           `pulumi:"status"`
	Tags   map[string]string `pulumi:"tags"`
}

func GetSitesOutput(ctx *pulumi.Context, args GetSitesOutputArgs, opts ...pulumi.InvokeOption) GetSitesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSitesResultOutput, error) {
			args := v.(GetSitesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:esa/getSites:getSites", args, GetSitesResultOutput{}, options).(GetSitesResultOutput), nil
		}).(GetSitesResultOutput)
}

// A collection of arguments for invoking getSites.
type GetSitesOutputArgs struct {
	// Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
	AccessType pulumi.StringPtrInput `pulumi:"accessType"`
	// Acceleration area
	Coverage pulumi.StringPtrInput `pulumi:"coverage"`
	// A list of Site IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
	OnlyEnterprise pulumi.BoolPtrInput `pulumi:"onlyEnterprise"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Current page number.
	PageNumber pulumi.IntPtrInput `pulumi:"pageNumber"`
	// Number of records per page.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
	PlanSubscribeType pulumi.StringPtrInput `pulumi:"planSubscribeType"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// Site Name
	SiteName pulumi.StringPtrInput `pulumi:"siteName"`
	// The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
	SiteSearchType pulumi.StringPtrInput `pulumi:"siteSearchType"`
	// The status of the resource
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetSitesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSitesArgs)(nil)).Elem()
}

// A collection of values returned by getSites.
type GetSitesResultOutput struct{ *pulumi.OutputState }

func (GetSitesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSitesResult)(nil)).Elem()
}

func (o GetSitesResultOutput) ToGetSitesResultOutput() GetSitesResultOutput {
	return o
}

func (o GetSitesResultOutput) ToGetSitesResultOutputWithContext(ctx context.Context) GetSitesResultOutput {
	return o
}

// Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
func (o GetSitesResultOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.AccessType }).(pulumi.StringPtrOutput)
}

// Acceleration area
func (o GetSitesResultOutput) Coverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.Coverage }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSitesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSitesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Site IDs.
func (o GetSitesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSitesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSitesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Sites.
func (o GetSitesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSitesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSitesResultOutput) OnlyEnterprise() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *bool { return v.OnlyEnterprise }).(pulumi.BoolPtrOutput)
}

func (o GetSitesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSitesResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetSitesResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

func (o GetSitesResultOutput) PlanSubscribeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.PlanSubscribeType }).(pulumi.StringPtrOutput)
}

// The ID of the resource group
func (o GetSitesResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// Site Name
func (o GetSitesResultOutput) SiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.SiteName }).(pulumi.StringPtrOutput)
}

func (o GetSitesResultOutput) SiteSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.SiteSearchType }).(pulumi.StringPtrOutput)
}

// A list of Site Entries. Each element contains the following attributes:
func (o GetSitesResultOutput) Sites() GetSitesSiteArrayOutput {
	return o.ApplyT(func(v GetSitesResult) []GetSitesSite { return v.Sites }).(GetSitesSiteArrayOutput)
}

// The status of the resource
func (o GetSitesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSitesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetSitesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSitesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSitesResultOutput{})
}
