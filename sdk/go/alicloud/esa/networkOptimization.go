// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Network Optimization resource.
//
// For information about ESA Network Optimization and how to use it, see [What is Network Optimization](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateNetworkOptimization).
//
// > **NOTE:** Available since v1.244.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.String("gositecdn.cn"),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewNetworkOptimization(ctx, "default", &esa.NetworkOptimizationArgs{
//				SiteVersion:       pulumi.Int(0),
//				SiteId:            defaultSite.ID(),
//				RuleEnable:        pulumi.String("on"),
//				Websocket:         pulumi.String("off"),
//				Rule:              pulumi.String("(http.host eq \"tf.example.com\")"),
//				Grpc:              pulumi.String("off"),
//				Http2Origin:       pulumi.String("off"),
//				SmartRouting:      pulumi.String("off"),
//				UploadMaxFilesize: pulumi.String("100"),
//				RuleName:          pulumi.String("network_optimization"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Network Optimization can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/networkOptimization:NetworkOptimization example <site_id>:<config_id>
// ```
type NetworkOptimization struct {
	pulumi.CustomResourceState

	// ConfigId of the configuration, which can be obtained by calling the ListNetworkOptimizations.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Indicates whether to enable GRPC, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Grpc pulumi.StringPtrOutput `pulumi:"grpc"`
	// Indicates whether to enable HTTP2 origin, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Http2Origin pulumi.StringPtrOutput `pulumi:"http2Origin"`
	// Rule content.
	Rule pulumi.StringPtrOutput `pulumi:"rule"`
	// Rule switch. Possible values:
	// - on: Enable
	// - off: Disable
	RuleEnable pulumi.StringPtrOutput `pulumi:"ruleEnable"`
	// Rule name, which can be used to find the rule with the specified name.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// Site ID, which can be obtained by calling the ListSites interface.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
	// Version number of the site configuration. For sites with version management enabled, this parameter specifies the version to which the configuration applies, defaulting to version 0.
	SiteVersion pulumi.IntPtrOutput `pulumi:"siteVersion"`
	// Indicates whether to enable smart routing service, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	SmartRouting pulumi.StringPtrOutput `pulumi:"smartRouting"`
	// Maximum upload file size, in MB, value range: 100～500.
	UploadMaxFilesize pulumi.StringPtrOutput `pulumi:"uploadMaxFilesize"`
	// Indicates whether to enable Websocket, enabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Websocket pulumi.StringPtrOutput `pulumi:"websocket"`
}

// NewNetworkOptimization registers a new resource with the given unique name, arguments, and options.
func NewNetworkOptimization(ctx *pulumi.Context,
	name string, args *NetworkOptimizationArgs, opts ...pulumi.ResourceOption) (*NetworkOptimization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkOptimization
	err := ctx.RegisterResource("alicloud:esa/networkOptimization:NetworkOptimization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkOptimization gets an existing NetworkOptimization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkOptimization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkOptimizationState, opts ...pulumi.ResourceOption) (*NetworkOptimization, error) {
	var resource NetworkOptimization
	err := ctx.ReadResource("alicloud:esa/networkOptimization:NetworkOptimization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkOptimization resources.
type networkOptimizationState struct {
	// ConfigId of the configuration, which can be obtained by calling the ListNetworkOptimizations.
	ConfigId *int `pulumi:"configId"`
	// Indicates whether to enable GRPC, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Grpc *string `pulumi:"grpc"`
	// Indicates whether to enable HTTP2 origin, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Http2Origin *string `pulumi:"http2Origin"`
	// Rule content.
	Rule *string `pulumi:"rule"`
	// Rule switch. Possible values:
	// - on: Enable
	// - off: Disable
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name, which can be used to find the rule with the specified name.
	RuleName *string `pulumi:"ruleName"`
	// Site ID, which can be obtained by calling the ListSites interface.
	SiteId *int `pulumi:"siteId"`
	// Version number of the site configuration. For sites with version management enabled, this parameter specifies the version to which the configuration applies, defaulting to version 0.
	SiteVersion *int `pulumi:"siteVersion"`
	// Indicates whether to enable smart routing service, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	SmartRouting *string `pulumi:"smartRouting"`
	// Maximum upload file size, in MB, value range: 100～500.
	UploadMaxFilesize *string `pulumi:"uploadMaxFilesize"`
	// Indicates whether to enable Websocket, enabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Websocket *string `pulumi:"websocket"`
}

type NetworkOptimizationState struct {
	// ConfigId of the configuration, which can be obtained by calling the ListNetworkOptimizations.
	ConfigId pulumi.IntPtrInput
	// Indicates whether to enable GRPC, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Grpc pulumi.StringPtrInput
	// Indicates whether to enable HTTP2 origin, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Http2Origin pulumi.StringPtrInput
	// Rule content.
	Rule pulumi.StringPtrInput
	// Rule switch. Possible values:
	// - on: Enable
	// - off: Disable
	RuleEnable pulumi.StringPtrInput
	// Rule name, which can be used to find the rule with the specified name.
	RuleName pulumi.StringPtrInput
	// Site ID, which can be obtained by calling the ListSites interface.
	SiteId pulumi.IntPtrInput
	// Version number of the site configuration. For sites with version management enabled, this parameter specifies the version to which the configuration applies, defaulting to version 0.
	SiteVersion pulumi.IntPtrInput
	// Indicates whether to enable smart routing service, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	SmartRouting pulumi.StringPtrInput
	// Maximum upload file size, in MB, value range: 100～500.
	UploadMaxFilesize pulumi.StringPtrInput
	// Indicates whether to enable Websocket, enabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Websocket pulumi.StringPtrInput
}

func (NetworkOptimizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkOptimizationState)(nil)).Elem()
}

type networkOptimizationArgs struct {
	// Indicates whether to enable GRPC, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Grpc *string `pulumi:"grpc"`
	// Indicates whether to enable HTTP2 origin, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Http2Origin *string `pulumi:"http2Origin"`
	// Rule content.
	Rule *string `pulumi:"rule"`
	// Rule switch. Possible values:
	// - on: Enable
	// - off: Disable
	RuleEnable *string `pulumi:"ruleEnable"`
	// Rule name, which can be used to find the rule with the specified name.
	RuleName *string `pulumi:"ruleName"`
	// Site ID, which can be obtained by calling the ListSites interface.
	SiteId int `pulumi:"siteId"`
	// Version number of the site configuration. For sites with version management enabled, this parameter specifies the version to which the configuration applies, defaulting to version 0.
	SiteVersion *int `pulumi:"siteVersion"`
	// Indicates whether to enable smart routing service, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	SmartRouting *string `pulumi:"smartRouting"`
	// Maximum upload file size, in MB, value range: 100～500.
	UploadMaxFilesize *string `pulumi:"uploadMaxFilesize"`
	// Indicates whether to enable Websocket, enabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Websocket *string `pulumi:"websocket"`
}

// The set of arguments for constructing a NetworkOptimization resource.
type NetworkOptimizationArgs struct {
	// Indicates whether to enable GRPC, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Grpc pulumi.StringPtrInput
	// Indicates whether to enable HTTP2 origin, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Http2Origin pulumi.StringPtrInput
	// Rule content.
	Rule pulumi.StringPtrInput
	// Rule switch. Possible values:
	// - on: Enable
	// - off: Disable
	RuleEnable pulumi.StringPtrInput
	// Rule name, which can be used to find the rule with the specified name.
	RuleName pulumi.StringPtrInput
	// Site ID, which can be obtained by calling the ListSites interface.
	SiteId pulumi.IntInput
	// Version number of the site configuration. For sites with version management enabled, this parameter specifies the version to which the configuration applies, defaulting to version 0.
	SiteVersion pulumi.IntPtrInput
	// Indicates whether to enable smart routing service, disabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	SmartRouting pulumi.StringPtrInput
	// Maximum upload file size, in MB, value range: 100～500.
	UploadMaxFilesize pulumi.StringPtrInput
	// Indicates whether to enable Websocket, enabled by default. Possible values:
	// - on: Enable
	// - off: Disable
	Websocket pulumi.StringPtrInput
}

func (NetworkOptimizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkOptimizationArgs)(nil)).Elem()
}

type NetworkOptimizationInput interface {
	pulumi.Input

	ToNetworkOptimizationOutput() NetworkOptimizationOutput
	ToNetworkOptimizationOutputWithContext(ctx context.Context) NetworkOptimizationOutput
}

func (*NetworkOptimization) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkOptimization)(nil)).Elem()
}

func (i *NetworkOptimization) ToNetworkOptimizationOutput() NetworkOptimizationOutput {
	return i.ToNetworkOptimizationOutputWithContext(context.Background())
}

func (i *NetworkOptimization) ToNetworkOptimizationOutputWithContext(ctx context.Context) NetworkOptimizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOptimizationOutput)
}

// NetworkOptimizationArrayInput is an input type that accepts NetworkOptimizationArray and NetworkOptimizationArrayOutput values.
// You can construct a concrete instance of `NetworkOptimizationArrayInput` via:
//
//	NetworkOptimizationArray{ NetworkOptimizationArgs{...} }
type NetworkOptimizationArrayInput interface {
	pulumi.Input

	ToNetworkOptimizationArrayOutput() NetworkOptimizationArrayOutput
	ToNetworkOptimizationArrayOutputWithContext(context.Context) NetworkOptimizationArrayOutput
}

type NetworkOptimizationArray []NetworkOptimizationInput

func (NetworkOptimizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkOptimization)(nil)).Elem()
}

func (i NetworkOptimizationArray) ToNetworkOptimizationArrayOutput() NetworkOptimizationArrayOutput {
	return i.ToNetworkOptimizationArrayOutputWithContext(context.Background())
}

func (i NetworkOptimizationArray) ToNetworkOptimizationArrayOutputWithContext(ctx context.Context) NetworkOptimizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOptimizationArrayOutput)
}

// NetworkOptimizationMapInput is an input type that accepts NetworkOptimizationMap and NetworkOptimizationMapOutput values.
// You can construct a concrete instance of `NetworkOptimizationMapInput` via:
//
//	NetworkOptimizationMap{ "key": NetworkOptimizationArgs{...} }
type NetworkOptimizationMapInput interface {
	pulumi.Input

	ToNetworkOptimizationMapOutput() NetworkOptimizationMapOutput
	ToNetworkOptimizationMapOutputWithContext(context.Context) NetworkOptimizationMapOutput
}

type NetworkOptimizationMap map[string]NetworkOptimizationInput

func (NetworkOptimizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkOptimization)(nil)).Elem()
}

func (i NetworkOptimizationMap) ToNetworkOptimizationMapOutput() NetworkOptimizationMapOutput {
	return i.ToNetworkOptimizationMapOutputWithContext(context.Background())
}

func (i NetworkOptimizationMap) ToNetworkOptimizationMapOutputWithContext(ctx context.Context) NetworkOptimizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOptimizationMapOutput)
}

type NetworkOptimizationOutput struct{ *pulumi.OutputState }

func (NetworkOptimizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkOptimization)(nil)).Elem()
}

func (o NetworkOptimizationOutput) ToNetworkOptimizationOutput() NetworkOptimizationOutput {
	return o
}

func (o NetworkOptimizationOutput) ToNetworkOptimizationOutputWithContext(ctx context.Context) NetworkOptimizationOutput {
	return o
}

// ConfigId of the configuration, which can be obtained by calling the ListNetworkOptimizations.
func (o NetworkOptimizationOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Indicates whether to enable GRPC, disabled by default. Possible values:
// - on: Enable
// - off: Disable
func (o NetworkOptimizationOutput) Grpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.Grpc }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable HTTP2 origin, disabled by default. Possible values:
// - on: Enable
// - off: Disable
func (o NetworkOptimizationOutput) Http2Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.Http2Origin }).(pulumi.StringPtrOutput)
}

// Rule content.
func (o NetworkOptimizationOutput) Rule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.Rule }).(pulumi.StringPtrOutput)
}

// Rule switch. Possible values:
// - on: Enable
// - off: Disable
func (o NetworkOptimizationOutput) RuleEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.RuleEnable }).(pulumi.StringPtrOutput)
}

// Rule name, which can be used to find the rule with the specified name.
func (o NetworkOptimizationOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Site ID, which can be obtained by calling the ListSites interface.
func (o NetworkOptimizationOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

// Version number of the site configuration. For sites with version management enabled, this parameter specifies the version to which the configuration applies, defaulting to version 0.
func (o NetworkOptimizationOutput) SiteVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.IntPtrOutput { return v.SiteVersion }).(pulumi.IntPtrOutput)
}

// Indicates whether to enable smart routing service, disabled by default. Possible values:
// - on: Enable
// - off: Disable
func (o NetworkOptimizationOutput) SmartRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.SmartRouting }).(pulumi.StringPtrOutput)
}

// Maximum upload file size, in MB, value range: 100～500.
func (o NetworkOptimizationOutput) UploadMaxFilesize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.UploadMaxFilesize }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable Websocket, enabled by default. Possible values:
// - on: Enable
// - off: Disable
func (o NetworkOptimizationOutput) Websocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkOptimization) pulumi.StringPtrOutput { return v.Websocket }).(pulumi.StringPtrOutput)
}

type NetworkOptimizationArrayOutput struct{ *pulumi.OutputState }

func (NetworkOptimizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkOptimization)(nil)).Elem()
}

func (o NetworkOptimizationArrayOutput) ToNetworkOptimizationArrayOutput() NetworkOptimizationArrayOutput {
	return o
}

func (o NetworkOptimizationArrayOutput) ToNetworkOptimizationArrayOutputWithContext(ctx context.Context) NetworkOptimizationArrayOutput {
	return o
}

func (o NetworkOptimizationArrayOutput) Index(i pulumi.IntInput) NetworkOptimizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkOptimization {
		return vs[0].([]*NetworkOptimization)[vs[1].(int)]
	}).(NetworkOptimizationOutput)
}

type NetworkOptimizationMapOutput struct{ *pulumi.OutputState }

func (NetworkOptimizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkOptimization)(nil)).Elem()
}

func (o NetworkOptimizationMapOutput) ToNetworkOptimizationMapOutput() NetworkOptimizationMapOutput {
	return o
}

func (o NetworkOptimizationMapOutput) ToNetworkOptimizationMapOutputWithContext(ctx context.Context) NetworkOptimizationMapOutput {
	return o
}

func (o NetworkOptimizationMapOutput) MapIndex(k pulumi.StringInput) NetworkOptimizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkOptimization {
		return vs[0].(map[string]*NetworkOptimization)[vs[1].(string)]
	}).(NetworkOptimizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkOptimizationInput)(nil)).Elem(), &NetworkOptimization{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkOptimizationArrayInput)(nil)).Elem(), NetworkOptimizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkOptimizationMapInput)(nil)).Elem(), NetworkOptimizationMap{})
	pulumi.RegisterOutputType(NetworkOptimizationOutput{})
	pulumi.RegisterOutputType(NetworkOptimizationArrayOutput{})
	pulumi.RegisterOutputType(NetworkOptimizationMapOutput{})
}
