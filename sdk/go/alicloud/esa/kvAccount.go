// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// ESA Kv Account can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/kvAccount:KvAccount example
// ```
type KvAccount struct {
	pulumi.CustomResourceState

	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewKvAccount registers a new resource with the given unique name, arguments, and options.
func NewKvAccount(ctx *pulumi.Context,
	name string, args *KvAccountArgs, opts ...pulumi.ResourceOption) (*KvAccount, error) {
	if args == nil {
		args = &KvAccountArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KvAccount
	err := ctx.RegisterResource("alicloud:esa/kvAccount:KvAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKvAccount gets an existing KvAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKvAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KvAccountState, opts ...pulumi.ResourceOption) (*KvAccount, error) {
	var resource KvAccount
	err := ctx.ReadResource("alicloud:esa/kvAccount:KvAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KvAccount resources.
type kvAccountState struct {
	// The status of the resource.
	Status *string `pulumi:"status"`
}

type KvAccountState struct {
	// The status of the resource.
	Status pulumi.StringPtrInput
}

func (KvAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*kvAccountState)(nil)).Elem()
}

type kvAccountArgs struct {
}

// The set of arguments for constructing a KvAccount resource.
type KvAccountArgs struct {
}

func (KvAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kvAccountArgs)(nil)).Elem()
}

type KvAccountInput interface {
	pulumi.Input

	ToKvAccountOutput() KvAccountOutput
	ToKvAccountOutputWithContext(ctx context.Context) KvAccountOutput
}

func (*KvAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**KvAccount)(nil)).Elem()
}

func (i *KvAccount) ToKvAccountOutput() KvAccountOutput {
	return i.ToKvAccountOutputWithContext(context.Background())
}

func (i *KvAccount) ToKvAccountOutputWithContext(ctx context.Context) KvAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvAccountOutput)
}

// KvAccountArrayInput is an input type that accepts KvAccountArray and KvAccountArrayOutput values.
// You can construct a concrete instance of `KvAccountArrayInput` via:
//
//	KvAccountArray{ KvAccountArgs{...} }
type KvAccountArrayInput interface {
	pulumi.Input

	ToKvAccountArrayOutput() KvAccountArrayOutput
	ToKvAccountArrayOutputWithContext(context.Context) KvAccountArrayOutput
}

type KvAccountArray []KvAccountInput

func (KvAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KvAccount)(nil)).Elem()
}

func (i KvAccountArray) ToKvAccountArrayOutput() KvAccountArrayOutput {
	return i.ToKvAccountArrayOutputWithContext(context.Background())
}

func (i KvAccountArray) ToKvAccountArrayOutputWithContext(ctx context.Context) KvAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvAccountArrayOutput)
}

// KvAccountMapInput is an input type that accepts KvAccountMap and KvAccountMapOutput values.
// You can construct a concrete instance of `KvAccountMapInput` via:
//
//	KvAccountMap{ "key": KvAccountArgs{...} }
type KvAccountMapInput interface {
	pulumi.Input

	ToKvAccountMapOutput() KvAccountMapOutput
	ToKvAccountMapOutputWithContext(context.Context) KvAccountMapOutput
}

type KvAccountMap map[string]KvAccountInput

func (KvAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KvAccount)(nil)).Elem()
}

func (i KvAccountMap) ToKvAccountMapOutput() KvAccountMapOutput {
	return i.ToKvAccountMapOutputWithContext(context.Background())
}

func (i KvAccountMap) ToKvAccountMapOutputWithContext(ctx context.Context) KvAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvAccountMapOutput)
}

type KvAccountOutput struct{ *pulumi.OutputState }

func (KvAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KvAccount)(nil)).Elem()
}

func (o KvAccountOutput) ToKvAccountOutput() KvAccountOutput {
	return o
}

func (o KvAccountOutput) ToKvAccountOutputWithContext(ctx context.Context) KvAccountOutput {
	return o
}

// The status of the resource.
func (o KvAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KvAccount) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type KvAccountArrayOutput struct{ *pulumi.OutputState }

func (KvAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KvAccount)(nil)).Elem()
}

func (o KvAccountArrayOutput) ToKvAccountArrayOutput() KvAccountArrayOutput {
	return o
}

func (o KvAccountArrayOutput) ToKvAccountArrayOutputWithContext(ctx context.Context) KvAccountArrayOutput {
	return o
}

func (o KvAccountArrayOutput) Index(i pulumi.IntInput) KvAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KvAccount {
		return vs[0].([]*KvAccount)[vs[1].(int)]
	}).(KvAccountOutput)
}

type KvAccountMapOutput struct{ *pulumi.OutputState }

func (KvAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KvAccount)(nil)).Elem()
}

func (o KvAccountMapOutput) ToKvAccountMapOutput() KvAccountMapOutput {
	return o
}

func (o KvAccountMapOutput) ToKvAccountMapOutputWithContext(ctx context.Context) KvAccountMapOutput {
	return o
}

func (o KvAccountMapOutput) MapIndex(k pulumi.StringInput) KvAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KvAccount {
		return vs[0].(map[string]*KvAccount)[vs[1].(string)]
	}).(KvAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KvAccountInput)(nil)).Elem(), &KvAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*KvAccountArrayInput)(nil)).Elem(), KvAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KvAccountMapInput)(nil)).Elem(), KvAccountMap{})
	pulumi.RegisterOutputType(KvAccountOutput{})
	pulumi.RegisterOutputType(KvAccountArrayOutput{})
	pulumi.RegisterOutputType(KvAccountMapOutput{})
}
