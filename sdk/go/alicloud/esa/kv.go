// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Kv resource.
//
// For information about ESA Kv and how to use it, see [What is Kv](https://next.api.alibabacloud.com/document/ESA/2024-09-10/PutKv).
//
// > **NOTE:** Available since v1.251.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := esa.NewKvNamespace(ctx, "default", &esa.KvNamespaceArgs{
//				Description: pulumi.String("this is a example namespace."),
//				KvNamespace: pulumi.String("namespace1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewKv(ctx, "default", &esa.KvArgs{
//				Isbase:        pulumi.Bool(false),
//				ExpirationTtl: pulumi.Int(360),
//				Value:         pulumi.String("example_value"),
//				Expiration:    pulumi.Int(1690),
//				Namespace:     _default.ID(),
//				Key:           pulumi.String("example_key"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Kv can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/kv:Kv example <namespace>:<key>
// ```
type Kv struct {
	pulumi.CustomResourceState

	// The content of the key, which can be up to 2 MB (2 × 1000 × 1000). If the content is larger than 2 MB, call [PutKvWithHighCapacity](https://www.alibabacloud.com/help/en/doc-detail/2850486.html).
	Expiration pulumi.IntPtrOutput `pulumi:"expiration"`
	// The time when the key-value pair expires, which cannot be earlier than the current time. The value is a timestamp in seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	ExpirationTtl pulumi.IntPtrOutput `pulumi:"expirationTtl"`
	// The relative expiration time. Unit: seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	Isbase pulumi.BoolPtrOutput `pulumi:"isbase"`
	// kv
	Key pulumi.StringOutput `pulumi:"key"`
	// The name specified when calling [CreatevNamespace](https://help.aliyun.com/document_detail/2850317.html).
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// The key name. The name can be up to 512 characters in length and cannot contain spaces or backslashes (\\).
	Url pulumi.StringPtrOutput `pulumi:"url"`
	// The content of the key. If the content has more than 256 characters in length, the system displays the first 100 and the last 100 characters, and omits the middle part.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewKv registers a new resource with the given unique name, arguments, and options.
func NewKv(ctx *pulumi.Context,
	name string, args *KvArgs, opts ...pulumi.ResourceOption) (*Kv, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Kv
	err := ctx.RegisterResource("alicloud:esa/kv:Kv", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKv gets an existing Kv resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKv(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KvState, opts ...pulumi.ResourceOption) (*Kv, error) {
	var resource Kv
	err := ctx.ReadResource("alicloud:esa/kv:Kv", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Kv resources.
type kvState struct {
	// The content of the key, which can be up to 2 MB (2 × 1000 × 1000). If the content is larger than 2 MB, call [PutKvWithHighCapacity](https://www.alibabacloud.com/help/en/doc-detail/2850486.html).
	Expiration *int `pulumi:"expiration"`
	// The time when the key-value pair expires, which cannot be earlier than the current time. The value is a timestamp in seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	ExpirationTtl *int `pulumi:"expirationTtl"`
	// The relative expiration time. Unit: seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	Isbase *bool `pulumi:"isbase"`
	// kv
	Key *string `pulumi:"key"`
	// The name specified when calling [CreatevNamespace](https://help.aliyun.com/document_detail/2850317.html).
	Namespace *string `pulumi:"namespace"`
	// The key name. The name can be up to 512 characters in length and cannot contain spaces or backslashes (\\).
	Url *string `pulumi:"url"`
	// The content of the key. If the content has more than 256 characters in length, the system displays the first 100 and the last 100 characters, and omits the middle part.
	Value *string `pulumi:"value"`
}

type KvState struct {
	// The content of the key, which can be up to 2 MB (2 × 1000 × 1000). If the content is larger than 2 MB, call [PutKvWithHighCapacity](https://www.alibabacloud.com/help/en/doc-detail/2850486.html).
	Expiration pulumi.IntPtrInput
	// The time when the key-value pair expires, which cannot be earlier than the current time. The value is a timestamp in seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	ExpirationTtl pulumi.IntPtrInput
	// The relative expiration time. Unit: seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	Isbase pulumi.BoolPtrInput
	// kv
	Key pulumi.StringPtrInput
	// The name specified when calling [CreatevNamespace](https://help.aliyun.com/document_detail/2850317.html).
	Namespace pulumi.StringPtrInput
	// The key name. The name can be up to 512 characters in length and cannot contain spaces or backslashes (\\).
	Url pulumi.StringPtrInput
	// The content of the key. If the content has more than 256 characters in length, the system displays the first 100 and the last 100 characters, and omits the middle part.
	Value pulumi.StringPtrInput
}

func (KvState) ElementType() reflect.Type {
	return reflect.TypeOf((*kvState)(nil)).Elem()
}

type kvArgs struct {
	// The content of the key, which can be up to 2 MB (2 × 1000 × 1000). If the content is larger than 2 MB, call [PutKvWithHighCapacity](https://www.alibabacloud.com/help/en/doc-detail/2850486.html).
	Expiration *int `pulumi:"expiration"`
	// The time when the key-value pair expires, which cannot be earlier than the current time. The value is a timestamp in seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	ExpirationTtl *int `pulumi:"expirationTtl"`
	// The relative expiration time. Unit: seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	Isbase *bool `pulumi:"isbase"`
	// kv
	Key string `pulumi:"key"`
	// The name specified when calling [CreatevNamespace](https://help.aliyun.com/document_detail/2850317.html).
	Namespace string `pulumi:"namespace"`
	// The key name. The name can be up to 512 characters in length and cannot contain spaces or backslashes (\\).
	Url *string `pulumi:"url"`
	// The content of the key. If the content has more than 256 characters in length, the system displays the first 100 and the last 100 characters, and omits the middle part.
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a Kv resource.
type KvArgs struct {
	// The content of the key, which can be up to 2 MB (2 × 1000 × 1000). If the content is larger than 2 MB, call [PutKvWithHighCapacity](https://www.alibabacloud.com/help/en/doc-detail/2850486.html).
	Expiration pulumi.IntPtrInput
	// The time when the key-value pair expires, which cannot be earlier than the current time. The value is a timestamp in seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	ExpirationTtl pulumi.IntPtrInput
	// The relative expiration time. Unit: seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
	Isbase pulumi.BoolPtrInput
	// kv
	Key pulumi.StringInput
	// The name specified when calling [CreatevNamespace](https://help.aliyun.com/document_detail/2850317.html).
	Namespace pulumi.StringInput
	// The key name. The name can be up to 512 characters in length and cannot contain spaces or backslashes (\\).
	Url pulumi.StringPtrInput
	// The content of the key. If the content has more than 256 characters in length, the system displays the first 100 and the last 100 characters, and omits the middle part.
	Value pulumi.StringPtrInput
}

func (KvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kvArgs)(nil)).Elem()
}

type KvInput interface {
	pulumi.Input

	ToKvOutput() KvOutput
	ToKvOutputWithContext(ctx context.Context) KvOutput
}

func (*Kv) ElementType() reflect.Type {
	return reflect.TypeOf((**Kv)(nil)).Elem()
}

func (i *Kv) ToKvOutput() KvOutput {
	return i.ToKvOutputWithContext(context.Background())
}

func (i *Kv) ToKvOutputWithContext(ctx context.Context) KvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvOutput)
}

// KvArrayInput is an input type that accepts KvArray and KvArrayOutput values.
// You can construct a concrete instance of `KvArrayInput` via:
//
//	KvArray{ KvArgs{...} }
type KvArrayInput interface {
	pulumi.Input

	ToKvArrayOutput() KvArrayOutput
	ToKvArrayOutputWithContext(context.Context) KvArrayOutput
}

type KvArray []KvInput

func (KvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kv)(nil)).Elem()
}

func (i KvArray) ToKvArrayOutput() KvArrayOutput {
	return i.ToKvArrayOutputWithContext(context.Background())
}

func (i KvArray) ToKvArrayOutputWithContext(ctx context.Context) KvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvArrayOutput)
}

// KvMapInput is an input type that accepts KvMap and KvMapOutput values.
// You can construct a concrete instance of `KvMapInput` via:
//
//	KvMap{ "key": KvArgs{...} }
type KvMapInput interface {
	pulumi.Input

	ToKvMapOutput() KvMapOutput
	ToKvMapOutputWithContext(context.Context) KvMapOutput
}

type KvMap map[string]KvInput

func (KvMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kv)(nil)).Elem()
}

func (i KvMap) ToKvMapOutput() KvMapOutput {
	return i.ToKvMapOutputWithContext(context.Background())
}

func (i KvMap) ToKvMapOutputWithContext(ctx context.Context) KvMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvMapOutput)
}

type KvOutput struct{ *pulumi.OutputState }

func (KvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Kv)(nil)).Elem()
}

func (o KvOutput) ToKvOutput() KvOutput {
	return o
}

func (o KvOutput) ToKvOutputWithContext(ctx context.Context) KvOutput {
	return o
}

// The content of the key, which can be up to 2 MB (2 × 1000 × 1000). If the content is larger than 2 MB, call [PutKvWithHighCapacity](https://www.alibabacloud.com/help/en/doc-detail/2850486.html).
func (o KvOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Kv) pulumi.IntPtrOutput { return v.Expiration }).(pulumi.IntPtrOutput)
}

// The time when the key-value pair expires, which cannot be earlier than the current time. The value is a timestamp in seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
func (o KvOutput) ExpirationTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Kv) pulumi.IntPtrOutput { return v.ExpirationTtl }).(pulumi.IntPtrOutput)
}

// The relative expiration time. Unit: seconds. If you specify both Expiration and ExpirationTtl, only ExpirationTtl takes effect.
func (o KvOutput) Isbase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Kv) pulumi.BoolPtrOutput { return v.Isbase }).(pulumi.BoolPtrOutput)
}

// kv
func (o KvOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *Kv) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The name specified when calling [CreatevNamespace](https://help.aliyun.com/document_detail/2850317.html).
func (o KvOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *Kv) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// The key name. The name can be up to 512 characters in length and cannot contain spaces or backslashes (\\).
func (o KvOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Kv) pulumi.StringPtrOutput { return v.Url }).(pulumi.StringPtrOutput)
}

// The content of the key. If the content has more than 256 characters in length, the system displays the first 100 and the last 100 characters, and omits the middle part.
func (o KvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *Kv) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type KvArrayOutput struct{ *pulumi.OutputState }

func (KvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kv)(nil)).Elem()
}

func (o KvArrayOutput) ToKvArrayOutput() KvArrayOutput {
	return o
}

func (o KvArrayOutput) ToKvArrayOutputWithContext(ctx context.Context) KvArrayOutput {
	return o
}

func (o KvArrayOutput) Index(i pulumi.IntInput) KvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Kv {
		return vs[0].([]*Kv)[vs[1].(int)]
	}).(KvOutput)
}

type KvMapOutput struct{ *pulumi.OutputState }

func (KvMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kv)(nil)).Elem()
}

func (o KvMapOutput) ToKvMapOutput() KvMapOutput {
	return o
}

func (o KvMapOutput) ToKvMapOutputWithContext(ctx context.Context) KvMapOutput {
	return o
}

func (o KvMapOutput) MapIndex(k pulumi.StringInput) KvOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Kv {
		return vs[0].(map[string]*Kv)[vs[1].(string)]
	}).(KvOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KvInput)(nil)).Elem(), &Kv{})
	pulumi.RegisterInputType(reflect.TypeOf((*KvArrayInput)(nil)).Elem(), KvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KvMapInput)(nil)).Elem(), KvMap{})
	pulumi.RegisterOutputType(KvOutput{})
	pulumi.RegisterOutputType(KvArrayOutput{})
	pulumi.RegisterOutputType(KvMapOutput{})
}
