// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package esa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESA Origin Pool resource.
//
// For information about ESA Origin Pool and how to use it, see [What is Origin Pool](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateOriginPool).
//
// > **NOTE:** Available since v1.244.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/esa"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := esa.GetSites(ctx, &esa.GetSitesArgs{
//				PlanSubscribeType: pulumi.StringRef("enterpriseplan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			defaultSite, err := esa.NewSite(ctx, "default", &esa.SiteArgs{
//				SiteName:   pulumi.Sprintf("gositecdn-%v.cn", defaultInteger.Result),
//				InstanceId: pulumi.String(_default.Sites[0].InstanceId),
//				Coverage:   pulumi.String("overseas"),
//				AccessType: pulumi.String("NS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = esa.NewOriginPool(ctx, "default", &esa.OriginPoolArgs{
//				Origins: esa.OriginPoolOriginArray{
//					&esa.OriginPoolOriginArgs{
//						Type:    pulumi.String("OSS"),
//						Address: pulumi.String("example.oss-cn-beijing.aliyuncs.com"),
//						Header:  pulumi.String("{\"Host\":[\"example.oss-cn-beijing.aliyuncs.com\"]}"),
//						Enabled: pulumi.Bool(true),
//						AuthConf: &esa.OriginPoolOriginAuthConfArgs{
//							SecretKey: pulumi.String("<SecretKeyId>"),
//							AuthType:  pulumi.String("private_cross_account"),
//							AccessKey: pulumi.String("<AccessKeyId>"),
//						},
//						Weight: pulumi.Int(50),
//						Name:   pulumi.String("origin1"),
//					},
//					&esa.OriginPoolOriginArgs{
//						Address: pulumi.String("example.s3.com"),
//						Header:  pulumi.String("{\"Host\": [\"example1.com\"]}"),
//						Enabled: pulumi.Bool(true),
//						AuthConf: &esa.OriginPoolOriginAuthConfArgs{
//							Version:   pulumi.String("v2"),
//							Region:    pulumi.String("us-east-1"),
//							AuthType:  pulumi.String("private"),
//							AccessKey: pulumi.String("<AccessKeyId>"),
//							SecretKey: pulumi.String("<SecretKeyId>"),
//						},
//						Weight: pulumi.Int(50),
//						Name:   pulumi.String("origin2"),
//						Type:   pulumi.String("S3"),
//					},
//					&esa.OriginPoolOriginArgs{
//						Type:    pulumi.String("S3"),
//						Address: pulumi.String("example1111.s3.com"),
//						Header:  pulumi.String("{\"Host\":[\"example1111.com\"]}"),
//						Enabled: pulumi.Bool(true),
//						AuthConf: &esa.OriginPoolOriginAuthConfArgs{
//							SecretKey: pulumi.String("<SecretKeyId>"),
//							Version:   pulumi.String("v2"),
//							Region:    pulumi.String("us-east-1"),
//							AuthType:  pulumi.String("private"),
//							AccessKey: pulumi.String("<AccessKeyId>"),
//						},
//						Weight: pulumi.Int(30),
//						Name:   pulumi.String("origin3"),
//					},
//				},
//				SiteId:         defaultSite.ID(),
//				OriginPoolName: pulumi.String("exampleoriginpool"),
//				Enabled:        pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ESA Origin Pool can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:esa/originPool:OriginPool example <site_id>:<origin_pool_id>
// ```
type OriginPool struct {
	pulumi.CustomResourceState

	// Whether the source address pool is enabled:
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// OriginPool Id
	OriginPoolId pulumi.IntOutput `pulumi:"originPoolId"`
	// The source address pool name.
	OriginPoolName pulumi.StringOutput `pulumi:"originPoolName"`
	// The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
	Origins OriginPoolOriginArrayOutput `pulumi:"origins"`
	// The site ID.
	SiteId pulumi.IntOutput `pulumi:"siteId"`
}

// NewOriginPool registers a new resource with the given unique name, arguments, and options.
func NewOriginPool(ctx *pulumi.Context,
	name string, args *OriginPoolArgs, opts ...pulumi.ResourceOption) (*OriginPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OriginPoolName == nil {
		return nil, errors.New("invalid value for required argument 'OriginPoolName'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OriginPool
	err := ctx.RegisterResource("alicloud:esa/originPool:OriginPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginPool gets an existing OriginPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginPoolState, opts ...pulumi.ResourceOption) (*OriginPool, error) {
	var resource OriginPool
	err := ctx.ReadResource("alicloud:esa/originPool:OriginPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginPool resources.
type originPoolState struct {
	// Whether the source address pool is enabled:
	Enabled *bool `pulumi:"enabled"`
	// OriginPool Id
	OriginPoolId *int `pulumi:"originPoolId"`
	// The source address pool name.
	OriginPoolName *string `pulumi:"originPoolName"`
	// The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
	Origins []OriginPoolOrigin `pulumi:"origins"`
	// The site ID.
	SiteId *int `pulumi:"siteId"`
}

type OriginPoolState struct {
	// Whether the source address pool is enabled:
	Enabled pulumi.BoolPtrInput
	// OriginPool Id
	OriginPoolId pulumi.IntPtrInput
	// The source address pool name.
	OriginPoolName pulumi.StringPtrInput
	// The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
	Origins OriginPoolOriginArrayInput
	// The site ID.
	SiteId pulumi.IntPtrInput
}

func (OriginPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*originPoolState)(nil)).Elem()
}

type originPoolArgs struct {
	// Whether the source address pool is enabled:
	Enabled *bool `pulumi:"enabled"`
	// The source address pool name.
	OriginPoolName string `pulumi:"originPoolName"`
	// The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
	Origins []OriginPoolOrigin `pulumi:"origins"`
	// The site ID.
	SiteId int `pulumi:"siteId"`
}

// The set of arguments for constructing a OriginPool resource.
type OriginPoolArgs struct {
	// Whether the source address pool is enabled:
	Enabled pulumi.BoolPtrInput
	// The source address pool name.
	OriginPoolName pulumi.StringInput
	// The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
	Origins OriginPoolOriginArrayInput
	// The site ID.
	SiteId pulumi.IntInput
}

func (OriginPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originPoolArgs)(nil)).Elem()
}

type OriginPoolInput interface {
	pulumi.Input

	ToOriginPoolOutput() OriginPoolOutput
	ToOriginPoolOutputWithContext(ctx context.Context) OriginPoolOutput
}

func (*OriginPool) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginPool)(nil)).Elem()
}

func (i *OriginPool) ToOriginPoolOutput() OriginPoolOutput {
	return i.ToOriginPoolOutputWithContext(context.Background())
}

func (i *OriginPool) ToOriginPoolOutputWithContext(ctx context.Context) OriginPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginPoolOutput)
}

// OriginPoolArrayInput is an input type that accepts OriginPoolArray and OriginPoolArrayOutput values.
// You can construct a concrete instance of `OriginPoolArrayInput` via:
//
//	OriginPoolArray{ OriginPoolArgs{...} }
type OriginPoolArrayInput interface {
	pulumi.Input

	ToOriginPoolArrayOutput() OriginPoolArrayOutput
	ToOriginPoolArrayOutputWithContext(context.Context) OriginPoolArrayOutput
}

type OriginPoolArray []OriginPoolInput

func (OriginPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginPool)(nil)).Elem()
}

func (i OriginPoolArray) ToOriginPoolArrayOutput() OriginPoolArrayOutput {
	return i.ToOriginPoolArrayOutputWithContext(context.Background())
}

func (i OriginPoolArray) ToOriginPoolArrayOutputWithContext(ctx context.Context) OriginPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginPoolArrayOutput)
}

// OriginPoolMapInput is an input type that accepts OriginPoolMap and OriginPoolMapOutput values.
// You can construct a concrete instance of `OriginPoolMapInput` via:
//
//	OriginPoolMap{ "key": OriginPoolArgs{...} }
type OriginPoolMapInput interface {
	pulumi.Input

	ToOriginPoolMapOutput() OriginPoolMapOutput
	ToOriginPoolMapOutputWithContext(context.Context) OriginPoolMapOutput
}

type OriginPoolMap map[string]OriginPoolInput

func (OriginPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginPool)(nil)).Elem()
}

func (i OriginPoolMap) ToOriginPoolMapOutput() OriginPoolMapOutput {
	return i.ToOriginPoolMapOutputWithContext(context.Background())
}

func (i OriginPoolMap) ToOriginPoolMapOutputWithContext(ctx context.Context) OriginPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginPoolMapOutput)
}

type OriginPoolOutput struct{ *pulumi.OutputState }

func (OriginPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginPool)(nil)).Elem()
}

func (o OriginPoolOutput) ToOriginPoolOutput() OriginPoolOutput {
	return o
}

func (o OriginPoolOutput) ToOriginPoolOutputWithContext(ctx context.Context) OriginPoolOutput {
	return o
}

// Whether the source address pool is enabled:
func (o OriginPoolOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OriginPool) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// OriginPool Id
func (o OriginPoolOutput) OriginPoolId() pulumi.IntOutput {
	return o.ApplyT(func(v *OriginPool) pulumi.IntOutput { return v.OriginPoolId }).(pulumi.IntOutput)
}

// The source address pool name.
func (o OriginPoolOutput) OriginPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginPool) pulumi.StringOutput { return v.OriginPoolName }).(pulumi.StringOutput)
}

// The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
func (o OriginPoolOutput) Origins() OriginPoolOriginArrayOutput {
	return o.ApplyT(func(v *OriginPool) OriginPoolOriginArrayOutput { return v.Origins }).(OriginPoolOriginArrayOutput)
}

// The site ID.
func (o OriginPoolOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v *OriginPool) pulumi.IntOutput { return v.SiteId }).(pulumi.IntOutput)
}

type OriginPoolArrayOutput struct{ *pulumi.OutputState }

func (OriginPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginPool)(nil)).Elem()
}

func (o OriginPoolArrayOutput) ToOriginPoolArrayOutput() OriginPoolArrayOutput {
	return o
}

func (o OriginPoolArrayOutput) ToOriginPoolArrayOutputWithContext(ctx context.Context) OriginPoolArrayOutput {
	return o
}

func (o OriginPoolArrayOutput) Index(i pulumi.IntInput) OriginPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OriginPool {
		return vs[0].([]*OriginPool)[vs[1].(int)]
	}).(OriginPoolOutput)
}

type OriginPoolMapOutput struct{ *pulumi.OutputState }

func (OriginPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginPool)(nil)).Elem()
}

func (o OriginPoolMapOutput) ToOriginPoolMapOutput() OriginPoolMapOutput {
	return o
}

func (o OriginPoolMapOutput) ToOriginPoolMapOutputWithContext(ctx context.Context) OriginPoolMapOutput {
	return o
}

func (o OriginPoolMapOutput) MapIndex(k pulumi.StringInput) OriginPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OriginPool {
		return vs[0].(map[string]*OriginPool)[vs[1].(string)]
	}).(OriginPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginPoolInput)(nil)).Elem(), &OriginPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginPoolArrayInput)(nil)).Elem(), OriginPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginPoolMapInput)(nil)).Elem(), OriginPoolMap{})
	pulumi.RegisterOutputType(OriginPoolOutput{})
	pulumi.RegisterOutputType(OriginPoolArrayOutput{})
	pulumi.RegisterOutputType(OriginPoolMapOutput{})
}
