// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CEN Transit Router Ecr Attachment resource.
//
// For information about CEN Transit Router Ecr Attachment and how to use it, see [What is Transit Router Ecr Attachment](https://www.alibabacloud.com/help/en/cen/developer-reference/api-cbn-2017-09-12-createtransitrouterecrattachment).
//
// > **NOTE:** Available since v1.235.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/expressconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			asn := "4200000667"
//			if param := cfg.Get("asn"); param != "" {
//				asn = param
//			}
//			defaultO8Hcfx, err := expressconnect.NewRouterExpressConnectRouter(ctx, "defaultO8Hcfx", &expressconnect.RouterExpressConnectRouterArgs{
//				AlibabaSideAsn: pulumi.String(asn),
//				EcrName:        pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultQKBiay, err := cen.NewInstance(ctx, "defaultQKBiay", &cen.InstanceArgs{
//				CenInstanceName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultQa94Y1, err := cen.NewTransitRouter(ctx, "defaultQa94Y1", &cen.TransitRouterArgs{
//				CenId:             defaultQKBiay.ID(),
//				TransitRouterName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultedPu6c, err := expressconnect.NewRouterTrAssociation(ctx, "defaultedPu6c", &expressconnect.RouterTrAssociationArgs{
//				AssociationRegionId:  pulumi.String("cn-hangzhou"),
//				EcrId:                defaultO8Hcfx.ID(),
//				CenId:                defaultQKBiay.ID(),
//				TransitRouterId:      defaultQa94Y1.TransitRouterId,
//				TransitRouterOwnerId: pulumi.String(current.Id),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewTransitRouterEcrAttachment(ctx, "default", &cen.TransitRouterEcrAttachmentArgs{
//				EcrId:                              defaultO8Hcfx.ID(),
//				CenId:                              defaultedPu6c.CenId,
//				TransitRouterEcrAttachmentName:     pulumi.String(name),
//				TransitRouterAttachmentDescription: pulumi.String(name),
//				TransitRouterId:                    defaultQa94Y1.TransitRouterId,
//				EcrOwnerId:                         pulumi.String(current.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CEN Transit Router Ecr Attachment can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cen/transitRouterEcrAttachment:TransitRouterEcrAttachment example <id>
// ```
type TransitRouterEcrAttachment struct {
	pulumi.CustomResourceState

	// CenId
	CenId pulumi.StringPtrOutput `pulumi:"cenId"`
	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// EcrId
	EcrId pulumi.StringOutput `pulumi:"ecrId"`
	// EcrOwnerId
	EcrOwnerId pulumi.IntPtrOutput `pulumi:"ecrOwnerId"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// TransitRouterAttachmentDescription
	TransitRouterAttachmentDescription pulumi.StringPtrOutput `pulumi:"transitRouterAttachmentDescription"`
	// TransitRouterAttachmentName
	TransitRouterEcrAttachmentName pulumi.StringPtrOutput `pulumi:"transitRouterEcrAttachmentName"`
	// TransitRouterId
	TransitRouterId pulumi.StringPtrOutput `pulumi:"transitRouterId"`
}

// NewTransitRouterEcrAttachment registers a new resource with the given unique name, arguments, and options.
func NewTransitRouterEcrAttachment(ctx *pulumi.Context,
	name string, args *TransitRouterEcrAttachmentArgs, opts ...pulumi.ResourceOption) (*TransitRouterEcrAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EcrId == nil {
		return nil, errors.New("invalid value for required argument 'EcrId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitRouterEcrAttachment
	err := ctx.RegisterResource("alicloud:cen/transitRouterEcrAttachment:TransitRouterEcrAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouterEcrAttachment gets an existing TransitRouterEcrAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouterEcrAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterEcrAttachmentState, opts ...pulumi.ResourceOption) (*TransitRouterEcrAttachment, error) {
	var resource TransitRouterEcrAttachment
	err := ctx.ReadResource("alicloud:cen/transitRouterEcrAttachment:TransitRouterEcrAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouterEcrAttachment resources.
type transitRouterEcrAttachmentState struct {
	// CenId
	CenId *string `pulumi:"cenId"`
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// EcrId
	EcrId *string `pulumi:"ecrId"`
	// EcrOwnerId
	EcrOwnerId *int `pulumi:"ecrOwnerId"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// TransitRouterAttachmentDescription
	TransitRouterAttachmentDescription *string `pulumi:"transitRouterAttachmentDescription"`
	// TransitRouterAttachmentName
	TransitRouterEcrAttachmentName *string `pulumi:"transitRouterEcrAttachmentName"`
	// TransitRouterId
	TransitRouterId *string `pulumi:"transitRouterId"`
}

type TransitRouterEcrAttachmentState struct {
	// CenId
	CenId pulumi.StringPtrInput
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// EcrId
	EcrId pulumi.StringPtrInput
	// EcrOwnerId
	EcrOwnerId pulumi.IntPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// TransitRouterAttachmentDescription
	TransitRouterAttachmentDescription pulumi.StringPtrInput
	// TransitRouterAttachmentName
	TransitRouterEcrAttachmentName pulumi.StringPtrInput
	// TransitRouterId
	TransitRouterId pulumi.StringPtrInput
}

func (TransitRouterEcrAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterEcrAttachmentState)(nil)).Elem()
}

type transitRouterEcrAttachmentArgs struct {
	// CenId
	CenId *string `pulumi:"cenId"`
	// EcrId
	EcrId string `pulumi:"ecrId"`
	// EcrOwnerId
	EcrOwnerId *int `pulumi:"ecrOwnerId"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// TransitRouterAttachmentDescription
	TransitRouterAttachmentDescription *string `pulumi:"transitRouterAttachmentDescription"`
	// TransitRouterAttachmentName
	TransitRouterEcrAttachmentName *string `pulumi:"transitRouterEcrAttachmentName"`
	// TransitRouterId
	TransitRouterId *string `pulumi:"transitRouterId"`
}

// The set of arguments for constructing a TransitRouterEcrAttachment resource.
type TransitRouterEcrAttachmentArgs struct {
	// CenId
	CenId pulumi.StringPtrInput
	// EcrId
	EcrId pulumi.StringInput
	// EcrOwnerId
	EcrOwnerId pulumi.IntPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// TransitRouterAttachmentDescription
	TransitRouterAttachmentDescription pulumi.StringPtrInput
	// TransitRouterAttachmentName
	TransitRouterEcrAttachmentName pulumi.StringPtrInput
	// TransitRouterId
	TransitRouterId pulumi.StringPtrInput
}

func (TransitRouterEcrAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterEcrAttachmentArgs)(nil)).Elem()
}

type TransitRouterEcrAttachmentInput interface {
	pulumi.Input

	ToTransitRouterEcrAttachmentOutput() TransitRouterEcrAttachmentOutput
	ToTransitRouterEcrAttachmentOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentOutput
}

func (*TransitRouterEcrAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterEcrAttachment)(nil)).Elem()
}

func (i *TransitRouterEcrAttachment) ToTransitRouterEcrAttachmentOutput() TransitRouterEcrAttachmentOutput {
	return i.ToTransitRouterEcrAttachmentOutputWithContext(context.Background())
}

func (i *TransitRouterEcrAttachment) ToTransitRouterEcrAttachmentOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterEcrAttachmentOutput)
}

// TransitRouterEcrAttachmentArrayInput is an input type that accepts TransitRouterEcrAttachmentArray and TransitRouterEcrAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRouterEcrAttachmentArrayInput` via:
//
//	TransitRouterEcrAttachmentArray{ TransitRouterEcrAttachmentArgs{...} }
type TransitRouterEcrAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRouterEcrAttachmentArrayOutput() TransitRouterEcrAttachmentArrayOutput
	ToTransitRouterEcrAttachmentArrayOutputWithContext(context.Context) TransitRouterEcrAttachmentArrayOutput
}

type TransitRouterEcrAttachmentArray []TransitRouterEcrAttachmentInput

func (TransitRouterEcrAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterEcrAttachment)(nil)).Elem()
}

func (i TransitRouterEcrAttachmentArray) ToTransitRouterEcrAttachmentArrayOutput() TransitRouterEcrAttachmentArrayOutput {
	return i.ToTransitRouterEcrAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRouterEcrAttachmentArray) ToTransitRouterEcrAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterEcrAttachmentArrayOutput)
}

// TransitRouterEcrAttachmentMapInput is an input type that accepts TransitRouterEcrAttachmentMap and TransitRouterEcrAttachmentMapOutput values.
// You can construct a concrete instance of `TransitRouterEcrAttachmentMapInput` via:
//
//	TransitRouterEcrAttachmentMap{ "key": TransitRouterEcrAttachmentArgs{...} }
type TransitRouterEcrAttachmentMapInput interface {
	pulumi.Input

	ToTransitRouterEcrAttachmentMapOutput() TransitRouterEcrAttachmentMapOutput
	ToTransitRouterEcrAttachmentMapOutputWithContext(context.Context) TransitRouterEcrAttachmentMapOutput
}

type TransitRouterEcrAttachmentMap map[string]TransitRouterEcrAttachmentInput

func (TransitRouterEcrAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterEcrAttachment)(nil)).Elem()
}

func (i TransitRouterEcrAttachmentMap) ToTransitRouterEcrAttachmentMapOutput() TransitRouterEcrAttachmentMapOutput {
	return i.ToTransitRouterEcrAttachmentMapOutputWithContext(context.Background())
}

func (i TransitRouterEcrAttachmentMap) ToTransitRouterEcrAttachmentMapOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterEcrAttachmentMapOutput)
}

type TransitRouterEcrAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRouterEcrAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterEcrAttachment)(nil)).Elem()
}

func (o TransitRouterEcrAttachmentOutput) ToTransitRouterEcrAttachmentOutput() TransitRouterEcrAttachmentOutput {
	return o
}

func (o TransitRouterEcrAttachmentOutput) ToTransitRouterEcrAttachmentOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentOutput {
	return o
}

// CenId
func (o TransitRouterEcrAttachmentOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringPtrOutput { return v.CenId }).(pulumi.StringPtrOutput)
}

// The creation time of the resource
func (o TransitRouterEcrAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// EcrId
func (o TransitRouterEcrAttachmentOutput) EcrId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringOutput { return v.EcrId }).(pulumi.StringOutput)
}

// EcrOwnerId
func (o TransitRouterEcrAttachmentOutput) EcrOwnerId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.IntPtrOutput { return v.EcrOwnerId }).(pulumi.IntPtrOutput)
}

// The status of the resource
func (o TransitRouterEcrAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource
func (o TransitRouterEcrAttachmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// TransitRouterAttachmentDescription
func (o TransitRouterEcrAttachmentOutput) TransitRouterAttachmentDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringPtrOutput {
		return v.TransitRouterAttachmentDescription
	}).(pulumi.StringPtrOutput)
}

// TransitRouterAttachmentName
func (o TransitRouterEcrAttachmentOutput) TransitRouterEcrAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringPtrOutput { return v.TransitRouterEcrAttachmentName }).(pulumi.StringPtrOutput)
}

// TransitRouterId
func (o TransitRouterEcrAttachmentOutput) TransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterEcrAttachment) pulumi.StringPtrOutput { return v.TransitRouterId }).(pulumi.StringPtrOutput)
}

type TransitRouterEcrAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterEcrAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterEcrAttachment)(nil)).Elem()
}

func (o TransitRouterEcrAttachmentArrayOutput) ToTransitRouterEcrAttachmentArrayOutput() TransitRouterEcrAttachmentArrayOutput {
	return o
}

func (o TransitRouterEcrAttachmentArrayOutput) ToTransitRouterEcrAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentArrayOutput {
	return o
}

func (o TransitRouterEcrAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRouterEcrAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouterEcrAttachment {
		return vs[0].([]*TransitRouterEcrAttachment)[vs[1].(int)]
	}).(TransitRouterEcrAttachmentOutput)
}

type TransitRouterEcrAttachmentMapOutput struct{ *pulumi.OutputState }

func (TransitRouterEcrAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterEcrAttachment)(nil)).Elem()
}

func (o TransitRouterEcrAttachmentMapOutput) ToTransitRouterEcrAttachmentMapOutput() TransitRouterEcrAttachmentMapOutput {
	return o
}

func (o TransitRouterEcrAttachmentMapOutput) ToTransitRouterEcrAttachmentMapOutputWithContext(ctx context.Context) TransitRouterEcrAttachmentMapOutput {
	return o
}

func (o TransitRouterEcrAttachmentMapOutput) MapIndex(k pulumi.StringInput) TransitRouterEcrAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouterEcrAttachment {
		return vs[0].(map[string]*TransitRouterEcrAttachment)[vs[1].(string)]
	}).(TransitRouterEcrAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterEcrAttachmentInput)(nil)).Elem(), &TransitRouterEcrAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterEcrAttachmentArrayInput)(nil)).Elem(), TransitRouterEcrAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterEcrAttachmentMapInput)(nil)).Elem(), TransitRouterEcrAttachmentMap{})
	pulumi.RegisterOutputType(TransitRouterEcrAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRouterEcrAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterEcrAttachmentMapOutput{})
}
