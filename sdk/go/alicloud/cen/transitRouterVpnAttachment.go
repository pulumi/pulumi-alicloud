// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Enterprise Network (CEN) Transit Router Vpn Attachment resource.
//
// For information about Cloud Enterprise Network (CEN) Transit Router Vpn Attachment and how to use it, see [What is Transit Router Vpn Attachment](https://www.alibabacloud.com/help/en/cen/developer-reference/api-cbn-2017-09-12-createtransitroutervpnattachment).
//
// > **NOTE:** Available since v1.183.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := cen.GetTransitRouterAvailableResources(ctx, &cen.GetTransitRouterAvailableResourcesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := cen.NewInstance(ctx, "example", &cen.InstanceArgs{
//				CenInstanceName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTransitRouter, err := cen.NewTransitRouter(ctx, "example", &cen.TransitRouterArgs{
//				CenId:                    example.ID(),
//				TransitRouterDescription: pulumi.String(name),
//				TransitRouterName:        pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleCustomerGateway, err := vpn.NewCustomerGateway(ctx, "example", &vpn.CustomerGatewayArgs{
//				CustomerGatewayName: pulumi.String(name),
//				IpAddress:           pulumi.String("42.104.22.210"),
//				Asn:                 pulumi.String("45014"),
//				Description:         pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleGatewayVpnAttachment, err := vpn.NewGatewayVpnAttachment(ctx, "example", &vpn.GatewayVpnAttachmentArgs{
//				CustomerGatewayId: exampleCustomerGateway.ID(),
//				NetworkType:       pulumi.String("public"),
//				LocalSubnet:       pulumi.String("0.0.0.0/0"),
//				RemoteSubnet:      pulumi.String("0.0.0.0/0"),
//				EffectImmediately: pulumi.Bool(false),
//				IkeConfig: &vpn.GatewayVpnAttachmentIkeConfigArgs{
//					IkeAuthAlg:  pulumi.String("md5"),
//					IkeEncAlg:   pulumi.String("des"),
//					IkeVersion:  pulumi.String("ikev2"),
//					IkeMode:     pulumi.String("main"),
//					IkeLifetime: pulumi.Int(86400),
//					Psk:         pulumi.String("tf-examplevpn2"),
//					IkePfs:      pulumi.String("group1"),
//					RemoteId:    pulumi.String("examplebob2"),
//					LocalId:     pulumi.String("examplealice2"),
//				},
//				IpsecConfig: &vpn.GatewayVpnAttachmentIpsecConfigArgs{
//					IpsecPfs:      pulumi.String("group5"),
//					IpsecEncAlg:   pulumi.String("des"),
//					IpsecAuthAlg:  pulumi.String("md5"),
//					IpsecLifetime: pulumi.Int(86400),
//				},
//				BgpConfig: &vpn.GatewayVpnAttachmentBgpConfigArgs{
//					Enable:     pulumi.Bool(true),
//					LocalAsn:   pulumi.Int(45014),
//					TunnelCidr: pulumi.String("169.254.11.0/30"),
//					LocalBgpIp: pulumi.String("169.254.11.1"),
//				},
//				HealthCheckConfig: &vpn.GatewayVpnAttachmentHealthCheckConfigArgs{
//					Enable:   pulumi.Bool(true),
//					Sip:      pulumi.String("192.168.1.1"),
//					Dip:      pulumi.String("10.0.0.1"),
//					Interval: pulumi.Int(10),
//					Retry:    pulumi.Int(10),
//					Policy:   pulumi.String("revoke_route"),
//				},
//				EnableDpd:          pulumi.Bool(true),
//				EnableNatTraversal: pulumi.Bool(true),
//				VpnAttachmentName:  pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTransitRouterCidr, err := cen.NewTransitRouterCidr(ctx, "example", &cen.TransitRouterCidrArgs{
//				TransitRouterId:       exampleTransitRouter.TransitRouterId,
//				Cidr:                  pulumi.String("192.168.0.0/16"),
//				TransitRouterCidrName: pulumi.String(name),
//				Description:           pulumi.String(name),
//				PublishCidrRoute:      pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewTransitRouterVpnAttachment(ctx, "example", &cen.TransitRouterVpnAttachmentArgs{
//				AutoPublishRouteEnabled:            pulumi.Bool(false),
//				TransitRouterAttachmentDescription: pulumi.String(name),
//				TransitRouterAttachmentName:        pulumi.String(name),
//				CenId:                              exampleTransitRouter.CenId,
//				TransitRouterId:                    exampleTransitRouterCidr.TransitRouterId,
//				VpnId:                              exampleGatewayVpnAttachment.ID(),
//				Zones: cen.TransitRouterVpnAttachmentZoneArray{
//					&cen.TransitRouterVpnAttachmentZoneArgs{
//						ZoneId: pulumi.String(_default.Resources[0].MasterZones[0]),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Dual Tunnel Mode Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultbpR5Uk, err := cen.NewInstance(ctx, "defaultbpR5Uk", &cen.InstanceArgs{
//				CenInstanceName: pulumi.String("example-vpn-attachment"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultM8Zo6H, err := cen.NewTransitRouter(ctx, "defaultM8Zo6H", &cen.TransitRouterArgs{
//				CenId: defaultbpR5Uk.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultuUtyCv, err := cen.NewTransitRouterCidr(ctx, "defaultuUtyCv", &cen.TransitRouterCidrArgs{
//				Cidr:            pulumi.String("192.168.10.0/24"),
//				TransitRouterId: defaultM8Zo6H.TransitRouterId,
//			})
//			if err != nil {
//				return err
//			}
//			defaultMeoCIz, err := vpn.NewCustomerGateway(ctx, "defaultMeoCIz", &vpn.CustomerGatewayArgs{
//				IpAddress:           pulumi.String("0.0.0.0"),
//				CustomerGatewayName: pulumi.String("example-vpn-attachment"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				defaultuUtyCv,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = cen.GetTransitRouterService(ctx, &cen.GetTransitRouterServiceArgs{
//				Enable: pulumi.StringRef("On"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultvrPzdh, err := vpn.NewGatewayVpnAttachment(ctx, "defaultvrPzdh", &vpn.GatewayVpnAttachmentArgs{
//				NetworkType:       pulumi.String("public"),
//				LocalSubnet:       pulumi.String("0.0.0.0/0"),
//				EnableTunnelsBgp:  pulumi.Bool(false),
//				VpnAttachmentName: pulumi.String(name),
//				TunnelOptionsSpecifications: vpn.GatewayVpnAttachmentTunnelOptionsSpecificationArray{
//					&vpn.GatewayVpnAttachmentTunnelOptionsSpecificationArgs{
//						CustomerGatewayId:  defaultMeoCIz.ID(),
//						EnableDpd:          pulumi.Bool(true),
//						EnableNatTraversal: pulumi.Bool(true),
//						TunnelIndex:        pulumi.Int(1),
//						TunnelIkeConfig: &vpn.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{
//							RemoteId:    pulumi.String("2.2.2.2"),
//							IkeEncAlg:   pulumi.String("aes"),
//							IkeMode:     pulumi.String("main"),
//							IkeVersion:  pulumi.String("ikev1"),
//							LocalId:     pulumi.String("1.1.1.1"),
//							IkeAuthAlg:  pulumi.String("md5"),
//							IkeLifetime: pulumi.Int(86100),
//							IkePfs:      pulumi.String("group2"),
//							Psk:         pulumi.String("12345678"),
//						},
//						TunnelIpsecConfig: &vpn.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{
//							IpsecAuthAlg:  pulumi.String("md5"),
//							IpsecEncAlg:   pulumi.String("aes"),
//							IpsecLifetime: pulumi.Int(86200),
//							IpsecPfs:      pulumi.String("group5"),
//						},
//					},
//					&vpn.GatewayVpnAttachmentTunnelOptionsSpecificationArgs{
//						EnableNatTraversal: pulumi.Bool(true),
//						TunnelIndex:        pulumi.Int(2),
//						TunnelIkeConfig: &vpn.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{
//							LocalId:     pulumi.String("4.4.4.4"),
//							RemoteId:    pulumi.String("5.5.5.5"),
//							IkeLifetime: pulumi.Int(86400),
//							IkePfs:      pulumi.String("group5"),
//							IkeMode:     pulumi.String("main"),
//							IkeVersion:  pulumi.String("ikev2"),
//							Psk:         pulumi.String("32333442"),
//							IkeAuthAlg:  pulumi.String("md5"),
//							IkeEncAlg:   pulumi.String("aes"),
//						},
//						TunnelIpsecConfig: &vpn.GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{
//							IpsecEncAlg:   pulumi.String("aes"),
//							IpsecLifetime: pulumi.Int(86400),
//							IpsecPfs:      pulumi.String("group5"),
//							IpsecAuthAlg:  pulumi.String("sha256"),
//						},
//						CustomerGatewayId: defaultMeoCIz.ID(),
//						EnableDpd:         pulumi.Bool(true),
//					},
//				},
//				RemoteSubnet: pulumi.String("0.0.0.0/0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewTransitRouterVpnAttachment(ctx, "default", &cen.TransitRouterVpnAttachmentArgs{
//				TransitRouterId:                    defaultM8Zo6H.TransitRouterId,
//				VpnId:                              defaultvrPzdh.ID(),
//				AutoPublishRouteEnabled:            pulumi.Bool(false),
//				ChargeType:                         pulumi.String("POSTPAY"),
//				TransitRouterAttachmentName:        pulumi.String("example-vpn-attachment"),
//				VpnOwnerId:                         pulumi.String(_default.Id),
//				CenId:                              defaultM8Zo6H.CenId,
//				TransitRouterAttachmentDescription: pulumi.String("example-vpn-attachment"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Enterprise Network (CEN) Transit Router Vpn Attachment can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment example <id>
// ```
type TransitRouterVpnAttachment struct {
	pulumi.CustomResourceState

	// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
	AutoPublishRouteEnabled pulumi.BoolPtrOutput `pulumi:"autoPublishRouteEnabled"`
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringOutput `pulumi:"cenId"`
	// The billing method.
	// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
	ChargeType pulumi.StringOutput `pulumi:"chargeType"`
	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The ID of the region where the transit router is deployed.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Status
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The new description of the VPN attachment.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
	TransitRouterAttachmentDescription pulumi.StringPtrOutput `pulumi:"transitRouterAttachmentDescription"`
	// The name of the VPN attachment.
	// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
	TransitRouterAttachmentName pulumi.StringPtrOutput `pulumi:"transitRouterAttachmentName"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrOutput `pulumi:"transitRouterId"`
	// The ID of the IPsec-VPN attachment.
	VpnId pulumi.StringOutput `pulumi:"vpnId"`
	// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
	//
	// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
	// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
	VpnOwnerId pulumi.StringOutput `pulumi:"vpnOwnerId"`
	// The Zone ID in the current region.
	// System will create resources under the Zone that you specify.
	// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
	Zones TransitRouterVpnAttachmentZoneArrayOutput `pulumi:"zones"`
}

// NewTransitRouterVpnAttachment registers a new resource with the given unique name, arguments, and options.
func NewTransitRouterVpnAttachment(ctx *pulumi.Context,
	name string, args *TransitRouterVpnAttachmentArgs, opts ...pulumi.ResourceOption) (*TransitRouterVpnAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpnId == nil {
		return nil, errors.New("invalid value for required argument 'VpnId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitRouterVpnAttachment
	err := ctx.RegisterResource("alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouterVpnAttachment gets an existing TransitRouterVpnAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouterVpnAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterVpnAttachmentState, opts ...pulumi.ResourceOption) (*TransitRouterVpnAttachment, error) {
	var resource TransitRouterVpnAttachment
	err := ctx.ReadResource("alicloud:cen/transitRouterVpnAttachment:TransitRouterVpnAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouterVpnAttachment resources.
type transitRouterVpnAttachmentState struct {
	// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
	AutoPublishRouteEnabled *bool `pulumi:"autoPublishRouteEnabled"`
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId *string `pulumi:"cenId"`
	// The billing method.
	// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
	ChargeType *string `pulumi:"chargeType"`
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The ID of the region where the transit router is deployed.
	RegionId *string `pulumi:"regionId"`
	// Status
	Status *string `pulumi:"status"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// The new description of the VPN attachment.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
	TransitRouterAttachmentDescription *string `pulumi:"transitRouterAttachmentDescription"`
	// The name of the VPN attachment.
	// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The ID of the IPsec-VPN attachment.
	VpnId *string `pulumi:"vpnId"`
	// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
	//
	// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
	// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
	VpnOwnerId *string `pulumi:"vpnOwnerId"`
	// The Zone ID in the current region.
	// System will create resources under the Zone that you specify.
	// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
	Zones []TransitRouterVpnAttachmentZone `pulumi:"zones"`
}

type TransitRouterVpnAttachmentState struct {
	// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
	AutoPublishRouteEnabled pulumi.BoolPtrInput
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringPtrInput
	// The billing method.
	// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
	ChargeType pulumi.StringPtrInput
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The ID of the region where the transit router is deployed.
	RegionId pulumi.StringPtrInput
	// Status
	Status pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// The new description of the VPN attachment.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
	TransitRouterAttachmentDescription pulumi.StringPtrInput
	// The name of the VPN attachment.
	// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
	TransitRouterAttachmentName pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The ID of the IPsec-VPN attachment.
	VpnId pulumi.StringPtrInput
	// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
	//
	// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
	// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
	VpnOwnerId pulumi.StringPtrInput
	// The Zone ID in the current region.
	// System will create resources under the Zone that you specify.
	// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
	Zones TransitRouterVpnAttachmentZoneArrayInput
}

func (TransitRouterVpnAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterVpnAttachmentState)(nil)).Elem()
}

type transitRouterVpnAttachmentArgs struct {
	// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
	AutoPublishRouteEnabled *bool `pulumi:"autoPublishRouteEnabled"`
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId *string `pulumi:"cenId"`
	// The billing method.
	// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
	ChargeType *string `pulumi:"chargeType"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// The new description of the VPN attachment.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
	TransitRouterAttachmentDescription *string `pulumi:"transitRouterAttachmentDescription"`
	// The name of the VPN attachment.
	// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The ID of the IPsec-VPN attachment.
	VpnId string `pulumi:"vpnId"`
	// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
	//
	// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
	// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
	VpnOwnerId *string `pulumi:"vpnOwnerId"`
	// The Zone ID in the current region.
	// System will create resources under the Zone that you specify.
	// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
	Zones []TransitRouterVpnAttachmentZone `pulumi:"zones"`
}

// The set of arguments for constructing a TransitRouterVpnAttachment resource.
type TransitRouterVpnAttachmentArgs struct {
	// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
	AutoPublishRouteEnabled pulumi.BoolPtrInput
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringPtrInput
	// The billing method.
	// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
	ChargeType pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// The new description of the VPN attachment.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
	TransitRouterAttachmentDescription pulumi.StringPtrInput
	// The name of the VPN attachment.
	// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
	TransitRouterAttachmentName pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The ID of the IPsec-VPN attachment.
	VpnId pulumi.StringInput
	// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
	//
	// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
	// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
	VpnOwnerId pulumi.StringPtrInput
	// The Zone ID in the current region.
	// System will create resources under the Zone that you specify.
	// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
	Zones TransitRouterVpnAttachmentZoneArrayInput
}

func (TransitRouterVpnAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterVpnAttachmentArgs)(nil)).Elem()
}

type TransitRouterVpnAttachmentInput interface {
	pulumi.Input

	ToTransitRouterVpnAttachmentOutput() TransitRouterVpnAttachmentOutput
	ToTransitRouterVpnAttachmentOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentOutput
}

func (*TransitRouterVpnAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterVpnAttachment)(nil)).Elem()
}

func (i *TransitRouterVpnAttachment) ToTransitRouterVpnAttachmentOutput() TransitRouterVpnAttachmentOutput {
	return i.ToTransitRouterVpnAttachmentOutputWithContext(context.Background())
}

func (i *TransitRouterVpnAttachment) ToTransitRouterVpnAttachmentOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpnAttachmentOutput)
}

// TransitRouterVpnAttachmentArrayInput is an input type that accepts TransitRouterVpnAttachmentArray and TransitRouterVpnAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRouterVpnAttachmentArrayInput` via:
//
//	TransitRouterVpnAttachmentArray{ TransitRouterVpnAttachmentArgs{...} }
type TransitRouterVpnAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRouterVpnAttachmentArrayOutput() TransitRouterVpnAttachmentArrayOutput
	ToTransitRouterVpnAttachmentArrayOutputWithContext(context.Context) TransitRouterVpnAttachmentArrayOutput
}

type TransitRouterVpnAttachmentArray []TransitRouterVpnAttachmentInput

func (TransitRouterVpnAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterVpnAttachment)(nil)).Elem()
}

func (i TransitRouterVpnAttachmentArray) ToTransitRouterVpnAttachmentArrayOutput() TransitRouterVpnAttachmentArrayOutput {
	return i.ToTransitRouterVpnAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRouterVpnAttachmentArray) ToTransitRouterVpnAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpnAttachmentArrayOutput)
}

// TransitRouterVpnAttachmentMapInput is an input type that accepts TransitRouterVpnAttachmentMap and TransitRouterVpnAttachmentMapOutput values.
// You can construct a concrete instance of `TransitRouterVpnAttachmentMapInput` via:
//
//	TransitRouterVpnAttachmentMap{ "key": TransitRouterVpnAttachmentArgs{...} }
type TransitRouterVpnAttachmentMapInput interface {
	pulumi.Input

	ToTransitRouterVpnAttachmentMapOutput() TransitRouterVpnAttachmentMapOutput
	ToTransitRouterVpnAttachmentMapOutputWithContext(context.Context) TransitRouterVpnAttachmentMapOutput
}

type TransitRouterVpnAttachmentMap map[string]TransitRouterVpnAttachmentInput

func (TransitRouterVpnAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterVpnAttachment)(nil)).Elem()
}

func (i TransitRouterVpnAttachmentMap) ToTransitRouterVpnAttachmentMapOutput() TransitRouterVpnAttachmentMapOutput {
	return i.ToTransitRouterVpnAttachmentMapOutputWithContext(context.Background())
}

func (i TransitRouterVpnAttachmentMap) ToTransitRouterVpnAttachmentMapOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpnAttachmentMapOutput)
}

type TransitRouterVpnAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRouterVpnAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterVpnAttachment)(nil)).Elem()
}

func (o TransitRouterVpnAttachmentOutput) ToTransitRouterVpnAttachmentOutput() TransitRouterVpnAttachmentOutput {
	return o
}

func (o TransitRouterVpnAttachmentOutput) ToTransitRouterVpnAttachmentOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentOutput {
	return o
}

// Specifies whether to allow the transit router to automatically advertise routes to the IPsec-VPN attachment. Valid values:
func (o TransitRouterVpnAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.BoolPtrOutput { return v.AutoPublishRouteEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the Cloud Enterprise Network (CEN) instance.
func (o TransitRouterVpnAttachmentOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.CenId }).(pulumi.StringOutput)
}

// The billing method.
// Set the value to `POSTPAY`, which is the default value and specifies the pay-as-you-go billing method.
func (o TransitRouterVpnAttachmentOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.ChargeType }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o TransitRouterVpnAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the region where the transit router is deployed.
func (o TransitRouterVpnAttachmentOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Status
func (o TransitRouterVpnAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource
func (o TransitRouterVpnAttachmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The new description of the VPN attachment.
// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
func (o TransitRouterVpnAttachmentOutput) TransitRouterAttachmentDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringPtrOutput {
		return v.TransitRouterAttachmentDescription
	}).(pulumi.StringPtrOutput)
}

// The name of the VPN attachment.
// The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\_), and hyphens (-). It must start with a letter.
func (o TransitRouterVpnAttachmentOutput) TransitRouterAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringPtrOutput { return v.TransitRouterAttachmentName }).(pulumi.StringPtrOutput)
}

// The ID of the transit router.
func (o TransitRouterVpnAttachmentOutput) TransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringPtrOutput { return v.TransitRouterId }).(pulumi.StringPtrOutput)
}

// The ID of the IPsec-VPN attachment.
func (o TransitRouterVpnAttachmentOutput) VpnId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.VpnId }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account to which the IPsec-VPN connection belongs.
//
// - If you do not set this parameter, the ID of the current Alibaba Cloud account is used.
// - You must set VpnOwnerId if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
func (o TransitRouterVpnAttachmentOutput) VpnOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) pulumi.StringOutput { return v.VpnOwnerId }).(pulumi.StringOutput)
}

// The Zone ID in the current region.
// System will create resources under the Zone that you specify.
// Left blank if associated IPSec connection is in dual-tunnel mode. See `zone` below.
func (o TransitRouterVpnAttachmentOutput) Zones() TransitRouterVpnAttachmentZoneArrayOutput {
	return o.ApplyT(func(v *TransitRouterVpnAttachment) TransitRouterVpnAttachmentZoneArrayOutput { return v.Zones }).(TransitRouterVpnAttachmentZoneArrayOutput)
}

type TransitRouterVpnAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterVpnAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterVpnAttachment)(nil)).Elem()
}

func (o TransitRouterVpnAttachmentArrayOutput) ToTransitRouterVpnAttachmentArrayOutput() TransitRouterVpnAttachmentArrayOutput {
	return o
}

func (o TransitRouterVpnAttachmentArrayOutput) ToTransitRouterVpnAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentArrayOutput {
	return o
}

func (o TransitRouterVpnAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRouterVpnAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouterVpnAttachment {
		return vs[0].([]*TransitRouterVpnAttachment)[vs[1].(int)]
	}).(TransitRouterVpnAttachmentOutput)
}

type TransitRouterVpnAttachmentMapOutput struct{ *pulumi.OutputState }

func (TransitRouterVpnAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterVpnAttachment)(nil)).Elem()
}

func (o TransitRouterVpnAttachmentMapOutput) ToTransitRouterVpnAttachmentMapOutput() TransitRouterVpnAttachmentMapOutput {
	return o
}

func (o TransitRouterVpnAttachmentMapOutput) ToTransitRouterVpnAttachmentMapOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentMapOutput {
	return o
}

func (o TransitRouterVpnAttachmentMapOutput) MapIndex(k pulumi.StringInput) TransitRouterVpnAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouterVpnAttachment {
		return vs[0].(map[string]*TransitRouterVpnAttachment)[vs[1].(string)]
	}).(TransitRouterVpnAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpnAttachmentInput)(nil)).Elem(), &TransitRouterVpnAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpnAttachmentArrayInput)(nil)).Elem(), TransitRouterVpnAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpnAttachmentMapInput)(nil)).Elem(), TransitRouterVpnAttachmentMap{})
	pulumi.RegisterOutputType(TransitRouterVpnAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRouterVpnAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterVpnAttachmentMapOutput{})
}
