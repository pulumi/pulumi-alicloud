// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CEN transit router route table resource.[What is Cen Transit Router Route Table](https://help.aliyun.com/document_detail/261233.html)
//
// > **NOTE:** Available in 1.126.0+
//
// ## Import
//
// CEN transit router route table
//
// can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cen/transitRouterRouteTable:TransitRouterRouteTable default tr-*********:vtb-********
// ```
type TransitRouterRouteTable struct {
	pulumi.CustomResourceState

	// The dry run.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The associating status of the Transit Router.
	Status pulumi.StringOutput `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringOutput `pulumi:"transitRouterId"`
	// The description of the transit router route table.
	TransitRouterRouteTableDescription pulumi.StringOutput `pulumi:"transitRouterRouteTableDescription"`
	// The id of the transit router route table.
	TransitRouterRouteTableId pulumi.StringOutput `pulumi:"transitRouterRouteTableId"`
	// The name of the transit router route table.
	TransitRouterRouteTableName pulumi.StringPtrOutput `pulumi:"transitRouterRouteTableName"`
	// The type of the transit router route table. Valid values: `Custom`, `System`.
	TransitRouterRouteTableType pulumi.StringOutput `pulumi:"transitRouterRouteTableType"`
}

// NewTransitRouterRouteTable registers a new resource with the given unique name, arguments, and options.
func NewTransitRouterRouteTable(ctx *pulumi.Context,
	name string, args *TransitRouterRouteTableArgs, opts ...pulumi.ResourceOption) (*TransitRouterRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitRouterId == nil {
		return nil, errors.New("invalid value for required argument 'TransitRouterId'")
	}
	var resource TransitRouterRouteTable
	err := ctx.RegisterResource("alicloud:cen/transitRouterRouteTable:TransitRouterRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouterRouteTable gets an existing TransitRouterRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouterRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterRouteTableState, opts ...pulumi.ResourceOption) (*TransitRouterRouteTable, error) {
	var resource TransitRouterRouteTable
	err := ctx.ReadResource("alicloud:cen/transitRouterRouteTable:TransitRouterRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouterRouteTable resources.
type transitRouterRouteTableState struct {
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The associating status of the Transit Router.
	Status *string `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The description of the transit router route table.
	TransitRouterRouteTableDescription *string `pulumi:"transitRouterRouteTableDescription"`
	// The id of the transit router route table.
	TransitRouterRouteTableId *string `pulumi:"transitRouterRouteTableId"`
	// The name of the transit router route table.
	TransitRouterRouteTableName *string `pulumi:"transitRouterRouteTableName"`
	// The type of the transit router route table. Valid values: `Custom`, `System`.
	TransitRouterRouteTableType *string `pulumi:"transitRouterRouteTableType"`
}

type TransitRouterRouteTableState struct {
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The associating status of the Transit Router.
	Status pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The description of the transit router route table.
	TransitRouterRouteTableDescription pulumi.StringPtrInput
	// The id of the transit router route table.
	TransitRouterRouteTableId pulumi.StringPtrInput
	// The name of the transit router route table.
	TransitRouterRouteTableName pulumi.StringPtrInput
	// The type of the transit router route table. Valid values: `Custom`, `System`.
	TransitRouterRouteTableType pulumi.StringPtrInput
}

func (TransitRouterRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterRouteTableState)(nil)).Elem()
}

type transitRouterRouteTableArgs struct {
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The description of the transit router route table.
	TransitRouterRouteTableDescription *string `pulumi:"transitRouterRouteTableDescription"`
	// The name of the transit router route table.
	TransitRouterRouteTableName *string `pulumi:"transitRouterRouteTableName"`
}

// The set of arguments for constructing a TransitRouterRouteTable resource.
type TransitRouterRouteTableArgs struct {
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput
	// The description of the transit router route table.
	TransitRouterRouteTableDescription pulumi.StringPtrInput
	// The name of the transit router route table.
	TransitRouterRouteTableName pulumi.StringPtrInput
}

func (TransitRouterRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterRouteTableArgs)(nil)).Elem()
}

type TransitRouterRouteTableInput interface {
	pulumi.Input

	ToTransitRouterRouteTableOutput() TransitRouterRouteTableOutput
	ToTransitRouterRouteTableOutputWithContext(ctx context.Context) TransitRouterRouteTableOutput
}

func (*TransitRouterRouteTable) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterRouteTable)(nil)).Elem()
}

func (i *TransitRouterRouteTable) ToTransitRouterRouteTableOutput() TransitRouterRouteTableOutput {
	return i.ToTransitRouterRouteTableOutputWithContext(context.Background())
}

func (i *TransitRouterRouteTable) ToTransitRouterRouteTableOutputWithContext(ctx context.Context) TransitRouterRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterRouteTableOutput)
}

// TransitRouterRouteTableArrayInput is an input type that accepts TransitRouterRouteTableArray and TransitRouterRouteTableArrayOutput values.
// You can construct a concrete instance of `TransitRouterRouteTableArrayInput` via:
//
//          TransitRouterRouteTableArray{ TransitRouterRouteTableArgs{...} }
type TransitRouterRouteTableArrayInput interface {
	pulumi.Input

	ToTransitRouterRouteTableArrayOutput() TransitRouterRouteTableArrayOutput
	ToTransitRouterRouteTableArrayOutputWithContext(context.Context) TransitRouterRouteTableArrayOutput
}

type TransitRouterRouteTableArray []TransitRouterRouteTableInput

func (TransitRouterRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterRouteTable)(nil)).Elem()
}

func (i TransitRouterRouteTableArray) ToTransitRouterRouteTableArrayOutput() TransitRouterRouteTableArrayOutput {
	return i.ToTransitRouterRouteTableArrayOutputWithContext(context.Background())
}

func (i TransitRouterRouteTableArray) ToTransitRouterRouteTableArrayOutputWithContext(ctx context.Context) TransitRouterRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterRouteTableArrayOutput)
}

// TransitRouterRouteTableMapInput is an input type that accepts TransitRouterRouteTableMap and TransitRouterRouteTableMapOutput values.
// You can construct a concrete instance of `TransitRouterRouteTableMapInput` via:
//
//          TransitRouterRouteTableMap{ "key": TransitRouterRouteTableArgs{...} }
type TransitRouterRouteTableMapInput interface {
	pulumi.Input

	ToTransitRouterRouteTableMapOutput() TransitRouterRouteTableMapOutput
	ToTransitRouterRouteTableMapOutputWithContext(context.Context) TransitRouterRouteTableMapOutput
}

type TransitRouterRouteTableMap map[string]TransitRouterRouteTableInput

func (TransitRouterRouteTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterRouteTable)(nil)).Elem()
}

func (i TransitRouterRouteTableMap) ToTransitRouterRouteTableMapOutput() TransitRouterRouteTableMapOutput {
	return i.ToTransitRouterRouteTableMapOutputWithContext(context.Background())
}

func (i TransitRouterRouteTableMap) ToTransitRouterRouteTableMapOutputWithContext(ctx context.Context) TransitRouterRouteTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterRouteTableMapOutput)
}

type TransitRouterRouteTableOutput struct{ *pulumi.OutputState }

func (TransitRouterRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterRouteTable)(nil)).Elem()
}

func (o TransitRouterRouteTableOutput) ToTransitRouterRouteTableOutput() TransitRouterRouteTableOutput {
	return o
}

func (o TransitRouterRouteTableOutput) ToTransitRouterRouteTableOutputWithContext(ctx context.Context) TransitRouterRouteTableOutput {
	return o
}

type TransitRouterRouteTableArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterRouteTable)(nil)).Elem()
}

func (o TransitRouterRouteTableArrayOutput) ToTransitRouterRouteTableArrayOutput() TransitRouterRouteTableArrayOutput {
	return o
}

func (o TransitRouterRouteTableArrayOutput) ToTransitRouterRouteTableArrayOutputWithContext(ctx context.Context) TransitRouterRouteTableArrayOutput {
	return o
}

func (o TransitRouterRouteTableArrayOutput) Index(i pulumi.IntInput) TransitRouterRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouterRouteTable {
		return vs[0].([]*TransitRouterRouteTable)[vs[1].(int)]
	}).(TransitRouterRouteTableOutput)
}

type TransitRouterRouteTableMapOutput struct{ *pulumi.OutputState }

func (TransitRouterRouteTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterRouteTable)(nil)).Elem()
}

func (o TransitRouterRouteTableMapOutput) ToTransitRouterRouteTableMapOutput() TransitRouterRouteTableMapOutput {
	return o
}

func (o TransitRouterRouteTableMapOutput) ToTransitRouterRouteTableMapOutputWithContext(ctx context.Context) TransitRouterRouteTableMapOutput {
	return o
}

func (o TransitRouterRouteTableMapOutput) MapIndex(k pulumi.StringInput) TransitRouterRouteTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouterRouteTable {
		return vs[0].(map[string]*TransitRouterRouteTable)[vs[1].(string)]
	}).(TransitRouterRouteTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterRouteTableInput)(nil)).Elem(), &TransitRouterRouteTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterRouteTableArrayInput)(nil)).Elem(), TransitRouterRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterRouteTableMapInput)(nil)).Elem(), TransitRouterRouteTableMap{})
	pulumi.RegisterOutputType(TransitRouterRouteTableOutput{})
	pulumi.RegisterOutputType(TransitRouterRouteTableArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterRouteTableMapOutput{})
}
