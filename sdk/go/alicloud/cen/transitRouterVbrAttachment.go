// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CEN transit router VBR attachment resource that associate the VBR with the CEN instance.[What is Cen Transit Router VBR Attachment](https://help.aliyun.com/document_detail/261361.html)
//
// > **NOTE:** Available in 1.126.0+
//
// ## Import
//
// CEN transit router VBR attachment can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cen/transitRouterVbrAttachment:TransitRouterVbrAttachment example tr-********:tr-attach-********
// ```
type TransitRouterVbrAttachment struct {
	pulumi.CustomResourceState

	// Auto publish route enabled.Default value is `false`.
	AutoPublishRouteEnabled pulumi.BoolOutput `pulumi:"autoPublishRouteEnabled"`
	// The ID of the CEN.
	CenId pulumi.StringOutput `pulumi:"cenId"`
	// The dry run.
	DryRun       pulumi.BoolPtrOutput   `pulumi:"dryRun"`
	ResourceType pulumi.StringPtrOutput `pulumi:"resourceType"`
	// Whether to enabled route table association. The system default value is `true`.
	RouteTableAssociationEnabled pulumi.BoolPtrOutput `pulumi:"routeTableAssociationEnabled"`
	// Whether to enabled route table propagation. The system default value is `true`.
	RouteTablePropagationEnabled pulumi.BoolPtrOutput `pulumi:"routeTablePropagationEnabled"`
	// The associating status of the network.
	Status pulumi.StringOutput `pulumi:"status"`
	// The description of the transit router vbr attachment.
	TransitRouterAttachmentDescription pulumi.StringPtrOutput `pulumi:"transitRouterAttachmentDescription"`
	TransitRouterAttachmentId          pulumi.StringOutput    `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router vbr attachment.
	TransitRouterAttachmentName pulumi.StringPtrOutput `pulumi:"transitRouterAttachmentName"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrOutput `pulumi:"transitRouterId"`
	// The ID of the VBR.
	VbrId      pulumi.StringOutput `pulumi:"vbrId"`
	VbrOwnerId pulumi.StringOutput `pulumi:"vbrOwnerId"`
}

// NewTransitRouterVbrAttachment registers a new resource with the given unique name, arguments, and options.
func NewTransitRouterVbrAttachment(ctx *pulumi.Context,
	name string, args *TransitRouterVbrAttachmentArgs, opts ...pulumi.ResourceOption) (*TransitRouterVbrAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CenId == nil {
		return nil, errors.New("invalid value for required argument 'CenId'")
	}
	if args.VbrId == nil {
		return nil, errors.New("invalid value for required argument 'VbrId'")
	}
	var resource TransitRouterVbrAttachment
	err := ctx.RegisterResource("alicloud:cen/transitRouterVbrAttachment:TransitRouterVbrAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouterVbrAttachment gets an existing TransitRouterVbrAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouterVbrAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterVbrAttachmentState, opts ...pulumi.ResourceOption) (*TransitRouterVbrAttachment, error) {
	var resource TransitRouterVbrAttachment
	err := ctx.ReadResource("alicloud:cen/transitRouterVbrAttachment:TransitRouterVbrAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouterVbrAttachment resources.
type transitRouterVbrAttachmentState struct {
	// Auto publish route enabled.Default value is `false`.
	AutoPublishRouteEnabled *bool `pulumi:"autoPublishRouteEnabled"`
	// The ID of the CEN.
	CenId *string `pulumi:"cenId"`
	// The dry run.
	DryRun       *bool   `pulumi:"dryRun"`
	ResourceType *string `pulumi:"resourceType"`
	// Whether to enabled route table association. The system default value is `true`.
	RouteTableAssociationEnabled *bool `pulumi:"routeTableAssociationEnabled"`
	// Whether to enabled route table propagation. The system default value is `true`.
	RouteTablePropagationEnabled *bool `pulumi:"routeTablePropagationEnabled"`
	// The associating status of the network.
	Status *string `pulumi:"status"`
	// The description of the transit router vbr attachment.
	TransitRouterAttachmentDescription *string `pulumi:"transitRouterAttachmentDescription"`
	TransitRouterAttachmentId          *string `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router vbr attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The ID of the VBR.
	VbrId      *string `pulumi:"vbrId"`
	VbrOwnerId *string `pulumi:"vbrOwnerId"`
}

type TransitRouterVbrAttachmentState struct {
	// Auto publish route enabled.Default value is `false`.
	AutoPublishRouteEnabled pulumi.BoolPtrInput
	// The ID of the CEN.
	CenId pulumi.StringPtrInput
	// The dry run.
	DryRun       pulumi.BoolPtrInput
	ResourceType pulumi.StringPtrInput
	// Whether to enabled route table association. The system default value is `true`.
	RouteTableAssociationEnabled pulumi.BoolPtrInput
	// Whether to enabled route table propagation. The system default value is `true`.
	RouteTablePropagationEnabled pulumi.BoolPtrInput
	// The associating status of the network.
	Status pulumi.StringPtrInput
	// The description of the transit router vbr attachment.
	TransitRouterAttachmentDescription pulumi.StringPtrInput
	TransitRouterAttachmentId          pulumi.StringPtrInput
	// The name of the transit router vbr attachment.
	TransitRouterAttachmentName pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The ID of the VBR.
	VbrId      pulumi.StringPtrInput
	VbrOwnerId pulumi.StringPtrInput
}

func (TransitRouterVbrAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterVbrAttachmentState)(nil)).Elem()
}

type transitRouterVbrAttachmentArgs struct {
	// Auto publish route enabled.Default value is `false`.
	AutoPublishRouteEnabled *bool `pulumi:"autoPublishRouteEnabled"`
	// The ID of the CEN.
	CenId string `pulumi:"cenId"`
	// The dry run.
	DryRun       *bool   `pulumi:"dryRun"`
	ResourceType *string `pulumi:"resourceType"`
	// Whether to enabled route table association. The system default value is `true`.
	RouteTableAssociationEnabled *bool `pulumi:"routeTableAssociationEnabled"`
	// Whether to enabled route table propagation. The system default value is `true`.
	RouteTablePropagationEnabled *bool `pulumi:"routeTablePropagationEnabled"`
	// The description of the transit router vbr attachment.
	TransitRouterAttachmentDescription *string `pulumi:"transitRouterAttachmentDescription"`
	// The name of the transit router vbr attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The ID of the VBR.
	VbrId      string  `pulumi:"vbrId"`
	VbrOwnerId *string `pulumi:"vbrOwnerId"`
}

// The set of arguments for constructing a TransitRouterVbrAttachment resource.
type TransitRouterVbrAttachmentArgs struct {
	// Auto publish route enabled.Default value is `false`.
	AutoPublishRouteEnabled pulumi.BoolPtrInput
	// The ID of the CEN.
	CenId pulumi.StringInput
	// The dry run.
	DryRun       pulumi.BoolPtrInput
	ResourceType pulumi.StringPtrInput
	// Whether to enabled route table association. The system default value is `true`.
	RouteTableAssociationEnabled pulumi.BoolPtrInput
	// Whether to enabled route table propagation. The system default value is `true`.
	RouteTablePropagationEnabled pulumi.BoolPtrInput
	// The description of the transit router vbr attachment.
	TransitRouterAttachmentDescription pulumi.StringPtrInput
	// The name of the transit router vbr attachment.
	TransitRouterAttachmentName pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The ID of the VBR.
	VbrId      pulumi.StringInput
	VbrOwnerId pulumi.StringPtrInput
}

func (TransitRouterVbrAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterVbrAttachmentArgs)(nil)).Elem()
}

type TransitRouterVbrAttachmentInput interface {
	pulumi.Input

	ToTransitRouterVbrAttachmentOutput() TransitRouterVbrAttachmentOutput
	ToTransitRouterVbrAttachmentOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentOutput
}

func (*TransitRouterVbrAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterVbrAttachment)(nil)).Elem()
}

func (i *TransitRouterVbrAttachment) ToTransitRouterVbrAttachmentOutput() TransitRouterVbrAttachmentOutput {
	return i.ToTransitRouterVbrAttachmentOutputWithContext(context.Background())
}

func (i *TransitRouterVbrAttachment) ToTransitRouterVbrAttachmentOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVbrAttachmentOutput)
}

// TransitRouterVbrAttachmentArrayInput is an input type that accepts TransitRouterVbrAttachmentArray and TransitRouterVbrAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRouterVbrAttachmentArrayInput` via:
//
//          TransitRouterVbrAttachmentArray{ TransitRouterVbrAttachmentArgs{...} }
type TransitRouterVbrAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRouterVbrAttachmentArrayOutput() TransitRouterVbrAttachmentArrayOutput
	ToTransitRouterVbrAttachmentArrayOutputWithContext(context.Context) TransitRouterVbrAttachmentArrayOutput
}

type TransitRouterVbrAttachmentArray []TransitRouterVbrAttachmentInput

func (TransitRouterVbrAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterVbrAttachment)(nil)).Elem()
}

func (i TransitRouterVbrAttachmentArray) ToTransitRouterVbrAttachmentArrayOutput() TransitRouterVbrAttachmentArrayOutput {
	return i.ToTransitRouterVbrAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRouterVbrAttachmentArray) ToTransitRouterVbrAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVbrAttachmentArrayOutput)
}

// TransitRouterVbrAttachmentMapInput is an input type that accepts TransitRouterVbrAttachmentMap and TransitRouterVbrAttachmentMapOutput values.
// You can construct a concrete instance of `TransitRouterVbrAttachmentMapInput` via:
//
//          TransitRouterVbrAttachmentMap{ "key": TransitRouterVbrAttachmentArgs{...} }
type TransitRouterVbrAttachmentMapInput interface {
	pulumi.Input

	ToTransitRouterVbrAttachmentMapOutput() TransitRouterVbrAttachmentMapOutput
	ToTransitRouterVbrAttachmentMapOutputWithContext(context.Context) TransitRouterVbrAttachmentMapOutput
}

type TransitRouterVbrAttachmentMap map[string]TransitRouterVbrAttachmentInput

func (TransitRouterVbrAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterVbrAttachment)(nil)).Elem()
}

func (i TransitRouterVbrAttachmentMap) ToTransitRouterVbrAttachmentMapOutput() TransitRouterVbrAttachmentMapOutput {
	return i.ToTransitRouterVbrAttachmentMapOutputWithContext(context.Background())
}

func (i TransitRouterVbrAttachmentMap) ToTransitRouterVbrAttachmentMapOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVbrAttachmentMapOutput)
}

type TransitRouterVbrAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRouterVbrAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterVbrAttachment)(nil)).Elem()
}

func (o TransitRouterVbrAttachmentOutput) ToTransitRouterVbrAttachmentOutput() TransitRouterVbrAttachmentOutput {
	return o
}

func (o TransitRouterVbrAttachmentOutput) ToTransitRouterVbrAttachmentOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentOutput {
	return o
}

type TransitRouterVbrAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterVbrAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterVbrAttachment)(nil)).Elem()
}

func (o TransitRouterVbrAttachmentArrayOutput) ToTransitRouterVbrAttachmentArrayOutput() TransitRouterVbrAttachmentArrayOutput {
	return o
}

func (o TransitRouterVbrAttachmentArrayOutput) ToTransitRouterVbrAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentArrayOutput {
	return o
}

func (o TransitRouterVbrAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRouterVbrAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouterVbrAttachment {
		return vs[0].([]*TransitRouterVbrAttachment)[vs[1].(int)]
	}).(TransitRouterVbrAttachmentOutput)
}

type TransitRouterVbrAttachmentMapOutput struct{ *pulumi.OutputState }

func (TransitRouterVbrAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterVbrAttachment)(nil)).Elem()
}

func (o TransitRouterVbrAttachmentMapOutput) ToTransitRouterVbrAttachmentMapOutput() TransitRouterVbrAttachmentMapOutput {
	return o
}

func (o TransitRouterVbrAttachmentMapOutput) ToTransitRouterVbrAttachmentMapOutputWithContext(ctx context.Context) TransitRouterVbrAttachmentMapOutput {
	return o
}

func (o TransitRouterVbrAttachmentMapOutput) MapIndex(k pulumi.StringInput) TransitRouterVbrAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouterVbrAttachment {
		return vs[0].(map[string]*TransitRouterVbrAttachment)[vs[1].(string)]
	}).(TransitRouterVbrAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVbrAttachmentInput)(nil)).Elem(), &TransitRouterVbrAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVbrAttachmentArrayInput)(nil)).Elem(), TransitRouterVbrAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVbrAttachmentMapInput)(nil)).Elem(), TransitRouterVbrAttachmentMap{})
	pulumi.RegisterOutputType(TransitRouterVbrAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRouterVbrAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterVbrAttachmentMapOutput{})
}
