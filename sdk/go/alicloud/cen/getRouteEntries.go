// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides CEN Route Entries available to the user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		entry, err := cen.GetRouteEntries(ctx, &cen.GetRouteEntriesArgs{
// 			InstanceId:   "cen-id1",
// 			RouteTableId: "vtb-id1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("firstRouteEntriesRouteEntryCidrBlock", entry.Entries[0].CidrBlock)
// 		return nil
// 	})
// }
// ```
func GetRouteEntries(ctx *pulumi.Context, args *GetRouteEntriesArgs, opts ...pulumi.InvokeOption) (*GetRouteEntriesResult, error) {
	var rv GetRouteEntriesResult
	err := ctx.Invoke("alicloud:cen/getRouteEntries:getRouteEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteEntries.
type GetRouteEntriesArgs struct {
	// The destination CIDR block of the route entry to query.
	CidrBlock *string `pulumi:"cidrBlock"`
	// ID of the CEN instance.
	InstanceId string  `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	// ID of the route table of the VPC or VBR.
	RouteTableId string `pulumi:"routeTableId"`
}

// A collection of values returned by getRouteEntries.
type GetRouteEntriesResult struct {
	// The destination CIDR block of the conflicted route entry.
	CidrBlock *string `pulumi:"cidrBlock"`
	// A list of CEN Route Entries. Each element contains the following attributes:
	Entries []GetRouteEntriesEntry `pulumi:"entries"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of the CEN child instance.
	InstanceId string  `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	// ID of the route table.
	RouteTableId string `pulumi:"routeTableId"`
}

func GetRouteEntriesOutput(ctx *pulumi.Context, args GetRouteEntriesOutputArgs, opts ...pulumi.InvokeOption) GetRouteEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRouteEntriesResult, error) {
			args := v.(GetRouteEntriesArgs)
			r, err := GetRouteEntries(ctx, &args, opts...)
			var s GetRouteEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRouteEntriesResultOutput)
}

// A collection of arguments for invoking getRouteEntries.
type GetRouteEntriesOutputArgs struct {
	// The destination CIDR block of the route entry to query.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// ID of the CEN instance.
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// ID of the route table of the VPC or VBR.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
}

func (GetRouteEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getRouteEntries.
type GetRouteEntriesResultOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesResult)(nil)).Elem()
}

func (o GetRouteEntriesResultOutput) ToGetRouteEntriesResultOutput() GetRouteEntriesResultOutput {
	return o
}

func (o GetRouteEntriesResultOutput) ToGetRouteEntriesResultOutputWithContext(ctx context.Context) GetRouteEntriesResultOutput {
	return o
}

// The destination CIDR block of the conflicted route entry.
func (o GetRouteEntriesResultOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRouteEntriesResult) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// A list of CEN Route Entries. Each element contains the following attributes:
func (o GetRouteEntriesResultOutput) Entries() GetRouteEntriesEntryArrayOutput {
	return o.ApplyT(func(v GetRouteEntriesResult) []GetRouteEntriesEntry { return v.Entries }).(GetRouteEntriesEntryArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRouteEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the CEN child instance.
func (o GetRouteEntriesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetRouteEntriesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRouteEntriesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// ID of the route table.
func (o GetRouteEntriesResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteEntriesResultOutput{})
}
