// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TransitRouterVpcAttachmentZoneMapping struct {
	// The VSwitch id of attachment.
	VswitchId *string `pulumi:"vswitchId"`
	// The zone Id of VSwitch.
	ZoneId *string `pulumi:"zoneId"`
}

// TransitRouterVpcAttachmentZoneMappingInput is an input type that accepts TransitRouterVpcAttachmentZoneMappingArgs and TransitRouterVpcAttachmentZoneMappingOutput values.
// You can construct a concrete instance of `TransitRouterVpcAttachmentZoneMappingInput` via:
//
//	TransitRouterVpcAttachmentZoneMappingArgs{...}
type TransitRouterVpcAttachmentZoneMappingInput interface {
	pulumi.Input

	ToTransitRouterVpcAttachmentZoneMappingOutput() TransitRouterVpcAttachmentZoneMappingOutput
	ToTransitRouterVpcAttachmentZoneMappingOutputWithContext(context.Context) TransitRouterVpcAttachmentZoneMappingOutput
}

type TransitRouterVpcAttachmentZoneMappingArgs struct {
	// The VSwitch id of attachment.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
	// The zone Id of VSwitch.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (TransitRouterVpcAttachmentZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterVpcAttachmentZoneMapping)(nil)).Elem()
}

func (i TransitRouterVpcAttachmentZoneMappingArgs) ToTransitRouterVpcAttachmentZoneMappingOutput() TransitRouterVpcAttachmentZoneMappingOutput {
	return i.ToTransitRouterVpcAttachmentZoneMappingOutputWithContext(context.Background())
}

func (i TransitRouterVpcAttachmentZoneMappingArgs) ToTransitRouterVpcAttachmentZoneMappingOutputWithContext(ctx context.Context) TransitRouterVpcAttachmentZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpcAttachmentZoneMappingOutput)
}

// TransitRouterVpcAttachmentZoneMappingArrayInput is an input type that accepts TransitRouterVpcAttachmentZoneMappingArray and TransitRouterVpcAttachmentZoneMappingArrayOutput values.
// You can construct a concrete instance of `TransitRouterVpcAttachmentZoneMappingArrayInput` via:
//
//	TransitRouterVpcAttachmentZoneMappingArray{ TransitRouterVpcAttachmentZoneMappingArgs{...} }
type TransitRouterVpcAttachmentZoneMappingArrayInput interface {
	pulumi.Input

	ToTransitRouterVpcAttachmentZoneMappingArrayOutput() TransitRouterVpcAttachmentZoneMappingArrayOutput
	ToTransitRouterVpcAttachmentZoneMappingArrayOutputWithContext(context.Context) TransitRouterVpcAttachmentZoneMappingArrayOutput
}

type TransitRouterVpcAttachmentZoneMappingArray []TransitRouterVpcAttachmentZoneMappingInput

func (TransitRouterVpcAttachmentZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterVpcAttachmentZoneMapping)(nil)).Elem()
}

func (i TransitRouterVpcAttachmentZoneMappingArray) ToTransitRouterVpcAttachmentZoneMappingArrayOutput() TransitRouterVpcAttachmentZoneMappingArrayOutput {
	return i.ToTransitRouterVpcAttachmentZoneMappingArrayOutputWithContext(context.Background())
}

func (i TransitRouterVpcAttachmentZoneMappingArray) ToTransitRouterVpcAttachmentZoneMappingArrayOutputWithContext(ctx context.Context) TransitRouterVpcAttachmentZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpcAttachmentZoneMappingArrayOutput)
}

type TransitRouterVpcAttachmentZoneMappingOutput struct{ *pulumi.OutputState }

func (TransitRouterVpcAttachmentZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterVpcAttachmentZoneMapping)(nil)).Elem()
}

func (o TransitRouterVpcAttachmentZoneMappingOutput) ToTransitRouterVpcAttachmentZoneMappingOutput() TransitRouterVpcAttachmentZoneMappingOutput {
	return o
}

func (o TransitRouterVpcAttachmentZoneMappingOutput) ToTransitRouterVpcAttachmentZoneMappingOutputWithContext(ctx context.Context) TransitRouterVpcAttachmentZoneMappingOutput {
	return o
}

// The VSwitch id of attachment.
func (o TransitRouterVpcAttachmentZoneMappingOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterVpcAttachmentZoneMapping) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// The zone Id of VSwitch.
func (o TransitRouterVpcAttachmentZoneMappingOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterVpcAttachmentZoneMapping) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type TransitRouterVpcAttachmentZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterVpcAttachmentZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterVpcAttachmentZoneMapping)(nil)).Elem()
}

func (o TransitRouterVpcAttachmentZoneMappingArrayOutput) ToTransitRouterVpcAttachmentZoneMappingArrayOutput() TransitRouterVpcAttachmentZoneMappingArrayOutput {
	return o
}

func (o TransitRouterVpcAttachmentZoneMappingArrayOutput) ToTransitRouterVpcAttachmentZoneMappingArrayOutputWithContext(ctx context.Context) TransitRouterVpcAttachmentZoneMappingArrayOutput {
	return o
}

func (o TransitRouterVpcAttachmentZoneMappingArrayOutput) Index(i pulumi.IntInput) TransitRouterVpcAttachmentZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterVpcAttachmentZoneMapping {
		return vs[0].([]TransitRouterVpcAttachmentZoneMapping)[vs[1].(int)]
	}).(TransitRouterVpcAttachmentZoneMappingOutput)
}

type TransitRouterVpnAttachmentZone struct {
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// TransitRouterVpnAttachmentZoneInput is an input type that accepts TransitRouterVpnAttachmentZoneArgs and TransitRouterVpnAttachmentZoneOutput values.
// You can construct a concrete instance of `TransitRouterVpnAttachmentZoneInput` via:
//
//	TransitRouterVpnAttachmentZoneArgs{...}
type TransitRouterVpnAttachmentZoneInput interface {
	pulumi.Input

	ToTransitRouterVpnAttachmentZoneOutput() TransitRouterVpnAttachmentZoneOutput
	ToTransitRouterVpnAttachmentZoneOutputWithContext(context.Context) TransitRouterVpnAttachmentZoneOutput
}

type TransitRouterVpnAttachmentZoneArgs struct {
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (TransitRouterVpnAttachmentZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterVpnAttachmentZone)(nil)).Elem()
}

func (i TransitRouterVpnAttachmentZoneArgs) ToTransitRouterVpnAttachmentZoneOutput() TransitRouterVpnAttachmentZoneOutput {
	return i.ToTransitRouterVpnAttachmentZoneOutputWithContext(context.Background())
}

func (i TransitRouterVpnAttachmentZoneArgs) ToTransitRouterVpnAttachmentZoneOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpnAttachmentZoneOutput)
}

// TransitRouterVpnAttachmentZoneArrayInput is an input type that accepts TransitRouterVpnAttachmentZoneArray and TransitRouterVpnAttachmentZoneArrayOutput values.
// You can construct a concrete instance of `TransitRouterVpnAttachmentZoneArrayInput` via:
//
//	TransitRouterVpnAttachmentZoneArray{ TransitRouterVpnAttachmentZoneArgs{...} }
type TransitRouterVpnAttachmentZoneArrayInput interface {
	pulumi.Input

	ToTransitRouterVpnAttachmentZoneArrayOutput() TransitRouterVpnAttachmentZoneArrayOutput
	ToTransitRouterVpnAttachmentZoneArrayOutputWithContext(context.Context) TransitRouterVpnAttachmentZoneArrayOutput
}

type TransitRouterVpnAttachmentZoneArray []TransitRouterVpnAttachmentZoneInput

func (TransitRouterVpnAttachmentZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterVpnAttachmentZone)(nil)).Elem()
}

func (i TransitRouterVpnAttachmentZoneArray) ToTransitRouterVpnAttachmentZoneArrayOutput() TransitRouterVpnAttachmentZoneArrayOutput {
	return i.ToTransitRouterVpnAttachmentZoneArrayOutputWithContext(context.Background())
}

func (i TransitRouterVpnAttachmentZoneArray) ToTransitRouterVpnAttachmentZoneArrayOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterVpnAttachmentZoneArrayOutput)
}

type TransitRouterVpnAttachmentZoneOutput struct{ *pulumi.OutputState }

func (TransitRouterVpnAttachmentZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterVpnAttachmentZone)(nil)).Elem()
}

func (o TransitRouterVpnAttachmentZoneOutput) ToTransitRouterVpnAttachmentZoneOutput() TransitRouterVpnAttachmentZoneOutput {
	return o
}

func (o TransitRouterVpnAttachmentZoneOutput) ToTransitRouterVpnAttachmentZoneOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentZoneOutput {
	return o
}

// The id of the zone.
func (o TransitRouterVpnAttachmentZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRouterVpnAttachmentZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type TransitRouterVpnAttachmentZoneArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterVpnAttachmentZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterVpnAttachmentZone)(nil)).Elem()
}

func (o TransitRouterVpnAttachmentZoneArrayOutput) ToTransitRouterVpnAttachmentZoneArrayOutput() TransitRouterVpnAttachmentZoneArrayOutput {
	return o
}

func (o TransitRouterVpnAttachmentZoneArrayOutput) ToTransitRouterVpnAttachmentZoneArrayOutputWithContext(ctx context.Context) TransitRouterVpnAttachmentZoneArrayOutput {
	return o
}

func (o TransitRouterVpnAttachmentZoneArrayOutput) Index(i pulumi.IntInput) TransitRouterVpnAttachmentZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterVpnAttachmentZone {
		return vs[0].([]TransitRouterVpnAttachmentZone)[vs[1].(int)]
	}).(TransitRouterVpnAttachmentZoneOutput)
}

type GetBandwidthLimitsLimit struct {
	// The bandwidth limit configured for the interconnected regions communication.
	BandwidthLimit int `pulumi:"bandwidthLimit"`
	// ID of the CEN instance.
	InstanceId string `pulumi:"instanceId"`
	// ID of local region.
	LocalRegionId string `pulumi:"localRegionId"`
	// ID of opposite region.
	OppositeRegionId string `pulumi:"oppositeRegionId"`
	// Status of the CEN Bandwidth Limit, including "Active" and "Modifying".
	Status string `pulumi:"status"`
}

// GetBandwidthLimitsLimitInput is an input type that accepts GetBandwidthLimitsLimitArgs and GetBandwidthLimitsLimitOutput values.
// You can construct a concrete instance of `GetBandwidthLimitsLimitInput` via:
//
//	GetBandwidthLimitsLimitArgs{...}
type GetBandwidthLimitsLimitInput interface {
	pulumi.Input

	ToGetBandwidthLimitsLimitOutput() GetBandwidthLimitsLimitOutput
	ToGetBandwidthLimitsLimitOutputWithContext(context.Context) GetBandwidthLimitsLimitOutput
}

type GetBandwidthLimitsLimitArgs struct {
	// The bandwidth limit configured for the interconnected regions communication.
	BandwidthLimit pulumi.IntInput `pulumi:"bandwidthLimit"`
	// ID of the CEN instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// ID of local region.
	LocalRegionId pulumi.StringInput `pulumi:"localRegionId"`
	// ID of opposite region.
	OppositeRegionId pulumi.StringInput `pulumi:"oppositeRegionId"`
	// Status of the CEN Bandwidth Limit, including "Active" and "Modifying".
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBandwidthLimitsLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthLimitsLimit)(nil)).Elem()
}

func (i GetBandwidthLimitsLimitArgs) ToGetBandwidthLimitsLimitOutput() GetBandwidthLimitsLimitOutput {
	return i.ToGetBandwidthLimitsLimitOutputWithContext(context.Background())
}

func (i GetBandwidthLimitsLimitArgs) ToGetBandwidthLimitsLimitOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthLimitsLimitOutput)
}

// GetBandwidthLimitsLimitArrayInput is an input type that accepts GetBandwidthLimitsLimitArray and GetBandwidthLimitsLimitArrayOutput values.
// You can construct a concrete instance of `GetBandwidthLimitsLimitArrayInput` via:
//
//	GetBandwidthLimitsLimitArray{ GetBandwidthLimitsLimitArgs{...} }
type GetBandwidthLimitsLimitArrayInput interface {
	pulumi.Input

	ToGetBandwidthLimitsLimitArrayOutput() GetBandwidthLimitsLimitArrayOutput
	ToGetBandwidthLimitsLimitArrayOutputWithContext(context.Context) GetBandwidthLimitsLimitArrayOutput
}

type GetBandwidthLimitsLimitArray []GetBandwidthLimitsLimitInput

func (GetBandwidthLimitsLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthLimitsLimit)(nil)).Elem()
}

func (i GetBandwidthLimitsLimitArray) ToGetBandwidthLimitsLimitArrayOutput() GetBandwidthLimitsLimitArrayOutput {
	return i.ToGetBandwidthLimitsLimitArrayOutputWithContext(context.Background())
}

func (i GetBandwidthLimitsLimitArray) ToGetBandwidthLimitsLimitArrayOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthLimitsLimitArrayOutput)
}

type GetBandwidthLimitsLimitOutput struct{ *pulumi.OutputState }

func (GetBandwidthLimitsLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthLimitsLimit)(nil)).Elem()
}

func (o GetBandwidthLimitsLimitOutput) ToGetBandwidthLimitsLimitOutput() GetBandwidthLimitsLimitOutput {
	return o
}

func (o GetBandwidthLimitsLimitOutput) ToGetBandwidthLimitsLimitOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitOutput {
	return o
}

// The bandwidth limit configured for the interconnected regions communication.
func (o GetBandwidthLimitsLimitOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) int { return v.BandwidthLimit }).(pulumi.IntOutput)
}

// ID of the CEN instance.
func (o GetBandwidthLimitsLimitOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) string { return v.InstanceId }).(pulumi.StringOutput)
}

// ID of local region.
func (o GetBandwidthLimitsLimitOutput) LocalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) string { return v.LocalRegionId }).(pulumi.StringOutput)
}

// ID of opposite region.
func (o GetBandwidthLimitsLimitOutput) OppositeRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) string { return v.OppositeRegionId }).(pulumi.StringOutput)
}

// Status of the CEN Bandwidth Limit, including "Active" and "Modifying".
func (o GetBandwidthLimitsLimitOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthLimitsLimit) string { return v.Status }).(pulumi.StringOutput)
}

type GetBandwidthLimitsLimitArrayOutput struct{ *pulumi.OutputState }

func (GetBandwidthLimitsLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthLimitsLimit)(nil)).Elem()
}

func (o GetBandwidthLimitsLimitArrayOutput) ToGetBandwidthLimitsLimitArrayOutput() GetBandwidthLimitsLimitArrayOutput {
	return o
}

func (o GetBandwidthLimitsLimitArrayOutput) ToGetBandwidthLimitsLimitArrayOutputWithContext(ctx context.Context) GetBandwidthLimitsLimitArrayOutput {
	return o
}

func (o GetBandwidthLimitsLimitArrayOutput) Index(i pulumi.IntInput) GetBandwidthLimitsLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBandwidthLimitsLimit {
		return vs[0].([]GetBandwidthLimitsLimit)[vs[1].(int)]
	}).(GetBandwidthLimitsLimitOutput)
}

type GetBandwidthPackagesPackage struct {
	// The bandwidth in Mbps of the CEN bandwidth package.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing method, including `POSTPAY` and `PREPAY`.
	BandwidthPackageChargeType string `pulumi:"bandwidthPackageChargeType"`
	// Status of the CEN Bandwidth Package, including `Normal`, `FinancialLocked` and `SecurityLocked`.
	BusinessStatus string `pulumi:"businessStatus"`
	// The ID of the bandwidth package.
	CenBandwidthPackageId string `pulumi:"cenBandwidthPackageId"`
	// The name of the bandwidth package.
	CenBandwidthPackageName string `pulumi:"cenBandwidthPackageName"`
	// The list of CEN instances that are associated with the bandwidth package.
	CenIds []string `pulumi:"cenIds"`
	// Description of the CEN Bandwidth Package.
	Description string `pulumi:"description"`
	ExpiredTime string `pulumi:"expiredTime"`
	// Region ID of the interconnected regions.
	GeographicRegionAId string `pulumi:"geographicRegionAId"`
	// Region ID of the interconnected regions.
	GeographicRegionBId string `pulumi:"geographicRegionBId"`
	// The area ID of the cross-area connection.
	GeographicSpanId string `pulumi:"geographicSpanId"`
	// Indicates whether renewal data is involved.
	HasReservationData string `pulumi:"hasReservationData"`
	// ID of the CEN Bandwidth Package.
	Id string `pulumi:"id"`
	// ID of a CEN instance.
	InstanceId string `pulumi:"instanceId"`
	// Indicates whether the bandwidth package is a cross-border bandwidth package.
	IsCrossBorder bool `pulumi:"isCrossBorder"`
	// Name of the CEN Bandwidth Package.
	Name string `pulumi:"name"`
	// The billing method of the bandwidth package.
	PaymentType string `pulumi:"paymentType"`
	// The expiration time of the temporary upgrade.
	ReservationActiveTime string `pulumi:"reservationActiveTime"`
	// The restored bandwidth after the temporary upgrade.
	ReservationBandwidth string `pulumi:"reservationBandwidth"`
	// The billing method after the configuration change.
	ReservationInternetChargeType string `pulumi:"reservationInternetChargeType"`
	// The type of the configuration change.
	ReservationOrderType string `pulumi:"reservationOrderType"`
	// Status of the CEN Bandwidth Package in CEN instance, Valid value: `Idle` and `InUse`.
	Status string `pulumi:"status"`
}

// GetBandwidthPackagesPackageInput is an input type that accepts GetBandwidthPackagesPackageArgs and GetBandwidthPackagesPackageOutput values.
// You can construct a concrete instance of `GetBandwidthPackagesPackageInput` via:
//
//	GetBandwidthPackagesPackageArgs{...}
type GetBandwidthPackagesPackageInput interface {
	pulumi.Input

	ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput
	ToGetBandwidthPackagesPackageOutputWithContext(context.Context) GetBandwidthPackagesPackageOutput
}

type GetBandwidthPackagesPackageArgs struct {
	// The bandwidth in Mbps of the CEN bandwidth package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing method, including `POSTPAY` and `PREPAY`.
	BandwidthPackageChargeType pulumi.StringInput `pulumi:"bandwidthPackageChargeType"`
	// Status of the CEN Bandwidth Package, including `Normal`, `FinancialLocked` and `SecurityLocked`.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The ID of the bandwidth package.
	CenBandwidthPackageId pulumi.StringInput `pulumi:"cenBandwidthPackageId"`
	// The name of the bandwidth package.
	CenBandwidthPackageName pulumi.StringInput `pulumi:"cenBandwidthPackageName"`
	// The list of CEN instances that are associated with the bandwidth package.
	CenIds pulumi.StringArrayInput `pulumi:"cenIds"`
	// Description of the CEN Bandwidth Package.
	Description pulumi.StringInput `pulumi:"description"`
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Region ID of the interconnected regions.
	GeographicRegionAId pulumi.StringInput `pulumi:"geographicRegionAId"`
	// Region ID of the interconnected regions.
	GeographicRegionBId pulumi.StringInput `pulumi:"geographicRegionBId"`
	// The area ID of the cross-area connection.
	GeographicSpanId pulumi.StringInput `pulumi:"geographicSpanId"`
	// Indicates whether renewal data is involved.
	HasReservationData pulumi.StringInput `pulumi:"hasReservationData"`
	// ID of the CEN Bandwidth Package.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of a CEN instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Indicates whether the bandwidth package is a cross-border bandwidth package.
	IsCrossBorder pulumi.BoolInput `pulumi:"isCrossBorder"`
	// Name of the CEN Bandwidth Package.
	Name pulumi.StringInput `pulumi:"name"`
	// The billing method of the bandwidth package.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The expiration time of the temporary upgrade.
	ReservationActiveTime pulumi.StringInput `pulumi:"reservationActiveTime"`
	// The restored bandwidth after the temporary upgrade.
	ReservationBandwidth pulumi.StringInput `pulumi:"reservationBandwidth"`
	// The billing method after the configuration change.
	ReservationInternetChargeType pulumi.StringInput `pulumi:"reservationInternetChargeType"`
	// The type of the configuration change.
	ReservationOrderType pulumi.StringInput `pulumi:"reservationOrderType"`
	// Status of the CEN Bandwidth Package in CEN instance, Valid value: `Idle` and `InUse`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBandwidthPackagesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetBandwidthPackagesPackageArgs) ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput {
	return i.ToGetBandwidthPackagesPackageOutputWithContext(context.Background())
}

func (i GetBandwidthPackagesPackageArgs) ToGetBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthPackagesPackageOutput)
}

// GetBandwidthPackagesPackageArrayInput is an input type that accepts GetBandwidthPackagesPackageArray and GetBandwidthPackagesPackageArrayOutput values.
// You can construct a concrete instance of `GetBandwidthPackagesPackageArrayInput` via:
//
//	GetBandwidthPackagesPackageArray{ GetBandwidthPackagesPackageArgs{...} }
type GetBandwidthPackagesPackageArrayInput interface {
	pulumi.Input

	ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput
	ToGetBandwidthPackagesPackageArrayOutputWithContext(context.Context) GetBandwidthPackagesPackageArrayOutput
}

type GetBandwidthPackagesPackageArray []GetBandwidthPackagesPackageInput

func (GetBandwidthPackagesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetBandwidthPackagesPackageArray) ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput {
	return i.ToGetBandwidthPackagesPackageArrayOutputWithContext(context.Background())
}

func (i GetBandwidthPackagesPackageArray) ToGetBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthPackagesPackageArrayOutput)
}

type GetBandwidthPackagesPackageOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetBandwidthPackagesPackageOutput) ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput {
	return o
}

func (o GetBandwidthPackagesPackageOutput) ToGetBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageOutput {
	return o
}

// The bandwidth in Mbps of the CEN bandwidth package.
func (o GetBandwidthPackagesPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing method, including `POSTPAY` and `PREPAY`.
func (o GetBandwidthPackagesPackageOutput) BandwidthPackageChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthPackageChargeType }).(pulumi.StringOutput)
}

// Status of the CEN Bandwidth Package, including `Normal`, `FinancialLocked` and `SecurityLocked`.
func (o GetBandwidthPackagesPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The ID of the bandwidth package.
func (o GetBandwidthPackagesPackageOutput) CenBandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.CenBandwidthPackageId }).(pulumi.StringOutput)
}

// The name of the bandwidth package.
func (o GetBandwidthPackagesPackageOutput) CenBandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.CenBandwidthPackageName }).(pulumi.StringOutput)
}

// The list of CEN instances that are associated with the bandwidth package.
func (o GetBandwidthPackagesPackageOutput) CenIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) []string { return v.CenIds }).(pulumi.StringArrayOutput)
}

// Description of the CEN Bandwidth Package.
func (o GetBandwidthPackagesPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetBandwidthPackagesPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Region ID of the interconnected regions.
func (o GetBandwidthPackagesPackageOutput) GeographicRegionAId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.GeographicRegionAId }).(pulumi.StringOutput)
}

// Region ID of the interconnected regions.
func (o GetBandwidthPackagesPackageOutput) GeographicRegionBId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.GeographicRegionBId }).(pulumi.StringOutput)
}

// The area ID of the cross-area connection.
func (o GetBandwidthPackagesPackageOutput) GeographicSpanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.GeographicSpanId }).(pulumi.StringOutput)
}

// Indicates whether renewal data is involved.
func (o GetBandwidthPackagesPackageOutput) HasReservationData() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.HasReservationData }).(pulumi.StringOutput)
}

// ID of the CEN Bandwidth Package.
func (o GetBandwidthPackagesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// ID of a CEN instance.
func (o GetBandwidthPackagesPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates whether the bandwidth package is a cross-border bandwidth package.
func (o GetBandwidthPackagesPackageOutput) IsCrossBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) bool { return v.IsCrossBorder }).(pulumi.BoolOutput)
}

// Name of the CEN Bandwidth Package.
func (o GetBandwidthPackagesPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Name }).(pulumi.StringOutput)
}

// The billing method of the bandwidth package.
func (o GetBandwidthPackagesPackageOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The expiration time of the temporary upgrade.
func (o GetBandwidthPackagesPackageOutput) ReservationActiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ReservationActiveTime }).(pulumi.StringOutput)
}

// The restored bandwidth after the temporary upgrade.
func (o GetBandwidthPackagesPackageOutput) ReservationBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ReservationBandwidth }).(pulumi.StringOutput)
}

// The billing method after the configuration change.
func (o GetBandwidthPackagesPackageOutput) ReservationInternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ReservationInternetChargeType }).(pulumi.StringOutput)
}

// The type of the configuration change.
func (o GetBandwidthPackagesPackageOutput) ReservationOrderType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ReservationOrderType }).(pulumi.StringOutput)
}

// Status of the CEN Bandwidth Package in CEN instance, Valid value: `Idle` and `InUse`.
func (o GetBandwidthPackagesPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Status }).(pulumi.StringOutput)
}

type GetBandwidthPackagesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetBandwidthPackagesPackageArrayOutput) ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetBandwidthPackagesPackageArrayOutput) ToGetBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetBandwidthPackagesPackageArrayOutput) Index(i pulumi.IntInput) GetBandwidthPackagesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBandwidthPackagesPackage {
		return vs[0].([]GetBandwidthPackagesPackage)[vs[1].(int)]
	}).(GetBandwidthPackagesPackageOutput)
}

type GetChildInstanceRouteEntryToAttachmentsAttachment struct {
	// The ID of the CEN instance.
	CenId string `pulumi:"cenId"`
	// The first ID of the resource
	ChildInstanceRouteTableId string `pulumi:"childInstanceRouteTableId"`
	// DestinationCidrBlock
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The ID of the resource. The value is formulated as `<cen_id>:<child_instance_route_table_id>:<transit_router_attachment_id>:<destination_cidr_block>`.
	Id string `pulumi:"id"`
	// ServiceType
	ServiceType string `pulumi:"serviceType"`
	// The status of the resource
	Status string `pulumi:"status"`
	// TransitRouterAttachmentId
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
}

// GetChildInstanceRouteEntryToAttachmentsAttachmentInput is an input type that accepts GetChildInstanceRouteEntryToAttachmentsAttachmentArgs and GetChildInstanceRouteEntryToAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetChildInstanceRouteEntryToAttachmentsAttachmentInput` via:
//
//	GetChildInstanceRouteEntryToAttachmentsAttachmentArgs{...}
type GetChildInstanceRouteEntryToAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutput() GetChildInstanceRouteEntryToAttachmentsAttachmentOutput
	ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutputWithContext(context.Context) GetChildInstanceRouteEntryToAttachmentsAttachmentOutput
}

type GetChildInstanceRouteEntryToAttachmentsAttachmentArgs struct {
	// The ID of the CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The first ID of the resource
	ChildInstanceRouteTableId pulumi.StringInput `pulumi:"childInstanceRouteTableId"`
	// DestinationCidrBlock
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The ID of the resource. The value is formulated as `<cen_id>:<child_instance_route_table_id>:<transit_router_attachment_id>:<destination_cidr_block>`.
	Id pulumi.StringInput `pulumi:"id"`
	// ServiceType
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// TransitRouterAttachmentId
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
}

func (GetChildInstanceRouteEntryToAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChildInstanceRouteEntryToAttachmentsAttachment)(nil)).Elem()
}

func (i GetChildInstanceRouteEntryToAttachmentsAttachmentArgs) ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutput() GetChildInstanceRouteEntryToAttachmentsAttachmentOutput {
	return i.ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetChildInstanceRouteEntryToAttachmentsAttachmentArgs) ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutputWithContext(ctx context.Context) GetChildInstanceRouteEntryToAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChildInstanceRouteEntryToAttachmentsAttachmentOutput)
}

// GetChildInstanceRouteEntryToAttachmentsAttachmentArrayInput is an input type that accepts GetChildInstanceRouteEntryToAttachmentsAttachmentArray and GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetChildInstanceRouteEntryToAttachmentsAttachmentArrayInput` via:
//
//	GetChildInstanceRouteEntryToAttachmentsAttachmentArray{ GetChildInstanceRouteEntryToAttachmentsAttachmentArgs{...} }
type GetChildInstanceRouteEntryToAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput() GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput
	ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutputWithContext(context.Context) GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput
}

type GetChildInstanceRouteEntryToAttachmentsAttachmentArray []GetChildInstanceRouteEntryToAttachmentsAttachmentInput

func (GetChildInstanceRouteEntryToAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChildInstanceRouteEntryToAttachmentsAttachment)(nil)).Elem()
}

func (i GetChildInstanceRouteEntryToAttachmentsAttachmentArray) ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput() GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput {
	return i.ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetChildInstanceRouteEntryToAttachmentsAttachmentArray) ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput)
}

type GetChildInstanceRouteEntryToAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChildInstanceRouteEntryToAttachmentsAttachment)(nil)).Elem()
}

func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutput() GetChildInstanceRouteEntryToAttachmentsAttachmentOutput {
	return o
}

func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) ToGetChildInstanceRouteEntryToAttachmentsAttachmentOutputWithContext(ctx context.Context) GetChildInstanceRouteEntryToAttachmentsAttachmentOutput {
	return o
}

// The ID of the CEN instance.
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.CenId }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) ChildInstanceRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.ChildInstanceRouteTableId }).(pulumi.StringOutput)
}

// DestinationCidrBlock
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The ID of the resource. The value is formulated as `<cen_id>:<child_instance_route_table_id>:<transit_router_attachment_id>:<destination_cidr_block>`.
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// ServiceType
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The status of the resource
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// TransitRouterAttachmentId
func (o GetChildInstanceRouteEntryToAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChildInstanceRouteEntryToAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

type GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChildInstanceRouteEntryToAttachmentsAttachment)(nil)).Elem()
}

func (o GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput) ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput() GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput) ToGetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetChildInstanceRouteEntryToAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChildInstanceRouteEntryToAttachmentsAttachment {
		return vs[0].([]GetChildInstanceRouteEntryToAttachmentsAttachment)[vs[1].(int)]
	}).(GetChildInstanceRouteEntryToAttachmentsAttachmentOutput)
}

type GetFlowlogsFlowlog struct {
	// The ID of the CEN Instance.
	CenId string `pulumi:"cenId"`
	// The description of flowlog.
	Description string `pulumi:"description"`
	// ID of the CEN flow log.
	FlowLogId string `pulumi:"flowLogId"`
	// The name of flowlog.
	FlowLogName string `pulumi:"flowLogName"`
	// ID of the CEN flow log.
	Id string `pulumi:"id"`
	// The name of the log store which is in the  `projectName` SLS project.
	LogStoreName string `pulumi:"logStoreName"`
	// The name of the SLS project.
	ProjectName string `pulumi:"projectName"`
	// The status of flowlog. Valid values: ["Active", "Inactive"]. Default to "Active".
	Status string `pulumi:"status"`
}

// GetFlowlogsFlowlogInput is an input type that accepts GetFlowlogsFlowlogArgs and GetFlowlogsFlowlogOutput values.
// You can construct a concrete instance of `GetFlowlogsFlowlogInput` via:
//
//	GetFlowlogsFlowlogArgs{...}
type GetFlowlogsFlowlogInput interface {
	pulumi.Input

	ToGetFlowlogsFlowlogOutput() GetFlowlogsFlowlogOutput
	ToGetFlowlogsFlowlogOutputWithContext(context.Context) GetFlowlogsFlowlogOutput
}

type GetFlowlogsFlowlogArgs struct {
	// The ID of the CEN Instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The description of flowlog.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the CEN flow log.
	FlowLogId pulumi.StringInput `pulumi:"flowLogId"`
	// The name of flowlog.
	FlowLogName pulumi.StringInput `pulumi:"flowLogName"`
	// ID of the CEN flow log.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the log store which is in the  `projectName` SLS project.
	LogStoreName pulumi.StringInput `pulumi:"logStoreName"`
	// The name of the SLS project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of flowlog. Valid values: ["Active", "Inactive"]. Default to "Active".
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetFlowlogsFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowlogsFlowlog)(nil)).Elem()
}

func (i GetFlowlogsFlowlogArgs) ToGetFlowlogsFlowlogOutput() GetFlowlogsFlowlogOutput {
	return i.ToGetFlowlogsFlowlogOutputWithContext(context.Background())
}

func (i GetFlowlogsFlowlogArgs) ToGetFlowlogsFlowlogOutputWithContext(ctx context.Context) GetFlowlogsFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowlogsFlowlogOutput)
}

// GetFlowlogsFlowlogArrayInput is an input type that accepts GetFlowlogsFlowlogArray and GetFlowlogsFlowlogArrayOutput values.
// You can construct a concrete instance of `GetFlowlogsFlowlogArrayInput` via:
//
//	GetFlowlogsFlowlogArray{ GetFlowlogsFlowlogArgs{...} }
type GetFlowlogsFlowlogArrayInput interface {
	pulumi.Input

	ToGetFlowlogsFlowlogArrayOutput() GetFlowlogsFlowlogArrayOutput
	ToGetFlowlogsFlowlogArrayOutputWithContext(context.Context) GetFlowlogsFlowlogArrayOutput
}

type GetFlowlogsFlowlogArray []GetFlowlogsFlowlogInput

func (GetFlowlogsFlowlogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowlogsFlowlog)(nil)).Elem()
}

func (i GetFlowlogsFlowlogArray) ToGetFlowlogsFlowlogArrayOutput() GetFlowlogsFlowlogArrayOutput {
	return i.ToGetFlowlogsFlowlogArrayOutputWithContext(context.Background())
}

func (i GetFlowlogsFlowlogArray) ToGetFlowlogsFlowlogArrayOutputWithContext(ctx context.Context) GetFlowlogsFlowlogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowlogsFlowlogArrayOutput)
}

type GetFlowlogsFlowlogOutput struct{ *pulumi.OutputState }

func (GetFlowlogsFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowlogsFlowlog)(nil)).Elem()
}

func (o GetFlowlogsFlowlogOutput) ToGetFlowlogsFlowlogOutput() GetFlowlogsFlowlogOutput {
	return o
}

func (o GetFlowlogsFlowlogOutput) ToGetFlowlogsFlowlogOutputWithContext(ctx context.Context) GetFlowlogsFlowlogOutput {
	return o
}

// The ID of the CEN Instance.
func (o GetFlowlogsFlowlogOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.CenId }).(pulumi.StringOutput)
}

// The description of flowlog.
func (o GetFlowlogsFlowlogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the CEN flow log.
func (o GetFlowlogsFlowlogOutput) FlowLogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.FlowLogId }).(pulumi.StringOutput)
}

// The name of flowlog.
func (o GetFlowlogsFlowlogOutput) FlowLogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.FlowLogName }).(pulumi.StringOutput)
}

// ID of the CEN flow log.
func (o GetFlowlogsFlowlogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the log store which is in the  `projectName` SLS project.
func (o GetFlowlogsFlowlogOutput) LogStoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.LogStoreName }).(pulumi.StringOutput)
}

// The name of the SLS project.
func (o GetFlowlogsFlowlogOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of flowlog. Valid values: ["Active", "Inactive"]. Default to "Active".
func (o GetFlowlogsFlowlogOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowlogsFlowlog) string { return v.Status }).(pulumi.StringOutput)
}

type GetFlowlogsFlowlogArrayOutput struct{ *pulumi.OutputState }

func (GetFlowlogsFlowlogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowlogsFlowlog)(nil)).Elem()
}

func (o GetFlowlogsFlowlogArrayOutput) ToGetFlowlogsFlowlogArrayOutput() GetFlowlogsFlowlogArrayOutput {
	return o
}

func (o GetFlowlogsFlowlogArrayOutput) ToGetFlowlogsFlowlogArrayOutputWithContext(ctx context.Context) GetFlowlogsFlowlogArrayOutput {
	return o
}

func (o GetFlowlogsFlowlogArrayOutput) Index(i pulumi.IntInput) GetFlowlogsFlowlogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowlogsFlowlog {
		return vs[0].([]GetFlowlogsFlowlog)[vs[1].(int)]
	}).(GetFlowlogsFlowlogOutput)
}

type GetInstanceAttachmentsAttachment struct {
	// The time when the network is associated with the CEN instance.
	ChildInstanceAttachTime string `pulumi:"childInstanceAttachTime"`
	// The ID of the network.
	ChildInstanceId string `pulumi:"childInstanceId"`
	// The ID of the account to which the network belongs.
	ChildInstanceOwnerId int `pulumi:"childInstanceOwnerId"`
	// The region to which the network to be queried belongs.
	ChildInstanceRegionId string `pulumi:"childInstanceRegionId"`
	// The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
	ChildInstanceType string `pulumi:"childInstanceType"`
	// The ID of the CEN Instance Attachment.
	Id string `pulumi:"id"`
	// The ID of the CEN instance.
	InstanceId string `pulumi:"instanceId"`
	// The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
	Status string `pulumi:"status"`
}

// GetInstanceAttachmentsAttachmentInput is an input type that accepts GetInstanceAttachmentsAttachmentArgs and GetInstanceAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetInstanceAttachmentsAttachmentInput` via:
//
//	GetInstanceAttachmentsAttachmentArgs{...}
type GetInstanceAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetInstanceAttachmentsAttachmentOutput() GetInstanceAttachmentsAttachmentOutput
	ToGetInstanceAttachmentsAttachmentOutputWithContext(context.Context) GetInstanceAttachmentsAttachmentOutput
}

type GetInstanceAttachmentsAttachmentArgs struct {
	// The time when the network is associated with the CEN instance.
	ChildInstanceAttachTime pulumi.StringInput `pulumi:"childInstanceAttachTime"`
	// The ID of the network.
	ChildInstanceId pulumi.StringInput `pulumi:"childInstanceId"`
	// The ID of the account to which the network belongs.
	ChildInstanceOwnerId pulumi.IntInput `pulumi:"childInstanceOwnerId"`
	// The region to which the network to be queried belongs.
	ChildInstanceRegionId pulumi.StringInput `pulumi:"childInstanceRegionId"`
	// The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
	ChildInstanceType pulumi.StringInput `pulumi:"childInstanceType"`
	// The ID of the CEN Instance Attachment.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the CEN instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetInstanceAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (i GetInstanceAttachmentsAttachmentArgs) ToGetInstanceAttachmentsAttachmentOutput() GetInstanceAttachmentsAttachmentOutput {
	return i.ToGetInstanceAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetInstanceAttachmentsAttachmentArgs) ToGetInstanceAttachmentsAttachmentOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAttachmentsAttachmentOutput)
}

// GetInstanceAttachmentsAttachmentArrayInput is an input type that accepts GetInstanceAttachmentsAttachmentArray and GetInstanceAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetInstanceAttachmentsAttachmentArrayInput` via:
//
//	GetInstanceAttachmentsAttachmentArray{ GetInstanceAttachmentsAttachmentArgs{...} }
type GetInstanceAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetInstanceAttachmentsAttachmentArrayOutput() GetInstanceAttachmentsAttachmentArrayOutput
	ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(context.Context) GetInstanceAttachmentsAttachmentArrayOutput
}

type GetInstanceAttachmentsAttachmentArray []GetInstanceAttachmentsAttachmentInput

func (GetInstanceAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (i GetInstanceAttachmentsAttachmentArray) ToGetInstanceAttachmentsAttachmentArrayOutput() GetInstanceAttachmentsAttachmentArrayOutput {
	return i.ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetInstanceAttachmentsAttachmentArray) ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAttachmentsAttachmentArrayOutput)
}

type GetInstanceAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetInstanceAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (o GetInstanceAttachmentsAttachmentOutput) ToGetInstanceAttachmentsAttachmentOutput() GetInstanceAttachmentsAttachmentOutput {
	return o
}

func (o GetInstanceAttachmentsAttachmentOutput) ToGetInstanceAttachmentsAttachmentOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentOutput {
	return o
}

// The time when the network is associated with the CEN instance.
func (o GetInstanceAttachmentsAttachmentOutput) ChildInstanceAttachTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.ChildInstanceAttachTime }).(pulumi.StringOutput)
}

// The ID of the network.
func (o GetInstanceAttachmentsAttachmentOutput) ChildInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.ChildInstanceId }).(pulumi.StringOutput)
}

// The ID of the account to which the network belongs.
func (o GetInstanceAttachmentsAttachmentOutput) ChildInstanceOwnerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) int { return v.ChildInstanceOwnerId }).(pulumi.IntOutput)
}

// The region to which the network to be queried belongs.
func (o GetInstanceAttachmentsAttachmentOutput) ChildInstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.ChildInstanceRegionId }).(pulumi.StringOutput)
}

// The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
func (o GetInstanceAttachmentsAttachmentOutput) ChildInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.ChildInstanceType }).(pulumi.StringOutput)
}

// The ID of the CEN Instance Attachment.
func (o GetInstanceAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the CEN instance.
func (o GetInstanceAttachmentsAttachmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
func (o GetInstanceAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

type GetInstanceAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAttachmentsAttachment)(nil)).Elem()
}

func (o GetInstanceAttachmentsAttachmentArrayOutput) ToGetInstanceAttachmentsAttachmentArrayOutput() GetInstanceAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetInstanceAttachmentsAttachmentArrayOutput) ToGetInstanceAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetInstanceAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetInstanceAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetInstanceAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAttachmentsAttachment {
		return vs[0].([]GetInstanceAttachmentsAttachment)[vs[1].(int)]
	}).(GetInstanceAttachmentsAttachmentOutput)
}

type GetInstancesInstance struct {
	// List of CEN Bandwidth Package IDs in the specified CEN instance.
	CenBandwidthPackageIds []string `pulumi:"cenBandwidthPackageIds"`
	// ID of the CEN instance.
	CenId string `pulumi:"cenId"`
	// Name of the CEN instance.
	CenInstanceName string `pulumi:"cenInstanceName"`
	// The creation time of the CEN Instance.
	CreateTime string `pulumi:"createTime"`
	// Description of the CEN instance.
	Description string `pulumi:"description"`
	// ID of the CEN instance.
	Id string `pulumi:"id"`
	// Name of the CEN instance.
	Name string `pulumi:"name"`
	// Indicates the allowed level of CIDR block overlapping.
	ProtectionLevel string `pulumi:"protectionLevel"`
	// The status of CEN instance. Valid value: `Active`, `Creating` and `Deleting`.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// List of CEN Bandwidth Package IDs in the specified CEN instance.
	CenBandwidthPackageIds pulumi.StringArrayInput `pulumi:"cenBandwidthPackageIds"`
	// ID of the CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// Name of the CEN instance.
	CenInstanceName pulumi.StringInput `pulumi:"cenInstanceName"`
	// The creation time of the CEN Instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of the CEN instance.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the CEN instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the CEN instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the allowed level of CIDR block overlapping.
	ProtectionLevel pulumi.StringInput `pulumi:"protectionLevel"`
	// The status of CEN instance. Valid value: `Active`, `Creating` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// List of CEN Bandwidth Package IDs in the specified CEN instance.
func (o GetInstancesInstanceOutput) CenBandwidthPackageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.CenBandwidthPackageIds }).(pulumi.StringArrayOutput)
}

// ID of the CEN instance.
func (o GetInstancesInstanceOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CenId }).(pulumi.StringOutput)
}

// Name of the CEN instance.
func (o GetInstancesInstanceOutput) CenInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CenInstanceName }).(pulumi.StringOutput)
}

// The creation time of the CEN Instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the CEN instance.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the CEN instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the CEN instance.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the allowed level of CIDR block overlapping.
func (o GetInstancesInstanceOutput) ProtectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ProtectionLevel }).(pulumi.StringOutput)
}

// The status of CEN instance. Valid value: `Active`, `Creating` and `Deleting`.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInterRegionTrafficQosPoliciesPolicy struct {
	// The ID of the Inter Region Traffic Qos Policy.
	Id string `pulumi:"id"`
	// The description of the Inter Region Traffic Qos Policy.
	InterRegionTrafficQosPolicyDescription string `pulumi:"interRegionTrafficQosPolicyDescription"`
	// The ID of the Inter Region Traffic Qos Policy.
	InterRegionTrafficQosPolicyId string `pulumi:"interRegionTrafficQosPolicyId"`
	// The name of the Inter Region Traffic Qos Policy.
	InterRegionTrafficQosPolicyName string `pulumi:"interRegionTrafficQosPolicyName"`
	// The status of the traffic scheduling policy. Valid Value: `Creating`, `Active`, `Modifying`, `Deleting`, `Deleted`.
	Status string `pulumi:"status"`
	// The ID of the inter-region connection.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
}

// GetInterRegionTrafficQosPoliciesPolicyInput is an input type that accepts GetInterRegionTrafficQosPoliciesPolicyArgs and GetInterRegionTrafficQosPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetInterRegionTrafficQosPoliciesPolicyInput` via:
//
//	GetInterRegionTrafficQosPoliciesPolicyArgs{...}
type GetInterRegionTrafficQosPoliciesPolicyInput interface {
	pulumi.Input

	ToGetInterRegionTrafficQosPoliciesPolicyOutput() GetInterRegionTrafficQosPoliciesPolicyOutput
	ToGetInterRegionTrafficQosPoliciesPolicyOutputWithContext(context.Context) GetInterRegionTrafficQosPoliciesPolicyOutput
}

type GetInterRegionTrafficQosPoliciesPolicyArgs struct {
	// The ID of the Inter Region Traffic Qos Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The description of the Inter Region Traffic Qos Policy.
	InterRegionTrafficQosPolicyDescription pulumi.StringInput `pulumi:"interRegionTrafficQosPolicyDescription"`
	// The ID of the Inter Region Traffic Qos Policy.
	InterRegionTrafficQosPolicyId pulumi.StringInput `pulumi:"interRegionTrafficQosPolicyId"`
	// The name of the Inter Region Traffic Qos Policy.
	InterRegionTrafficQosPolicyName pulumi.StringInput `pulumi:"interRegionTrafficQosPolicyName"`
	// The status of the traffic scheduling policy. Valid Value: `Creating`, `Active`, `Modifying`, `Deleting`, `Deleted`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the inter-region connection.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
}

func (GetInterRegionTrafficQosPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterRegionTrafficQosPoliciesPolicy)(nil)).Elem()
}

func (i GetInterRegionTrafficQosPoliciesPolicyArgs) ToGetInterRegionTrafficQosPoliciesPolicyOutput() GetInterRegionTrafficQosPoliciesPolicyOutput {
	return i.ToGetInterRegionTrafficQosPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetInterRegionTrafficQosPoliciesPolicyArgs) ToGetInterRegionTrafficQosPoliciesPolicyOutputWithContext(ctx context.Context) GetInterRegionTrafficQosPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterRegionTrafficQosPoliciesPolicyOutput)
}

// GetInterRegionTrafficQosPoliciesPolicyArrayInput is an input type that accepts GetInterRegionTrafficQosPoliciesPolicyArray and GetInterRegionTrafficQosPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetInterRegionTrafficQosPoliciesPolicyArrayInput` via:
//
//	GetInterRegionTrafficQosPoliciesPolicyArray{ GetInterRegionTrafficQosPoliciesPolicyArgs{...} }
type GetInterRegionTrafficQosPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetInterRegionTrafficQosPoliciesPolicyArrayOutput() GetInterRegionTrafficQosPoliciesPolicyArrayOutput
	ToGetInterRegionTrafficQosPoliciesPolicyArrayOutputWithContext(context.Context) GetInterRegionTrafficQosPoliciesPolicyArrayOutput
}

type GetInterRegionTrafficQosPoliciesPolicyArray []GetInterRegionTrafficQosPoliciesPolicyInput

func (GetInterRegionTrafficQosPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterRegionTrafficQosPoliciesPolicy)(nil)).Elem()
}

func (i GetInterRegionTrafficQosPoliciesPolicyArray) ToGetInterRegionTrafficQosPoliciesPolicyArrayOutput() GetInterRegionTrafficQosPoliciesPolicyArrayOutput {
	return i.ToGetInterRegionTrafficQosPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetInterRegionTrafficQosPoliciesPolicyArray) ToGetInterRegionTrafficQosPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetInterRegionTrafficQosPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterRegionTrafficQosPoliciesPolicyArrayOutput)
}

type GetInterRegionTrafficQosPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetInterRegionTrafficQosPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterRegionTrafficQosPoliciesPolicy)(nil)).Elem()
}

func (o GetInterRegionTrafficQosPoliciesPolicyOutput) ToGetInterRegionTrafficQosPoliciesPolicyOutput() GetInterRegionTrafficQosPoliciesPolicyOutput {
	return o
}

func (o GetInterRegionTrafficQosPoliciesPolicyOutput) ToGetInterRegionTrafficQosPoliciesPolicyOutputWithContext(ctx context.Context) GetInterRegionTrafficQosPoliciesPolicyOutput {
	return o
}

// The ID of the Inter Region Traffic Qos Policy.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The description of the Inter Region Traffic Qos Policy.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) InterRegionTrafficQosPolicyDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.InterRegionTrafficQosPolicyDescription }).(pulumi.StringOutput)
}

// The ID of the Inter Region Traffic Qos Policy.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) InterRegionTrafficQosPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.InterRegionTrafficQosPolicyId }).(pulumi.StringOutput)
}

// The name of the Inter Region Traffic Qos Policy.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) InterRegionTrafficQosPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.InterRegionTrafficQosPolicyName }).(pulumi.StringOutput)
}

// The status of the traffic scheduling policy. Valid Value: `Creating`, `Active`, `Modifying`, `Deleting`, `Deleted`.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the inter-region connection.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o GetInterRegionTrafficQosPoliciesPolicyOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosPoliciesPolicy) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

type GetInterRegionTrafficQosPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetInterRegionTrafficQosPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterRegionTrafficQosPoliciesPolicy)(nil)).Elem()
}

func (o GetInterRegionTrafficQosPoliciesPolicyArrayOutput) ToGetInterRegionTrafficQosPoliciesPolicyArrayOutput() GetInterRegionTrafficQosPoliciesPolicyArrayOutput {
	return o
}

func (o GetInterRegionTrafficQosPoliciesPolicyArrayOutput) ToGetInterRegionTrafficQosPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetInterRegionTrafficQosPoliciesPolicyArrayOutput {
	return o
}

func (o GetInterRegionTrafficQosPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetInterRegionTrafficQosPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterRegionTrafficQosPoliciesPolicy {
		return vs[0].([]GetInterRegionTrafficQosPoliciesPolicy)[vs[1].(int)]
	}).(GetInterRegionTrafficQosPoliciesPolicyOutput)
}

type GetInterRegionTrafficQosQueuesQueue struct {
	// The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
	Dscps []string `pulumi:"dscps"`
	Id    string   `pulumi:"id"`
	// The description information of the traffic scheduling policy.
	InterRegionTrafficQosQueueDescription string `pulumi:"interRegionTrafficQosQueueDescription"`
	// The ID of the resource.
	InterRegionTrafficQosQueueId string `pulumi:"interRegionTrafficQosQueueId"`
	// The name of the traffic scheduling policy.
	InterRegionTrafficQosQueueName string `pulumi:"interRegionTrafficQosQueueName"`
	// The percentage of cross-region bandwidth that the current queue can use.
	RemainBandwidthPercent int `pulumi:"remainBandwidthPercent"`
	// The status of the traffic scheduling policy. -**Creating**: The function is being created.-**Active**: available.-**Modifying**: is being modified.-**Deleting**: Deleted.-**Deleted**: Deleted.
	Status string `pulumi:"status"`
	// The ID of the traffic scheduling policy.
	TrafficQosPolicyId string `pulumi:"trafficQosPolicyId"`
}

// GetInterRegionTrafficQosQueuesQueueInput is an input type that accepts GetInterRegionTrafficQosQueuesQueueArgs and GetInterRegionTrafficQosQueuesQueueOutput values.
// You can construct a concrete instance of `GetInterRegionTrafficQosQueuesQueueInput` via:
//
//	GetInterRegionTrafficQosQueuesQueueArgs{...}
type GetInterRegionTrafficQosQueuesQueueInput interface {
	pulumi.Input

	ToGetInterRegionTrafficQosQueuesQueueOutput() GetInterRegionTrafficQosQueuesQueueOutput
	ToGetInterRegionTrafficQosQueuesQueueOutputWithContext(context.Context) GetInterRegionTrafficQosQueuesQueueOutput
}

type GetInterRegionTrafficQosQueuesQueueArgs struct {
	// The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
	Dscps pulumi.StringArrayInput `pulumi:"dscps"`
	Id    pulumi.StringInput      `pulumi:"id"`
	// The description information of the traffic scheduling policy.
	InterRegionTrafficQosQueueDescription pulumi.StringInput `pulumi:"interRegionTrafficQosQueueDescription"`
	// The ID of the resource.
	InterRegionTrafficQosQueueId pulumi.StringInput `pulumi:"interRegionTrafficQosQueueId"`
	// The name of the traffic scheduling policy.
	InterRegionTrafficQosQueueName pulumi.StringInput `pulumi:"interRegionTrafficQosQueueName"`
	// The percentage of cross-region bandwidth that the current queue can use.
	RemainBandwidthPercent pulumi.IntInput `pulumi:"remainBandwidthPercent"`
	// The status of the traffic scheduling policy. -**Creating**: The function is being created.-**Active**: available.-**Modifying**: is being modified.-**Deleting**: Deleted.-**Deleted**: Deleted.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the traffic scheduling policy.
	TrafficQosPolicyId pulumi.StringInput `pulumi:"trafficQosPolicyId"`
}

func (GetInterRegionTrafficQosQueuesQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterRegionTrafficQosQueuesQueue)(nil)).Elem()
}

func (i GetInterRegionTrafficQosQueuesQueueArgs) ToGetInterRegionTrafficQosQueuesQueueOutput() GetInterRegionTrafficQosQueuesQueueOutput {
	return i.ToGetInterRegionTrafficQosQueuesQueueOutputWithContext(context.Background())
}

func (i GetInterRegionTrafficQosQueuesQueueArgs) ToGetInterRegionTrafficQosQueuesQueueOutputWithContext(ctx context.Context) GetInterRegionTrafficQosQueuesQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterRegionTrafficQosQueuesQueueOutput)
}

// GetInterRegionTrafficQosQueuesQueueArrayInput is an input type that accepts GetInterRegionTrafficQosQueuesQueueArray and GetInterRegionTrafficQosQueuesQueueArrayOutput values.
// You can construct a concrete instance of `GetInterRegionTrafficQosQueuesQueueArrayInput` via:
//
//	GetInterRegionTrafficQosQueuesQueueArray{ GetInterRegionTrafficQosQueuesQueueArgs{...} }
type GetInterRegionTrafficQosQueuesQueueArrayInput interface {
	pulumi.Input

	ToGetInterRegionTrafficQosQueuesQueueArrayOutput() GetInterRegionTrafficQosQueuesQueueArrayOutput
	ToGetInterRegionTrafficQosQueuesQueueArrayOutputWithContext(context.Context) GetInterRegionTrafficQosQueuesQueueArrayOutput
}

type GetInterRegionTrafficQosQueuesQueueArray []GetInterRegionTrafficQosQueuesQueueInput

func (GetInterRegionTrafficQosQueuesQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterRegionTrafficQosQueuesQueue)(nil)).Elem()
}

func (i GetInterRegionTrafficQosQueuesQueueArray) ToGetInterRegionTrafficQosQueuesQueueArrayOutput() GetInterRegionTrafficQosQueuesQueueArrayOutput {
	return i.ToGetInterRegionTrafficQosQueuesQueueArrayOutputWithContext(context.Background())
}

func (i GetInterRegionTrafficQosQueuesQueueArray) ToGetInterRegionTrafficQosQueuesQueueArrayOutputWithContext(ctx context.Context) GetInterRegionTrafficQosQueuesQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterRegionTrafficQosQueuesQueueArrayOutput)
}

type GetInterRegionTrafficQosQueuesQueueOutput struct{ *pulumi.OutputState }

func (GetInterRegionTrafficQosQueuesQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterRegionTrafficQosQueuesQueue)(nil)).Elem()
}

func (o GetInterRegionTrafficQosQueuesQueueOutput) ToGetInterRegionTrafficQosQueuesQueueOutput() GetInterRegionTrafficQosQueuesQueueOutput {
	return o
}

func (o GetInterRegionTrafficQosQueuesQueueOutput) ToGetInterRegionTrafficQosQueuesQueueOutputWithContext(ctx context.Context) GetInterRegionTrafficQosQueuesQueueOutput {
	return o
}

// The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
func (o GetInterRegionTrafficQosQueuesQueueOutput) Dscps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) []string { return v.Dscps }).(pulumi.StringArrayOutput)
}

func (o GetInterRegionTrafficQosQueuesQueueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) string { return v.Id }).(pulumi.StringOutput)
}

// The description information of the traffic scheduling policy.
func (o GetInterRegionTrafficQosQueuesQueueOutput) InterRegionTrafficQosQueueDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) string { return v.InterRegionTrafficQosQueueDescription }).(pulumi.StringOutput)
}

// The ID of the resource.
func (o GetInterRegionTrafficQosQueuesQueueOutput) InterRegionTrafficQosQueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) string { return v.InterRegionTrafficQosQueueId }).(pulumi.StringOutput)
}

// The name of the traffic scheduling policy.
func (o GetInterRegionTrafficQosQueuesQueueOutput) InterRegionTrafficQosQueueName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) string { return v.InterRegionTrafficQosQueueName }).(pulumi.StringOutput)
}

// The percentage of cross-region bandwidth that the current queue can use.
func (o GetInterRegionTrafficQosQueuesQueueOutput) RemainBandwidthPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) int { return v.RemainBandwidthPercent }).(pulumi.IntOutput)
}

// The status of the traffic scheduling policy. -**Creating**: The function is being created.-**Active**: available.-**Modifying**: is being modified.-**Deleting**: Deleted.-**Deleted**: Deleted.
func (o GetInterRegionTrafficQosQueuesQueueOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the traffic scheduling policy.
func (o GetInterRegionTrafficQosQueuesQueueOutput) TrafficQosPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterRegionTrafficQosQueuesQueue) string { return v.TrafficQosPolicyId }).(pulumi.StringOutput)
}

type GetInterRegionTrafficQosQueuesQueueArrayOutput struct{ *pulumi.OutputState }

func (GetInterRegionTrafficQosQueuesQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterRegionTrafficQosQueuesQueue)(nil)).Elem()
}

func (o GetInterRegionTrafficQosQueuesQueueArrayOutput) ToGetInterRegionTrafficQosQueuesQueueArrayOutput() GetInterRegionTrafficQosQueuesQueueArrayOutput {
	return o
}

func (o GetInterRegionTrafficQosQueuesQueueArrayOutput) ToGetInterRegionTrafficQosQueuesQueueArrayOutputWithContext(ctx context.Context) GetInterRegionTrafficQosQueuesQueueArrayOutput {
	return o
}

func (o GetInterRegionTrafficQosQueuesQueueArrayOutput) Index(i pulumi.IntInput) GetInterRegionTrafficQosQueuesQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterRegionTrafficQosQueuesQueue {
		return vs[0].([]GetInterRegionTrafficQosQueuesQueue)[vs[1].(int)]
	}).(GetInterRegionTrafficQosQueuesQueueOutput)
}

type GetPrivateZonesZone struct {
	// The access region. The access region is the region of the cloud resource that accesses the PrivateZone service through CEN.
	AccessRegionId string `pulumi:"accessRegionId"`
	// The ID of the CEN instance.
	CenId string `pulumi:"cenId"`
	// The service region. The service region is the target region of the PrivateZone service accessed through CEN.
	HostRegionId string `pulumi:"hostRegionId"`
	// The VPC that belongs to the service region.
	HostVpcId string `pulumi:"hostVpcId"`
	// The ID of the private zone. It formats as `<cen_id>:<access_region_id>`.
	Id string `pulumi:"id"`
	// The DNS IP addresses of the PrivateZone service.
	PrivateZoneDnsServers string `pulumi:"privateZoneDnsServers"`
	// The status of the PrivateZone service, including `Creating`, `Active` and `Deleting`.
	Status string `pulumi:"status"`
}

// GetPrivateZonesZoneInput is an input type that accepts GetPrivateZonesZoneArgs and GetPrivateZonesZoneOutput values.
// You can construct a concrete instance of `GetPrivateZonesZoneInput` via:
//
//	GetPrivateZonesZoneArgs{...}
type GetPrivateZonesZoneInput interface {
	pulumi.Input

	ToGetPrivateZonesZoneOutput() GetPrivateZonesZoneOutput
	ToGetPrivateZonesZoneOutputWithContext(context.Context) GetPrivateZonesZoneOutput
}

type GetPrivateZonesZoneArgs struct {
	// The access region. The access region is the region of the cloud resource that accesses the PrivateZone service through CEN.
	AccessRegionId pulumi.StringInput `pulumi:"accessRegionId"`
	// The ID of the CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The service region. The service region is the target region of the PrivateZone service accessed through CEN.
	HostRegionId pulumi.StringInput `pulumi:"hostRegionId"`
	// The VPC that belongs to the service region.
	HostVpcId pulumi.StringInput `pulumi:"hostVpcId"`
	// The ID of the private zone. It formats as `<cen_id>:<access_region_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The DNS IP addresses of the PrivateZone service.
	PrivateZoneDnsServers pulumi.StringInput `pulumi:"privateZoneDnsServers"`
	// The status of the PrivateZone service, including `Creating`, `Active` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPrivateZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateZonesZone)(nil)).Elem()
}

func (i GetPrivateZonesZoneArgs) ToGetPrivateZonesZoneOutput() GetPrivateZonesZoneOutput {
	return i.ToGetPrivateZonesZoneOutputWithContext(context.Background())
}

func (i GetPrivateZonesZoneArgs) ToGetPrivateZonesZoneOutputWithContext(ctx context.Context) GetPrivateZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateZonesZoneOutput)
}

// GetPrivateZonesZoneArrayInput is an input type that accepts GetPrivateZonesZoneArray and GetPrivateZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetPrivateZonesZoneArrayInput` via:
//
//	GetPrivateZonesZoneArray{ GetPrivateZonesZoneArgs{...} }
type GetPrivateZonesZoneArrayInput interface {
	pulumi.Input

	ToGetPrivateZonesZoneArrayOutput() GetPrivateZonesZoneArrayOutput
	ToGetPrivateZonesZoneArrayOutputWithContext(context.Context) GetPrivateZonesZoneArrayOutput
}

type GetPrivateZonesZoneArray []GetPrivateZonesZoneInput

func (GetPrivateZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateZonesZone)(nil)).Elem()
}

func (i GetPrivateZonesZoneArray) ToGetPrivateZonesZoneArrayOutput() GetPrivateZonesZoneArrayOutput {
	return i.ToGetPrivateZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetPrivateZonesZoneArray) ToGetPrivateZonesZoneArrayOutputWithContext(ctx context.Context) GetPrivateZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateZonesZoneArrayOutput)
}

type GetPrivateZonesZoneOutput struct{ *pulumi.OutputState }

func (GetPrivateZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateZonesZone)(nil)).Elem()
}

func (o GetPrivateZonesZoneOutput) ToGetPrivateZonesZoneOutput() GetPrivateZonesZoneOutput {
	return o
}

func (o GetPrivateZonesZoneOutput) ToGetPrivateZonesZoneOutputWithContext(ctx context.Context) GetPrivateZonesZoneOutput {
	return o
}

// The access region. The access region is the region of the cloud resource that accesses the PrivateZone service through CEN.
func (o GetPrivateZonesZoneOutput) AccessRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.AccessRegionId }).(pulumi.StringOutput)
}

// The ID of the CEN instance.
func (o GetPrivateZonesZoneOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.CenId }).(pulumi.StringOutput)
}

// The service region. The service region is the target region of the PrivateZone service accessed through CEN.
func (o GetPrivateZonesZoneOutput) HostRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.HostRegionId }).(pulumi.StringOutput)
}

// The VPC that belongs to the service region.
func (o GetPrivateZonesZoneOutput) HostVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.HostVpcId }).(pulumi.StringOutput)
}

// The ID of the private zone. It formats as `<cen_id>:<access_region_id>`.
func (o GetPrivateZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The DNS IP addresses of the PrivateZone service.
func (o GetPrivateZonesZoneOutput) PrivateZoneDnsServers() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.PrivateZoneDnsServers }).(pulumi.StringOutput)
}

// The status of the PrivateZone service, including `Creating`, `Active` and `Deleting`.
func (o GetPrivateZonesZoneOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateZonesZone) string { return v.Status }).(pulumi.StringOutput)
}

type GetPrivateZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateZonesZone)(nil)).Elem()
}

func (o GetPrivateZonesZoneArrayOutput) ToGetPrivateZonesZoneArrayOutput() GetPrivateZonesZoneArrayOutput {
	return o
}

func (o GetPrivateZonesZoneArrayOutput) ToGetPrivateZonesZoneArrayOutputWithContext(ctx context.Context) GetPrivateZonesZoneArrayOutput {
	return o
}

func (o GetPrivateZonesZoneArrayOutput) Index(i pulumi.IntInput) GetPrivateZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateZonesZone {
		return vs[0].([]GetPrivateZonesZone)[vs[1].(int)]
	}).(GetPrivateZonesZoneOutput)
}

type GetRegionRouteEntriesEntry struct {
	// The destination CIDR block of the route entry.
	CidrBlock string `pulumi:"cidrBlock"`
	// ID of the next hop.
	NextHopId string `pulumi:"nextHopId"`
	// ID of the region where the next hop is located.
	NextHopRegionId string `pulumi:"nextHopRegionId"`
	// Type of the next hop.
	NextHopType string `pulumi:"nextHopType"`
	// Type of the route entry.
	Type string `pulumi:"type"`
}

// GetRegionRouteEntriesEntryInput is an input type that accepts GetRegionRouteEntriesEntryArgs and GetRegionRouteEntriesEntryOutput values.
// You can construct a concrete instance of `GetRegionRouteEntriesEntryInput` via:
//
//	GetRegionRouteEntriesEntryArgs{...}
type GetRegionRouteEntriesEntryInput interface {
	pulumi.Input

	ToGetRegionRouteEntriesEntryOutput() GetRegionRouteEntriesEntryOutput
	ToGetRegionRouteEntriesEntryOutputWithContext(context.Context) GetRegionRouteEntriesEntryOutput
}

type GetRegionRouteEntriesEntryArgs struct {
	// The destination CIDR block of the route entry.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// ID of the next hop.
	NextHopId pulumi.StringInput `pulumi:"nextHopId"`
	// ID of the region where the next hop is located.
	NextHopRegionId pulumi.StringInput `pulumi:"nextHopRegionId"`
	// Type of the next hop.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// Type of the route entry.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRegionRouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionRouteEntriesEntry)(nil)).Elem()
}

func (i GetRegionRouteEntriesEntryArgs) ToGetRegionRouteEntriesEntryOutput() GetRegionRouteEntriesEntryOutput {
	return i.ToGetRegionRouteEntriesEntryOutputWithContext(context.Background())
}

func (i GetRegionRouteEntriesEntryArgs) ToGetRegionRouteEntriesEntryOutputWithContext(ctx context.Context) GetRegionRouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionRouteEntriesEntryOutput)
}

// GetRegionRouteEntriesEntryArrayInput is an input type that accepts GetRegionRouteEntriesEntryArray and GetRegionRouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetRegionRouteEntriesEntryArrayInput` via:
//
//	GetRegionRouteEntriesEntryArray{ GetRegionRouteEntriesEntryArgs{...} }
type GetRegionRouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetRegionRouteEntriesEntryArrayOutput() GetRegionRouteEntriesEntryArrayOutput
	ToGetRegionRouteEntriesEntryArrayOutputWithContext(context.Context) GetRegionRouteEntriesEntryArrayOutput
}

type GetRegionRouteEntriesEntryArray []GetRegionRouteEntriesEntryInput

func (GetRegionRouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionRouteEntriesEntry)(nil)).Elem()
}

func (i GetRegionRouteEntriesEntryArray) ToGetRegionRouteEntriesEntryArrayOutput() GetRegionRouteEntriesEntryArrayOutput {
	return i.ToGetRegionRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetRegionRouteEntriesEntryArray) ToGetRegionRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetRegionRouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionRouteEntriesEntryArrayOutput)
}

type GetRegionRouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetRegionRouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionRouteEntriesEntry)(nil)).Elem()
}

func (o GetRegionRouteEntriesEntryOutput) ToGetRegionRouteEntriesEntryOutput() GetRegionRouteEntriesEntryOutput {
	return o
}

func (o GetRegionRouteEntriesEntryOutput) ToGetRegionRouteEntriesEntryOutputWithContext(ctx context.Context) GetRegionRouteEntriesEntryOutput {
	return o
}

// The destination CIDR block of the route entry.
func (o GetRegionRouteEntriesEntryOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRouteEntriesEntry) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// ID of the next hop.
func (o GetRegionRouteEntriesEntryOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRouteEntriesEntry) string { return v.NextHopId }).(pulumi.StringOutput)
}

// ID of the region where the next hop is located.
func (o GetRegionRouteEntriesEntryOutput) NextHopRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRouteEntriesEntry) string { return v.NextHopRegionId }).(pulumi.StringOutput)
}

// Type of the next hop.
func (o GetRegionRouteEntriesEntryOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRouteEntriesEntry) string { return v.NextHopType }).(pulumi.StringOutput)
}

// Type of the route entry.
func (o GetRegionRouteEntriesEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRouteEntriesEntry) string { return v.Type }).(pulumi.StringOutput)
}

type GetRegionRouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetRegionRouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionRouteEntriesEntry)(nil)).Elem()
}

func (o GetRegionRouteEntriesEntryArrayOutput) ToGetRegionRouteEntriesEntryArrayOutput() GetRegionRouteEntriesEntryArrayOutput {
	return o
}

func (o GetRegionRouteEntriesEntryArrayOutput) ToGetRegionRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetRegionRouteEntriesEntryArrayOutput {
	return o
}

func (o GetRegionRouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetRegionRouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionRouteEntriesEntry {
		return vs[0].([]GetRegionRouteEntriesEntry)[vs[1].(int)]
	}).(GetRegionRouteEntriesEntryOutput)
}

type GetRouteEntriesEntry struct {
	// The destination CIDR block of the route entry to query.
	CidrBlock string `pulumi:"cidrBlock"`
	// A list of conflicted Route Entries. Each element contains the following attributes:
	Conflicts []GetRouteEntriesEntryConflict `pulumi:"conflicts"`
	// ID of the next hop.
	NextHopId string `pulumi:"nextHopId"`
	// Type of the next hop, including "Instance", "HaVip" and "RouterInterface".
	NextHopType string `pulumi:"nextHopType"`
	// Whether to allow the route entry to be published or removed to or from CEN.
	OperationalMode bool `pulumi:"operationalMode"`
	// The publish status of the route entry in CEN, including "Published" and "NonPublished".
	PublishStatus string `pulumi:"publishStatus"`
	// ID of the route table of the VPC or VBR.
	RouteTableId string `pulumi:"routeTableId"`
	// Type of the route entry, including "System", "Custom" and "BGP".
	RouteType string `pulumi:"routeType"`
}

// GetRouteEntriesEntryInput is an input type that accepts GetRouteEntriesEntryArgs and GetRouteEntriesEntryOutput values.
// You can construct a concrete instance of `GetRouteEntriesEntryInput` via:
//
//	GetRouteEntriesEntryArgs{...}
type GetRouteEntriesEntryInput interface {
	pulumi.Input

	ToGetRouteEntriesEntryOutput() GetRouteEntriesEntryOutput
	ToGetRouteEntriesEntryOutputWithContext(context.Context) GetRouteEntriesEntryOutput
}

type GetRouteEntriesEntryArgs struct {
	// The destination CIDR block of the route entry to query.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// A list of conflicted Route Entries. Each element contains the following attributes:
	Conflicts GetRouteEntriesEntryConflictArrayInput `pulumi:"conflicts"`
	// ID of the next hop.
	NextHopId pulumi.StringInput `pulumi:"nextHopId"`
	// Type of the next hop, including "Instance", "HaVip" and "RouterInterface".
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// Whether to allow the route entry to be published or removed to or from CEN.
	OperationalMode pulumi.BoolInput `pulumi:"operationalMode"`
	// The publish status of the route entry in CEN, including "Published" and "NonPublished".
	PublishStatus pulumi.StringInput `pulumi:"publishStatus"`
	// ID of the route table of the VPC or VBR.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Type of the route entry, including "System", "Custom" and "BGP".
	RouteType pulumi.StringInput `pulumi:"routeType"`
}

func (GetRouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesEntry)(nil)).Elem()
}

func (i GetRouteEntriesEntryArgs) ToGetRouteEntriesEntryOutput() GetRouteEntriesEntryOutput {
	return i.ToGetRouteEntriesEntryOutputWithContext(context.Background())
}

func (i GetRouteEntriesEntryArgs) ToGetRouteEntriesEntryOutputWithContext(ctx context.Context) GetRouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesEntryOutput)
}

// GetRouteEntriesEntryArrayInput is an input type that accepts GetRouteEntriesEntryArray and GetRouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetRouteEntriesEntryArrayInput` via:
//
//	GetRouteEntriesEntryArray{ GetRouteEntriesEntryArgs{...} }
type GetRouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetRouteEntriesEntryArrayOutput() GetRouteEntriesEntryArrayOutput
	ToGetRouteEntriesEntryArrayOutputWithContext(context.Context) GetRouteEntriesEntryArrayOutput
}

type GetRouteEntriesEntryArray []GetRouteEntriesEntryInput

func (GetRouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesEntry)(nil)).Elem()
}

func (i GetRouteEntriesEntryArray) ToGetRouteEntriesEntryArrayOutput() GetRouteEntriesEntryArrayOutput {
	return i.ToGetRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetRouteEntriesEntryArray) ToGetRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetRouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesEntryArrayOutput)
}

type GetRouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesEntry)(nil)).Elem()
}

func (o GetRouteEntriesEntryOutput) ToGetRouteEntriesEntryOutput() GetRouteEntriesEntryOutput {
	return o
}

func (o GetRouteEntriesEntryOutput) ToGetRouteEntriesEntryOutputWithContext(ctx context.Context) GetRouteEntriesEntryOutput {
	return o
}

// The destination CIDR block of the route entry to query.
func (o GetRouteEntriesEntryOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// A list of conflicted Route Entries. Each element contains the following attributes:
func (o GetRouteEntriesEntryOutput) Conflicts() GetRouteEntriesEntryConflictArrayOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) []GetRouteEntriesEntryConflict { return v.Conflicts }).(GetRouteEntriesEntryConflictArrayOutput)
}

// ID of the next hop.
func (o GetRouteEntriesEntryOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.NextHopId }).(pulumi.StringOutput)
}

// Type of the next hop, including "Instance", "HaVip" and "RouterInterface".
func (o GetRouteEntriesEntryOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.NextHopType }).(pulumi.StringOutput)
}

// Whether to allow the route entry to be published or removed to or from CEN.
func (o GetRouteEntriesEntryOutput) OperationalMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) bool { return v.OperationalMode }).(pulumi.BoolOutput)
}

// The publish status of the route entry in CEN, including "Published" and "NonPublished".
func (o GetRouteEntriesEntryOutput) PublishStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.PublishStatus }).(pulumi.StringOutput)
}

// ID of the route table of the VPC or VBR.
func (o GetRouteEntriesEntryOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// Type of the route entry, including "System", "Custom" and "BGP".
func (o GetRouteEntriesEntryOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.RouteType }).(pulumi.StringOutput)
}

type GetRouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesEntry)(nil)).Elem()
}

func (o GetRouteEntriesEntryArrayOutput) ToGetRouteEntriesEntryArrayOutput() GetRouteEntriesEntryArrayOutput {
	return o
}

func (o GetRouteEntriesEntryArrayOutput) ToGetRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetRouteEntriesEntryArrayOutput {
	return o
}

func (o GetRouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetRouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteEntriesEntry {
		return vs[0].([]GetRouteEntriesEntry)[vs[1].(int)]
	}).(GetRouteEntriesEntryOutput)
}

type GetRouteEntriesEntryConflict struct {
	// The destination CIDR block of the route entry to query.
	CidrBlock string `pulumi:"cidrBlock"`
	// ID of the CEN instance.
	InstanceId string `pulumi:"instanceId"`
	// The type of the CEN child instance.
	InstanceType string `pulumi:"instanceType"`
	// ID of the region where the conflicted route entry is located.
	RegionId string `pulumi:"regionId"`
	// Reasons of exceptions.
	Status string `pulumi:"status"`
}

// GetRouteEntriesEntryConflictInput is an input type that accepts GetRouteEntriesEntryConflictArgs and GetRouteEntriesEntryConflictOutput values.
// You can construct a concrete instance of `GetRouteEntriesEntryConflictInput` via:
//
//	GetRouteEntriesEntryConflictArgs{...}
type GetRouteEntriesEntryConflictInput interface {
	pulumi.Input

	ToGetRouteEntriesEntryConflictOutput() GetRouteEntriesEntryConflictOutput
	ToGetRouteEntriesEntryConflictOutputWithContext(context.Context) GetRouteEntriesEntryConflictOutput
}

type GetRouteEntriesEntryConflictArgs struct {
	// The destination CIDR block of the route entry to query.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// ID of the CEN instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the CEN child instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// ID of the region where the conflicted route entry is located.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Reasons of exceptions.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouteEntriesEntryConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesEntryConflict)(nil)).Elem()
}

func (i GetRouteEntriesEntryConflictArgs) ToGetRouteEntriesEntryConflictOutput() GetRouteEntriesEntryConflictOutput {
	return i.ToGetRouteEntriesEntryConflictOutputWithContext(context.Background())
}

func (i GetRouteEntriesEntryConflictArgs) ToGetRouteEntriesEntryConflictOutputWithContext(ctx context.Context) GetRouteEntriesEntryConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesEntryConflictOutput)
}

// GetRouteEntriesEntryConflictArrayInput is an input type that accepts GetRouteEntriesEntryConflictArray and GetRouteEntriesEntryConflictArrayOutput values.
// You can construct a concrete instance of `GetRouteEntriesEntryConflictArrayInput` via:
//
//	GetRouteEntriesEntryConflictArray{ GetRouteEntriesEntryConflictArgs{...} }
type GetRouteEntriesEntryConflictArrayInput interface {
	pulumi.Input

	ToGetRouteEntriesEntryConflictArrayOutput() GetRouteEntriesEntryConflictArrayOutput
	ToGetRouteEntriesEntryConflictArrayOutputWithContext(context.Context) GetRouteEntriesEntryConflictArrayOutput
}

type GetRouteEntriesEntryConflictArray []GetRouteEntriesEntryConflictInput

func (GetRouteEntriesEntryConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesEntryConflict)(nil)).Elem()
}

func (i GetRouteEntriesEntryConflictArray) ToGetRouteEntriesEntryConflictArrayOutput() GetRouteEntriesEntryConflictArrayOutput {
	return i.ToGetRouteEntriesEntryConflictArrayOutputWithContext(context.Background())
}

func (i GetRouteEntriesEntryConflictArray) ToGetRouteEntriesEntryConflictArrayOutputWithContext(ctx context.Context) GetRouteEntriesEntryConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesEntryConflictArrayOutput)
}

type GetRouteEntriesEntryConflictOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesEntryConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesEntryConflict)(nil)).Elem()
}

func (o GetRouteEntriesEntryConflictOutput) ToGetRouteEntriesEntryConflictOutput() GetRouteEntriesEntryConflictOutput {
	return o
}

func (o GetRouteEntriesEntryConflictOutput) ToGetRouteEntriesEntryConflictOutputWithContext(ctx context.Context) GetRouteEntriesEntryConflictOutput {
	return o
}

// The destination CIDR block of the route entry to query.
func (o GetRouteEntriesEntryConflictOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntryConflict) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// ID of the CEN instance.
func (o GetRouteEntriesEntryConflictOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntryConflict) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the CEN child instance.
func (o GetRouteEntriesEntryConflictOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntryConflict) string { return v.InstanceType }).(pulumi.StringOutput)
}

// ID of the region where the conflicted route entry is located.
func (o GetRouteEntriesEntryConflictOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntryConflict) string { return v.RegionId }).(pulumi.StringOutput)
}

// Reasons of exceptions.
func (o GetRouteEntriesEntryConflictOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntryConflict) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouteEntriesEntryConflictArrayOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesEntryConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesEntryConflict)(nil)).Elem()
}

func (o GetRouteEntriesEntryConflictArrayOutput) ToGetRouteEntriesEntryConflictArrayOutput() GetRouteEntriesEntryConflictArrayOutput {
	return o
}

func (o GetRouteEntriesEntryConflictArrayOutput) ToGetRouteEntriesEntryConflictArrayOutputWithContext(ctx context.Context) GetRouteEntriesEntryConflictArrayOutput {
	return o
}

func (o GetRouteEntriesEntryConflictArrayOutput) Index(i pulumi.IntInput) GetRouteEntriesEntryConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteEntriesEntryConflict {
		return vs[0].([]GetRouteEntriesEntryConflict)[vs[1].(int)]
	}).(GetRouteEntriesEntryConflictOutput)
}

type GetRouteMapsMap struct {
	// A match statement. It indicates the mode in which the as-path attribute is matched.
	AsPathMatchMode string `pulumi:"asPathMatchMode"`
	// The ID of the CEN instance.
	CenId string `pulumi:"cenId"`
	// The ID of the region to which the CEN instance belongs.
	CenRegionId string `pulumi:"cenRegionId"`
	// A match statement. It indicates the mode in which the prefix attribute is matched.
	CidrMatchMode string `pulumi:"cidrMatchMode"`
	// A match statement. It indicates the mode in which the community attribute is matched.
	CommunityMatchMode string `pulumi:"communityMatchMode"`
	// An action statement. It indicates the mode in which the community attribute is operated.
	CommunityOperateMode string `pulumi:"communityOperateMode"`
	// The description of the route map.
	Description string `pulumi:"description"`
	// A match statement that indicates the list of IDs of the destination instances.
	DestinationChildInstanceTypes []string `pulumi:"destinationChildInstanceTypes"`
	// A match statement that indicates the prefix list.
	DestinationCidrBlocks []string `pulumi:"destinationCidrBlocks"`
	// A match statement that indicates the list of IDs of the destination instances.
	DestinationInstanceIds []string `pulumi:"destinationInstanceIds"`
	// Indicates whether to enable the reverse match method of the DestinationInstanceIds match condition.
	DestinationInstanceIdsReverseMatch bool `pulumi:"destinationInstanceIdsReverseMatch"`
	// A match statement that indicates the list of IDs of the destination route tables.
	DestinationRouteTableIds []string `pulumi:"destinationRouteTableIds"`
	// The ID of the route map. It formats as `<cen_id>:<route_map_id>`. Before 1.161.0, it is `routeMapId`.
	Id string `pulumi:"id"`
	// The action that is performed to a route if the route meets all the match conditions.
	MapResult string `pulumi:"mapResult"`
	// A match statement that indicates the As path list.
	MatchAsns []string `pulumi:"matchAsns"`
	// A match statement that indicates the community set.
	MatchCommunitySets []string `pulumi:"matchCommunitySets"`
	// The priority of the next route map that is associated with the current route map.
	NextPriority int `pulumi:"nextPriority"`
	// An action statement that operates the community attribute.
	OperateCommunitySets []string `pulumi:"operateCommunitySets"`
	// An action statement that modifies the preference of the route.
	Preference int `pulumi:"preference"`
	// Indicates AS Path prepending when a regional gateway receives or publishes a route.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// The priority of the route map.
	Priority int `pulumi:"priority"`
	// The ID of the route map.
	RouteMapId string `pulumi:"routeMapId"`
	// A match statement that indicates the list of route types.
	RouteTypes []string `pulumi:"routeTypes"`
	// A match statement that indicates the list of IDs of the source instances.
	SourceChildInstanceTypes []string `pulumi:"sourceChildInstanceTypes"`
	// A match statement that indicates the list of IDs of the source instances.
	SourceInstanceIds []string `pulumi:"sourceInstanceIds"`
	// Indicates whether to enable the reverse match method of the SourceInstanceIds match condition.
	SourceInstanceIdsReverseMatch bool `pulumi:"sourceInstanceIdsReverseMatch"`
	// A match statement that indicates the list of IDs of the source regions.
	SourceRegionIds []string `pulumi:"sourceRegionIds"`
	// A match statement that indicates the list of IDs of the source route tables.
	SourceRouteTableIds []string `pulumi:"sourceRouteTableIds"`
	// The status of the route map, including `Creating`, `Active` and `Deleting`.
	Status string `pulumi:"status"`
	// The direction in which the route map is applied, including `RegionIn` and `RegionOut`.
	TransmitDirection string `pulumi:"transmitDirection"`
}

// GetRouteMapsMapInput is an input type that accepts GetRouteMapsMap and GetRouteMapsMapOutput values.
// You can construct a concrete instance of `GetRouteMapsMapInput` via:
//
//	GetRouteMapsMap{ "key": GetRouteMapsArgs{...} }
type GetRouteMapsMapInput interface {
	pulumi.Input

	ToGetRouteMapsMapOutput() GetRouteMapsMapOutput
	ToGetRouteMapsMapOutputWithContext(context.Context) GetRouteMapsMapOutput
}

type GetRouteMapsMapArgs struct {
	// A match statement. It indicates the mode in which the as-path attribute is matched.
	AsPathMatchMode pulumi.StringInput `pulumi:"asPathMatchMode"`
	// The ID of the CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The ID of the region to which the CEN instance belongs.
	CenRegionId pulumi.StringInput `pulumi:"cenRegionId"`
	// A match statement. It indicates the mode in which the prefix attribute is matched.
	CidrMatchMode pulumi.StringInput `pulumi:"cidrMatchMode"`
	// A match statement. It indicates the mode in which the community attribute is matched.
	CommunityMatchMode pulumi.StringInput `pulumi:"communityMatchMode"`
	// An action statement. It indicates the mode in which the community attribute is operated.
	CommunityOperateMode pulumi.StringInput `pulumi:"communityOperateMode"`
	// The description of the route map.
	Description pulumi.StringInput `pulumi:"description"`
	// A match statement that indicates the list of IDs of the destination instances.
	DestinationChildInstanceTypes pulumi.StringArrayInput `pulumi:"destinationChildInstanceTypes"`
	// A match statement that indicates the prefix list.
	DestinationCidrBlocks pulumi.StringArrayInput `pulumi:"destinationCidrBlocks"`
	// A match statement that indicates the list of IDs of the destination instances.
	DestinationInstanceIds pulumi.StringArrayInput `pulumi:"destinationInstanceIds"`
	// Indicates whether to enable the reverse match method of the DestinationInstanceIds match condition.
	DestinationInstanceIdsReverseMatch pulumi.BoolInput `pulumi:"destinationInstanceIdsReverseMatch"`
	// A match statement that indicates the list of IDs of the destination route tables.
	DestinationRouteTableIds pulumi.StringArrayInput `pulumi:"destinationRouteTableIds"`
	// The ID of the route map. It formats as `<cen_id>:<route_map_id>`. Before 1.161.0, it is `routeMapId`.
	Id pulumi.StringInput `pulumi:"id"`
	// The action that is performed to a route if the route meets all the match conditions.
	MapResult pulumi.StringInput `pulumi:"mapResult"`
	// A match statement that indicates the As path list.
	MatchAsns pulumi.StringArrayInput `pulumi:"matchAsns"`
	// A match statement that indicates the community set.
	MatchCommunitySets pulumi.StringArrayInput `pulumi:"matchCommunitySets"`
	// The priority of the next route map that is associated with the current route map.
	NextPriority pulumi.IntInput `pulumi:"nextPriority"`
	// An action statement that operates the community attribute.
	OperateCommunitySets pulumi.StringArrayInput `pulumi:"operateCommunitySets"`
	// An action statement that modifies the preference of the route.
	Preference pulumi.IntInput `pulumi:"preference"`
	// Indicates AS Path prepending when a regional gateway receives or publishes a route.
	PrependAsPaths pulumi.StringArrayInput `pulumi:"prependAsPaths"`
	// The priority of the route map.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The ID of the route map.
	RouteMapId pulumi.StringInput `pulumi:"routeMapId"`
	// A match statement that indicates the list of route types.
	RouteTypes pulumi.StringArrayInput `pulumi:"routeTypes"`
	// A match statement that indicates the list of IDs of the source instances.
	SourceChildInstanceTypes pulumi.StringArrayInput `pulumi:"sourceChildInstanceTypes"`
	// A match statement that indicates the list of IDs of the source instances.
	SourceInstanceIds pulumi.StringArrayInput `pulumi:"sourceInstanceIds"`
	// Indicates whether to enable the reverse match method of the SourceInstanceIds match condition.
	SourceInstanceIdsReverseMatch pulumi.BoolInput `pulumi:"sourceInstanceIdsReverseMatch"`
	// A match statement that indicates the list of IDs of the source regions.
	SourceRegionIds pulumi.StringArrayInput `pulumi:"sourceRegionIds"`
	// A match statement that indicates the list of IDs of the source route tables.
	SourceRouteTableIds pulumi.StringArrayInput `pulumi:"sourceRouteTableIds"`
	// The status of the route map, including `Creating`, `Active` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The direction in which the route map is applied, including `RegionIn` and `RegionOut`.
	TransmitDirection pulumi.StringInput `pulumi:"transmitDirection"`
}

func (GetRouteMapsMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteMapsMap)(nil)).Elem()
}

func (i GetRouteMapsMapArgs) ToGetRouteMapsMapOutput() GetRouteMapsMapOutput {
	return i.ToGetRouteMapsMapOutputWithContext(context.Background())
}

func (i GetRouteMapsMapArgs) ToGetRouteMapsMapOutputWithContext(ctx context.Context) GetRouteMapsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteMapsMapOutput)
}

// GetRouteMapsMapArrayInput is an input type that accepts GetRouteMapsMapArray and GetRouteMapsMapArrayOutput values.
// You can construct a concrete instance of `GetRouteMapsMapArrayInput` via:
//
//	GetRouteMapsMapArray{ GetRouteMapsMapArgs{...} }
type GetRouteMapsMapArrayInput interface {
	pulumi.Input

	ToGetRouteMapsMapArrayOutput() GetRouteMapsMapArrayOutput
	ToGetRouteMapsMapArrayOutputWithContext(context.Context) GetRouteMapsMapArrayOutput
}

type GetRouteMapsMapArray []GetRouteMapsMapInput

func (GetRouteMapsMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteMapsMap)(nil)).Elem()
}

func (i GetRouteMapsMapArray) ToGetRouteMapsMapArrayOutput() GetRouteMapsMapArrayOutput {
	return i.ToGetRouteMapsMapArrayOutputWithContext(context.Background())
}

func (i GetRouteMapsMapArray) ToGetRouteMapsMapArrayOutputWithContext(ctx context.Context) GetRouteMapsMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteMapsMapArrayOutput)
}

type GetRouteMapsMapOutput struct{ *pulumi.OutputState }

func (GetRouteMapsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteMapsMap)(nil)).Elem()
}

func (o GetRouteMapsMapOutput) ToGetRouteMapsMapOutput() GetRouteMapsMapOutput {
	return o
}

func (o GetRouteMapsMapOutput) ToGetRouteMapsMapOutputWithContext(ctx context.Context) GetRouteMapsMapOutput {
	return o
}

// A match statement. It indicates the mode in which the as-path attribute is matched.
func (o GetRouteMapsMapOutput) AsPathMatchMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.AsPathMatchMode }).(pulumi.StringOutput)
}

// The ID of the CEN instance.
func (o GetRouteMapsMapOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.CenId }).(pulumi.StringOutput)
}

// The ID of the region to which the CEN instance belongs.
func (o GetRouteMapsMapOutput) CenRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.CenRegionId }).(pulumi.StringOutput)
}

// A match statement. It indicates the mode in which the prefix attribute is matched.
func (o GetRouteMapsMapOutput) CidrMatchMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.CidrMatchMode }).(pulumi.StringOutput)
}

// A match statement. It indicates the mode in which the community attribute is matched.
func (o GetRouteMapsMapOutput) CommunityMatchMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.CommunityMatchMode }).(pulumi.StringOutput)
}

// An action statement. It indicates the mode in which the community attribute is operated.
func (o GetRouteMapsMapOutput) CommunityOperateMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.CommunityOperateMode }).(pulumi.StringOutput)
}

// The description of the route map.
func (o GetRouteMapsMapOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.Description }).(pulumi.StringOutput)
}

// A match statement that indicates the list of IDs of the destination instances.
func (o GetRouteMapsMapOutput) DestinationChildInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.DestinationChildInstanceTypes }).(pulumi.StringArrayOutput)
}

// A match statement that indicates the prefix list.
func (o GetRouteMapsMapOutput) DestinationCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.DestinationCidrBlocks }).(pulumi.StringArrayOutput)
}

// A match statement that indicates the list of IDs of the destination instances.
func (o GetRouteMapsMapOutput) DestinationInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.DestinationInstanceIds }).(pulumi.StringArrayOutput)
}

// Indicates whether to enable the reverse match method of the DestinationInstanceIds match condition.
func (o GetRouteMapsMapOutput) DestinationInstanceIdsReverseMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteMapsMap) bool { return v.DestinationInstanceIdsReverseMatch }).(pulumi.BoolOutput)
}

// A match statement that indicates the list of IDs of the destination route tables.
func (o GetRouteMapsMapOutput) DestinationRouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.DestinationRouteTableIds }).(pulumi.StringArrayOutput)
}

// The ID of the route map. It formats as `<cen_id>:<route_map_id>`. Before 1.161.0, it is `routeMapId`.
func (o GetRouteMapsMapOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.Id }).(pulumi.StringOutput)
}

// The action that is performed to a route if the route meets all the match conditions.
func (o GetRouteMapsMapOutput) MapResult() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.MapResult }).(pulumi.StringOutput)
}

// A match statement that indicates the As path list.
func (o GetRouteMapsMapOutput) MatchAsns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.MatchAsns }).(pulumi.StringArrayOutput)
}

// A match statement that indicates the community set.
func (o GetRouteMapsMapOutput) MatchCommunitySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.MatchCommunitySets }).(pulumi.StringArrayOutput)
}

// The priority of the next route map that is associated with the current route map.
func (o GetRouteMapsMapOutput) NextPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteMapsMap) int { return v.NextPriority }).(pulumi.IntOutput)
}

// An action statement that operates the community attribute.
func (o GetRouteMapsMapOutput) OperateCommunitySets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.OperateCommunitySets }).(pulumi.StringArrayOutput)
}

// An action statement that modifies the preference of the route.
func (o GetRouteMapsMapOutput) Preference() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteMapsMap) int { return v.Preference }).(pulumi.IntOutput)
}

// Indicates AS Path prepending when a regional gateway receives or publishes a route.
func (o GetRouteMapsMapOutput) PrependAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.PrependAsPaths }).(pulumi.StringArrayOutput)
}

// The priority of the route map.
func (o GetRouteMapsMapOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteMapsMap) int { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the route map.
func (o GetRouteMapsMapOutput) RouteMapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.RouteMapId }).(pulumi.StringOutput)
}

// A match statement that indicates the list of route types.
func (o GetRouteMapsMapOutput) RouteTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.RouteTypes }).(pulumi.StringArrayOutput)
}

// A match statement that indicates the list of IDs of the source instances.
func (o GetRouteMapsMapOutput) SourceChildInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.SourceChildInstanceTypes }).(pulumi.StringArrayOutput)
}

// A match statement that indicates the list of IDs of the source instances.
func (o GetRouteMapsMapOutput) SourceInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.SourceInstanceIds }).(pulumi.StringArrayOutput)
}

// Indicates whether to enable the reverse match method of the SourceInstanceIds match condition.
func (o GetRouteMapsMapOutput) SourceInstanceIdsReverseMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteMapsMap) bool { return v.SourceInstanceIdsReverseMatch }).(pulumi.BoolOutput)
}

// A match statement that indicates the list of IDs of the source regions.
func (o GetRouteMapsMapOutput) SourceRegionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.SourceRegionIds }).(pulumi.StringArrayOutput)
}

// A match statement that indicates the list of IDs of the source route tables.
func (o GetRouteMapsMapOutput) SourceRouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteMapsMap) []string { return v.SourceRouteTableIds }).(pulumi.StringArrayOutput)
}

// The status of the route map, including `Creating`, `Active` and `Deleting`.
func (o GetRouteMapsMapOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.Status }).(pulumi.StringOutput)
}

// The direction in which the route map is applied, including `RegionIn` and `RegionOut`.
func (o GetRouteMapsMapOutput) TransmitDirection() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteMapsMap) string { return v.TransmitDirection }).(pulumi.StringOutput)
}

type GetRouteMapsMapArrayOutput struct{ *pulumi.OutputState }

func (GetRouteMapsMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteMapsMap)(nil)).Elem()
}

func (o GetRouteMapsMapArrayOutput) ToGetRouteMapsMapArrayOutput() GetRouteMapsMapArrayOutput {
	return o
}

func (o GetRouteMapsMapArrayOutput) ToGetRouteMapsMapArrayOutputWithContext(ctx context.Context) GetRouteMapsMapArrayOutput {
	return o
}

func (o GetRouteMapsMapArrayOutput) Index(i pulumi.IntInput) GetRouteMapsMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteMapsMap {
		return vs[0].([]GetRouteMapsMap)[vs[1].(int)]
	}).(GetRouteMapsMapOutput)
}

type GetRouteServicesService struct {
	// The region of the network instances that access the cloud services.
	AccessRegionId string `pulumi:"accessRegionId"`
	// The ID of the CEN instance.
	CenId string `pulumi:"cenId"`
	// The IP address of the cloud service.
	Cidrs []string `pulumi:"cidrs"`
	// The description of the cloud service.
	Description string `pulumi:"description"`
	// The domain name or IP address of the cloud service.
	Host string `pulumi:"host"`
	// The region of the cloud service.
	HostRegionId string `pulumi:"hostRegionId"`
	// The VPC associated with the cloud service.
	HostVpcId string `pulumi:"hostVpcId"`
	// The ID of the route service.
	Id string `pulumi:"id"`
	// The status of the cloud service. Valid values: `Active`, `Creating` and `Deleting`.
	Status string `pulumi:"status"`
	// The update interval. Default value: 5. The value cannot be modified.
	UpdateInterval string `pulumi:"updateInterval"`
}

// GetRouteServicesServiceInput is an input type that accepts GetRouteServicesServiceArgs and GetRouteServicesServiceOutput values.
// You can construct a concrete instance of `GetRouteServicesServiceInput` via:
//
//	GetRouteServicesServiceArgs{...}
type GetRouteServicesServiceInput interface {
	pulumi.Input

	ToGetRouteServicesServiceOutput() GetRouteServicesServiceOutput
	ToGetRouteServicesServiceOutputWithContext(context.Context) GetRouteServicesServiceOutput
}

type GetRouteServicesServiceArgs struct {
	// The region of the network instances that access the cloud services.
	AccessRegionId pulumi.StringInput `pulumi:"accessRegionId"`
	// The ID of the CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The IP address of the cloud service.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// The description of the cloud service.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name or IP address of the cloud service.
	Host pulumi.StringInput `pulumi:"host"`
	// The region of the cloud service.
	HostRegionId pulumi.StringInput `pulumi:"hostRegionId"`
	// The VPC associated with the cloud service.
	HostVpcId pulumi.StringInput `pulumi:"hostVpcId"`
	// The ID of the route service.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the cloud service. Valid values: `Active`, `Creating` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The update interval. Default value: 5. The value cannot be modified.
	UpdateInterval pulumi.StringInput `pulumi:"updateInterval"`
}

func (GetRouteServicesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteServicesService)(nil)).Elem()
}

func (i GetRouteServicesServiceArgs) ToGetRouteServicesServiceOutput() GetRouteServicesServiceOutput {
	return i.ToGetRouteServicesServiceOutputWithContext(context.Background())
}

func (i GetRouteServicesServiceArgs) ToGetRouteServicesServiceOutputWithContext(ctx context.Context) GetRouteServicesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteServicesServiceOutput)
}

// GetRouteServicesServiceArrayInput is an input type that accepts GetRouteServicesServiceArray and GetRouteServicesServiceArrayOutput values.
// You can construct a concrete instance of `GetRouteServicesServiceArrayInput` via:
//
//	GetRouteServicesServiceArray{ GetRouteServicesServiceArgs{...} }
type GetRouteServicesServiceArrayInput interface {
	pulumi.Input

	ToGetRouteServicesServiceArrayOutput() GetRouteServicesServiceArrayOutput
	ToGetRouteServicesServiceArrayOutputWithContext(context.Context) GetRouteServicesServiceArrayOutput
}

type GetRouteServicesServiceArray []GetRouteServicesServiceInput

func (GetRouteServicesServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteServicesService)(nil)).Elem()
}

func (i GetRouteServicesServiceArray) ToGetRouteServicesServiceArrayOutput() GetRouteServicesServiceArrayOutput {
	return i.ToGetRouteServicesServiceArrayOutputWithContext(context.Background())
}

func (i GetRouteServicesServiceArray) ToGetRouteServicesServiceArrayOutputWithContext(ctx context.Context) GetRouteServicesServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteServicesServiceArrayOutput)
}

type GetRouteServicesServiceOutput struct{ *pulumi.OutputState }

func (GetRouteServicesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteServicesService)(nil)).Elem()
}

func (o GetRouteServicesServiceOutput) ToGetRouteServicesServiceOutput() GetRouteServicesServiceOutput {
	return o
}

func (o GetRouteServicesServiceOutput) ToGetRouteServicesServiceOutputWithContext(ctx context.Context) GetRouteServicesServiceOutput {
	return o
}

// The region of the network instances that access the cloud services.
func (o GetRouteServicesServiceOutput) AccessRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.AccessRegionId }).(pulumi.StringOutput)
}

// The ID of the CEN instance.
func (o GetRouteServicesServiceOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.CenId }).(pulumi.StringOutput)
}

// The IP address of the cloud service.
func (o GetRouteServicesServiceOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteServicesService) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// The description of the cloud service.
func (o GetRouteServicesServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name or IP address of the cloud service.
func (o GetRouteServicesServiceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.Host }).(pulumi.StringOutput)
}

// The region of the cloud service.
func (o GetRouteServicesServiceOutput) HostRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.HostRegionId }).(pulumi.StringOutput)
}

// The VPC associated with the cloud service.
func (o GetRouteServicesServiceOutput) HostVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.HostVpcId }).(pulumi.StringOutput)
}

// The ID of the route service.
func (o GetRouteServicesServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the cloud service. Valid values: `Active`, `Creating` and `Deleting`.
func (o GetRouteServicesServiceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.Status }).(pulumi.StringOutput)
}

// The update interval. Default value: 5. The value cannot be modified.
func (o GetRouteServicesServiceOutput) UpdateInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteServicesService) string { return v.UpdateInterval }).(pulumi.StringOutput)
}

type GetRouteServicesServiceArrayOutput struct{ *pulumi.OutputState }

func (GetRouteServicesServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteServicesService)(nil)).Elem()
}

func (o GetRouteServicesServiceArrayOutput) ToGetRouteServicesServiceArrayOutput() GetRouteServicesServiceArrayOutput {
	return o
}

func (o GetRouteServicesServiceArrayOutput) ToGetRouteServicesServiceArrayOutputWithContext(ctx context.Context) GetRouteServicesServiceArrayOutput {
	return o
}

func (o GetRouteServicesServiceArrayOutput) Index(i pulumi.IntInput) GetRouteServicesServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteServicesService {
		return vs[0].([]GetRouteServicesService)[vs[1].(int)]
	}).(GetRouteServicesServiceOutput)
}

type GetTrafficMarkingPoliciesPolicy struct {
	// The description of the Traffic Marking Policy.
	Description string `pulumi:"description"`
	// The ID of the resource. The value is formatted `<transit_router_id>:<traffic_marking_policy_id>`.
	Id string `pulumi:"id"`
	// The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy.
	MarkingDscp int `pulumi:"markingDscp"`
	// The Priority of the Traffic Marking Policy.
	Priority int `pulumi:"priority"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The ID of the Traffic Marking Policy.
	TrafficMarkingPolicyId string `pulumi:"trafficMarkingPolicyId"`
	// The name of the Traffic Marking Policy.
	TrafficMarkingPolicyName string `pulumi:"trafficMarkingPolicyName"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
}

// GetTrafficMarkingPoliciesPolicyInput is an input type that accepts GetTrafficMarkingPoliciesPolicyArgs and GetTrafficMarkingPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetTrafficMarkingPoliciesPolicyInput` via:
//
//	GetTrafficMarkingPoliciesPolicyArgs{...}
type GetTrafficMarkingPoliciesPolicyInput interface {
	pulumi.Input

	ToGetTrafficMarkingPoliciesPolicyOutput() GetTrafficMarkingPoliciesPolicyOutput
	ToGetTrafficMarkingPoliciesPolicyOutputWithContext(context.Context) GetTrafficMarkingPoliciesPolicyOutput
}

type GetTrafficMarkingPoliciesPolicyArgs struct {
	// The description of the Traffic Marking Policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the resource. The value is formatted `<transit_router_id>:<traffic_marking_policy_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy.
	MarkingDscp pulumi.IntInput `pulumi:"markingDscp"`
	// The Priority of the Traffic Marking Policy.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the Traffic Marking Policy.
	TrafficMarkingPolicyId pulumi.StringInput `pulumi:"trafficMarkingPolicyId"`
	// The name of the Traffic Marking Policy.
	TrafficMarkingPolicyName pulumi.StringInput `pulumi:"trafficMarkingPolicyName"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
}

func (GetTrafficMarkingPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMarkingPoliciesPolicy)(nil)).Elem()
}

func (i GetTrafficMarkingPoliciesPolicyArgs) ToGetTrafficMarkingPoliciesPolicyOutput() GetTrafficMarkingPoliciesPolicyOutput {
	return i.ToGetTrafficMarkingPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetTrafficMarkingPoliciesPolicyArgs) ToGetTrafficMarkingPoliciesPolicyOutputWithContext(ctx context.Context) GetTrafficMarkingPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMarkingPoliciesPolicyOutput)
}

// GetTrafficMarkingPoliciesPolicyArrayInput is an input type that accepts GetTrafficMarkingPoliciesPolicyArray and GetTrafficMarkingPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetTrafficMarkingPoliciesPolicyArrayInput` via:
//
//	GetTrafficMarkingPoliciesPolicyArray{ GetTrafficMarkingPoliciesPolicyArgs{...} }
type GetTrafficMarkingPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetTrafficMarkingPoliciesPolicyArrayOutput() GetTrafficMarkingPoliciesPolicyArrayOutput
	ToGetTrafficMarkingPoliciesPolicyArrayOutputWithContext(context.Context) GetTrafficMarkingPoliciesPolicyArrayOutput
}

type GetTrafficMarkingPoliciesPolicyArray []GetTrafficMarkingPoliciesPolicyInput

func (GetTrafficMarkingPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMarkingPoliciesPolicy)(nil)).Elem()
}

func (i GetTrafficMarkingPoliciesPolicyArray) ToGetTrafficMarkingPoliciesPolicyArrayOutput() GetTrafficMarkingPoliciesPolicyArrayOutput {
	return i.ToGetTrafficMarkingPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetTrafficMarkingPoliciesPolicyArray) ToGetTrafficMarkingPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetTrafficMarkingPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMarkingPoliciesPolicyArrayOutput)
}

type GetTrafficMarkingPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetTrafficMarkingPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMarkingPoliciesPolicy)(nil)).Elem()
}

func (o GetTrafficMarkingPoliciesPolicyOutput) ToGetTrafficMarkingPoliciesPolicyOutput() GetTrafficMarkingPoliciesPolicyOutput {
	return o
}

func (o GetTrafficMarkingPoliciesPolicyOutput) ToGetTrafficMarkingPoliciesPolicyOutputWithContext(ctx context.Context) GetTrafficMarkingPoliciesPolicyOutput {
	return o
}

// The description of the Traffic Marking Policy.
func (o GetTrafficMarkingPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the resource. The value is formatted `<transit_router_id>:<traffic_marking_policy_id>`.
func (o GetTrafficMarkingPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy.
func (o GetTrafficMarkingPoliciesPolicyOutput) MarkingDscp() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) int { return v.MarkingDscp }).(pulumi.IntOutput)
}

// The Priority of the Traffic Marking Policy.
func (o GetTrafficMarkingPoliciesPolicyOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) int { return v.Priority }).(pulumi.IntOutput)
}

// The status of the resource.
func (o GetTrafficMarkingPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the Traffic Marking Policy.
func (o GetTrafficMarkingPoliciesPolicyOutput) TrafficMarkingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) string { return v.TrafficMarkingPolicyId }).(pulumi.StringOutput)
}

// The name of the Traffic Marking Policy.
func (o GetTrafficMarkingPoliciesPolicyOutput) TrafficMarkingPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) string { return v.TrafficMarkingPolicyName }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o GetTrafficMarkingPoliciesPolicyOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMarkingPoliciesPolicy) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

type GetTrafficMarkingPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMarkingPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMarkingPoliciesPolicy)(nil)).Elem()
}

func (o GetTrafficMarkingPoliciesPolicyArrayOutput) ToGetTrafficMarkingPoliciesPolicyArrayOutput() GetTrafficMarkingPoliciesPolicyArrayOutput {
	return o
}

func (o GetTrafficMarkingPoliciesPolicyArrayOutput) ToGetTrafficMarkingPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetTrafficMarkingPoliciesPolicyArrayOutput {
	return o
}

func (o GetTrafficMarkingPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetTrafficMarkingPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMarkingPoliciesPolicy {
		return vs[0].([]GetTrafficMarkingPoliciesPolicy)[vs[1].(int)]
	}).(GetTrafficMarkingPoliciesPolicyOutput)
}

type GetTransitRouteTableAggregationsTransitRouteTableAggregation struct {
	// The ID of the Transit Route Table Aggregation. It formats as `<transit_route_table_id>:<transit_route_table_aggregation_cidr>`.
	Id string `pulumi:"id"`
	// The route type of the aggregate route.
	RouteType string `pulumi:"routeType"`
	// The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
	Status string `pulumi:"status"`
	// The destination CIDR block of the aggregate route.
	TransitRouteTableAggregationCidr string `pulumi:"transitRouteTableAggregationCidr"`
	// The description of the aggregate route.
	TransitRouteTableAggregationDescription string `pulumi:"transitRouteTableAggregationDescription"`
	// The name of the aggregate route.
	TransitRouteTableAggregationName string `pulumi:"transitRouteTableAggregationName"`
	// The scope of networks that you want to advertise the aggregate route.
	TransitRouteTableAggregationScope string `pulumi:"transitRouteTableAggregationScope"`
	// The ID of the route table of the Enterprise Edition transit router.
	TransitRouteTableId string `pulumi:"transitRouteTableId"`
}

// GetTransitRouteTableAggregationsTransitRouteTableAggregationInput is an input type that accepts GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs and GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput values.
// You can construct a concrete instance of `GetTransitRouteTableAggregationsTransitRouteTableAggregationInput` via:
//
//	GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs{...}
type GetTransitRouteTableAggregationsTransitRouteTableAggregationInput interface {
	pulumi.Input

	ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutput() GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput
	ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutputWithContext(context.Context) GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput
}

type GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs struct {
	// The ID of the Transit Route Table Aggregation. It formats as `<transit_route_table_id>:<transit_route_table_aggregation_cidr>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The route type of the aggregate route.
	RouteType pulumi.StringInput `pulumi:"routeType"`
	// The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The destination CIDR block of the aggregate route.
	TransitRouteTableAggregationCidr pulumi.StringInput `pulumi:"transitRouteTableAggregationCidr"`
	// The description of the aggregate route.
	TransitRouteTableAggregationDescription pulumi.StringInput `pulumi:"transitRouteTableAggregationDescription"`
	// The name of the aggregate route.
	TransitRouteTableAggregationName pulumi.StringInput `pulumi:"transitRouteTableAggregationName"`
	// The scope of networks that you want to advertise the aggregate route.
	TransitRouteTableAggregationScope pulumi.StringInput `pulumi:"transitRouteTableAggregationScope"`
	// The ID of the route table of the Enterprise Edition transit router.
	TransitRouteTableId pulumi.StringInput `pulumi:"transitRouteTableId"`
}

func (GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouteTableAggregationsTransitRouteTableAggregation)(nil)).Elem()
}

func (i GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutput() GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput {
	return i.ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutputWithContext(context.Background())
}

func (i GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutputWithContext(ctx context.Context) GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput)
}

// GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayInput is an input type that accepts GetTransitRouteTableAggregationsTransitRouteTableAggregationArray and GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput values.
// You can construct a concrete instance of `GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayInput` via:
//
//	GetTransitRouteTableAggregationsTransitRouteTableAggregationArray{ GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs{...} }
type GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayInput interface {
	pulumi.Input

	ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput() GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput
	ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutputWithContext(context.Context) GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput
}

type GetTransitRouteTableAggregationsTransitRouteTableAggregationArray []GetTransitRouteTableAggregationsTransitRouteTableAggregationInput

func (GetTransitRouteTableAggregationsTransitRouteTableAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouteTableAggregationsTransitRouteTableAggregation)(nil)).Elem()
}

func (i GetTransitRouteTableAggregationsTransitRouteTableAggregationArray) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput() GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput {
	return i.ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutputWithContext(context.Background())
}

func (i GetTransitRouteTableAggregationsTransitRouteTableAggregationArray) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutputWithContext(ctx context.Context) GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput)
}

type GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput struct{ *pulumi.OutputState }

func (GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouteTableAggregationsTransitRouteTableAggregation)(nil)).Elem()
}

func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutput() GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput {
	return o
}

func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationOutputWithContext(ctx context.Context) GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput {
	return o
}

// The ID of the Transit Route Table Aggregation. It formats as `<transit_route_table_id>:<transit_route_table_aggregation_cidr>`.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string { return v.Id }).(pulumi.StringOutput)
}

// The route type of the aggregate route.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string { return v.RouteType }).(pulumi.StringOutput)
}

// The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string { return v.Status }).(pulumi.StringOutput)
}

// The destination CIDR block of the aggregate route.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) TransitRouteTableAggregationCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string {
		return v.TransitRouteTableAggregationCidr
	}).(pulumi.StringOutput)
}

// The description of the aggregate route.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) TransitRouteTableAggregationDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string {
		return v.TransitRouteTableAggregationDescription
	}).(pulumi.StringOutput)
}

// The name of the aggregate route.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) TransitRouteTableAggregationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string {
		return v.TransitRouteTableAggregationName
	}).(pulumi.StringOutput)
}

// The scope of networks that you want to advertise the aggregate route.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) TransitRouteTableAggregationScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string {
		return v.TransitRouteTableAggregationScope
	}).(pulumi.StringOutput)
}

// The ID of the route table of the Enterprise Edition transit router.
func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput) TransitRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsTransitRouteTableAggregation) string {
		return v.TransitRouteTableId
	}).(pulumi.StringOutput)
}

type GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouteTableAggregationsTransitRouteTableAggregation)(nil)).Elem()
}

func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput() GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput {
	return o
}

func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput) ToGetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutputWithContext(ctx context.Context) GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput {
	return o
}

func (o GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput) Index(i pulumi.IntInput) GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouteTableAggregationsTransitRouteTableAggregation {
		return vs[0].([]GetTransitRouteTableAggregationsTransitRouteTableAggregation)[vs[1].(int)]
	}).(GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput)
}

type GetTransitRouterAvailableResourcesResource struct {
	// The list of primary zones.
	MasterZones []string `pulumi:"masterZones"`
	// The list of secondary zones.
	SlaveZones []string `pulumi:"slaveZones"`
}

// GetTransitRouterAvailableResourcesResourceInput is an input type that accepts GetTransitRouterAvailableResourcesResourceArgs and GetTransitRouterAvailableResourcesResourceOutput values.
// You can construct a concrete instance of `GetTransitRouterAvailableResourcesResourceInput` via:
//
//	GetTransitRouterAvailableResourcesResourceArgs{...}
type GetTransitRouterAvailableResourcesResourceInput interface {
	pulumi.Input

	ToGetTransitRouterAvailableResourcesResourceOutput() GetTransitRouterAvailableResourcesResourceOutput
	ToGetTransitRouterAvailableResourcesResourceOutputWithContext(context.Context) GetTransitRouterAvailableResourcesResourceOutput
}

type GetTransitRouterAvailableResourcesResourceArgs struct {
	// The list of primary zones.
	MasterZones pulumi.StringArrayInput `pulumi:"masterZones"`
	// The list of secondary zones.
	SlaveZones pulumi.StringArrayInput `pulumi:"slaveZones"`
}

func (GetTransitRouterAvailableResourcesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterAvailableResourcesResource)(nil)).Elem()
}

func (i GetTransitRouterAvailableResourcesResourceArgs) ToGetTransitRouterAvailableResourcesResourceOutput() GetTransitRouterAvailableResourcesResourceOutput {
	return i.ToGetTransitRouterAvailableResourcesResourceOutputWithContext(context.Background())
}

func (i GetTransitRouterAvailableResourcesResourceArgs) ToGetTransitRouterAvailableResourcesResourceOutputWithContext(ctx context.Context) GetTransitRouterAvailableResourcesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterAvailableResourcesResourceOutput)
}

// GetTransitRouterAvailableResourcesResourceArrayInput is an input type that accepts GetTransitRouterAvailableResourcesResourceArray and GetTransitRouterAvailableResourcesResourceArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterAvailableResourcesResourceArrayInput` via:
//
//	GetTransitRouterAvailableResourcesResourceArray{ GetTransitRouterAvailableResourcesResourceArgs{...} }
type GetTransitRouterAvailableResourcesResourceArrayInput interface {
	pulumi.Input

	ToGetTransitRouterAvailableResourcesResourceArrayOutput() GetTransitRouterAvailableResourcesResourceArrayOutput
	ToGetTransitRouterAvailableResourcesResourceArrayOutputWithContext(context.Context) GetTransitRouterAvailableResourcesResourceArrayOutput
}

type GetTransitRouterAvailableResourcesResourceArray []GetTransitRouterAvailableResourcesResourceInput

func (GetTransitRouterAvailableResourcesResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterAvailableResourcesResource)(nil)).Elem()
}

func (i GetTransitRouterAvailableResourcesResourceArray) ToGetTransitRouterAvailableResourcesResourceArrayOutput() GetTransitRouterAvailableResourcesResourceArrayOutput {
	return i.ToGetTransitRouterAvailableResourcesResourceArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterAvailableResourcesResourceArray) ToGetTransitRouterAvailableResourcesResourceArrayOutputWithContext(ctx context.Context) GetTransitRouterAvailableResourcesResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterAvailableResourcesResourceArrayOutput)
}

type GetTransitRouterAvailableResourcesResourceOutput struct{ *pulumi.OutputState }

func (GetTransitRouterAvailableResourcesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterAvailableResourcesResource)(nil)).Elem()
}

func (o GetTransitRouterAvailableResourcesResourceOutput) ToGetTransitRouterAvailableResourcesResourceOutput() GetTransitRouterAvailableResourcesResourceOutput {
	return o
}

func (o GetTransitRouterAvailableResourcesResourceOutput) ToGetTransitRouterAvailableResourcesResourceOutputWithContext(ctx context.Context) GetTransitRouterAvailableResourcesResourceOutput {
	return o
}

// The list of primary zones.
func (o GetTransitRouterAvailableResourcesResourceOutput) MasterZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitRouterAvailableResourcesResource) []string { return v.MasterZones }).(pulumi.StringArrayOutput)
}

// The list of secondary zones.
func (o GetTransitRouterAvailableResourcesResourceOutput) SlaveZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitRouterAvailableResourcesResource) []string { return v.SlaveZones }).(pulumi.StringArrayOutput)
}

type GetTransitRouterAvailableResourcesResourceArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterAvailableResourcesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterAvailableResourcesResource)(nil)).Elem()
}

func (o GetTransitRouterAvailableResourcesResourceArrayOutput) ToGetTransitRouterAvailableResourcesResourceArrayOutput() GetTransitRouterAvailableResourcesResourceArrayOutput {
	return o
}

func (o GetTransitRouterAvailableResourcesResourceArrayOutput) ToGetTransitRouterAvailableResourcesResourceArrayOutputWithContext(ctx context.Context) GetTransitRouterAvailableResourcesResourceArrayOutput {
	return o
}

func (o GetTransitRouterAvailableResourcesResourceArrayOutput) Index(i pulumi.IntInput) GetTransitRouterAvailableResourcesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterAvailableResourcesResource {
		return vs[0].([]GetTransitRouterAvailableResourcesResource)[vs[1].(int)]
	}).(GetTransitRouterAvailableResourcesResourceOutput)
}

type GetTransitRouterCidrsCidr struct {
	// The cidr of the transit router.
	Cidr string `pulumi:"cidr"`
	// The description of the transit router.
	Description string `pulumi:"description"`
	// The type of the transit router cidr.
	Family string `pulumi:"family"`
	// The ID of the Cen Transit Router Cidr. It formats as `<transit_router_id>:<transit_router_cidr_id>`.
	Id string `pulumi:"id"`
	// Whether to allow automatically adding Transit Router Cidr in Transit Router Route Table.
	PublishCidrRoute bool `pulumi:"publishCidrRoute"`
	// The ID of the transit router cidr.
	TransitRouterCidrId string `pulumi:"transitRouterCidrId"`
	// The name of the transit router.
	TransitRouterCidrName string `pulumi:"transitRouterCidrName"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
}

// GetTransitRouterCidrsCidrInput is an input type that accepts GetTransitRouterCidrsCidrArgs and GetTransitRouterCidrsCidrOutput values.
// You can construct a concrete instance of `GetTransitRouterCidrsCidrInput` via:
//
//	GetTransitRouterCidrsCidrArgs{...}
type GetTransitRouterCidrsCidrInput interface {
	pulumi.Input

	ToGetTransitRouterCidrsCidrOutput() GetTransitRouterCidrsCidrOutput
	ToGetTransitRouterCidrsCidrOutputWithContext(context.Context) GetTransitRouterCidrsCidrOutput
}

type GetTransitRouterCidrsCidrArgs struct {
	// The cidr of the transit router.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The description of the transit router.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of the transit router cidr.
	Family pulumi.StringInput `pulumi:"family"`
	// The ID of the Cen Transit Router Cidr. It formats as `<transit_router_id>:<transit_router_cidr_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether to allow automatically adding Transit Router Cidr in Transit Router Route Table.
	PublishCidrRoute pulumi.BoolInput `pulumi:"publishCidrRoute"`
	// The ID of the transit router cidr.
	TransitRouterCidrId pulumi.StringInput `pulumi:"transitRouterCidrId"`
	// The name of the transit router.
	TransitRouterCidrName pulumi.StringInput `pulumi:"transitRouterCidrName"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
}

func (GetTransitRouterCidrsCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterCidrsCidr)(nil)).Elem()
}

func (i GetTransitRouterCidrsCidrArgs) ToGetTransitRouterCidrsCidrOutput() GetTransitRouterCidrsCidrOutput {
	return i.ToGetTransitRouterCidrsCidrOutputWithContext(context.Background())
}

func (i GetTransitRouterCidrsCidrArgs) ToGetTransitRouterCidrsCidrOutputWithContext(ctx context.Context) GetTransitRouterCidrsCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterCidrsCidrOutput)
}

// GetTransitRouterCidrsCidrArrayInput is an input type that accepts GetTransitRouterCidrsCidrArray and GetTransitRouterCidrsCidrArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterCidrsCidrArrayInput` via:
//
//	GetTransitRouterCidrsCidrArray{ GetTransitRouterCidrsCidrArgs{...} }
type GetTransitRouterCidrsCidrArrayInput interface {
	pulumi.Input

	ToGetTransitRouterCidrsCidrArrayOutput() GetTransitRouterCidrsCidrArrayOutput
	ToGetTransitRouterCidrsCidrArrayOutputWithContext(context.Context) GetTransitRouterCidrsCidrArrayOutput
}

type GetTransitRouterCidrsCidrArray []GetTransitRouterCidrsCidrInput

func (GetTransitRouterCidrsCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterCidrsCidr)(nil)).Elem()
}

func (i GetTransitRouterCidrsCidrArray) ToGetTransitRouterCidrsCidrArrayOutput() GetTransitRouterCidrsCidrArrayOutput {
	return i.ToGetTransitRouterCidrsCidrArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterCidrsCidrArray) ToGetTransitRouterCidrsCidrArrayOutputWithContext(ctx context.Context) GetTransitRouterCidrsCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterCidrsCidrArrayOutput)
}

type GetTransitRouterCidrsCidrOutput struct{ *pulumi.OutputState }

func (GetTransitRouterCidrsCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterCidrsCidr)(nil)).Elem()
}

func (o GetTransitRouterCidrsCidrOutput) ToGetTransitRouterCidrsCidrOutput() GetTransitRouterCidrsCidrOutput {
	return o
}

func (o GetTransitRouterCidrsCidrOutput) ToGetTransitRouterCidrsCidrOutputWithContext(ctx context.Context) GetTransitRouterCidrsCidrOutput {
	return o
}

// The cidr of the transit router.
func (o GetTransitRouterCidrsCidrOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.Cidr }).(pulumi.StringOutput)
}

// The description of the transit router.
func (o GetTransitRouterCidrsCidrOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.Description }).(pulumi.StringOutput)
}

// The type of the transit router cidr.
func (o GetTransitRouterCidrsCidrOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.Family }).(pulumi.StringOutput)
}

// The ID of the Cen Transit Router Cidr. It formats as `<transit_router_id>:<transit_router_cidr_id>`.
func (o GetTransitRouterCidrsCidrOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to allow automatically adding Transit Router Cidr in Transit Router Route Table.
func (o GetTransitRouterCidrsCidrOutput) PublishCidrRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) bool { return v.PublishCidrRoute }).(pulumi.BoolOutput)
}

// The ID of the transit router cidr.
func (o GetTransitRouterCidrsCidrOutput) TransitRouterCidrId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.TransitRouterCidrId }).(pulumi.StringOutput)
}

// The name of the transit router.
func (o GetTransitRouterCidrsCidrOutput) TransitRouterCidrName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.TransitRouterCidrName }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o GetTransitRouterCidrsCidrOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterCidrsCidr) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

type GetTransitRouterCidrsCidrArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterCidrsCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterCidrsCidr)(nil)).Elem()
}

func (o GetTransitRouterCidrsCidrArrayOutput) ToGetTransitRouterCidrsCidrArrayOutput() GetTransitRouterCidrsCidrArrayOutput {
	return o
}

func (o GetTransitRouterCidrsCidrArrayOutput) ToGetTransitRouterCidrsCidrArrayOutputWithContext(ctx context.Context) GetTransitRouterCidrsCidrArrayOutput {
	return o
}

func (o GetTransitRouterCidrsCidrArrayOutput) Index(i pulumi.IntInput) GetTransitRouterCidrsCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterCidrsCidr {
		return vs[0].([]GetTransitRouterCidrsCidr)[vs[1].(int)]
	}).(GetTransitRouterCidrsCidrOutput)
}

type GetTransitRouterMulticastDomainAssociationsAssociation struct {
	// The ID of the Transit Router Multicast Domain Association. It formats as `<transit_router_multicast_domain_id>:<transit_router_attachment_id>:<vswitch_id>`.
	Id string `pulumi:"id"`
	// The ID of the resource associated with the multicast domain.
	ResourceId string `pulumi:"resourceId"`
	// The ID of the Alibaba Cloud account to which the resource associated with the multicast domain belongs.
	ResourceOwnerId int `pulumi:"resourceOwnerId"`
	// The type of resource associated with the multicast domain. Valid Value: `VPC`.
	ResourceType string `pulumi:"resourceType"`
	// The status of the associated resource. Valid Value: `Associated`, `Associating`, `Dissociating`.
	Status string `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The ID of the multicast domain.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
	// The ID of the vSwitch.
	VswitchId string `pulumi:"vswitchId"`
}

// GetTransitRouterMulticastDomainAssociationsAssociationInput is an input type that accepts GetTransitRouterMulticastDomainAssociationsAssociationArgs and GetTransitRouterMulticastDomainAssociationsAssociationOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainAssociationsAssociationInput` via:
//
//	GetTransitRouterMulticastDomainAssociationsAssociationArgs{...}
type GetTransitRouterMulticastDomainAssociationsAssociationInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainAssociationsAssociationOutput() GetTransitRouterMulticastDomainAssociationsAssociationOutput
	ToGetTransitRouterMulticastDomainAssociationsAssociationOutputWithContext(context.Context) GetTransitRouterMulticastDomainAssociationsAssociationOutput
}

type GetTransitRouterMulticastDomainAssociationsAssociationArgs struct {
	// The ID of the Transit Router Multicast Domain Association. It formats as `<transit_router_multicast_domain_id>:<transit_router_attachment_id>:<vswitch_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the resource associated with the multicast domain.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The ID of the Alibaba Cloud account to which the resource associated with the multicast domain belongs.
	ResourceOwnerId pulumi.IntInput `pulumi:"resourceOwnerId"`
	// The type of resource associated with the multicast domain. Valid Value: `VPC`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the associated resource. Valid Value: `Associated`, `Associating`, `Dissociating`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The ID of the multicast domain.
	TransitRouterMulticastDomainId pulumi.StringInput `pulumi:"transitRouterMulticastDomainId"`
	// The ID of the vSwitch.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetTransitRouterMulticastDomainAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainAssociationsAssociation)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainAssociationsAssociationArgs) ToGetTransitRouterMulticastDomainAssociationsAssociationOutput() GetTransitRouterMulticastDomainAssociationsAssociationOutput {
	return i.ToGetTransitRouterMulticastDomainAssociationsAssociationOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainAssociationsAssociationArgs) ToGetTransitRouterMulticastDomainAssociationsAssociationOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainAssociationsAssociationOutput)
}

// GetTransitRouterMulticastDomainAssociationsAssociationArrayInput is an input type that accepts GetTransitRouterMulticastDomainAssociationsAssociationArray and GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainAssociationsAssociationArrayInput` via:
//
//	GetTransitRouterMulticastDomainAssociationsAssociationArray{ GetTransitRouterMulticastDomainAssociationsAssociationArgs{...} }
type GetTransitRouterMulticastDomainAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutput() GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput
	ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutputWithContext(context.Context) GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput
}

type GetTransitRouterMulticastDomainAssociationsAssociationArray []GetTransitRouterMulticastDomainAssociationsAssociationInput

func (GetTransitRouterMulticastDomainAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainAssociationsAssociation)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainAssociationsAssociationArray) ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutput() GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput {
	return i.ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainAssociationsAssociationArray) ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput)
}

type GetTransitRouterMulticastDomainAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainAssociationsAssociation)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) ToGetTransitRouterMulticastDomainAssociationsAssociationOutput() GetTransitRouterMulticastDomainAssociationsAssociationOutput {
	return o
}

func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) ToGetTransitRouterMulticastDomainAssociationsAssociationOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainAssociationsAssociationOutput {
	return o
}

// The ID of the Transit Router Multicast Domain Association. It formats as `<transit_router_multicast_domain_id>:<transit_router_attachment_id>:<vswitch_id>`.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the resource associated with the multicast domain.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account to which the resource associated with the multicast domain belongs.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) ResourceOwnerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) int { return v.ResourceOwnerId }).(pulumi.IntOutput)
}

// The type of resource associated with the multicast domain. Valid Value: `VPC`.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the associated resource. Valid Value: `Associated`, `Associating`, `Dissociating`.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the network instance connection.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string {
		return v.TransitRouterAttachmentId
	}).(pulumi.StringOutput)
}

// The ID of the multicast domain.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) TransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string {
		return v.TransitRouterMulticastDomainId
	}).(pulumi.StringOutput)
}

// The ID of the vSwitch.
func (o GetTransitRouterMulticastDomainAssociationsAssociationOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainAssociationsAssociation) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainAssociationsAssociation)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput) ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutput() GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput) ToGetTransitRouterMulticastDomainAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) GetTransitRouterMulticastDomainAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterMulticastDomainAssociationsAssociation {
		return vs[0].([]GetTransitRouterMulticastDomainAssociationsAssociation)[vs[1].(int)]
	}).(GetTransitRouterMulticastDomainAssociationsAssociationOutput)
}

type GetTransitRouterMulticastDomainMembersMember struct {
	// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The `key` of the resource supplied above.The value is formulated as `<transit_router_multicast_domain_id>:<group_ip_address>:<network_interface_id>`.
	Id string `pulumi:"id"`
	// The ID of the ENI.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The status of the resource
	Status string `pulumi:"status"`
	// The ID of the multicast domain to which the multicast member belongs.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
	// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
	VpcId string `pulumi:"vpcId"`
}

// GetTransitRouterMulticastDomainMembersMemberInput is an input type that accepts GetTransitRouterMulticastDomainMembersMemberArgs and GetTransitRouterMulticastDomainMembersMemberOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainMembersMemberInput` via:
//
//	GetTransitRouterMulticastDomainMembersMemberArgs{...}
type GetTransitRouterMulticastDomainMembersMemberInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainMembersMemberOutput() GetTransitRouterMulticastDomainMembersMemberOutput
	ToGetTransitRouterMulticastDomainMembersMemberOutputWithContext(context.Context) GetTransitRouterMulticastDomainMembersMemberOutput
}

type GetTransitRouterMulticastDomainMembersMemberArgs struct {
	// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
	GroupIpAddress pulumi.StringInput `pulumi:"groupIpAddress"`
	// The `key` of the resource supplied above.The value is formulated as `<transit_router_multicast_domain_id>:<group_ip_address>:<network_interface_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the ENI.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the multicast domain to which the multicast member belongs.
	TransitRouterMulticastDomainId pulumi.StringInput `pulumi:"transitRouterMulticastDomainId"`
	// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetTransitRouterMulticastDomainMembersMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainMembersMember)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainMembersMemberArgs) ToGetTransitRouterMulticastDomainMembersMemberOutput() GetTransitRouterMulticastDomainMembersMemberOutput {
	return i.ToGetTransitRouterMulticastDomainMembersMemberOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainMembersMemberArgs) ToGetTransitRouterMulticastDomainMembersMemberOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainMembersMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainMembersMemberOutput)
}

// GetTransitRouterMulticastDomainMembersMemberArrayInput is an input type that accepts GetTransitRouterMulticastDomainMembersMemberArray and GetTransitRouterMulticastDomainMembersMemberArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainMembersMemberArrayInput` via:
//
//	GetTransitRouterMulticastDomainMembersMemberArray{ GetTransitRouterMulticastDomainMembersMemberArgs{...} }
type GetTransitRouterMulticastDomainMembersMemberArrayInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainMembersMemberArrayOutput() GetTransitRouterMulticastDomainMembersMemberArrayOutput
	ToGetTransitRouterMulticastDomainMembersMemberArrayOutputWithContext(context.Context) GetTransitRouterMulticastDomainMembersMemberArrayOutput
}

type GetTransitRouterMulticastDomainMembersMemberArray []GetTransitRouterMulticastDomainMembersMemberInput

func (GetTransitRouterMulticastDomainMembersMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainMembersMember)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainMembersMemberArray) ToGetTransitRouterMulticastDomainMembersMemberArrayOutput() GetTransitRouterMulticastDomainMembersMemberArrayOutput {
	return i.ToGetTransitRouterMulticastDomainMembersMemberArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainMembersMemberArray) ToGetTransitRouterMulticastDomainMembersMemberArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainMembersMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainMembersMemberArrayOutput)
}

type GetTransitRouterMulticastDomainMembersMemberOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainMembersMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainMembersMember)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainMembersMemberOutput) ToGetTransitRouterMulticastDomainMembersMemberOutput() GetTransitRouterMulticastDomainMembersMemberOutput {
	return o
}

func (o GetTransitRouterMulticastDomainMembersMemberOutput) ToGetTransitRouterMulticastDomainMembersMemberOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainMembersMemberOutput {
	return o
}

// The IP address of the multicast group to which the multicast member belongs. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
func (o GetTransitRouterMulticastDomainMembersMemberOutput) GroupIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainMembersMember) string { return v.GroupIpAddress }).(pulumi.StringOutput)
}

// The `key` of the resource supplied above.The value is formulated as `<transit_router_multicast_domain_id>:<group_ip_address>:<network_interface_id>`.
func (o GetTransitRouterMulticastDomainMembersMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainMembersMember) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the ENI.
func (o GetTransitRouterMulticastDomainMembersMemberOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainMembersMember) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The status of the resource
func (o GetTransitRouterMulticastDomainMembersMemberOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainMembersMember) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the multicast domain to which the multicast member belongs.
func (o GetTransitRouterMulticastDomainMembersMemberOutput) TransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainMembersMember) string { return v.TransitRouterMulticastDomainId }).(pulumi.StringOutput)
}

// The VPC to which the ENI of the multicast member belongs. This field is mandatory for VPCs owned by another accounts.
func (o GetTransitRouterMulticastDomainMembersMemberOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainMembersMember) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetTransitRouterMulticastDomainMembersMemberArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainMembersMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainMembersMember)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainMembersMemberArrayOutput) ToGetTransitRouterMulticastDomainMembersMemberArrayOutput() GetTransitRouterMulticastDomainMembersMemberArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainMembersMemberArrayOutput) ToGetTransitRouterMulticastDomainMembersMemberArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainMembersMemberArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainMembersMemberArrayOutput) Index(i pulumi.IntInput) GetTransitRouterMulticastDomainMembersMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterMulticastDomainMembersMember {
		return vs[0].([]GetTransitRouterMulticastDomainMembersMember)[vs[1].(int)]
	}).(GetTransitRouterMulticastDomainMembersMemberOutput)
}

type GetTransitRouterMulticastDomainPeerMembersMember struct {
	// The IP address of the multicast group to which the multicast member belongs. Value range: **224.0.0.1** to **239.255.255.254**.If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The `key` of the resource supplied above.The value is formulated as `<transit_router_multicast_domain_id>:<group_ip_address>:<peer_transit_router_multicast_domain_id>`.
	Id string `pulumi:"id"`
	// The multicast domain ID of the peer transit router.
	PeerTransitRouterMulticastDomainId string `pulumi:"peerTransitRouterMulticastDomainId"`
	// The status of the resource
	Status string `pulumi:"status"`
	// The ID of the multicast domain to which the multicast member belongs.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
}

// GetTransitRouterMulticastDomainPeerMembersMemberInput is an input type that accepts GetTransitRouterMulticastDomainPeerMembersMemberArgs and GetTransitRouterMulticastDomainPeerMembersMemberOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainPeerMembersMemberInput` via:
//
//	GetTransitRouterMulticastDomainPeerMembersMemberArgs{...}
type GetTransitRouterMulticastDomainPeerMembersMemberInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainPeerMembersMemberOutput() GetTransitRouterMulticastDomainPeerMembersMemberOutput
	ToGetTransitRouterMulticastDomainPeerMembersMemberOutputWithContext(context.Context) GetTransitRouterMulticastDomainPeerMembersMemberOutput
}

type GetTransitRouterMulticastDomainPeerMembersMemberArgs struct {
	// The IP address of the multicast group to which the multicast member belongs. Value range: **224.0.0.1** to **239.255.255.254**.If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
	GroupIpAddress pulumi.StringInput `pulumi:"groupIpAddress"`
	// The `key` of the resource supplied above.The value is formulated as `<transit_router_multicast_domain_id>:<group_ip_address>:<peer_transit_router_multicast_domain_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The multicast domain ID of the peer transit router.
	PeerTransitRouterMulticastDomainId pulumi.StringInput `pulumi:"peerTransitRouterMulticastDomainId"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the multicast domain to which the multicast member belongs.
	TransitRouterMulticastDomainId pulumi.StringInput `pulumi:"transitRouterMulticastDomainId"`
}

func (GetTransitRouterMulticastDomainPeerMembersMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainPeerMembersMember)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainPeerMembersMemberArgs) ToGetTransitRouterMulticastDomainPeerMembersMemberOutput() GetTransitRouterMulticastDomainPeerMembersMemberOutput {
	return i.ToGetTransitRouterMulticastDomainPeerMembersMemberOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainPeerMembersMemberArgs) ToGetTransitRouterMulticastDomainPeerMembersMemberOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainPeerMembersMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainPeerMembersMemberOutput)
}

// GetTransitRouterMulticastDomainPeerMembersMemberArrayInput is an input type that accepts GetTransitRouterMulticastDomainPeerMembersMemberArray and GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainPeerMembersMemberArrayInput` via:
//
//	GetTransitRouterMulticastDomainPeerMembersMemberArray{ GetTransitRouterMulticastDomainPeerMembersMemberArgs{...} }
type GetTransitRouterMulticastDomainPeerMembersMemberArrayInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutput() GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput
	ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutputWithContext(context.Context) GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput
}

type GetTransitRouterMulticastDomainPeerMembersMemberArray []GetTransitRouterMulticastDomainPeerMembersMemberInput

func (GetTransitRouterMulticastDomainPeerMembersMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainPeerMembersMember)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainPeerMembersMemberArray) ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutput() GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput {
	return i.ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainPeerMembersMemberArray) ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput)
}

type GetTransitRouterMulticastDomainPeerMembersMemberOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainPeerMembersMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainPeerMembersMember)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) ToGetTransitRouterMulticastDomainPeerMembersMemberOutput() GetTransitRouterMulticastDomainPeerMembersMemberOutput {
	return o
}

func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) ToGetTransitRouterMulticastDomainPeerMembersMemberOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainPeerMembersMemberOutput {
	return o
}

// The IP address of the multicast group to which the multicast member belongs. Value range: **224.0.0.1** to **239.255.255.254**.If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you in the current multicast domain.
func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) GroupIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainPeerMembersMember) string { return v.GroupIpAddress }).(pulumi.StringOutput)
}

// The `key` of the resource supplied above.The value is formulated as `<transit_router_multicast_domain_id>:<group_ip_address>:<peer_transit_router_multicast_domain_id>`.
func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainPeerMembersMember) string { return v.Id }).(pulumi.StringOutput)
}

// The multicast domain ID of the peer transit router.
func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) PeerTransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainPeerMembersMember) string {
		return v.PeerTransitRouterMulticastDomainId
	}).(pulumi.StringOutput)
}

// The status of the resource
func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainPeerMembersMember) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the multicast domain to which the multicast member belongs.
func (o GetTransitRouterMulticastDomainPeerMembersMemberOutput) TransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainPeerMembersMember) string {
		return v.TransitRouterMulticastDomainId
	}).(pulumi.StringOutput)
}

type GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainPeerMembersMember)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput) ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutput() GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput) ToGetTransitRouterMulticastDomainPeerMembersMemberArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput) Index(i pulumi.IntInput) GetTransitRouterMulticastDomainPeerMembersMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterMulticastDomainPeerMembersMember {
		return vs[0].([]GetTransitRouterMulticastDomainPeerMembersMember)[vs[1].(int)]
	}).(GetTransitRouterMulticastDomainPeerMembersMemberOutput)
}

type GetTransitRouterMulticastDomainSourcesSource struct {
	// The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	Id             string `pulumi:"id"`
	// ENI ID of the multicast source.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The ID of the multicast domain to which the multicast source belongs.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
	// The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
	VpcId string `pulumi:"vpcId"`
}

// GetTransitRouterMulticastDomainSourcesSourceInput is an input type that accepts GetTransitRouterMulticastDomainSourcesSourceArgs and GetTransitRouterMulticastDomainSourcesSourceOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainSourcesSourceInput` via:
//
//	GetTransitRouterMulticastDomainSourcesSourceArgs{...}
type GetTransitRouterMulticastDomainSourcesSourceInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainSourcesSourceOutput() GetTransitRouterMulticastDomainSourcesSourceOutput
	ToGetTransitRouterMulticastDomainSourcesSourceOutputWithContext(context.Context) GetTransitRouterMulticastDomainSourcesSourceOutput
}

type GetTransitRouterMulticastDomainSourcesSourceArgs struct {
	// The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
	GroupIpAddress pulumi.StringInput `pulumi:"groupIpAddress"`
	Id             pulumi.StringInput `pulumi:"id"`
	// ENI ID of the multicast source.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the multicast domain to which the multicast source belongs.
	TransitRouterMulticastDomainId pulumi.StringInput `pulumi:"transitRouterMulticastDomainId"`
	// The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetTransitRouterMulticastDomainSourcesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainSourcesSource)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainSourcesSourceArgs) ToGetTransitRouterMulticastDomainSourcesSourceOutput() GetTransitRouterMulticastDomainSourcesSourceOutput {
	return i.ToGetTransitRouterMulticastDomainSourcesSourceOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainSourcesSourceArgs) ToGetTransitRouterMulticastDomainSourcesSourceOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainSourcesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainSourcesSourceOutput)
}

// GetTransitRouterMulticastDomainSourcesSourceArrayInput is an input type that accepts GetTransitRouterMulticastDomainSourcesSourceArray and GetTransitRouterMulticastDomainSourcesSourceArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainSourcesSourceArrayInput` via:
//
//	GetTransitRouterMulticastDomainSourcesSourceArray{ GetTransitRouterMulticastDomainSourcesSourceArgs{...} }
type GetTransitRouterMulticastDomainSourcesSourceArrayInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainSourcesSourceArrayOutput() GetTransitRouterMulticastDomainSourcesSourceArrayOutput
	ToGetTransitRouterMulticastDomainSourcesSourceArrayOutputWithContext(context.Context) GetTransitRouterMulticastDomainSourcesSourceArrayOutput
}

type GetTransitRouterMulticastDomainSourcesSourceArray []GetTransitRouterMulticastDomainSourcesSourceInput

func (GetTransitRouterMulticastDomainSourcesSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainSourcesSource)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainSourcesSourceArray) ToGetTransitRouterMulticastDomainSourcesSourceArrayOutput() GetTransitRouterMulticastDomainSourcesSourceArrayOutput {
	return i.ToGetTransitRouterMulticastDomainSourcesSourceArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainSourcesSourceArray) ToGetTransitRouterMulticastDomainSourcesSourceArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainSourcesSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainSourcesSourceArrayOutput)
}

type GetTransitRouterMulticastDomainSourcesSourceOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainSourcesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainSourcesSource)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainSourcesSourceOutput) ToGetTransitRouterMulticastDomainSourcesSourceOutput() GetTransitRouterMulticastDomainSourcesSourceOutput {
	return o
}

func (o GetTransitRouterMulticastDomainSourcesSourceOutput) ToGetTransitRouterMulticastDomainSourcesSourceOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainSourcesSourceOutput {
	return o
}

// The IP address of the multicast group to which the multicast source belongs. Value range: **224.0.0.1** to **239.255.255.254**. If the multicast group you specified does not exist in the current multicast domain, the system will automatically create a new multicast group for you.
func (o GetTransitRouterMulticastDomainSourcesSourceOutput) GroupIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesSource) string { return v.GroupIpAddress }).(pulumi.StringOutput)
}

func (o GetTransitRouterMulticastDomainSourcesSourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesSource) string { return v.Id }).(pulumi.StringOutput)
}

// ENI ID of the multicast source.
func (o GetTransitRouterMulticastDomainSourcesSourceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesSource) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetTransitRouterMulticastDomainSourcesSourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesSource) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the multicast domain to which the multicast source belongs.
func (o GetTransitRouterMulticastDomainSourcesSourceOutput) TransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesSource) string { return v.TransitRouterMulticastDomainId }).(pulumi.StringOutput)
}

// The VPC to which the ENI of the multicast source belongs. This field is mandatory for VPCs that is owned by another accounts.
func (o GetTransitRouterMulticastDomainSourcesSourceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesSource) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetTransitRouterMulticastDomainSourcesSourceArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainSourcesSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainSourcesSource)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainSourcesSourceArrayOutput) ToGetTransitRouterMulticastDomainSourcesSourceArrayOutput() GetTransitRouterMulticastDomainSourcesSourceArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainSourcesSourceArrayOutput) ToGetTransitRouterMulticastDomainSourcesSourceArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainSourcesSourceArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainSourcesSourceArrayOutput) Index(i pulumi.IntInput) GetTransitRouterMulticastDomainSourcesSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterMulticastDomainSourcesSource {
		return vs[0].([]GetTransitRouterMulticastDomainSourcesSource)[vs[1].(int)]
	}).(GetTransitRouterMulticastDomainSourcesSourceOutput)
}

type GetTransitRouterMulticastDomainsDomain struct {
	// The ID of the Transit Router Multicast Domain.
	Id string `pulumi:"id"`
	// The status of the multicast domain. Valid Value: `Active`.
	Status string `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The description of the Transit Router Multicast Domain.
	TransitRouterMulticastDomainDescription string `pulumi:"transitRouterMulticastDomainDescription"`
	// The ID of the multicast domain.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
	// The name of the Transit Router Multicast Domain.
	TransitRouterMulticastDomainName string `pulumi:"transitRouterMulticastDomainName"`
}

// GetTransitRouterMulticastDomainsDomainInput is an input type that accepts GetTransitRouterMulticastDomainsDomainArgs and GetTransitRouterMulticastDomainsDomainOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainsDomainInput` via:
//
//	GetTransitRouterMulticastDomainsDomainArgs{...}
type GetTransitRouterMulticastDomainsDomainInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainsDomainOutput() GetTransitRouterMulticastDomainsDomainOutput
	ToGetTransitRouterMulticastDomainsDomainOutputWithContext(context.Context) GetTransitRouterMulticastDomainsDomainOutput
}

type GetTransitRouterMulticastDomainsDomainArgs struct {
	// The ID of the Transit Router Multicast Domain.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the multicast domain. Valid Value: `Active`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The description of the Transit Router Multicast Domain.
	TransitRouterMulticastDomainDescription pulumi.StringInput `pulumi:"transitRouterMulticastDomainDescription"`
	// The ID of the multicast domain.
	TransitRouterMulticastDomainId pulumi.StringInput `pulumi:"transitRouterMulticastDomainId"`
	// The name of the Transit Router Multicast Domain.
	TransitRouterMulticastDomainName pulumi.StringInput `pulumi:"transitRouterMulticastDomainName"`
}

func (GetTransitRouterMulticastDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainsDomain)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainsDomainArgs) ToGetTransitRouterMulticastDomainsDomainOutput() GetTransitRouterMulticastDomainsDomainOutput {
	return i.ToGetTransitRouterMulticastDomainsDomainOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainsDomainArgs) ToGetTransitRouterMulticastDomainsDomainOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainsDomainOutput)
}

// GetTransitRouterMulticastDomainsDomainArrayInput is an input type that accepts GetTransitRouterMulticastDomainsDomainArray and GetTransitRouterMulticastDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterMulticastDomainsDomainArrayInput` via:
//
//	GetTransitRouterMulticastDomainsDomainArray{ GetTransitRouterMulticastDomainsDomainArgs{...} }
type GetTransitRouterMulticastDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetTransitRouterMulticastDomainsDomainArrayOutput() GetTransitRouterMulticastDomainsDomainArrayOutput
	ToGetTransitRouterMulticastDomainsDomainArrayOutputWithContext(context.Context) GetTransitRouterMulticastDomainsDomainArrayOutput
}

type GetTransitRouterMulticastDomainsDomainArray []GetTransitRouterMulticastDomainsDomainInput

func (GetTransitRouterMulticastDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainsDomain)(nil)).Elem()
}

func (i GetTransitRouterMulticastDomainsDomainArray) ToGetTransitRouterMulticastDomainsDomainArrayOutput() GetTransitRouterMulticastDomainsDomainArrayOutput {
	return i.ToGetTransitRouterMulticastDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterMulticastDomainsDomainArray) ToGetTransitRouterMulticastDomainsDomainArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterMulticastDomainsDomainArrayOutput)
}

type GetTransitRouterMulticastDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainsDomain)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainsDomainOutput) ToGetTransitRouterMulticastDomainsDomainOutput() GetTransitRouterMulticastDomainsDomainOutput {
	return o
}

func (o GetTransitRouterMulticastDomainsDomainOutput) ToGetTransitRouterMulticastDomainsDomainOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainsDomainOutput {
	return o
}

// The ID of the Transit Router Multicast Domain.
func (o GetTransitRouterMulticastDomainsDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainsDomain) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the multicast domain. Valid Value: `Active`.
func (o GetTransitRouterMulticastDomainsDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainsDomain) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o GetTransitRouterMulticastDomainsDomainOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainsDomain) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The description of the Transit Router Multicast Domain.
func (o GetTransitRouterMulticastDomainsDomainOutput) TransitRouterMulticastDomainDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainsDomain) string {
		return v.TransitRouterMulticastDomainDescription
	}).(pulumi.StringOutput)
}

// The ID of the multicast domain.
func (o GetTransitRouterMulticastDomainsDomainOutput) TransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainsDomain) string { return v.TransitRouterMulticastDomainId }).(pulumi.StringOutput)
}

// The name of the Transit Router Multicast Domain.
func (o GetTransitRouterMulticastDomainsDomainOutput) TransitRouterMulticastDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainsDomain) string { return v.TransitRouterMulticastDomainName }).(pulumi.StringOutput)
}

type GetTransitRouterMulticastDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterMulticastDomainsDomain)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainsDomainArrayOutput) ToGetTransitRouterMulticastDomainsDomainArrayOutput() GetTransitRouterMulticastDomainsDomainArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainsDomainArrayOutput) ToGetTransitRouterMulticastDomainsDomainArrayOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainsDomainArrayOutput {
	return o
}

func (o GetTransitRouterMulticastDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetTransitRouterMulticastDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterMulticastDomainsDomain {
		return vs[0].([]GetTransitRouterMulticastDomainsDomain)[vs[1].(int)]
	}).(GetTransitRouterMulticastDomainsDomainOutput)
}

type GetTransitRouterPeerAttachmentsAttachment struct {
	// Auto publish route enabled.
	AutoPublishRouteEnabled bool `pulumi:"autoPublishRouteEnabled"`
	// The bandwidth of the bandwidth package.
	Bandwidth int `pulumi:"bandwidth"`
	// ID of the CEN bandwidth package.
	CenBandwidthPackageId string `pulumi:"cenBandwidthPackageId"`
	// ID of the geographic.
	GeographicSpanId string `pulumi:"geographicSpanId"`
	// The ID of CEN Transit Router peer attachments.
	Id string `pulumi:"id"`
	// ID of the peer transit router.
	PeerTransitRouterId string `pulumi:"peerTransitRouterId"`
	// Owner ID of the peer transit router.
	PeerTransitRouterOwnerId string `pulumi:"peerTransitRouterOwnerId"`
	// Region ID of the peer transit router.
	PeerTransitRouterRegionId string `pulumi:"peerTransitRouterRegionId"`
	// Type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of CEN Transit Router peer attachment. Valid values `Attached`, `Attaching` and `Detaching`.
	Status string `pulumi:"status"`
	// The description of CEN Transit Router peer attachments.
	TransitRouterAttachmentDescription string `pulumi:"transitRouterAttachmentDescription"`
	// The ID of CEN Transit Router peer attachments.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// Name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The ID of transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
}

// GetTransitRouterPeerAttachmentsAttachmentInput is an input type that accepts GetTransitRouterPeerAttachmentsAttachmentArgs and GetTransitRouterPeerAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetTransitRouterPeerAttachmentsAttachmentInput` via:
//
//	GetTransitRouterPeerAttachmentsAttachmentArgs{...}
type GetTransitRouterPeerAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetTransitRouterPeerAttachmentsAttachmentOutput() GetTransitRouterPeerAttachmentsAttachmentOutput
	ToGetTransitRouterPeerAttachmentsAttachmentOutputWithContext(context.Context) GetTransitRouterPeerAttachmentsAttachmentOutput
}

type GetTransitRouterPeerAttachmentsAttachmentArgs struct {
	// Auto publish route enabled.
	AutoPublishRouteEnabled pulumi.BoolInput `pulumi:"autoPublishRouteEnabled"`
	// The bandwidth of the bandwidth package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// ID of the CEN bandwidth package.
	CenBandwidthPackageId pulumi.StringInput `pulumi:"cenBandwidthPackageId"`
	// ID of the geographic.
	GeographicSpanId pulumi.StringInput `pulumi:"geographicSpanId"`
	// The ID of CEN Transit Router peer attachments.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the peer transit router.
	PeerTransitRouterId pulumi.StringInput `pulumi:"peerTransitRouterId"`
	// Owner ID of the peer transit router.
	PeerTransitRouterOwnerId pulumi.StringInput `pulumi:"peerTransitRouterOwnerId"`
	// Region ID of the peer transit router.
	PeerTransitRouterRegionId pulumi.StringInput `pulumi:"peerTransitRouterRegionId"`
	// Type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of CEN Transit Router peer attachment. Valid values `Attached`, `Attaching` and `Detaching`.
	Status pulumi.StringInput `pulumi:"status"`
	// The description of CEN Transit Router peer attachments.
	TransitRouterAttachmentDescription pulumi.StringInput `pulumi:"transitRouterAttachmentDescription"`
	// The ID of CEN Transit Router peer attachments.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// Name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The ID of transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
}

func (GetTransitRouterPeerAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterPeerAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterPeerAttachmentsAttachmentArgs) ToGetTransitRouterPeerAttachmentsAttachmentOutput() GetTransitRouterPeerAttachmentsAttachmentOutput {
	return i.ToGetTransitRouterPeerAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetTransitRouterPeerAttachmentsAttachmentArgs) ToGetTransitRouterPeerAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterPeerAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterPeerAttachmentsAttachmentOutput)
}

// GetTransitRouterPeerAttachmentsAttachmentArrayInput is an input type that accepts GetTransitRouterPeerAttachmentsAttachmentArray and GetTransitRouterPeerAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterPeerAttachmentsAttachmentArrayInput` via:
//
//	GetTransitRouterPeerAttachmentsAttachmentArray{ GetTransitRouterPeerAttachmentsAttachmentArgs{...} }
type GetTransitRouterPeerAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetTransitRouterPeerAttachmentsAttachmentArrayOutput() GetTransitRouterPeerAttachmentsAttachmentArrayOutput
	ToGetTransitRouterPeerAttachmentsAttachmentArrayOutputWithContext(context.Context) GetTransitRouterPeerAttachmentsAttachmentArrayOutput
}

type GetTransitRouterPeerAttachmentsAttachmentArray []GetTransitRouterPeerAttachmentsAttachmentInput

func (GetTransitRouterPeerAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterPeerAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterPeerAttachmentsAttachmentArray) ToGetTransitRouterPeerAttachmentsAttachmentArrayOutput() GetTransitRouterPeerAttachmentsAttachmentArrayOutput {
	return i.ToGetTransitRouterPeerAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterPeerAttachmentsAttachmentArray) ToGetTransitRouterPeerAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterPeerAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterPeerAttachmentsAttachmentArrayOutput)
}

type GetTransitRouterPeerAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetTransitRouterPeerAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterPeerAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterPeerAttachmentsAttachmentOutput) ToGetTransitRouterPeerAttachmentsAttachmentOutput() GetTransitRouterPeerAttachmentsAttachmentOutput {
	return o
}

func (o GetTransitRouterPeerAttachmentsAttachmentOutput) ToGetTransitRouterPeerAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterPeerAttachmentsAttachmentOutput {
	return o
}

// Auto publish route enabled.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) bool { return v.AutoPublishRouteEnabled }).(pulumi.BoolOutput)
}

// The bandwidth of the bandwidth package.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// ID of the CEN bandwidth package.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) CenBandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.CenBandwidthPackageId }).(pulumi.StringOutput)
}

// ID of the geographic.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) GeographicSpanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.GeographicSpanId }).(pulumi.StringOutput)
}

// The ID of CEN Transit Router peer attachments.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the peer transit router.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) PeerTransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.PeerTransitRouterId }).(pulumi.StringOutput)
}

// Owner ID of the peer transit router.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) PeerTransitRouterOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.PeerTransitRouterOwnerId }).(pulumi.StringOutput)
}

// Region ID of the peer transit router.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) PeerTransitRouterRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.PeerTransitRouterRegionId }).(pulumi.StringOutput)
}

// Type of the resource.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of CEN Transit Router peer attachment. Valid values `Attached`, `Attaching` and `Detaching`.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The description of CEN Transit Router peer attachments.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) TransitRouterAttachmentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.TransitRouterAttachmentDescription }).(pulumi.StringOutput)
}

// The ID of CEN Transit Router peer attachments.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// Name of the transit router attachment.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The ID of transit router.
func (o GetTransitRouterPeerAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPeerAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

type GetTransitRouterPeerAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterPeerAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterPeerAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterPeerAttachmentsAttachmentArrayOutput) ToGetTransitRouterPeerAttachmentsAttachmentArrayOutput() GetTransitRouterPeerAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterPeerAttachmentsAttachmentArrayOutput) ToGetTransitRouterPeerAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterPeerAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterPeerAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetTransitRouterPeerAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterPeerAttachmentsAttachment {
		return vs[0].([]GetTransitRouterPeerAttachmentsAttachment)[vs[1].(int)]
	}).(GetTransitRouterPeerAttachmentsAttachmentOutput)
}

type GetTransitRouterPrefixListAssociationsAssociation struct {
	// The ID of the Cen Transit Router Prefix List Association. It formats as `<prefix_list_id>:<transit_router_id>:<transit_router_table_id>:<next_hop>`.
	Id string `pulumi:"id"`
	// The ID of the next hop connection.
	NextHop string `pulumi:"nextHop"`
	// The ID of the network instance associated with the next hop connection.
	NextHopInstanceId string `pulumi:"nextHopInstanceId"`
	// The type of the next hop.
	NextHopType string `pulumi:"nextHopType"`
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid int `pulumi:"ownerUid"`
	// The ID of the prefix list.
	PrefixListId string `pulumi:"prefixListId"`
	// The status of the prefix list.
	Status string `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The ID of the route table of the transit router.
	TransitRouterTableId string `pulumi:"transitRouterTableId"`
}

// GetTransitRouterPrefixListAssociationsAssociationInput is an input type that accepts GetTransitRouterPrefixListAssociationsAssociationArgs and GetTransitRouterPrefixListAssociationsAssociationOutput values.
// You can construct a concrete instance of `GetTransitRouterPrefixListAssociationsAssociationInput` via:
//
//	GetTransitRouterPrefixListAssociationsAssociationArgs{...}
type GetTransitRouterPrefixListAssociationsAssociationInput interface {
	pulumi.Input

	ToGetTransitRouterPrefixListAssociationsAssociationOutput() GetTransitRouterPrefixListAssociationsAssociationOutput
	ToGetTransitRouterPrefixListAssociationsAssociationOutputWithContext(context.Context) GetTransitRouterPrefixListAssociationsAssociationOutput
}

type GetTransitRouterPrefixListAssociationsAssociationArgs struct {
	// The ID of the Cen Transit Router Prefix List Association. It formats as `<prefix_list_id>:<transit_router_id>:<transit_router_table_id>:<next_hop>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the next hop connection.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The ID of the network instance associated with the next hop connection.
	NextHopInstanceId pulumi.StringInput `pulumi:"nextHopInstanceId"`
	// The type of the next hop.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid pulumi.IntInput `pulumi:"ownerUid"`
	// The ID of the prefix list.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
	// The status of the prefix list.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The ID of the route table of the transit router.
	TransitRouterTableId pulumi.StringInput `pulumi:"transitRouterTableId"`
}

func (GetTransitRouterPrefixListAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterPrefixListAssociationsAssociation)(nil)).Elem()
}

func (i GetTransitRouterPrefixListAssociationsAssociationArgs) ToGetTransitRouterPrefixListAssociationsAssociationOutput() GetTransitRouterPrefixListAssociationsAssociationOutput {
	return i.ToGetTransitRouterPrefixListAssociationsAssociationOutputWithContext(context.Background())
}

func (i GetTransitRouterPrefixListAssociationsAssociationArgs) ToGetTransitRouterPrefixListAssociationsAssociationOutputWithContext(ctx context.Context) GetTransitRouterPrefixListAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterPrefixListAssociationsAssociationOutput)
}

// GetTransitRouterPrefixListAssociationsAssociationArrayInput is an input type that accepts GetTransitRouterPrefixListAssociationsAssociationArray and GetTransitRouterPrefixListAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterPrefixListAssociationsAssociationArrayInput` via:
//
//	GetTransitRouterPrefixListAssociationsAssociationArray{ GetTransitRouterPrefixListAssociationsAssociationArgs{...} }
type GetTransitRouterPrefixListAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToGetTransitRouterPrefixListAssociationsAssociationArrayOutput() GetTransitRouterPrefixListAssociationsAssociationArrayOutput
	ToGetTransitRouterPrefixListAssociationsAssociationArrayOutputWithContext(context.Context) GetTransitRouterPrefixListAssociationsAssociationArrayOutput
}

type GetTransitRouterPrefixListAssociationsAssociationArray []GetTransitRouterPrefixListAssociationsAssociationInput

func (GetTransitRouterPrefixListAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterPrefixListAssociationsAssociation)(nil)).Elem()
}

func (i GetTransitRouterPrefixListAssociationsAssociationArray) ToGetTransitRouterPrefixListAssociationsAssociationArrayOutput() GetTransitRouterPrefixListAssociationsAssociationArrayOutput {
	return i.ToGetTransitRouterPrefixListAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterPrefixListAssociationsAssociationArray) ToGetTransitRouterPrefixListAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetTransitRouterPrefixListAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterPrefixListAssociationsAssociationArrayOutput)
}

type GetTransitRouterPrefixListAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (GetTransitRouterPrefixListAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterPrefixListAssociationsAssociation)(nil)).Elem()
}

func (o GetTransitRouterPrefixListAssociationsAssociationOutput) ToGetTransitRouterPrefixListAssociationsAssociationOutput() GetTransitRouterPrefixListAssociationsAssociationOutput {
	return o
}

func (o GetTransitRouterPrefixListAssociationsAssociationOutput) ToGetTransitRouterPrefixListAssociationsAssociationOutputWithContext(ctx context.Context) GetTransitRouterPrefixListAssociationsAssociationOutput {
	return o
}

// The ID of the Cen Transit Router Prefix List Association. It formats as `<prefix_list_id>:<transit_router_id>:<transit_router_table_id>:<next_hop>`.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the next hop connection.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.NextHop }).(pulumi.StringOutput)
}

// The ID of the network instance associated with the next hop connection.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) NextHopInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.NextHopInstanceId }).(pulumi.StringOutput)
}

// The type of the next hop.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account to which the prefix list belongs.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) OwnerUid() pulumi.IntOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) int { return v.OwnerUid }).(pulumi.IntOutput)
}

// The ID of the prefix list.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// The status of the prefix list.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The ID of the route table of the transit router.
func (o GetTransitRouterPrefixListAssociationsAssociationOutput) TransitRouterTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterPrefixListAssociationsAssociation) string { return v.TransitRouterTableId }).(pulumi.StringOutput)
}

type GetTransitRouterPrefixListAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterPrefixListAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterPrefixListAssociationsAssociation)(nil)).Elem()
}

func (o GetTransitRouterPrefixListAssociationsAssociationArrayOutput) ToGetTransitRouterPrefixListAssociationsAssociationArrayOutput() GetTransitRouterPrefixListAssociationsAssociationArrayOutput {
	return o
}

func (o GetTransitRouterPrefixListAssociationsAssociationArrayOutput) ToGetTransitRouterPrefixListAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetTransitRouterPrefixListAssociationsAssociationArrayOutput {
	return o
}

func (o GetTransitRouterPrefixListAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) GetTransitRouterPrefixListAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterPrefixListAssociationsAssociation {
		return vs[0].([]GetTransitRouterPrefixListAssociationsAssociation)[vs[1].(int)]
	}).(GetTransitRouterPrefixListAssociationsAssociationOutput)
}

type GetTransitRouterRouteEntriesEntry struct {
	Id                                 string `pulumi:"id"`
	Status                             string `pulumi:"status"`
	TransitRouterRouteEntryDescription string `pulumi:"transitRouterRouteEntryDescription"`
	// The target network segment of the route entry.
	TransitRouterRouteEntryDestinationCidrBlock string `pulumi:"transitRouterRouteEntryDestinationCidrBlock"`
	TransitRouterRouteEntryId                   string `pulumi:"transitRouterRouteEntryId"`
	TransitRouterRouteEntryName                 string `pulumi:"transitRouterRouteEntryName"`
	// ID of the next hop.
	TransitRouterRouteEntryNextHopId string `pulumi:"transitRouterRouteEntryNextHopId"`
	// Type of the next hop.
	TransitRouterRouteEntryNextHopType string `pulumi:"transitRouterRouteEntryNextHopType"`
	// Type of the route entry.
	TransitRouterRouteEntryType string `pulumi:"transitRouterRouteEntryType"`
}

// GetTransitRouterRouteEntriesEntryInput is an input type that accepts GetTransitRouterRouteEntriesEntryArgs and GetTransitRouterRouteEntriesEntryOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteEntriesEntryInput` via:
//
//	GetTransitRouterRouteEntriesEntryArgs{...}
type GetTransitRouterRouteEntriesEntryInput interface {
	pulumi.Input

	ToGetTransitRouterRouteEntriesEntryOutput() GetTransitRouterRouteEntriesEntryOutput
	ToGetTransitRouterRouteEntriesEntryOutputWithContext(context.Context) GetTransitRouterRouteEntriesEntryOutput
}

type GetTransitRouterRouteEntriesEntryArgs struct {
	Id                                 pulumi.StringInput `pulumi:"id"`
	Status                             pulumi.StringInput `pulumi:"status"`
	TransitRouterRouteEntryDescription pulumi.StringInput `pulumi:"transitRouterRouteEntryDescription"`
	// The target network segment of the route entry.
	TransitRouterRouteEntryDestinationCidrBlock pulumi.StringInput `pulumi:"transitRouterRouteEntryDestinationCidrBlock"`
	TransitRouterRouteEntryId                   pulumi.StringInput `pulumi:"transitRouterRouteEntryId"`
	TransitRouterRouteEntryName                 pulumi.StringInput `pulumi:"transitRouterRouteEntryName"`
	// ID of the next hop.
	TransitRouterRouteEntryNextHopId pulumi.StringInput `pulumi:"transitRouterRouteEntryNextHopId"`
	// Type of the next hop.
	TransitRouterRouteEntryNextHopType pulumi.StringInput `pulumi:"transitRouterRouteEntryNextHopType"`
	// Type of the route entry.
	TransitRouterRouteEntryType pulumi.StringInput `pulumi:"transitRouterRouteEntryType"`
}

func (GetTransitRouterRouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteEntriesEntry)(nil)).Elem()
}

func (i GetTransitRouterRouteEntriesEntryArgs) ToGetTransitRouterRouteEntriesEntryOutput() GetTransitRouterRouteEntriesEntryOutput {
	return i.ToGetTransitRouterRouteEntriesEntryOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteEntriesEntryArgs) ToGetTransitRouterRouteEntriesEntryOutputWithContext(ctx context.Context) GetTransitRouterRouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteEntriesEntryOutput)
}

// GetTransitRouterRouteEntriesEntryArrayInput is an input type that accepts GetTransitRouterRouteEntriesEntryArray and GetTransitRouterRouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteEntriesEntryArrayInput` via:
//
//	GetTransitRouterRouteEntriesEntryArray{ GetTransitRouterRouteEntriesEntryArgs{...} }
type GetTransitRouterRouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetTransitRouterRouteEntriesEntryArrayOutput() GetTransitRouterRouteEntriesEntryArrayOutput
	ToGetTransitRouterRouteEntriesEntryArrayOutputWithContext(context.Context) GetTransitRouterRouteEntriesEntryArrayOutput
}

type GetTransitRouterRouteEntriesEntryArray []GetTransitRouterRouteEntriesEntryInput

func (GetTransitRouterRouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteEntriesEntry)(nil)).Elem()
}

func (i GetTransitRouterRouteEntriesEntryArray) ToGetTransitRouterRouteEntriesEntryArrayOutput() GetTransitRouterRouteEntriesEntryArrayOutput {
	return i.ToGetTransitRouterRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteEntriesEntryArray) ToGetTransitRouterRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteEntriesEntryArrayOutput)
}

type GetTransitRouterRouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteEntriesEntry)(nil)).Elem()
}

func (o GetTransitRouterRouteEntriesEntryOutput) ToGetTransitRouterRouteEntriesEntryOutput() GetTransitRouterRouteEntriesEntryOutput {
	return o
}

func (o GetTransitRouterRouteEntriesEntryOutput) ToGetTransitRouterRouteEntriesEntryOutputWithContext(ctx context.Context) GetTransitRouterRouteEntriesEntryOutput {
	return o
}

func (o GetTransitRouterRouteEntriesEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTransitRouterRouteEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryDescription }).(pulumi.StringOutput)
}

// The target network segment of the route entry.
func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryDestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryDestinationCidrBlock }).(pulumi.StringOutput)
}

func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryId }).(pulumi.StringOutput)
}

func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryName }).(pulumi.StringOutput)
}

// ID of the next hop.
func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryNextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryNextHopId }).(pulumi.StringOutput)
}

// Type of the next hop.
func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryNextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryNextHopType }).(pulumi.StringOutput)
}

// Type of the route entry.
func (o GetTransitRouterRouteEntriesEntryOutput) TransitRouterRouteEntryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteEntriesEntry) string { return v.TransitRouterRouteEntryType }).(pulumi.StringOutput)
}

type GetTransitRouterRouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteEntriesEntry)(nil)).Elem()
}

func (o GetTransitRouterRouteEntriesEntryArrayOutput) ToGetTransitRouterRouteEntriesEntryArrayOutput() GetTransitRouterRouteEntriesEntryArrayOutput {
	return o
}

func (o GetTransitRouterRouteEntriesEntryArrayOutput) ToGetTransitRouterRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteEntriesEntryArrayOutput {
	return o
}

func (o GetTransitRouterRouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetTransitRouterRouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterRouteEntriesEntry {
		return vs[0].([]GetTransitRouterRouteEntriesEntry)[vs[1].(int)]
	}).(GetTransitRouterRouteEntriesEntryOutput)
}

type GetTransitRouterRouteTableAssociationsAssociation struct {
	Id string `pulumi:"id"`
	// ID of the transit router route table association.
	ResourceId string `pulumi:"resourceId"`
	// Type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the route table, including `Active`, `Associating`, `Dissociating`.
	Status string `pulumi:"status"`
	// ID of the cen transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
}

// GetTransitRouterRouteTableAssociationsAssociationInput is an input type that accepts GetTransitRouterRouteTableAssociationsAssociationArgs and GetTransitRouterRouteTableAssociationsAssociationOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTableAssociationsAssociationInput` via:
//
//	GetTransitRouterRouteTableAssociationsAssociationArgs{...}
type GetTransitRouterRouteTableAssociationsAssociationInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTableAssociationsAssociationOutput() GetTransitRouterRouteTableAssociationsAssociationOutput
	ToGetTransitRouterRouteTableAssociationsAssociationOutputWithContext(context.Context) GetTransitRouterRouteTableAssociationsAssociationOutput
}

type GetTransitRouterRouteTableAssociationsAssociationArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the transit router route table association.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the route table, including `Active`, `Associating`, `Dissociating`.
	Status pulumi.StringInput `pulumi:"status"`
	// ID of the cen transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
}

func (GetTransitRouterRouteTableAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTableAssociationsAssociation)(nil)).Elem()
}

func (i GetTransitRouterRouteTableAssociationsAssociationArgs) ToGetTransitRouterRouteTableAssociationsAssociationOutput() GetTransitRouterRouteTableAssociationsAssociationOutput {
	return i.ToGetTransitRouterRouteTableAssociationsAssociationOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTableAssociationsAssociationArgs) ToGetTransitRouterRouteTableAssociationsAssociationOutputWithContext(ctx context.Context) GetTransitRouterRouteTableAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTableAssociationsAssociationOutput)
}

// GetTransitRouterRouteTableAssociationsAssociationArrayInput is an input type that accepts GetTransitRouterRouteTableAssociationsAssociationArray and GetTransitRouterRouteTableAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTableAssociationsAssociationArrayInput` via:
//
//	GetTransitRouterRouteTableAssociationsAssociationArray{ GetTransitRouterRouteTableAssociationsAssociationArgs{...} }
type GetTransitRouterRouteTableAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTableAssociationsAssociationArrayOutput() GetTransitRouterRouteTableAssociationsAssociationArrayOutput
	ToGetTransitRouterRouteTableAssociationsAssociationArrayOutputWithContext(context.Context) GetTransitRouterRouteTableAssociationsAssociationArrayOutput
}

type GetTransitRouterRouteTableAssociationsAssociationArray []GetTransitRouterRouteTableAssociationsAssociationInput

func (GetTransitRouterRouteTableAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTableAssociationsAssociation)(nil)).Elem()
}

func (i GetTransitRouterRouteTableAssociationsAssociationArray) ToGetTransitRouterRouteTableAssociationsAssociationArrayOutput() GetTransitRouterRouteTableAssociationsAssociationArrayOutput {
	return i.ToGetTransitRouterRouteTableAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTableAssociationsAssociationArray) ToGetTransitRouterRouteTableAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTableAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTableAssociationsAssociationArrayOutput)
}

type GetTransitRouterRouteTableAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTableAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTableAssociationsAssociation)(nil)).Elem()
}

func (o GetTransitRouterRouteTableAssociationsAssociationOutput) ToGetTransitRouterRouteTableAssociationsAssociationOutput() GetTransitRouterRouteTableAssociationsAssociationOutput {
	return o
}

func (o GetTransitRouterRouteTableAssociationsAssociationOutput) ToGetTransitRouterRouteTableAssociationsAssociationOutputWithContext(ctx context.Context) GetTransitRouterRouteTableAssociationsAssociationOutput {
	return o
}

func (o GetTransitRouterRouteTableAssociationsAssociationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableAssociationsAssociation) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the transit router route table association.
func (o GetTransitRouterRouteTableAssociationsAssociationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableAssociationsAssociation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Type of the resource.
func (o GetTransitRouterRouteTableAssociationsAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableAssociationsAssociation) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the route table, including `Active`, `Associating`, `Dissociating`.
func (o GetTransitRouterRouteTableAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// ID of the cen transit router attachment.
func (o GetTransitRouterRouteTableAssociationsAssociationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableAssociationsAssociation) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

type GetTransitRouterRouteTableAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTableAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTableAssociationsAssociation)(nil)).Elem()
}

func (o GetTransitRouterRouteTableAssociationsAssociationArrayOutput) ToGetTransitRouterRouteTableAssociationsAssociationArrayOutput() GetTransitRouterRouteTableAssociationsAssociationArrayOutput {
	return o
}

func (o GetTransitRouterRouteTableAssociationsAssociationArrayOutput) ToGetTransitRouterRouteTableAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTableAssociationsAssociationArrayOutput {
	return o
}

func (o GetTransitRouterRouteTableAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) GetTransitRouterRouteTableAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterRouteTableAssociationsAssociation {
		return vs[0].([]GetTransitRouterRouteTableAssociationsAssociation)[vs[1].(int)]
	}).(GetTransitRouterRouteTableAssociationsAssociationOutput)
}

type GetTransitRouterRouteTablePropagationsPropagation struct {
	Id string `pulumi:"id"`
	// ID of the transit router route table association.
	ResourceId string `pulumi:"resourceId"`
	// Type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the route table, including `Active`, `Enabling`, `Disabling`, `Deleted`.
	Status string `pulumi:"status"`
	// ID of the cen transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
}

// GetTransitRouterRouteTablePropagationsPropagationInput is an input type that accepts GetTransitRouterRouteTablePropagationsPropagationArgs and GetTransitRouterRouteTablePropagationsPropagationOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTablePropagationsPropagationInput` via:
//
//	GetTransitRouterRouteTablePropagationsPropagationArgs{...}
type GetTransitRouterRouteTablePropagationsPropagationInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTablePropagationsPropagationOutput() GetTransitRouterRouteTablePropagationsPropagationOutput
	ToGetTransitRouterRouteTablePropagationsPropagationOutputWithContext(context.Context) GetTransitRouterRouteTablePropagationsPropagationOutput
}

type GetTransitRouterRouteTablePropagationsPropagationArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the transit router route table association.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the route table, including `Active`, `Enabling`, `Disabling`, `Deleted`.
	Status pulumi.StringInput `pulumi:"status"`
	// ID of the cen transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
}

func (GetTransitRouterRouteTablePropagationsPropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTablePropagationsPropagation)(nil)).Elem()
}

func (i GetTransitRouterRouteTablePropagationsPropagationArgs) ToGetTransitRouterRouteTablePropagationsPropagationOutput() GetTransitRouterRouteTablePropagationsPropagationOutput {
	return i.ToGetTransitRouterRouteTablePropagationsPropagationOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTablePropagationsPropagationArgs) ToGetTransitRouterRouteTablePropagationsPropagationOutputWithContext(ctx context.Context) GetTransitRouterRouteTablePropagationsPropagationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTablePropagationsPropagationOutput)
}

// GetTransitRouterRouteTablePropagationsPropagationArrayInput is an input type that accepts GetTransitRouterRouteTablePropagationsPropagationArray and GetTransitRouterRouteTablePropagationsPropagationArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTablePropagationsPropagationArrayInput` via:
//
//	GetTransitRouterRouteTablePropagationsPropagationArray{ GetTransitRouterRouteTablePropagationsPropagationArgs{...} }
type GetTransitRouterRouteTablePropagationsPropagationArrayInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTablePropagationsPropagationArrayOutput() GetTransitRouterRouteTablePropagationsPropagationArrayOutput
	ToGetTransitRouterRouteTablePropagationsPropagationArrayOutputWithContext(context.Context) GetTransitRouterRouteTablePropagationsPropagationArrayOutput
}

type GetTransitRouterRouteTablePropagationsPropagationArray []GetTransitRouterRouteTablePropagationsPropagationInput

func (GetTransitRouterRouteTablePropagationsPropagationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTablePropagationsPropagation)(nil)).Elem()
}

func (i GetTransitRouterRouteTablePropagationsPropagationArray) ToGetTransitRouterRouteTablePropagationsPropagationArrayOutput() GetTransitRouterRouteTablePropagationsPropagationArrayOutput {
	return i.ToGetTransitRouterRouteTablePropagationsPropagationArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTablePropagationsPropagationArray) ToGetTransitRouterRouteTablePropagationsPropagationArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTablePropagationsPropagationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTablePropagationsPropagationArrayOutput)
}

type GetTransitRouterRouteTablePropagationsPropagationOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTablePropagationsPropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTablePropagationsPropagation)(nil)).Elem()
}

func (o GetTransitRouterRouteTablePropagationsPropagationOutput) ToGetTransitRouterRouteTablePropagationsPropagationOutput() GetTransitRouterRouteTablePropagationsPropagationOutput {
	return o
}

func (o GetTransitRouterRouteTablePropagationsPropagationOutput) ToGetTransitRouterRouteTablePropagationsPropagationOutputWithContext(ctx context.Context) GetTransitRouterRouteTablePropagationsPropagationOutput {
	return o
}

func (o GetTransitRouterRouteTablePropagationsPropagationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablePropagationsPropagation) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the transit router route table association.
func (o GetTransitRouterRouteTablePropagationsPropagationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablePropagationsPropagation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Type of the resource.
func (o GetTransitRouterRouteTablePropagationsPropagationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablePropagationsPropagation) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the route table, including `Active`, `Enabling`, `Disabling`, `Deleted`.
func (o GetTransitRouterRouteTablePropagationsPropagationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablePropagationsPropagation) string { return v.Status }).(pulumi.StringOutput)
}

// ID of the cen transit router attachment.
func (o GetTransitRouterRouteTablePropagationsPropagationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablePropagationsPropagation) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

type GetTransitRouterRouteTablePropagationsPropagationArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTablePropagationsPropagationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTablePropagationsPropagation)(nil)).Elem()
}

func (o GetTransitRouterRouteTablePropagationsPropagationArrayOutput) ToGetTransitRouterRouteTablePropagationsPropagationArrayOutput() GetTransitRouterRouteTablePropagationsPropagationArrayOutput {
	return o
}

func (o GetTransitRouterRouteTablePropagationsPropagationArrayOutput) ToGetTransitRouterRouteTablePropagationsPropagationArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTablePropagationsPropagationArrayOutput {
	return o
}

func (o GetTransitRouterRouteTablePropagationsPropagationArrayOutput) Index(i pulumi.IntInput) GetTransitRouterRouteTablePropagationsPropagationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterRouteTablePropagationsPropagation {
		return vs[0].([]GetTransitRouterRouteTablePropagationsPropagation)[vs[1].(int)]
	}).(GetTransitRouterRouteTablePropagationsPropagationOutput)
}

type GetTransitRouterRouteTablesTable struct {
	// ID of resource.
	Id     string `pulumi:"id"`
	Status string `pulumi:"status"`
	// The description of the transit router route table.
	TransitRouterRouteTableDescription string `pulumi:"transitRouterRouteTableDescription"`
	// ID of the trabsit router route table.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// Name of the transit router route table.
	TransitRouterRouteTableName string `pulumi:"transitRouterRouteTableName"`
	// The type of the transit router route table to query. Valid values `Creating`, `Active` and `Deleting`..
	TransitRouterRouteTableType string `pulumi:"transitRouterRouteTableType"`
}

// GetTransitRouterRouteTablesTableInput is an input type that accepts GetTransitRouterRouteTablesTableArgs and GetTransitRouterRouteTablesTableOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTablesTableInput` via:
//
//	GetTransitRouterRouteTablesTableArgs{...}
type GetTransitRouterRouteTablesTableInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTablesTableOutput() GetTransitRouterRouteTablesTableOutput
	ToGetTransitRouterRouteTablesTableOutputWithContext(context.Context) GetTransitRouterRouteTablesTableOutput
}

type GetTransitRouterRouteTablesTableArgs struct {
	// ID of resource.
	Id     pulumi.StringInput `pulumi:"id"`
	Status pulumi.StringInput `pulumi:"status"`
	// The description of the transit router route table.
	TransitRouterRouteTableDescription pulumi.StringInput `pulumi:"transitRouterRouteTableDescription"`
	// ID of the trabsit router route table.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// Name of the transit router route table.
	TransitRouterRouteTableName pulumi.StringInput `pulumi:"transitRouterRouteTableName"`
	// The type of the transit router route table to query. Valid values `Creating`, `Active` and `Deleting`..
	TransitRouterRouteTableType pulumi.StringInput `pulumi:"transitRouterRouteTableType"`
}

func (GetTransitRouterRouteTablesTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTablesTable)(nil)).Elem()
}

func (i GetTransitRouterRouteTablesTableArgs) ToGetTransitRouterRouteTablesTableOutput() GetTransitRouterRouteTablesTableOutput {
	return i.ToGetTransitRouterRouteTablesTableOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTablesTableArgs) ToGetTransitRouterRouteTablesTableOutputWithContext(ctx context.Context) GetTransitRouterRouteTablesTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTablesTableOutput)
}

// GetTransitRouterRouteTablesTableArrayInput is an input type that accepts GetTransitRouterRouteTablesTableArray and GetTransitRouterRouteTablesTableArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTablesTableArrayInput` via:
//
//	GetTransitRouterRouteTablesTableArray{ GetTransitRouterRouteTablesTableArgs{...} }
type GetTransitRouterRouteTablesTableArrayInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTablesTableArrayOutput() GetTransitRouterRouteTablesTableArrayOutput
	ToGetTransitRouterRouteTablesTableArrayOutputWithContext(context.Context) GetTransitRouterRouteTablesTableArrayOutput
}

type GetTransitRouterRouteTablesTableArray []GetTransitRouterRouteTablesTableInput

func (GetTransitRouterRouteTablesTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTablesTable)(nil)).Elem()
}

func (i GetTransitRouterRouteTablesTableArray) ToGetTransitRouterRouteTablesTableArrayOutput() GetTransitRouterRouteTablesTableArrayOutput {
	return i.ToGetTransitRouterRouteTablesTableArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTablesTableArray) ToGetTransitRouterRouteTablesTableArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTablesTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTablesTableArrayOutput)
}

type GetTransitRouterRouteTablesTableOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTablesTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTablesTable)(nil)).Elem()
}

func (o GetTransitRouterRouteTablesTableOutput) ToGetTransitRouterRouteTablesTableOutput() GetTransitRouterRouteTablesTableOutput {
	return o
}

func (o GetTransitRouterRouteTablesTableOutput) ToGetTransitRouterRouteTablesTableOutputWithContext(ctx context.Context) GetTransitRouterRouteTablesTableOutput {
	return o
}

// ID of resource.
func (o GetTransitRouterRouteTablesTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablesTable) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTransitRouterRouteTablesTableOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablesTable) string { return v.Status }).(pulumi.StringOutput)
}

// The description of the transit router route table.
func (o GetTransitRouterRouteTablesTableOutput) TransitRouterRouteTableDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablesTable) string { return v.TransitRouterRouteTableDescription }).(pulumi.StringOutput)
}

// ID of the trabsit router route table.
func (o GetTransitRouterRouteTablesTableOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablesTable) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// Name of the transit router route table.
func (o GetTransitRouterRouteTablesTableOutput) TransitRouterRouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablesTable) string { return v.TransitRouterRouteTableName }).(pulumi.StringOutput)
}

// The type of the transit router route table to query. Valid values `Creating`, `Active` and `Deleting`..
func (o GetTransitRouterRouteTablesTableOutput) TransitRouterRouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTablesTable) string { return v.TransitRouterRouteTableType }).(pulumi.StringOutput)
}

type GetTransitRouterRouteTablesTableArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTablesTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTablesTable)(nil)).Elem()
}

func (o GetTransitRouterRouteTablesTableArrayOutput) ToGetTransitRouterRouteTablesTableArrayOutput() GetTransitRouterRouteTablesTableArrayOutput {
	return o
}

func (o GetTransitRouterRouteTablesTableArrayOutput) ToGetTransitRouterRouteTablesTableArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTablesTableArrayOutput {
	return o
}

func (o GetTransitRouterRouteTablesTableArrayOutput) Index(i pulumi.IntInput) GetTransitRouterRouteTablesTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterRouteTablesTable {
		return vs[0].([]GetTransitRouterRouteTablesTable)[vs[1].(int)]
	}).(GetTransitRouterRouteTablesTableOutput)
}

type GetTransitRouterVbrAttachmentsAttachment struct {
	// ID of the region where the conflicted VBR is located.
	AutoPublishRouteEnabled bool   `pulumi:"autoPublishRouteEnabled"`
	Id                      string `pulumi:"id"`
	// Type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the resource. Valid values `Attached`, `Attaching` and `Detaching`.
	Status                             string `pulumi:"status"`
	TransitRouterAttachmentDescription string `pulumi:"transitRouterAttachmentDescription"`
	// ID of the transit router VBR attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// Name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// ID of the VBR.
	VbrId string `pulumi:"vbrId"`
	// The Owner ID of the VBR.
	VbrOwnerId string `pulumi:"vbrOwnerId"`
}

// GetTransitRouterVbrAttachmentsAttachmentInput is an input type that accepts GetTransitRouterVbrAttachmentsAttachmentArgs and GetTransitRouterVbrAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetTransitRouterVbrAttachmentsAttachmentInput` via:
//
//	GetTransitRouterVbrAttachmentsAttachmentArgs{...}
type GetTransitRouterVbrAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetTransitRouterVbrAttachmentsAttachmentOutput() GetTransitRouterVbrAttachmentsAttachmentOutput
	ToGetTransitRouterVbrAttachmentsAttachmentOutputWithContext(context.Context) GetTransitRouterVbrAttachmentsAttachmentOutput
}

type GetTransitRouterVbrAttachmentsAttachmentArgs struct {
	// ID of the region where the conflicted VBR is located.
	AutoPublishRouteEnabled pulumi.BoolInput   `pulumi:"autoPublishRouteEnabled"`
	Id                      pulumi.StringInput `pulumi:"id"`
	// Type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the resource. Valid values `Attached`, `Attaching` and `Detaching`.
	Status                             pulumi.StringInput `pulumi:"status"`
	TransitRouterAttachmentDescription pulumi.StringInput `pulumi:"transitRouterAttachmentDescription"`
	// ID of the transit router VBR attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// Name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// ID of the VBR.
	VbrId pulumi.StringInput `pulumi:"vbrId"`
	// The Owner ID of the VBR.
	VbrOwnerId pulumi.StringInput `pulumi:"vbrOwnerId"`
}

func (GetTransitRouterVbrAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVbrAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterVbrAttachmentsAttachmentArgs) ToGetTransitRouterVbrAttachmentsAttachmentOutput() GetTransitRouterVbrAttachmentsAttachmentOutput {
	return i.ToGetTransitRouterVbrAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetTransitRouterVbrAttachmentsAttachmentArgs) ToGetTransitRouterVbrAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterVbrAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVbrAttachmentsAttachmentOutput)
}

// GetTransitRouterVbrAttachmentsAttachmentArrayInput is an input type that accepts GetTransitRouterVbrAttachmentsAttachmentArray and GetTransitRouterVbrAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterVbrAttachmentsAttachmentArrayInput` via:
//
//	GetTransitRouterVbrAttachmentsAttachmentArray{ GetTransitRouterVbrAttachmentsAttachmentArgs{...} }
type GetTransitRouterVbrAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetTransitRouterVbrAttachmentsAttachmentArrayOutput() GetTransitRouterVbrAttachmentsAttachmentArrayOutput
	ToGetTransitRouterVbrAttachmentsAttachmentArrayOutputWithContext(context.Context) GetTransitRouterVbrAttachmentsAttachmentArrayOutput
}

type GetTransitRouterVbrAttachmentsAttachmentArray []GetTransitRouterVbrAttachmentsAttachmentInput

func (GetTransitRouterVbrAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVbrAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterVbrAttachmentsAttachmentArray) ToGetTransitRouterVbrAttachmentsAttachmentArrayOutput() GetTransitRouterVbrAttachmentsAttachmentArrayOutput {
	return i.ToGetTransitRouterVbrAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterVbrAttachmentsAttachmentArray) ToGetTransitRouterVbrAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterVbrAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVbrAttachmentsAttachmentArrayOutput)
}

type GetTransitRouterVbrAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVbrAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVbrAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterVbrAttachmentsAttachmentOutput) ToGetTransitRouterVbrAttachmentsAttachmentOutput() GetTransitRouterVbrAttachmentsAttachmentOutput {
	return o
}

func (o GetTransitRouterVbrAttachmentsAttachmentOutput) ToGetTransitRouterVbrAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterVbrAttachmentsAttachmentOutput {
	return o
}

// ID of the region where the conflicted VBR is located.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) bool { return v.AutoPublishRouteEnabled }).(pulumi.BoolOutput)
}

func (o GetTransitRouterVbrAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// Type of the resource.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the resource. Valid values `Attached`, `Attaching` and `Detaching`.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetTransitRouterVbrAttachmentsAttachmentOutput) TransitRouterAttachmentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.TransitRouterAttachmentDescription }).(pulumi.StringOutput)
}

// ID of the transit router VBR attachment.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// Name of the transit router attachment.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// ID of the VBR.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) VbrId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.VbrId }).(pulumi.StringOutput)
}

// The Owner ID of the VBR.
func (o GetTransitRouterVbrAttachmentsAttachmentOutput) VbrOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVbrAttachmentsAttachment) string { return v.VbrOwnerId }).(pulumi.StringOutput)
}

type GetTransitRouterVbrAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVbrAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVbrAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterVbrAttachmentsAttachmentArrayOutput) ToGetTransitRouterVbrAttachmentsAttachmentArrayOutput() GetTransitRouterVbrAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterVbrAttachmentsAttachmentArrayOutput) ToGetTransitRouterVbrAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterVbrAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterVbrAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetTransitRouterVbrAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterVbrAttachmentsAttachment {
		return vs[0].([]GetTransitRouterVbrAttachmentsAttachment)[vs[1].(int)]
	}).(GetTransitRouterVbrAttachmentsAttachmentOutput)
}

type GetTransitRouterVpcAttachmentsAttachment struct {
	// The ID of the transit router.
	Id string `pulumi:"id"`
	// The payment type of the resource.
	PaymentType string `pulumi:"paymentType"`
	// Type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the resource. Valid values `Attached`, `Attaching` and `Detaching`.
	Status string `pulumi:"status"`
	// The description of transit router attachment.
	TransitRouterAttachmentDescription string `pulumi:"transitRouterAttachmentDescription"`
	// ID of the transit router VBR attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// Name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// The Owner ID of the VPC.
	VpcOwnerId string `pulumi:"vpcOwnerId"`
	// The mappings of zone
	ZoneMappings []GetTransitRouterVpcAttachmentsAttachmentZoneMapping `pulumi:"zoneMappings"`
}

// GetTransitRouterVpcAttachmentsAttachmentInput is an input type that accepts GetTransitRouterVpcAttachmentsAttachmentArgs and GetTransitRouterVpcAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetTransitRouterVpcAttachmentsAttachmentInput` via:
//
//	GetTransitRouterVpcAttachmentsAttachmentArgs{...}
type GetTransitRouterVpcAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetTransitRouterVpcAttachmentsAttachmentOutput() GetTransitRouterVpcAttachmentsAttachmentOutput
	ToGetTransitRouterVpcAttachmentsAttachmentOutputWithContext(context.Context) GetTransitRouterVpcAttachmentsAttachmentOutput
}

type GetTransitRouterVpcAttachmentsAttachmentArgs struct {
	// The ID of the transit router.
	Id pulumi.StringInput `pulumi:"id"`
	// The payment type of the resource.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// Type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the resource. Valid values `Attached`, `Attaching` and `Detaching`.
	Status pulumi.StringInput `pulumi:"status"`
	// The description of transit router attachment.
	TransitRouterAttachmentDescription pulumi.StringInput `pulumi:"transitRouterAttachmentDescription"`
	// ID of the transit router VBR attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// Name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The Owner ID of the VPC.
	VpcOwnerId pulumi.StringInput `pulumi:"vpcOwnerId"`
	// The mappings of zone
	ZoneMappings GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayInput `pulumi:"zoneMappings"`
}

func (GetTransitRouterVpcAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterVpcAttachmentsAttachmentArgs) ToGetTransitRouterVpcAttachmentsAttachmentOutput() GetTransitRouterVpcAttachmentsAttachmentOutput {
	return i.ToGetTransitRouterVpcAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetTransitRouterVpcAttachmentsAttachmentArgs) ToGetTransitRouterVpcAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpcAttachmentsAttachmentOutput)
}

// GetTransitRouterVpcAttachmentsAttachmentArrayInput is an input type that accepts GetTransitRouterVpcAttachmentsAttachmentArray and GetTransitRouterVpcAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterVpcAttachmentsAttachmentArrayInput` via:
//
//	GetTransitRouterVpcAttachmentsAttachmentArray{ GetTransitRouterVpcAttachmentsAttachmentArgs{...} }
type GetTransitRouterVpcAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetTransitRouterVpcAttachmentsAttachmentArrayOutput() GetTransitRouterVpcAttachmentsAttachmentArrayOutput
	ToGetTransitRouterVpcAttachmentsAttachmentArrayOutputWithContext(context.Context) GetTransitRouterVpcAttachmentsAttachmentArrayOutput
}

type GetTransitRouterVpcAttachmentsAttachmentArray []GetTransitRouterVpcAttachmentsAttachmentInput

func (GetTransitRouterVpcAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpcAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterVpcAttachmentsAttachmentArray) ToGetTransitRouterVpcAttachmentsAttachmentArrayOutput() GetTransitRouterVpcAttachmentsAttachmentArrayOutput {
	return i.ToGetTransitRouterVpcAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterVpcAttachmentsAttachmentArray) ToGetTransitRouterVpcAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpcAttachmentsAttachmentArrayOutput)
}

type GetTransitRouterVpcAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpcAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterVpcAttachmentsAttachmentOutput) ToGetTransitRouterVpcAttachmentsAttachmentOutput() GetTransitRouterVpcAttachmentsAttachmentOutput {
	return o
}

func (o GetTransitRouterVpcAttachmentsAttachmentOutput) ToGetTransitRouterVpcAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentOutput {
	return o
}

// The ID of the transit router.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The payment type of the resource.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.PaymentType }).(pulumi.StringOutput)
}

// Type of the resource.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the resource. Valid values `Attached`, `Attaching` and `Detaching`.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The description of transit router attachment.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) TransitRouterAttachmentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.TransitRouterAttachmentDescription }).(pulumi.StringOutput)
}

// ID of the transit router VBR attachment.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// Name of the transit router attachment.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// ID of the VPC.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.VpcId }).(pulumi.StringOutput)
}

// The Owner ID of the VPC.
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) VpcOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) string { return v.VpcOwnerId }).(pulumi.StringOutput)
}

// The mappings of zone
func (o GetTransitRouterVpcAttachmentsAttachmentOutput) ZoneMappings() GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachment) []GetTransitRouterVpcAttachmentsAttachmentZoneMapping {
		return v.ZoneMappings
	}).(GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput)
}

type GetTransitRouterVpcAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpcAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpcAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterVpcAttachmentsAttachmentArrayOutput) ToGetTransitRouterVpcAttachmentsAttachmentArrayOutput() GetTransitRouterVpcAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterVpcAttachmentsAttachmentArrayOutput) ToGetTransitRouterVpcAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterVpcAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetTransitRouterVpcAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterVpcAttachmentsAttachment {
		return vs[0].([]GetTransitRouterVpcAttachmentsAttachment)[vs[1].(int)]
	}).(GetTransitRouterVpcAttachmentsAttachmentOutput)
}

type GetTransitRouterVpcAttachmentsAttachmentZoneMapping struct {
	// The VSwitch ID.
	VswitchId string `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetTransitRouterVpcAttachmentsAttachmentZoneMappingInput is an input type that accepts GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs and GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput values.
// You can construct a concrete instance of `GetTransitRouterVpcAttachmentsAttachmentZoneMappingInput` via:
//
//	GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs{...}
type GetTransitRouterVpcAttachmentsAttachmentZoneMappingInput interface {
	pulumi.Input

	ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput() GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput
	ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutputWithContext(context.Context) GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput
}

type GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs struct {
	// The VSwitch ID.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachmentZoneMapping)(nil)).Elem()
}

func (i GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput() GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput {
	return i.ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutputWithContext(context.Background())
}

func (i GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput)
}

// GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayInput is an input type that accepts GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray and GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayInput` via:
//
//	GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray{ GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs{...} }
type GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayInput interface {
	pulumi.Input

	ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput() GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput
	ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutputWithContext(context.Context) GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput
}

type GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray []GetTransitRouterVpcAttachmentsAttachmentZoneMappingInput

func (GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpcAttachmentsAttachmentZoneMapping)(nil)).Elem()
}

func (i GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput() GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput {
	return i.ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput)
}

type GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachmentZoneMapping)(nil)).Elem()
}

func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput() GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput {
	return o
}

func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput {
	return o
}

// The VSwitch ID.
func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachmentZoneMapping) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The zone ID.
func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpcAttachmentsAttachmentZoneMapping) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpcAttachmentsAttachmentZoneMapping)(nil)).Elem()
}

func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput() GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput {
	return o
}

func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput) ToGetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutputWithContext(ctx context.Context) GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput {
	return o
}

func (o GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput) Index(i pulumi.IntInput) GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterVpcAttachmentsAttachmentZoneMapping {
		return vs[0].([]GetTransitRouterVpcAttachmentsAttachmentZoneMapping)[vs[1].(int)]
	}).(GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput)
}

type GetTransitRouterVpnAttachmentsAttachment struct {
	// Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
	AutoPublishRouteEnabled bool `pulumi:"autoPublishRouteEnabled"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	Id         string `pulumi:"id"`
	// Type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the transit router attachment.
	Status string `pulumi:"status"`
	// The description of the VPN connection.
	TransitRouterAttachmentDescription string `pulumi:"transitRouterAttachmentDescription"`
	TransitRouterAttachmentId          string `pulumi:"transitRouterAttachmentId"`
	// The name of the VPN connection.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The ID of the forwarding router instance.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The id of the vpn.
	VpnId string `pulumi:"vpnId"`
	// The owner id of vpn.
	VpnOwnerId string `pulumi:"vpnOwnerId"`
	// The list of zone mapping.
	Zones []GetTransitRouterVpnAttachmentsAttachmentZone `pulumi:"zones"`
}

// GetTransitRouterVpnAttachmentsAttachmentInput is an input type that accepts GetTransitRouterVpnAttachmentsAttachmentArgs and GetTransitRouterVpnAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetTransitRouterVpnAttachmentsAttachmentInput` via:
//
//	GetTransitRouterVpnAttachmentsAttachmentArgs{...}
type GetTransitRouterVpnAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetTransitRouterVpnAttachmentsAttachmentOutput() GetTransitRouterVpnAttachmentsAttachmentOutput
	ToGetTransitRouterVpnAttachmentsAttachmentOutputWithContext(context.Context) GetTransitRouterVpnAttachmentsAttachmentOutput
}

type GetTransitRouterVpnAttachmentsAttachmentArgs struct {
	// Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
	AutoPublishRouteEnabled pulumi.BoolInput `pulumi:"autoPublishRouteEnabled"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	Id         pulumi.StringInput `pulumi:"id"`
	// Type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the transit router attachment.
	Status pulumi.StringInput `pulumi:"status"`
	// The description of the VPN connection.
	TransitRouterAttachmentDescription pulumi.StringInput `pulumi:"transitRouterAttachmentDescription"`
	TransitRouterAttachmentId          pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of the VPN connection.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The ID of the forwarding router instance.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The id of the vpn.
	VpnId pulumi.StringInput `pulumi:"vpnId"`
	// The owner id of vpn.
	VpnOwnerId pulumi.StringInput `pulumi:"vpnOwnerId"`
	// The list of zone mapping.
	Zones GetTransitRouterVpnAttachmentsAttachmentZoneArrayInput `pulumi:"zones"`
}

func (GetTransitRouterVpnAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterVpnAttachmentsAttachmentArgs) ToGetTransitRouterVpnAttachmentsAttachmentOutput() GetTransitRouterVpnAttachmentsAttachmentOutput {
	return i.ToGetTransitRouterVpnAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetTransitRouterVpnAttachmentsAttachmentArgs) ToGetTransitRouterVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpnAttachmentsAttachmentOutput)
}

// GetTransitRouterVpnAttachmentsAttachmentArrayInput is an input type that accepts GetTransitRouterVpnAttachmentsAttachmentArray and GetTransitRouterVpnAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterVpnAttachmentsAttachmentArrayInput` via:
//
//	GetTransitRouterVpnAttachmentsAttachmentArray{ GetTransitRouterVpnAttachmentsAttachmentArgs{...} }
type GetTransitRouterVpnAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetTransitRouterVpnAttachmentsAttachmentArrayOutput() GetTransitRouterVpnAttachmentsAttachmentArrayOutput
	ToGetTransitRouterVpnAttachmentsAttachmentArrayOutputWithContext(context.Context) GetTransitRouterVpnAttachmentsAttachmentArrayOutput
}

type GetTransitRouterVpnAttachmentsAttachmentArray []GetTransitRouterVpnAttachmentsAttachmentInput

func (GetTransitRouterVpnAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpnAttachmentsAttachment)(nil)).Elem()
}

func (i GetTransitRouterVpnAttachmentsAttachmentArray) ToGetTransitRouterVpnAttachmentsAttachmentArrayOutput() GetTransitRouterVpnAttachmentsAttachmentArrayOutput {
	return i.ToGetTransitRouterVpnAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterVpnAttachmentsAttachmentArray) ToGetTransitRouterVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpnAttachmentsAttachmentArrayOutput)
}

type GetTransitRouterVpnAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpnAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterVpnAttachmentsAttachmentOutput) ToGetTransitRouterVpnAttachmentsAttachmentOutput() GetTransitRouterVpnAttachmentsAttachmentOutput {
	return o
}

func (o GetTransitRouterVpnAttachmentsAttachmentOutput) ToGetTransitRouterVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentOutput {
	return o
}

// Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) bool { return v.AutoPublishRouteEnabled }).(pulumi.BoolOutput)
}

// The creation time of the resource.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetTransitRouterVpnAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// Type of the resource.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the transit router attachment.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The description of the VPN connection.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) TransitRouterAttachmentDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.TransitRouterAttachmentDescription }).(pulumi.StringOutput)
}

func (o GetTransitRouterVpnAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of the VPN connection.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The ID of the forwarding router instance.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The id of the vpn.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) VpnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.VpnId }).(pulumi.StringOutput)
}

// The owner id of vpn.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) VpnOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) string { return v.VpnOwnerId }).(pulumi.StringOutput)
}

// The list of zone mapping.
func (o GetTransitRouterVpnAttachmentsAttachmentOutput) Zones() GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachment) []GetTransitRouterVpnAttachmentsAttachmentZone {
		return v.Zones
	}).(GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput)
}

type GetTransitRouterVpnAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpnAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpnAttachmentsAttachment)(nil)).Elem()
}

func (o GetTransitRouterVpnAttachmentsAttachmentArrayOutput) ToGetTransitRouterVpnAttachmentsAttachmentArrayOutput() GetTransitRouterVpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterVpnAttachmentsAttachmentArrayOutput) ToGetTransitRouterVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterVpnAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetTransitRouterVpnAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterVpnAttachmentsAttachment {
		return vs[0].([]GetTransitRouterVpnAttachmentsAttachment)[vs[1].(int)]
	}).(GetTransitRouterVpnAttachmentsAttachmentOutput)
}

type GetTransitRouterVpnAttachmentsAttachmentZone struct {
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// GetTransitRouterVpnAttachmentsAttachmentZoneInput is an input type that accepts GetTransitRouterVpnAttachmentsAttachmentZoneArgs and GetTransitRouterVpnAttachmentsAttachmentZoneOutput values.
// You can construct a concrete instance of `GetTransitRouterVpnAttachmentsAttachmentZoneInput` via:
//
//	GetTransitRouterVpnAttachmentsAttachmentZoneArgs{...}
type GetTransitRouterVpnAttachmentsAttachmentZoneInput interface {
	pulumi.Input

	ToGetTransitRouterVpnAttachmentsAttachmentZoneOutput() GetTransitRouterVpnAttachmentsAttachmentZoneOutput
	ToGetTransitRouterVpnAttachmentsAttachmentZoneOutputWithContext(context.Context) GetTransitRouterVpnAttachmentsAttachmentZoneOutput
}

type GetTransitRouterVpnAttachmentsAttachmentZoneArgs struct {
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetTransitRouterVpnAttachmentsAttachmentZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachmentZone)(nil)).Elem()
}

func (i GetTransitRouterVpnAttachmentsAttachmentZoneArgs) ToGetTransitRouterVpnAttachmentsAttachmentZoneOutput() GetTransitRouterVpnAttachmentsAttachmentZoneOutput {
	return i.ToGetTransitRouterVpnAttachmentsAttachmentZoneOutputWithContext(context.Background())
}

func (i GetTransitRouterVpnAttachmentsAttachmentZoneArgs) ToGetTransitRouterVpnAttachmentsAttachmentZoneOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpnAttachmentsAttachmentZoneOutput)
}

// GetTransitRouterVpnAttachmentsAttachmentZoneArrayInput is an input type that accepts GetTransitRouterVpnAttachmentsAttachmentZoneArray and GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterVpnAttachmentsAttachmentZoneArrayInput` via:
//
//	GetTransitRouterVpnAttachmentsAttachmentZoneArray{ GetTransitRouterVpnAttachmentsAttachmentZoneArgs{...} }
type GetTransitRouterVpnAttachmentsAttachmentZoneArrayInput interface {
	pulumi.Input

	ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput() GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput
	ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutputWithContext(context.Context) GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput
}

type GetTransitRouterVpnAttachmentsAttachmentZoneArray []GetTransitRouterVpnAttachmentsAttachmentZoneInput

func (GetTransitRouterVpnAttachmentsAttachmentZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpnAttachmentsAttachmentZone)(nil)).Elem()
}

func (i GetTransitRouterVpnAttachmentsAttachmentZoneArray) ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput() GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput {
	return i.ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterVpnAttachmentsAttachmentZoneArray) ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput)
}

type GetTransitRouterVpnAttachmentsAttachmentZoneOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpnAttachmentsAttachmentZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachmentZone)(nil)).Elem()
}

func (o GetTransitRouterVpnAttachmentsAttachmentZoneOutput) ToGetTransitRouterVpnAttachmentsAttachmentZoneOutput() GetTransitRouterVpnAttachmentsAttachmentZoneOutput {
	return o
}

func (o GetTransitRouterVpnAttachmentsAttachmentZoneOutput) ToGetTransitRouterVpnAttachmentsAttachmentZoneOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentZoneOutput {
	return o
}

// The id of the zone.
func (o GetTransitRouterVpnAttachmentsAttachmentZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterVpnAttachmentsAttachmentZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterVpnAttachmentsAttachmentZone)(nil)).Elem()
}

func (o GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput) ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput() GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput {
	return o
}

func (o GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput) ToGetTransitRouterVpnAttachmentsAttachmentZoneArrayOutputWithContext(ctx context.Context) GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput {
	return o
}

func (o GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput) Index(i pulumi.IntInput) GetTransitRouterVpnAttachmentsAttachmentZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterVpnAttachmentsAttachmentZone {
		return vs[0].([]GetTransitRouterVpnAttachmentsAttachmentZone)[vs[1].(int)]
	}).(GetTransitRouterVpnAttachmentsAttachmentZoneOutput)
}

type GetTransitRoutersTransitRouter struct {
	// The UID of the Aliyun.
	AliUid string `pulumi:"aliUid"`
	// The ID of the CEN instance.
	CenId string `pulumi:"cenId"`
	// The ID of the resource, It is formatted to `<cen_id>:<transit_router_id>`. **NOTE:** Before 1.151.0, It is formatted to `<transit_router_id>`.
	Id string `pulumi:"id"`
	// The status of the resource. Valid values `Active`, `Creating`, `Deleting` and `Updating`.
	Status string `pulumi:"status"`
	// The description of the transit router.
	TransitRouterDescription string `pulumi:"transitRouterDescription"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The name of the transit router.
	TransitRouterName string `pulumi:"transitRouterName"`
	// The Type of the transit router.
	Type string `pulumi:"type"`
	// The vip of the XGW.
	XgwVip string `pulumi:"xgwVip"`
}

// GetTransitRoutersTransitRouterInput is an input type that accepts GetTransitRoutersTransitRouterArgs and GetTransitRoutersTransitRouterOutput values.
// You can construct a concrete instance of `GetTransitRoutersTransitRouterInput` via:
//
//	GetTransitRoutersTransitRouterArgs{...}
type GetTransitRoutersTransitRouterInput interface {
	pulumi.Input

	ToGetTransitRoutersTransitRouterOutput() GetTransitRoutersTransitRouterOutput
	ToGetTransitRoutersTransitRouterOutputWithContext(context.Context) GetTransitRoutersTransitRouterOutput
}

type GetTransitRoutersTransitRouterArgs struct {
	// The UID of the Aliyun.
	AliUid pulumi.StringInput `pulumi:"aliUid"`
	// The ID of the CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The ID of the resource, It is formatted to `<cen_id>:<transit_router_id>`. **NOTE:** Before 1.151.0, It is formatted to `<transit_router_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the resource. Valid values `Active`, `Creating`, `Deleting` and `Updating`.
	Status pulumi.StringInput `pulumi:"status"`
	// The description of the transit router.
	TransitRouterDescription pulumi.StringInput `pulumi:"transitRouterDescription"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The name of the transit router.
	TransitRouterName pulumi.StringInput `pulumi:"transitRouterName"`
	// The Type of the transit router.
	Type pulumi.StringInput `pulumi:"type"`
	// The vip of the XGW.
	XgwVip pulumi.StringInput `pulumi:"xgwVip"`
}

func (GetTransitRoutersTransitRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRoutersTransitRouter)(nil)).Elem()
}

func (i GetTransitRoutersTransitRouterArgs) ToGetTransitRoutersTransitRouterOutput() GetTransitRoutersTransitRouterOutput {
	return i.ToGetTransitRoutersTransitRouterOutputWithContext(context.Background())
}

func (i GetTransitRoutersTransitRouterArgs) ToGetTransitRoutersTransitRouterOutputWithContext(ctx context.Context) GetTransitRoutersTransitRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRoutersTransitRouterOutput)
}

// GetTransitRoutersTransitRouterArrayInput is an input type that accepts GetTransitRoutersTransitRouterArray and GetTransitRoutersTransitRouterArrayOutput values.
// You can construct a concrete instance of `GetTransitRoutersTransitRouterArrayInput` via:
//
//	GetTransitRoutersTransitRouterArray{ GetTransitRoutersTransitRouterArgs{...} }
type GetTransitRoutersTransitRouterArrayInput interface {
	pulumi.Input

	ToGetTransitRoutersTransitRouterArrayOutput() GetTransitRoutersTransitRouterArrayOutput
	ToGetTransitRoutersTransitRouterArrayOutputWithContext(context.Context) GetTransitRoutersTransitRouterArrayOutput
}

type GetTransitRoutersTransitRouterArray []GetTransitRoutersTransitRouterInput

func (GetTransitRoutersTransitRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRoutersTransitRouter)(nil)).Elem()
}

func (i GetTransitRoutersTransitRouterArray) ToGetTransitRoutersTransitRouterArrayOutput() GetTransitRoutersTransitRouterArrayOutput {
	return i.ToGetTransitRoutersTransitRouterArrayOutputWithContext(context.Background())
}

func (i GetTransitRoutersTransitRouterArray) ToGetTransitRoutersTransitRouterArrayOutputWithContext(ctx context.Context) GetTransitRoutersTransitRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRoutersTransitRouterArrayOutput)
}

type GetTransitRoutersTransitRouterOutput struct{ *pulumi.OutputState }

func (GetTransitRoutersTransitRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRoutersTransitRouter)(nil)).Elem()
}

func (o GetTransitRoutersTransitRouterOutput) ToGetTransitRoutersTransitRouterOutput() GetTransitRoutersTransitRouterOutput {
	return o
}

func (o GetTransitRoutersTransitRouterOutput) ToGetTransitRoutersTransitRouterOutputWithContext(ctx context.Context) GetTransitRoutersTransitRouterOutput {
	return o
}

// The UID of the Aliyun.
func (o GetTransitRoutersTransitRouterOutput) AliUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.AliUid }).(pulumi.StringOutput)
}

// The ID of the CEN instance.
func (o GetTransitRoutersTransitRouterOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.CenId }).(pulumi.StringOutput)
}

// The ID of the resource, It is formatted to `<cen_id>:<transit_router_id>`. **NOTE:** Before 1.151.0, It is formatted to `<transit_router_id>`.
func (o GetTransitRoutersTransitRouterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the resource. Valid values `Active`, `Creating`, `Deleting` and `Updating`.
func (o GetTransitRoutersTransitRouterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.Status }).(pulumi.StringOutput)
}

// The description of the transit router.
func (o GetTransitRoutersTransitRouterOutput) TransitRouterDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.TransitRouterDescription }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o GetTransitRoutersTransitRouterOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The name of the transit router.
func (o GetTransitRoutersTransitRouterOutput) TransitRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.TransitRouterName }).(pulumi.StringOutput)
}

// The Type of the transit router.
func (o GetTransitRoutersTransitRouterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.Type }).(pulumi.StringOutput)
}

// The vip of the XGW.
func (o GetTransitRoutersTransitRouterOutput) XgwVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersTransitRouter) string { return v.XgwVip }).(pulumi.StringOutput)
}

type GetTransitRoutersTransitRouterArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRoutersTransitRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRoutersTransitRouter)(nil)).Elem()
}

func (o GetTransitRoutersTransitRouterArrayOutput) ToGetTransitRoutersTransitRouterArrayOutput() GetTransitRoutersTransitRouterArrayOutput {
	return o
}

func (o GetTransitRoutersTransitRouterArrayOutput) ToGetTransitRoutersTransitRouterArrayOutputWithContext(ctx context.Context) GetTransitRoutersTransitRouterArrayOutput {
	return o
}

func (o GetTransitRoutersTransitRouterArrayOutput) Index(i pulumi.IntInput) GetTransitRoutersTransitRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRoutersTransitRouter {
		return vs[0].([]GetTransitRoutersTransitRouter)[vs[1].(int)]
	}).(GetTransitRoutersTransitRouterOutput)
}

type GetVbrHealthChecksCheck struct {
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId string `pulumi:"cenId"`
	// The time interval at which probe packets are sent during the health check.
	HealthCheckInterval int `pulumi:"healthCheckInterval"`
	// The source IP address of the health check.
	HealthCheckSourceIp string `pulumi:"healthCheckSourceIp"`
	// The destination IP address of the health check.
	HealthCheckTargetIp string `pulumi:"healthCheckTargetIp"`
	// The number of probe packets that are sent during the health check.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// The ID of the CEN VBR Heath Check.
	Id string `pulumi:"id"`
	// The ID of the VBR instance.
	VbrInstanceId string `pulumi:"vbrInstanceId"`
	// The ID of the region where the VBR instance is deployed.
	VbrInstanceRegionId string `pulumi:"vbrInstanceRegionId"`
}

// GetVbrHealthChecksCheckInput is an input type that accepts GetVbrHealthChecksCheckArgs and GetVbrHealthChecksCheckOutput values.
// You can construct a concrete instance of `GetVbrHealthChecksCheckInput` via:
//
//	GetVbrHealthChecksCheckArgs{...}
type GetVbrHealthChecksCheckInput interface {
	pulumi.Input

	ToGetVbrHealthChecksCheckOutput() GetVbrHealthChecksCheckOutput
	ToGetVbrHealthChecksCheckOutputWithContext(context.Context) GetVbrHealthChecksCheckOutput
}

type GetVbrHealthChecksCheckArgs struct {
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The time interval at which probe packets are sent during the health check.
	HealthCheckInterval pulumi.IntInput `pulumi:"healthCheckInterval"`
	// The source IP address of the health check.
	HealthCheckSourceIp pulumi.StringInput `pulumi:"healthCheckSourceIp"`
	// The destination IP address of the health check.
	HealthCheckTargetIp pulumi.StringInput `pulumi:"healthCheckTargetIp"`
	// The number of probe packets that are sent during the health check.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// The ID of the CEN VBR Heath Check.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the VBR instance.
	VbrInstanceId pulumi.StringInput `pulumi:"vbrInstanceId"`
	// The ID of the region where the VBR instance is deployed.
	VbrInstanceRegionId pulumi.StringInput `pulumi:"vbrInstanceRegionId"`
}

func (GetVbrHealthChecksCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbrHealthChecksCheck)(nil)).Elem()
}

func (i GetVbrHealthChecksCheckArgs) ToGetVbrHealthChecksCheckOutput() GetVbrHealthChecksCheckOutput {
	return i.ToGetVbrHealthChecksCheckOutputWithContext(context.Background())
}

func (i GetVbrHealthChecksCheckArgs) ToGetVbrHealthChecksCheckOutputWithContext(ctx context.Context) GetVbrHealthChecksCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbrHealthChecksCheckOutput)
}

// GetVbrHealthChecksCheckArrayInput is an input type that accepts GetVbrHealthChecksCheckArray and GetVbrHealthChecksCheckArrayOutput values.
// You can construct a concrete instance of `GetVbrHealthChecksCheckArrayInput` via:
//
//	GetVbrHealthChecksCheckArray{ GetVbrHealthChecksCheckArgs{...} }
type GetVbrHealthChecksCheckArrayInput interface {
	pulumi.Input

	ToGetVbrHealthChecksCheckArrayOutput() GetVbrHealthChecksCheckArrayOutput
	ToGetVbrHealthChecksCheckArrayOutputWithContext(context.Context) GetVbrHealthChecksCheckArrayOutput
}

type GetVbrHealthChecksCheckArray []GetVbrHealthChecksCheckInput

func (GetVbrHealthChecksCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbrHealthChecksCheck)(nil)).Elem()
}

func (i GetVbrHealthChecksCheckArray) ToGetVbrHealthChecksCheckArrayOutput() GetVbrHealthChecksCheckArrayOutput {
	return i.ToGetVbrHealthChecksCheckArrayOutputWithContext(context.Background())
}

func (i GetVbrHealthChecksCheckArray) ToGetVbrHealthChecksCheckArrayOutputWithContext(ctx context.Context) GetVbrHealthChecksCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbrHealthChecksCheckArrayOutput)
}

type GetVbrHealthChecksCheckOutput struct{ *pulumi.OutputState }

func (GetVbrHealthChecksCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbrHealthChecksCheck)(nil)).Elem()
}

func (o GetVbrHealthChecksCheckOutput) ToGetVbrHealthChecksCheckOutput() GetVbrHealthChecksCheckOutput {
	return o
}

func (o GetVbrHealthChecksCheckOutput) ToGetVbrHealthChecksCheckOutputWithContext(ctx context.Context) GetVbrHealthChecksCheckOutput {
	return o
}

// The ID of the Cloud Enterprise Network (CEN) instance.
func (o GetVbrHealthChecksCheckOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) string { return v.CenId }).(pulumi.StringOutput)
}

// The time interval at which probe packets are sent during the health check.
func (o GetVbrHealthChecksCheckOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

// The source IP address of the health check.
func (o GetVbrHealthChecksCheckOutput) HealthCheckSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) string { return v.HealthCheckSourceIp }).(pulumi.StringOutput)
}

// The destination IP address of the health check.
func (o GetVbrHealthChecksCheckOutput) HealthCheckTargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) string { return v.HealthCheckTargetIp }).(pulumi.StringOutput)
}

// The number of probe packets that are sent during the health check.
func (o GetVbrHealthChecksCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// The ID of the CEN VBR Heath Check.
func (o GetVbrHealthChecksCheckOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the VBR instance.
func (o GetVbrHealthChecksCheckOutput) VbrInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) string { return v.VbrInstanceId }).(pulumi.StringOutput)
}

// The ID of the region where the VBR instance is deployed.
func (o GetVbrHealthChecksCheckOutput) VbrInstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrHealthChecksCheck) string { return v.VbrInstanceRegionId }).(pulumi.StringOutput)
}

type GetVbrHealthChecksCheckArrayOutput struct{ *pulumi.OutputState }

func (GetVbrHealthChecksCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbrHealthChecksCheck)(nil)).Elem()
}

func (o GetVbrHealthChecksCheckArrayOutput) ToGetVbrHealthChecksCheckArrayOutput() GetVbrHealthChecksCheckArrayOutput {
	return o
}

func (o GetVbrHealthChecksCheckArrayOutput) ToGetVbrHealthChecksCheckArrayOutputWithContext(ctx context.Context) GetVbrHealthChecksCheckArrayOutput {
	return o
}

func (o GetVbrHealthChecksCheckArrayOutput) Index(i pulumi.IntInput) GetVbrHealthChecksCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbrHealthChecksCheck {
		return vs[0].([]GetVbrHealthChecksCheck)[vs[1].(int)]
	}).(GetVbrHealthChecksCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpcAttachmentZoneMappingInput)(nil)).Elem(), TransitRouterVpcAttachmentZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpcAttachmentZoneMappingArrayInput)(nil)).Elem(), TransitRouterVpcAttachmentZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpnAttachmentZoneInput)(nil)).Elem(), TransitRouterVpnAttachmentZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterVpnAttachmentZoneArrayInput)(nil)).Elem(), TransitRouterVpnAttachmentZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthLimitsLimitInput)(nil)).Elem(), GetBandwidthLimitsLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthLimitsLimitArrayInput)(nil)).Elem(), GetBandwidthLimitsLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthPackagesPackageInput)(nil)).Elem(), GetBandwidthPackagesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthPackagesPackageArrayInput)(nil)).Elem(), GetBandwidthPackagesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChildInstanceRouteEntryToAttachmentsAttachmentInput)(nil)).Elem(), GetChildInstanceRouteEntryToAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChildInstanceRouteEntryToAttachmentsAttachmentArrayInput)(nil)).Elem(), GetChildInstanceRouteEntryToAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowlogsFlowlogInput)(nil)).Elem(), GetFlowlogsFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowlogsFlowlogArrayInput)(nil)).Elem(), GetFlowlogsFlowlogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAttachmentsAttachmentInput)(nil)).Elem(), GetInstanceAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAttachmentsAttachmentArrayInput)(nil)).Elem(), GetInstanceAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterRegionTrafficQosPoliciesPolicyInput)(nil)).Elem(), GetInterRegionTrafficQosPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterRegionTrafficQosPoliciesPolicyArrayInput)(nil)).Elem(), GetInterRegionTrafficQosPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterRegionTrafficQosQueuesQueueInput)(nil)).Elem(), GetInterRegionTrafficQosQueuesQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterRegionTrafficQosQueuesQueueArrayInput)(nil)).Elem(), GetInterRegionTrafficQosQueuesQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateZonesZoneInput)(nil)).Elem(), GetPrivateZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateZonesZoneArrayInput)(nil)).Elem(), GetPrivateZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionRouteEntriesEntryInput)(nil)).Elem(), GetRegionRouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionRouteEntriesEntryArrayInput)(nil)).Elem(), GetRegionRouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesEntryInput)(nil)).Elem(), GetRouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesEntryArrayInput)(nil)).Elem(), GetRouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesEntryConflictInput)(nil)).Elem(), GetRouteEntriesEntryConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesEntryConflictArrayInput)(nil)).Elem(), GetRouteEntriesEntryConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteMapsMapInput)(nil)).Elem(), GetRouteMapsMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteMapsMapArrayInput)(nil)).Elem(), GetRouteMapsMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteServicesServiceInput)(nil)).Elem(), GetRouteServicesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteServicesServiceArrayInput)(nil)).Elem(), GetRouteServicesServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMarkingPoliciesPolicyInput)(nil)).Elem(), GetTrafficMarkingPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMarkingPoliciesPolicyArrayInput)(nil)).Elem(), GetTrafficMarkingPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouteTableAggregationsTransitRouteTableAggregationInput)(nil)).Elem(), GetTransitRouteTableAggregationsTransitRouteTableAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayInput)(nil)).Elem(), GetTransitRouteTableAggregationsTransitRouteTableAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterAvailableResourcesResourceInput)(nil)).Elem(), GetTransitRouterAvailableResourcesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterAvailableResourcesResourceArrayInput)(nil)).Elem(), GetTransitRouterAvailableResourcesResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterCidrsCidrInput)(nil)).Elem(), GetTransitRouterCidrsCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterCidrsCidrArrayInput)(nil)).Elem(), GetTransitRouterCidrsCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainAssociationsAssociationInput)(nil)).Elem(), GetTransitRouterMulticastDomainAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainAssociationsAssociationArrayInput)(nil)).Elem(), GetTransitRouterMulticastDomainAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainMembersMemberInput)(nil)).Elem(), GetTransitRouterMulticastDomainMembersMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainMembersMemberArrayInput)(nil)).Elem(), GetTransitRouterMulticastDomainMembersMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainPeerMembersMemberInput)(nil)).Elem(), GetTransitRouterMulticastDomainPeerMembersMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainPeerMembersMemberArrayInput)(nil)).Elem(), GetTransitRouterMulticastDomainPeerMembersMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainSourcesSourceInput)(nil)).Elem(), GetTransitRouterMulticastDomainSourcesSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainSourcesSourceArrayInput)(nil)).Elem(), GetTransitRouterMulticastDomainSourcesSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainsDomainInput)(nil)).Elem(), GetTransitRouterMulticastDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterMulticastDomainsDomainArrayInput)(nil)).Elem(), GetTransitRouterMulticastDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterPeerAttachmentsAttachmentInput)(nil)).Elem(), GetTransitRouterPeerAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterPeerAttachmentsAttachmentArrayInput)(nil)).Elem(), GetTransitRouterPeerAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterPrefixListAssociationsAssociationInput)(nil)).Elem(), GetTransitRouterPrefixListAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterPrefixListAssociationsAssociationArrayInput)(nil)).Elem(), GetTransitRouterPrefixListAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteEntriesEntryInput)(nil)).Elem(), GetTransitRouterRouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteEntriesEntryArrayInput)(nil)).Elem(), GetTransitRouterRouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTableAssociationsAssociationInput)(nil)).Elem(), GetTransitRouterRouteTableAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTableAssociationsAssociationArrayInput)(nil)).Elem(), GetTransitRouterRouteTableAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTablePropagationsPropagationInput)(nil)).Elem(), GetTransitRouterRouteTablePropagationsPropagationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTablePropagationsPropagationArrayInput)(nil)).Elem(), GetTransitRouterRouteTablePropagationsPropagationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTablesTableInput)(nil)).Elem(), GetTransitRouterRouteTablesTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTablesTableArrayInput)(nil)).Elem(), GetTransitRouterRouteTablesTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVbrAttachmentsAttachmentInput)(nil)).Elem(), GetTransitRouterVbrAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVbrAttachmentsAttachmentArrayInput)(nil)).Elem(), GetTransitRouterVbrAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachmentInput)(nil)).Elem(), GetTransitRouterVpcAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachmentArrayInput)(nil)).Elem(), GetTransitRouterVpcAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachmentZoneMappingInput)(nil)).Elem(), GetTransitRouterVpcAttachmentsAttachmentZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayInput)(nil)).Elem(), GetTransitRouterVpcAttachmentsAttachmentZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachmentInput)(nil)).Elem(), GetTransitRouterVpnAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachmentArrayInput)(nil)).Elem(), GetTransitRouterVpnAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachmentZoneInput)(nil)).Elem(), GetTransitRouterVpnAttachmentsAttachmentZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterVpnAttachmentsAttachmentZoneArrayInput)(nil)).Elem(), GetTransitRouterVpnAttachmentsAttachmentZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRoutersTransitRouterInput)(nil)).Elem(), GetTransitRoutersTransitRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRoutersTransitRouterArrayInput)(nil)).Elem(), GetTransitRoutersTransitRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbrHealthChecksCheckInput)(nil)).Elem(), GetVbrHealthChecksCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbrHealthChecksCheckArrayInput)(nil)).Elem(), GetVbrHealthChecksCheckArray{})
	pulumi.RegisterOutputType(TransitRouterVpcAttachmentZoneMappingOutput{})
	pulumi.RegisterOutputType(TransitRouterVpcAttachmentZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterVpnAttachmentZoneOutput{})
	pulumi.RegisterOutputType(TransitRouterVpnAttachmentZoneArrayOutput{})
	pulumi.RegisterOutputType(GetBandwidthLimitsLimitOutput{})
	pulumi.RegisterOutputType(GetBandwidthLimitsLimitArrayOutput{})
	pulumi.RegisterOutputType(GetBandwidthPackagesPackageOutput{})
	pulumi.RegisterOutputType(GetBandwidthPackagesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetChildInstanceRouteEntryToAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetChildInstanceRouteEntryToAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetFlowlogsFlowlogOutput{})
	pulumi.RegisterOutputType(GetFlowlogsFlowlogArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetInstanceAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInterRegionTrafficQosPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetInterRegionTrafficQosPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetInterRegionTrafficQosQueuesQueueOutput{})
	pulumi.RegisterOutputType(GetInterRegionTrafficQosQueuesQueueArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateZonesZoneOutput{})
	pulumi.RegisterOutputType(GetPrivateZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetRegionRouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetRegionRouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesEntryConflictOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesEntryConflictArrayOutput{})
	pulumi.RegisterOutputType(GetRouteMapsMapOutput{})
	pulumi.RegisterOutputType(GetRouteMapsMapArrayOutput{})
	pulumi.RegisterOutputType(GetRouteServicesServiceOutput{})
	pulumi.RegisterOutputType(GetRouteServicesServiceArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMarkingPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetTrafficMarkingPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouteTableAggregationsTransitRouteTableAggregationOutput{})
	pulumi.RegisterOutputType(GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterAvailableResourcesResourceOutput{})
	pulumi.RegisterOutputType(GetTransitRouterAvailableResourcesResourceArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterCidrsCidrOutput{})
	pulumi.RegisterOutputType(GetTransitRouterCidrsCidrArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainMembersMemberOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainMembersMemberArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainPeerMembersMemberOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainPeerMembersMemberArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainSourcesSourceOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainSourcesSourceArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterPeerAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetTransitRouterPeerAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterPrefixListAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(GetTransitRouterPrefixListAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTableAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTableAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTablePropagationsPropagationOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTablePropagationsPropagationArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTablesTableOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTablesTableArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVbrAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVbrAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpcAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpcAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpcAttachmentsAttachmentZoneMappingOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpcAttachmentsAttachmentZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpnAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpnAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpnAttachmentsAttachmentZoneOutput{})
	pulumi.RegisterOutputType(GetTransitRouterVpnAttachmentsAttachmentZoneArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRoutersTransitRouterOutput{})
	pulumi.RegisterOutputType(GetTransitRoutersTransitRouterArrayOutput{})
	pulumi.RegisterOutputType(GetVbrHealthChecksCheckOutput{})
	pulumi.RegisterOutputType(GetVbrHealthChecksCheckArrayOutput{})
}
