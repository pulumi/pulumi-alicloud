// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Enterprise Network (CEN) Transit Router resource.
//
// For information about Cloud Enterprise Network (CEN) Transit Router and how to use it, see [What is Transit Router](https://next.api.alibabacloud.com/document/Cbn/2017-09-12/CreateTransitRouter).
//
// > **NOTE:** Available since v1.126.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := cen.NewInstance(ctx, "example", &cen.InstanceArgs{
//				CenInstanceName: pulumi.String("tf_example"),
//				Description:     pulumi.String("an example for cen"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewTransitRouter(ctx, "example", &cen.TransitRouterArgs{
//				TransitRouterName: pulumi.String("tf_example"),
//				CenId:             example.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Enterprise Network (CEN) Transit Router can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cen/transitRouter:TransitRouter example <id>
// ```
type TransitRouter struct {
	pulumi.CustomResourceState

	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringOutput `pulumi:"cenId"`
	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dry run.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The ID of the region where the Enterprise Edition transit router is deployed.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Status
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
	SupportMulticast pulumi.BoolPtrOutput `pulumi:"supportMulticast"`
	// The tag of the resource
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The description of the Enterprise Edition transit router instance.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterDescription pulumi.StringPtrOutput `pulumi:"transitRouterDescription"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringOutput `pulumi:"transitRouterId"`
	// The name of the Enterprise Edition transit router.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterName pulumi.StringPtrOutput `pulumi:"transitRouterName"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTransitRouter registers a new resource with the given unique name, arguments, and options.
func NewTransitRouter(ctx *pulumi.Context,
	name string, args *TransitRouterArgs, opts ...pulumi.ResourceOption) (*TransitRouter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CenId == nil {
		return nil, errors.New("invalid value for required argument 'CenId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitRouter
	err := ctx.RegisterResource("alicloud:cen/transitRouter:TransitRouter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouter gets an existing TransitRouter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterState, opts ...pulumi.ResourceOption) (*TransitRouter, error) {
	var resource TransitRouter
	err := ctx.ReadResource("alicloud:cen/transitRouter:TransitRouter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouter resources.
type transitRouterState struct {
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId *string `pulumi:"cenId"`
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the region where the Enterprise Edition transit router is deployed.
	RegionId *string `pulumi:"regionId"`
	// Status
	Status *string `pulumi:"status"`
	// Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
	SupportMulticast *bool `pulumi:"supportMulticast"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// The description of the Enterprise Edition transit router instance.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterDescription *string `pulumi:"transitRouterDescription"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The name of the Enterprise Edition transit router.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterName *string `pulumi:"transitRouterName"`
	// Type
	Type *string `pulumi:"type"`
}

type TransitRouterState struct {
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringPtrInput
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the region where the Enterprise Edition transit router is deployed.
	RegionId pulumi.StringPtrInput
	// Status
	Status pulumi.StringPtrInput
	// Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
	SupportMulticast pulumi.BoolPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// The description of the Enterprise Edition transit router instance.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterDescription pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The name of the Enterprise Edition transit router.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterName pulumi.StringPtrInput
	// Type
	Type pulumi.StringPtrInput
}

func (TransitRouterState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterState)(nil)).Elem()
}

type transitRouterArgs struct {
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId string `pulumi:"cenId"`
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
	SupportMulticast *bool `pulumi:"supportMulticast"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
	// The description of the Enterprise Edition transit router instance.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterDescription *string `pulumi:"transitRouterDescription"`
	// The name of the Enterprise Edition transit router.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterName *string `pulumi:"transitRouterName"`
}

// The set of arguments for constructing a TransitRouter resource.
type TransitRouterArgs struct {
	// The ID of the Cloud Enterprise Network (CEN) instance.
	CenId pulumi.StringInput
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
	SupportMulticast pulumi.BoolPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
	// The description of the Enterprise Edition transit router instance.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterDescription pulumi.StringPtrInput
	// The name of the Enterprise Edition transit router.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
	TransitRouterName pulumi.StringPtrInput
}

func (TransitRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterArgs)(nil)).Elem()
}

type TransitRouterInput interface {
	pulumi.Input

	ToTransitRouterOutput() TransitRouterOutput
	ToTransitRouterOutputWithContext(ctx context.Context) TransitRouterOutput
}

func (*TransitRouter) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouter)(nil)).Elem()
}

func (i *TransitRouter) ToTransitRouterOutput() TransitRouterOutput {
	return i.ToTransitRouterOutputWithContext(context.Background())
}

func (i *TransitRouter) ToTransitRouterOutputWithContext(ctx context.Context) TransitRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterOutput)
}

// TransitRouterArrayInput is an input type that accepts TransitRouterArray and TransitRouterArrayOutput values.
// You can construct a concrete instance of `TransitRouterArrayInput` via:
//
//	TransitRouterArray{ TransitRouterArgs{...} }
type TransitRouterArrayInput interface {
	pulumi.Input

	ToTransitRouterArrayOutput() TransitRouterArrayOutput
	ToTransitRouterArrayOutputWithContext(context.Context) TransitRouterArrayOutput
}

type TransitRouterArray []TransitRouterInput

func (TransitRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouter)(nil)).Elem()
}

func (i TransitRouterArray) ToTransitRouterArrayOutput() TransitRouterArrayOutput {
	return i.ToTransitRouterArrayOutputWithContext(context.Background())
}

func (i TransitRouterArray) ToTransitRouterArrayOutputWithContext(ctx context.Context) TransitRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterArrayOutput)
}

// TransitRouterMapInput is an input type that accepts TransitRouterMap and TransitRouterMapOutput values.
// You can construct a concrete instance of `TransitRouterMapInput` via:
//
//	TransitRouterMap{ "key": TransitRouterArgs{...} }
type TransitRouterMapInput interface {
	pulumi.Input

	ToTransitRouterMapOutput() TransitRouterMapOutput
	ToTransitRouterMapOutputWithContext(context.Context) TransitRouterMapOutput
}

type TransitRouterMap map[string]TransitRouterInput

func (TransitRouterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouter)(nil)).Elem()
}

func (i TransitRouterMap) ToTransitRouterMapOutput() TransitRouterMapOutput {
	return i.ToTransitRouterMapOutputWithContext(context.Background())
}

func (i TransitRouterMap) ToTransitRouterMapOutputWithContext(ctx context.Context) TransitRouterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterMapOutput)
}

type TransitRouterOutput struct{ *pulumi.OutputState }

func (TransitRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouter)(nil)).Elem()
}

func (o TransitRouterOutput) ToTransitRouterOutput() TransitRouterOutput {
	return o
}

func (o TransitRouterOutput) ToTransitRouterOutputWithContext(ctx context.Context) TransitRouterOutput {
	return o
}

// The ID of the Cloud Enterprise Network (CEN) instance.
func (o TransitRouterOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.CenId }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o TransitRouterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The dry run.
func (o TransitRouterOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The ID of the region where the Enterprise Edition transit router is deployed.
func (o TransitRouterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Status
func (o TransitRouterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
func (o TransitRouterOutput) SupportMulticast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.BoolPtrOutput { return v.SupportMulticast }).(pulumi.BoolPtrOutput)
}

// The tag of the resource
func (o TransitRouterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The description of the Enterprise Edition transit router instance.
// The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
func (o TransitRouterOutput) TransitRouterDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringPtrOutput { return v.TransitRouterDescription }).(pulumi.StringPtrOutput)
}

// The ID of the transit router.
func (o TransitRouterOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The name of the Enterprise Edition transit router.
// The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
func (o TransitRouterOutput) TransitRouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringPtrOutput { return v.TransitRouterName }).(pulumi.StringPtrOutput)
}

// Type
func (o TransitRouterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type TransitRouterArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouter)(nil)).Elem()
}

func (o TransitRouterArrayOutput) ToTransitRouterArrayOutput() TransitRouterArrayOutput {
	return o
}

func (o TransitRouterArrayOutput) ToTransitRouterArrayOutputWithContext(ctx context.Context) TransitRouterArrayOutput {
	return o
}

func (o TransitRouterArrayOutput) Index(i pulumi.IntInput) TransitRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouter {
		return vs[0].([]*TransitRouter)[vs[1].(int)]
	}).(TransitRouterOutput)
}

type TransitRouterMapOutput struct{ *pulumi.OutputState }

func (TransitRouterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouter)(nil)).Elem()
}

func (o TransitRouterMapOutput) ToTransitRouterMapOutput() TransitRouterMapOutput {
	return o
}

func (o TransitRouterMapOutput) ToTransitRouterMapOutputWithContext(ctx context.Context) TransitRouterMapOutput {
	return o
}

func (o TransitRouterMapOutput) MapIndex(k pulumi.StringInput) TransitRouterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouter {
		return vs[0].(map[string]*TransitRouter)[vs[1].(string)]
	}).(TransitRouterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterInput)(nil)).Elem(), &TransitRouter{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterArrayInput)(nil)).Elem(), TransitRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterMapInput)(nil)).Elem(), TransitRouterMap{})
	pulumi.RegisterOutputType(TransitRouterOutput{})
	pulumi.RegisterOutputType(TransitRouterArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterMapOutput{})
}
