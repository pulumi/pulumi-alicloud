// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Cen Transit Route Table Aggregations of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.202.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := cen.GetTransitRouteTableAggregations(ctx, &cen.GetTransitRouteTableAggregationsArgs{
//				Ids: []string{
//					"example_id",
//				},
//				TransitRouteTableId: "your_transit_route_table_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("cenTransitRouterMulticastDomainId0", ids.TransitRouteTableAggregations[0].Id)
//			nameRegex, err := cen.GetTransitRouteTableAggregations(ctx, &cen.GetTransitRouteTableAggregationsArgs{
//				NameRegex:           pulumi.StringRef("^my-name"),
//				TransitRouteTableId: "your_transit_route_table_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("cenTransitRouterMulticastDomainId1", nameRegex.TransitRouteTableAggregations[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetTransitRouteTableAggregations(ctx *pulumi.Context, args *GetTransitRouteTableAggregationsArgs, opts ...pulumi.InvokeOption) (*GetTransitRouteTableAggregationsResult, error) {
	var rv GetTransitRouteTableAggregationsResult
	err := ctx.Invoke("alicloud:cen/getTransitRouteTableAggregations:getTransitRouteTableAggregations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitRouteTableAggregations.
type GetTransitRouteTableAggregationsArgs struct {
	// A list of Transit Route Table Aggregation IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Transit Route Table Aggregation name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
	Status *string `pulumi:"status"`
	// The destination CIDR block of the aggregate route.
	TransitRouteTableAggregationCidr *string `pulumi:"transitRouteTableAggregationCidr"`
	// The ID of the route table of the Enterprise Edition transit router.
	TransitRouteTableId string `pulumi:"transitRouteTableId"`
}

// A collection of values returned by getTransitRouteTableAggregations.
type GetTransitRouteTableAggregationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Transit Route Table Aggregation names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The status of the Transit Route Table Aggregation.
	Status *string `pulumi:"status"`
	// The destination CIDR block of the aggregate route.
	TransitRouteTableAggregationCidr *string `pulumi:"transitRouteTableAggregationCidr"`
	// A list of Cen Transit Route Table Aggregations. Each element contains the following attributes:
	TransitRouteTableAggregations []GetTransitRouteTableAggregationsTransitRouteTableAggregation `pulumi:"transitRouteTableAggregations"`
	// The ID of the route table of the Enterprise Edition transit router.
	TransitRouteTableId string `pulumi:"transitRouteTableId"`
}

func GetTransitRouteTableAggregationsOutput(ctx *pulumi.Context, args GetTransitRouteTableAggregationsOutputArgs, opts ...pulumi.InvokeOption) GetTransitRouteTableAggregationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTransitRouteTableAggregationsResult, error) {
			args := v.(GetTransitRouteTableAggregationsArgs)
			r, err := GetTransitRouteTableAggregations(ctx, &args, opts...)
			var s GetTransitRouteTableAggregationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTransitRouteTableAggregationsResultOutput)
}

// A collection of arguments for invoking getTransitRouteTableAggregations.
type GetTransitRouteTableAggregationsOutputArgs struct {
	// A list of Transit Route Table Aggregation IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Transit Route Table Aggregation name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The destination CIDR block of the aggregate route.
	TransitRouteTableAggregationCidr pulumi.StringPtrInput `pulumi:"transitRouteTableAggregationCidr"`
	// The ID of the route table of the Enterprise Edition transit router.
	TransitRouteTableId pulumi.StringInput `pulumi:"transitRouteTableId"`
}

func (GetTransitRouteTableAggregationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouteTableAggregationsArgs)(nil)).Elem()
}

// A collection of values returned by getTransitRouteTableAggregations.
type GetTransitRouteTableAggregationsResultOutput struct{ *pulumi.OutputState }

func (GetTransitRouteTableAggregationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouteTableAggregationsResult)(nil)).Elem()
}

func (o GetTransitRouteTableAggregationsResultOutput) ToGetTransitRouteTableAggregationsResultOutput() GetTransitRouteTableAggregationsResultOutput {
	return o
}

func (o GetTransitRouteTableAggregationsResultOutput) ToGetTransitRouteTableAggregationsResultOutputWithContext(ctx context.Context) GetTransitRouteTableAggregationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTransitRouteTableAggregationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTransitRouteTableAggregationsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetTransitRouteTableAggregationsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Transit Route Table Aggregation names.
func (o GetTransitRouteTableAggregationsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetTransitRouteTableAggregationsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The status of the Transit Route Table Aggregation.
func (o GetTransitRouteTableAggregationsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The destination CIDR block of the aggregate route.
func (o GetTransitRouteTableAggregationsResultOutput) TransitRouteTableAggregationCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) *string { return v.TransitRouteTableAggregationCidr }).(pulumi.StringPtrOutput)
}

// A list of Cen Transit Route Table Aggregations. Each element contains the following attributes:
func (o GetTransitRouteTableAggregationsResultOutput) TransitRouteTableAggregations() GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) []GetTransitRouteTableAggregationsTransitRouteTableAggregation {
		return v.TransitRouteTableAggregations
	}).(GetTransitRouteTableAggregationsTransitRouteTableAggregationArrayOutput)
}

// The ID of the route table of the Enterprise Edition transit router.
func (o GetTransitRouteTableAggregationsResultOutput) TransitRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouteTableAggregationsResult) string { return v.TransitRouteTableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTransitRouteTableAggregationsResultOutput{})
}
