// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Enterprise Network (CEN) Transit Router Prefix List Association resource.
//
// For information about Cloud Enterprise Network (CEN) Transit Router Prefix List Association and how to use it, see [What is Transit Router Prefix List Association](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/createtransitrouterprefixlistassociation).
//
// > **NOTE:** Available in v1.188.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			defaultAccount, err := alicloud.GetAccount(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			defaultPrefixList, err := vpc.NewPrefixList(ctx, "defaultPrefixList", &vpc.PrefixListArgs{
//				Entrys: vpc.PrefixListEntryArray{
//					&vpc.PrefixListEntryArgs{
//						Cidr: pulumi.String("192.168.0.0/16"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			defaultInstance, err := cen.NewInstance(ctx, "defaultInstance", &cen.InstanceArgs{
//				CenInstanceName: pulumi.String("tf-example"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultTransitRouter, err := cen.NewTransitRouter(ctx, "defaultTransitRouter", &cen.TransitRouterArgs{
//				CenId: defaultInstance.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultTransitRouterRouteTable, err := cen.NewTransitRouterRouteTable(ctx, "defaultTransitRouterRouteTable", &cen.TransitRouterRouteTableArgs{
//				TransitRouterId: defaultTransitRouter.TransitRouterId,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewTransitRouterPrefixListAssociation(ctx, "defaultTransitRouterPrefixListAssociation", &cen.TransitRouterPrefixListAssociationArgs{
//				PrefixListId:         defaultPrefixList.ID(),
//				TransitRouterId:      defaultTransitRouter.TransitRouterId,
//				TransitRouterTableId: defaultTransitRouterRouteTable.TransitRouterRouteTableId,
//				NextHop:              pulumi.String("BlackHole"),
//				NextHopType:          pulumi.String("BlackHole"),
//				OwnerUid:             *pulumi.String(defaultAccount.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Enterprise Network (CEN) Transit Router Prefix List Association can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:cen/transitRouterPrefixListAssociation:TransitRouterPrefixListAssociation default <prefix_list_id>:<transit_router_id>:<transit_router_table_id>:<next_hop>.
//
// ```
type TransitRouterPrefixListAssociation struct {
	pulumi.CustomResourceState

	// The ID of the next hop. **NOTE:** If `nextHop` is set to `BlackHole`, you must set this parameter to `BlackHole`.
	NextHop pulumi.StringOutput `pulumi:"nextHop"`
	// The type of the next hop. Valid values:
	NextHopType pulumi.StringOutput `pulumi:"nextHopType"`
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid pulumi.IntOutput `pulumi:"ownerUid"`
	// The ID of the prefix list.
	PrefixListId pulumi.StringOutput `pulumi:"prefixListId"`
	// The status of the prefix list.
	Status pulumi.StringOutput `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringOutput `pulumi:"transitRouterId"`
	// The ID of the route table of the transit router.
	TransitRouterTableId pulumi.StringOutput `pulumi:"transitRouterTableId"`
}

// NewTransitRouterPrefixListAssociation registers a new resource with the given unique name, arguments, and options.
func NewTransitRouterPrefixListAssociation(ctx *pulumi.Context,
	name string, args *TransitRouterPrefixListAssociationArgs, opts ...pulumi.ResourceOption) (*TransitRouterPrefixListAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NextHop == nil {
		return nil, errors.New("invalid value for required argument 'NextHop'")
	}
	if args.PrefixListId == nil {
		return nil, errors.New("invalid value for required argument 'PrefixListId'")
	}
	if args.TransitRouterId == nil {
		return nil, errors.New("invalid value for required argument 'TransitRouterId'")
	}
	if args.TransitRouterTableId == nil {
		return nil, errors.New("invalid value for required argument 'TransitRouterTableId'")
	}
	var resource TransitRouterPrefixListAssociation
	err := ctx.RegisterResource("alicloud:cen/transitRouterPrefixListAssociation:TransitRouterPrefixListAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouterPrefixListAssociation gets an existing TransitRouterPrefixListAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouterPrefixListAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterPrefixListAssociationState, opts ...pulumi.ResourceOption) (*TransitRouterPrefixListAssociation, error) {
	var resource TransitRouterPrefixListAssociation
	err := ctx.ReadResource("alicloud:cen/transitRouterPrefixListAssociation:TransitRouterPrefixListAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouterPrefixListAssociation resources.
type transitRouterPrefixListAssociationState struct {
	// The ID of the next hop. **NOTE:** If `nextHop` is set to `BlackHole`, you must set this parameter to `BlackHole`.
	NextHop *string `pulumi:"nextHop"`
	// The type of the next hop. Valid values:
	NextHopType *string `pulumi:"nextHopType"`
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid *int `pulumi:"ownerUid"`
	// The ID of the prefix list.
	PrefixListId *string `pulumi:"prefixListId"`
	// The status of the prefix list.
	Status *string `pulumi:"status"`
	// The ID of the transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
	// The ID of the route table of the transit router.
	TransitRouterTableId *string `pulumi:"transitRouterTableId"`
}

type TransitRouterPrefixListAssociationState struct {
	// The ID of the next hop. **NOTE:** If `nextHop` is set to `BlackHole`, you must set this parameter to `BlackHole`.
	NextHop pulumi.StringPtrInput
	// The type of the next hop. Valid values:
	NextHopType pulumi.StringPtrInput
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid pulumi.IntPtrInput
	// The ID of the prefix list.
	PrefixListId pulumi.StringPtrInput
	// The status of the prefix list.
	Status pulumi.StringPtrInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringPtrInput
	// The ID of the route table of the transit router.
	TransitRouterTableId pulumi.StringPtrInput
}

func (TransitRouterPrefixListAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterPrefixListAssociationState)(nil)).Elem()
}

type transitRouterPrefixListAssociationArgs struct {
	// The ID of the next hop. **NOTE:** If `nextHop` is set to `BlackHole`, you must set this parameter to `BlackHole`.
	NextHop string `pulumi:"nextHop"`
	// The type of the next hop. Valid values:
	NextHopType *string `pulumi:"nextHopType"`
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid *int `pulumi:"ownerUid"`
	// The ID of the prefix list.
	PrefixListId string `pulumi:"prefixListId"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The ID of the route table of the transit router.
	TransitRouterTableId string `pulumi:"transitRouterTableId"`
}

// The set of arguments for constructing a TransitRouterPrefixListAssociation resource.
type TransitRouterPrefixListAssociationArgs struct {
	// The ID of the next hop. **NOTE:** If `nextHop` is set to `BlackHole`, you must set this parameter to `BlackHole`.
	NextHop pulumi.StringInput
	// The type of the next hop. Valid values:
	NextHopType pulumi.StringPtrInput
	// The ID of the Alibaba Cloud account to which the prefix list belongs.
	OwnerUid pulumi.IntPtrInput
	// The ID of the prefix list.
	PrefixListId pulumi.StringInput
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput
	// The ID of the route table of the transit router.
	TransitRouterTableId pulumi.StringInput
}

func (TransitRouterPrefixListAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterPrefixListAssociationArgs)(nil)).Elem()
}

type TransitRouterPrefixListAssociationInput interface {
	pulumi.Input

	ToTransitRouterPrefixListAssociationOutput() TransitRouterPrefixListAssociationOutput
	ToTransitRouterPrefixListAssociationOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationOutput
}

func (*TransitRouterPrefixListAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterPrefixListAssociation)(nil)).Elem()
}

func (i *TransitRouterPrefixListAssociation) ToTransitRouterPrefixListAssociationOutput() TransitRouterPrefixListAssociationOutput {
	return i.ToTransitRouterPrefixListAssociationOutputWithContext(context.Background())
}

func (i *TransitRouterPrefixListAssociation) ToTransitRouterPrefixListAssociationOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterPrefixListAssociationOutput)
}

// TransitRouterPrefixListAssociationArrayInput is an input type that accepts TransitRouterPrefixListAssociationArray and TransitRouterPrefixListAssociationArrayOutput values.
// You can construct a concrete instance of `TransitRouterPrefixListAssociationArrayInput` via:
//
//	TransitRouterPrefixListAssociationArray{ TransitRouterPrefixListAssociationArgs{...} }
type TransitRouterPrefixListAssociationArrayInput interface {
	pulumi.Input

	ToTransitRouterPrefixListAssociationArrayOutput() TransitRouterPrefixListAssociationArrayOutput
	ToTransitRouterPrefixListAssociationArrayOutputWithContext(context.Context) TransitRouterPrefixListAssociationArrayOutput
}

type TransitRouterPrefixListAssociationArray []TransitRouterPrefixListAssociationInput

func (TransitRouterPrefixListAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterPrefixListAssociation)(nil)).Elem()
}

func (i TransitRouterPrefixListAssociationArray) ToTransitRouterPrefixListAssociationArrayOutput() TransitRouterPrefixListAssociationArrayOutput {
	return i.ToTransitRouterPrefixListAssociationArrayOutputWithContext(context.Background())
}

func (i TransitRouterPrefixListAssociationArray) ToTransitRouterPrefixListAssociationArrayOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterPrefixListAssociationArrayOutput)
}

// TransitRouterPrefixListAssociationMapInput is an input type that accepts TransitRouterPrefixListAssociationMap and TransitRouterPrefixListAssociationMapOutput values.
// You can construct a concrete instance of `TransitRouterPrefixListAssociationMapInput` via:
//
//	TransitRouterPrefixListAssociationMap{ "key": TransitRouterPrefixListAssociationArgs{...} }
type TransitRouterPrefixListAssociationMapInput interface {
	pulumi.Input

	ToTransitRouterPrefixListAssociationMapOutput() TransitRouterPrefixListAssociationMapOutput
	ToTransitRouterPrefixListAssociationMapOutputWithContext(context.Context) TransitRouterPrefixListAssociationMapOutput
}

type TransitRouterPrefixListAssociationMap map[string]TransitRouterPrefixListAssociationInput

func (TransitRouterPrefixListAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterPrefixListAssociation)(nil)).Elem()
}

func (i TransitRouterPrefixListAssociationMap) ToTransitRouterPrefixListAssociationMapOutput() TransitRouterPrefixListAssociationMapOutput {
	return i.ToTransitRouterPrefixListAssociationMapOutputWithContext(context.Background())
}

func (i TransitRouterPrefixListAssociationMap) ToTransitRouterPrefixListAssociationMapOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterPrefixListAssociationMapOutput)
}

type TransitRouterPrefixListAssociationOutput struct{ *pulumi.OutputState }

func (TransitRouterPrefixListAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouterPrefixListAssociation)(nil)).Elem()
}

func (o TransitRouterPrefixListAssociationOutput) ToTransitRouterPrefixListAssociationOutput() TransitRouterPrefixListAssociationOutput {
	return o
}

func (o TransitRouterPrefixListAssociationOutput) ToTransitRouterPrefixListAssociationOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationOutput {
	return o
}

// The ID of the next hop. **NOTE:** If `nextHop` is set to `BlackHole`, you must set this parameter to `BlackHole`.
func (o TransitRouterPrefixListAssociationOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.StringOutput { return v.NextHop }).(pulumi.StringOutput)
}

// The type of the next hop. Valid values:
func (o TransitRouterPrefixListAssociationOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.StringOutput { return v.NextHopType }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account to which the prefix list belongs.
func (o TransitRouterPrefixListAssociationOutput) OwnerUid() pulumi.IntOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.IntOutput { return v.OwnerUid }).(pulumi.IntOutput)
}

// The ID of the prefix list.
func (o TransitRouterPrefixListAssociationOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.StringOutput { return v.PrefixListId }).(pulumi.StringOutput)
}

// The status of the prefix list.
func (o TransitRouterPrefixListAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o TransitRouterPrefixListAssociationOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.StringOutput { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The ID of the route table of the transit router.
func (o TransitRouterPrefixListAssociationOutput) TransitRouterTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouterPrefixListAssociation) pulumi.StringOutput { return v.TransitRouterTableId }).(pulumi.StringOutput)
}

type TransitRouterPrefixListAssociationArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterPrefixListAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouterPrefixListAssociation)(nil)).Elem()
}

func (o TransitRouterPrefixListAssociationArrayOutput) ToTransitRouterPrefixListAssociationArrayOutput() TransitRouterPrefixListAssociationArrayOutput {
	return o
}

func (o TransitRouterPrefixListAssociationArrayOutput) ToTransitRouterPrefixListAssociationArrayOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationArrayOutput {
	return o
}

func (o TransitRouterPrefixListAssociationArrayOutput) Index(i pulumi.IntInput) TransitRouterPrefixListAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouterPrefixListAssociation {
		return vs[0].([]*TransitRouterPrefixListAssociation)[vs[1].(int)]
	}).(TransitRouterPrefixListAssociationOutput)
}

type TransitRouterPrefixListAssociationMapOutput struct{ *pulumi.OutputState }

func (TransitRouterPrefixListAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouterPrefixListAssociation)(nil)).Elem()
}

func (o TransitRouterPrefixListAssociationMapOutput) ToTransitRouterPrefixListAssociationMapOutput() TransitRouterPrefixListAssociationMapOutput {
	return o
}

func (o TransitRouterPrefixListAssociationMapOutput) ToTransitRouterPrefixListAssociationMapOutputWithContext(ctx context.Context) TransitRouterPrefixListAssociationMapOutput {
	return o
}

func (o TransitRouterPrefixListAssociationMapOutput) MapIndex(k pulumi.StringInput) TransitRouterPrefixListAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouterPrefixListAssociation {
		return vs[0].(map[string]*TransitRouterPrefixListAssociation)[vs[1].(string)]
	}).(TransitRouterPrefixListAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterPrefixListAssociationInput)(nil)).Elem(), &TransitRouterPrefixListAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterPrefixListAssociationArrayInput)(nil)).Elem(), TransitRouterPrefixListAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterPrefixListAssociationMapInput)(nil)).Elem(), TransitRouterPrefixListAssociationMap{})
	pulumi.RegisterOutputType(TransitRouterPrefixListAssociationOutput{})
	pulumi.RegisterOutputType(TransitRouterPrefixListAssociationArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterPrefixListAssociationMapOutput{})
}
