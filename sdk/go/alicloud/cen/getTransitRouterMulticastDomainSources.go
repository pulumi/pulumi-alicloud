// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Cen Transit Router Multicast Domain Source available to the user.[What is Transit Router Multicast Domain Source](https://www.alibabacloud.com/help/en/cloud-enterprise-network/latest/api-doc-cbn-2017-09-12-api-doc-registertransitroutermulticastgroupsources)
//
// > **NOTE:** Available in 1.195.0+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cen"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := cen.GetTransitRouterMulticastDomainSources(ctx, &cen.GetTransitRouterMulticastDomainSourcesArgs{
//				TransitRouterMulticastDomainId: "tr-mcast-domain-xxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("alicloudCenTransitRouterMulticastDomainSourceExampleId", _default.Sources[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetTransitRouterMulticastDomainSources(ctx *pulumi.Context, args *GetTransitRouterMulticastDomainSourcesArgs, opts ...pulumi.InvokeOption) (*GetTransitRouterMulticastDomainSourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTransitRouterMulticastDomainSourcesResult
	err := ctx.Invoke("alicloud:cen/getTransitRouterMulticastDomainSources:getTransitRouterMulticastDomainSources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitRouterMulticastDomainSources.
type GetTransitRouterMulticastDomainSourcesArgs struct {
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the multicast domain to which the multicast source belongs.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
}

// A collection of values returned by getTransitRouterMulticastDomainSources.
type GetTransitRouterMulticastDomainSourcesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Transit Router Multicast Domain Source Entries. Each element contains the following attributes:
	Sources []GetTransitRouterMulticastDomainSourcesSource `pulumi:"sources"`
	// The ID of the multicast domain to which the multicast source belongs.
	TransitRouterMulticastDomainId string `pulumi:"transitRouterMulticastDomainId"`
}

func GetTransitRouterMulticastDomainSourcesOutput(ctx *pulumi.Context, args GetTransitRouterMulticastDomainSourcesOutputArgs, opts ...pulumi.InvokeOption) GetTransitRouterMulticastDomainSourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTransitRouterMulticastDomainSourcesResult, error) {
			args := v.(GetTransitRouterMulticastDomainSourcesArgs)
			r, err := GetTransitRouterMulticastDomainSources(ctx, &args, opts...)
			var s GetTransitRouterMulticastDomainSourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTransitRouterMulticastDomainSourcesResultOutput)
}

// A collection of arguments for invoking getTransitRouterMulticastDomainSources.
type GetTransitRouterMulticastDomainSourcesOutputArgs struct {
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the multicast domain to which the multicast source belongs.
	TransitRouterMulticastDomainId pulumi.StringInput `pulumi:"transitRouterMulticastDomainId"`
}

func (GetTransitRouterMulticastDomainSourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainSourcesArgs)(nil)).Elem()
}

// A collection of values returned by getTransitRouterMulticastDomainSources.
type GetTransitRouterMulticastDomainSourcesResultOutput struct{ *pulumi.OutputState }

func (GetTransitRouterMulticastDomainSourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterMulticastDomainSourcesResult)(nil)).Elem()
}

func (o GetTransitRouterMulticastDomainSourcesResultOutput) ToGetTransitRouterMulticastDomainSourcesResultOutput() GetTransitRouterMulticastDomainSourcesResultOutput {
	return o
}

func (o GetTransitRouterMulticastDomainSourcesResultOutput) ToGetTransitRouterMulticastDomainSourcesResultOutputWithContext(ctx context.Context) GetTransitRouterMulticastDomainSourcesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTransitRouterMulticastDomainSourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTransitRouterMulticastDomainSourcesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetTransitRouterMulticastDomainSourcesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Transit Router Multicast Domain Source Entries. Each element contains the following attributes:
func (o GetTransitRouterMulticastDomainSourcesResultOutput) Sources() GetTransitRouterMulticastDomainSourcesSourceArrayOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesResult) []GetTransitRouterMulticastDomainSourcesSource {
		return v.Sources
	}).(GetTransitRouterMulticastDomainSourcesSourceArrayOutput)
}

// The ID of the multicast domain to which the multicast source belongs.
func (o GetTransitRouterMulticastDomainSourcesResultOutput) TransitRouterMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterMulticastDomainSourcesResult) string { return v.TransitRouterMulticastDomainId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTransitRouterMulticastDomainSourcesResultOutput{})
}
