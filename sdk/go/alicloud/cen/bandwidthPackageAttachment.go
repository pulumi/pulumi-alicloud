// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a CEN bandwidth package attachment resource. The resource can be used to bind a bandwidth package to a specified CEN instance.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/cen"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cen, err := cen.NewInstance(ctx, "cen", &cen.InstanceArgs{
// 			Description: pulumi.String("tf-testAccCenBandwidthPackageAttachmentDescription"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		bwp, err := cen.NewBandwidthPackage(ctx, "bwp", &cen.BandwidthPackageArgs{
// 			Bandwidth: pulumi.Int(20),
// 			GeographicRegionIds: pulumi.StringArray{
// 				pulumi.String("China"),
// 				pulumi.String("Asia-Pacific"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cen.NewBandwidthPackageAttachment(ctx, "foo", &cen.BandwidthPackageAttachmentArgs{
// 			InstanceId:         cen.ID(),
// 			BandwidthPackageId: bwp.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// CEN bandwidth package attachment resource can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment example bwp-abc123456
// ```
type BandwidthPackageAttachment struct {
	pulumi.CustomResourceState

	// The ID of the bandwidth package.
	BandwidthPackageId pulumi.StringOutput `pulumi:"bandwidthPackageId"`
	// The ID of the CEN.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewBandwidthPackageAttachment registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackageAttachment(ctx *pulumi.Context,
	name string, args *BandwidthPackageAttachmentArgs, opts ...pulumi.ResourceOption) (*BandwidthPackageAttachment, error) {
	if args == nil || args.BandwidthPackageId == nil {
		return nil, errors.New("missing required argument 'BandwidthPackageId'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil {
		args = &BandwidthPackageAttachmentArgs{}
	}
	var resource BandwidthPackageAttachment
	err := ctx.RegisterResource("alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPackageAttachment gets an existing BandwidthPackageAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackageAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPackageAttachmentState, opts ...pulumi.ResourceOption) (*BandwidthPackageAttachment, error) {
	var resource BandwidthPackageAttachment
	err := ctx.ReadResource("alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPackageAttachment resources.
type bandwidthPackageAttachmentState struct {
	// The ID of the bandwidth package.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// The ID of the CEN.
	InstanceId *string `pulumi:"instanceId"`
}

type BandwidthPackageAttachmentState struct {
	// The ID of the bandwidth package.
	BandwidthPackageId pulumi.StringPtrInput
	// The ID of the CEN.
	InstanceId pulumi.StringPtrInput
}

func (BandwidthPackageAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageAttachmentState)(nil)).Elem()
}

type bandwidthPackageAttachmentArgs struct {
	// The ID of the bandwidth package.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The ID of the CEN.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a BandwidthPackageAttachment resource.
type BandwidthPackageAttachmentArgs struct {
	// The ID of the bandwidth package.
	BandwidthPackageId pulumi.StringInput
	// The ID of the CEN.
	InstanceId pulumi.StringInput
}

func (BandwidthPackageAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageAttachmentArgs)(nil)).Elem()
}

type BandwidthPackageAttachmentInput interface {
	pulumi.Input

	ToBandwidthPackageAttachmentOutput() BandwidthPackageAttachmentOutput
	ToBandwidthPackageAttachmentOutputWithContext(ctx context.Context) BandwidthPackageAttachmentOutput
}

func (BandwidthPackageAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageAttachment)(nil)).Elem()
}

func (i BandwidthPackageAttachment) ToBandwidthPackageAttachmentOutput() BandwidthPackageAttachmentOutput {
	return i.ToBandwidthPackageAttachmentOutputWithContext(context.Background())
}

func (i BandwidthPackageAttachment) ToBandwidthPackageAttachmentOutputWithContext(ctx context.Context) BandwidthPackageAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageAttachmentOutput)
}

type BandwidthPackageAttachmentOutput struct {
	*pulumi.OutputState
}

func (BandwidthPackageAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageAttachmentOutput)(nil)).Elem()
}

func (o BandwidthPackageAttachmentOutput) ToBandwidthPackageAttachmentOutput() BandwidthPackageAttachmentOutput {
	return o
}

func (o BandwidthPackageAttachmentOutput) ToBandwidthPackageAttachmentOutputWithContext(ctx context.Context) BandwidthPackageAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BandwidthPackageAttachmentOutput{})
}
