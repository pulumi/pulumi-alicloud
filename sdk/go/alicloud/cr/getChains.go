// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Cr Chains of the current Alibaba Cloud user.
//
// For information about CR Chains and how to use it, see [What is Chain](https://www.alibabacloud.com/help/en/doc-detail/357821.html).
//
// > **NOTE:** Available in v1.161.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := cr.GetChains(ctx, &cr.GetChainsArgs{
//				InstanceId: "example_value",
//				Ids: []string{
//					"example_value-1",
//					"example_value-2",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("crChainId1", ids.Chains[0].Id)
//			nameRegex, err := cr.GetChains(ctx, &cr.GetChainsArgs{
//				InstanceId: "example_value",
//				NameRegex:  pulumi.StringRef("^my-Chain"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("crChainId2", nameRegex.Chains[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetChains(ctx *pulumi.Context, args *GetChainsArgs, opts ...pulumi.InvokeOption) (*GetChainsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetChainsResult
	err := ctx.Invoke("alicloud:cr/getChains:getChains", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getChains.
type GetChainsArgs struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Chain IDs.
	Ids []string `pulumi:"ids"`
	// The ID of CR Enterprise Edition instance.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by Chain name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The name of CR Enterprise Edition repository.
	RepoName *string `pulumi:"repoName"`
	// The name of CR Enterprise Edition namespace.
	RepoNamespaceName *string `pulumi:"repoNamespaceName"`
}

// A collection of values returned by getChains.
type GetChainsResult struct {
	// A list of Cr Chains. Each element contains the following attributes:
	Chains        []GetChainsChain `pulumi:"chains"`
	EnableDetails *bool            `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Chain IDs.
	Ids []string `pulumi:"ids"`
	// The ID of CR Enterprise Edition instance.
	InstanceId string  `pulumi:"instanceId"`
	NameRegex  *string `pulumi:"nameRegex"`
	// A list of Chain names.
	Names             []string `pulumi:"names"`
	OutputFile        *string  `pulumi:"outputFile"`
	RepoName          *string  `pulumi:"repoName"`
	RepoNamespaceName *string  `pulumi:"repoNamespaceName"`
}

func GetChainsOutput(ctx *pulumi.Context, args GetChainsOutputArgs, opts ...pulumi.InvokeOption) GetChainsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetChainsResult, error) {
			args := v.(GetChainsArgs)
			r, err := GetChains(ctx, &args, opts...)
			var s GetChainsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetChainsResultOutput)
}

// A collection of arguments for invoking getChains.
type GetChainsOutputArgs struct {
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Chain IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The ID of CR Enterprise Edition instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A regex string to filter results by Chain name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of CR Enterprise Edition repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// The name of CR Enterprise Edition namespace.
	RepoNamespaceName pulumi.StringPtrInput `pulumi:"repoNamespaceName"`
}

func (GetChainsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsArgs)(nil)).Elem()
}

// A collection of values returned by getChains.
type GetChainsResultOutput struct{ *pulumi.OutputState }

func (GetChainsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsResult)(nil)).Elem()
}

func (o GetChainsResultOutput) ToGetChainsResultOutput() GetChainsResultOutput {
	return o
}

func (o GetChainsResultOutput) ToGetChainsResultOutputWithContext(ctx context.Context) GetChainsResultOutput {
	return o
}

// A list of Cr Chains. Each element contains the following attributes:
func (o GetChainsResultOutput) Chains() GetChainsChainArrayOutput {
	return o.ApplyT(func(v GetChainsResult) []GetChainsChain { return v.Chains }).(GetChainsChainArrayOutput)
}

func (o GetChainsResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetChainsResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetChainsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Chain IDs.
func (o GetChainsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChainsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The ID of CR Enterprise Edition instance.
func (o GetChainsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetChainsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChainsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Chain names.
func (o GetChainsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChainsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetChainsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChainsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetChainsResultOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChainsResult) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

func (o GetChainsResultOutput) RepoNamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChainsResult) *string { return v.RepoNamespaceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetChainsResultOutput{})
}
