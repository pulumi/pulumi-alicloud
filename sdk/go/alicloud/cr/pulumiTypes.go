// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RepoDomainList struct {
	// Domain of internal endpoint, only in some regions.
	Internal *string `pulumi:"internal"`
	// Domain of public endpoint.
	Public *string `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc *string `pulumi:"vpc"`
}

// RepoDomainListInput is an input type that accepts RepoDomainListArgs and RepoDomainListOutput values.
// You can construct a concrete instance of `RepoDomainListInput` via:
//
//          RepoDomainListArgs{...}
type RepoDomainListInput interface {
	pulumi.Input

	ToRepoDomainListOutput() RepoDomainListOutput
	ToRepoDomainListOutputWithContext(context.Context) RepoDomainListOutput
}

type RepoDomainListArgs struct {
	// Domain of internal endpoint, only in some regions.
	Internal pulumi.StringPtrInput `pulumi:"internal"`
	// Domain of public endpoint.
	Public pulumi.StringPtrInput `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (RepoDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoDomainList)(nil)).Elem()
}

func (i RepoDomainListArgs) ToRepoDomainListOutput() RepoDomainListOutput {
	return i.ToRepoDomainListOutputWithContext(context.Background())
}

func (i RepoDomainListArgs) ToRepoDomainListOutputWithContext(ctx context.Context) RepoDomainListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoDomainListOutput)
}

func (i RepoDomainListArgs) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return i.ToRepoDomainListPtrOutputWithContext(context.Background())
}

func (i RepoDomainListArgs) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoDomainListOutput).ToRepoDomainListPtrOutputWithContext(ctx)
}

// RepoDomainListPtrInput is an input type that accepts RepoDomainListArgs, RepoDomainListPtr and RepoDomainListPtrOutput values.
// You can construct a concrete instance of `RepoDomainListPtrInput` via:
//
//          RepoDomainListArgs{...}
//
//  or:
//
//          nil
type RepoDomainListPtrInput interface {
	pulumi.Input

	ToRepoDomainListPtrOutput() RepoDomainListPtrOutput
	ToRepoDomainListPtrOutputWithContext(context.Context) RepoDomainListPtrOutput
}

type repoDomainListPtrType RepoDomainListArgs

func RepoDomainListPtr(v *RepoDomainListArgs) RepoDomainListPtrInput {
	return (*repoDomainListPtrType)(v)
}

func (*repoDomainListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoDomainList)(nil)).Elem()
}

func (i *repoDomainListPtrType) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return i.ToRepoDomainListPtrOutputWithContext(context.Background())
}

func (i *repoDomainListPtrType) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoDomainListPtrOutput)
}

type RepoDomainListOutput struct{ *pulumi.OutputState }

func (RepoDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoDomainList)(nil)).Elem()
}

func (o RepoDomainListOutput) ToRepoDomainListOutput() RepoDomainListOutput {
	return o
}

func (o RepoDomainListOutput) ToRepoDomainListOutputWithContext(ctx context.Context) RepoDomainListOutput {
	return o
}

func (o RepoDomainListOutput) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return o.ToRepoDomainListPtrOutputWithContext(context.Background())
}

func (o RepoDomainListOutput) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepoDomainList) *RepoDomainList {
		return &v
	}).(RepoDomainListPtrOutput)
}

// Domain of internal endpoint, only in some regions.
func (o RepoDomainListOutput) Internal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoDomainList) *string { return v.Internal }).(pulumi.StringPtrOutput)
}

// Domain of public endpoint.
func (o RepoDomainListOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoDomainList) *string { return v.Public }).(pulumi.StringPtrOutput)
}

// Domain of vpc endpoint.
func (o RepoDomainListOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoDomainList) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type RepoDomainListPtrOutput struct{ *pulumi.OutputState }

func (RepoDomainListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoDomainList)(nil)).Elem()
}

func (o RepoDomainListPtrOutput) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return o
}

func (o RepoDomainListPtrOutput) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return o
}

func (o RepoDomainListPtrOutput) Elem() RepoDomainListOutput {
	return o.ApplyT(func(v *RepoDomainList) RepoDomainList {
		if v != nil {
			return *v
		}
		var ret RepoDomainList
		return ret
	}).(RepoDomainListOutput)
}

// Domain of internal endpoint, only in some regions.
func (o RepoDomainListPtrOutput) Internal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoDomainList) *string {
		if v == nil {
			return nil
		}
		return v.Internal
	}).(pulumi.StringPtrOutput)
}

// Domain of public endpoint.
func (o RepoDomainListPtrOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoDomainList) *string {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.StringPtrOutput)
}

// Domain of vpc endpoint.
func (o RepoDomainListPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoDomainList) *string {
		if v == nil {
			return nil
		}
		return v.Vpc
	}).(pulumi.StringPtrOutput)
}

type GetChartNamespacesNamespace struct {
	// Indicates whether a repository is automatically created when an image is pushed to the namespace.
	AutoCreateRepo bool `pulumi:"autoCreateRepo"`
	// The ID of the namespace.
	ChartNamespaceId string `pulumi:"chartNamespaceId"`
	// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
	DefaultRepoType string `pulumi:"defaultRepoType"`
	// The ID of the Chart Namespace.
	Id string `pulumi:"id"`
	// The ID of the namespace.
	InstanceId string `pulumi:"instanceId"`
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
}

// GetChartNamespacesNamespaceInput is an input type that accepts GetChartNamespacesNamespaceArgs and GetChartNamespacesNamespaceOutput values.
// You can construct a concrete instance of `GetChartNamespacesNamespaceInput` via:
//
//          GetChartNamespacesNamespaceArgs{...}
type GetChartNamespacesNamespaceInput interface {
	pulumi.Input

	ToGetChartNamespacesNamespaceOutput() GetChartNamespacesNamespaceOutput
	ToGetChartNamespacesNamespaceOutputWithContext(context.Context) GetChartNamespacesNamespaceOutput
}

type GetChartNamespacesNamespaceArgs struct {
	// Indicates whether a repository is automatically created when an image is pushed to the namespace.
	AutoCreateRepo pulumi.BoolInput `pulumi:"autoCreateRepo"`
	// The ID of the namespace.
	ChartNamespaceId pulumi.StringInput `pulumi:"chartNamespaceId"`
	// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
	DefaultRepoType pulumi.StringInput `pulumi:"defaultRepoType"`
	// The ID of the Chart Namespace.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the namespace.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
}

func (GetChartNamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartNamespacesNamespace)(nil)).Elem()
}

func (i GetChartNamespacesNamespaceArgs) ToGetChartNamespacesNamespaceOutput() GetChartNamespacesNamespaceOutput {
	return i.ToGetChartNamespacesNamespaceOutputWithContext(context.Background())
}

func (i GetChartNamespacesNamespaceArgs) ToGetChartNamespacesNamespaceOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartNamespacesNamespaceOutput)
}

// GetChartNamespacesNamespaceArrayInput is an input type that accepts GetChartNamespacesNamespaceArray and GetChartNamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `GetChartNamespacesNamespaceArrayInput` via:
//
//          GetChartNamespacesNamespaceArray{ GetChartNamespacesNamespaceArgs{...} }
type GetChartNamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToGetChartNamespacesNamespaceArrayOutput() GetChartNamespacesNamespaceArrayOutput
	ToGetChartNamespacesNamespaceArrayOutputWithContext(context.Context) GetChartNamespacesNamespaceArrayOutput
}

type GetChartNamespacesNamespaceArray []GetChartNamespacesNamespaceInput

func (GetChartNamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartNamespacesNamespace)(nil)).Elem()
}

func (i GetChartNamespacesNamespaceArray) ToGetChartNamespacesNamespaceArrayOutput() GetChartNamespacesNamespaceArrayOutput {
	return i.ToGetChartNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i GetChartNamespacesNamespaceArray) ToGetChartNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartNamespacesNamespaceArrayOutput)
}

type GetChartNamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (GetChartNamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartNamespacesNamespace)(nil)).Elem()
}

func (o GetChartNamespacesNamespaceOutput) ToGetChartNamespacesNamespaceOutput() GetChartNamespacesNamespaceOutput {
	return o
}

func (o GetChartNamespacesNamespaceOutput) ToGetChartNamespacesNamespaceOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceOutput {
	return o
}

// Indicates whether a repository is automatically created when an image is pushed to the namespace.
func (o GetChartNamespacesNamespaceOutput) AutoCreateRepo() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) bool { return v.AutoCreateRepo }).(pulumi.BoolOutput)
}

// The ID of the namespace.
func (o GetChartNamespacesNamespaceOutput) ChartNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.ChartNamespaceId }).(pulumi.StringOutput)
}

// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
func (o GetChartNamespacesNamespaceOutput) DefaultRepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.DefaultRepoType }).(pulumi.StringOutput)
}

// The ID of the Chart Namespace.
func (o GetChartNamespacesNamespaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the namespace.
func (o GetChartNamespacesNamespaceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the namespace.
func (o GetChartNamespacesNamespaceOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.NamespaceName }).(pulumi.StringOutput)
}

type GetChartNamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetChartNamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartNamespacesNamespace)(nil)).Elem()
}

func (o GetChartNamespacesNamespaceArrayOutput) ToGetChartNamespacesNamespaceArrayOutput() GetChartNamespacesNamespaceArrayOutput {
	return o
}

func (o GetChartNamespacesNamespaceArrayOutput) ToGetChartNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceArrayOutput {
	return o
}

func (o GetChartNamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) GetChartNamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChartNamespacesNamespace {
		return vs[0].([]GetChartNamespacesNamespace)[vs[1].(int)]
	}).(GetChartNamespacesNamespaceOutput)
}

type GetChartRepositoriesRepository struct {
	// The first ID of the resource.
	ChartRepositoryId string `pulumi:"chartRepositoryId"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Chart Repository.
	Id string `pulumi:"id"`
	// The ID of the Container Registry instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the repository.
	RepoName string `pulumi:"repoName"`
	// The namespace to which the repository belongs.
	RepoNamespaceName string `pulumi:"repoNamespaceName"`
	// The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
	RepoType string `pulumi:"repoType"`
	// The summary about the repository.
	Summary string `pulumi:"summary"`
}

// GetChartRepositoriesRepositoryInput is an input type that accepts GetChartRepositoriesRepositoryArgs and GetChartRepositoriesRepositoryOutput values.
// You can construct a concrete instance of `GetChartRepositoriesRepositoryInput` via:
//
//          GetChartRepositoriesRepositoryArgs{...}
type GetChartRepositoriesRepositoryInput interface {
	pulumi.Input

	ToGetChartRepositoriesRepositoryOutput() GetChartRepositoriesRepositoryOutput
	ToGetChartRepositoriesRepositoryOutputWithContext(context.Context) GetChartRepositoriesRepositoryOutput
}

type GetChartRepositoriesRepositoryArgs struct {
	// The first ID of the resource.
	ChartRepositoryId pulumi.StringInput `pulumi:"chartRepositoryId"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Chart Repository.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Container Registry instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// The namespace to which the repository belongs.
	RepoNamespaceName pulumi.StringInput `pulumi:"repoNamespaceName"`
	// The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The summary about the repository.
	Summary pulumi.StringInput `pulumi:"summary"`
}

func (GetChartRepositoriesRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartRepositoriesRepository)(nil)).Elem()
}

func (i GetChartRepositoriesRepositoryArgs) ToGetChartRepositoriesRepositoryOutput() GetChartRepositoriesRepositoryOutput {
	return i.ToGetChartRepositoriesRepositoryOutputWithContext(context.Background())
}

func (i GetChartRepositoriesRepositoryArgs) ToGetChartRepositoriesRepositoryOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartRepositoriesRepositoryOutput)
}

// GetChartRepositoriesRepositoryArrayInput is an input type that accepts GetChartRepositoriesRepositoryArray and GetChartRepositoriesRepositoryArrayOutput values.
// You can construct a concrete instance of `GetChartRepositoriesRepositoryArrayInput` via:
//
//          GetChartRepositoriesRepositoryArray{ GetChartRepositoriesRepositoryArgs{...} }
type GetChartRepositoriesRepositoryArrayInput interface {
	pulumi.Input

	ToGetChartRepositoriesRepositoryArrayOutput() GetChartRepositoriesRepositoryArrayOutput
	ToGetChartRepositoriesRepositoryArrayOutputWithContext(context.Context) GetChartRepositoriesRepositoryArrayOutput
}

type GetChartRepositoriesRepositoryArray []GetChartRepositoriesRepositoryInput

func (GetChartRepositoriesRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartRepositoriesRepository)(nil)).Elem()
}

func (i GetChartRepositoriesRepositoryArray) ToGetChartRepositoriesRepositoryArrayOutput() GetChartRepositoriesRepositoryArrayOutput {
	return i.ToGetChartRepositoriesRepositoryArrayOutputWithContext(context.Background())
}

func (i GetChartRepositoriesRepositoryArray) ToGetChartRepositoriesRepositoryArrayOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartRepositoriesRepositoryArrayOutput)
}

type GetChartRepositoriesRepositoryOutput struct{ *pulumi.OutputState }

func (GetChartRepositoriesRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartRepositoriesRepository)(nil)).Elem()
}

func (o GetChartRepositoriesRepositoryOutput) ToGetChartRepositoriesRepositoryOutput() GetChartRepositoriesRepositoryOutput {
	return o
}

func (o GetChartRepositoriesRepositoryOutput) ToGetChartRepositoriesRepositoryOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryOutput {
	return o
}

// The first ID of the resource.
func (o GetChartRepositoriesRepositoryOutput) ChartRepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.ChartRepositoryId }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o GetChartRepositoriesRepositoryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Chart Repository.
func (o GetChartRepositoriesRepositoryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Container Registry instance.
func (o GetChartRepositoriesRepositoryOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the repository.
func (o GetChartRepositoriesRepositoryOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.RepoName }).(pulumi.StringOutput)
}

// The namespace to which the repository belongs.
func (o GetChartRepositoriesRepositoryOutput) RepoNamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.RepoNamespaceName }).(pulumi.StringOutput)
}

// The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
func (o GetChartRepositoriesRepositoryOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.RepoType }).(pulumi.StringOutput)
}

// The summary about the repository.
func (o GetChartRepositoriesRepositoryOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.Summary }).(pulumi.StringOutput)
}

type GetChartRepositoriesRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetChartRepositoriesRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartRepositoriesRepository)(nil)).Elem()
}

func (o GetChartRepositoriesRepositoryArrayOutput) ToGetChartRepositoriesRepositoryArrayOutput() GetChartRepositoriesRepositoryArrayOutput {
	return o
}

func (o GetChartRepositoriesRepositoryArrayOutput) ToGetChartRepositoriesRepositoryArrayOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryArrayOutput {
	return o
}

func (o GetChartRepositoriesRepositoryArrayOutput) Index(i pulumi.IntInput) GetChartRepositoriesRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChartRepositoriesRepository {
		return vs[0].([]GetChartRepositoriesRepository)[vs[1].(int)]
	}).(GetChartRepositoriesRepositoryOutput)
}

type GetEndpointAclPoliciesPolicy struct {
	// The description of the entry.
	Description string `pulumi:"description"`
	// The type of endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The IP segment that allowed to access.
	Entry string `pulumi:"entry"`
	// The ID of the Endpoint Acl Policy.
	Id string `pulumi:"id"`
	// The ID of the CR Instance.
	InstanceId string `pulumi:"instanceId"`
}

// GetEndpointAclPoliciesPolicyInput is an input type that accepts GetEndpointAclPoliciesPolicyArgs and GetEndpointAclPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetEndpointAclPoliciesPolicyInput` via:
//
//          GetEndpointAclPoliciesPolicyArgs{...}
type GetEndpointAclPoliciesPolicyInput interface {
	pulumi.Input

	ToGetEndpointAclPoliciesPolicyOutput() GetEndpointAclPoliciesPolicyOutput
	ToGetEndpointAclPoliciesPolicyOutputWithContext(context.Context) GetEndpointAclPoliciesPolicyOutput
}

type GetEndpointAclPoliciesPolicyArgs struct {
	// The description of the entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of endpoint.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The IP segment that allowed to access.
	Entry pulumi.StringInput `pulumi:"entry"`
	// The ID of the Endpoint Acl Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the CR Instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetEndpointAclPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (i GetEndpointAclPoliciesPolicyArgs) ToGetEndpointAclPoliciesPolicyOutput() GetEndpointAclPoliciesPolicyOutput {
	return i.ToGetEndpointAclPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetEndpointAclPoliciesPolicyArgs) ToGetEndpointAclPoliciesPolicyOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointAclPoliciesPolicyOutput)
}

// GetEndpointAclPoliciesPolicyArrayInput is an input type that accepts GetEndpointAclPoliciesPolicyArray and GetEndpointAclPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetEndpointAclPoliciesPolicyArrayInput` via:
//
//          GetEndpointAclPoliciesPolicyArray{ GetEndpointAclPoliciesPolicyArgs{...} }
type GetEndpointAclPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetEndpointAclPoliciesPolicyArrayOutput() GetEndpointAclPoliciesPolicyArrayOutput
	ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(context.Context) GetEndpointAclPoliciesPolicyArrayOutput
}

type GetEndpointAclPoliciesPolicyArray []GetEndpointAclPoliciesPolicyInput

func (GetEndpointAclPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (i GetEndpointAclPoliciesPolicyArray) ToGetEndpointAclPoliciesPolicyArrayOutput() GetEndpointAclPoliciesPolicyArrayOutput {
	return i.ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetEndpointAclPoliciesPolicyArray) ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointAclPoliciesPolicyArrayOutput)
}

type GetEndpointAclPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetEndpointAclPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (o GetEndpointAclPoliciesPolicyOutput) ToGetEndpointAclPoliciesPolicyOutput() GetEndpointAclPoliciesPolicyOutput {
	return o
}

func (o GetEndpointAclPoliciesPolicyOutput) ToGetEndpointAclPoliciesPolicyOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyOutput {
	return o
}

// The description of the entry.
func (o GetEndpointAclPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The type of endpoint.
func (o GetEndpointAclPoliciesPolicyOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The IP segment that allowed to access.
func (o GetEndpointAclPoliciesPolicyOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.Entry }).(pulumi.StringOutput)
}

// The ID of the Endpoint Acl Policy.
func (o GetEndpointAclPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the CR Instance.
func (o GetEndpointAclPoliciesPolicyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetEndpointAclPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointAclPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (o GetEndpointAclPoliciesPolicyArrayOutput) ToGetEndpointAclPoliciesPolicyArrayOutput() GetEndpointAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetEndpointAclPoliciesPolicyArrayOutput) ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetEndpointAclPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetEndpointAclPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointAclPoliciesPolicy {
		return vs[0].([]GetEndpointAclPoliciesPolicy)[vs[1].(int)]
	}).(GetEndpointAclPoliciesPolicyOutput)
}

type GetNamespacesNamespace struct {
	// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
	AutoCreate bool `pulumi:"autoCreate"`
	// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
	DefaultVisibility string `pulumi:"defaultVisibility"`
	// Name of Container Registry namespace.
	Name string `pulumi:"name"`
}

// GetNamespacesNamespaceInput is an input type that accepts GetNamespacesNamespaceArgs and GetNamespacesNamespaceOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceInput` via:
//
//          GetNamespacesNamespaceArgs{...}
type GetNamespacesNamespaceInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput
	ToGetNamespacesNamespaceOutputWithContext(context.Context) GetNamespacesNamespaceOutput
}

type GetNamespacesNamespaceArgs struct {
	// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
	AutoCreate pulumi.BoolInput `pulumi:"autoCreate"`
	// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
	DefaultVisibility pulumi.StringInput `pulumi:"defaultVisibility"`
	// Name of Container Registry namespace.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return i.ToGetNamespacesNamespaceOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceOutput)
}

// GetNamespacesNamespaceArrayInput is an input type that accepts GetNamespacesNamespaceArray and GetNamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceArrayInput` via:
//
//          GetNamespacesNamespaceArray{ GetNamespacesNamespaceArgs{...} }
type GetNamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput
	ToGetNamespacesNamespaceArrayOutputWithContext(context.Context) GetNamespacesNamespaceArrayOutput
}

type GetNamespacesNamespaceArray []GetNamespacesNamespaceInput

func (GetNamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return i.ToGetNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceArrayOutput)
}

type GetNamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return o
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return o
}

// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
func (o GetNamespacesNamespaceOutput) AutoCreate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) bool { return v.AutoCreate }).(pulumi.BoolOutput)
}

// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
func (o GetNamespacesNamespaceOutput) DefaultVisibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.DefaultVisibility }).(pulumi.StringOutput)
}

// Name of Container Registry namespace.
func (o GetNamespacesNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Name }).(pulumi.StringOutput)
}

type GetNamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) GetNamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesNamespace {
		return vs[0].([]GetNamespacesNamespace)[vs[1].(int)]
	}).(GetNamespacesNamespaceOutput)
}

type GetReposRepo struct {
	// The repository domain list.
	DomainList GetReposRepoDomainList `pulumi:"domainList"`
	// Name of container registry namespace.
	Name string `pulumi:"name"`
	// Name of container registry namespace where the repositories are located in.
	Namespace string `pulumi:"namespace"`
	// `PUBLIC` or `PRIVATE`, repository's visibility.
	RepoType string `pulumi:"repoType"`
	// The repository general information.
	Summary string `pulumi:"summary"`
	// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
	Tags []GetReposRepoTag `pulumi:"tags"`
}

// GetReposRepoInput is an input type that accepts GetReposRepoArgs and GetReposRepoOutput values.
// You can construct a concrete instance of `GetReposRepoInput` via:
//
//          GetReposRepoArgs{...}
type GetReposRepoInput interface {
	pulumi.Input

	ToGetReposRepoOutput() GetReposRepoOutput
	ToGetReposRepoOutputWithContext(context.Context) GetReposRepoOutput
}

type GetReposRepoArgs struct {
	// The repository domain list.
	DomainList GetReposRepoDomainListInput `pulumi:"domainList"`
	// Name of container registry namespace.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of container registry namespace where the repositories are located in.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// `PUBLIC` or `PRIVATE`, repository's visibility.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The repository general information.
	Summary pulumi.StringInput `pulumi:"summary"`
	// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
	Tags GetReposRepoTagArrayInput `pulumi:"tags"`
}

func (GetReposRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepo)(nil)).Elem()
}

func (i GetReposRepoArgs) ToGetReposRepoOutput() GetReposRepoOutput {
	return i.ToGetReposRepoOutputWithContext(context.Background())
}

func (i GetReposRepoArgs) ToGetReposRepoOutputWithContext(ctx context.Context) GetReposRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoOutput)
}

// GetReposRepoArrayInput is an input type that accepts GetReposRepoArray and GetReposRepoArrayOutput values.
// You can construct a concrete instance of `GetReposRepoArrayInput` via:
//
//          GetReposRepoArray{ GetReposRepoArgs{...} }
type GetReposRepoArrayInput interface {
	pulumi.Input

	ToGetReposRepoArrayOutput() GetReposRepoArrayOutput
	ToGetReposRepoArrayOutputWithContext(context.Context) GetReposRepoArrayOutput
}

type GetReposRepoArray []GetReposRepoInput

func (GetReposRepoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepo)(nil)).Elem()
}

func (i GetReposRepoArray) ToGetReposRepoArrayOutput() GetReposRepoArrayOutput {
	return i.ToGetReposRepoArrayOutputWithContext(context.Background())
}

func (i GetReposRepoArray) ToGetReposRepoArrayOutputWithContext(ctx context.Context) GetReposRepoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoArrayOutput)
}

type GetReposRepoOutput struct{ *pulumi.OutputState }

func (GetReposRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepo)(nil)).Elem()
}

func (o GetReposRepoOutput) ToGetReposRepoOutput() GetReposRepoOutput {
	return o
}

func (o GetReposRepoOutput) ToGetReposRepoOutputWithContext(ctx context.Context) GetReposRepoOutput {
	return o
}

// The repository domain list.
func (o GetReposRepoOutput) DomainList() GetReposRepoDomainListOutput {
	return o.ApplyT(func(v GetReposRepo) GetReposRepoDomainList { return v.DomainList }).(GetReposRepoDomainListOutput)
}

// Name of container registry namespace.
func (o GetReposRepoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.Name }).(pulumi.StringOutput)
}

// Name of container registry namespace where the repositories are located in.
func (o GetReposRepoOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.Namespace }).(pulumi.StringOutput)
}

// `PUBLIC` or `PRIVATE`, repository's visibility.
func (o GetReposRepoOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.RepoType }).(pulumi.StringOutput)
}

// The repository general information.
func (o GetReposRepoOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.Summary }).(pulumi.StringOutput)
}

// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
func (o GetReposRepoOutput) Tags() GetReposRepoTagArrayOutput {
	return o.ApplyT(func(v GetReposRepo) []GetReposRepoTag { return v.Tags }).(GetReposRepoTagArrayOutput)
}

type GetReposRepoArrayOutput struct{ *pulumi.OutputState }

func (GetReposRepoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepo)(nil)).Elem()
}

func (o GetReposRepoArrayOutput) ToGetReposRepoArrayOutput() GetReposRepoArrayOutput {
	return o
}

func (o GetReposRepoArrayOutput) ToGetReposRepoArrayOutputWithContext(ctx context.Context) GetReposRepoArrayOutput {
	return o
}

func (o GetReposRepoArrayOutput) Index(i pulumi.IntInput) GetReposRepoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReposRepo {
		return vs[0].([]GetReposRepo)[vs[1].(int)]
	}).(GetReposRepoOutput)
}

type GetReposRepoDomainList struct {
	// Domain of internal endpoint, only in some regions.
	Internal string `pulumi:"internal"`
	// Domain of public endpoint.
	Public string `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc string `pulumi:"vpc"`
}

// GetReposRepoDomainListInput is an input type that accepts GetReposRepoDomainListArgs and GetReposRepoDomainListOutput values.
// You can construct a concrete instance of `GetReposRepoDomainListInput` via:
//
//          GetReposRepoDomainListArgs{...}
type GetReposRepoDomainListInput interface {
	pulumi.Input

	ToGetReposRepoDomainListOutput() GetReposRepoDomainListOutput
	ToGetReposRepoDomainListOutputWithContext(context.Context) GetReposRepoDomainListOutput
}

type GetReposRepoDomainListArgs struct {
	// Domain of internal endpoint, only in some regions.
	Internal pulumi.StringInput `pulumi:"internal"`
	// Domain of public endpoint.
	Public pulumi.StringInput `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetReposRepoDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoDomainList)(nil)).Elem()
}

func (i GetReposRepoDomainListArgs) ToGetReposRepoDomainListOutput() GetReposRepoDomainListOutput {
	return i.ToGetReposRepoDomainListOutputWithContext(context.Background())
}

func (i GetReposRepoDomainListArgs) ToGetReposRepoDomainListOutputWithContext(ctx context.Context) GetReposRepoDomainListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoDomainListOutput)
}

type GetReposRepoDomainListOutput struct{ *pulumi.OutputState }

func (GetReposRepoDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoDomainList)(nil)).Elem()
}

func (o GetReposRepoDomainListOutput) ToGetReposRepoDomainListOutput() GetReposRepoDomainListOutput {
	return o
}

func (o GetReposRepoDomainListOutput) ToGetReposRepoDomainListOutputWithContext(ctx context.Context) GetReposRepoDomainListOutput {
	return o
}

// Domain of internal endpoint, only in some regions.
func (o GetReposRepoDomainListOutput) Internal() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoDomainList) string { return v.Internal }).(pulumi.StringOutput)
}

// Domain of public endpoint.
func (o GetReposRepoDomainListOutput) Public() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoDomainList) string { return v.Public }).(pulumi.StringOutput)
}

// Domain of vpc endpoint.
func (o GetReposRepoDomainListOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoDomainList) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetReposRepoTag struct {
	// Digest of this image.
	Digest string `pulumi:"digest"`
	// Create time of this image, unix time in nanoseconds.
	ImageCreate int `pulumi:"imageCreate"`
	// Id of this image.
	ImageId string `pulumi:"imageId"`
	// Status of this image, in bytes.
	ImageSize int `pulumi:"imageSize"`
	// Last update time of this image, unix time in nanoseconds.
	ImageUpdate int `pulumi:"imageUpdate"`
	// Status of this image.
	Status string `pulumi:"status"`
	// Tag of this image.
	Tag string `pulumi:"tag"`
}

// GetReposRepoTagInput is an input type that accepts GetReposRepoTagArgs and GetReposRepoTagOutput values.
// You can construct a concrete instance of `GetReposRepoTagInput` via:
//
//          GetReposRepoTagArgs{...}
type GetReposRepoTagInput interface {
	pulumi.Input

	ToGetReposRepoTagOutput() GetReposRepoTagOutput
	ToGetReposRepoTagOutputWithContext(context.Context) GetReposRepoTagOutput
}

type GetReposRepoTagArgs struct {
	// Digest of this image.
	Digest pulumi.StringInput `pulumi:"digest"`
	// Create time of this image, unix time in nanoseconds.
	ImageCreate pulumi.IntInput `pulumi:"imageCreate"`
	// Id of this image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Status of this image, in bytes.
	ImageSize pulumi.IntInput `pulumi:"imageSize"`
	// Last update time of this image, unix time in nanoseconds.
	ImageUpdate pulumi.IntInput `pulumi:"imageUpdate"`
	// Status of this image.
	Status pulumi.StringInput `pulumi:"status"`
	// Tag of this image.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetReposRepoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoTag)(nil)).Elem()
}

func (i GetReposRepoTagArgs) ToGetReposRepoTagOutput() GetReposRepoTagOutput {
	return i.ToGetReposRepoTagOutputWithContext(context.Background())
}

func (i GetReposRepoTagArgs) ToGetReposRepoTagOutputWithContext(ctx context.Context) GetReposRepoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoTagOutput)
}

// GetReposRepoTagArrayInput is an input type that accepts GetReposRepoTagArray and GetReposRepoTagArrayOutput values.
// You can construct a concrete instance of `GetReposRepoTagArrayInput` via:
//
//          GetReposRepoTagArray{ GetReposRepoTagArgs{...} }
type GetReposRepoTagArrayInput interface {
	pulumi.Input

	ToGetReposRepoTagArrayOutput() GetReposRepoTagArrayOutput
	ToGetReposRepoTagArrayOutputWithContext(context.Context) GetReposRepoTagArrayOutput
}

type GetReposRepoTagArray []GetReposRepoTagInput

func (GetReposRepoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepoTag)(nil)).Elem()
}

func (i GetReposRepoTagArray) ToGetReposRepoTagArrayOutput() GetReposRepoTagArrayOutput {
	return i.ToGetReposRepoTagArrayOutputWithContext(context.Background())
}

func (i GetReposRepoTagArray) ToGetReposRepoTagArrayOutputWithContext(ctx context.Context) GetReposRepoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoTagArrayOutput)
}

type GetReposRepoTagOutput struct{ *pulumi.OutputState }

func (GetReposRepoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoTag)(nil)).Elem()
}

func (o GetReposRepoTagOutput) ToGetReposRepoTagOutput() GetReposRepoTagOutput {
	return o
}

func (o GetReposRepoTagOutput) ToGetReposRepoTagOutputWithContext(ctx context.Context) GetReposRepoTagOutput {
	return o
}

// Digest of this image.
func (o GetReposRepoTagOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.Digest }).(pulumi.StringOutput)
}

// Create time of this image, unix time in nanoseconds.
func (o GetReposRepoTagOutput) ImageCreate() pulumi.IntOutput {
	return o.ApplyT(func(v GetReposRepoTag) int { return v.ImageCreate }).(pulumi.IntOutput)
}

// Id of this image.
func (o GetReposRepoTagOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.ImageId }).(pulumi.StringOutput)
}

// Status of this image, in bytes.
func (o GetReposRepoTagOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetReposRepoTag) int { return v.ImageSize }).(pulumi.IntOutput)
}

// Last update time of this image, unix time in nanoseconds.
func (o GetReposRepoTagOutput) ImageUpdate() pulumi.IntOutput {
	return o.ApplyT(func(v GetReposRepoTag) int { return v.ImageUpdate }).(pulumi.IntOutput)
}

// Status of this image.
func (o GetReposRepoTagOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.Status }).(pulumi.StringOutput)
}

// Tag of this image.
func (o GetReposRepoTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.Tag }).(pulumi.StringOutput)
}

type GetReposRepoTagArrayOutput struct{ *pulumi.OutputState }

func (GetReposRepoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepoTag)(nil)).Elem()
}

func (o GetReposRepoTagArrayOutput) ToGetReposRepoTagArrayOutput() GetReposRepoTagArrayOutput {
	return o
}

func (o GetReposRepoTagArrayOutput) ToGetReposRepoTagArrayOutputWithContext(ctx context.Context) GetReposRepoTagArrayOutput {
	return o
}

func (o GetReposRepoTagArrayOutput) Index(i pulumi.IntInput) GetReposRepoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReposRepoTag {
		return vs[0].([]GetReposRepoTag)[vs[1].(int)]
	}).(GetReposRepoTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RepoDomainListInput)(nil)).Elem(), RepoDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoDomainListPtrInput)(nil)).Elem(), RepoDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartNamespacesNamespaceInput)(nil)).Elem(), GetChartNamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartNamespacesNamespaceArrayInput)(nil)).Elem(), GetChartNamespacesNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartRepositoriesRepositoryInput)(nil)).Elem(), GetChartRepositoriesRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartRepositoriesRepositoryArrayInput)(nil)).Elem(), GetChartRepositoriesRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointAclPoliciesPolicyInput)(nil)).Elem(), GetEndpointAclPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointAclPoliciesPolicyArrayInput)(nil)).Elem(), GetEndpointAclPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceInput)(nil)).Elem(), GetNamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceArrayInput)(nil)).Elem(), GetNamespacesNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoInput)(nil)).Elem(), GetReposRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoArrayInput)(nil)).Elem(), GetReposRepoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoDomainListInput)(nil)).Elem(), GetReposRepoDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoTagInput)(nil)).Elem(), GetReposRepoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoTagArrayInput)(nil)).Elem(), GetReposRepoTagArray{})
	pulumi.RegisterOutputType(RepoDomainListOutput{})
	pulumi.RegisterOutputType(RepoDomainListPtrOutput{})
	pulumi.RegisterOutputType(GetChartNamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(GetChartNamespacesNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetChartRepositoriesRepositoryOutput{})
	pulumi.RegisterOutputType(GetChartRepositoriesRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointAclPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetEndpointAclPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetReposRepoOutput{})
	pulumi.RegisterOutputType(GetReposRepoArrayOutput{})
	pulumi.RegisterOutputType(GetReposRepoDomainListOutput{})
	pulumi.RegisterOutputType(GetReposRepoTagOutput{})
	pulumi.RegisterOutputType(GetReposRepoTagArrayOutput{})
}
