// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ChainChainConfig struct {
	// Each node in the delivery chain. See `nodes` below.
	//
	// > **NOTE:** The `from` and `to` fields are all fixed, and their structure and the value of `nodeName` are fixed. You can refer to the template given in the example for configuration.
	Nodes []ChainChainConfigNode `pulumi:"nodes"`
	// Execution sequence relationship between delivery chain nodes. See `routers` below.
	Routers []ChainChainConfigRouter `pulumi:"routers"`
}

// ChainChainConfigInput is an input type that accepts ChainChainConfigArgs and ChainChainConfigOutput values.
// You can construct a concrete instance of `ChainChainConfigInput` via:
//
//	ChainChainConfigArgs{...}
type ChainChainConfigInput interface {
	pulumi.Input

	ToChainChainConfigOutput() ChainChainConfigOutput
	ToChainChainConfigOutputWithContext(context.Context) ChainChainConfigOutput
}

type ChainChainConfigArgs struct {
	// Each node in the delivery chain. See `nodes` below.
	//
	// > **NOTE:** The `from` and `to` fields are all fixed, and their structure and the value of `nodeName` are fixed. You can refer to the template given in the example for configuration.
	Nodes ChainChainConfigNodeArrayInput `pulumi:"nodes"`
	// Execution sequence relationship between delivery chain nodes. See `routers` below.
	Routers ChainChainConfigRouterArrayInput `pulumi:"routers"`
}

func (ChainChainConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfig)(nil)).Elem()
}

func (i ChainChainConfigArgs) ToChainChainConfigOutput() ChainChainConfigOutput {
	return i.ToChainChainConfigOutputWithContext(context.Background())
}

func (i ChainChainConfigArgs) ToChainChainConfigOutputWithContext(ctx context.Context) ChainChainConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigOutput)
}

// ChainChainConfigArrayInput is an input type that accepts ChainChainConfigArray and ChainChainConfigArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigArrayInput` via:
//
//	ChainChainConfigArray{ ChainChainConfigArgs{...} }
type ChainChainConfigArrayInput interface {
	pulumi.Input

	ToChainChainConfigArrayOutput() ChainChainConfigArrayOutput
	ToChainChainConfigArrayOutputWithContext(context.Context) ChainChainConfigArrayOutput
}

type ChainChainConfigArray []ChainChainConfigInput

func (ChainChainConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfig)(nil)).Elem()
}

func (i ChainChainConfigArray) ToChainChainConfigArrayOutput() ChainChainConfigArrayOutput {
	return i.ToChainChainConfigArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigArray) ToChainChainConfigArrayOutputWithContext(ctx context.Context) ChainChainConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigArrayOutput)
}

type ChainChainConfigOutput struct{ *pulumi.OutputState }

func (ChainChainConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfig)(nil)).Elem()
}

func (o ChainChainConfigOutput) ToChainChainConfigOutput() ChainChainConfigOutput {
	return o
}

func (o ChainChainConfigOutput) ToChainChainConfigOutputWithContext(ctx context.Context) ChainChainConfigOutput {
	return o
}

// Each node in the delivery chain. See `nodes` below.
//
// > **NOTE:** The `from` and `to` fields are all fixed, and their structure and the value of `nodeName` are fixed. You can refer to the template given in the example for configuration.
func (o ChainChainConfigOutput) Nodes() ChainChainConfigNodeArrayOutput {
	return o.ApplyT(func(v ChainChainConfig) []ChainChainConfigNode { return v.Nodes }).(ChainChainConfigNodeArrayOutput)
}

// Execution sequence relationship between delivery chain nodes. See `routers` below.
func (o ChainChainConfigOutput) Routers() ChainChainConfigRouterArrayOutput {
	return o.ApplyT(func(v ChainChainConfig) []ChainChainConfigRouter { return v.Routers }).(ChainChainConfigRouterArrayOutput)
}

type ChainChainConfigArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfig)(nil)).Elem()
}

func (o ChainChainConfigArrayOutput) ToChainChainConfigArrayOutput() ChainChainConfigArrayOutput {
	return o
}

func (o ChainChainConfigArrayOutput) ToChainChainConfigArrayOutputWithContext(ctx context.Context) ChainChainConfigArrayOutput {
	return o
}

func (o ChainChainConfigArrayOutput) Index(i pulumi.IntInput) ChainChainConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfig {
		return vs[0].([]ChainChainConfig)[vs[1].(int)]
	}).(ChainChainConfigOutput)
}

type ChainChainConfigNode struct {
	// Whether to enable the delivery chain node. Valid values: `true`, `false`.
	Enable *bool `pulumi:"enable"`
	// The configuration of delivery chain node. See `nodeConfig` below.
	NodeConfigs []ChainChainConfigNodeNodeConfig `pulumi:"nodeConfigs"`
	// The name of delivery chain node.
	NodeName *string `pulumi:"nodeName"`
}

// ChainChainConfigNodeInput is an input type that accepts ChainChainConfigNodeArgs and ChainChainConfigNodeOutput values.
// You can construct a concrete instance of `ChainChainConfigNodeInput` via:
//
//	ChainChainConfigNodeArgs{...}
type ChainChainConfigNodeInput interface {
	pulumi.Input

	ToChainChainConfigNodeOutput() ChainChainConfigNodeOutput
	ToChainChainConfigNodeOutputWithContext(context.Context) ChainChainConfigNodeOutput
}

type ChainChainConfigNodeArgs struct {
	// Whether to enable the delivery chain node. Valid values: `true`, `false`.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The configuration of delivery chain node. See `nodeConfig` below.
	NodeConfigs ChainChainConfigNodeNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// The name of delivery chain node.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ChainChainConfigNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigNode)(nil)).Elem()
}

func (i ChainChainConfigNodeArgs) ToChainChainConfigNodeOutput() ChainChainConfigNodeOutput {
	return i.ToChainChainConfigNodeOutputWithContext(context.Background())
}

func (i ChainChainConfigNodeArgs) ToChainChainConfigNodeOutputWithContext(ctx context.Context) ChainChainConfigNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigNodeOutput)
}

// ChainChainConfigNodeArrayInput is an input type that accepts ChainChainConfigNodeArray and ChainChainConfigNodeArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigNodeArrayInput` via:
//
//	ChainChainConfigNodeArray{ ChainChainConfigNodeArgs{...} }
type ChainChainConfigNodeArrayInput interface {
	pulumi.Input

	ToChainChainConfigNodeArrayOutput() ChainChainConfigNodeArrayOutput
	ToChainChainConfigNodeArrayOutputWithContext(context.Context) ChainChainConfigNodeArrayOutput
}

type ChainChainConfigNodeArray []ChainChainConfigNodeInput

func (ChainChainConfigNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigNode)(nil)).Elem()
}

func (i ChainChainConfigNodeArray) ToChainChainConfigNodeArrayOutput() ChainChainConfigNodeArrayOutput {
	return i.ToChainChainConfigNodeArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigNodeArray) ToChainChainConfigNodeArrayOutputWithContext(ctx context.Context) ChainChainConfigNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigNodeArrayOutput)
}

type ChainChainConfigNodeOutput struct{ *pulumi.OutputState }

func (ChainChainConfigNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigNode)(nil)).Elem()
}

func (o ChainChainConfigNodeOutput) ToChainChainConfigNodeOutput() ChainChainConfigNodeOutput {
	return o
}

func (o ChainChainConfigNodeOutput) ToChainChainConfigNodeOutputWithContext(ctx context.Context) ChainChainConfigNodeOutput {
	return o
}

// Whether to enable the delivery chain node. Valid values: `true`, `false`.
func (o ChainChainConfigNodeOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChainChainConfigNode) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The configuration of delivery chain node. See `nodeConfig` below.
func (o ChainChainConfigNodeOutput) NodeConfigs() ChainChainConfigNodeNodeConfigArrayOutput {
	return o.ApplyT(func(v ChainChainConfigNode) []ChainChainConfigNodeNodeConfig { return v.NodeConfigs }).(ChainChainConfigNodeNodeConfigArrayOutput)
}

// The name of delivery chain node.
func (o ChainChainConfigNodeOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigNode) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ChainChainConfigNodeArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigNode)(nil)).Elem()
}

func (o ChainChainConfigNodeArrayOutput) ToChainChainConfigNodeArrayOutput() ChainChainConfigNodeArrayOutput {
	return o
}

func (o ChainChainConfigNodeArrayOutput) ToChainChainConfigNodeArrayOutputWithContext(ctx context.Context) ChainChainConfigNodeArrayOutput {
	return o
}

func (o ChainChainConfigNodeArrayOutput) Index(i pulumi.IntInput) ChainChainConfigNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfigNode {
		return vs[0].([]ChainChainConfigNode)[vs[1].(int)]
	}).(ChainChainConfigNodeOutput)
}

type ChainChainConfigNodeNodeConfig struct {
	// Blocking rules for scanning nodes in delivery chain nodes. See `denyPolicy` below. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
	DenyPolicies []ChainChainConfigNodeNodeConfigDenyPolicy `pulumi:"denyPolicies"`
}

// ChainChainConfigNodeNodeConfigInput is an input type that accepts ChainChainConfigNodeNodeConfigArgs and ChainChainConfigNodeNodeConfigOutput values.
// You can construct a concrete instance of `ChainChainConfigNodeNodeConfigInput` via:
//
//	ChainChainConfigNodeNodeConfigArgs{...}
type ChainChainConfigNodeNodeConfigInput interface {
	pulumi.Input

	ToChainChainConfigNodeNodeConfigOutput() ChainChainConfigNodeNodeConfigOutput
	ToChainChainConfigNodeNodeConfigOutputWithContext(context.Context) ChainChainConfigNodeNodeConfigOutput
}

type ChainChainConfigNodeNodeConfigArgs struct {
	// Blocking rules for scanning nodes in delivery chain nodes. See `denyPolicy` below. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
	DenyPolicies ChainChainConfigNodeNodeConfigDenyPolicyArrayInput `pulumi:"denyPolicies"`
}

func (ChainChainConfigNodeNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (i ChainChainConfigNodeNodeConfigArgs) ToChainChainConfigNodeNodeConfigOutput() ChainChainConfigNodeNodeConfigOutput {
	return i.ToChainChainConfigNodeNodeConfigOutputWithContext(context.Background())
}

func (i ChainChainConfigNodeNodeConfigArgs) ToChainChainConfigNodeNodeConfigOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigNodeNodeConfigOutput)
}

// ChainChainConfigNodeNodeConfigArrayInput is an input type that accepts ChainChainConfigNodeNodeConfigArray and ChainChainConfigNodeNodeConfigArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigNodeNodeConfigArrayInput` via:
//
//	ChainChainConfigNodeNodeConfigArray{ ChainChainConfigNodeNodeConfigArgs{...} }
type ChainChainConfigNodeNodeConfigArrayInput interface {
	pulumi.Input

	ToChainChainConfigNodeNodeConfigArrayOutput() ChainChainConfigNodeNodeConfigArrayOutput
	ToChainChainConfigNodeNodeConfigArrayOutputWithContext(context.Context) ChainChainConfigNodeNodeConfigArrayOutput
}

type ChainChainConfigNodeNodeConfigArray []ChainChainConfigNodeNodeConfigInput

func (ChainChainConfigNodeNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (i ChainChainConfigNodeNodeConfigArray) ToChainChainConfigNodeNodeConfigArrayOutput() ChainChainConfigNodeNodeConfigArrayOutput {
	return i.ToChainChainConfigNodeNodeConfigArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigNodeNodeConfigArray) ToChainChainConfigNodeNodeConfigArrayOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigNodeNodeConfigArrayOutput)
}

type ChainChainConfigNodeNodeConfigOutput struct{ *pulumi.OutputState }

func (ChainChainConfigNodeNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (o ChainChainConfigNodeNodeConfigOutput) ToChainChainConfigNodeNodeConfigOutput() ChainChainConfigNodeNodeConfigOutput {
	return o
}

func (o ChainChainConfigNodeNodeConfigOutput) ToChainChainConfigNodeNodeConfigOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigOutput {
	return o
}

// Blocking rules for scanning nodes in delivery chain nodes. See `denyPolicy` below. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
func (o ChainChainConfigNodeNodeConfigOutput) DenyPolicies() ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return o.ApplyT(func(v ChainChainConfigNodeNodeConfig) []ChainChainConfigNodeNodeConfigDenyPolicy {
		return v.DenyPolicies
	}).(ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput)
}

type ChainChainConfigNodeNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigNodeNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (o ChainChainConfigNodeNodeConfigArrayOutput) ToChainChainConfigNodeNodeConfigArrayOutput() ChainChainConfigNodeNodeConfigArrayOutput {
	return o
}

func (o ChainChainConfigNodeNodeConfigArrayOutput) ToChainChainConfigNodeNodeConfigArrayOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigArrayOutput {
	return o
}

func (o ChainChainConfigNodeNodeConfigArrayOutput) Index(i pulumi.IntInput) ChainChainConfigNodeNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfigNodeNodeConfig {
		return vs[0].([]ChainChainConfigNodeNodeConfig)[vs[1].(int)]
	}).(ChainChainConfigNodeNodeConfigOutput)
}

type ChainChainConfigNodeNodeConfigDenyPolicy struct {
	// The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
	Action *string `pulumi:"action"`
	// The count of scanning vulnerabilities that triggers blocking.
	IssueCount *string `pulumi:"issueCount"`
	// The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
	IssueLevel *string `pulumi:"issueLevel"`
	// The logic of trigger blocking. Valid values: `AND`, `OR`.
	Logic *string `pulumi:"logic"`
}

// ChainChainConfigNodeNodeConfigDenyPolicyInput is an input type that accepts ChainChainConfigNodeNodeConfigDenyPolicyArgs and ChainChainConfigNodeNodeConfigDenyPolicyOutput values.
// You can construct a concrete instance of `ChainChainConfigNodeNodeConfigDenyPolicyInput` via:
//
//	ChainChainConfigNodeNodeConfigDenyPolicyArgs{...}
type ChainChainConfigNodeNodeConfigDenyPolicyInput interface {
	pulumi.Input

	ToChainChainConfigNodeNodeConfigDenyPolicyOutput() ChainChainConfigNodeNodeConfigDenyPolicyOutput
	ToChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(context.Context) ChainChainConfigNodeNodeConfigDenyPolicyOutput
}

type ChainChainConfigNodeNodeConfigDenyPolicyArgs struct {
	// The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The count of scanning vulnerabilities that triggers blocking.
	IssueCount pulumi.StringPtrInput `pulumi:"issueCount"`
	// The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
	IssueLevel pulumi.StringPtrInput `pulumi:"issueLevel"`
	// The logic of trigger blocking. Valid values: `AND`, `OR`.
	Logic pulumi.StringPtrInput `pulumi:"logic"`
}

func (ChainChainConfigNodeNodeConfigDenyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (i ChainChainConfigNodeNodeConfigDenyPolicyArgs) ToChainChainConfigNodeNodeConfigDenyPolicyOutput() ChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return i.ToChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(context.Background())
}

func (i ChainChainConfigNodeNodeConfigDenyPolicyArgs) ToChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigNodeNodeConfigDenyPolicyOutput)
}

// ChainChainConfigNodeNodeConfigDenyPolicyArrayInput is an input type that accepts ChainChainConfigNodeNodeConfigDenyPolicyArray and ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigNodeNodeConfigDenyPolicyArrayInput` via:
//
//	ChainChainConfigNodeNodeConfigDenyPolicyArray{ ChainChainConfigNodeNodeConfigDenyPolicyArgs{...} }
type ChainChainConfigNodeNodeConfigDenyPolicyArrayInput interface {
	pulumi.Input

	ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutput() ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput
	ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(context.Context) ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput
}

type ChainChainConfigNodeNodeConfigDenyPolicyArray []ChainChainConfigNodeNodeConfigDenyPolicyInput

func (ChainChainConfigNodeNodeConfigDenyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (i ChainChainConfigNodeNodeConfigDenyPolicyArray) ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutput() ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return i.ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigNodeNodeConfigDenyPolicyArray) ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput)
}

type ChainChainConfigNodeNodeConfigDenyPolicyOutput struct{ *pulumi.OutputState }

func (ChainChainConfigNodeNodeConfigDenyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (o ChainChainConfigNodeNodeConfigDenyPolicyOutput) ToChainChainConfigNodeNodeConfigDenyPolicyOutput() ChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return o
}

func (o ChainChainConfigNodeNodeConfigDenyPolicyOutput) ToChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return o
}

// The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
func (o ChainChainConfigNodeNodeConfigDenyPolicyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigNodeNodeConfigDenyPolicy) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The count of scanning vulnerabilities that triggers blocking.
func (o ChainChainConfigNodeNodeConfigDenyPolicyOutput) IssueCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigNodeNodeConfigDenyPolicy) *string { return v.IssueCount }).(pulumi.StringPtrOutput)
}

// The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
func (o ChainChainConfigNodeNodeConfigDenyPolicyOutput) IssueLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigNodeNodeConfigDenyPolicy) *string { return v.IssueLevel }).(pulumi.StringPtrOutput)
}

// The logic of trigger blocking. Valid values: `AND`, `OR`.
func (o ChainChainConfigNodeNodeConfigDenyPolicyOutput) Logic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigNodeNodeConfigDenyPolicy) *string { return v.Logic }).(pulumi.StringPtrOutput)
}

type ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (o ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutput() ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return o
}

func (o ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) ToChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(ctx context.Context) ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return o
}

func (o ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) Index(i pulumi.IntInput) ChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfigNodeNodeConfigDenyPolicy {
		return vs[0].([]ChainChainConfigNodeNodeConfigDenyPolicy)[vs[1].(int)]
	}).(ChainChainConfigNodeNodeConfigDenyPolicyOutput)
}

type ChainChainConfigRouter struct {
	// Source node. See `from` below.
	Froms []ChainChainConfigRouterFrom `pulumi:"froms"`
	// Destination node. See `to` below.
	Tos []ChainChainConfigRouterTo `pulumi:"tos"`
}

// ChainChainConfigRouterInput is an input type that accepts ChainChainConfigRouterArgs and ChainChainConfigRouterOutput values.
// You can construct a concrete instance of `ChainChainConfigRouterInput` via:
//
//	ChainChainConfigRouterArgs{...}
type ChainChainConfigRouterInput interface {
	pulumi.Input

	ToChainChainConfigRouterOutput() ChainChainConfigRouterOutput
	ToChainChainConfigRouterOutputWithContext(context.Context) ChainChainConfigRouterOutput
}

type ChainChainConfigRouterArgs struct {
	// Source node. See `from` below.
	Froms ChainChainConfigRouterFromArrayInput `pulumi:"froms"`
	// Destination node. See `to` below.
	Tos ChainChainConfigRouterToArrayInput `pulumi:"tos"`
}

func (ChainChainConfigRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigRouter)(nil)).Elem()
}

func (i ChainChainConfigRouterArgs) ToChainChainConfigRouterOutput() ChainChainConfigRouterOutput {
	return i.ToChainChainConfigRouterOutputWithContext(context.Background())
}

func (i ChainChainConfigRouterArgs) ToChainChainConfigRouterOutputWithContext(ctx context.Context) ChainChainConfigRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigRouterOutput)
}

// ChainChainConfigRouterArrayInput is an input type that accepts ChainChainConfigRouterArray and ChainChainConfigRouterArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigRouterArrayInput` via:
//
//	ChainChainConfigRouterArray{ ChainChainConfigRouterArgs{...} }
type ChainChainConfigRouterArrayInput interface {
	pulumi.Input

	ToChainChainConfigRouterArrayOutput() ChainChainConfigRouterArrayOutput
	ToChainChainConfigRouterArrayOutputWithContext(context.Context) ChainChainConfigRouterArrayOutput
}

type ChainChainConfigRouterArray []ChainChainConfigRouterInput

func (ChainChainConfigRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigRouter)(nil)).Elem()
}

func (i ChainChainConfigRouterArray) ToChainChainConfigRouterArrayOutput() ChainChainConfigRouterArrayOutput {
	return i.ToChainChainConfigRouterArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigRouterArray) ToChainChainConfigRouterArrayOutputWithContext(ctx context.Context) ChainChainConfigRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigRouterArrayOutput)
}

type ChainChainConfigRouterOutput struct{ *pulumi.OutputState }

func (ChainChainConfigRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigRouter)(nil)).Elem()
}

func (o ChainChainConfigRouterOutput) ToChainChainConfigRouterOutput() ChainChainConfigRouterOutput {
	return o
}

func (o ChainChainConfigRouterOutput) ToChainChainConfigRouterOutputWithContext(ctx context.Context) ChainChainConfigRouterOutput {
	return o
}

// Source node. See `from` below.
func (o ChainChainConfigRouterOutput) Froms() ChainChainConfigRouterFromArrayOutput {
	return o.ApplyT(func(v ChainChainConfigRouter) []ChainChainConfigRouterFrom { return v.Froms }).(ChainChainConfigRouterFromArrayOutput)
}

// Destination node. See `to` below.
func (o ChainChainConfigRouterOutput) Tos() ChainChainConfigRouterToArrayOutput {
	return o.ApplyT(func(v ChainChainConfigRouter) []ChainChainConfigRouterTo { return v.Tos }).(ChainChainConfigRouterToArrayOutput)
}

type ChainChainConfigRouterArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigRouter)(nil)).Elem()
}

func (o ChainChainConfigRouterArrayOutput) ToChainChainConfigRouterArrayOutput() ChainChainConfigRouterArrayOutput {
	return o
}

func (o ChainChainConfigRouterArrayOutput) ToChainChainConfigRouterArrayOutputWithContext(ctx context.Context) ChainChainConfigRouterArrayOutput {
	return o
}

func (o ChainChainConfigRouterArrayOutput) Index(i pulumi.IntInput) ChainChainConfigRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfigRouter {
		return vs[0].([]ChainChainConfigRouter)[vs[1].(int)]
	}).(ChainChainConfigRouterOutput)
}

type ChainChainConfigRouterFrom struct {
	// The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
	NodeName *string `pulumi:"nodeName"`
}

// ChainChainConfigRouterFromInput is an input type that accepts ChainChainConfigRouterFromArgs and ChainChainConfigRouterFromOutput values.
// You can construct a concrete instance of `ChainChainConfigRouterFromInput` via:
//
//	ChainChainConfigRouterFromArgs{...}
type ChainChainConfigRouterFromInput interface {
	pulumi.Input

	ToChainChainConfigRouterFromOutput() ChainChainConfigRouterFromOutput
	ToChainChainConfigRouterFromOutputWithContext(context.Context) ChainChainConfigRouterFromOutput
}

type ChainChainConfigRouterFromArgs struct {
	// The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ChainChainConfigRouterFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigRouterFrom)(nil)).Elem()
}

func (i ChainChainConfigRouterFromArgs) ToChainChainConfigRouterFromOutput() ChainChainConfigRouterFromOutput {
	return i.ToChainChainConfigRouterFromOutputWithContext(context.Background())
}

func (i ChainChainConfigRouterFromArgs) ToChainChainConfigRouterFromOutputWithContext(ctx context.Context) ChainChainConfigRouterFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigRouterFromOutput)
}

// ChainChainConfigRouterFromArrayInput is an input type that accepts ChainChainConfigRouterFromArray and ChainChainConfigRouterFromArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigRouterFromArrayInput` via:
//
//	ChainChainConfigRouterFromArray{ ChainChainConfigRouterFromArgs{...} }
type ChainChainConfigRouterFromArrayInput interface {
	pulumi.Input

	ToChainChainConfigRouterFromArrayOutput() ChainChainConfigRouterFromArrayOutput
	ToChainChainConfigRouterFromArrayOutputWithContext(context.Context) ChainChainConfigRouterFromArrayOutput
}

type ChainChainConfigRouterFromArray []ChainChainConfigRouterFromInput

func (ChainChainConfigRouterFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigRouterFrom)(nil)).Elem()
}

func (i ChainChainConfigRouterFromArray) ToChainChainConfigRouterFromArrayOutput() ChainChainConfigRouterFromArrayOutput {
	return i.ToChainChainConfigRouterFromArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigRouterFromArray) ToChainChainConfigRouterFromArrayOutputWithContext(ctx context.Context) ChainChainConfigRouterFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigRouterFromArrayOutput)
}

type ChainChainConfigRouterFromOutput struct{ *pulumi.OutputState }

func (ChainChainConfigRouterFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigRouterFrom)(nil)).Elem()
}

func (o ChainChainConfigRouterFromOutput) ToChainChainConfigRouterFromOutput() ChainChainConfigRouterFromOutput {
	return o
}

func (o ChainChainConfigRouterFromOutput) ToChainChainConfigRouterFromOutputWithContext(ctx context.Context) ChainChainConfigRouterFromOutput {
	return o
}

// The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
func (o ChainChainConfigRouterFromOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigRouterFrom) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ChainChainConfigRouterFromArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigRouterFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigRouterFrom)(nil)).Elem()
}

func (o ChainChainConfigRouterFromArrayOutput) ToChainChainConfigRouterFromArrayOutput() ChainChainConfigRouterFromArrayOutput {
	return o
}

func (o ChainChainConfigRouterFromArrayOutput) ToChainChainConfigRouterFromArrayOutputWithContext(ctx context.Context) ChainChainConfigRouterFromArrayOutput {
	return o
}

func (o ChainChainConfigRouterFromArrayOutput) Index(i pulumi.IntInput) ChainChainConfigRouterFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfigRouterFrom {
		return vs[0].([]ChainChainConfigRouterFrom)[vs[1].(int)]
	}).(ChainChainConfigRouterFromOutput)
}

type ChainChainConfigRouterTo struct {
	// The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
	NodeName *string `pulumi:"nodeName"`
}

// ChainChainConfigRouterToInput is an input type that accepts ChainChainConfigRouterToArgs and ChainChainConfigRouterToOutput values.
// You can construct a concrete instance of `ChainChainConfigRouterToInput` via:
//
//	ChainChainConfigRouterToArgs{...}
type ChainChainConfigRouterToInput interface {
	pulumi.Input

	ToChainChainConfigRouterToOutput() ChainChainConfigRouterToOutput
	ToChainChainConfigRouterToOutputWithContext(context.Context) ChainChainConfigRouterToOutput
}

type ChainChainConfigRouterToArgs struct {
	// The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ChainChainConfigRouterToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigRouterTo)(nil)).Elem()
}

func (i ChainChainConfigRouterToArgs) ToChainChainConfigRouterToOutput() ChainChainConfigRouterToOutput {
	return i.ToChainChainConfigRouterToOutputWithContext(context.Background())
}

func (i ChainChainConfigRouterToArgs) ToChainChainConfigRouterToOutputWithContext(ctx context.Context) ChainChainConfigRouterToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigRouterToOutput)
}

// ChainChainConfigRouterToArrayInput is an input type that accepts ChainChainConfigRouterToArray and ChainChainConfigRouterToArrayOutput values.
// You can construct a concrete instance of `ChainChainConfigRouterToArrayInput` via:
//
//	ChainChainConfigRouterToArray{ ChainChainConfigRouterToArgs{...} }
type ChainChainConfigRouterToArrayInput interface {
	pulumi.Input

	ToChainChainConfigRouterToArrayOutput() ChainChainConfigRouterToArrayOutput
	ToChainChainConfigRouterToArrayOutputWithContext(context.Context) ChainChainConfigRouterToArrayOutput
}

type ChainChainConfigRouterToArray []ChainChainConfigRouterToInput

func (ChainChainConfigRouterToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigRouterTo)(nil)).Elem()
}

func (i ChainChainConfigRouterToArray) ToChainChainConfigRouterToArrayOutput() ChainChainConfigRouterToArrayOutput {
	return i.ToChainChainConfigRouterToArrayOutputWithContext(context.Background())
}

func (i ChainChainConfigRouterToArray) ToChainChainConfigRouterToArrayOutputWithContext(ctx context.Context) ChainChainConfigRouterToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainChainConfigRouterToArrayOutput)
}

type ChainChainConfigRouterToOutput struct{ *pulumi.OutputState }

func (ChainChainConfigRouterToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainChainConfigRouterTo)(nil)).Elem()
}

func (o ChainChainConfigRouterToOutput) ToChainChainConfigRouterToOutput() ChainChainConfigRouterToOutput {
	return o
}

func (o ChainChainConfigRouterToOutput) ToChainChainConfigRouterToOutputWithContext(ctx context.Context) ChainChainConfigRouterToOutput {
	return o
}

// The name of node. Valid values: `DOCKER_IMAGE_BUILD`, `DOCKER_IMAGE_PUSH`, `VULNERABILITY_SCANNING`, `ACTIVATE_REPLICATION`, `TRIGGER`, `SNAPSHOT`, `TRIGGER_SNAPSHOT`.
func (o ChainChainConfigRouterToOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainChainConfigRouterTo) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ChainChainConfigRouterToArrayOutput struct{ *pulumi.OutputState }

func (ChainChainConfigRouterToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChainChainConfigRouterTo)(nil)).Elem()
}

func (o ChainChainConfigRouterToArrayOutput) ToChainChainConfigRouterToArrayOutput() ChainChainConfigRouterToArrayOutput {
	return o
}

func (o ChainChainConfigRouterToArrayOutput) ToChainChainConfigRouterToArrayOutputWithContext(ctx context.Context) ChainChainConfigRouterToArrayOutput {
	return o
}

func (o ChainChainConfigRouterToArrayOutput) Index(i pulumi.IntInput) ChainChainConfigRouterToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChainChainConfigRouterTo {
		return vs[0].([]ChainChainConfigRouterTo)[vs[1].(int)]
	}).(ChainChainConfigRouterToOutput)
}

type RepoDomainList struct {
	// Domain of internal endpoint, only in some regions.
	Internal *string `pulumi:"internal"`
	// Domain of public endpoint.
	Public *string `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc *string `pulumi:"vpc"`
}

// RepoDomainListInput is an input type that accepts RepoDomainListArgs and RepoDomainListOutput values.
// You can construct a concrete instance of `RepoDomainListInput` via:
//
//	RepoDomainListArgs{...}
type RepoDomainListInput interface {
	pulumi.Input

	ToRepoDomainListOutput() RepoDomainListOutput
	ToRepoDomainListOutputWithContext(context.Context) RepoDomainListOutput
}

type RepoDomainListArgs struct {
	// Domain of internal endpoint, only in some regions.
	Internal pulumi.StringPtrInput `pulumi:"internal"`
	// Domain of public endpoint.
	Public pulumi.StringPtrInput `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (RepoDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoDomainList)(nil)).Elem()
}

func (i RepoDomainListArgs) ToRepoDomainListOutput() RepoDomainListOutput {
	return i.ToRepoDomainListOutputWithContext(context.Background())
}

func (i RepoDomainListArgs) ToRepoDomainListOutputWithContext(ctx context.Context) RepoDomainListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoDomainListOutput)
}

func (i RepoDomainListArgs) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return i.ToRepoDomainListPtrOutputWithContext(context.Background())
}

func (i RepoDomainListArgs) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoDomainListOutput).ToRepoDomainListPtrOutputWithContext(ctx)
}

// RepoDomainListPtrInput is an input type that accepts RepoDomainListArgs, RepoDomainListPtr and RepoDomainListPtrOutput values.
// You can construct a concrete instance of `RepoDomainListPtrInput` via:
//
//	        RepoDomainListArgs{...}
//
//	or:
//
//	        nil
type RepoDomainListPtrInput interface {
	pulumi.Input

	ToRepoDomainListPtrOutput() RepoDomainListPtrOutput
	ToRepoDomainListPtrOutputWithContext(context.Context) RepoDomainListPtrOutput
}

type repoDomainListPtrType RepoDomainListArgs

func RepoDomainListPtr(v *RepoDomainListArgs) RepoDomainListPtrInput {
	return (*repoDomainListPtrType)(v)
}

func (*repoDomainListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoDomainList)(nil)).Elem()
}

func (i *repoDomainListPtrType) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return i.ToRepoDomainListPtrOutputWithContext(context.Background())
}

func (i *repoDomainListPtrType) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoDomainListPtrOutput)
}

type RepoDomainListOutput struct{ *pulumi.OutputState }

func (RepoDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoDomainList)(nil)).Elem()
}

func (o RepoDomainListOutput) ToRepoDomainListOutput() RepoDomainListOutput {
	return o
}

func (o RepoDomainListOutput) ToRepoDomainListOutputWithContext(ctx context.Context) RepoDomainListOutput {
	return o
}

func (o RepoDomainListOutput) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return o.ToRepoDomainListPtrOutputWithContext(context.Background())
}

func (o RepoDomainListOutput) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepoDomainList) *RepoDomainList {
		return &v
	}).(RepoDomainListPtrOutput)
}

// Domain of internal endpoint, only in some regions.
func (o RepoDomainListOutput) Internal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoDomainList) *string { return v.Internal }).(pulumi.StringPtrOutput)
}

// Domain of public endpoint.
func (o RepoDomainListOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoDomainList) *string { return v.Public }).(pulumi.StringPtrOutput)
}

// Domain of vpc endpoint.
func (o RepoDomainListOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoDomainList) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type RepoDomainListPtrOutput struct{ *pulumi.OutputState }

func (RepoDomainListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepoDomainList)(nil)).Elem()
}

func (o RepoDomainListPtrOutput) ToRepoDomainListPtrOutput() RepoDomainListPtrOutput {
	return o
}

func (o RepoDomainListPtrOutput) ToRepoDomainListPtrOutputWithContext(ctx context.Context) RepoDomainListPtrOutput {
	return o
}

func (o RepoDomainListPtrOutput) Elem() RepoDomainListOutput {
	return o.ApplyT(func(v *RepoDomainList) RepoDomainList {
		if v != nil {
			return *v
		}
		var ret RepoDomainList
		return ret
	}).(RepoDomainListOutput)
}

// Domain of internal endpoint, only in some regions.
func (o RepoDomainListPtrOutput) Internal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoDomainList) *string {
		if v == nil {
			return nil
		}
		return v.Internal
	}).(pulumi.StringPtrOutput)
}

// Domain of public endpoint.
func (o RepoDomainListPtrOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoDomainList) *string {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.StringPtrOutput)
}

// Domain of vpc endpoint.
func (o RepoDomainListPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepoDomainList) *string {
		if v == nil {
			return nil
		}
		return v.Vpc
	}).(pulumi.StringPtrOutput)
}

type GetChainsChain struct {
	// The configuration of delivery chain.
	ChainConfigs []GetChainsChainChainConfig `pulumi:"chainConfigs"`
	// The ID of delivery chain.
	ChainId string `pulumi:"chainId"`
	// The name of delivery chain.
	ChainName string `pulumi:"chainName"`
	// The creation time of delivery chain.
	CreateTime string `pulumi:"createTime"`
	// The description of delivery chain.
	Description string `pulumi:"description"`
	// The resource ID of the delivery chain. The value formats as `<instance_id>:<chain_id>`.
	Id string `pulumi:"id"`
	// The ID of CR Enterprise Edition instance.
	InstanceId string `pulumi:"instanceId"`
	// The modification time of delivery chain description.
	ModifiedTime string `pulumi:"modifiedTime"`
	// Delivery chain scope ID.
	ScopeId string `pulumi:"scopeId"`
	// Delivery chain scope type.
	ScopeType string `pulumi:"scopeType"`
}

// GetChainsChainInput is an input type that accepts GetChainsChainArgs and GetChainsChainOutput values.
// You can construct a concrete instance of `GetChainsChainInput` via:
//
//	GetChainsChainArgs{...}
type GetChainsChainInput interface {
	pulumi.Input

	ToGetChainsChainOutput() GetChainsChainOutput
	ToGetChainsChainOutputWithContext(context.Context) GetChainsChainOutput
}

type GetChainsChainArgs struct {
	// The configuration of delivery chain.
	ChainConfigs GetChainsChainChainConfigArrayInput `pulumi:"chainConfigs"`
	// The ID of delivery chain.
	ChainId pulumi.StringInput `pulumi:"chainId"`
	// The name of delivery chain.
	ChainName pulumi.StringInput `pulumi:"chainName"`
	// The creation time of delivery chain.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of delivery chain.
	Description pulumi.StringInput `pulumi:"description"`
	// The resource ID of the delivery chain. The value formats as `<instance_id>:<chain_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of CR Enterprise Edition instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The modification time of delivery chain description.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// Delivery chain scope ID.
	ScopeId pulumi.StringInput `pulumi:"scopeId"`
	// Delivery chain scope type.
	ScopeType pulumi.StringInput `pulumi:"scopeType"`
}

func (GetChainsChainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChain)(nil)).Elem()
}

func (i GetChainsChainArgs) ToGetChainsChainOutput() GetChainsChainOutput {
	return i.ToGetChainsChainOutputWithContext(context.Background())
}

func (i GetChainsChainArgs) ToGetChainsChainOutputWithContext(ctx context.Context) GetChainsChainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainOutput)
}

// GetChainsChainArrayInput is an input type that accepts GetChainsChainArray and GetChainsChainArrayOutput values.
// You can construct a concrete instance of `GetChainsChainArrayInput` via:
//
//	GetChainsChainArray{ GetChainsChainArgs{...} }
type GetChainsChainArrayInput interface {
	pulumi.Input

	ToGetChainsChainArrayOutput() GetChainsChainArrayOutput
	ToGetChainsChainArrayOutputWithContext(context.Context) GetChainsChainArrayOutput
}

type GetChainsChainArray []GetChainsChainInput

func (GetChainsChainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChain)(nil)).Elem()
}

func (i GetChainsChainArray) ToGetChainsChainArrayOutput() GetChainsChainArrayOutput {
	return i.ToGetChainsChainArrayOutputWithContext(context.Background())
}

func (i GetChainsChainArray) ToGetChainsChainArrayOutputWithContext(ctx context.Context) GetChainsChainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainArrayOutput)
}

type GetChainsChainOutput struct{ *pulumi.OutputState }

func (GetChainsChainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChain)(nil)).Elem()
}

func (o GetChainsChainOutput) ToGetChainsChainOutput() GetChainsChainOutput {
	return o
}

func (o GetChainsChainOutput) ToGetChainsChainOutputWithContext(ctx context.Context) GetChainsChainOutput {
	return o
}

// The configuration of delivery chain.
func (o GetChainsChainOutput) ChainConfigs() GetChainsChainChainConfigArrayOutput {
	return o.ApplyT(func(v GetChainsChain) []GetChainsChainChainConfig { return v.ChainConfigs }).(GetChainsChainChainConfigArrayOutput)
}

// The ID of delivery chain.
func (o GetChainsChainOutput) ChainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.ChainId }).(pulumi.StringOutput)
}

// The name of delivery chain.
func (o GetChainsChainOutput) ChainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.ChainName }).(pulumi.StringOutput)
}

// The creation time of delivery chain.
func (o GetChainsChainOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of delivery chain.
func (o GetChainsChainOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.Description }).(pulumi.StringOutput)
}

// The resource ID of the delivery chain. The value formats as `<instance_id>:<chain_id>`.
func (o GetChainsChainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of CR Enterprise Edition instance.
func (o GetChainsChainOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The modification time of delivery chain description.
func (o GetChainsChainOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// Delivery chain scope ID.
func (o GetChainsChainOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.ScopeId }).(pulumi.StringOutput)
}

// Delivery chain scope type.
func (o GetChainsChainOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChain) string { return v.ScopeType }).(pulumi.StringOutput)
}

type GetChainsChainArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChain)(nil)).Elem()
}

func (o GetChainsChainArrayOutput) ToGetChainsChainArrayOutput() GetChainsChainArrayOutput {
	return o
}

func (o GetChainsChainArrayOutput) ToGetChainsChainArrayOutputWithContext(ctx context.Context) GetChainsChainArrayOutput {
	return o
}

func (o GetChainsChainArrayOutput) Index(i pulumi.IntInput) GetChainsChainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChain {
		return vs[0].([]GetChainsChain)[vs[1].(int)]
	}).(GetChainsChainOutput)
}

type GetChainsChainChainConfig struct {
	// Each node in the delivery chain.
	Nodes []GetChainsChainChainConfigNode `pulumi:"nodes"`
	// Execution sequence relationship between delivery chain nodes.
	Routers []GetChainsChainChainConfigRouter `pulumi:"routers"`
}

// GetChainsChainChainConfigInput is an input type that accepts GetChainsChainChainConfigArgs and GetChainsChainChainConfigOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigInput` via:
//
//	GetChainsChainChainConfigArgs{...}
type GetChainsChainChainConfigInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigOutput() GetChainsChainChainConfigOutput
	ToGetChainsChainChainConfigOutputWithContext(context.Context) GetChainsChainChainConfigOutput
}

type GetChainsChainChainConfigArgs struct {
	// Each node in the delivery chain.
	Nodes GetChainsChainChainConfigNodeArrayInput `pulumi:"nodes"`
	// Execution sequence relationship between delivery chain nodes.
	Routers GetChainsChainChainConfigRouterArrayInput `pulumi:"routers"`
}

func (GetChainsChainChainConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfig)(nil)).Elem()
}

func (i GetChainsChainChainConfigArgs) ToGetChainsChainChainConfigOutput() GetChainsChainChainConfigOutput {
	return i.ToGetChainsChainChainConfigOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigArgs) ToGetChainsChainChainConfigOutputWithContext(ctx context.Context) GetChainsChainChainConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigOutput)
}

// GetChainsChainChainConfigArrayInput is an input type that accepts GetChainsChainChainConfigArray and GetChainsChainChainConfigArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigArrayInput` via:
//
//	GetChainsChainChainConfigArray{ GetChainsChainChainConfigArgs{...} }
type GetChainsChainChainConfigArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigArrayOutput() GetChainsChainChainConfigArrayOutput
	ToGetChainsChainChainConfigArrayOutputWithContext(context.Context) GetChainsChainChainConfigArrayOutput
}

type GetChainsChainChainConfigArray []GetChainsChainChainConfigInput

func (GetChainsChainChainConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfig)(nil)).Elem()
}

func (i GetChainsChainChainConfigArray) ToGetChainsChainChainConfigArrayOutput() GetChainsChainChainConfigArrayOutput {
	return i.ToGetChainsChainChainConfigArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigArray) ToGetChainsChainChainConfigArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigArrayOutput)
}

type GetChainsChainChainConfigOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfig)(nil)).Elem()
}

func (o GetChainsChainChainConfigOutput) ToGetChainsChainChainConfigOutput() GetChainsChainChainConfigOutput {
	return o
}

func (o GetChainsChainChainConfigOutput) ToGetChainsChainChainConfigOutputWithContext(ctx context.Context) GetChainsChainChainConfigOutput {
	return o
}

// Each node in the delivery chain.
func (o GetChainsChainChainConfigOutput) Nodes() GetChainsChainChainConfigNodeArrayOutput {
	return o.ApplyT(func(v GetChainsChainChainConfig) []GetChainsChainChainConfigNode { return v.Nodes }).(GetChainsChainChainConfigNodeArrayOutput)
}

// Execution sequence relationship between delivery chain nodes.
func (o GetChainsChainChainConfigOutput) Routers() GetChainsChainChainConfigRouterArrayOutput {
	return o.ApplyT(func(v GetChainsChainChainConfig) []GetChainsChainChainConfigRouter { return v.Routers }).(GetChainsChainChainConfigRouterArrayOutput)
}

type GetChainsChainChainConfigArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfig)(nil)).Elem()
}

func (o GetChainsChainChainConfigArrayOutput) ToGetChainsChainChainConfigArrayOutput() GetChainsChainChainConfigArrayOutput {
	return o
}

func (o GetChainsChainChainConfigArrayOutput) ToGetChainsChainChainConfigArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigArrayOutput {
	return o
}

func (o GetChainsChainChainConfigArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfig {
		return vs[0].([]GetChainsChainChainConfig)[vs[1].(int)]
	}).(GetChainsChainChainConfigOutput)
}

type GetChainsChainChainConfigNode struct {
	// Whether to enable the delivery chain node. Valid values: `true`, `false`.
	Enable bool `pulumi:"enable"`
	// The configuration of delivery chain node.
	NodeConfigs []GetChainsChainChainConfigNodeNodeConfig `pulumi:"nodeConfigs"`
	// The name of delivery chain node.
	NodeName string `pulumi:"nodeName"`
}

// GetChainsChainChainConfigNodeInput is an input type that accepts GetChainsChainChainConfigNodeArgs and GetChainsChainChainConfigNodeOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigNodeInput` via:
//
//	GetChainsChainChainConfigNodeArgs{...}
type GetChainsChainChainConfigNodeInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigNodeOutput() GetChainsChainChainConfigNodeOutput
	ToGetChainsChainChainConfigNodeOutputWithContext(context.Context) GetChainsChainChainConfigNodeOutput
}

type GetChainsChainChainConfigNodeArgs struct {
	// Whether to enable the delivery chain node. Valid values: `true`, `false`.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The configuration of delivery chain node.
	NodeConfigs GetChainsChainChainConfigNodeNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// The name of delivery chain node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetChainsChainChainConfigNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigNode)(nil)).Elem()
}

func (i GetChainsChainChainConfigNodeArgs) ToGetChainsChainChainConfigNodeOutput() GetChainsChainChainConfigNodeOutput {
	return i.ToGetChainsChainChainConfigNodeOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigNodeArgs) ToGetChainsChainChainConfigNodeOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigNodeOutput)
}

// GetChainsChainChainConfigNodeArrayInput is an input type that accepts GetChainsChainChainConfigNodeArray and GetChainsChainChainConfigNodeArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigNodeArrayInput` via:
//
//	GetChainsChainChainConfigNodeArray{ GetChainsChainChainConfigNodeArgs{...} }
type GetChainsChainChainConfigNodeArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigNodeArrayOutput() GetChainsChainChainConfigNodeArrayOutput
	ToGetChainsChainChainConfigNodeArrayOutputWithContext(context.Context) GetChainsChainChainConfigNodeArrayOutput
}

type GetChainsChainChainConfigNodeArray []GetChainsChainChainConfigNodeInput

func (GetChainsChainChainConfigNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigNode)(nil)).Elem()
}

func (i GetChainsChainChainConfigNodeArray) ToGetChainsChainChainConfigNodeArrayOutput() GetChainsChainChainConfigNodeArrayOutput {
	return i.ToGetChainsChainChainConfigNodeArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigNodeArray) ToGetChainsChainChainConfigNodeArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigNodeArrayOutput)
}

type GetChainsChainChainConfigNodeOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigNode)(nil)).Elem()
}

func (o GetChainsChainChainConfigNodeOutput) ToGetChainsChainChainConfigNodeOutput() GetChainsChainChainConfigNodeOutput {
	return o
}

func (o GetChainsChainChainConfigNodeOutput) ToGetChainsChainChainConfigNodeOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeOutput {
	return o
}

// Whether to enable the delivery chain node. Valid values: `true`, `false`.
func (o GetChainsChainChainConfigNodeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNode) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The configuration of delivery chain node.
func (o GetChainsChainChainConfigNodeOutput) NodeConfigs() GetChainsChainChainConfigNodeNodeConfigArrayOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNode) []GetChainsChainChainConfigNodeNodeConfig { return v.NodeConfigs }).(GetChainsChainChainConfigNodeNodeConfigArrayOutput)
}

// The name of delivery chain node.
func (o GetChainsChainChainConfigNodeOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNode) string { return v.NodeName }).(pulumi.StringOutput)
}

type GetChainsChainChainConfigNodeArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigNode)(nil)).Elem()
}

func (o GetChainsChainChainConfigNodeArrayOutput) ToGetChainsChainChainConfigNodeArrayOutput() GetChainsChainChainConfigNodeArrayOutput {
	return o
}

func (o GetChainsChainChainConfigNodeArrayOutput) ToGetChainsChainChainConfigNodeArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeArrayOutput {
	return o
}

func (o GetChainsChainChainConfigNodeArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfigNode {
		return vs[0].([]GetChainsChainChainConfigNode)[vs[1].(int)]
	}).(GetChainsChainChainConfigNodeOutput)
}

type GetChainsChainChainConfigNodeNodeConfig struct {
	// Blocking rules for scanning nodes in delivery chain nodes. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
	DenyPolicies []GetChainsChainChainConfigNodeNodeConfigDenyPolicy `pulumi:"denyPolicies"`
}

// GetChainsChainChainConfigNodeNodeConfigInput is an input type that accepts GetChainsChainChainConfigNodeNodeConfigArgs and GetChainsChainChainConfigNodeNodeConfigOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigNodeNodeConfigInput` via:
//
//	GetChainsChainChainConfigNodeNodeConfigArgs{...}
type GetChainsChainChainConfigNodeNodeConfigInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigNodeNodeConfigOutput() GetChainsChainChainConfigNodeNodeConfigOutput
	ToGetChainsChainChainConfigNodeNodeConfigOutputWithContext(context.Context) GetChainsChainChainConfigNodeNodeConfigOutput
}

type GetChainsChainChainConfigNodeNodeConfigArgs struct {
	// Blocking rules for scanning nodes in delivery chain nodes. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
	DenyPolicies GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayInput `pulumi:"denyPolicies"`
}

func (GetChainsChainChainConfigNodeNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (i GetChainsChainChainConfigNodeNodeConfigArgs) ToGetChainsChainChainConfigNodeNodeConfigOutput() GetChainsChainChainConfigNodeNodeConfigOutput {
	return i.ToGetChainsChainChainConfigNodeNodeConfigOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigNodeNodeConfigArgs) ToGetChainsChainChainConfigNodeNodeConfigOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigNodeNodeConfigOutput)
}

// GetChainsChainChainConfigNodeNodeConfigArrayInput is an input type that accepts GetChainsChainChainConfigNodeNodeConfigArray and GetChainsChainChainConfigNodeNodeConfigArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigNodeNodeConfigArrayInput` via:
//
//	GetChainsChainChainConfigNodeNodeConfigArray{ GetChainsChainChainConfigNodeNodeConfigArgs{...} }
type GetChainsChainChainConfigNodeNodeConfigArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigNodeNodeConfigArrayOutput() GetChainsChainChainConfigNodeNodeConfigArrayOutput
	ToGetChainsChainChainConfigNodeNodeConfigArrayOutputWithContext(context.Context) GetChainsChainChainConfigNodeNodeConfigArrayOutput
}

type GetChainsChainChainConfigNodeNodeConfigArray []GetChainsChainChainConfigNodeNodeConfigInput

func (GetChainsChainChainConfigNodeNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (i GetChainsChainChainConfigNodeNodeConfigArray) ToGetChainsChainChainConfigNodeNodeConfigArrayOutput() GetChainsChainChainConfigNodeNodeConfigArrayOutput {
	return i.ToGetChainsChainChainConfigNodeNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigNodeNodeConfigArray) ToGetChainsChainChainConfigNodeNodeConfigArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigNodeNodeConfigArrayOutput)
}

type GetChainsChainChainConfigNodeNodeConfigOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigNodeNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (o GetChainsChainChainConfigNodeNodeConfigOutput) ToGetChainsChainChainConfigNodeNodeConfigOutput() GetChainsChainChainConfigNodeNodeConfigOutput {
	return o
}

func (o GetChainsChainChainConfigNodeNodeConfigOutput) ToGetChainsChainChainConfigNodeNodeConfigOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigOutput {
	return o
}

// Blocking rules for scanning nodes in delivery chain nodes. **Note:** When `nodeName` is `VULNERABILITY_SCANNING`, the parameters in `denyPolicy` need to be filled in.
func (o GetChainsChainChainConfigNodeNodeConfigOutput) DenyPolicies() GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNodeNodeConfig) []GetChainsChainChainConfigNodeNodeConfigDenyPolicy {
		return v.DenyPolicies
	}).(GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput)
}

type GetChainsChainChainConfigNodeNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigNodeNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigNodeNodeConfig)(nil)).Elem()
}

func (o GetChainsChainChainConfigNodeNodeConfigArrayOutput) ToGetChainsChainChainConfigNodeNodeConfigArrayOutput() GetChainsChainChainConfigNodeNodeConfigArrayOutput {
	return o
}

func (o GetChainsChainChainConfigNodeNodeConfigArrayOutput) ToGetChainsChainChainConfigNodeNodeConfigArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigArrayOutput {
	return o
}

func (o GetChainsChainChainConfigNodeNodeConfigArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigNodeNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfigNodeNodeConfig {
		return vs[0].([]GetChainsChainChainConfigNodeNodeConfig)[vs[1].(int)]
	}).(GetChainsChainChainConfigNodeNodeConfigOutput)
}

type GetChainsChainChainConfigNodeNodeConfigDenyPolicy struct {
	// The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
	Action *string `pulumi:"action"`
	// The count of scanning vulnerabilities that triggers blocking.
	IssueCount string `pulumi:"issueCount"`
	// The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
	IssueLevel string `pulumi:"issueLevel"`
	// The logic of trigger blocking. Valid values: `AND`, `OR`.
	Logic string `pulumi:"logic"`
}

// GetChainsChainChainConfigNodeNodeConfigDenyPolicyInput is an input type that accepts GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs and GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigNodeNodeConfigDenyPolicyInput` via:
//
//	GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs{...}
type GetChainsChainChainConfigNodeNodeConfigDenyPolicyInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput() GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput
	ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(context.Context) GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput
}

type GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs struct {
	// The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The count of scanning vulnerabilities that triggers blocking.
	IssueCount pulumi.StringInput `pulumi:"issueCount"`
	// The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
	IssueLevel pulumi.StringInput `pulumi:"issueLevel"`
	// The logic of trigger blocking. Valid values: `AND`, `OR`.
	Logic pulumi.StringInput `pulumi:"logic"`
}

func (GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (i GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput() GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return i.ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput)
}

// GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayInput is an input type that accepts GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray and GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayInput` via:
//
//	GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray{ GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs{...} }
type GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput() GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput
	ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(context.Context) GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput
}

type GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray []GetChainsChainChainConfigNodeNodeConfigDenyPolicyInput

func (GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (i GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput() GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return i.ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput)
}

type GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput() GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return o
}

func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return o
}

// The action of trigger blocking. Valid values: `BLOCK`, `BLOCK_RETAG`, `BLOCK_DELETE_TAG`. While `Block` means block the delivery chain from continuing to execute, `BLOCK_RETAG` means block overwriting push image tag, `BLOCK_DELETE_TAG` means block deletion of mirror tags.
func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNodeNodeConfigDenyPolicy) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The count of scanning vulnerabilities that triggers blocking.
func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) IssueCount() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNodeNodeConfigDenyPolicy) string { return v.IssueCount }).(pulumi.StringOutput)
}

// The level of scanning vulnerability that triggers blocking. Valid values: `LOW`, `MEDIUM`, `HIGH`, `UNKNOWN`.
func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) IssueLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNodeNodeConfigDenyPolicy) string { return v.IssueLevel }).(pulumi.StringOutput)
}

// The logic of trigger blocking. Valid values: `AND`, `OR`.
func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput) Logic() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigNodeNodeConfigDenyPolicy) string { return v.Logic }).(pulumi.StringOutput)
}

type GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigNodeNodeConfigDenyPolicy)(nil)).Elem()
}

func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput() GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return o
}

func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) ToGetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput {
	return o
}

func (o GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfigNodeNodeConfigDenyPolicy {
		return vs[0].([]GetChainsChainChainConfigNodeNodeConfigDenyPolicy)[vs[1].(int)]
	}).(GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput)
}

type GetChainsChainChainConfigRouter struct {
	// Source node.
	Froms []GetChainsChainChainConfigRouterFrom `pulumi:"froms"`
	// Destination node.
	Tos []GetChainsChainChainConfigRouterTo `pulumi:"tos"`
}

// GetChainsChainChainConfigRouterInput is an input type that accepts GetChainsChainChainConfigRouterArgs and GetChainsChainChainConfigRouterOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigRouterInput` via:
//
//	GetChainsChainChainConfigRouterArgs{...}
type GetChainsChainChainConfigRouterInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigRouterOutput() GetChainsChainChainConfigRouterOutput
	ToGetChainsChainChainConfigRouterOutputWithContext(context.Context) GetChainsChainChainConfigRouterOutput
}

type GetChainsChainChainConfigRouterArgs struct {
	// Source node.
	Froms GetChainsChainChainConfigRouterFromArrayInput `pulumi:"froms"`
	// Destination node.
	Tos GetChainsChainChainConfigRouterToArrayInput `pulumi:"tos"`
}

func (GetChainsChainChainConfigRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigRouter)(nil)).Elem()
}

func (i GetChainsChainChainConfigRouterArgs) ToGetChainsChainChainConfigRouterOutput() GetChainsChainChainConfigRouterOutput {
	return i.ToGetChainsChainChainConfigRouterOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigRouterArgs) ToGetChainsChainChainConfigRouterOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigRouterOutput)
}

// GetChainsChainChainConfigRouterArrayInput is an input type that accepts GetChainsChainChainConfigRouterArray and GetChainsChainChainConfigRouterArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigRouterArrayInput` via:
//
//	GetChainsChainChainConfigRouterArray{ GetChainsChainChainConfigRouterArgs{...} }
type GetChainsChainChainConfigRouterArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigRouterArrayOutput() GetChainsChainChainConfigRouterArrayOutput
	ToGetChainsChainChainConfigRouterArrayOutputWithContext(context.Context) GetChainsChainChainConfigRouterArrayOutput
}

type GetChainsChainChainConfigRouterArray []GetChainsChainChainConfigRouterInput

func (GetChainsChainChainConfigRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigRouter)(nil)).Elem()
}

func (i GetChainsChainChainConfigRouterArray) ToGetChainsChainChainConfigRouterArrayOutput() GetChainsChainChainConfigRouterArrayOutput {
	return i.ToGetChainsChainChainConfigRouterArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigRouterArray) ToGetChainsChainChainConfigRouterArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigRouterArrayOutput)
}

type GetChainsChainChainConfigRouterOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigRouter)(nil)).Elem()
}

func (o GetChainsChainChainConfigRouterOutput) ToGetChainsChainChainConfigRouterOutput() GetChainsChainChainConfigRouterOutput {
	return o
}

func (o GetChainsChainChainConfigRouterOutput) ToGetChainsChainChainConfigRouterOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterOutput {
	return o
}

// Source node.
func (o GetChainsChainChainConfigRouterOutput) Froms() GetChainsChainChainConfigRouterFromArrayOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigRouter) []GetChainsChainChainConfigRouterFrom { return v.Froms }).(GetChainsChainChainConfigRouterFromArrayOutput)
}

// Destination node.
func (o GetChainsChainChainConfigRouterOutput) Tos() GetChainsChainChainConfigRouterToArrayOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigRouter) []GetChainsChainChainConfigRouterTo { return v.Tos }).(GetChainsChainChainConfigRouterToArrayOutput)
}

type GetChainsChainChainConfigRouterArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigRouter)(nil)).Elem()
}

func (o GetChainsChainChainConfigRouterArrayOutput) ToGetChainsChainChainConfigRouterArrayOutput() GetChainsChainChainConfigRouterArrayOutput {
	return o
}

func (o GetChainsChainChainConfigRouterArrayOutput) ToGetChainsChainChainConfigRouterArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterArrayOutput {
	return o
}

func (o GetChainsChainChainConfigRouterArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfigRouter {
		return vs[0].([]GetChainsChainChainConfigRouter)[vs[1].(int)]
	}).(GetChainsChainChainConfigRouterOutput)
}

type GetChainsChainChainConfigRouterFrom struct {
	// The name of delivery chain node.
	NodeName string `pulumi:"nodeName"`
}

// GetChainsChainChainConfigRouterFromInput is an input type that accepts GetChainsChainChainConfigRouterFromArgs and GetChainsChainChainConfigRouterFromOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigRouterFromInput` via:
//
//	GetChainsChainChainConfigRouterFromArgs{...}
type GetChainsChainChainConfigRouterFromInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigRouterFromOutput() GetChainsChainChainConfigRouterFromOutput
	ToGetChainsChainChainConfigRouterFromOutputWithContext(context.Context) GetChainsChainChainConfigRouterFromOutput
}

type GetChainsChainChainConfigRouterFromArgs struct {
	// The name of delivery chain node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetChainsChainChainConfigRouterFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigRouterFrom)(nil)).Elem()
}

func (i GetChainsChainChainConfigRouterFromArgs) ToGetChainsChainChainConfigRouterFromOutput() GetChainsChainChainConfigRouterFromOutput {
	return i.ToGetChainsChainChainConfigRouterFromOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigRouterFromArgs) ToGetChainsChainChainConfigRouterFromOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigRouterFromOutput)
}

// GetChainsChainChainConfigRouterFromArrayInput is an input type that accepts GetChainsChainChainConfigRouterFromArray and GetChainsChainChainConfigRouterFromArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigRouterFromArrayInput` via:
//
//	GetChainsChainChainConfigRouterFromArray{ GetChainsChainChainConfigRouterFromArgs{...} }
type GetChainsChainChainConfigRouterFromArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigRouterFromArrayOutput() GetChainsChainChainConfigRouterFromArrayOutput
	ToGetChainsChainChainConfigRouterFromArrayOutputWithContext(context.Context) GetChainsChainChainConfigRouterFromArrayOutput
}

type GetChainsChainChainConfigRouterFromArray []GetChainsChainChainConfigRouterFromInput

func (GetChainsChainChainConfigRouterFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigRouterFrom)(nil)).Elem()
}

func (i GetChainsChainChainConfigRouterFromArray) ToGetChainsChainChainConfigRouterFromArrayOutput() GetChainsChainChainConfigRouterFromArrayOutput {
	return i.ToGetChainsChainChainConfigRouterFromArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigRouterFromArray) ToGetChainsChainChainConfigRouterFromArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigRouterFromArrayOutput)
}

type GetChainsChainChainConfigRouterFromOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigRouterFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigRouterFrom)(nil)).Elem()
}

func (o GetChainsChainChainConfigRouterFromOutput) ToGetChainsChainChainConfigRouterFromOutput() GetChainsChainChainConfigRouterFromOutput {
	return o
}

func (o GetChainsChainChainConfigRouterFromOutput) ToGetChainsChainChainConfigRouterFromOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterFromOutput {
	return o
}

// The name of delivery chain node.
func (o GetChainsChainChainConfigRouterFromOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigRouterFrom) string { return v.NodeName }).(pulumi.StringOutput)
}

type GetChainsChainChainConfigRouterFromArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigRouterFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigRouterFrom)(nil)).Elem()
}

func (o GetChainsChainChainConfigRouterFromArrayOutput) ToGetChainsChainChainConfigRouterFromArrayOutput() GetChainsChainChainConfigRouterFromArrayOutput {
	return o
}

func (o GetChainsChainChainConfigRouterFromArrayOutput) ToGetChainsChainChainConfigRouterFromArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterFromArrayOutput {
	return o
}

func (o GetChainsChainChainConfigRouterFromArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigRouterFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfigRouterFrom {
		return vs[0].([]GetChainsChainChainConfigRouterFrom)[vs[1].(int)]
	}).(GetChainsChainChainConfigRouterFromOutput)
}

type GetChainsChainChainConfigRouterTo struct {
	// The name of delivery chain node.
	NodeName string `pulumi:"nodeName"`
}

// GetChainsChainChainConfigRouterToInput is an input type that accepts GetChainsChainChainConfigRouterToArgs and GetChainsChainChainConfigRouterToOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigRouterToInput` via:
//
//	GetChainsChainChainConfigRouterToArgs{...}
type GetChainsChainChainConfigRouterToInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigRouterToOutput() GetChainsChainChainConfigRouterToOutput
	ToGetChainsChainChainConfigRouterToOutputWithContext(context.Context) GetChainsChainChainConfigRouterToOutput
}

type GetChainsChainChainConfigRouterToArgs struct {
	// The name of delivery chain node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetChainsChainChainConfigRouterToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigRouterTo)(nil)).Elem()
}

func (i GetChainsChainChainConfigRouterToArgs) ToGetChainsChainChainConfigRouterToOutput() GetChainsChainChainConfigRouterToOutput {
	return i.ToGetChainsChainChainConfigRouterToOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigRouterToArgs) ToGetChainsChainChainConfigRouterToOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigRouterToOutput)
}

// GetChainsChainChainConfigRouterToArrayInput is an input type that accepts GetChainsChainChainConfigRouterToArray and GetChainsChainChainConfigRouterToArrayOutput values.
// You can construct a concrete instance of `GetChainsChainChainConfigRouterToArrayInput` via:
//
//	GetChainsChainChainConfigRouterToArray{ GetChainsChainChainConfigRouterToArgs{...} }
type GetChainsChainChainConfigRouterToArrayInput interface {
	pulumi.Input

	ToGetChainsChainChainConfigRouterToArrayOutput() GetChainsChainChainConfigRouterToArrayOutput
	ToGetChainsChainChainConfigRouterToArrayOutputWithContext(context.Context) GetChainsChainChainConfigRouterToArrayOutput
}

type GetChainsChainChainConfigRouterToArray []GetChainsChainChainConfigRouterToInput

func (GetChainsChainChainConfigRouterToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigRouterTo)(nil)).Elem()
}

func (i GetChainsChainChainConfigRouterToArray) ToGetChainsChainChainConfigRouterToArrayOutput() GetChainsChainChainConfigRouterToArrayOutput {
	return i.ToGetChainsChainChainConfigRouterToArrayOutputWithContext(context.Background())
}

func (i GetChainsChainChainConfigRouterToArray) ToGetChainsChainChainConfigRouterToArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChainsChainChainConfigRouterToArrayOutput)
}

type GetChainsChainChainConfigRouterToOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigRouterToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChainsChainChainConfigRouterTo)(nil)).Elem()
}

func (o GetChainsChainChainConfigRouterToOutput) ToGetChainsChainChainConfigRouterToOutput() GetChainsChainChainConfigRouterToOutput {
	return o
}

func (o GetChainsChainChainConfigRouterToOutput) ToGetChainsChainChainConfigRouterToOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterToOutput {
	return o
}

// The name of delivery chain node.
func (o GetChainsChainChainConfigRouterToOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChainsChainChainConfigRouterTo) string { return v.NodeName }).(pulumi.StringOutput)
}

type GetChainsChainChainConfigRouterToArrayOutput struct{ *pulumi.OutputState }

func (GetChainsChainChainConfigRouterToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChainsChainChainConfigRouterTo)(nil)).Elem()
}

func (o GetChainsChainChainConfigRouterToArrayOutput) ToGetChainsChainChainConfigRouterToArrayOutput() GetChainsChainChainConfigRouterToArrayOutput {
	return o
}

func (o GetChainsChainChainConfigRouterToArrayOutput) ToGetChainsChainChainConfigRouterToArrayOutputWithContext(ctx context.Context) GetChainsChainChainConfigRouterToArrayOutput {
	return o
}

func (o GetChainsChainChainConfigRouterToArrayOutput) Index(i pulumi.IntInput) GetChainsChainChainConfigRouterToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChainsChainChainConfigRouterTo {
		return vs[0].([]GetChainsChainChainConfigRouterTo)[vs[1].(int)]
	}).(GetChainsChainChainConfigRouterToOutput)
}

type GetChartNamespacesNamespace struct {
	// Indicates whether a repository is automatically created when an image is pushed to the namespace.
	AutoCreateRepo bool `pulumi:"autoCreateRepo"`
	// The ID of the namespace.
	ChartNamespaceId string `pulumi:"chartNamespaceId"`
	// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
	DefaultRepoType string `pulumi:"defaultRepoType"`
	// The ID of the Chart Namespace.
	Id string `pulumi:"id"`
	// The ID of the namespace.
	InstanceId string `pulumi:"instanceId"`
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
}

// GetChartNamespacesNamespaceInput is an input type that accepts GetChartNamespacesNamespaceArgs and GetChartNamespacesNamespaceOutput values.
// You can construct a concrete instance of `GetChartNamespacesNamespaceInput` via:
//
//	GetChartNamespacesNamespaceArgs{...}
type GetChartNamespacesNamespaceInput interface {
	pulumi.Input

	ToGetChartNamespacesNamespaceOutput() GetChartNamespacesNamespaceOutput
	ToGetChartNamespacesNamespaceOutputWithContext(context.Context) GetChartNamespacesNamespaceOutput
}

type GetChartNamespacesNamespaceArgs struct {
	// Indicates whether a repository is automatically created when an image is pushed to the namespace.
	AutoCreateRepo pulumi.BoolInput `pulumi:"autoCreateRepo"`
	// The ID of the namespace.
	ChartNamespaceId pulumi.StringInput `pulumi:"chartNamespaceId"`
	// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
	DefaultRepoType pulumi.StringInput `pulumi:"defaultRepoType"`
	// The ID of the Chart Namespace.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the namespace.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
}

func (GetChartNamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartNamespacesNamespace)(nil)).Elem()
}

func (i GetChartNamespacesNamespaceArgs) ToGetChartNamespacesNamespaceOutput() GetChartNamespacesNamespaceOutput {
	return i.ToGetChartNamespacesNamespaceOutputWithContext(context.Background())
}

func (i GetChartNamespacesNamespaceArgs) ToGetChartNamespacesNamespaceOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartNamespacesNamespaceOutput)
}

// GetChartNamespacesNamespaceArrayInput is an input type that accepts GetChartNamespacesNamespaceArray and GetChartNamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `GetChartNamespacesNamespaceArrayInput` via:
//
//	GetChartNamespacesNamespaceArray{ GetChartNamespacesNamespaceArgs{...} }
type GetChartNamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToGetChartNamespacesNamespaceArrayOutput() GetChartNamespacesNamespaceArrayOutput
	ToGetChartNamespacesNamespaceArrayOutputWithContext(context.Context) GetChartNamespacesNamespaceArrayOutput
}

type GetChartNamespacesNamespaceArray []GetChartNamespacesNamespaceInput

func (GetChartNamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartNamespacesNamespace)(nil)).Elem()
}

func (i GetChartNamespacesNamespaceArray) ToGetChartNamespacesNamespaceArrayOutput() GetChartNamespacesNamespaceArrayOutput {
	return i.ToGetChartNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i GetChartNamespacesNamespaceArray) ToGetChartNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartNamespacesNamespaceArrayOutput)
}

type GetChartNamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (GetChartNamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartNamespacesNamespace)(nil)).Elem()
}

func (o GetChartNamespacesNamespaceOutput) ToGetChartNamespacesNamespaceOutput() GetChartNamespacesNamespaceOutput {
	return o
}

func (o GetChartNamespacesNamespaceOutput) ToGetChartNamespacesNamespaceOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceOutput {
	return o
}

// Indicates whether a repository is automatically created when an image is pushed to the namespace.
func (o GetChartNamespacesNamespaceOutput) AutoCreateRepo() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) bool { return v.AutoCreateRepo }).(pulumi.BoolOutput)
}

// The ID of the namespace.
func (o GetChartNamespacesNamespaceOutput) ChartNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.ChartNamespaceId }).(pulumi.StringOutput)
}

// The default repository type. Valid values: `PUBLIC`,`PRIVATE`.
func (o GetChartNamespacesNamespaceOutput) DefaultRepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.DefaultRepoType }).(pulumi.StringOutput)
}

// The ID of the Chart Namespace.
func (o GetChartNamespacesNamespaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the namespace.
func (o GetChartNamespacesNamespaceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the namespace.
func (o GetChartNamespacesNamespaceOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesNamespace) string { return v.NamespaceName }).(pulumi.StringOutput)
}

type GetChartNamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetChartNamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartNamespacesNamespace)(nil)).Elem()
}

func (o GetChartNamespacesNamespaceArrayOutput) ToGetChartNamespacesNamespaceArrayOutput() GetChartNamespacesNamespaceArrayOutput {
	return o
}

func (o GetChartNamespacesNamespaceArrayOutput) ToGetChartNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetChartNamespacesNamespaceArrayOutput {
	return o
}

func (o GetChartNamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) GetChartNamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChartNamespacesNamespace {
		return vs[0].([]GetChartNamespacesNamespace)[vs[1].(int)]
	}).(GetChartNamespacesNamespaceOutput)
}

type GetChartRepositoriesRepository struct {
	// The first ID of the resource.
	ChartRepositoryId string `pulumi:"chartRepositoryId"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Chart Repository.
	Id string `pulumi:"id"`
	// The ID of the Container Registry instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the repository.
	RepoName string `pulumi:"repoName"`
	// The namespace to which the repository belongs.
	RepoNamespaceName string `pulumi:"repoNamespaceName"`
	// The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
	RepoType string `pulumi:"repoType"`
	// The summary about the repository.
	Summary string `pulumi:"summary"`
}

// GetChartRepositoriesRepositoryInput is an input type that accepts GetChartRepositoriesRepositoryArgs and GetChartRepositoriesRepositoryOutput values.
// You can construct a concrete instance of `GetChartRepositoriesRepositoryInput` via:
//
//	GetChartRepositoriesRepositoryArgs{...}
type GetChartRepositoriesRepositoryInput interface {
	pulumi.Input

	ToGetChartRepositoriesRepositoryOutput() GetChartRepositoriesRepositoryOutput
	ToGetChartRepositoriesRepositoryOutputWithContext(context.Context) GetChartRepositoriesRepositoryOutput
}

type GetChartRepositoriesRepositoryArgs struct {
	// The first ID of the resource.
	ChartRepositoryId pulumi.StringInput `pulumi:"chartRepositoryId"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Chart Repository.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Container Registry instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// The namespace to which the repository belongs.
	RepoNamespaceName pulumi.StringInput `pulumi:"repoNamespaceName"`
	// The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The summary about the repository.
	Summary pulumi.StringInput `pulumi:"summary"`
}

func (GetChartRepositoriesRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartRepositoriesRepository)(nil)).Elem()
}

func (i GetChartRepositoriesRepositoryArgs) ToGetChartRepositoriesRepositoryOutput() GetChartRepositoriesRepositoryOutput {
	return i.ToGetChartRepositoriesRepositoryOutputWithContext(context.Background())
}

func (i GetChartRepositoriesRepositoryArgs) ToGetChartRepositoriesRepositoryOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartRepositoriesRepositoryOutput)
}

// GetChartRepositoriesRepositoryArrayInput is an input type that accepts GetChartRepositoriesRepositoryArray and GetChartRepositoriesRepositoryArrayOutput values.
// You can construct a concrete instance of `GetChartRepositoriesRepositoryArrayInput` via:
//
//	GetChartRepositoriesRepositoryArray{ GetChartRepositoriesRepositoryArgs{...} }
type GetChartRepositoriesRepositoryArrayInput interface {
	pulumi.Input

	ToGetChartRepositoriesRepositoryArrayOutput() GetChartRepositoriesRepositoryArrayOutput
	ToGetChartRepositoriesRepositoryArrayOutputWithContext(context.Context) GetChartRepositoriesRepositoryArrayOutput
}

type GetChartRepositoriesRepositoryArray []GetChartRepositoriesRepositoryInput

func (GetChartRepositoriesRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartRepositoriesRepository)(nil)).Elem()
}

func (i GetChartRepositoriesRepositoryArray) ToGetChartRepositoriesRepositoryArrayOutput() GetChartRepositoriesRepositoryArrayOutput {
	return i.ToGetChartRepositoriesRepositoryArrayOutputWithContext(context.Background())
}

func (i GetChartRepositoriesRepositoryArray) ToGetChartRepositoriesRepositoryArrayOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChartRepositoriesRepositoryArrayOutput)
}

type GetChartRepositoriesRepositoryOutput struct{ *pulumi.OutputState }

func (GetChartRepositoriesRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartRepositoriesRepository)(nil)).Elem()
}

func (o GetChartRepositoriesRepositoryOutput) ToGetChartRepositoriesRepositoryOutput() GetChartRepositoriesRepositoryOutput {
	return o
}

func (o GetChartRepositoriesRepositoryOutput) ToGetChartRepositoriesRepositoryOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryOutput {
	return o
}

// The first ID of the resource.
func (o GetChartRepositoriesRepositoryOutput) ChartRepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.ChartRepositoryId }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o GetChartRepositoriesRepositoryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Chart Repository.
func (o GetChartRepositoriesRepositoryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Container Registry instance.
func (o GetChartRepositoriesRepositoryOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the repository.
func (o GetChartRepositoriesRepositoryOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.RepoName }).(pulumi.StringOutput)
}

// The namespace to which the repository belongs.
func (o GetChartRepositoriesRepositoryOutput) RepoNamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.RepoNamespaceName }).(pulumi.StringOutput)
}

// The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
func (o GetChartRepositoriesRepositoryOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.RepoType }).(pulumi.StringOutput)
}

// The summary about the repository.
func (o GetChartRepositoriesRepositoryOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartRepositoriesRepository) string { return v.Summary }).(pulumi.StringOutput)
}

type GetChartRepositoriesRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetChartRepositoriesRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChartRepositoriesRepository)(nil)).Elem()
}

func (o GetChartRepositoriesRepositoryArrayOutput) ToGetChartRepositoriesRepositoryArrayOutput() GetChartRepositoriesRepositoryArrayOutput {
	return o
}

func (o GetChartRepositoriesRepositoryArrayOutput) ToGetChartRepositoriesRepositoryArrayOutputWithContext(ctx context.Context) GetChartRepositoriesRepositoryArrayOutput {
	return o
}

func (o GetChartRepositoriesRepositoryArrayOutput) Index(i pulumi.IntInput) GetChartRepositoriesRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChartRepositoriesRepository {
		return vs[0].([]GetChartRepositoriesRepository)[vs[1].(int)]
	}).(GetChartRepositoriesRepositoryOutput)
}

type GetEndpointAclPoliciesPolicy struct {
	// The description of the entry.
	Description string `pulumi:"description"`
	// The type of endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The IP segment that allowed to access.
	Entry string `pulumi:"entry"`
	// The ID of the Endpoint Acl Policy.
	Id string `pulumi:"id"`
	// The ID of the CR Instance.
	InstanceId string `pulumi:"instanceId"`
}

// GetEndpointAclPoliciesPolicyInput is an input type that accepts GetEndpointAclPoliciesPolicyArgs and GetEndpointAclPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetEndpointAclPoliciesPolicyInput` via:
//
//	GetEndpointAclPoliciesPolicyArgs{...}
type GetEndpointAclPoliciesPolicyInput interface {
	pulumi.Input

	ToGetEndpointAclPoliciesPolicyOutput() GetEndpointAclPoliciesPolicyOutput
	ToGetEndpointAclPoliciesPolicyOutputWithContext(context.Context) GetEndpointAclPoliciesPolicyOutput
}

type GetEndpointAclPoliciesPolicyArgs struct {
	// The description of the entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of endpoint.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The IP segment that allowed to access.
	Entry pulumi.StringInput `pulumi:"entry"`
	// The ID of the Endpoint Acl Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the CR Instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetEndpointAclPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (i GetEndpointAclPoliciesPolicyArgs) ToGetEndpointAclPoliciesPolicyOutput() GetEndpointAclPoliciesPolicyOutput {
	return i.ToGetEndpointAclPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetEndpointAclPoliciesPolicyArgs) ToGetEndpointAclPoliciesPolicyOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointAclPoliciesPolicyOutput)
}

// GetEndpointAclPoliciesPolicyArrayInput is an input type that accepts GetEndpointAclPoliciesPolicyArray and GetEndpointAclPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetEndpointAclPoliciesPolicyArrayInput` via:
//
//	GetEndpointAclPoliciesPolicyArray{ GetEndpointAclPoliciesPolicyArgs{...} }
type GetEndpointAclPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetEndpointAclPoliciesPolicyArrayOutput() GetEndpointAclPoliciesPolicyArrayOutput
	ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(context.Context) GetEndpointAclPoliciesPolicyArrayOutput
}

type GetEndpointAclPoliciesPolicyArray []GetEndpointAclPoliciesPolicyInput

func (GetEndpointAclPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (i GetEndpointAclPoliciesPolicyArray) ToGetEndpointAclPoliciesPolicyArrayOutput() GetEndpointAclPoliciesPolicyArrayOutput {
	return i.ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetEndpointAclPoliciesPolicyArray) ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointAclPoliciesPolicyArrayOutput)
}

type GetEndpointAclPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetEndpointAclPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (o GetEndpointAclPoliciesPolicyOutput) ToGetEndpointAclPoliciesPolicyOutput() GetEndpointAclPoliciesPolicyOutput {
	return o
}

func (o GetEndpointAclPoliciesPolicyOutput) ToGetEndpointAclPoliciesPolicyOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyOutput {
	return o
}

// The description of the entry.
func (o GetEndpointAclPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The type of endpoint.
func (o GetEndpointAclPoliciesPolicyOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The IP segment that allowed to access.
func (o GetEndpointAclPoliciesPolicyOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.Entry }).(pulumi.StringOutput)
}

// The ID of the Endpoint Acl Policy.
func (o GetEndpointAclPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the CR Instance.
func (o GetEndpointAclPoliciesPolicyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointAclPoliciesPolicy) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetEndpointAclPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointAclPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointAclPoliciesPolicy)(nil)).Elem()
}

func (o GetEndpointAclPoliciesPolicyArrayOutput) ToGetEndpointAclPoliciesPolicyArrayOutput() GetEndpointAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetEndpointAclPoliciesPolicyArrayOutput) ToGetEndpointAclPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetEndpointAclPoliciesPolicyArrayOutput {
	return o
}

func (o GetEndpointAclPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetEndpointAclPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointAclPoliciesPolicy {
		return vs[0].([]GetEndpointAclPoliciesPolicy)[vs[1].(int)]
	}).(GetEndpointAclPoliciesPolicyOutput)
}

type GetNamespacesNamespace struct {
	// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
	AutoCreate bool `pulumi:"autoCreate"`
	// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
	DefaultVisibility string `pulumi:"defaultVisibility"`
	// Name of Container Registry namespace.
	Name string `pulumi:"name"`
}

// GetNamespacesNamespaceInput is an input type that accepts GetNamespacesNamespaceArgs and GetNamespacesNamespaceOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceInput` via:
//
//	GetNamespacesNamespaceArgs{...}
type GetNamespacesNamespaceInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput
	ToGetNamespacesNamespaceOutputWithContext(context.Context) GetNamespacesNamespaceOutput
}

type GetNamespacesNamespaceArgs struct {
	// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
	AutoCreate pulumi.BoolInput `pulumi:"autoCreate"`
	// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
	DefaultVisibility pulumi.StringInput `pulumi:"defaultVisibility"`
	// Name of Container Registry namespace.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return i.ToGetNamespacesNamespaceOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceOutput)
}

// GetNamespacesNamespaceArrayInput is an input type that accepts GetNamespacesNamespaceArray and GetNamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceArrayInput` via:
//
//	GetNamespacesNamespaceArray{ GetNamespacesNamespaceArgs{...} }
type GetNamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput
	ToGetNamespacesNamespaceArrayOutputWithContext(context.Context) GetNamespacesNamespaceArrayOutput
}

type GetNamespacesNamespaceArray []GetNamespacesNamespaceInput

func (GetNamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return i.ToGetNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceArrayOutput)
}

type GetNamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return o
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return o
}

// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
func (o GetNamespacesNamespaceOutput) AutoCreate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) bool { return v.AutoCreate }).(pulumi.BoolOutput)
}

// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
func (o GetNamespacesNamespaceOutput) DefaultVisibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.DefaultVisibility }).(pulumi.StringOutput)
}

// Name of Container Registry namespace.
func (o GetNamespacesNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Name }).(pulumi.StringOutput)
}

type GetNamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) GetNamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesNamespace {
		return vs[0].([]GetNamespacesNamespace)[vs[1].(int)]
	}).(GetNamespacesNamespaceOutput)
}

type GetReposRepo struct {
	// The repository domain list.
	DomainList GetReposRepoDomainList `pulumi:"domainList"`
	// Name of container registry namespace.
	Name string `pulumi:"name"`
	// Name of container registry namespace where the repositories are located in.
	Namespace string `pulumi:"namespace"`
	// `PUBLIC` or `PRIVATE`, repository's visibility.
	RepoType string `pulumi:"repoType"`
	// The repository general information.
	Summary string `pulumi:"summary"`
	// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
	Tags []GetReposRepoTag `pulumi:"tags"`
}

// GetReposRepoInput is an input type that accepts GetReposRepoArgs and GetReposRepoOutput values.
// You can construct a concrete instance of `GetReposRepoInput` via:
//
//	GetReposRepoArgs{...}
type GetReposRepoInput interface {
	pulumi.Input

	ToGetReposRepoOutput() GetReposRepoOutput
	ToGetReposRepoOutputWithContext(context.Context) GetReposRepoOutput
}

type GetReposRepoArgs struct {
	// The repository domain list.
	DomainList GetReposRepoDomainListInput `pulumi:"domainList"`
	// Name of container registry namespace.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of container registry namespace where the repositories are located in.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// `PUBLIC` or `PRIVATE`, repository's visibility.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The repository general information.
	Summary pulumi.StringInput `pulumi:"summary"`
	// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
	Tags GetReposRepoTagArrayInput `pulumi:"tags"`
}

func (GetReposRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepo)(nil)).Elem()
}

func (i GetReposRepoArgs) ToGetReposRepoOutput() GetReposRepoOutput {
	return i.ToGetReposRepoOutputWithContext(context.Background())
}

func (i GetReposRepoArgs) ToGetReposRepoOutputWithContext(ctx context.Context) GetReposRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoOutput)
}

// GetReposRepoArrayInput is an input type that accepts GetReposRepoArray and GetReposRepoArrayOutput values.
// You can construct a concrete instance of `GetReposRepoArrayInput` via:
//
//	GetReposRepoArray{ GetReposRepoArgs{...} }
type GetReposRepoArrayInput interface {
	pulumi.Input

	ToGetReposRepoArrayOutput() GetReposRepoArrayOutput
	ToGetReposRepoArrayOutputWithContext(context.Context) GetReposRepoArrayOutput
}

type GetReposRepoArray []GetReposRepoInput

func (GetReposRepoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepo)(nil)).Elem()
}

func (i GetReposRepoArray) ToGetReposRepoArrayOutput() GetReposRepoArrayOutput {
	return i.ToGetReposRepoArrayOutputWithContext(context.Background())
}

func (i GetReposRepoArray) ToGetReposRepoArrayOutputWithContext(ctx context.Context) GetReposRepoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoArrayOutput)
}

type GetReposRepoOutput struct{ *pulumi.OutputState }

func (GetReposRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepo)(nil)).Elem()
}

func (o GetReposRepoOutput) ToGetReposRepoOutput() GetReposRepoOutput {
	return o
}

func (o GetReposRepoOutput) ToGetReposRepoOutputWithContext(ctx context.Context) GetReposRepoOutput {
	return o
}

// The repository domain list.
func (o GetReposRepoOutput) DomainList() GetReposRepoDomainListOutput {
	return o.ApplyT(func(v GetReposRepo) GetReposRepoDomainList { return v.DomainList }).(GetReposRepoDomainListOutput)
}

// Name of container registry namespace.
func (o GetReposRepoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.Name }).(pulumi.StringOutput)
}

// Name of container registry namespace where the repositories are located in.
func (o GetReposRepoOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.Namespace }).(pulumi.StringOutput)
}

// `PUBLIC` or `PRIVATE`, repository's visibility.
func (o GetReposRepoOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.RepoType }).(pulumi.StringOutput)
}

// The repository general information.
func (o GetReposRepoOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepo) string { return v.Summary }).(pulumi.StringOutput)
}

// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
func (o GetReposRepoOutput) Tags() GetReposRepoTagArrayOutput {
	return o.ApplyT(func(v GetReposRepo) []GetReposRepoTag { return v.Tags }).(GetReposRepoTagArrayOutput)
}

type GetReposRepoArrayOutput struct{ *pulumi.OutputState }

func (GetReposRepoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepo)(nil)).Elem()
}

func (o GetReposRepoArrayOutput) ToGetReposRepoArrayOutput() GetReposRepoArrayOutput {
	return o
}

func (o GetReposRepoArrayOutput) ToGetReposRepoArrayOutputWithContext(ctx context.Context) GetReposRepoArrayOutput {
	return o
}

func (o GetReposRepoArrayOutput) Index(i pulumi.IntInput) GetReposRepoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReposRepo {
		return vs[0].([]GetReposRepo)[vs[1].(int)]
	}).(GetReposRepoOutput)
}

type GetReposRepoDomainList struct {
	// Domain of internal endpoint, only in some regions.
	Internal string `pulumi:"internal"`
	// Domain of public endpoint.
	Public string `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc string `pulumi:"vpc"`
}

// GetReposRepoDomainListInput is an input type that accepts GetReposRepoDomainListArgs and GetReposRepoDomainListOutput values.
// You can construct a concrete instance of `GetReposRepoDomainListInput` via:
//
//	GetReposRepoDomainListArgs{...}
type GetReposRepoDomainListInput interface {
	pulumi.Input

	ToGetReposRepoDomainListOutput() GetReposRepoDomainListOutput
	ToGetReposRepoDomainListOutputWithContext(context.Context) GetReposRepoDomainListOutput
}

type GetReposRepoDomainListArgs struct {
	// Domain of internal endpoint, only in some regions.
	Internal pulumi.StringInput `pulumi:"internal"`
	// Domain of public endpoint.
	Public pulumi.StringInput `pulumi:"public"`
	// Domain of vpc endpoint.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetReposRepoDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoDomainList)(nil)).Elem()
}

func (i GetReposRepoDomainListArgs) ToGetReposRepoDomainListOutput() GetReposRepoDomainListOutput {
	return i.ToGetReposRepoDomainListOutputWithContext(context.Background())
}

func (i GetReposRepoDomainListArgs) ToGetReposRepoDomainListOutputWithContext(ctx context.Context) GetReposRepoDomainListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoDomainListOutput)
}

type GetReposRepoDomainListOutput struct{ *pulumi.OutputState }

func (GetReposRepoDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoDomainList)(nil)).Elem()
}

func (o GetReposRepoDomainListOutput) ToGetReposRepoDomainListOutput() GetReposRepoDomainListOutput {
	return o
}

func (o GetReposRepoDomainListOutput) ToGetReposRepoDomainListOutputWithContext(ctx context.Context) GetReposRepoDomainListOutput {
	return o
}

// Domain of internal endpoint, only in some regions.
func (o GetReposRepoDomainListOutput) Internal() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoDomainList) string { return v.Internal }).(pulumi.StringOutput)
}

// Domain of public endpoint.
func (o GetReposRepoDomainListOutput) Public() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoDomainList) string { return v.Public }).(pulumi.StringOutput)
}

// Domain of vpc endpoint.
func (o GetReposRepoDomainListOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoDomainList) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetReposRepoTag struct {
	// Digest of this image.
	Digest string `pulumi:"digest"`
	// Create time of this image, unix time in nanoseconds.
	ImageCreate int `pulumi:"imageCreate"`
	// Id of this image.
	ImageId string `pulumi:"imageId"`
	// Status of this image, in bytes.
	ImageSize int `pulumi:"imageSize"`
	// Last update time of this image, unix time in nanoseconds.
	ImageUpdate int `pulumi:"imageUpdate"`
	// Status of this image.
	Status string `pulumi:"status"`
	// Tag of this image.
	Tag string `pulumi:"tag"`
}

// GetReposRepoTagInput is an input type that accepts GetReposRepoTagArgs and GetReposRepoTagOutput values.
// You can construct a concrete instance of `GetReposRepoTagInput` via:
//
//	GetReposRepoTagArgs{...}
type GetReposRepoTagInput interface {
	pulumi.Input

	ToGetReposRepoTagOutput() GetReposRepoTagOutput
	ToGetReposRepoTagOutputWithContext(context.Context) GetReposRepoTagOutput
}

type GetReposRepoTagArgs struct {
	// Digest of this image.
	Digest pulumi.StringInput `pulumi:"digest"`
	// Create time of this image, unix time in nanoseconds.
	ImageCreate pulumi.IntInput `pulumi:"imageCreate"`
	// Id of this image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Status of this image, in bytes.
	ImageSize pulumi.IntInput `pulumi:"imageSize"`
	// Last update time of this image, unix time in nanoseconds.
	ImageUpdate pulumi.IntInput `pulumi:"imageUpdate"`
	// Status of this image.
	Status pulumi.StringInput `pulumi:"status"`
	// Tag of this image.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetReposRepoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoTag)(nil)).Elem()
}

func (i GetReposRepoTagArgs) ToGetReposRepoTagOutput() GetReposRepoTagOutput {
	return i.ToGetReposRepoTagOutputWithContext(context.Background())
}

func (i GetReposRepoTagArgs) ToGetReposRepoTagOutputWithContext(ctx context.Context) GetReposRepoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoTagOutput)
}

// GetReposRepoTagArrayInput is an input type that accepts GetReposRepoTagArray and GetReposRepoTagArrayOutput values.
// You can construct a concrete instance of `GetReposRepoTagArrayInput` via:
//
//	GetReposRepoTagArray{ GetReposRepoTagArgs{...} }
type GetReposRepoTagArrayInput interface {
	pulumi.Input

	ToGetReposRepoTagArrayOutput() GetReposRepoTagArrayOutput
	ToGetReposRepoTagArrayOutputWithContext(context.Context) GetReposRepoTagArrayOutput
}

type GetReposRepoTagArray []GetReposRepoTagInput

func (GetReposRepoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepoTag)(nil)).Elem()
}

func (i GetReposRepoTagArray) ToGetReposRepoTagArrayOutput() GetReposRepoTagArrayOutput {
	return i.ToGetReposRepoTagArrayOutputWithContext(context.Background())
}

func (i GetReposRepoTagArray) ToGetReposRepoTagArrayOutputWithContext(ctx context.Context) GetReposRepoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReposRepoTagArrayOutput)
}

type GetReposRepoTagOutput struct{ *pulumi.OutputState }

func (GetReposRepoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReposRepoTag)(nil)).Elem()
}

func (o GetReposRepoTagOutput) ToGetReposRepoTagOutput() GetReposRepoTagOutput {
	return o
}

func (o GetReposRepoTagOutput) ToGetReposRepoTagOutputWithContext(ctx context.Context) GetReposRepoTagOutput {
	return o
}

// Digest of this image.
func (o GetReposRepoTagOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.Digest }).(pulumi.StringOutput)
}

// Create time of this image, unix time in nanoseconds.
func (o GetReposRepoTagOutput) ImageCreate() pulumi.IntOutput {
	return o.ApplyT(func(v GetReposRepoTag) int { return v.ImageCreate }).(pulumi.IntOutput)
}

// Id of this image.
func (o GetReposRepoTagOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.ImageId }).(pulumi.StringOutput)
}

// Status of this image, in bytes.
func (o GetReposRepoTagOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetReposRepoTag) int { return v.ImageSize }).(pulumi.IntOutput)
}

// Last update time of this image, unix time in nanoseconds.
func (o GetReposRepoTagOutput) ImageUpdate() pulumi.IntOutput {
	return o.ApplyT(func(v GetReposRepoTag) int { return v.ImageUpdate }).(pulumi.IntOutput)
}

// Status of this image.
func (o GetReposRepoTagOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.Status }).(pulumi.StringOutput)
}

// Tag of this image.
func (o GetReposRepoTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetReposRepoTag) string { return v.Tag }).(pulumi.StringOutput)
}

type GetReposRepoTagArrayOutput struct{ *pulumi.OutputState }

func (GetReposRepoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReposRepoTag)(nil)).Elem()
}

func (o GetReposRepoTagArrayOutput) ToGetReposRepoTagArrayOutput() GetReposRepoTagArrayOutput {
	return o
}

func (o GetReposRepoTagArrayOutput) ToGetReposRepoTagArrayOutputWithContext(ctx context.Context) GetReposRepoTagArrayOutput {
	return o
}

func (o GetReposRepoTagArrayOutput) Index(i pulumi.IntInput) GetReposRepoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReposRepoTag {
		return vs[0].([]GetReposRepoTag)[vs[1].(int)]
	}).(GetReposRepoTagOutput)
}

type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc struct {
	// Indicates whether the default policy is used to access the instance.
	DefaultAccess bool `pulumi:"defaultAccess"`
	// The ID of the Vpc Endpoint Linked Vpc. It formats as `<instance_id>:<vpc_id>:<vswitch_id>:<module_name>`.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// IP address.
	Ip string `pulumi:"ip"`
	// The name of the module that you want to access. Valid Values:
	ModuleName string `pulumi:"moduleName"`
	// The status of the Vpc Endpoint Linked Vpc. Valid Values: `CREATING`, `RUNNING`.
	Status string `pulumi:"status"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// The ID of the vSwitch.
	VswitchId string `pulumi:"vswitchId"`
}

// GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcInput is an input type that accepts GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs and GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput values.
// You can construct a concrete instance of `GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcInput` via:
//
//	GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs{...}
type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcInput interface {
	pulumi.Input

	ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput() GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput
	ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutputWithContext(context.Context) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput
}

type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs struct {
	// Indicates whether the default policy is used to access the instance.
	DefaultAccess pulumi.BoolInput `pulumi:"defaultAccess"`
	// The ID of the Vpc Endpoint Linked Vpc. It formats as `<instance_id>:<vpc_id>:<vswitch_id>:<module_name>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The name of the module that you want to access. Valid Values:
	ModuleName pulumi.StringInput `pulumi:"moduleName"`
	// The status of the Vpc Endpoint Linked Vpc. Valid Values: `CREATING`, `RUNNING`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of the vSwitch.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc)(nil)).Elem()
}

func (i GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput() GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput {
	return i.ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutputWithContext(context.Background())
}

func (i GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutputWithContext(ctx context.Context) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput)
}

// GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayInput is an input type that accepts GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray and GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayInput` via:
//
//	GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray{ GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs{...} }
type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput() GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput
	ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutputWithContext(context.Context) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput
}

type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray []GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcInput

func (GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc)(nil)).Elem()
}

func (i GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput() GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput {
	return i.ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutputWithContext(ctx context.Context) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput)
}

type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc)(nil)).Elem()
}

func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput() GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput {
	return o
}

func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutputWithContext(ctx context.Context) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput {
	return o
}

// Indicates whether the default policy is used to access the instance.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) DefaultAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) bool { return v.DefaultAccess }).(pulumi.BoolOutput)
}

// The ID of the Vpc Endpoint Linked Vpc. It formats as `<instance_id>:<vpc_id>:<vswitch_id>:<module_name>`.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.InstanceId }).(pulumi.StringOutput)
}

// IP address.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.Ip }).(pulumi.StringOutput)
}

// The name of the module that you want to access. Valid Values:
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) ModuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.ModuleName }).(pulumi.StringOutput)
}

// The status of the Vpc Endpoint Linked Vpc. Valid Values: `CREATING`, `RUNNING`.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPC.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of the vSwitch.
func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc)(nil)).Elem()
}

func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput() GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput {
	return o
}

func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput) ToGetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutputWithContext(ctx context.Context) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput {
	return o
}

func (o GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc {
		return vs[0].([]GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpc)[vs[1].(int)]
	}).(GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigInput)(nil)).Elem(), ChainChainConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigArrayInput)(nil)).Elem(), ChainChainConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigNodeInput)(nil)).Elem(), ChainChainConfigNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigNodeArrayInput)(nil)).Elem(), ChainChainConfigNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigNodeNodeConfigInput)(nil)).Elem(), ChainChainConfigNodeNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigNodeNodeConfigArrayInput)(nil)).Elem(), ChainChainConfigNodeNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigNodeNodeConfigDenyPolicyInput)(nil)).Elem(), ChainChainConfigNodeNodeConfigDenyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigNodeNodeConfigDenyPolicyArrayInput)(nil)).Elem(), ChainChainConfigNodeNodeConfigDenyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigRouterInput)(nil)).Elem(), ChainChainConfigRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigRouterArrayInput)(nil)).Elem(), ChainChainConfigRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigRouterFromInput)(nil)).Elem(), ChainChainConfigRouterFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigRouterFromArrayInput)(nil)).Elem(), ChainChainConfigRouterFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigRouterToInput)(nil)).Elem(), ChainChainConfigRouterToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChainChainConfigRouterToArrayInput)(nil)).Elem(), ChainChainConfigRouterToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoDomainListInput)(nil)).Elem(), RepoDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoDomainListPtrInput)(nil)).Elem(), RepoDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainInput)(nil)).Elem(), GetChainsChainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainArrayInput)(nil)).Elem(), GetChainsChainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigInput)(nil)).Elem(), GetChainsChainChainConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigArrayInput)(nil)).Elem(), GetChainsChainChainConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigNodeInput)(nil)).Elem(), GetChainsChainChainConfigNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigNodeArrayInput)(nil)).Elem(), GetChainsChainChainConfigNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfigInput)(nil)).Elem(), GetChainsChainChainConfigNodeNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfigArrayInput)(nil)).Elem(), GetChainsChainChainConfigNodeNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfigDenyPolicyInput)(nil)).Elem(), GetChainsChainChainConfigNodeNodeConfigDenyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayInput)(nil)).Elem(), GetChainsChainChainConfigNodeNodeConfigDenyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigRouterInput)(nil)).Elem(), GetChainsChainChainConfigRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigRouterArrayInput)(nil)).Elem(), GetChainsChainChainConfigRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigRouterFromInput)(nil)).Elem(), GetChainsChainChainConfigRouterFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigRouterFromArrayInput)(nil)).Elem(), GetChainsChainChainConfigRouterFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigRouterToInput)(nil)).Elem(), GetChainsChainChainConfigRouterToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChainsChainChainConfigRouterToArrayInput)(nil)).Elem(), GetChainsChainChainConfigRouterToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartNamespacesNamespaceInput)(nil)).Elem(), GetChartNamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartNamespacesNamespaceArrayInput)(nil)).Elem(), GetChartNamespacesNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartRepositoriesRepositoryInput)(nil)).Elem(), GetChartRepositoriesRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChartRepositoriesRepositoryArrayInput)(nil)).Elem(), GetChartRepositoriesRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointAclPoliciesPolicyInput)(nil)).Elem(), GetEndpointAclPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointAclPoliciesPolicyArrayInput)(nil)).Elem(), GetEndpointAclPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceInput)(nil)).Elem(), GetNamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceArrayInput)(nil)).Elem(), GetNamespacesNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoInput)(nil)).Elem(), GetReposRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoArrayInput)(nil)).Elem(), GetReposRepoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoDomainListInput)(nil)).Elem(), GetReposRepoDomainListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoTagInput)(nil)).Elem(), GetReposRepoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReposRepoTagArrayInput)(nil)).Elem(), GetReposRepoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcInput)(nil)).Elem(), GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayInput)(nil)).Elem(), GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArray{})
	pulumi.RegisterOutputType(ChainChainConfigOutput{})
	pulumi.RegisterOutputType(ChainChainConfigArrayOutput{})
	pulumi.RegisterOutputType(ChainChainConfigNodeOutput{})
	pulumi.RegisterOutputType(ChainChainConfigNodeArrayOutput{})
	pulumi.RegisterOutputType(ChainChainConfigNodeNodeConfigOutput{})
	pulumi.RegisterOutputType(ChainChainConfigNodeNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(ChainChainConfigNodeNodeConfigDenyPolicyOutput{})
	pulumi.RegisterOutputType(ChainChainConfigNodeNodeConfigDenyPolicyArrayOutput{})
	pulumi.RegisterOutputType(ChainChainConfigRouterOutput{})
	pulumi.RegisterOutputType(ChainChainConfigRouterArrayOutput{})
	pulumi.RegisterOutputType(ChainChainConfigRouterFromOutput{})
	pulumi.RegisterOutputType(ChainChainConfigRouterFromArrayOutput{})
	pulumi.RegisterOutputType(ChainChainConfigRouterToOutput{})
	pulumi.RegisterOutputType(ChainChainConfigRouterToArrayOutput{})
	pulumi.RegisterOutputType(RepoDomainListOutput{})
	pulumi.RegisterOutputType(RepoDomainListPtrOutput{})
	pulumi.RegisterOutputType(GetChainsChainOutput{})
	pulumi.RegisterOutputType(GetChainsChainArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigNodeOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigNodeArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigNodeNodeConfigOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigNodeNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigNodeNodeConfigDenyPolicyOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigNodeNodeConfigDenyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigRouterOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigRouterArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigRouterFromOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigRouterFromArrayOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigRouterToOutput{})
	pulumi.RegisterOutputType(GetChainsChainChainConfigRouterToArrayOutput{})
	pulumi.RegisterOutputType(GetChartNamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(GetChartNamespacesNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetChartRepositoriesRepositoryOutput{})
	pulumi.RegisterOutputType(GetChartRepositoriesRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointAclPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetEndpointAclPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetReposRepoOutput{})
	pulumi.RegisterOutputType(GetReposRepoArrayOutput{})
	pulumi.RegisterOutputType(GetReposRepoDomainListOutput{})
	pulumi.RegisterOutputType(GetReposRepoTagOutput{})
	pulumi.RegisterOutputType(GetReposRepoTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointLinkedVpcsVpcEndpointLinkedVpcArrayOutput{})
}
