// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Cr Chart Namespaces of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.149.0+.
func GetChartNamespaces(ctx *pulumi.Context, args *GetChartNamespacesArgs, opts ...pulumi.InvokeOption) (*GetChartNamespacesResult, error) {
	var rv GetChartNamespacesResult
	err := ctx.Invoke("alicloud:cr/getChartNamespaces:getChartNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getChartNamespaces.
type GetChartNamespacesArgs struct {
	// A list of matched Container Registry Enterprise Edition namespaces.
	Ids []string `pulumi:"ids"`
	// The ID of the namespace.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by name space name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getChartNamespaces.
type GetChartNamespacesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                        `pulumi:"id"`
	Ids        []string                      `pulumi:"ids"`
	InstanceId string                        `pulumi:"instanceId"`
	NameRegex  *string                       `pulumi:"nameRegex"`
	Names      []string                      `pulumi:"names"`
	Namespaces []GetChartNamespacesNamespace `pulumi:"namespaces"`
	OutputFile *string                       `pulumi:"outputFile"`
}

func GetChartNamespacesOutput(ctx *pulumi.Context, args GetChartNamespacesOutputArgs, opts ...pulumi.InvokeOption) GetChartNamespacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetChartNamespacesResult, error) {
			args := v.(GetChartNamespacesArgs)
			r, err := GetChartNamespaces(ctx, &args, opts...)
			var s GetChartNamespacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetChartNamespacesResultOutput)
}

// A collection of arguments for invoking getChartNamespaces.
type GetChartNamespacesOutputArgs struct {
	// A list of matched Container Registry Enterprise Edition namespaces.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The ID of the namespace.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A regex string to filter results by name space name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetChartNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by getChartNamespaces.
type GetChartNamespacesResultOutput struct{ *pulumi.OutputState }

func (GetChartNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartNamespacesResult)(nil)).Elem()
}

func (o GetChartNamespacesResultOutput) ToGetChartNamespacesResultOutput() GetChartNamespacesResultOutput {
	return o
}

func (o GetChartNamespacesResultOutput) ToGetChartNamespacesResultOutputWithContext(ctx context.Context) GetChartNamespacesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetChartNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetChartNamespacesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetChartNamespacesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetChartNamespacesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetChartNamespacesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetChartNamespacesResultOutput) Namespaces() GetChartNamespacesNamespaceArrayOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) []GetChartNamespacesNamespace { return v.Namespaces }).(GetChartNamespacesNamespaceArrayOutput)
}

func (o GetChartNamespacesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetChartNamespacesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetChartNamespacesResultOutput{})
}
