// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetAliasesAlias struct {
	// The unique identifier of the alias.
	AliasName string `pulumi:"aliasName"`
	// ID of the alias. The value is same as KMS alias_name.
	Id string `pulumi:"id"`
	// ID of the key.
	KeyId string `pulumi:"keyId"`
}

// GetAliasesAliasInput is an input type that accepts GetAliasesAliasArgs and GetAliasesAliasOutput values.
// You can construct a concrete instance of `GetAliasesAliasInput` via:
//
//          GetAliasesAliasArgs{...}
type GetAliasesAliasInput interface {
	pulumi.Input

	ToGetAliasesAliasOutput() GetAliasesAliasOutput
	ToGetAliasesAliasOutputWithContext(context.Context) GetAliasesAliasOutput
}

type GetAliasesAliasArgs struct {
	// The unique identifier of the alias.
	AliasName pulumi.StringInput `pulumi:"aliasName"`
	// ID of the alias. The value is same as KMS alias_name.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetAliasesAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAliasesAlias)(nil)).Elem()
}

func (i GetAliasesAliasArgs) ToGetAliasesAliasOutput() GetAliasesAliasOutput {
	return i.ToGetAliasesAliasOutputWithContext(context.Background())
}

func (i GetAliasesAliasArgs) ToGetAliasesAliasOutputWithContext(ctx context.Context) GetAliasesAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAliasesAliasOutput)
}

// GetAliasesAliasArrayInput is an input type that accepts GetAliasesAliasArray and GetAliasesAliasArrayOutput values.
// You can construct a concrete instance of `GetAliasesAliasArrayInput` via:
//
//          GetAliasesAliasArray{ GetAliasesAliasArgs{...} }
type GetAliasesAliasArrayInput interface {
	pulumi.Input

	ToGetAliasesAliasArrayOutput() GetAliasesAliasArrayOutput
	ToGetAliasesAliasArrayOutputWithContext(context.Context) GetAliasesAliasArrayOutput
}

type GetAliasesAliasArray []GetAliasesAliasInput

func (GetAliasesAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAliasesAlias)(nil)).Elem()
}

func (i GetAliasesAliasArray) ToGetAliasesAliasArrayOutput() GetAliasesAliasArrayOutput {
	return i.ToGetAliasesAliasArrayOutputWithContext(context.Background())
}

func (i GetAliasesAliasArray) ToGetAliasesAliasArrayOutputWithContext(ctx context.Context) GetAliasesAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAliasesAliasArrayOutput)
}

type GetAliasesAliasOutput struct{ *pulumi.OutputState }

func (GetAliasesAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAliasesAlias)(nil)).Elem()
}

func (o GetAliasesAliasOutput) ToGetAliasesAliasOutput() GetAliasesAliasOutput {
	return o
}

func (o GetAliasesAliasOutput) ToGetAliasesAliasOutputWithContext(ctx context.Context) GetAliasesAliasOutput {
	return o
}

// The unique identifier of the alias.
func (o GetAliasesAliasOutput) AliasName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAliasesAlias) string { return v.AliasName }).(pulumi.StringOutput)
}

// ID of the alias. The value is same as KMS alias_name.
func (o GetAliasesAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAliasesAlias) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the key.
func (o GetAliasesAliasOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAliasesAlias) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetAliasesAliasArrayOutput struct{ *pulumi.OutputState }

func (GetAliasesAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAliasesAlias)(nil)).Elem()
}

func (o GetAliasesAliasArrayOutput) ToGetAliasesAliasArrayOutput() GetAliasesAliasArrayOutput {
	return o
}

func (o GetAliasesAliasArrayOutput) ToGetAliasesAliasArrayOutputWithContext(ctx context.Context) GetAliasesAliasArrayOutput {
	return o
}

func (o GetAliasesAliasArrayOutput) Index(i pulumi.IntInput) GetAliasesAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAliasesAlias {
		return vs[0].([]GetAliasesAlias)[vs[1].(int)]
	}).(GetAliasesAliasOutput)
}

type GetKeyVersionsVersion struct {
	// Date and time when the key version was created (UTC time).
	CreateTime string `pulumi:"createTime"`
	// (Removed from v1.124.4) It has been removed and using `createTime` instead.
	CreationDate string `pulumi:"creationDate"`
	// ID of the KMS KeyVersion resource.
	Id string `pulumi:"id"`
	// The id of kms key.
	KeyId string `pulumi:"keyId"`
	// ID of the key version.
	KeyVersionId string `pulumi:"keyVersionId"`
}

// GetKeyVersionsVersionInput is an input type that accepts GetKeyVersionsVersionArgs and GetKeyVersionsVersionOutput values.
// You can construct a concrete instance of `GetKeyVersionsVersionInput` via:
//
//          GetKeyVersionsVersionArgs{...}
type GetKeyVersionsVersionInput interface {
	pulumi.Input

	ToGetKeyVersionsVersionOutput() GetKeyVersionsVersionOutput
	ToGetKeyVersionsVersionOutputWithContext(context.Context) GetKeyVersionsVersionOutput
}

type GetKeyVersionsVersionArgs struct {
	// Date and time when the key version was created (UTC time).
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// (Removed from v1.124.4) It has been removed and using `createTime` instead.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// ID of the KMS KeyVersion resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of kms key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// ID of the key version.
	KeyVersionId pulumi.StringInput `pulumi:"keyVersionId"`
}

func (GetKeyVersionsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsVersion)(nil)).Elem()
}

func (i GetKeyVersionsVersionArgs) ToGetKeyVersionsVersionOutput() GetKeyVersionsVersionOutput {
	return i.ToGetKeyVersionsVersionOutputWithContext(context.Background())
}

func (i GetKeyVersionsVersionArgs) ToGetKeyVersionsVersionOutputWithContext(ctx context.Context) GetKeyVersionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsVersionOutput)
}

// GetKeyVersionsVersionArrayInput is an input type that accepts GetKeyVersionsVersionArray and GetKeyVersionsVersionArrayOutput values.
// You can construct a concrete instance of `GetKeyVersionsVersionArrayInput` via:
//
//          GetKeyVersionsVersionArray{ GetKeyVersionsVersionArgs{...} }
type GetKeyVersionsVersionArrayInput interface {
	pulumi.Input

	ToGetKeyVersionsVersionArrayOutput() GetKeyVersionsVersionArrayOutput
	ToGetKeyVersionsVersionArrayOutputWithContext(context.Context) GetKeyVersionsVersionArrayOutput
}

type GetKeyVersionsVersionArray []GetKeyVersionsVersionInput

func (GetKeyVersionsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsVersion)(nil)).Elem()
}

func (i GetKeyVersionsVersionArray) ToGetKeyVersionsVersionArrayOutput() GetKeyVersionsVersionArrayOutput {
	return i.ToGetKeyVersionsVersionArrayOutputWithContext(context.Background())
}

func (i GetKeyVersionsVersionArray) ToGetKeyVersionsVersionArrayOutputWithContext(ctx context.Context) GetKeyVersionsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVersionsVersionArrayOutput)
}

type GetKeyVersionsVersionOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVersionsVersion)(nil)).Elem()
}

func (o GetKeyVersionsVersionOutput) ToGetKeyVersionsVersionOutput() GetKeyVersionsVersionOutput {
	return o
}

func (o GetKeyVersionsVersionOutput) ToGetKeyVersionsVersionOutputWithContext(ctx context.Context) GetKeyVersionsVersionOutput {
	return o
}

// Date and time when the key version was created (UTC time).
func (o GetKeyVersionsVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsVersion) string { return v.CreateTime }).(pulumi.StringOutput)
}

// (Removed from v1.124.4) It has been removed and using `createTime` instead.
func (o GetKeyVersionsVersionOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsVersion) string { return v.CreationDate }).(pulumi.StringOutput)
}

// ID of the KMS KeyVersion resource.
func (o GetKeyVersionsVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsVersion) string { return v.Id }).(pulumi.StringOutput)
}

// The id of kms key.
func (o GetKeyVersionsVersionOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsVersion) string { return v.KeyId }).(pulumi.StringOutput)
}

// ID of the key version.
func (o GetKeyVersionsVersionOutput) KeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyVersionsVersion) string { return v.KeyVersionId }).(pulumi.StringOutput)
}

type GetKeyVersionsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetKeyVersionsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVersionsVersion)(nil)).Elem()
}

func (o GetKeyVersionsVersionArrayOutput) ToGetKeyVersionsVersionArrayOutput() GetKeyVersionsVersionArrayOutput {
	return o
}

func (o GetKeyVersionsVersionArrayOutput) ToGetKeyVersionsVersionArrayOutputWithContext(ctx context.Context) GetKeyVersionsVersionArrayOutput {
	return o
}

func (o GetKeyVersionsVersionArrayOutput) Index(i pulumi.IntInput) GetKeyVersionsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyVersionsVersion {
		return vs[0].([]GetKeyVersionsVersion)[vs[1].(int)]
	}).(GetKeyVersionsVersionOutput)
}

type GetKeysKey struct {
	// The Alibaba Cloud Resource Name (ARN) of the key.
	Arn               string `pulumi:"arn"`
	AutomaticRotation string `pulumi:"automaticRotation"`
	// Creation date of key.
	CreationDate string `pulumi:"creationDate"`
	// The owner of the key.
	// * `automaticRotation` -(Available in 1.123.1+) Specifies whether to enable automatic key rotation.
	// * `keyId` -(Available in 1.123.1+)  ID of the key.
	// * `keySpec` -(Available in 1.123.1+)  The type of the CMK.
	// * `keyUsage` -(Available in 1.123.1+)  The usage of CMK.
	// * `lastRotationDate` -(Available in 1.123.1+)  The date and time the last rotation was performed.
	// * `materialExpireTime` -(Available in 1.123.1+)  The time and date the key material for the CMK expires.
	// * `nextRotationDate` -(Available in 1.123.1+)  The time the next rotation is scheduled for execution.
	// * `origin` -(Available in 1.123.1+)  The source of the key material for the CMK.
	// * `protectionLevel` -(Available in 1.123.1+)  The protection level of the CMK.
	// * `rotationInterval` -(Available in 1.123.1+)  The period of automatic key rotation.
	// * `primaryKeyVersion` -(Available in 1.123.1+)  The ID of the current primary key version of the symmetric CMK.
	Creator string `pulumi:"creator"`
	// Deletion date of key.
	DeleteDate string `pulumi:"deleteDate"`
	// Description of the key.
	Description string `pulumi:"description"`
	// ID of the key.
	Id                 string `pulumi:"id"`
	KeyId              string `pulumi:"keyId"`
	KeySpec            string `pulumi:"keySpec"`
	KeyUsage           string `pulumi:"keyUsage"`
	LastRotationDate   string `pulumi:"lastRotationDate"`
	MaterialExpireTime string `pulumi:"materialExpireTime"`
	NextRotationDate   string `pulumi:"nextRotationDate"`
	Origin             string `pulumi:"origin"`
	PrimaryKeyVersion  string `pulumi:"primaryKeyVersion"`
	ProtectionLevel    string `pulumi:"protectionLevel"`
	RotationInterval   string `pulumi:"rotationInterval"`
	// Filter the results by status of the KMS keys. Valid values: `Enabled`, `Disabled`, `PendingDeletion`.
	Status string `pulumi:"status"`
}

// GetKeysKeyInput is an input type that accepts GetKeysKeyArgs and GetKeysKeyOutput values.
// You can construct a concrete instance of `GetKeysKeyInput` via:
//
//          GetKeysKeyArgs{...}
type GetKeysKeyInput interface {
	pulumi.Input

	ToGetKeysKeyOutput() GetKeysKeyOutput
	ToGetKeysKeyOutputWithContext(context.Context) GetKeysKeyOutput
}

type GetKeysKeyArgs struct {
	// The Alibaba Cloud Resource Name (ARN) of the key.
	Arn               pulumi.StringInput `pulumi:"arn"`
	AutomaticRotation pulumi.StringInput `pulumi:"automaticRotation"`
	// Creation date of key.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The owner of the key.
	// * `automaticRotation` -(Available in 1.123.1+) Specifies whether to enable automatic key rotation.
	// * `keyId` -(Available in 1.123.1+)  ID of the key.
	// * `keySpec` -(Available in 1.123.1+)  The type of the CMK.
	// * `keyUsage` -(Available in 1.123.1+)  The usage of CMK.
	// * `lastRotationDate` -(Available in 1.123.1+)  The date and time the last rotation was performed.
	// * `materialExpireTime` -(Available in 1.123.1+)  The time and date the key material for the CMK expires.
	// * `nextRotationDate` -(Available in 1.123.1+)  The time the next rotation is scheduled for execution.
	// * `origin` -(Available in 1.123.1+)  The source of the key material for the CMK.
	// * `protectionLevel` -(Available in 1.123.1+)  The protection level of the CMK.
	// * `rotationInterval` -(Available in 1.123.1+)  The period of automatic key rotation.
	// * `primaryKeyVersion` -(Available in 1.123.1+)  The ID of the current primary key version of the symmetric CMK.
	Creator pulumi.StringInput `pulumi:"creator"`
	// Deletion date of key.
	DeleteDate pulumi.StringInput `pulumi:"deleteDate"`
	// Description of the key.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the key.
	Id                 pulumi.StringInput `pulumi:"id"`
	KeyId              pulumi.StringInput `pulumi:"keyId"`
	KeySpec            pulumi.StringInput `pulumi:"keySpec"`
	KeyUsage           pulumi.StringInput `pulumi:"keyUsage"`
	LastRotationDate   pulumi.StringInput `pulumi:"lastRotationDate"`
	MaterialExpireTime pulumi.StringInput `pulumi:"materialExpireTime"`
	NextRotationDate   pulumi.StringInput `pulumi:"nextRotationDate"`
	Origin             pulumi.StringInput `pulumi:"origin"`
	PrimaryKeyVersion  pulumi.StringInput `pulumi:"primaryKeyVersion"`
	ProtectionLevel    pulumi.StringInput `pulumi:"protectionLevel"`
	RotationInterval   pulumi.StringInput `pulumi:"rotationInterval"`
	// Filter the results by status of the KMS keys. Valid values: `Enabled`, `Disabled`, `PendingDeletion`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetKeysKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKey)(nil)).Elem()
}

func (i GetKeysKeyArgs) ToGetKeysKeyOutput() GetKeysKeyOutput {
	return i.ToGetKeysKeyOutputWithContext(context.Background())
}

func (i GetKeysKeyArgs) ToGetKeysKeyOutputWithContext(ctx context.Context) GetKeysKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyOutput)
}

// GetKeysKeyArrayInput is an input type that accepts GetKeysKeyArray and GetKeysKeyArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyArrayInput` via:
//
//          GetKeysKeyArray{ GetKeysKeyArgs{...} }
type GetKeysKeyArrayInput interface {
	pulumi.Input

	ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput
	ToGetKeysKeyArrayOutputWithContext(context.Context) GetKeysKeyArrayOutput
}

type GetKeysKeyArray []GetKeysKeyInput

func (GetKeysKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKey)(nil)).Elem()
}

func (i GetKeysKeyArray) ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput {
	return i.ToGetKeysKeyArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyArray) ToGetKeysKeyArrayOutputWithContext(ctx context.Context) GetKeysKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyArrayOutput)
}

type GetKeysKeyOutput struct{ *pulumi.OutputState }

func (GetKeysKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKey)(nil)).Elem()
}

func (o GetKeysKeyOutput) ToGetKeysKeyOutput() GetKeysKeyOutput {
	return o
}

func (o GetKeysKeyOutput) ToGetKeysKeyOutputWithContext(ctx context.Context) GetKeysKeyOutput {
	return o
}

// The Alibaba Cloud Resource Name (ARN) of the key.
func (o GetKeysKeyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) AutomaticRotation() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.AutomaticRotation }).(pulumi.StringOutput)
}

// Creation date of key.
func (o GetKeysKeyOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The owner of the key.
// * `automaticRotation` -(Available in 1.123.1+) Specifies whether to enable automatic key rotation.
// * `keyId` -(Available in 1.123.1+)  ID of the key.
// * `keySpec` -(Available in 1.123.1+)  The type of the CMK.
// * `keyUsage` -(Available in 1.123.1+)  The usage of CMK.
// * `lastRotationDate` -(Available in 1.123.1+)  The date and time the last rotation was performed.
// * `materialExpireTime` -(Available in 1.123.1+)  The time and date the key material for the CMK expires.
// * `nextRotationDate` -(Available in 1.123.1+)  The time the next rotation is scheduled for execution.
// * `origin` -(Available in 1.123.1+)  The source of the key material for the CMK.
// * `protectionLevel` -(Available in 1.123.1+)  The protection level of the CMK.
// * `rotationInterval` -(Available in 1.123.1+)  The period of automatic key rotation.
// * `primaryKeyVersion` -(Available in 1.123.1+)  The ID of the current primary key version of the symmetric CMK.
func (o GetKeysKeyOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Creator }).(pulumi.StringOutput)
}

// Deletion date of key.
func (o GetKeysKeyOutput) DeleteDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.DeleteDate }).(pulumi.StringOutput)
}

// Description of the key.
func (o GetKeysKeyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the key.
func (o GetKeysKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) KeySpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.KeySpec }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) KeyUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.KeyUsage }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) LastRotationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.LastRotationDate }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) MaterialExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.MaterialExpireTime }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) NextRotationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.NextRotationDate }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Origin }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) PrimaryKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.PrimaryKeyVersion }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) ProtectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.ProtectionLevel }).(pulumi.StringOutput)
}

func (o GetKeysKeyOutput) RotationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.RotationInterval }).(pulumi.StringOutput)
}

// Filter the results by status of the KMS keys. Valid values: `Enabled`, `Disabled`, `PendingDeletion`.
func (o GetKeysKeyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Status }).(pulumi.StringOutput)
}

type GetKeysKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKey)(nil)).Elem()
}

func (o GetKeysKeyArrayOutput) ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput {
	return o
}

func (o GetKeysKeyArrayOutput) ToGetKeysKeyArrayOutputWithContext(ctx context.Context) GetKeysKeyArrayOutput {
	return o
}

func (o GetKeysKeyArrayOutput) Index(i pulumi.IntInput) GetKeysKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKey {
		return vs[0].([]GetKeysKey)[vs[1].(int)]
	}).(GetKeysKeyOutput)
}

type GetSecretVersionsVersion struct {
	// The secret value. Secrets Manager decrypts the stored secret value in ciphertext and returns it. (Returned when `enableDetails` is true).
	SecretData string `pulumi:"secretData"`
	// The type of the secret value. (Returned when `enableDetails` is true).
	SecretDataType string `pulumi:"secretDataType"`
	// The name of the secret.
	SecretName string `pulumi:"secretName"`
	// The version number of the secret value.
	VersionId string `pulumi:"versionId"`
	// Stage labels that mark the secret version.
	VersionStages []string `pulumi:"versionStages"`
}

// GetSecretVersionsVersionInput is an input type that accepts GetSecretVersionsVersionArgs and GetSecretVersionsVersionOutput values.
// You can construct a concrete instance of `GetSecretVersionsVersionInput` via:
//
//          GetSecretVersionsVersionArgs{...}
type GetSecretVersionsVersionInput interface {
	pulumi.Input

	ToGetSecretVersionsVersionOutput() GetSecretVersionsVersionOutput
	ToGetSecretVersionsVersionOutputWithContext(context.Context) GetSecretVersionsVersionOutput
}

type GetSecretVersionsVersionArgs struct {
	// The secret value. Secrets Manager decrypts the stored secret value in ciphertext and returns it. (Returned when `enableDetails` is true).
	SecretData pulumi.StringInput `pulumi:"secretData"`
	// The type of the secret value. (Returned when `enableDetails` is true).
	SecretDataType pulumi.StringInput `pulumi:"secretDataType"`
	// The name of the secret.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The version number of the secret value.
	VersionId pulumi.StringInput `pulumi:"versionId"`
	// Stage labels that mark the secret version.
	VersionStages pulumi.StringArrayInput `pulumi:"versionStages"`
}

func (GetSecretVersionsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionsVersion)(nil)).Elem()
}

func (i GetSecretVersionsVersionArgs) ToGetSecretVersionsVersionOutput() GetSecretVersionsVersionOutput {
	return i.ToGetSecretVersionsVersionOutputWithContext(context.Background())
}

func (i GetSecretVersionsVersionArgs) ToGetSecretVersionsVersionOutputWithContext(ctx context.Context) GetSecretVersionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretVersionsVersionOutput)
}

// GetSecretVersionsVersionArrayInput is an input type that accepts GetSecretVersionsVersionArray and GetSecretVersionsVersionArrayOutput values.
// You can construct a concrete instance of `GetSecretVersionsVersionArrayInput` via:
//
//          GetSecretVersionsVersionArray{ GetSecretVersionsVersionArgs{...} }
type GetSecretVersionsVersionArrayInput interface {
	pulumi.Input

	ToGetSecretVersionsVersionArrayOutput() GetSecretVersionsVersionArrayOutput
	ToGetSecretVersionsVersionArrayOutputWithContext(context.Context) GetSecretVersionsVersionArrayOutput
}

type GetSecretVersionsVersionArray []GetSecretVersionsVersionInput

func (GetSecretVersionsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretVersionsVersion)(nil)).Elem()
}

func (i GetSecretVersionsVersionArray) ToGetSecretVersionsVersionArrayOutput() GetSecretVersionsVersionArrayOutput {
	return i.ToGetSecretVersionsVersionArrayOutputWithContext(context.Background())
}

func (i GetSecretVersionsVersionArray) ToGetSecretVersionsVersionArrayOutputWithContext(ctx context.Context) GetSecretVersionsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretVersionsVersionArrayOutput)
}

type GetSecretVersionsVersionOutput struct{ *pulumi.OutputState }

func (GetSecretVersionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionsVersion)(nil)).Elem()
}

func (o GetSecretVersionsVersionOutput) ToGetSecretVersionsVersionOutput() GetSecretVersionsVersionOutput {
	return o
}

func (o GetSecretVersionsVersionOutput) ToGetSecretVersionsVersionOutputWithContext(ctx context.Context) GetSecretVersionsVersionOutput {
	return o
}

// The secret value. Secrets Manager decrypts the stored secret value in ciphertext and returns it. (Returned when `enableDetails` is true).
func (o GetSecretVersionsVersionOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsVersion) string { return v.SecretData }).(pulumi.StringOutput)
}

// The type of the secret value. (Returned when `enableDetails` is true).
func (o GetSecretVersionsVersionOutput) SecretDataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsVersion) string { return v.SecretDataType }).(pulumi.StringOutput)
}

// The name of the secret.
func (o GetSecretVersionsVersionOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsVersion) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version number of the secret value.
func (o GetSecretVersionsVersionOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsVersion) string { return v.VersionId }).(pulumi.StringOutput)
}

// Stage labels that mark the secret version.
func (o GetSecretVersionsVersionOutput) VersionStages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretVersionsVersion) []string { return v.VersionStages }).(pulumi.StringArrayOutput)
}

type GetSecretVersionsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetSecretVersionsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretVersionsVersion)(nil)).Elem()
}

func (o GetSecretVersionsVersionArrayOutput) ToGetSecretVersionsVersionArrayOutput() GetSecretVersionsVersionArrayOutput {
	return o
}

func (o GetSecretVersionsVersionArrayOutput) ToGetSecretVersionsVersionArrayOutputWithContext(ctx context.Context) GetSecretVersionsVersionArrayOutput {
	return o
}

func (o GetSecretVersionsVersionArrayOutput) Index(i pulumi.IntInput) GetSecretVersionsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretVersionsVersion {
		return vs[0].([]GetSecretVersionsVersion)[vs[1].(int)]
	}).(GetSecretVersionsVersionOutput)
}

type GetSecretsSecret struct {
	// (Available in 1.124.0+) A mapping of tags to assign to the resource.
	Arn string `pulumi:"arn"`
	// (Available in 1.124.0+)  The description of the secret.
	Description string `pulumi:"description"`
	// (Available in 1.124.0+)  The ID of the KMS CMK that is used to encrypt the secret value.
	EncryptionKeyId string `pulumi:"encryptionKeyId"`
	// ID of the Kms Secret. The value is same as KMS secret_name.
	Id string `pulumi:"id"`
	// Schedule deletion time.
	PlannedDeleteTime string `pulumi:"plannedDeleteTime"`
	// (Available in 1.124.0+)  The value of the secret that you want to create.
	SecretData string `pulumi:"secretData"`
	// (Available in 1.124.0+)  The type of the secret data value.
	SecretDataType string `pulumi:"secretDataType"`
	// Name of the KMS Secret.
	SecretName string `pulumi:"secretName"`
	// (Available in 1.124.0+)  The type of the secret.
	SecretType string `pulumi:"secretType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// (Available in 1.124.0+)  The version number of the initial version.
	VersionId string `pulumi:"versionId"`
	// (Available in 1.124.0+)  The stage labels that mark the new secret version.
	VersionStages []string `pulumi:"versionStages"`
}

// GetSecretsSecretInput is an input type that accepts GetSecretsSecretArgs and GetSecretsSecretOutput values.
// You can construct a concrete instance of `GetSecretsSecretInput` via:
//
//          GetSecretsSecretArgs{...}
type GetSecretsSecretInput interface {
	pulumi.Input

	ToGetSecretsSecretOutput() GetSecretsSecretOutput
	ToGetSecretsSecretOutputWithContext(context.Context) GetSecretsSecretOutput
}

type GetSecretsSecretArgs struct {
	// (Available in 1.124.0+) A mapping of tags to assign to the resource.
	Arn pulumi.StringInput `pulumi:"arn"`
	// (Available in 1.124.0+)  The description of the secret.
	Description pulumi.StringInput `pulumi:"description"`
	// (Available in 1.124.0+)  The ID of the KMS CMK that is used to encrypt the secret value.
	EncryptionKeyId pulumi.StringInput `pulumi:"encryptionKeyId"`
	// ID of the Kms Secret. The value is same as KMS secret_name.
	Id pulumi.StringInput `pulumi:"id"`
	// Schedule deletion time.
	PlannedDeleteTime pulumi.StringInput `pulumi:"plannedDeleteTime"`
	// (Available in 1.124.0+)  The value of the secret that you want to create.
	SecretData pulumi.StringInput `pulumi:"secretData"`
	// (Available in 1.124.0+)  The type of the secret data value.
	SecretDataType pulumi.StringInput `pulumi:"secretDataType"`
	// Name of the KMS Secret.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// (Available in 1.124.0+)  The type of the secret.
	SecretType pulumi.StringInput `pulumi:"secretType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// (Available in 1.124.0+)  The version number of the initial version.
	VersionId pulumi.StringInput `pulumi:"versionId"`
	// (Available in 1.124.0+)  The stage labels that mark the new secret version.
	VersionStages pulumi.StringArrayInput `pulumi:"versionStages"`
}

func (GetSecretsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecret)(nil)).Elem()
}

func (i GetSecretsSecretArgs) ToGetSecretsSecretOutput() GetSecretsSecretOutput {
	return i.ToGetSecretsSecretOutputWithContext(context.Background())
}

func (i GetSecretsSecretArgs) ToGetSecretsSecretOutputWithContext(ctx context.Context) GetSecretsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretOutput)
}

// GetSecretsSecretArrayInput is an input type that accepts GetSecretsSecretArray and GetSecretsSecretArrayOutput values.
// You can construct a concrete instance of `GetSecretsSecretArrayInput` via:
//
//          GetSecretsSecretArray{ GetSecretsSecretArgs{...} }
type GetSecretsSecretArrayInput interface {
	pulumi.Input

	ToGetSecretsSecretArrayOutput() GetSecretsSecretArrayOutput
	ToGetSecretsSecretArrayOutputWithContext(context.Context) GetSecretsSecretArrayOutput
}

type GetSecretsSecretArray []GetSecretsSecretInput

func (GetSecretsSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecret)(nil)).Elem()
}

func (i GetSecretsSecretArray) ToGetSecretsSecretArrayOutput() GetSecretsSecretArrayOutput {
	return i.ToGetSecretsSecretArrayOutputWithContext(context.Background())
}

func (i GetSecretsSecretArray) ToGetSecretsSecretArrayOutputWithContext(ctx context.Context) GetSecretsSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretArrayOutput)
}

type GetSecretsSecretOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecret)(nil)).Elem()
}

func (o GetSecretsSecretOutput) ToGetSecretsSecretOutput() GetSecretsSecretOutput {
	return o
}

func (o GetSecretsSecretOutput) ToGetSecretsSecretOutputWithContext(ctx context.Context) GetSecretsSecretOutput {
	return o
}

// (Available in 1.124.0+) A mapping of tags to assign to the resource.
func (o GetSecretsSecretOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.Arn }).(pulumi.StringOutput)
}

// (Available in 1.124.0+)  The description of the secret.
func (o GetSecretsSecretOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.Description }).(pulumi.StringOutput)
}

// (Available in 1.124.0+)  The ID of the KMS CMK that is used to encrypt the secret value.
func (o GetSecretsSecretOutput) EncryptionKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.EncryptionKeyId }).(pulumi.StringOutput)
}

// ID of the Kms Secret. The value is same as KMS secret_name.
func (o GetSecretsSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Schedule deletion time.
func (o GetSecretsSecretOutput) PlannedDeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.PlannedDeleteTime }).(pulumi.StringOutput)
}

// (Available in 1.124.0+)  The value of the secret that you want to create.
func (o GetSecretsSecretOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.SecretData }).(pulumi.StringOutput)
}

// (Available in 1.124.0+)  The type of the secret data value.
func (o GetSecretsSecretOutput) SecretDataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.SecretDataType }).(pulumi.StringOutput)
}

// Name of the KMS Secret.
func (o GetSecretsSecretOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.SecretName }).(pulumi.StringOutput)
}

// (Available in 1.124.0+)  The type of the secret.
func (o GetSecretsSecretOutput) SecretType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.SecretType }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetSecretsSecretOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretsSecret) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// (Available in 1.124.0+)  The version number of the initial version.
func (o GetSecretsSecretOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecret) string { return v.VersionId }).(pulumi.StringOutput)
}

// (Available in 1.124.0+)  The stage labels that mark the new secret version.
func (o GetSecretsSecretOutput) VersionStages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretsSecret) []string { return v.VersionStages }).(pulumi.StringArrayOutput)
}

type GetSecretsSecretArrayOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretsSecret)(nil)).Elem()
}

func (o GetSecretsSecretArrayOutput) ToGetSecretsSecretArrayOutput() GetSecretsSecretArrayOutput {
	return o
}

func (o GetSecretsSecretArrayOutput) ToGetSecretsSecretArrayOutputWithContext(ctx context.Context) GetSecretsSecretArrayOutput {
	return o
}

func (o GetSecretsSecretArrayOutput) Index(i pulumi.IntInput) GetSecretsSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretsSecret {
		return vs[0].([]GetSecretsSecret)[vs[1].(int)]
	}).(GetSecretsSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAliasesAliasInput)(nil)).Elem(), GetAliasesAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAliasesAliasArrayInput)(nil)).Elem(), GetAliasesAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsVersionInput)(nil)).Elem(), GetKeyVersionsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyVersionsVersionArrayInput)(nil)).Elem(), GetKeyVersionsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyInput)(nil)).Elem(), GetKeysKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyArrayInput)(nil)).Elem(), GetKeysKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretVersionsVersionInput)(nil)).Elem(), GetSecretVersionsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretVersionsVersionArrayInput)(nil)).Elem(), GetSecretVersionsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretInput)(nil)).Elem(), GetSecretsSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretArrayInput)(nil)).Elem(), GetSecretsSecretArray{})
	pulumi.RegisterOutputType(GetAliasesAliasOutput{})
	pulumi.RegisterOutputType(GetAliasesAliasArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsVersionOutput{})
	pulumi.RegisterOutputType(GetKeyVersionsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyOutput{})
	pulumi.RegisterOutputType(GetKeysKeyArrayOutput{})
	pulumi.RegisterOutputType(GetSecretVersionsVersionOutput{})
	pulumi.RegisterOutputType(GetSecretVersionsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretArrayOutput{})
}
