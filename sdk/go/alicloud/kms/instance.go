// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a KMS Instance resource.
//
// For information about KMS Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/zh/key-management-service/latest/kms-instance-management).
//
// > **NOTE:** Available since v1.210.0.
//
// ## Example Usage
//
// # Create a subscription kms instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/kms"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := "cn-hangzhou"
//			if param := cfg.Get("region"); param != "" {
//				region = param
//			}
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			current, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			vpc_amp_instance_example, err := vpc.NewNetwork(ctx, "vpc-amp-instance-example", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			vswitch, err := vpc.NewSwitch(ctx, "vswitch", &vpc.SwitchArgs{
//				VpcId:     vpc_amp_instance_example.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			vswitch_j, err := vpc.NewSwitch(ctx, "vswitch-j", &vpc.SwitchArgs{
//				VpcId:     vpc_amp_instance_example.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-j"),
//				CidrBlock: pulumi.String("172.16.2.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s3",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			shareVPC, err := vpc.NewNetwork(ctx, "shareVPC", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(invokeFormat.Result),
//			})
//			if err != nil {
//				return err
//			}
//			shareVswitch, err := vpc.NewSwitch(ctx, "shareVswitch", &vpc.SwitchArgs{
//				VpcId:     shareVPC.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat1, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s5",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			share_VPC2, err := vpc.NewNetwork(ctx, "share-VPC2", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(invokeFormat1.Result),
//			})
//			if err != nil {
//				return err
//			}
//			share_vswitch2, err := vpc.NewSwitch(ctx, "share-vswitch2", &vpc.SwitchArgs{
//				VpcId:     share_VPC2.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat2, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s7",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			share_VPC3, err := vpc.NewNetwork(ctx, "share-VPC3", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(invokeFormat2.Result),
//			})
//			if err != nil {
//				return err
//			}
//			share_vsw3, err := vpc.NewSwitch(ctx, "share-vsw3", &vpc.SwitchArgs{
//				VpcId:     share_VPC3.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = kms.NewInstance(ctx, "default", &kms.InstanceArgs{
//				VpcNum:         pulumi.Int(7),
//				KeyNum:         pulumi.Int(1000),
//				SecretNum:      pulumi.Int(0),
//				Spec:           pulumi.Int(1000),
//				RenewStatus:    pulumi.String("ManualRenewal"),
//				ProductVersion: pulumi.String("3"),
//				RenewPeriod:    pulumi.Int(3),
//				VpcId:          vswitch.VpcId,
//				ZoneIds: pulumi.StringArray{
//					pulumi.String("cn-hangzhou-k"),
//					pulumi.String("cn-hangzhou-j"),
//				},
//				VswitchIds: pulumi.StringArray{
//					vswitch_j.ID(),
//				},
//				BindVpcs: kms.InstanceBindVpcArray{
//					&kms.InstanceBindVpcArgs{
//						VpcId:      shareVswitch.VpcId,
//						RegionId:   pulumi.String(region),
//						VswitchId:  shareVswitch.ID(),
//						VpcOwnerId: pulumi.String(current.Id),
//					},
//					&kms.InstanceBindVpcArgs{
//						VpcId:      share_vswitch2.VpcId,
//						RegionId:   pulumi.String(region),
//						VswitchId:  share_vswitch2.ID(),
//						VpcOwnerId: pulumi.String(current.Id),
//					},
//					&kms.InstanceBindVpcArgs{
//						VpcId:      share_vsw3.VpcId,
//						RegionId:   pulumi.String(region),
//						VswitchId:  share_vsw3.ID(),
//						VpcOwnerId: pulumi.String(current.Id),
//					},
//				},
//				Log:         pulumi.String("0"),
//				Period:      pulumi.Int(1),
//				LogStorage:  pulumi.Int(0),
//				PaymentType: pulumi.String("Subscription"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// Create a pay-as-you-go kms instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/kms"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			region := "cn-hangzhou"
//			if param := cfg.Get("region"); param != "" {
//				region = param
//			}
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			current, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			vpc_amp_instance_example, err := vpc.NewNetwork(ctx, "vpc-amp-instance-example", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			vswitch, err := vpc.NewSwitch(ctx, "vswitch", &vpc.SwitchArgs{
//				VpcId:     vpc_amp_instance_example.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			vswitch_j, err := vpc.NewSwitch(ctx, "vswitch-j", &vpc.SwitchArgs{
//				VpcId:     vpc_amp_instance_example.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-j"),
//				CidrBlock: pulumi.String("172.16.2.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s3",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			shareVPC, err := vpc.NewNetwork(ctx, "shareVPC", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(invokeFormat.Result),
//			})
//			if err != nil {
//				return err
//			}
//			shareVswitch, err := vpc.NewSwitch(ctx, "shareVswitch", &vpc.SwitchArgs{
//				VpcId:     shareVPC.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat1, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s5",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			share_VPC2, err := vpc.NewNetwork(ctx, "share-VPC2", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(invokeFormat1.Result),
//			})
//			if err != nil {
//				return err
//			}
//			share_vswitch2, err := vpc.NewSwitch(ctx, "share-vswitch2", &vpc.SwitchArgs{
//				VpcId:     share_VPC2.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat2, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s7",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			share_VPC3, err := vpc.NewNetwork(ctx, "share-VPC3", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(invokeFormat2.Result),
//			})
//			if err != nil {
//				return err
//			}
//			share_vsw3, err := vpc.NewSwitch(ctx, "share-vsw3", &vpc.SwitchArgs{
//				VpcId:     share_VPC3.ID(),
//				ZoneId:    pulumi.String("cn-hangzhou-k"),
//				CidrBlock: pulumi.String("172.16.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = kms.NewInstance(ctx, "default", &kms.InstanceArgs{
//				PaymentType:    pulumi.String("PayAsYouGo"),
//				ProductVersion: pulumi.String("3"),
//				VpcId:          vswitch.VpcId,
//				ZoneIds: pulumi.StringArray{
//					vswitch.ZoneId,
//					vswitch_j.ZoneId,
//				},
//				VswitchIds: pulumi.StringArray{
//					vswitch.ID(),
//				},
//				ForceDeleteWithoutBackup: pulumi.String("true"),
//				BindVpcs: kms.InstanceBindVpcArray{
//					&kms.InstanceBindVpcArgs{
//						VpcId:      shareVswitch.VpcId,
//						RegionId:   pulumi.String(region),
//						VswitchId:  shareVswitch.ID(),
//						VpcOwnerId: pulumi.String(current.Id),
//					},
//					&kms.InstanceBindVpcArgs{
//						VpcId:      share_vswitch2.VpcId,
//						RegionId:   pulumi.String(region),
//						VswitchId:  share_vswitch2.ID(),
//						VpcOwnerId: pulumi.String(current.Id),
//					},
//					&kms.InstanceBindVpcArgs{
//						VpcId:      share_vsw3.VpcId,
//						RegionId:   pulumi.String(region),
//						VswitchId:  share_vsw3.ID(),
//						VpcOwnerId: pulumi.String(current.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// KMS Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:kms/instance:Instance example <id>
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
	BindVpcs InstanceBindVpcArrayOutput `pulumi:"bindVpcs"`
	// KMS instance certificate chain in PEM format.
	CaCertificateChainPem pulumi.StringOutput `pulumi:"caCertificateChainPem"`
	// The creation time of the resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// (Available since v1.233.1) Instance expiration time.
	EndDate pulumi.StringOutput `pulumi:"endDate"`
	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup pulumi.StringPtrOutput `pulumi:"forceDeleteWithoutBackup"`
	// The name of the resource
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
	KeyNum pulumi.IntPtrOutput `pulumi:"keyNum"`
	// Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Log pulumi.StringOutput `pulumi:"log"`
	// Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
	LogStorage pulumi.IntOutput `pulumi:"logStorage"`
	// Payment type, valid values:
	// - `Subscription`: Prepaid.
	// - `PayAsYouGo`: Postpaid.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// KMS Instance commodity type (software/hardware)
	ProductVersion pulumi.StringOutput `pulumi:"productVersion"`
	// Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewPeriod pulumi.IntPtrOutput `pulumi:"renewPeriod"`
	// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewStatus pulumi.StringOutput `pulumi:"renewStatus"`
	// Automatic renewal period unit, valid value:
	// - `M`: Month.
	// - `Y`: Year.
	RenewalPeriodUnit pulumi.StringPtrOutput `pulumi:"renewalPeriodUnit"`
	// Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
	SecretNum pulumi.IntPtrOutput `pulumi:"secretNum"`
	// The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Spec pulumi.IntPtrOutput `pulumi:"spec"`
	// Instance status.
	Status pulumi.StringOutput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	VpcNum pulumi.IntPtrOutput `pulumi:"vpcNum"`
	// Instance bind vswitches
	VswitchIds pulumi.StringArrayOutput `pulumi:"vswitchIds"`
	// zone id
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.VswitchIds == nil {
		return nil, errors.New("invalid value for required argument 'VswitchIds'")
	}
	if args.ZoneIds == nil {
		return nil, errors.New("invalid value for required argument 'ZoneIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("alicloud:kms/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("alicloud:kms/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
	BindVpcs []InstanceBindVpc `pulumi:"bindVpcs"`
	// KMS instance certificate chain in PEM format.
	CaCertificateChainPem *string `pulumi:"caCertificateChainPem"`
	// The creation time of the resource.
	CreateTime *string `pulumi:"createTime"`
	// (Available since v1.233.1) Instance expiration time.
	EndDate *string `pulumi:"endDate"`
	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup *string `pulumi:"forceDeleteWithoutBackup"`
	// The name of the resource
	InstanceName *string `pulumi:"instanceName"`
	// Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
	KeyNum *int `pulumi:"keyNum"`
	// Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Log *string `pulumi:"log"`
	// Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
	LogStorage *int `pulumi:"logStorage"`
	// Payment type, valid values:
	// - `Subscription`: Prepaid.
	// - `PayAsYouGo`: Postpaid.
	PaymentType *string `pulumi:"paymentType"`
	// Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Period *int `pulumi:"period"`
	// KMS Instance commodity type (software/hardware)
	ProductVersion *string `pulumi:"productVersion"`
	// Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewStatus *string `pulumi:"renewStatus"`
	// Automatic renewal period unit, valid value:
	// - `M`: Month.
	// - `Y`: Year.
	RenewalPeriodUnit *string `pulumi:"renewalPeriodUnit"`
	// Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
	SecretNum *int `pulumi:"secretNum"`
	// The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Spec *int `pulumi:"spec"`
	// Instance status.
	Status *string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
	VpcId *string `pulumi:"vpcId"`
	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	VpcNum *int `pulumi:"vpcNum"`
	// Instance bind vswitches
	VswitchIds []string `pulumi:"vswitchIds"`
	// zone id
	ZoneIds []string `pulumi:"zoneIds"`
}

type InstanceState struct {
	// Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
	BindVpcs InstanceBindVpcArrayInput
	// KMS instance certificate chain in PEM format.
	CaCertificateChainPem pulumi.StringPtrInput
	// The creation time of the resource.
	CreateTime pulumi.StringPtrInput
	// (Available since v1.233.1) Instance expiration time.
	EndDate pulumi.StringPtrInput
	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup pulumi.StringPtrInput
	// The name of the resource
	InstanceName pulumi.StringPtrInput
	// Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
	KeyNum pulumi.IntPtrInput
	// Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Log pulumi.StringPtrInput
	// Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
	LogStorage pulumi.IntPtrInput
	// Payment type, valid values:
	// - `Subscription`: Prepaid.
	// - `PayAsYouGo`: Postpaid.
	PaymentType pulumi.StringPtrInput
	// Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Period pulumi.IntPtrInput
	// KMS Instance commodity type (software/hardware)
	ProductVersion pulumi.StringPtrInput
	// Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewPeriod pulumi.IntPtrInput
	// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewStatus pulumi.StringPtrInput
	// Automatic renewal period unit, valid value:
	// - `M`: Month.
	// - `Y`: Year.
	RenewalPeriodUnit pulumi.StringPtrInput
	// Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
	SecretNum pulumi.IntPtrInput
	// The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Spec pulumi.IntPtrInput
	// Instance status.
	Status pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
	VpcId pulumi.StringPtrInput
	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	VpcNum pulumi.IntPtrInput
	// Instance bind vswitches
	VswitchIds pulumi.StringArrayInput
	// zone id
	ZoneIds pulumi.StringArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
	BindVpcs []InstanceBindVpc `pulumi:"bindVpcs"`
	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup *string `pulumi:"forceDeleteWithoutBackup"`
	// The name of the resource
	InstanceName *string `pulumi:"instanceName"`
	// Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
	KeyNum *int `pulumi:"keyNum"`
	// Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Log *string `pulumi:"log"`
	// Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
	LogStorage *int `pulumi:"logStorage"`
	// Payment type, valid values:
	// - `Subscription`: Prepaid.
	// - `PayAsYouGo`: Postpaid.
	PaymentType *string `pulumi:"paymentType"`
	// Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Period *int `pulumi:"period"`
	// KMS Instance commodity type (software/hardware)
	ProductVersion *string `pulumi:"productVersion"`
	// Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewStatus *string `pulumi:"renewStatus"`
	// Automatic renewal period unit, valid value:
	// - `M`: Month.
	// - `Y`: Year.
	RenewalPeriodUnit *string `pulumi:"renewalPeriodUnit"`
	// Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
	SecretNum *int `pulumi:"secretNum"`
	// The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Spec *int `pulumi:"spec"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
	VpcId string `pulumi:"vpcId"`
	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	VpcNum *int `pulumi:"vpcNum"`
	// Instance bind vswitches
	VswitchIds []string `pulumi:"vswitchIds"`
	// zone id
	ZoneIds []string `pulumi:"zoneIds"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
	BindVpcs InstanceBindVpcArrayInput
	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup pulumi.StringPtrInput
	// The name of the resource
	InstanceName pulumi.StringPtrInput
	// Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
	KeyNum pulumi.IntPtrInput
	// Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Log pulumi.StringPtrInput
	// Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
	LogStorage pulumi.IntPtrInput
	// Payment type, valid values:
	// - `Subscription`: Prepaid.
	// - `PayAsYouGo`: Postpaid.
	PaymentType pulumi.StringPtrInput
	// Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Period pulumi.IntPtrInput
	// KMS Instance commodity type (software/hardware)
	ProductVersion pulumi.StringPtrInput
	// Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewPeriod pulumi.IntPtrInput
	// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
	RenewStatus pulumi.StringPtrInput
	// Automatic renewal period unit, valid value:
	// - `M`: Month.
	// - `Y`: Year.
	RenewalPeriodUnit pulumi.StringPtrInput
	// Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
	SecretNum pulumi.IntPtrInput
	// The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	Spec pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
	VpcId pulumi.StringInput
	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
	VpcNum pulumi.IntPtrInput
	// Instance bind vswitches
	VswitchIds pulumi.StringArrayInput
	// zone id
	ZoneIds pulumi.StringArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Aucillary VPCs used to access this KMS instance See `bindVpcs` below.
func (o InstanceOutput) BindVpcs() InstanceBindVpcArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceBindVpcArrayOutput { return v.BindVpcs }).(InstanceBindVpcArrayOutput)
}

// KMS instance certificate chain in PEM format.
func (o InstanceOutput) CaCertificateChainPem() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CaCertificateChainPem }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// (Available since v1.233.1) Instance expiration time.
func (o InstanceOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EndDate }).(pulumi.StringOutput)
}

// Whether to force deletion even without backup.
func (o InstanceOutput) ForceDeleteWithoutBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ForceDeleteWithoutBackup }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// Maximum number of stored keys. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) KeyNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.KeyNum }).(pulumi.IntPtrOutput)
}

// Instance Audit Log Switch. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

// Instance log capacity. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) LogStorage() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.LogStorage }).(pulumi.IntOutput)
}

// Payment type, valid values:
// - `Subscription`: Prepaid.
// - `PayAsYouGo`: Postpaid.
func (o InstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Purchase cycle, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// KMS Instance commodity type (software/hardware)
func (o InstanceOutput) ProductVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProductVersion }).(pulumi.StringOutput)
}

// Automatic renewal period, in months. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) RenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.RenewPeriod }).(pulumi.IntPtrOutput)
}

// Renewal options. Valid values: `AutoRenewal`, `ManualRenewal`. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) RenewStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.RenewStatus }).(pulumi.StringOutput)
}

// Automatic renewal period unit, valid value:
// - `M`: Month.
// - `Y`: Year.
func (o InstanceOutput) RenewalPeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.RenewalPeriodUnit }).(pulumi.StringPtrOutput)
}

// Maximum number of Secrets. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) SecretNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.SecretNum }).(pulumi.IntPtrOutput)
}

// The computation performance level of the KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) Spec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Spec }).(pulumi.IntPtrOutput)
}

// Instance status.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the virtual private cloud (VPC) that is associated with the KMS instance.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute `paymentType` is `Subscription`.
func (o InstanceOutput) VpcNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.VpcNum }).(pulumi.IntPtrOutput)
}

// Instance bind vswitches
func (o InstanceOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

// zone id
func (o InstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
