// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/kms"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		key, err := kms.NewKey(ctx, "key", &kms.KeyArgs{
// 			Description: pulumi.String("example key"),
// 			IsEnabled:   pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		encrypted, err := kms.NewCiphertext(ctx, "encrypted", &kms.CiphertextArgs{
// 			KeyId:     key.ID(),
// 			Plaintext: pulumi.String("example"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		plaintext := kms.GetPlaintextOutput(ctx, kms.GetPlaintextOutputArgs{
// 			CiphertextBlob: encrypted.CiphertextBlob,
// 		}, nil)
// 		ctx.Export("decrypted", plaintext.ApplyT(func(plaintext kms.GetPlaintextResult) (string, error) {
// 			return plaintext.Plaintext, nil
// 		}).(pulumi.StringOutput))
// 		return nil
// 	})
// }
// ```
func GetPlaintext(ctx *pulumi.Context, args *GetPlaintextArgs, opts ...pulumi.InvokeOption) (*GetPlaintextResult, error) {
	var rv GetPlaintextResult
	err := ctx.Invoke("alicloud:kms/getPlaintext:getPlaintext", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlaintext.
type GetPlaintextArgs struct {
	// The ciphertext to be decrypted.
	CiphertextBlob string `pulumi:"ciphertextBlob"`
	// -
	// (Optional) The Encryption context. If you specify this parameter in the Encrypt or GenerateDataKey API operation, it is also required when you call the Decrypt API operation. For more information, see [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm).
	EncryptionContext map[string]string `pulumi:"encryptionContext"`
}

// A collection of values returned by getPlaintext.
type GetPlaintextResult struct {
	CiphertextBlob    string            `pulumi:"ciphertextBlob"`
	EncryptionContext map[string]string `pulumi:"encryptionContext"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The globally unique ID of the CMK. It is the ID of the CMK used to decrypt ciphertext.
	KeyId string `pulumi:"keyId"`
	// The decrypted plaintext.
	Plaintext string `pulumi:"plaintext"`
}

func GetPlaintextOutput(ctx *pulumi.Context, args GetPlaintextOutputArgs, opts ...pulumi.InvokeOption) GetPlaintextResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPlaintextResult, error) {
			args := v.(GetPlaintextArgs)
			r, err := GetPlaintext(ctx, &args, opts...)
			var s GetPlaintextResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPlaintextResultOutput)
}

// A collection of arguments for invoking getPlaintext.
type GetPlaintextOutputArgs struct {
	// The ciphertext to be decrypted.
	CiphertextBlob pulumi.StringInput `pulumi:"ciphertextBlob"`
	// -
	// (Optional) The Encryption context. If you specify this parameter in the Encrypt or GenerateDataKey API operation, it is also required when you call the Decrypt API operation. For more information, see [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm).
	EncryptionContext pulumi.StringMapInput `pulumi:"encryptionContext"`
}

func (GetPlaintextOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlaintextArgs)(nil)).Elem()
}

// A collection of values returned by getPlaintext.
type GetPlaintextResultOutput struct{ *pulumi.OutputState }

func (GetPlaintextResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlaintextResult)(nil)).Elem()
}

func (o GetPlaintextResultOutput) ToGetPlaintextResultOutput() GetPlaintextResultOutput {
	return o
}

func (o GetPlaintextResultOutput) ToGetPlaintextResultOutputWithContext(ctx context.Context) GetPlaintextResultOutput {
	return o
}

func (o GetPlaintextResultOutput) CiphertextBlob() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlaintextResult) string { return v.CiphertextBlob }).(pulumi.StringOutput)
}

func (o GetPlaintextResultOutput) EncryptionContext() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPlaintextResult) map[string]string { return v.EncryptionContext }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPlaintextResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlaintextResult) string { return v.Id }).(pulumi.StringOutput)
}

// The globally unique ID of the CMK. It is the ID of the CMK used to decrypt ciphertext.
func (o GetPlaintextResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlaintextResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The decrypted plaintext.
func (o GetPlaintextResultOutput) Plaintext() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlaintextResult) string { return v.Plaintext }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlaintextResultOutput{})
}
