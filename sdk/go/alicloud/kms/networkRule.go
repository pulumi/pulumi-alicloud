// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a KMS Network Rule resource. Network rules that can be bound by Application Access Point's policies.
//
// For information about KMS Network Rule and how to use it, see [What is Network Rule](https://www.alibabacloud.com/help/zh/key-management-service/latest/api-createnetworkrule).
//
// > **NOTE:** Available since v1.210.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := kms.NewNetworkRule(ctx, "default", &kms.NetworkRuleArgs{
//				Description: pulumi.String("example-description"),
//				SourcePrivateIps: pulumi.StringArray{
//					pulumi.String("10.10.10.10/24"),
//					pulumi.String("192.168.17.13"),
//					pulumi.String("100.177.24.254"),
//				},
//				NetworkRuleName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// KMS Network Rule can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:kms/networkRule:NetworkRule example <id>
//
// ```
type NetworkRule struct {
	pulumi.CustomResourceState

	// Description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Network Rule Name.
	NetworkRuleName pulumi.StringOutput `pulumi:"networkRuleName"`
	// Allowed private network addresses.
	SourcePrivateIps pulumi.StringArrayOutput `pulumi:"sourcePrivateIps"`
}

// NewNetworkRule registers a new resource with the given unique name, arguments, and options.
func NewNetworkRule(ctx *pulumi.Context,
	name string, args *NetworkRuleArgs, opts ...pulumi.ResourceOption) (*NetworkRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourcePrivateIps == nil {
		return nil, errors.New("invalid value for required argument 'SourcePrivateIps'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkRule
	err := ctx.RegisterResource("alicloud:kms/networkRule:NetworkRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkRule gets an existing NetworkRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkRuleState, opts ...pulumi.ResourceOption) (*NetworkRule, error) {
	var resource NetworkRule
	err := ctx.ReadResource("alicloud:kms/networkRule:NetworkRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkRule resources.
type networkRuleState struct {
	// Description.
	Description *string `pulumi:"description"`
	// Network Rule Name.
	NetworkRuleName *string `pulumi:"networkRuleName"`
	// Allowed private network addresses.
	SourcePrivateIps []string `pulumi:"sourcePrivateIps"`
}

type NetworkRuleState struct {
	// Description.
	Description pulumi.StringPtrInput
	// Network Rule Name.
	NetworkRuleName pulumi.StringPtrInput
	// Allowed private network addresses.
	SourcePrivateIps pulumi.StringArrayInput
}

func (NetworkRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkRuleState)(nil)).Elem()
}

type networkRuleArgs struct {
	// Description.
	Description *string `pulumi:"description"`
	// Network Rule Name.
	NetworkRuleName *string `pulumi:"networkRuleName"`
	// Allowed private network addresses.
	SourcePrivateIps []string `pulumi:"sourcePrivateIps"`
}

// The set of arguments for constructing a NetworkRule resource.
type NetworkRuleArgs struct {
	// Description.
	Description pulumi.StringPtrInput
	// Network Rule Name.
	NetworkRuleName pulumi.StringPtrInput
	// Allowed private network addresses.
	SourcePrivateIps pulumi.StringArrayInput
}

func (NetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkRuleArgs)(nil)).Elem()
}

type NetworkRuleInput interface {
	pulumi.Input

	ToNetworkRuleOutput() NetworkRuleOutput
	ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput
}

func (*NetworkRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRule)(nil)).Elem()
}

func (i *NetworkRule) ToNetworkRuleOutput() NetworkRuleOutput {
	return i.ToNetworkRuleOutputWithContext(context.Background())
}

func (i *NetworkRule) ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleOutput)
}

// NetworkRuleArrayInput is an input type that accepts NetworkRuleArray and NetworkRuleArrayOutput values.
// You can construct a concrete instance of `NetworkRuleArrayInput` via:
//
//	NetworkRuleArray{ NetworkRuleArgs{...} }
type NetworkRuleArrayInput interface {
	pulumi.Input

	ToNetworkRuleArrayOutput() NetworkRuleArrayOutput
	ToNetworkRuleArrayOutputWithContext(context.Context) NetworkRuleArrayOutput
}

type NetworkRuleArray []NetworkRuleInput

func (NetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkRule)(nil)).Elem()
}

func (i NetworkRuleArray) ToNetworkRuleArrayOutput() NetworkRuleArrayOutput {
	return i.ToNetworkRuleArrayOutputWithContext(context.Background())
}

func (i NetworkRuleArray) ToNetworkRuleArrayOutputWithContext(ctx context.Context) NetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleArrayOutput)
}

// NetworkRuleMapInput is an input type that accepts NetworkRuleMap and NetworkRuleMapOutput values.
// You can construct a concrete instance of `NetworkRuleMapInput` via:
//
//	NetworkRuleMap{ "key": NetworkRuleArgs{...} }
type NetworkRuleMapInput interface {
	pulumi.Input

	ToNetworkRuleMapOutput() NetworkRuleMapOutput
	ToNetworkRuleMapOutputWithContext(context.Context) NetworkRuleMapOutput
}

type NetworkRuleMap map[string]NetworkRuleInput

func (NetworkRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkRule)(nil)).Elem()
}

func (i NetworkRuleMap) ToNetworkRuleMapOutput() NetworkRuleMapOutput {
	return i.ToNetworkRuleMapOutputWithContext(context.Background())
}

func (i NetworkRuleMap) ToNetworkRuleMapOutputWithContext(ctx context.Context) NetworkRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleMapOutput)
}

type NetworkRuleOutput struct{ *pulumi.OutputState }

func (NetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRule)(nil)).Elem()
}

func (o NetworkRuleOutput) ToNetworkRuleOutput() NetworkRuleOutput {
	return o
}

func (o NetworkRuleOutput) ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput {
	return o
}

// Description.
func (o NetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Network Rule Name.
func (o NetworkRuleOutput) NetworkRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkRule) pulumi.StringOutput { return v.NetworkRuleName }).(pulumi.StringOutput)
}

// Allowed private network addresses.
func (o NetworkRuleOutput) SourcePrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkRule) pulumi.StringArrayOutput { return v.SourcePrivateIps }).(pulumi.StringArrayOutput)
}

type NetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkRule)(nil)).Elem()
}

func (o NetworkRuleArrayOutput) ToNetworkRuleArrayOutput() NetworkRuleArrayOutput {
	return o
}

func (o NetworkRuleArrayOutput) ToNetworkRuleArrayOutputWithContext(ctx context.Context) NetworkRuleArrayOutput {
	return o
}

func (o NetworkRuleArrayOutput) Index(i pulumi.IntInput) NetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkRule {
		return vs[0].([]*NetworkRule)[vs[1].(int)]
	}).(NetworkRuleOutput)
}

type NetworkRuleMapOutput struct{ *pulumi.OutputState }

func (NetworkRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkRule)(nil)).Elem()
}

func (o NetworkRuleMapOutput) ToNetworkRuleMapOutput() NetworkRuleMapOutput {
	return o
}

func (o NetworkRuleMapOutput) ToNetworkRuleMapOutputWithContext(ctx context.Context) NetworkRuleMapOutput {
	return o
}

func (o NetworkRuleMapOutput) MapIndex(k pulumi.StringInput) NetworkRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkRule {
		return vs[0].(map[string]*NetworkRule)[vs[1].(string)]
	}).(NetworkRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRuleInput)(nil)).Elem(), &NetworkRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRuleArrayInput)(nil)).Elem(), NetworkRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRuleMapInput)(nil)).Elem(), NetworkRuleMap{})
	pulumi.RegisterOutputType(NetworkRuleOutput{})
	pulumi.RegisterOutputType(NetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkRuleMapOutput{})
}
