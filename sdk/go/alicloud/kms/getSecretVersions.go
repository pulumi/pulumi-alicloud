// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides a list of KMS Secret Versions in an Alibaba Cloud account according to the specified filters.
//
// > **NOTE:** Available in v1.88.0+.
func GetSecretVersions(ctx *pulumi.Context, args *GetSecretVersionsArgs, opts ...pulumi.InvokeOption) (*GetSecretVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecretVersionsResult
	err := ctx.Invoke("alicloud:kms/getSecretVersions:getSecretVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretVersions.
type GetSecretVersionsArgs struct {
	// Default to false and only output `secretName`, `versionId`, `versionStages`. Set it to true can output more details.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of KMS Secret Version ids.
	Ids []string `pulumi:"ids"`
	// Specifies whether to return deprecated secret versions. Default to `false`.
	IncludeDeprecated *string `pulumi:"includeDeprecated"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The name of the secret.
	SecretName string `pulumi:"secretName"`
	// The stage of the secret version.
	VersionStage *string `pulumi:"versionStage"`
}

// A collection of values returned by getSecretVersions.
type GetSecretVersionsResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Kms Secret Version ids.
	Ids               []string `pulumi:"ids"`
	IncludeDeprecated *string  `pulumi:"includeDeprecated"`
	OutputFile        *string  `pulumi:"outputFile"`
	// The name of the secret.
	SecretName   string  `pulumi:"secretName"`
	VersionStage *string `pulumi:"versionStage"`
	// A list of KMS Secret Versions. Each element contains the following attributes:
	Versions []GetSecretVersionsVersion `pulumi:"versions"`
}

func GetSecretVersionsOutput(ctx *pulumi.Context, args GetSecretVersionsOutputArgs, opts ...pulumi.InvokeOption) GetSecretVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretVersionsResult, error) {
			args := v.(GetSecretVersionsArgs)
			r, err := GetSecretVersions(ctx, &args, opts...)
			var s GetSecretVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretVersionsResultOutput)
}

// A collection of arguments for invoking getSecretVersions.
type GetSecretVersionsOutputArgs struct {
	// Default to false and only output `secretName`, `versionId`, `versionStages`. Set it to true can output more details.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of KMS Secret Version ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Specifies whether to return deprecated secret versions. Default to `false`.
	IncludeDeprecated pulumi.StringPtrInput `pulumi:"includeDeprecated"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of the secret.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The stage of the secret version.
	VersionStage pulumi.StringPtrInput `pulumi:"versionStage"`
}

func (GetSecretVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getSecretVersions.
type GetSecretVersionsResultOutput struct{ *pulumi.OutputState }

func (GetSecretVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretVersionsResult)(nil)).Elem()
}

func (o GetSecretVersionsResultOutput) ToGetSecretVersionsResultOutput() GetSecretVersionsResultOutput {
	return o
}

func (o GetSecretVersionsResultOutput) ToGetSecretVersionsResultOutputWithContext(ctx context.Context) GetSecretVersionsResultOutput {
	return o
}

func (o GetSecretVersionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecretVersionsResult] {
	return pulumix.Output[GetSecretVersionsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretVersionsResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecretVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Kms Secret Version ids.
func (o GetSecretVersionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSecretVersionsResultOutput) IncludeDeprecated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) *string { return v.IncludeDeprecated }).(pulumi.StringPtrOutput)
}

func (o GetSecretVersionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The name of the secret.
func (o GetSecretVersionsResultOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) string { return v.SecretName }).(pulumi.StringOutput)
}

func (o GetSecretVersionsResultOutput) VersionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) *string { return v.VersionStage }).(pulumi.StringPtrOutput)
}

// A list of KMS Secret Versions. Each element contains the following attributes:
func (o GetSecretVersionsResultOutput) Versions() GetSecretVersionsVersionArrayOutput {
	return o.ApplyT(func(v GetSecretVersionsResult) []GetSecretVersionsVersion { return v.Versions }).(GetSecretVersionsVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretVersionsResultOutput{})
}
