// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eais

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstancesInstance struct {
	// The ID of the ECS instance to be bound.
	ClientInstanceId string `pulumi:"clientInstanceId"`
	// The name of the ECS instance bound to the EAIS instance.
	ClientInstanceName string `pulumi:"clientInstanceName"`
	// The type of the ECS instance bound to the EAIS instance.
	ClientInstanceType string `pulumi:"clientInstanceType"`
	// The ID of the Instance.
	Id string `pulumi:"id"`
	// The ID of the resource.
	InstanceId string `pulumi:"instanceId"`
	// The name of the resource.
	InstanceName string `pulumi:"instanceName"`
	// The type of the resource. Valid values: `eais.ei-a6.4xlarge`, `eais.ei-a6.2xlarge`, `eais.ei-a6.xlarge`, `eais.ei-a6.large`, `eais.ei-a6.medium`.
	InstanceType string `pulumi:"instanceType"`
	// The status of the resource. Valid values: `Attaching`, `Available`, `Detaching`, `InUse`, `Starting`, `Unavailable`.
	Status string `pulumi:"status"`
	// The ID of the region to which the EAIS instance belongs.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The ID of the ECS instance to be bound.
	ClientInstanceId pulumi.StringInput `pulumi:"clientInstanceId"`
	// The name of the ECS instance bound to the EAIS instance.
	ClientInstanceName pulumi.StringInput `pulumi:"clientInstanceName"`
	// The type of the ECS instance bound to the EAIS instance.
	ClientInstanceType pulumi.StringInput `pulumi:"clientInstanceType"`
	// The ID of the Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the resource.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the resource.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The type of the resource. Valid values: `eais.ei-a6.4xlarge`, `eais.ei-a6.2xlarge`, `eais.ei-a6.xlarge`, `eais.ei-a6.large`, `eais.ei-a6.medium`.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The status of the resource. Valid values: `Attaching`, `Available`, `Detaching`, `InUse`, `Starting`, `Unavailable`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the region to which the EAIS instance belongs.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The ID of the ECS instance to be bound.
func (o GetInstancesInstanceOutput) ClientInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ClientInstanceId }).(pulumi.StringOutput)
}

// The name of the ECS instance bound to the EAIS instance.
func (o GetInstancesInstanceOutput) ClientInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ClientInstanceName }).(pulumi.StringOutput)
}

// The type of the ECS instance bound to the EAIS instance.
func (o GetInstancesInstanceOutput) ClientInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ClientInstanceType }).(pulumi.StringOutput)
}

// The ID of the Instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the resource.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The type of the resource. Valid values: `eais.ei-a6.4xlarge`, `eais.ei-a6.2xlarge`, `eais.ei-a6.xlarge`, `eais.ei-a6.large`, `eais.ei-a6.medium`.
func (o GetInstancesInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `Attaching`, `Available`, `Detaching`, `InUse`, `Starting`, `Unavailable`.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the region to which the EAIS instance belongs.
func (o GetInstancesInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
}
