// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a WAF Domain resource to create domain in the Web Application Firewall.
//
// For information about WAF and how to use it, see [What is Alibaba Cloud WAF](https://www.alibabacloud.com/help/doc-detail/28517.htm).
//
// > **NOTE:** Available in 1.82.0+ .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/waf"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := waf.NewDomain(ctx, "domain", &waf.DomainArgs{
// 			ClusterType: pulumi.String("PhysicalCluster"),
// 			Domain:      pulumi.String("www.aliyun.com"),
// 			Http2Ports: pulumi.StringArray{
// 				pulumi.String("443"),
// 			},
// 			HttpPorts: pulumi.StringArray{
// 				pulumi.String("80"),
// 			},
// 			HttpToUserIp: pulumi.String("Off"),
// 			HttpsPorts: pulumi.StringArray{
// 				pulumi.String("443"),
// 			},
// 			HttpsRedirect:   pulumi.String("Off"),
// 			InstanceId:      pulumi.String("waf-123455"),
// 			IsAccessProduct: pulumi.String("On"),
// 			LoadBalancing:   pulumi.String("IpHash"),
// 			LogHeaders: waf.DomainLogHeaderArray{
// 				&waf.DomainLogHeaderArgs{
// 					Key:   pulumi.String("foo"),
// 					Value: pulumi.String("http"),
// 				},
// 			},
// 			SourceIps: pulumi.StringArray{
// 				pulumi.String("1.1.1.1"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// WAF domain can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:waf/domain:Domain domain waf-132435:www.domain.com
// ```
type Domain struct {
	pulumi.CustomResourceState

	// The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
	ClusterType pulumi.StringPtrOutput `pulumi:"clusterType"`
	// The CNAME record assigned by the WAF instance to the specified domain.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// The connection timeout for WAF exclusive clusters. Unit: seconds.
	ConnectionTime pulumi.IntPtrOutput `pulumi:"connectionTime"`
	// Field `domain` has been deprecated from version 1.94.0. Use `domainName` instead.
	//
	// Deprecated: Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The domain that you want to add to WAF.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// List of the HTTP 2.0 ports.
	Http2Ports pulumi.StringArrayOutput `pulumi:"http2Ports"`
	// List of the HTTP ports.
	HttpPorts pulumi.StringArrayOutput `pulumi:"httpPorts"`
	// Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server.
	// By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
	HttpToUserIp pulumi.StringPtrOutput `pulumi:"httpToUserIp"`
	// List of the HTTPS ports.
	HttpsPorts pulumi.StringArrayOutput `pulumi:"httpsPorts"`
	// Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
	HttpsRedirect pulumi.StringPtrOutput `pulumi:"httpsRedirect"`
	// The ID of the WAF instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
	IsAccessProduct pulumi.StringOutput `pulumi:"isAccessProduct"`
	// The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
	LoadBalancing pulumi.StringPtrOutput `pulumi:"loadBalancing"`
	// The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
	// * key: The key of label
	// * value: The value of label
	LogHeaders DomainLogHeaderArrayOutput `pulumi:"logHeaders"`
	// The read timeout of a WAF exclusive cluster. Unit: seconds.
	ReadTime pulumi.IntPtrOutput `pulumi:"readTime"`
	// The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// List of the IP address or domain of the origin server to which the specified domain points.
	SourceIps pulumi.StringArrayOutput `pulumi:"sourceIps"`
	// The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
	WriteTime pulumi.IntPtrOutput `pulumi:"writeTime"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil || args.IsAccessProduct == nil {
		return nil, errors.New("missing required argument 'IsAccessProduct'")
	}
	if args == nil || args.SourceIps == nil {
		return nil, errors.New("missing required argument 'SourceIps'")
	}
	if args == nil {
		args = &DomainArgs{}
	}
	var resource Domain
	err := ctx.RegisterResource("alicloud:waf/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("alicloud:waf/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
	ClusterType *string `pulumi:"clusterType"`
	// The CNAME record assigned by the WAF instance to the specified domain.
	Cname *string `pulumi:"cname"`
	// The connection timeout for WAF exclusive clusters. Unit: seconds.
	ConnectionTime *int `pulumi:"connectionTime"`
	// Field `domain` has been deprecated from version 1.94.0. Use `domainName` instead.
	//
	// Deprecated: Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.
	Domain *string `pulumi:"domain"`
	// The domain that you want to add to WAF.
	DomainName *string `pulumi:"domainName"`
	// List of the HTTP 2.0 ports.
	Http2Ports []string `pulumi:"http2Ports"`
	// List of the HTTP ports.
	HttpPorts []string `pulumi:"httpPorts"`
	// Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server.
	// By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
	HttpToUserIp *string `pulumi:"httpToUserIp"`
	// List of the HTTPS ports.
	HttpsPorts []string `pulumi:"httpsPorts"`
	// Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
	HttpsRedirect *string `pulumi:"httpsRedirect"`
	// The ID of the WAF instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
	IsAccessProduct *string `pulumi:"isAccessProduct"`
	// The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
	// * key: The key of label
	// * value: The value of label
	LogHeaders []DomainLogHeader `pulumi:"logHeaders"`
	// The read timeout of a WAF exclusive cluster. Unit: seconds.
	ReadTime *int `pulumi:"readTime"`
	// The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// List of the IP address or domain of the origin server to which the specified domain points.
	SourceIps []string `pulumi:"sourceIps"`
	// The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
	WriteTime *int `pulumi:"writeTime"`
}

type DomainState struct {
	// The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
	ClusterType pulumi.StringPtrInput
	// The CNAME record assigned by the WAF instance to the specified domain.
	Cname pulumi.StringPtrInput
	// The connection timeout for WAF exclusive clusters. Unit: seconds.
	ConnectionTime pulumi.IntPtrInput
	// Field `domain` has been deprecated from version 1.94.0. Use `domainName` instead.
	//
	// Deprecated: Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.
	Domain pulumi.StringPtrInput
	// The domain that you want to add to WAF.
	DomainName pulumi.StringPtrInput
	// List of the HTTP 2.0 ports.
	Http2Ports pulumi.StringArrayInput
	// List of the HTTP ports.
	HttpPorts pulumi.StringArrayInput
	// Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server.
	// By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
	HttpToUserIp pulumi.StringPtrInput
	// List of the HTTPS ports.
	HttpsPorts pulumi.StringArrayInput
	// Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
	HttpsRedirect pulumi.StringPtrInput
	// The ID of the WAF instance.
	InstanceId pulumi.StringPtrInput
	// Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
	IsAccessProduct pulumi.StringPtrInput
	// The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
	LoadBalancing pulumi.StringPtrInput
	// The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
	// * key: The key of label
	// * value: The value of label
	LogHeaders DomainLogHeaderArrayInput
	// The read timeout of a WAF exclusive cluster. Unit: seconds.
	ReadTime pulumi.IntPtrInput
	// The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
	ResourceGroupId pulumi.StringPtrInput
	// List of the IP address or domain of the origin server to which the specified domain points.
	SourceIps pulumi.StringArrayInput
	// The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
	WriteTime pulumi.IntPtrInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
	ClusterType *string `pulumi:"clusterType"`
	// The connection timeout for WAF exclusive clusters. Unit: seconds.
	ConnectionTime *int `pulumi:"connectionTime"`
	// Field `domain` has been deprecated from version 1.94.0. Use `domainName` instead.
	//
	// Deprecated: Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.
	Domain *string `pulumi:"domain"`
	// The domain that you want to add to WAF.
	DomainName *string `pulumi:"domainName"`
	// List of the HTTP 2.0 ports.
	Http2Ports []string `pulumi:"http2Ports"`
	// List of the HTTP ports.
	HttpPorts []string `pulumi:"httpPorts"`
	// Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server.
	// By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
	HttpToUserIp *string `pulumi:"httpToUserIp"`
	// List of the HTTPS ports.
	HttpsPorts []string `pulumi:"httpsPorts"`
	// Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
	HttpsRedirect *string `pulumi:"httpsRedirect"`
	// The ID of the WAF instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
	IsAccessProduct string `pulumi:"isAccessProduct"`
	// The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
	// * key: The key of label
	// * value: The value of label
	LogHeaders []DomainLogHeader `pulumi:"logHeaders"`
	// The read timeout of a WAF exclusive cluster. Unit: seconds.
	ReadTime *int `pulumi:"readTime"`
	// The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// List of the IP address or domain of the origin server to which the specified domain points.
	SourceIps []string `pulumi:"sourceIps"`
	// The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
	WriteTime *int `pulumi:"writeTime"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// The type of the WAF cluster. Valid values: `PhysicalCluster` and `VirtualCluster`. Default to `PhysicalCluster`.
	ClusterType pulumi.StringPtrInput
	// The connection timeout for WAF exclusive clusters. Unit: seconds.
	ConnectionTime pulumi.IntPtrInput
	// Field `domain` has been deprecated from version 1.94.0. Use `domainName` instead.
	//
	// Deprecated: Field 'domain' has been deprecated from version 1.94.0. Use 'domain_name' instead.
	Domain pulumi.StringPtrInput
	// The domain that you want to add to WAF.
	DomainName pulumi.StringPtrInput
	// List of the HTTP 2.0 ports.
	Http2Ports pulumi.StringArrayInput
	// List of the HTTP ports.
	HttpPorts pulumi.StringArrayInput
	// Specifies whether to enable the HTTP back-to-origin feature. After this feature is enabled, the WAF instance can use HTTP to forward HTTPS requests to the origin server.
	// By default, port 80 is used to forward the requests to the origin server. Valid values: `On` and `Off`. Default to `Off`.
	HttpToUserIp pulumi.StringPtrInput
	// List of the HTTPS ports.
	HttpsPorts pulumi.StringArrayInput
	// Specifies whether to redirect HTTP requests as HTTPS requests. Valid values: "On" and `Off`. Default to `Off`.
	HttpsRedirect pulumi.StringPtrInput
	// The ID of the WAF instance.
	InstanceId pulumi.StringInput
	// Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: `On` and `Off`. Default to `Off`.
	IsAccessProduct pulumi.StringInput
	// The load balancing algorithm that is used to forward requests to the origin. Valid values: `IpHash` and `RoundRobin`. Default to `IpHash`.
	LoadBalancing pulumi.StringPtrInput
	// The key-value pair that is used to mark the traffic that flows through WAF to the domain. Each item contains two field:
	// * key: The key of label
	// * value: The value of label
	LogHeaders DomainLogHeaderArrayInput
	// The read timeout of a WAF exclusive cluster. Unit: seconds.
	ReadTime pulumi.IntPtrInput
	// The ID of the resource group to which the queried domain belongs in Resource Management. By default, no value is specified, indicating that the domain belongs to the default resource group.
	ResourceGroupId pulumi.StringPtrInput
	// List of the IP address or domain of the origin server to which the specified domain points.
	SourceIps pulumi.StringArrayInput
	// The timeout period for a WAF exclusive cluster write connection. Unit: seconds.
	WriteTime pulumi.IntPtrInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainInput interface {
	pulumi.Input

	ToDomainOutput() DomainOutput
	ToDomainOutputWithContext(ctx context.Context) DomainOutput
}

func (Domain) ElementType() reflect.Type {
	return reflect.TypeOf((*Domain)(nil)).Elem()
}

func (i Domain) ToDomainOutput() DomainOutput {
	return i.ToDomainOutputWithContext(context.Background())
}

func (i Domain) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOutput)
}

type DomainOutput struct {
	*pulumi.OutputState
}

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOutput)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DomainOutput{})
}
