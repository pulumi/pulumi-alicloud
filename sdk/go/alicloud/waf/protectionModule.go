// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Web Application Firewall(WAF) Protection Module resource.
//
// For information about Web Application Firewall(WAF) Protection Module and how to use it, see [What is Protection Module](https://www.alibabacloud.com/help/en/doc-detail/160775.htm).
//
// > **NOTE:** Available in v1.141.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			defaultInstances, err := waf.GetInstances(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			defaultDomain, err := waf.NewDomain(ctx, "defaultDomain", &waf.DomainArgs{
//				DomainName:      pulumi.String("you domain"),
//				InstanceId:      *pulumi.String(defaultInstances.Ids[0]),
//				IsAccessProduct: pulumi.String("On"),
//				SourceIps: pulumi.StringArray{
//					pulumi.String("1.1.1.1"),
//				},
//				ClusterType: pulumi.String("PhysicalCluster"),
//				Http2Ports: pulumi.StringArray{
//					pulumi.String("443"),
//				},
//				HttpPorts: pulumi.StringArray{
//					pulumi.String("80"),
//				},
//				HttpsPorts: pulumi.StringArray{
//					pulumi.String("443"),
//				},
//				HttpToUserIp:  pulumi.String("Off"),
//				HttpsRedirect: pulumi.String("Off"),
//				LoadBalancing: pulumi.String("IpHash"),
//				LogHeaders: waf.DomainLogHeaderArray{
//					&waf.DomainLogHeaderArgs{
//						Key:   pulumi.String("foo"),
//						Value: pulumi.String("http"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = waf.NewProtectionModule(ctx, "defaultProtectionModule", &waf.ProtectionModuleArgs{
//				InstanceId:  *pulumi.String(defaultInstances.Ids[0]),
//				Domain:      defaultDomain.DomainName,
//				DefenseType: pulumi.String("ac_cc"),
//				Mode:        pulumi.Int(0),
//				Status:      pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Web Application Firewall(WAF) Protection Module can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:waf/protectionModule:ProtectionModule example <instance_id>:<domain>:<defense_type>
//
// ```
type ProtectionModule struct {
	pulumi.CustomResourceState

	// The Protection Module. Valid values: `acCc`, `antifraud`, `dld`, `normalized`, `waf`.
	DefenseType pulumi.StringOutput `pulumi:"defenseType"`
	// The domain name that is added to WAF.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The ID of the WAF instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The protection mode of the specified protection module. **NOTE:** The value of the Mode parameter varies based on the value of the `defenseType` parameter.
	// * The `defenseType` is `waf`. `0`: block mode. `1`: warn mode.
	// * The `defenseType` is `dld`. `0`: warn mode. `1`: block mode.
	// * The `defenseType` is `acCc`. `0`: prevention mode. `1`: protection-emergency mode.
	// * The `defenseType` is `antifraud`. `0`: warn mode. `1`: block mode. `2`: strict interception mode.
	// * The `defenseType` is `normalized`. `0`: warn mode. `1`: block mode.
	Mode pulumi.IntOutput `pulumi:"mode"`
	// The status of the resource. Valid values: `0`, `1`.
	Status pulumi.IntPtrOutput `pulumi:"status"`
}

// NewProtectionModule registers a new resource with the given unique name, arguments, and options.
func NewProtectionModule(ctx *pulumi.Context,
	name string, args *ProtectionModuleArgs, opts ...pulumi.ResourceOption) (*ProtectionModule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefenseType == nil {
		return nil, errors.New("invalid value for required argument 'DefenseType'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	var resource ProtectionModule
	err := ctx.RegisterResource("alicloud:waf/protectionModule:ProtectionModule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtectionModule gets an existing ProtectionModule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtectionModule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectionModuleState, opts ...pulumi.ResourceOption) (*ProtectionModule, error) {
	var resource ProtectionModule
	err := ctx.ReadResource("alicloud:waf/protectionModule:ProtectionModule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtectionModule resources.
type protectionModuleState struct {
	// The Protection Module. Valid values: `acCc`, `antifraud`, `dld`, `normalized`, `waf`.
	DefenseType *string `pulumi:"defenseType"`
	// The domain name that is added to WAF.
	Domain *string `pulumi:"domain"`
	// The ID of the WAF instance.
	InstanceId *string `pulumi:"instanceId"`
	// The protection mode of the specified protection module. **NOTE:** The value of the Mode parameter varies based on the value of the `defenseType` parameter.
	// * The `defenseType` is `waf`. `0`: block mode. `1`: warn mode.
	// * The `defenseType` is `dld`. `0`: warn mode. `1`: block mode.
	// * The `defenseType` is `acCc`. `0`: prevention mode. `1`: protection-emergency mode.
	// * The `defenseType` is `antifraud`. `0`: warn mode. `1`: block mode. `2`: strict interception mode.
	// * The `defenseType` is `normalized`. `0`: warn mode. `1`: block mode.
	Mode *int `pulumi:"mode"`
	// The status of the resource. Valid values: `0`, `1`.
	Status *int `pulumi:"status"`
}

type ProtectionModuleState struct {
	// The Protection Module. Valid values: `acCc`, `antifraud`, `dld`, `normalized`, `waf`.
	DefenseType pulumi.StringPtrInput
	// The domain name that is added to WAF.
	Domain pulumi.StringPtrInput
	// The ID of the WAF instance.
	InstanceId pulumi.StringPtrInput
	// The protection mode of the specified protection module. **NOTE:** The value of the Mode parameter varies based on the value of the `defenseType` parameter.
	// * The `defenseType` is `waf`. `0`: block mode. `1`: warn mode.
	// * The `defenseType` is `dld`. `0`: warn mode. `1`: block mode.
	// * The `defenseType` is `acCc`. `0`: prevention mode. `1`: protection-emergency mode.
	// * The `defenseType` is `antifraud`. `0`: warn mode. `1`: block mode. `2`: strict interception mode.
	// * The `defenseType` is `normalized`. `0`: warn mode. `1`: block mode.
	Mode pulumi.IntPtrInput
	// The status of the resource. Valid values: `0`, `1`.
	Status pulumi.IntPtrInput
}

func (ProtectionModuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionModuleState)(nil)).Elem()
}

type protectionModuleArgs struct {
	// The Protection Module. Valid values: `acCc`, `antifraud`, `dld`, `normalized`, `waf`.
	DefenseType string `pulumi:"defenseType"`
	// The domain name that is added to WAF.
	Domain string `pulumi:"domain"`
	// The ID of the WAF instance.
	InstanceId string `pulumi:"instanceId"`
	// The protection mode of the specified protection module. **NOTE:** The value of the Mode parameter varies based on the value of the `defenseType` parameter.
	// * The `defenseType` is `waf`. `0`: block mode. `1`: warn mode.
	// * The `defenseType` is `dld`. `0`: warn mode. `1`: block mode.
	// * The `defenseType` is `acCc`. `0`: prevention mode. `1`: protection-emergency mode.
	// * The `defenseType` is `antifraud`. `0`: warn mode. `1`: block mode. `2`: strict interception mode.
	// * The `defenseType` is `normalized`. `0`: warn mode. `1`: block mode.
	Mode int `pulumi:"mode"`
	// The status of the resource. Valid values: `0`, `1`.
	Status *int `pulumi:"status"`
}

// The set of arguments for constructing a ProtectionModule resource.
type ProtectionModuleArgs struct {
	// The Protection Module. Valid values: `acCc`, `antifraud`, `dld`, `normalized`, `waf`.
	DefenseType pulumi.StringInput
	// The domain name that is added to WAF.
	Domain pulumi.StringInput
	// The ID of the WAF instance.
	InstanceId pulumi.StringInput
	// The protection mode of the specified protection module. **NOTE:** The value of the Mode parameter varies based on the value of the `defenseType` parameter.
	// * The `defenseType` is `waf`. `0`: block mode. `1`: warn mode.
	// * The `defenseType` is `dld`. `0`: warn mode. `1`: block mode.
	// * The `defenseType` is `acCc`. `0`: prevention mode. `1`: protection-emergency mode.
	// * The `defenseType` is `antifraud`. `0`: warn mode. `1`: block mode. `2`: strict interception mode.
	// * The `defenseType` is `normalized`. `0`: warn mode. `1`: block mode.
	Mode pulumi.IntInput
	// The status of the resource. Valid values: `0`, `1`.
	Status pulumi.IntPtrInput
}

func (ProtectionModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionModuleArgs)(nil)).Elem()
}

type ProtectionModuleInput interface {
	pulumi.Input

	ToProtectionModuleOutput() ProtectionModuleOutput
	ToProtectionModuleOutputWithContext(ctx context.Context) ProtectionModuleOutput
}

func (*ProtectionModule) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionModule)(nil)).Elem()
}

func (i *ProtectionModule) ToProtectionModuleOutput() ProtectionModuleOutput {
	return i.ToProtectionModuleOutputWithContext(context.Background())
}

func (i *ProtectionModule) ToProtectionModuleOutputWithContext(ctx context.Context) ProtectionModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionModuleOutput)
}

// ProtectionModuleArrayInput is an input type that accepts ProtectionModuleArray and ProtectionModuleArrayOutput values.
// You can construct a concrete instance of `ProtectionModuleArrayInput` via:
//
//	ProtectionModuleArray{ ProtectionModuleArgs{...} }
type ProtectionModuleArrayInput interface {
	pulumi.Input

	ToProtectionModuleArrayOutput() ProtectionModuleArrayOutput
	ToProtectionModuleArrayOutputWithContext(context.Context) ProtectionModuleArrayOutput
}

type ProtectionModuleArray []ProtectionModuleInput

func (ProtectionModuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtectionModule)(nil)).Elem()
}

func (i ProtectionModuleArray) ToProtectionModuleArrayOutput() ProtectionModuleArrayOutput {
	return i.ToProtectionModuleArrayOutputWithContext(context.Background())
}

func (i ProtectionModuleArray) ToProtectionModuleArrayOutputWithContext(ctx context.Context) ProtectionModuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionModuleArrayOutput)
}

// ProtectionModuleMapInput is an input type that accepts ProtectionModuleMap and ProtectionModuleMapOutput values.
// You can construct a concrete instance of `ProtectionModuleMapInput` via:
//
//	ProtectionModuleMap{ "key": ProtectionModuleArgs{...} }
type ProtectionModuleMapInput interface {
	pulumi.Input

	ToProtectionModuleMapOutput() ProtectionModuleMapOutput
	ToProtectionModuleMapOutputWithContext(context.Context) ProtectionModuleMapOutput
}

type ProtectionModuleMap map[string]ProtectionModuleInput

func (ProtectionModuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtectionModule)(nil)).Elem()
}

func (i ProtectionModuleMap) ToProtectionModuleMapOutput() ProtectionModuleMapOutput {
	return i.ToProtectionModuleMapOutputWithContext(context.Background())
}

func (i ProtectionModuleMap) ToProtectionModuleMapOutputWithContext(ctx context.Context) ProtectionModuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionModuleMapOutput)
}

type ProtectionModuleOutput struct{ *pulumi.OutputState }

func (ProtectionModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionModule)(nil)).Elem()
}

func (o ProtectionModuleOutput) ToProtectionModuleOutput() ProtectionModuleOutput {
	return o
}

func (o ProtectionModuleOutput) ToProtectionModuleOutputWithContext(ctx context.Context) ProtectionModuleOutput {
	return o
}

// The Protection Module. Valid values: `acCc`, `antifraud`, `dld`, `normalized`, `waf`.
func (o ProtectionModuleOutput) DefenseType() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionModule) pulumi.StringOutput { return v.DefenseType }).(pulumi.StringOutput)
}

// The domain name that is added to WAF.
func (o ProtectionModuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionModule) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The ID of the WAF instance.
func (o ProtectionModuleOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionModule) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The protection mode of the specified protection module. **NOTE:** The value of the Mode parameter varies based on the value of the `defenseType` parameter.
// * The `defenseType` is `waf`. `0`: block mode. `1`: warn mode.
// * The `defenseType` is `dld`. `0`: warn mode. `1`: block mode.
// * The `defenseType` is `acCc`. `0`: prevention mode. `1`: protection-emergency mode.
// * The `defenseType` is `antifraud`. `0`: warn mode. `1`: block mode. `2`: strict interception mode.
// * The `defenseType` is `normalized`. `0`: warn mode. `1`: block mode.
func (o ProtectionModuleOutput) Mode() pulumi.IntOutput {
	return o.ApplyT(func(v *ProtectionModule) pulumi.IntOutput { return v.Mode }).(pulumi.IntOutput)
}

// The status of the resource. Valid values: `0`, `1`.
func (o ProtectionModuleOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionModule) pulumi.IntPtrOutput { return v.Status }).(pulumi.IntPtrOutput)
}

type ProtectionModuleArrayOutput struct{ *pulumi.OutputState }

func (ProtectionModuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtectionModule)(nil)).Elem()
}

func (o ProtectionModuleArrayOutput) ToProtectionModuleArrayOutput() ProtectionModuleArrayOutput {
	return o
}

func (o ProtectionModuleArrayOutput) ToProtectionModuleArrayOutputWithContext(ctx context.Context) ProtectionModuleArrayOutput {
	return o
}

func (o ProtectionModuleArrayOutput) Index(i pulumi.IntInput) ProtectionModuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProtectionModule {
		return vs[0].([]*ProtectionModule)[vs[1].(int)]
	}).(ProtectionModuleOutput)
}

type ProtectionModuleMapOutput struct{ *pulumi.OutputState }

func (ProtectionModuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtectionModule)(nil)).Elem()
}

func (o ProtectionModuleMapOutput) ToProtectionModuleMapOutput() ProtectionModuleMapOutput {
	return o
}

func (o ProtectionModuleMapOutput) ToProtectionModuleMapOutputWithContext(ctx context.Context) ProtectionModuleMapOutput {
	return o
}

func (o ProtectionModuleMapOutput) MapIndex(k pulumi.StringInput) ProtectionModuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProtectionModule {
		return vs[0].(map[string]*ProtectionModule)[vs[1].(string)]
	}).(ProtectionModuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionModuleInput)(nil)).Elem(), &ProtectionModule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionModuleArrayInput)(nil)).Elem(), ProtectionModuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionModuleMapInput)(nil)).Elem(), ProtectionModuleMap{})
	pulumi.RegisterOutputType(ProtectionModuleOutput{})
	pulumi.RegisterOutputType(ProtectionModuleArrayOutput{})
	pulumi.RegisterOutputType(ProtectionModuleMapOutput{})
}
