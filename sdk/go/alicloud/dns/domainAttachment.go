// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// DNS domain attachment can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:dns/domainAttachment:DomainAttachment example dns-cn-v0h1ldjhxxx
// ```
type DomainAttachment struct {
	pulumi.CustomResourceState

	// The domain names bound to the DNS instance.
	DomainNames pulumi.StringArrayOutput `pulumi:"domainNames"`
	// The id of the DNS instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewDomainAttachment registers a new resource with the given unique name, arguments, and options.
func NewDomainAttachment(ctx *pulumi.Context,
	name string, args *DomainAttachmentArgs, opts ...pulumi.ResourceOption) (*DomainAttachment, error) {
	if args == nil || args.DomainNames == nil {
		return nil, errors.New("missing required argument 'DomainNames'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil {
		args = &DomainAttachmentArgs{}
	}
	var resource DomainAttachment
	err := ctx.RegisterResource("alicloud:dns/domainAttachment:DomainAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainAttachment gets an existing DomainAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainAttachmentState, opts ...pulumi.ResourceOption) (*DomainAttachment, error) {
	var resource DomainAttachment
	err := ctx.ReadResource("alicloud:dns/domainAttachment:DomainAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainAttachment resources.
type domainAttachmentState struct {
	// The domain names bound to the DNS instance.
	DomainNames []string `pulumi:"domainNames"`
	// The id of the DNS instance.
	InstanceId *string `pulumi:"instanceId"`
}

type DomainAttachmentState struct {
	// The domain names bound to the DNS instance.
	DomainNames pulumi.StringArrayInput
	// The id of the DNS instance.
	InstanceId pulumi.StringPtrInput
}

func (DomainAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainAttachmentState)(nil)).Elem()
}

type domainAttachmentArgs struct {
	// The domain names bound to the DNS instance.
	DomainNames []string `pulumi:"domainNames"`
	// The id of the DNS instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a DomainAttachment resource.
type DomainAttachmentArgs struct {
	// The domain names bound to the DNS instance.
	DomainNames pulumi.StringArrayInput
	// The id of the DNS instance.
	InstanceId pulumi.StringInput
}

func (DomainAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainAttachmentArgs)(nil)).Elem()
}

type DomainAttachmentInput interface {
	pulumi.Input

	ToDomainAttachmentOutput() DomainAttachmentOutput
	ToDomainAttachmentOutputWithContext(ctx context.Context) DomainAttachmentOutput
}

func (DomainAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAttachment)(nil)).Elem()
}

func (i DomainAttachment) ToDomainAttachmentOutput() DomainAttachmentOutput {
	return i.ToDomainAttachmentOutputWithContext(context.Background())
}

func (i DomainAttachment) ToDomainAttachmentOutputWithContext(ctx context.Context) DomainAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAttachmentOutput)
}

type DomainAttachmentOutput struct {
	*pulumi.OutputState
}

func (DomainAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAttachmentOutput)(nil)).Elem()
}

func (o DomainAttachmentOutput) ToDomainAttachmentOutput() DomainAttachmentOutput {
	return o
}

func (o DomainAttachmentOutput) ToDomainAttachmentOutputWithContext(ctx context.Context) DomainAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DomainAttachmentOutput{})
}
