// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Alidns Gtm Instance resource.
//
// For information about Alidns Gtm Instance and how to use it, see [What is Gtm Instance](https://www.alibabacloud.com/help/en/doc-detail/204852.html).
//
// > **NOTE:** Available in v1.151.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cms"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/dns"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultResourceGroups, err := resourcemanager.GetResourceGroups(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		defaultAlarmContactGroup, err := cms.NewAlarmContactGroup(ctx, "defaultAlarmContactGroup", &cms.AlarmContactGroupArgs{
// 			AlarmContactGroupName: pulumi.Any(_var.Name),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = dns.NewGtmInstance(ctx, "defaultGtmInstance", &dns.GtmInstanceArgs{
// 			InstanceName:         pulumi.Any(_var.Name),
// 			PaymentType:          pulumi.String("Subscription"),
// 			Period:               pulumi.Int(1),
// 			RenewalStatus:        pulumi.String("ManualRenewal"),
// 			PackageEdition:       pulumi.String("standard"),
// 			HealthCheckTaskCount: pulumi.Int(100),
// 			SmsNotificationCount: pulumi.Int(1000),
// 			PublicCnameMode:      pulumi.String("SYSTEM_ASSIGN"),
// 			Ttl:                  pulumi.Int(60),
// 			CnameType:            pulumi.String("PUBLIC"),
// 			ResourceGroupId:      pulumi.String(defaultResourceGroups.Groups[0].Id),
// 			AlertGroups: pulumi.StringArray{
// 				defaultAlarmContactGroup.AlarmContactGroupName,
// 			},
// 			PublicUserDomainName: pulumi.Any(_var.Domain_name),
// 			AlertConfigs: dns.GtmInstanceAlertConfigArray{
// 				&dns.GtmInstanceAlertConfigArgs{
// 					SmsNotice:      pulumi.Bool(true),
// 					NoticeType:     pulumi.String("ADDR_ALERT"),
// 					EmailNotice:    pulumi.Bool(true),
// 					DingtalkNotice: pulumi.Bool(true),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Alidns Gtm Instance can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:dns/gtmInstance:GtmInstance example <id>
// ```
type GtmInstance struct {
	pulumi.CustomResourceState

	// The alert notification methods. See the following `Block alertConfig`.
	AlertConfigs GtmInstanceAlertConfigArrayOutput `pulumi:"alertConfigs"`
	// The alert group.
	AlertGroups pulumi.StringArrayOutput `pulumi:"alertGroups"`
	// The access type of the CNAME domain name. Valid value: `PUBLIC`.
	CnameType pulumi.StringOutput `pulumi:"cnameType"`
	// The force update.
	ForceUpdate pulumi.BoolPtrOutput `pulumi:"forceUpdate"`
	// The quota of detection tasks.
	HealthCheckTaskCount pulumi.IntOutput `pulumi:"healthCheckTaskCount"`
	// The name of the instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The lang.
	Lang pulumi.StringPtrOutput `pulumi:"lang"`
	// Paid package version. Valid values: `ultimate`, `standard`.
	PackageEdition pulumi.StringOutput `pulumi:"packageEdition"`
	// The Payment Type of the resource. Valid value: `Subscription`.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period pulumi.IntOutput `pulumi:"period"`
	// The Public Network domain name access method. Valid values: `CUSTOM`, `SYSTEM_ASSIGN`.
	PublicCnameMode pulumi.StringOutput `pulumi:"publicCnameMode"`
	// The CNAME access domain name.
	PublicRr pulumi.StringOutput `pulumi:"publicRr"`
	// The website domain name that the user uses on the Internet.
	PublicUserDomainName pulumi.StringOutput `pulumi:"publicUserDomainName"`
	// The domain name that is used to access GTM over the Internet.
	PublicZoneName pulumi.StringOutput `pulumi:"publicZoneName"`
	// Automatic renewal period, the unit is month. When setting `renewalStatus` to AutoRenewal, it must be set.
	RenewPeriod pulumi.IntPtrOutput `pulumi:"renewPeriod"`
	// Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus pulumi.StringOutput `pulumi:"renewalStatus"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrOutput `pulumi:"resourceGroupId"`
	// The quota of SMS notifications.
	SmsNotificationCount pulumi.IntOutput `pulumi:"smsNotificationCount"`
	// The type of the access policy. Valid values: `GEO`, `LATENCY`.
	StrategyMode pulumi.StringOutput `pulumi:"strategyMode"`
	// The global time to live. Valid values: `60`, `120`, `300`, `600`. Unit: second.
	Ttl pulumi.IntPtrOutput `pulumi:"ttl"`
}

// NewGtmInstance registers a new resource with the given unique name, arguments, and options.
func NewGtmInstance(ctx *pulumi.Context,
	name string, args *GtmInstanceArgs, opts ...pulumi.ResourceOption) (*GtmInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HealthCheckTaskCount == nil {
		return nil, errors.New("invalid value for required argument 'HealthCheckTaskCount'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.PackageEdition == nil {
		return nil, errors.New("invalid value for required argument 'PackageEdition'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	if args.Period == nil {
		return nil, errors.New("invalid value for required argument 'Period'")
	}
	if args.SmsNotificationCount == nil {
		return nil, errors.New("invalid value for required argument 'SmsNotificationCount'")
	}
	var resource GtmInstance
	err := ctx.RegisterResource("alicloud:dns/gtmInstance:GtmInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGtmInstance gets an existing GtmInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGtmInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GtmInstanceState, opts ...pulumi.ResourceOption) (*GtmInstance, error) {
	var resource GtmInstance
	err := ctx.ReadResource("alicloud:dns/gtmInstance:GtmInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GtmInstance resources.
type gtmInstanceState struct {
	// The alert notification methods. See the following `Block alertConfig`.
	AlertConfigs []GtmInstanceAlertConfig `pulumi:"alertConfigs"`
	// The alert group.
	AlertGroups []string `pulumi:"alertGroups"`
	// The access type of the CNAME domain name. Valid value: `PUBLIC`.
	CnameType *string `pulumi:"cnameType"`
	// The force update.
	ForceUpdate *bool `pulumi:"forceUpdate"`
	// The quota of detection tasks.
	HealthCheckTaskCount *int `pulumi:"healthCheckTaskCount"`
	// The name of the instance.
	InstanceName *string `pulumi:"instanceName"`
	// The lang.
	Lang *string `pulumi:"lang"`
	// Paid package version. Valid values: `ultimate`, `standard`.
	PackageEdition *string `pulumi:"packageEdition"`
	// The Payment Type of the resource. Valid value: `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period *int `pulumi:"period"`
	// The Public Network domain name access method. Valid values: `CUSTOM`, `SYSTEM_ASSIGN`.
	PublicCnameMode *string `pulumi:"publicCnameMode"`
	// The CNAME access domain name.
	PublicRr *string `pulumi:"publicRr"`
	// The website domain name that the user uses on the Internet.
	PublicUserDomainName *string `pulumi:"publicUserDomainName"`
	// The domain name that is used to access GTM over the Internet.
	PublicZoneName *string `pulumi:"publicZoneName"`
	// Automatic renewal period, the unit is month. When setting `renewalStatus` to AutoRenewal, it must be set.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The quota of SMS notifications.
	SmsNotificationCount *int `pulumi:"smsNotificationCount"`
	// The type of the access policy. Valid values: `GEO`, `LATENCY`.
	StrategyMode *string `pulumi:"strategyMode"`
	// The global time to live. Valid values: `60`, `120`, `300`, `600`. Unit: second.
	Ttl *int `pulumi:"ttl"`
}

type GtmInstanceState struct {
	// The alert notification methods. See the following `Block alertConfig`.
	AlertConfigs GtmInstanceAlertConfigArrayInput
	// The alert group.
	AlertGroups pulumi.StringArrayInput
	// The access type of the CNAME domain name. Valid value: `PUBLIC`.
	CnameType pulumi.StringPtrInput
	// The force update.
	ForceUpdate pulumi.BoolPtrInput
	// The quota of detection tasks.
	HealthCheckTaskCount pulumi.IntPtrInput
	// The name of the instance.
	InstanceName pulumi.StringPtrInput
	// The lang.
	Lang pulumi.StringPtrInput
	// Paid package version. Valid values: `ultimate`, `standard`.
	PackageEdition pulumi.StringPtrInput
	// The Payment Type of the resource. Valid value: `Subscription`.
	PaymentType pulumi.StringPtrInput
	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period pulumi.IntPtrInput
	// The Public Network domain name access method. Valid values: `CUSTOM`, `SYSTEM_ASSIGN`.
	PublicCnameMode pulumi.StringPtrInput
	// The CNAME access domain name.
	PublicRr pulumi.StringPtrInput
	// The website domain name that the user uses on the Internet.
	PublicUserDomainName pulumi.StringPtrInput
	// The domain name that is used to access GTM over the Internet.
	PublicZoneName pulumi.StringPtrInput
	// Automatic renewal period, the unit is month. When setting `renewalStatus` to AutoRenewal, it must be set.
	RenewPeriod pulumi.IntPtrInput
	// Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The quota of SMS notifications.
	SmsNotificationCount pulumi.IntPtrInput
	// The type of the access policy. Valid values: `GEO`, `LATENCY`.
	StrategyMode pulumi.StringPtrInput
	// The global time to live. Valid values: `60`, `120`, `300`, `600`. Unit: second.
	Ttl pulumi.IntPtrInput
}

func (GtmInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*gtmInstanceState)(nil)).Elem()
}

type gtmInstanceArgs struct {
	// The alert notification methods. See the following `Block alertConfig`.
	AlertConfigs []GtmInstanceAlertConfig `pulumi:"alertConfigs"`
	// The alert group.
	AlertGroups []string `pulumi:"alertGroups"`
	// The access type of the CNAME domain name. Valid value: `PUBLIC`.
	CnameType *string `pulumi:"cnameType"`
	// The force update.
	ForceUpdate *bool `pulumi:"forceUpdate"`
	// The quota of detection tasks.
	HealthCheckTaskCount int `pulumi:"healthCheckTaskCount"`
	// The name of the instance.
	InstanceName string `pulumi:"instanceName"`
	// The lang.
	Lang *string `pulumi:"lang"`
	// Paid package version. Valid values: `ultimate`, `standard`.
	PackageEdition string `pulumi:"packageEdition"`
	// The Payment Type of the resource. Valid value: `Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period int `pulumi:"period"`
	// The Public Network domain name access method. Valid values: `CUSTOM`, `SYSTEM_ASSIGN`.
	PublicCnameMode *string `pulumi:"publicCnameMode"`
	// The CNAME access domain name.
	PublicRr *string `pulumi:"publicRr"`
	// The website domain name that the user uses on the Internet.
	PublicUserDomainName *string `pulumi:"publicUserDomainName"`
	// The domain name that is used to access GTM over the Internet.
	PublicZoneName *string `pulumi:"publicZoneName"`
	// Automatic renewal period, the unit is month. When setting `renewalStatus` to AutoRenewal, it must be set.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The quota of SMS notifications.
	SmsNotificationCount int `pulumi:"smsNotificationCount"`
	// The type of the access policy. Valid values: `GEO`, `LATENCY`.
	StrategyMode *string `pulumi:"strategyMode"`
	// The global time to live. Valid values: `60`, `120`, `300`, `600`. Unit: second.
	Ttl *int `pulumi:"ttl"`
}

// The set of arguments for constructing a GtmInstance resource.
type GtmInstanceArgs struct {
	// The alert notification methods. See the following `Block alertConfig`.
	AlertConfigs GtmInstanceAlertConfigArrayInput
	// The alert group.
	AlertGroups pulumi.StringArrayInput
	// The access type of the CNAME domain name. Valid value: `PUBLIC`.
	CnameType pulumi.StringPtrInput
	// The force update.
	ForceUpdate pulumi.BoolPtrInput
	// The quota of detection tasks.
	HealthCheckTaskCount pulumi.IntInput
	// The name of the instance.
	InstanceName pulumi.StringInput
	// The lang.
	Lang pulumi.StringPtrInput
	// Paid package version. Valid values: `ultimate`, `standard`.
	PackageEdition pulumi.StringInput
	// The Payment Type of the resource. Valid value: `Subscription`.
	PaymentType pulumi.StringInput
	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period pulumi.IntInput
	// The Public Network domain name access method. Valid values: `CUSTOM`, `SYSTEM_ASSIGN`.
	PublicCnameMode pulumi.StringPtrInput
	// The CNAME access domain name.
	PublicRr pulumi.StringPtrInput
	// The website domain name that the user uses on the Internet.
	PublicUserDomainName pulumi.StringPtrInput
	// The domain name that is used to access GTM over the Internet.
	PublicZoneName pulumi.StringPtrInput
	// Automatic renewal period, the unit is month. When setting `renewalStatus` to AutoRenewal, it must be set.
	RenewPeriod pulumi.IntPtrInput
	// Automatic renewal status. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The quota of SMS notifications.
	SmsNotificationCount pulumi.IntInput
	// The type of the access policy. Valid values: `GEO`, `LATENCY`.
	StrategyMode pulumi.StringPtrInput
	// The global time to live. Valid values: `60`, `120`, `300`, `600`. Unit: second.
	Ttl pulumi.IntPtrInput
}

func (GtmInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gtmInstanceArgs)(nil)).Elem()
}

type GtmInstanceInput interface {
	pulumi.Input

	ToGtmInstanceOutput() GtmInstanceOutput
	ToGtmInstanceOutputWithContext(ctx context.Context) GtmInstanceOutput
}

func (*GtmInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**GtmInstance)(nil)).Elem()
}

func (i *GtmInstance) ToGtmInstanceOutput() GtmInstanceOutput {
	return i.ToGtmInstanceOutputWithContext(context.Background())
}

func (i *GtmInstance) ToGtmInstanceOutputWithContext(ctx context.Context) GtmInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GtmInstanceOutput)
}

// GtmInstanceArrayInput is an input type that accepts GtmInstanceArray and GtmInstanceArrayOutput values.
// You can construct a concrete instance of `GtmInstanceArrayInput` via:
//
//          GtmInstanceArray{ GtmInstanceArgs{...} }
type GtmInstanceArrayInput interface {
	pulumi.Input

	ToGtmInstanceArrayOutput() GtmInstanceArrayOutput
	ToGtmInstanceArrayOutputWithContext(context.Context) GtmInstanceArrayOutput
}

type GtmInstanceArray []GtmInstanceInput

func (GtmInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GtmInstance)(nil)).Elem()
}

func (i GtmInstanceArray) ToGtmInstanceArrayOutput() GtmInstanceArrayOutput {
	return i.ToGtmInstanceArrayOutputWithContext(context.Background())
}

func (i GtmInstanceArray) ToGtmInstanceArrayOutputWithContext(ctx context.Context) GtmInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GtmInstanceArrayOutput)
}

// GtmInstanceMapInput is an input type that accepts GtmInstanceMap and GtmInstanceMapOutput values.
// You can construct a concrete instance of `GtmInstanceMapInput` via:
//
//          GtmInstanceMap{ "key": GtmInstanceArgs{...} }
type GtmInstanceMapInput interface {
	pulumi.Input

	ToGtmInstanceMapOutput() GtmInstanceMapOutput
	ToGtmInstanceMapOutputWithContext(context.Context) GtmInstanceMapOutput
}

type GtmInstanceMap map[string]GtmInstanceInput

func (GtmInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GtmInstance)(nil)).Elem()
}

func (i GtmInstanceMap) ToGtmInstanceMapOutput() GtmInstanceMapOutput {
	return i.ToGtmInstanceMapOutputWithContext(context.Background())
}

func (i GtmInstanceMap) ToGtmInstanceMapOutputWithContext(ctx context.Context) GtmInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GtmInstanceMapOutput)
}

type GtmInstanceOutput struct{ *pulumi.OutputState }

func (GtmInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GtmInstance)(nil)).Elem()
}

func (o GtmInstanceOutput) ToGtmInstanceOutput() GtmInstanceOutput {
	return o
}

func (o GtmInstanceOutput) ToGtmInstanceOutputWithContext(ctx context.Context) GtmInstanceOutput {
	return o
}

type GtmInstanceArrayOutput struct{ *pulumi.OutputState }

func (GtmInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GtmInstance)(nil)).Elem()
}

func (o GtmInstanceArrayOutput) ToGtmInstanceArrayOutput() GtmInstanceArrayOutput {
	return o
}

func (o GtmInstanceArrayOutput) ToGtmInstanceArrayOutputWithContext(ctx context.Context) GtmInstanceArrayOutput {
	return o
}

func (o GtmInstanceArrayOutput) Index(i pulumi.IntInput) GtmInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GtmInstance {
		return vs[0].([]*GtmInstance)[vs[1].(int)]
	}).(GtmInstanceOutput)
}

type GtmInstanceMapOutput struct{ *pulumi.OutputState }

func (GtmInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GtmInstance)(nil)).Elem()
}

func (o GtmInstanceMapOutput) ToGtmInstanceMapOutput() GtmInstanceMapOutput {
	return o
}

func (o GtmInstanceMapOutput) ToGtmInstanceMapOutputWithContext(ctx context.Context) GtmInstanceMapOutput {
	return o
}

func (o GtmInstanceMapOutput) MapIndex(k pulumi.StringInput) GtmInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GtmInstance {
		return vs[0].(map[string]*GtmInstance)[vs[1].(string)]
	}).(GtmInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GtmInstanceInput)(nil)).Elem(), &GtmInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*GtmInstanceArrayInput)(nil)).Elem(), GtmInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GtmInstanceMapInput)(nil)).Elem(), GtmInstanceMap{})
	pulumi.RegisterOutputType(GtmInstanceOutput{})
	pulumi.RegisterOutputType(GtmInstanceArrayOutput{})
	pulumi.RegisterOutputType(GtmInstanceMapOutput{})
}
