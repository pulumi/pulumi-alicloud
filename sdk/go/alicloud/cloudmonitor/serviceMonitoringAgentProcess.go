// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmonitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Monitor Service Monitoring Agent Process resource.
//
// For information about Cloud Monitor Service Monitoring Agent Process and how to use it, see [What is Monitoring Agent Process](https://www.alibabacloud.com/help/en/cms/developer-reference/api-cms-2019-01-01-createmonitoragentprocess).
//
// > **NOTE:** Available since v1.212.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudmonitor"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
// AvailableDiskCategory: pulumi.StringRef("cloud_efficiency"),
// AvailableResourceCreation: pulumi.StringRef("VSwitch"),
// }, nil);
// if err != nil {
// return err
// }
// defaultInstanceTypes, err := ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
// AvailabilityZone: pulumi.StringRef(defaultZones.Zones[0].Id),
// InstanceTypeFamily: pulumi.StringRef("ecs.sn1ne"),
// }, nil);
// if err != nil {
// return err
// }
// defaultImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
// NameRegex: pulumi.StringRef("^ubuntu_[0-9]+_[0-9]+_x64*"),
// MostRecent: pulumi.BoolRef(true),
// Owners: pulumi.StringRef("system"),
// }, nil);
// if err != nil {
// return err
// }
// defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
// VpcName: pulumi.String(name),
// CidrBlock: pulumi.String("172.16.0.0/16"),
// })
// if err != nil {
// return err
// }
// defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
// VpcId: defaultNetwork.ID(),
// CidrBlock: pulumi.String("172.16.0.0/24"),
// ZoneId: *pulumi.String(defaultZones.Zones[0].Id),
// VswitchName: pulumi.String(name),
// })
// if err != nil {
// return err
// }
// defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "defaultSecurityGroup", &ecs.SecurityGroupArgs{
// VpcId: defaultSwitch.VpcId,
// })
// if err != nil {
// return err
// }
// var splat0 pulumi.StringArray
// for _, val0 := range %!v(PANIC=Format method: fatal: An assertion has failed: tok: ) {
// splat0 = append(splat0, val0.ID())
// }
// defaultInstance, err := ecs.NewInstance(ctx, "defaultInstance", &ecs.InstanceArgs{
// ImageId: *pulumi.String(defaultImages.Images[0].Id),
// InstanceType: *pulumi.String(defaultInstanceTypes.InstanceTypes[0].Id),
// InstanceName: pulumi.String(name),
// SecurityGroups: splat0,
// InternetChargeType: pulumi.String("PayByTraffic"),
// InternetMaxBandwidthOut: pulumi.Int(10),
// AvailabilityZone: *pulumi.String(defaultZones.Zones[0].Id),
// InstanceChargeType: pulumi.String("PostPaid"),
// SystemDiskCategory: pulumi.String("cloud_efficiency"),
// VswitchId: defaultSwitch.ID(),
// })
// if err != nil {
// return err
// }
// _, err = cloudmonitor.NewServiceMonitoringAgentProcess(ctx, "defaultServiceMonitoringAgentProcess", &cloudmonitor.ServiceMonitoringAgentProcessArgs{
// InstanceId: defaultInstance.ID(),
// ProcessName: pulumi.String(name),
// ProcessUser: pulumi.String("root"),
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Cloud Monitor Service Monitoring Agent Process can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess example <instance_id>:<process_id>
// ```
type ServiceMonitoringAgentProcess struct {
	pulumi.CustomResourceState

	// The ID of the instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ID of the process.
	ProcessId pulumi.StringOutput `pulumi:"processId"`
	// The name of the process.
	ProcessName pulumi.StringOutput `pulumi:"processName"`
	// The user who launches the process.
	ProcessUser pulumi.StringPtrOutput `pulumi:"processUser"`
}

// NewServiceMonitoringAgentProcess registers a new resource with the given unique name, arguments, and options.
func NewServiceMonitoringAgentProcess(ctx *pulumi.Context,
	name string, args *ServiceMonitoringAgentProcessArgs, opts ...pulumi.ResourceOption) (*ServiceMonitoringAgentProcess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.ProcessName == nil {
		return nil, errors.New("invalid value for required argument 'ProcessName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceMonitoringAgentProcess
	err := ctx.RegisterResource("alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceMonitoringAgentProcess gets an existing ServiceMonitoringAgentProcess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceMonitoringAgentProcess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceMonitoringAgentProcessState, opts ...pulumi.ResourceOption) (*ServiceMonitoringAgentProcess, error) {
	var resource ServiceMonitoringAgentProcess
	err := ctx.ReadResource("alicloud:cloudmonitor/serviceMonitoringAgentProcess:ServiceMonitoringAgentProcess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceMonitoringAgentProcess resources.
type serviceMonitoringAgentProcessState struct {
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the process.
	ProcessId *string `pulumi:"processId"`
	// The name of the process.
	ProcessName *string `pulumi:"processName"`
	// The user who launches the process.
	ProcessUser *string `pulumi:"processUser"`
}

type ServiceMonitoringAgentProcessState struct {
	// The ID of the instance.
	InstanceId pulumi.StringPtrInput
	// The ID of the process.
	ProcessId pulumi.StringPtrInput
	// The name of the process.
	ProcessName pulumi.StringPtrInput
	// The user who launches the process.
	ProcessUser pulumi.StringPtrInput
}

func (ServiceMonitoringAgentProcessState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMonitoringAgentProcessState)(nil)).Elem()
}

type serviceMonitoringAgentProcessArgs struct {
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the process.
	ProcessName string `pulumi:"processName"`
	// The user who launches the process.
	ProcessUser *string `pulumi:"processUser"`
}

// The set of arguments for constructing a ServiceMonitoringAgentProcess resource.
type ServiceMonitoringAgentProcessArgs struct {
	// The ID of the instance.
	InstanceId pulumi.StringInput
	// The name of the process.
	ProcessName pulumi.StringInput
	// The user who launches the process.
	ProcessUser pulumi.StringPtrInput
}

func (ServiceMonitoringAgentProcessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMonitoringAgentProcessArgs)(nil)).Elem()
}

type ServiceMonitoringAgentProcessInput interface {
	pulumi.Input

	ToServiceMonitoringAgentProcessOutput() ServiceMonitoringAgentProcessOutput
	ToServiceMonitoringAgentProcessOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessOutput
}

func (*ServiceMonitoringAgentProcess) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMonitoringAgentProcess)(nil)).Elem()
}

func (i *ServiceMonitoringAgentProcess) ToServiceMonitoringAgentProcessOutput() ServiceMonitoringAgentProcessOutput {
	return i.ToServiceMonitoringAgentProcessOutputWithContext(context.Background())
}

func (i *ServiceMonitoringAgentProcess) ToServiceMonitoringAgentProcessOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMonitoringAgentProcessOutput)
}

// ServiceMonitoringAgentProcessArrayInput is an input type that accepts ServiceMonitoringAgentProcessArray and ServiceMonitoringAgentProcessArrayOutput values.
// You can construct a concrete instance of `ServiceMonitoringAgentProcessArrayInput` via:
//
//	ServiceMonitoringAgentProcessArray{ ServiceMonitoringAgentProcessArgs{...} }
type ServiceMonitoringAgentProcessArrayInput interface {
	pulumi.Input

	ToServiceMonitoringAgentProcessArrayOutput() ServiceMonitoringAgentProcessArrayOutput
	ToServiceMonitoringAgentProcessArrayOutputWithContext(context.Context) ServiceMonitoringAgentProcessArrayOutput
}

type ServiceMonitoringAgentProcessArray []ServiceMonitoringAgentProcessInput

func (ServiceMonitoringAgentProcessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceMonitoringAgentProcess)(nil)).Elem()
}

func (i ServiceMonitoringAgentProcessArray) ToServiceMonitoringAgentProcessArrayOutput() ServiceMonitoringAgentProcessArrayOutput {
	return i.ToServiceMonitoringAgentProcessArrayOutputWithContext(context.Background())
}

func (i ServiceMonitoringAgentProcessArray) ToServiceMonitoringAgentProcessArrayOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMonitoringAgentProcessArrayOutput)
}

// ServiceMonitoringAgentProcessMapInput is an input type that accepts ServiceMonitoringAgentProcessMap and ServiceMonitoringAgentProcessMapOutput values.
// You can construct a concrete instance of `ServiceMonitoringAgentProcessMapInput` via:
//
//	ServiceMonitoringAgentProcessMap{ "key": ServiceMonitoringAgentProcessArgs{...} }
type ServiceMonitoringAgentProcessMapInput interface {
	pulumi.Input

	ToServiceMonitoringAgentProcessMapOutput() ServiceMonitoringAgentProcessMapOutput
	ToServiceMonitoringAgentProcessMapOutputWithContext(context.Context) ServiceMonitoringAgentProcessMapOutput
}

type ServiceMonitoringAgentProcessMap map[string]ServiceMonitoringAgentProcessInput

func (ServiceMonitoringAgentProcessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceMonitoringAgentProcess)(nil)).Elem()
}

func (i ServiceMonitoringAgentProcessMap) ToServiceMonitoringAgentProcessMapOutput() ServiceMonitoringAgentProcessMapOutput {
	return i.ToServiceMonitoringAgentProcessMapOutputWithContext(context.Background())
}

func (i ServiceMonitoringAgentProcessMap) ToServiceMonitoringAgentProcessMapOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMonitoringAgentProcessMapOutput)
}

type ServiceMonitoringAgentProcessOutput struct{ *pulumi.OutputState }

func (ServiceMonitoringAgentProcessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMonitoringAgentProcess)(nil)).Elem()
}

func (o ServiceMonitoringAgentProcessOutput) ToServiceMonitoringAgentProcessOutput() ServiceMonitoringAgentProcessOutput {
	return o
}

func (o ServiceMonitoringAgentProcessOutput) ToServiceMonitoringAgentProcessOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessOutput {
	return o
}

// The ID of the instance.
func (o ServiceMonitoringAgentProcessOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceMonitoringAgentProcess) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the process.
func (o ServiceMonitoringAgentProcessOutput) ProcessId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceMonitoringAgentProcess) pulumi.StringOutput { return v.ProcessId }).(pulumi.StringOutput)
}

// The name of the process.
func (o ServiceMonitoringAgentProcessOutput) ProcessName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceMonitoringAgentProcess) pulumi.StringOutput { return v.ProcessName }).(pulumi.StringOutput)
}

// The user who launches the process.
func (o ServiceMonitoringAgentProcessOutput) ProcessUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMonitoringAgentProcess) pulumi.StringPtrOutput { return v.ProcessUser }).(pulumi.StringPtrOutput)
}

type ServiceMonitoringAgentProcessArrayOutput struct{ *pulumi.OutputState }

func (ServiceMonitoringAgentProcessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceMonitoringAgentProcess)(nil)).Elem()
}

func (o ServiceMonitoringAgentProcessArrayOutput) ToServiceMonitoringAgentProcessArrayOutput() ServiceMonitoringAgentProcessArrayOutput {
	return o
}

func (o ServiceMonitoringAgentProcessArrayOutput) ToServiceMonitoringAgentProcessArrayOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessArrayOutput {
	return o
}

func (o ServiceMonitoringAgentProcessArrayOutput) Index(i pulumi.IntInput) ServiceMonitoringAgentProcessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceMonitoringAgentProcess {
		return vs[0].([]*ServiceMonitoringAgentProcess)[vs[1].(int)]
	}).(ServiceMonitoringAgentProcessOutput)
}

type ServiceMonitoringAgentProcessMapOutput struct{ *pulumi.OutputState }

func (ServiceMonitoringAgentProcessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceMonitoringAgentProcess)(nil)).Elem()
}

func (o ServiceMonitoringAgentProcessMapOutput) ToServiceMonitoringAgentProcessMapOutput() ServiceMonitoringAgentProcessMapOutput {
	return o
}

func (o ServiceMonitoringAgentProcessMapOutput) ToServiceMonitoringAgentProcessMapOutputWithContext(ctx context.Context) ServiceMonitoringAgentProcessMapOutput {
	return o
}

func (o ServiceMonitoringAgentProcessMapOutput) MapIndex(k pulumi.StringInput) ServiceMonitoringAgentProcessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceMonitoringAgentProcess {
		return vs[0].(map[string]*ServiceMonitoringAgentProcess)[vs[1].(string)]
	}).(ServiceMonitoringAgentProcessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMonitoringAgentProcessInput)(nil)).Elem(), &ServiceMonitoringAgentProcess{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMonitoringAgentProcessArrayInput)(nil)).Elem(), ServiceMonitoringAgentProcessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMonitoringAgentProcessMapInput)(nil)).Elem(), ServiceMonitoringAgentProcessMap{})
	pulumi.RegisterOutputType(ServiceMonitoringAgentProcessOutput{})
	pulumi.RegisterOutputType(ServiceMonitoringAgentProcessArrayOutput{})
	pulumi.RegisterOutputType(ServiceMonitoringAgentProcessMapOutput{})
}
