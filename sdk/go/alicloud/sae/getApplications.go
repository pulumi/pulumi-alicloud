// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sae

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Sae Applications of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.161.0+.
func GetApplications(ctx *pulumi.Context, args *GetApplicationsArgs, opts ...pulumi.InvokeOption) (*GetApplicationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApplicationsResult
	err := ctx.Invoke("alicloud:sae/getApplications:getApplications", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplications.
type GetApplicationsArgs struct {
	// Application Name. Combinations of numbers, letters, and dashes (-) are allowed. It must start with a letter and the maximum length is 36 characters.
	AppName *string `pulumi:"appName"`
	// Default to `false`. Set it to `true` can output more details about resource attributes.
	EnableDetails *bool `pulumi:"enableDetails"`
	// The field type. Valid values:`appName`, `appIds`, `slbIps`, `instanceIps`
	FieldType *string `pulumi:"fieldType"`
	// The field value.
	FieldValue *string `pulumi:"fieldValue"`
	// A list of Application IDs.
	Ids []string `pulumi:"ids"`
	// SAE namespace ID. Only namespaces whose names are lowercase letters and dashes (-) are supported, and must start with a letter. The namespace can be obtained by calling the DescribeNamespaceList interface.
	NamespaceId *string `pulumi:"namespaceId"`
	// The order by.Valid values:`running`,`instances`.
	OrderBy *string `pulumi:"orderBy"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The reverse.
	Reverse *bool `pulumi:"reverse"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getApplications.
type GetApplicationsResult struct {
	AppName       *string                      `pulumi:"appName"`
	Applications  []GetApplicationsApplication `pulumi:"applications"`
	EnableDetails *bool                        `pulumi:"enableDetails"`
	FieldType     *string                      `pulumi:"fieldType"`
	FieldValue    *string                      `pulumi:"fieldValue"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	Ids         []string `pulumi:"ids"`
	NamespaceId *string  `pulumi:"namespaceId"`
	OrderBy     *string  `pulumi:"orderBy"`
	OutputFile  *string  `pulumi:"outputFile"`
	Reverse     *bool    `pulumi:"reverse"`
	Status      *string  `pulumi:"status"`
}

func GetApplicationsOutput(ctx *pulumi.Context, args GetApplicationsOutputArgs, opts ...pulumi.InvokeOption) GetApplicationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetApplicationsResult, error) {
			args := v.(GetApplicationsArgs)
			r, err := GetApplications(ctx, &args, opts...)
			var s GetApplicationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetApplicationsResultOutput)
}

// A collection of arguments for invoking getApplications.
type GetApplicationsOutputArgs struct {
	// Application Name. Combinations of numbers, letters, and dashes (-) are allowed. It must start with a letter and the maximum length is 36 characters.
	AppName pulumi.StringPtrInput `pulumi:"appName"`
	// Default to `false`. Set it to `true` can output more details about resource attributes.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// The field type. Valid values:`appName`, `appIds`, `slbIps`, `instanceIps`
	FieldType pulumi.StringPtrInput `pulumi:"fieldType"`
	// The field value.
	FieldValue pulumi.StringPtrInput `pulumi:"fieldValue"`
	// A list of Application IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// SAE namespace ID. Only namespaces whose names are lowercase letters and dashes (-) are supported, and must start with a letter. The namespace can be obtained by calling the DescribeNamespaceList interface.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// The order by.Valid values:`running`,`instances`.
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The reverse.
	Reverse pulumi.BoolPtrInput `pulumi:"reverse"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetApplicationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsArgs)(nil)).Elem()
}

// A collection of values returned by getApplications.
type GetApplicationsResultOutput struct{ *pulumi.OutputState }

func (GetApplicationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsResult)(nil)).Elem()
}

func (o GetApplicationsResultOutput) ToGetApplicationsResultOutput() GetApplicationsResultOutput {
	return o
}

func (o GetApplicationsResultOutput) ToGetApplicationsResultOutputWithContext(ctx context.Context) GetApplicationsResultOutput {
	return o
}

func (o GetApplicationsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetApplicationsResult] {
	return pulumix.Output[GetApplicationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetApplicationsResultOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

func (o GetApplicationsResultOutput) Applications() GetApplicationsApplicationArrayOutput {
	return o.ApplyT(func(v GetApplicationsResult) []GetApplicationsApplication { return v.Applications }).(GetApplicationsApplicationArrayOutput)
}

func (o GetApplicationsResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

func (o GetApplicationsResultOutput) FieldType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.FieldType }).(pulumi.StringPtrOutput)
}

func (o GetApplicationsResultOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetApplicationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApplicationsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetApplicationsResultOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.NamespaceId }).(pulumi.StringPtrOutput)
}

func (o GetApplicationsResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetApplicationsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetApplicationsResultOutput) Reverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *bool { return v.Reverse }).(pulumi.BoolPtrOutput)
}

func (o GetApplicationsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApplicationsResultOutput{})
}
