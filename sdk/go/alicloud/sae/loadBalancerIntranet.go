// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sae

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Alicloud Serverless App Engine (SAE) Application Load Balancer Attachment resource.
//
// For information about Serverless App Engine (SAE) Load Balancer Intranet Attachment and how to use it, see [sae.LoadBalancerIntranet](https://help.aliyun.com/document_detail/126360.html).
//
// > **NOTE:** Available in v1.165.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sae"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sae.NewLoadBalancerIntranet(ctx, "example", &sae.LoadBalancerIntranetArgs{
//				AppId: pulumi.String("your_application_id"),
//				Intranets: sae.LoadBalancerIntranetIntranetArray{
//					&sae.LoadBalancerIntranetIntranetArgs{
//						Port:       pulumi.Int(80),
//						Protocol:   pulumi.String("TCP"),
//						TargetPort: pulumi.Int(8080),
//					},
//				},
//				IntranetSlbId: pulumi.String("intranet_slb_id"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The resource can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:sae/loadBalancerIntranet:LoadBalancerIntranet example <id>
//
// ```
type LoadBalancerIntranet struct {
	pulumi.CustomResourceState

	// The target application ID that needs to be bound to the SLB.
	AppId pulumi.StringOutput `pulumi:"appId"`
	// Use designated private network SLBs that have been purchased to support non-shared instances.
	IntranetIp pulumi.StringOutput `pulumi:"intranetIp"`
	// The intranet SLB ID.
	IntranetSlbId pulumi.StringPtrOutput `pulumi:"intranetSlbId"`
	// The bound private network SLB. See the following `Block intranet`.
	Intranets LoadBalancerIntranetIntranetArrayOutput `pulumi:"intranets"`
}

// NewLoadBalancerIntranet registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerIntranet(ctx *pulumi.Context,
	name string, args *LoadBalancerIntranetArgs, opts ...pulumi.ResourceOption) (*LoadBalancerIntranet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.Intranets == nil {
		return nil, errors.New("invalid value for required argument 'Intranets'")
	}
	var resource LoadBalancerIntranet
	err := ctx.RegisterResource("alicloud:sae/loadBalancerIntranet:LoadBalancerIntranet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerIntranet gets an existing LoadBalancerIntranet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerIntranet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerIntranetState, opts ...pulumi.ResourceOption) (*LoadBalancerIntranet, error) {
	var resource LoadBalancerIntranet
	err := ctx.ReadResource("alicloud:sae/loadBalancerIntranet:LoadBalancerIntranet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerIntranet resources.
type loadBalancerIntranetState struct {
	// The target application ID that needs to be bound to the SLB.
	AppId *string `pulumi:"appId"`
	// Use designated private network SLBs that have been purchased to support non-shared instances.
	IntranetIp *string `pulumi:"intranetIp"`
	// The intranet SLB ID.
	IntranetSlbId *string `pulumi:"intranetSlbId"`
	// The bound private network SLB. See the following `Block intranet`.
	Intranets []LoadBalancerIntranetIntranet `pulumi:"intranets"`
}

type LoadBalancerIntranetState struct {
	// The target application ID that needs to be bound to the SLB.
	AppId pulumi.StringPtrInput
	// Use designated private network SLBs that have been purchased to support non-shared instances.
	IntranetIp pulumi.StringPtrInput
	// The intranet SLB ID.
	IntranetSlbId pulumi.StringPtrInput
	// The bound private network SLB. See the following `Block intranet`.
	Intranets LoadBalancerIntranetIntranetArrayInput
}

func (LoadBalancerIntranetState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerIntranetState)(nil)).Elem()
}

type loadBalancerIntranetArgs struct {
	// The target application ID that needs to be bound to the SLB.
	AppId string `pulumi:"appId"`
	// The intranet SLB ID.
	IntranetSlbId *string `pulumi:"intranetSlbId"`
	// The bound private network SLB. See the following `Block intranet`.
	Intranets []LoadBalancerIntranetIntranet `pulumi:"intranets"`
}

// The set of arguments for constructing a LoadBalancerIntranet resource.
type LoadBalancerIntranetArgs struct {
	// The target application ID that needs to be bound to the SLB.
	AppId pulumi.StringInput
	// The intranet SLB ID.
	IntranetSlbId pulumi.StringPtrInput
	// The bound private network SLB. See the following `Block intranet`.
	Intranets LoadBalancerIntranetIntranetArrayInput
}

func (LoadBalancerIntranetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerIntranetArgs)(nil)).Elem()
}

type LoadBalancerIntranetInput interface {
	pulumi.Input

	ToLoadBalancerIntranetOutput() LoadBalancerIntranetOutput
	ToLoadBalancerIntranetOutputWithContext(ctx context.Context) LoadBalancerIntranetOutput
}

func (*LoadBalancerIntranet) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerIntranet)(nil)).Elem()
}

func (i *LoadBalancerIntranet) ToLoadBalancerIntranetOutput() LoadBalancerIntranetOutput {
	return i.ToLoadBalancerIntranetOutputWithContext(context.Background())
}

func (i *LoadBalancerIntranet) ToLoadBalancerIntranetOutputWithContext(ctx context.Context) LoadBalancerIntranetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerIntranetOutput)
}

// LoadBalancerIntranetArrayInput is an input type that accepts LoadBalancerIntranetArray and LoadBalancerIntranetArrayOutput values.
// You can construct a concrete instance of `LoadBalancerIntranetArrayInput` via:
//
//	LoadBalancerIntranetArray{ LoadBalancerIntranetArgs{...} }
type LoadBalancerIntranetArrayInput interface {
	pulumi.Input

	ToLoadBalancerIntranetArrayOutput() LoadBalancerIntranetArrayOutput
	ToLoadBalancerIntranetArrayOutputWithContext(context.Context) LoadBalancerIntranetArrayOutput
}

type LoadBalancerIntranetArray []LoadBalancerIntranetInput

func (LoadBalancerIntranetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerIntranet)(nil)).Elem()
}

func (i LoadBalancerIntranetArray) ToLoadBalancerIntranetArrayOutput() LoadBalancerIntranetArrayOutput {
	return i.ToLoadBalancerIntranetArrayOutputWithContext(context.Background())
}

func (i LoadBalancerIntranetArray) ToLoadBalancerIntranetArrayOutputWithContext(ctx context.Context) LoadBalancerIntranetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerIntranetArrayOutput)
}

// LoadBalancerIntranetMapInput is an input type that accepts LoadBalancerIntranetMap and LoadBalancerIntranetMapOutput values.
// You can construct a concrete instance of `LoadBalancerIntranetMapInput` via:
//
//	LoadBalancerIntranetMap{ "key": LoadBalancerIntranetArgs{...} }
type LoadBalancerIntranetMapInput interface {
	pulumi.Input

	ToLoadBalancerIntranetMapOutput() LoadBalancerIntranetMapOutput
	ToLoadBalancerIntranetMapOutputWithContext(context.Context) LoadBalancerIntranetMapOutput
}

type LoadBalancerIntranetMap map[string]LoadBalancerIntranetInput

func (LoadBalancerIntranetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerIntranet)(nil)).Elem()
}

func (i LoadBalancerIntranetMap) ToLoadBalancerIntranetMapOutput() LoadBalancerIntranetMapOutput {
	return i.ToLoadBalancerIntranetMapOutputWithContext(context.Background())
}

func (i LoadBalancerIntranetMap) ToLoadBalancerIntranetMapOutputWithContext(ctx context.Context) LoadBalancerIntranetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerIntranetMapOutput)
}

type LoadBalancerIntranetOutput struct{ *pulumi.OutputState }

func (LoadBalancerIntranetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerIntranet)(nil)).Elem()
}

func (o LoadBalancerIntranetOutput) ToLoadBalancerIntranetOutput() LoadBalancerIntranetOutput {
	return o
}

func (o LoadBalancerIntranetOutput) ToLoadBalancerIntranetOutputWithContext(ctx context.Context) LoadBalancerIntranetOutput {
	return o
}

// The target application ID that needs to be bound to the SLB.
func (o LoadBalancerIntranetOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerIntranet) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

// Use designated private network SLBs that have been purchased to support non-shared instances.
func (o LoadBalancerIntranetOutput) IntranetIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerIntranet) pulumi.StringOutput { return v.IntranetIp }).(pulumi.StringOutput)
}

// The intranet SLB ID.
func (o LoadBalancerIntranetOutput) IntranetSlbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerIntranet) pulumi.StringPtrOutput { return v.IntranetSlbId }).(pulumi.StringPtrOutput)
}

// The bound private network SLB. See the following `Block intranet`.
func (o LoadBalancerIntranetOutput) Intranets() LoadBalancerIntranetIntranetArrayOutput {
	return o.ApplyT(func(v *LoadBalancerIntranet) LoadBalancerIntranetIntranetArrayOutput { return v.Intranets }).(LoadBalancerIntranetIntranetArrayOutput)
}

type LoadBalancerIntranetArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerIntranetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerIntranet)(nil)).Elem()
}

func (o LoadBalancerIntranetArrayOutput) ToLoadBalancerIntranetArrayOutput() LoadBalancerIntranetArrayOutput {
	return o
}

func (o LoadBalancerIntranetArrayOutput) ToLoadBalancerIntranetArrayOutputWithContext(ctx context.Context) LoadBalancerIntranetArrayOutput {
	return o
}

func (o LoadBalancerIntranetArrayOutput) Index(i pulumi.IntInput) LoadBalancerIntranetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancerIntranet {
		return vs[0].([]*LoadBalancerIntranet)[vs[1].(int)]
	}).(LoadBalancerIntranetOutput)
}

type LoadBalancerIntranetMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerIntranetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerIntranet)(nil)).Elem()
}

func (o LoadBalancerIntranetMapOutput) ToLoadBalancerIntranetMapOutput() LoadBalancerIntranetMapOutput {
	return o
}

func (o LoadBalancerIntranetMapOutput) ToLoadBalancerIntranetMapOutputWithContext(ctx context.Context) LoadBalancerIntranetMapOutput {
	return o
}

func (o LoadBalancerIntranetMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerIntranetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancerIntranet {
		return vs[0].(map[string]*LoadBalancerIntranet)[vs[1].(string)]
	}).(LoadBalancerIntranetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerIntranetInput)(nil)).Elem(), &LoadBalancerIntranet{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerIntranetArrayInput)(nil)).Elem(), LoadBalancerIntranetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerIntranetMapInput)(nil)).Elem(), LoadBalancerIntranetMap{})
	pulumi.RegisterOutputType(LoadBalancerIntranetOutput{})
	pulumi.RegisterOutputType(LoadBalancerIntranetArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerIntranetMapOutput{})
}
