// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Elastic Block Storage(EBS) Disk Replica Pair resource.
//
// For information about Elastic Block Storage(EBS) Disk Replica Pair and how to use it, see [What is Disk Replica Pair](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ebs-2021-07-30-creatediskreplicapair).
//
// > **NOTE:** Available since v1.196.0.
//
// ## Import
//
// Elastic Block Storage(EBS) Disk Replica Pair can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ebs/diskReplicaPair:DiskReplicaPair example <id>
// ```
type DiskReplicaPair struct {
	pulumi.CustomResourceState

	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
	// - 10240 Kbps: equal to 10 Mbps.
	// - 20480 Kbps: equal to 20 Mbps.
	// - 51200 Kbps: equal to 50 Mbps.
	// - 102400 Kbps: equal to 100 Mbps.
	//
	// Default value: 10240.
	// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// The creation time of the resource
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId pulumi.StringOutput `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringOutput `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringOutput `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId pulumi.StringOutput `pulumi:"diskId"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	DiskReplicaPairName pulumi.StringOutput `pulumi:"diskReplicaPairName"`
	// Whether to synchronize immediately. Value range:
	// - true: Start data synchronization immediately.
	// - false: Data Synchronization starts after the RPO time period.
	//
	// Default value: false.
	OneShot pulumi.BoolPtrOutput `pulumi:"oneShot"`
	// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	//
	// Deprecated: Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	PairName pulumi.StringOutput `pulumi:"pairName"`
	// The payment type of the resource
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
	// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
	// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The unit of the purchase time of the asynchronous replication relationship. Value range:
	// - Week: Week.
	// - Month: Month.
	//
	// Default value: Month.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The region ID  of the resource
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
	ReverseReplicate pulumi.BoolPtrOutput `pulumi:"reverseReplicate"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo pulumi.IntOutput `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringOutput `pulumi:"sourceZoneId"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewDiskReplicaPair registers a new resource with the given unique name, arguments, and options.
func NewDiskReplicaPair(ctx *pulumi.Context,
	name string, args *DiskReplicaPairArgs, opts ...pulumi.ResourceOption) (*DiskReplicaPair, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationDiskId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationDiskId'")
	}
	if args.DestinationRegionId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationRegionId'")
	}
	if args.DestinationZoneId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationZoneId'")
	}
	if args.DiskId == nil {
		return nil, errors.New("invalid value for required argument 'DiskId'")
	}
	if args.SourceZoneId == nil {
		return nil, errors.New("invalid value for required argument 'SourceZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DiskReplicaPair
	err := ctx.RegisterResource("alicloud:ebs/diskReplicaPair:DiskReplicaPair", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiskReplicaPair gets an existing DiskReplicaPair resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiskReplicaPair(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiskReplicaPairState, opts ...pulumi.ResourceOption) (*DiskReplicaPair, error) {
	var resource DiskReplicaPair
	err := ctx.ReadResource("alicloud:ebs/diskReplicaPair:DiskReplicaPair", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiskReplicaPair resources.
type diskReplicaPairState struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
	// - 10240 Kbps: equal to 10 Mbps.
	// - 20480 Kbps: equal to 20 Mbps.
	// - 51200 Kbps: equal to 50 Mbps.
	// - 102400 Kbps: equal to 100 Mbps.
	//
	// Default value: 10240.
	// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth *int `pulumi:"bandwidth"`
	// The creation time of the resource
	CreateTime *int `pulumi:"createTime"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description *string `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId *string `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId *string `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId *string `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId *string `pulumi:"diskId"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	DiskReplicaPairName *string `pulumi:"diskReplicaPairName"`
	// Whether to synchronize immediately. Value range:
	// - true: Start data synchronization immediately.
	// - false: Data Synchronization starts after the RPO time period.
	//
	// Default value: false.
	OneShot *bool `pulumi:"oneShot"`
	// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	//
	// Deprecated: Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	PairName *string `pulumi:"pairName"`
	// The payment type of the resource
	PaymentType *string `pulumi:"paymentType"`
	// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
	// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
	// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
	Period *int `pulumi:"period"`
	// The unit of the purchase time of the asynchronous replication relationship. Value range:
	// - Week: Week.
	// - Month: Month.
	//
	// Default value: Month.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The region ID  of the resource
	RegionId *string `pulumi:"regionId"`
	// The ID of the resource group
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
	ReverseReplicate *bool `pulumi:"reverseReplicate"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo *int `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId *string `pulumi:"sourceZoneId"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// The tag of the resource
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags map[string]string `pulumi:"tags"`
}

type DiskReplicaPairState struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
	// - 10240 Kbps: equal to 10 Mbps.
	// - 20480 Kbps: equal to 20 Mbps.
	// - 51200 Kbps: equal to 50 Mbps.
	// - 102400 Kbps: equal to 100 Mbps.
	//
	// Default value: 10240.
	// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth pulumi.IntPtrInput
	// The creation time of the resource
	CreateTime pulumi.IntPtrInput
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description pulumi.StringPtrInput
	// The ID of the standby disk.
	DestinationDiskId pulumi.StringPtrInput
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringPtrInput
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringPtrInput
	// The ID of the primary disk.
	DiskId pulumi.StringPtrInput
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	DiskReplicaPairName pulumi.StringPtrInput
	// Whether to synchronize immediately. Value range:
	// - true: Start data synchronization immediately.
	// - false: Data Synchronization starts after the RPO time period.
	//
	// Default value: false.
	OneShot pulumi.BoolPtrInput
	// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	//
	// Deprecated: Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	PairName pulumi.StringPtrInput
	// The payment type of the resource
	PaymentType pulumi.StringPtrInput
	// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
	// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
	// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
	Period pulumi.IntPtrInput
	// The unit of the purchase time of the asynchronous replication relationship. Value range:
	// - Week: Week.
	// - Month: Month.
	//
	// Default value: Month.
	PeriodUnit pulumi.StringPtrInput
	// The region ID  of the resource
	RegionId pulumi.StringPtrInput
	// The ID of the resource group
	ResourceGroupId pulumi.StringPtrInput
	// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
	ReverseReplicate pulumi.BoolPtrInput
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo pulumi.IntPtrInput
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
	// The tag of the resource
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags pulumi.StringMapInput
}

func (DiskReplicaPairState) ElementType() reflect.Type {
	return reflect.TypeOf((*diskReplicaPairState)(nil)).Elem()
}

type diskReplicaPairArgs struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
	// - 10240 Kbps: equal to 10 Mbps.
	// - 20480 Kbps: equal to 20 Mbps.
	// - 51200 Kbps: equal to 50 Mbps.
	// - 102400 Kbps: equal to 100 Mbps.
	//
	// Default value: 10240.
	// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth *int `pulumi:"bandwidth"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description *string `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId string `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId string `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId string `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId string `pulumi:"diskId"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	DiskReplicaPairName *string `pulumi:"diskReplicaPairName"`
	// Whether to synchronize immediately. Value range:
	// - true: Start data synchronization immediately.
	// - false: Data Synchronization starts after the RPO time period.
	//
	// Default value: false.
	OneShot *bool `pulumi:"oneShot"`
	// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	//
	// Deprecated: Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	PairName *string `pulumi:"pairName"`
	// The payment type of the resource
	PaymentType *string `pulumi:"paymentType"`
	// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
	// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
	// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
	Period *int `pulumi:"period"`
	// The unit of the purchase time of the asynchronous replication relationship. Value range:
	// - Week: Week.
	// - Month: Month.
	//
	// Default value: Month.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The ID of the resource group
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
	ReverseReplicate *bool `pulumi:"reverseReplicate"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo *int `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId string `pulumi:"sourceZoneId"`
	// The tag of the resource
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DiskReplicaPair resource.
type DiskReplicaPairArgs struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
	// - 10240 Kbps: equal to 10 Mbps.
	// - 20480 Kbps: equal to 20 Mbps.
	// - 51200 Kbps: equal to 50 Mbps.
	// - 102400 Kbps: equal to 100 Mbps.
	//
	// Default value: 10240.
	// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth pulumi.IntPtrInput
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description pulumi.StringPtrInput
	// The ID of the standby disk.
	DestinationDiskId pulumi.StringInput
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringInput
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringInput
	// The ID of the primary disk.
	DiskId pulumi.StringInput
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	DiskReplicaPairName pulumi.StringPtrInput
	// Whether to synchronize immediately. Value range:
	// - true: Start data synchronization immediately.
	// - false: Data Synchronization starts after the RPO time period.
	//
	// Default value: false.
	OneShot pulumi.BoolPtrInput
	// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	//
	// Deprecated: Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
	PairName pulumi.StringPtrInput
	// The payment type of the resource
	PaymentType pulumi.StringPtrInput
	// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
	// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
	// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
	Period pulumi.IntPtrInput
	// The unit of the purchase time of the asynchronous replication relationship. Value range:
	// - Week: Week.
	// - Month: Month.
	//
	// Default value: Month.
	PeriodUnit pulumi.StringPtrInput
	// The ID of the resource group
	ResourceGroupId pulumi.StringPtrInput
	// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
	ReverseReplicate pulumi.BoolPtrInput
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo pulumi.IntPtrInput
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringInput
	// The tag of the resource
	//
	// The following arguments will be discarded. Please use new fields as soon as possible:
	Tags pulumi.StringMapInput
}

func (DiskReplicaPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*diskReplicaPairArgs)(nil)).Elem()
}

type DiskReplicaPairInput interface {
	pulumi.Input

	ToDiskReplicaPairOutput() DiskReplicaPairOutput
	ToDiskReplicaPairOutputWithContext(ctx context.Context) DiskReplicaPairOutput
}

func (*DiskReplicaPair) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskReplicaPair)(nil)).Elem()
}

func (i *DiskReplicaPair) ToDiskReplicaPairOutput() DiskReplicaPairOutput {
	return i.ToDiskReplicaPairOutputWithContext(context.Background())
}

func (i *DiskReplicaPair) ToDiskReplicaPairOutputWithContext(ctx context.Context) DiskReplicaPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskReplicaPairOutput)
}

// DiskReplicaPairArrayInput is an input type that accepts DiskReplicaPairArray and DiskReplicaPairArrayOutput values.
// You can construct a concrete instance of `DiskReplicaPairArrayInput` via:
//
//	DiskReplicaPairArray{ DiskReplicaPairArgs{...} }
type DiskReplicaPairArrayInput interface {
	pulumi.Input

	ToDiskReplicaPairArrayOutput() DiskReplicaPairArrayOutput
	ToDiskReplicaPairArrayOutputWithContext(context.Context) DiskReplicaPairArrayOutput
}

type DiskReplicaPairArray []DiskReplicaPairInput

func (DiskReplicaPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiskReplicaPair)(nil)).Elem()
}

func (i DiskReplicaPairArray) ToDiskReplicaPairArrayOutput() DiskReplicaPairArrayOutput {
	return i.ToDiskReplicaPairArrayOutputWithContext(context.Background())
}

func (i DiskReplicaPairArray) ToDiskReplicaPairArrayOutputWithContext(ctx context.Context) DiskReplicaPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskReplicaPairArrayOutput)
}

// DiskReplicaPairMapInput is an input type that accepts DiskReplicaPairMap and DiskReplicaPairMapOutput values.
// You can construct a concrete instance of `DiskReplicaPairMapInput` via:
//
//	DiskReplicaPairMap{ "key": DiskReplicaPairArgs{...} }
type DiskReplicaPairMapInput interface {
	pulumi.Input

	ToDiskReplicaPairMapOutput() DiskReplicaPairMapOutput
	ToDiskReplicaPairMapOutputWithContext(context.Context) DiskReplicaPairMapOutput
}

type DiskReplicaPairMap map[string]DiskReplicaPairInput

func (DiskReplicaPairMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiskReplicaPair)(nil)).Elem()
}

func (i DiskReplicaPairMap) ToDiskReplicaPairMapOutput() DiskReplicaPairMapOutput {
	return i.ToDiskReplicaPairMapOutputWithContext(context.Background())
}

func (i DiskReplicaPairMap) ToDiskReplicaPairMapOutputWithContext(ctx context.Context) DiskReplicaPairMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskReplicaPairMapOutput)
}

type DiskReplicaPairOutput struct{ *pulumi.OutputState }

func (DiskReplicaPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskReplicaPair)(nil)).Elem()
}

func (o DiskReplicaPairOutput) ToDiskReplicaPairOutput() DiskReplicaPairOutput {
	return o
}

func (o DiskReplicaPairOutput) ToDiskReplicaPairOutputWithContext(ctx context.Context) DiskReplicaPairOutput {
	return o
}

// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
// - 10240 Kbps: equal to 10 Mbps.
// - 20480 Kbps: equal to 20 Mbps.
// - 51200 Kbps: equal to 50 Mbps.
// - 102400 Kbps: equal to 100 Mbps.
//
// Default value: 10240.
// This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
func (o DiskReplicaPairOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.IntPtrOutput { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// The creation time of the resource
func (o DiskReplicaPairOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
func (o DiskReplicaPairOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the standby disk.
func (o DiskReplicaPairOutput) DestinationDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.DestinationDiskId }).(pulumi.StringOutput)
}

// The ID of the region to which the disaster recovery site belongs.
func (o DiskReplicaPairOutput) DestinationRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.DestinationRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the disaster recovery site belongs.
func (o DiskReplicaPairOutput) DestinationZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.DestinationZoneId }).(pulumi.StringOutput)
}

// The ID of the primary disk.
func (o DiskReplicaPairOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.DiskId }).(pulumi.StringOutput)
}

// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
func (o DiskReplicaPairOutput) DiskReplicaPairName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.DiskReplicaPairName }).(pulumi.StringOutput)
}

// Whether to synchronize immediately. Value range:
// - true: Start data synchronization immediately.
// - false: Data Synchronization starts after the RPO time period.
//
// Default value: false.
func (o DiskReplicaPairOutput) OneShot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.BoolPtrOutput { return v.OneShot }).(pulumi.BoolPtrOutput)
}

// . Field 'pair_name' has been deprecated from provider version 1.245.0. New field 'disk_replica_pair_name' instead.
//
// Deprecated: Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead.
func (o DiskReplicaPairOutput) PairName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.PairName }).(pulumi.StringOutput)
}

// The payment type of the resource
func (o DiskReplicaPairOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// The purchase duration of the asynchronous replication relationship. This parameter is required when 'ChargeType = PrePay. The duration unit is specified by'periodunit', and the value range is:
// - When 'PeriodUnit = Week', the value range of this parameter is 1, 2, 3, and 4.
// - When 'PeriodUnit = Month', the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
func (o DiskReplicaPairOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The unit of the purchase time of the asynchronous replication relationship. Value range:
// - Week: Week.
// - Month: Month.
//
// Default value: Month.
func (o DiskReplicaPairOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// The region ID  of the resource
func (o DiskReplicaPairOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The ID of the resource group
func (o DiskReplicaPairOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
func (o DiskReplicaPairOutput) ReverseReplicate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.BoolPtrOutput { return v.ReverseReplicate }).(pulumi.BoolPtrOutput)
}

// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
func (o DiskReplicaPairOutput) Rpo() pulumi.IntOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.IntOutput { return v.Rpo }).(pulumi.IntOutput)
}

// The ID of the zone to which the production site belongs.
func (o DiskReplicaPairOutput) SourceZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.SourceZoneId }).(pulumi.StringOutput)
}

// The status of the resource
func (o DiskReplicaPairOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource
//
// The following arguments will be discarded. Please use new fields as soon as possible:
func (o DiskReplicaPairOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DiskReplicaPair) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type DiskReplicaPairArrayOutput struct{ *pulumi.OutputState }

func (DiskReplicaPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiskReplicaPair)(nil)).Elem()
}

func (o DiskReplicaPairArrayOutput) ToDiskReplicaPairArrayOutput() DiskReplicaPairArrayOutput {
	return o
}

func (o DiskReplicaPairArrayOutput) ToDiskReplicaPairArrayOutputWithContext(ctx context.Context) DiskReplicaPairArrayOutput {
	return o
}

func (o DiskReplicaPairArrayOutput) Index(i pulumi.IntInput) DiskReplicaPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DiskReplicaPair {
		return vs[0].([]*DiskReplicaPair)[vs[1].(int)]
	}).(DiskReplicaPairOutput)
}

type DiskReplicaPairMapOutput struct{ *pulumi.OutputState }

func (DiskReplicaPairMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiskReplicaPair)(nil)).Elem()
}

func (o DiskReplicaPairMapOutput) ToDiskReplicaPairMapOutput() DiskReplicaPairMapOutput {
	return o
}

func (o DiskReplicaPairMapOutput) ToDiskReplicaPairMapOutputWithContext(ctx context.Context) DiskReplicaPairMapOutput {
	return o
}

func (o DiskReplicaPairMapOutput) MapIndex(k pulumi.StringInput) DiskReplicaPairOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DiskReplicaPair {
		return vs[0].(map[string]*DiskReplicaPair)[vs[1].(string)]
	}).(DiskReplicaPairOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiskReplicaPairInput)(nil)).Elem(), &DiskReplicaPair{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskReplicaPairArrayInput)(nil)).Elem(), DiskReplicaPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskReplicaPairMapInput)(nil)).Elem(), DiskReplicaPairMap{})
	pulumi.RegisterOutputType(DiskReplicaPairOutput{})
	pulumi.RegisterOutputType(DiskReplicaPairArrayOutput{})
	pulumi.RegisterOutputType(DiskReplicaPairMapOutput{})
}
