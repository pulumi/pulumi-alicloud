// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnterpriseSnapshotPolicyCrossRegionCopyInfo struct {
	// Enable Snapshot replication.
	Enabled *bool `pulumi:"enabled"`
	// Destination region for Snapshot replication. See `regions` below.
	Regions []EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion `pulumi:"regions"`
}

// EnterpriseSnapshotPolicyCrossRegionCopyInfoInput is an input type that accepts EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs and EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyCrossRegionCopyInfoInput` via:
//
//	EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs{...}
type EnterpriseSnapshotPolicyCrossRegionCopyInfoInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput
	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutputWithContext(context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs struct {
	// Enable Snapshot replication.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Destination region for Snapshot replication. See `regions` below.
	Regions EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayInput `pulumi:"regions"`
}

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfo)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput {
	return i.ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput)
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return i.ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput).ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(ctx)
}

// EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrInput is an input type that accepts EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs, EnterpriseSnapshotPolicyCrossRegionCopyInfoPtr and EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrInput` via:
//
//	        EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs{...}
//
//	or:
//
//	        nil
type EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput
	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput
}

type enterpriseSnapshotPolicyCrossRegionCopyInfoPtrType EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs

func EnterpriseSnapshotPolicyCrossRegionCopyInfoPtr(v *EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs) EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrInput {
	return (*enterpriseSnapshotPolicyCrossRegionCopyInfoPtrType)(v)
}

func (*enterpriseSnapshotPolicyCrossRegionCopyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicyCrossRegionCopyInfo)(nil)).Elem()
}

func (i *enterpriseSnapshotPolicyCrossRegionCopyInfoPtrType) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return i.ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(context.Background())
}

func (i *enterpriseSnapshotPolicyCrossRegionCopyInfoPtrType) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput)
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfo)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return o.ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(context.Background())
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseSnapshotPolicyCrossRegionCopyInfo) *EnterpriseSnapshotPolicyCrossRegionCopyInfo {
		return &v
	}).(EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput)
}

// Enable Snapshot replication.
func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyCrossRegionCopyInfo) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Destination region for Snapshot replication. See `regions` below.
func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput) Regions() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyCrossRegionCopyInfo) []EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion {
		return v.Regions
	}).(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput)
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicyCrossRegionCopyInfo)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput) Elem() EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyCrossRegionCopyInfo) EnterpriseSnapshotPolicyCrossRegionCopyInfo {
		if v != nil {
			return *v
		}
		var ret EnterpriseSnapshotPolicyCrossRegionCopyInfo
		return ret
	}).(EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput)
}

// Enable Snapshot replication.
func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyCrossRegionCopyInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Destination region for Snapshot replication. See `regions` below.
func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput) Regions() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyCrossRegionCopyInfo) []EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput)
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion struct {
	// Destination region ID.
	RegionId *string `pulumi:"regionId"`
	// Number of days of snapshot retention for replication.
	RetainDays *int `pulumi:"retainDays"`
}

// EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionInput is an input type that accepts EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs and EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionInput` via:
//
//	EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs{...}
type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput
	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutputWithContext(context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs struct {
	// Destination region ID.
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
	// Number of days of snapshot retention for replication.
	RetainDays pulumi.IntPtrInput `pulumi:"retainDays"`
}

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput {
	return i.ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput)
}

// EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayInput is an input type that accepts EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray and EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayInput` via:
//
//	EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray{ EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs{...} }
type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput
	ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutputWithContext(context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray []EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionInput

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput {
	return i.ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput)
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput {
	return o
}

// Destination region ID.
func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

// Number of days of snapshot retention for replication.
func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput) RetainDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion) *int { return v.RetainDays }).(pulumi.IntPtrOutput)
}

type EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput() EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput) ToEnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput {
	return o
}

func (o EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput) Index(i pulumi.IntInput) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion {
		return vs[0].([]EnterpriseSnapshotPolicyCrossRegionCopyInfoRegion)[vs[1].(int)]
	}).(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput)
}

type EnterpriseSnapshotPolicyRetainRule struct {
	// Retention based on counting method.
	Number *int `pulumi:"number"`
	// Time unit.
	TimeInterval *int `pulumi:"timeInterval"`
	// Time-based retention.
	TimeUnit *string `pulumi:"timeUnit"`
}

// EnterpriseSnapshotPolicyRetainRuleInput is an input type that accepts EnterpriseSnapshotPolicyRetainRuleArgs and EnterpriseSnapshotPolicyRetainRuleOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyRetainRuleInput` via:
//
//	EnterpriseSnapshotPolicyRetainRuleArgs{...}
type EnterpriseSnapshotPolicyRetainRuleInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyRetainRuleOutput() EnterpriseSnapshotPolicyRetainRuleOutput
	ToEnterpriseSnapshotPolicyRetainRuleOutputWithContext(context.Context) EnterpriseSnapshotPolicyRetainRuleOutput
}

type EnterpriseSnapshotPolicyRetainRuleArgs struct {
	// Retention based on counting method.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// Time unit.
	TimeInterval pulumi.IntPtrInput `pulumi:"timeInterval"`
	// Time-based retention.
	TimeUnit pulumi.StringPtrInput `pulumi:"timeUnit"`
}

func (EnterpriseSnapshotPolicyRetainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyRetainRule)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicyRetainRuleArgs) ToEnterpriseSnapshotPolicyRetainRuleOutput() EnterpriseSnapshotPolicyRetainRuleOutput {
	return i.ToEnterpriseSnapshotPolicyRetainRuleOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyRetainRuleArgs) ToEnterpriseSnapshotPolicyRetainRuleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyRetainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyRetainRuleOutput)
}

func (i EnterpriseSnapshotPolicyRetainRuleArgs) ToEnterpriseSnapshotPolicyRetainRulePtrOutput() EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return i.ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyRetainRuleArgs) ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyRetainRuleOutput).ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(ctx)
}

// EnterpriseSnapshotPolicyRetainRulePtrInput is an input type that accepts EnterpriseSnapshotPolicyRetainRuleArgs, EnterpriseSnapshotPolicyRetainRulePtr and EnterpriseSnapshotPolicyRetainRulePtrOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyRetainRulePtrInput` via:
//
//	        EnterpriseSnapshotPolicyRetainRuleArgs{...}
//
//	or:
//
//	        nil
type EnterpriseSnapshotPolicyRetainRulePtrInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyRetainRulePtrOutput() EnterpriseSnapshotPolicyRetainRulePtrOutput
	ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(context.Context) EnterpriseSnapshotPolicyRetainRulePtrOutput
}

type enterpriseSnapshotPolicyRetainRulePtrType EnterpriseSnapshotPolicyRetainRuleArgs

func EnterpriseSnapshotPolicyRetainRulePtr(v *EnterpriseSnapshotPolicyRetainRuleArgs) EnterpriseSnapshotPolicyRetainRulePtrInput {
	return (*enterpriseSnapshotPolicyRetainRulePtrType)(v)
}

func (*enterpriseSnapshotPolicyRetainRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicyRetainRule)(nil)).Elem()
}

func (i *enterpriseSnapshotPolicyRetainRulePtrType) ToEnterpriseSnapshotPolicyRetainRulePtrOutput() EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return i.ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(context.Background())
}

func (i *enterpriseSnapshotPolicyRetainRulePtrType) ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyRetainRulePtrOutput)
}

type EnterpriseSnapshotPolicyRetainRuleOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyRetainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyRetainRule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyRetainRuleOutput) ToEnterpriseSnapshotPolicyRetainRuleOutput() EnterpriseSnapshotPolicyRetainRuleOutput {
	return o
}

func (o EnterpriseSnapshotPolicyRetainRuleOutput) ToEnterpriseSnapshotPolicyRetainRuleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyRetainRuleOutput {
	return o
}

func (o EnterpriseSnapshotPolicyRetainRuleOutput) ToEnterpriseSnapshotPolicyRetainRulePtrOutput() EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return o.ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(context.Background())
}

func (o EnterpriseSnapshotPolicyRetainRuleOutput) ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseSnapshotPolicyRetainRule) *EnterpriseSnapshotPolicyRetainRule {
		return &v
	}).(EnterpriseSnapshotPolicyRetainRulePtrOutput)
}

// Retention based on counting method.
func (o EnterpriseSnapshotPolicyRetainRuleOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyRetainRule) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// Time unit.
func (o EnterpriseSnapshotPolicyRetainRuleOutput) TimeInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyRetainRule) *int { return v.TimeInterval }).(pulumi.IntPtrOutput)
}

// Time-based retention.
func (o EnterpriseSnapshotPolicyRetainRuleOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyRetainRule) *string { return v.TimeUnit }).(pulumi.StringPtrOutput)
}

type EnterpriseSnapshotPolicyRetainRulePtrOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyRetainRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicyRetainRule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyRetainRulePtrOutput) ToEnterpriseSnapshotPolicyRetainRulePtrOutput() EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicyRetainRulePtrOutput) ToEnterpriseSnapshotPolicyRetainRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyRetainRulePtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicyRetainRulePtrOutput) Elem() EnterpriseSnapshotPolicyRetainRuleOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyRetainRule) EnterpriseSnapshotPolicyRetainRule {
		if v != nil {
			return *v
		}
		var ret EnterpriseSnapshotPolicyRetainRule
		return ret
	}).(EnterpriseSnapshotPolicyRetainRuleOutput)
}

// Retention based on counting method.
func (o EnterpriseSnapshotPolicyRetainRulePtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyRetainRule) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Time unit.
func (o EnterpriseSnapshotPolicyRetainRulePtrOutput) TimeInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyRetainRule) *int {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.IntPtrOutput)
}

// Time-based retention.
func (o EnterpriseSnapshotPolicyRetainRulePtrOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyRetainRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeUnit
	}).(pulumi.StringPtrOutput)
}

type EnterpriseSnapshotPolicySchedule struct {
	// CronTab expression.
	CronExpression string `pulumi:"cronExpression"`
}

// EnterpriseSnapshotPolicyScheduleInput is an input type that accepts EnterpriseSnapshotPolicyScheduleArgs and EnterpriseSnapshotPolicyScheduleOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyScheduleInput` via:
//
//	EnterpriseSnapshotPolicyScheduleArgs{...}
type EnterpriseSnapshotPolicyScheduleInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyScheduleOutput() EnterpriseSnapshotPolicyScheduleOutput
	ToEnterpriseSnapshotPolicyScheduleOutputWithContext(context.Context) EnterpriseSnapshotPolicyScheduleOutput
}

type EnterpriseSnapshotPolicyScheduleArgs struct {
	// CronTab expression.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
}

func (EnterpriseSnapshotPolicyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicySchedule)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicyScheduleArgs) ToEnterpriseSnapshotPolicyScheduleOutput() EnterpriseSnapshotPolicyScheduleOutput {
	return i.ToEnterpriseSnapshotPolicyScheduleOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyScheduleArgs) ToEnterpriseSnapshotPolicyScheduleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyScheduleOutput)
}

func (i EnterpriseSnapshotPolicyScheduleArgs) ToEnterpriseSnapshotPolicySchedulePtrOutput() EnterpriseSnapshotPolicySchedulePtrOutput {
	return i.ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyScheduleArgs) ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyScheduleOutput).ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(ctx)
}

// EnterpriseSnapshotPolicySchedulePtrInput is an input type that accepts EnterpriseSnapshotPolicyScheduleArgs, EnterpriseSnapshotPolicySchedulePtr and EnterpriseSnapshotPolicySchedulePtrOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicySchedulePtrInput` via:
//
//	        EnterpriseSnapshotPolicyScheduleArgs{...}
//
//	or:
//
//	        nil
type EnterpriseSnapshotPolicySchedulePtrInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicySchedulePtrOutput() EnterpriseSnapshotPolicySchedulePtrOutput
	ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(context.Context) EnterpriseSnapshotPolicySchedulePtrOutput
}

type enterpriseSnapshotPolicySchedulePtrType EnterpriseSnapshotPolicyScheduleArgs

func EnterpriseSnapshotPolicySchedulePtr(v *EnterpriseSnapshotPolicyScheduleArgs) EnterpriseSnapshotPolicySchedulePtrInput {
	return (*enterpriseSnapshotPolicySchedulePtrType)(v)
}

func (*enterpriseSnapshotPolicySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicySchedule)(nil)).Elem()
}

func (i *enterpriseSnapshotPolicySchedulePtrType) ToEnterpriseSnapshotPolicySchedulePtrOutput() EnterpriseSnapshotPolicySchedulePtrOutput {
	return i.ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(context.Background())
}

func (i *enterpriseSnapshotPolicySchedulePtrType) ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicySchedulePtrOutput)
}

type EnterpriseSnapshotPolicyScheduleOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicySchedule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyScheduleOutput) ToEnterpriseSnapshotPolicyScheduleOutput() EnterpriseSnapshotPolicyScheduleOutput {
	return o
}

func (o EnterpriseSnapshotPolicyScheduleOutput) ToEnterpriseSnapshotPolicyScheduleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyScheduleOutput {
	return o
}

func (o EnterpriseSnapshotPolicyScheduleOutput) ToEnterpriseSnapshotPolicySchedulePtrOutput() EnterpriseSnapshotPolicySchedulePtrOutput {
	return o.ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(context.Background())
}

func (o EnterpriseSnapshotPolicyScheduleOutput) ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseSnapshotPolicySchedule) *EnterpriseSnapshotPolicySchedule {
		return &v
	}).(EnterpriseSnapshotPolicySchedulePtrOutput)
}

// CronTab expression.
func (o EnterpriseSnapshotPolicyScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicySchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

type EnterpriseSnapshotPolicySchedulePtrOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicySchedule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicySchedulePtrOutput) ToEnterpriseSnapshotPolicySchedulePtrOutput() EnterpriseSnapshotPolicySchedulePtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicySchedulePtrOutput) ToEnterpriseSnapshotPolicySchedulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySchedulePtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicySchedulePtrOutput) Elem() EnterpriseSnapshotPolicyScheduleOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicySchedule) EnterpriseSnapshotPolicySchedule {
		if v != nil {
			return *v
		}
		var ret EnterpriseSnapshotPolicySchedule
		return ret
	}).(EnterpriseSnapshotPolicyScheduleOutput)
}

// CronTab expression.
func (o EnterpriseSnapshotPolicySchedulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicySchedule) *string {
		if v == nil {
			return nil
		}
		return &v.CronExpression
	}).(pulumi.StringPtrOutput)
}

type EnterpriseSnapshotPolicySpecialRetainRules struct {
	// Whether special reservations are enabled. Value range:
	// - true
	// - false.
	Enabled *bool `pulumi:"enabled"`
	// List of special retention rules. See `rules` below.
	Rules []EnterpriseSnapshotPolicySpecialRetainRulesRule `pulumi:"rules"`
}

// EnterpriseSnapshotPolicySpecialRetainRulesInput is an input type that accepts EnterpriseSnapshotPolicySpecialRetainRulesArgs and EnterpriseSnapshotPolicySpecialRetainRulesOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicySpecialRetainRulesInput` via:
//
//	EnterpriseSnapshotPolicySpecialRetainRulesArgs{...}
type EnterpriseSnapshotPolicySpecialRetainRulesInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicySpecialRetainRulesOutput() EnterpriseSnapshotPolicySpecialRetainRulesOutput
	ToEnterpriseSnapshotPolicySpecialRetainRulesOutputWithContext(context.Context) EnterpriseSnapshotPolicySpecialRetainRulesOutput
}

type EnterpriseSnapshotPolicySpecialRetainRulesArgs struct {
	// Whether special reservations are enabled. Value range:
	// - true
	// - false.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of special retention rules. See `rules` below.
	Rules EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayInput `pulumi:"rules"`
}

func (EnterpriseSnapshotPolicySpecialRetainRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRules)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesArgs) ToEnterpriseSnapshotPolicySpecialRetainRulesOutput() EnterpriseSnapshotPolicySpecialRetainRulesOutput {
	return i.ToEnterpriseSnapshotPolicySpecialRetainRulesOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesArgs) ToEnterpriseSnapshotPolicySpecialRetainRulesOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicySpecialRetainRulesOutput)
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesArgs) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutput() EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return i.ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesArgs) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicySpecialRetainRulesOutput).ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(ctx)
}

// EnterpriseSnapshotPolicySpecialRetainRulesPtrInput is an input type that accepts EnterpriseSnapshotPolicySpecialRetainRulesArgs, EnterpriseSnapshotPolicySpecialRetainRulesPtr and EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicySpecialRetainRulesPtrInput` via:
//
//	        EnterpriseSnapshotPolicySpecialRetainRulesArgs{...}
//
//	or:
//
//	        nil
type EnterpriseSnapshotPolicySpecialRetainRulesPtrInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutput() EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput
	ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(context.Context) EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput
}

type enterpriseSnapshotPolicySpecialRetainRulesPtrType EnterpriseSnapshotPolicySpecialRetainRulesArgs

func EnterpriseSnapshotPolicySpecialRetainRulesPtr(v *EnterpriseSnapshotPolicySpecialRetainRulesArgs) EnterpriseSnapshotPolicySpecialRetainRulesPtrInput {
	return (*enterpriseSnapshotPolicySpecialRetainRulesPtrType)(v)
}

func (*enterpriseSnapshotPolicySpecialRetainRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicySpecialRetainRules)(nil)).Elem()
}

func (i *enterpriseSnapshotPolicySpecialRetainRulesPtrType) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutput() EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return i.ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(context.Background())
}

func (i *enterpriseSnapshotPolicySpecialRetainRulesPtrType) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput)
}

type EnterpriseSnapshotPolicySpecialRetainRulesOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicySpecialRetainRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRules)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesOutput() EnterpriseSnapshotPolicySpecialRetainRulesOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutput() EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return o.ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(context.Background())
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseSnapshotPolicySpecialRetainRules) *EnterpriseSnapshotPolicySpecialRetainRules {
		return &v
	}).(EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput)
}

// Whether special reservations are enabled. Value range:
// - true
// - false.
func (o EnterpriseSnapshotPolicySpecialRetainRulesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicySpecialRetainRules) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of special retention rules. See `rules` below.
func (o EnterpriseSnapshotPolicySpecialRetainRulesOutput) Rules() EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicySpecialRetainRules) []EnterpriseSnapshotPolicySpecialRetainRulesRule {
		return v.Rules
	}).(EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput)
}

type EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicySpecialRetainRules)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutput() EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesPtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput) Elem() EnterpriseSnapshotPolicySpecialRetainRulesOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicySpecialRetainRules) EnterpriseSnapshotPolicySpecialRetainRules {
		if v != nil {
			return *v
		}
		var ret EnterpriseSnapshotPolicySpecialRetainRules
		return ret
	}).(EnterpriseSnapshotPolicySpecialRetainRulesOutput)
}

// Whether special reservations are enabled. Value range:
// - true
// - false.
func (o EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicySpecialRetainRules) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List of special retention rules. See `rules` below.
func (o EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput) Rules() EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicySpecialRetainRules) []EnterpriseSnapshotPolicySpecialRetainRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput)
}

type EnterpriseSnapshotPolicySpecialRetainRulesRule struct {
	// The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
	// - WEEKS
	// - MONTHS
	// - YEARS.
	SpecialPeriodUnit *string `pulumi:"specialPeriodUnit"`
	// Time unit.
	TimeInterval *int `pulumi:"timeInterval"`
	// Time-based retention.
	TimeUnit *string `pulumi:"timeUnit"`
}

// EnterpriseSnapshotPolicySpecialRetainRulesRuleInput is an input type that accepts EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs and EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicySpecialRetainRulesRuleInput` via:
//
//	EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs{...}
type EnterpriseSnapshotPolicySpecialRetainRulesRuleInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutput() EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput
	ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutputWithContext(context.Context) EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput
}

type EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs struct {
	// The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
	// - WEEKS
	// - MONTHS
	// - YEARS.
	SpecialPeriodUnit pulumi.StringPtrInput `pulumi:"specialPeriodUnit"`
	// Time unit.
	TimeInterval pulumi.IntPtrInput `pulumi:"timeInterval"`
	// Time-based retention.
	TimeUnit pulumi.StringPtrInput `pulumi:"timeUnit"`
}

func (EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRulesRule)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutput() EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput {
	return i.ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput)
}

// EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayInput is an input type that accepts EnterpriseSnapshotPolicySpecialRetainRulesRuleArray and EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayInput` via:
//
//	EnterpriseSnapshotPolicySpecialRetainRulesRuleArray{ EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs{...} }
type EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput() EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput
	ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutputWithContext(context.Context) EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput
}

type EnterpriseSnapshotPolicySpecialRetainRulesRuleArray []EnterpriseSnapshotPolicySpecialRetainRulesRuleInput

func (EnterpriseSnapshotPolicySpecialRetainRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseSnapshotPolicySpecialRetainRulesRule)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesRuleArray) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput() EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput {
	return i.ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicySpecialRetainRulesRuleArray) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput)
}

type EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRulesRule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutput() EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput {
	return o
}

// The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
// - WEEKS
// - MONTHS
// - YEARS.
func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput) SpecialPeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicySpecialRetainRulesRule) *string { return v.SpecialPeriodUnit }).(pulumi.StringPtrOutput)
}

// Time unit.
func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput) TimeInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicySpecialRetainRulesRule) *int { return v.TimeInterval }).(pulumi.IntPtrOutput)
}

// Time-based retention.
func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicySpecialRetainRulesRule) *string { return v.TimeUnit }).(pulumi.StringPtrOutput)
}

type EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnterpriseSnapshotPolicySpecialRetainRulesRule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput() EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput) ToEnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput {
	return o
}

func (o EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput) Index(i pulumi.IntInput) EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnterpriseSnapshotPolicySpecialRetainRulesRule {
		return vs[0].([]EnterpriseSnapshotPolicySpecialRetainRulesRule)[vs[1].(int)]
	}).(EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput)
}

type EnterpriseSnapshotPolicyStorageRule struct {
	// Snapshot speed available.
	EnableImmediateAccess *bool `pulumi:"enableImmediateAccess"`
}

// EnterpriseSnapshotPolicyStorageRuleInput is an input type that accepts EnterpriseSnapshotPolicyStorageRuleArgs and EnterpriseSnapshotPolicyStorageRuleOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyStorageRuleInput` via:
//
//	EnterpriseSnapshotPolicyStorageRuleArgs{...}
type EnterpriseSnapshotPolicyStorageRuleInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyStorageRuleOutput() EnterpriseSnapshotPolicyStorageRuleOutput
	ToEnterpriseSnapshotPolicyStorageRuleOutputWithContext(context.Context) EnterpriseSnapshotPolicyStorageRuleOutput
}

type EnterpriseSnapshotPolicyStorageRuleArgs struct {
	// Snapshot speed available.
	EnableImmediateAccess pulumi.BoolPtrInput `pulumi:"enableImmediateAccess"`
}

func (EnterpriseSnapshotPolicyStorageRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyStorageRule)(nil)).Elem()
}

func (i EnterpriseSnapshotPolicyStorageRuleArgs) ToEnterpriseSnapshotPolicyStorageRuleOutput() EnterpriseSnapshotPolicyStorageRuleOutput {
	return i.ToEnterpriseSnapshotPolicyStorageRuleOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyStorageRuleArgs) ToEnterpriseSnapshotPolicyStorageRuleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyStorageRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyStorageRuleOutput)
}

func (i EnterpriseSnapshotPolicyStorageRuleArgs) ToEnterpriseSnapshotPolicyStorageRulePtrOutput() EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return i.ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(context.Background())
}

func (i EnterpriseSnapshotPolicyStorageRuleArgs) ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyStorageRuleOutput).ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(ctx)
}

// EnterpriseSnapshotPolicyStorageRulePtrInput is an input type that accepts EnterpriseSnapshotPolicyStorageRuleArgs, EnterpriseSnapshotPolicyStorageRulePtr and EnterpriseSnapshotPolicyStorageRulePtrOutput values.
// You can construct a concrete instance of `EnterpriseSnapshotPolicyStorageRulePtrInput` via:
//
//	        EnterpriseSnapshotPolicyStorageRuleArgs{...}
//
//	or:
//
//	        nil
type EnterpriseSnapshotPolicyStorageRulePtrInput interface {
	pulumi.Input

	ToEnterpriseSnapshotPolicyStorageRulePtrOutput() EnterpriseSnapshotPolicyStorageRulePtrOutput
	ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(context.Context) EnterpriseSnapshotPolicyStorageRulePtrOutput
}

type enterpriseSnapshotPolicyStorageRulePtrType EnterpriseSnapshotPolicyStorageRuleArgs

func EnterpriseSnapshotPolicyStorageRulePtr(v *EnterpriseSnapshotPolicyStorageRuleArgs) EnterpriseSnapshotPolicyStorageRulePtrInput {
	return (*enterpriseSnapshotPolicyStorageRulePtrType)(v)
}

func (*enterpriseSnapshotPolicyStorageRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicyStorageRule)(nil)).Elem()
}

func (i *enterpriseSnapshotPolicyStorageRulePtrType) ToEnterpriseSnapshotPolicyStorageRulePtrOutput() EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return i.ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(context.Background())
}

func (i *enterpriseSnapshotPolicyStorageRulePtrType) ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSnapshotPolicyStorageRulePtrOutput)
}

type EnterpriseSnapshotPolicyStorageRuleOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyStorageRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSnapshotPolicyStorageRule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyStorageRuleOutput) ToEnterpriseSnapshotPolicyStorageRuleOutput() EnterpriseSnapshotPolicyStorageRuleOutput {
	return o
}

func (o EnterpriseSnapshotPolicyStorageRuleOutput) ToEnterpriseSnapshotPolicyStorageRuleOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyStorageRuleOutput {
	return o
}

func (o EnterpriseSnapshotPolicyStorageRuleOutput) ToEnterpriseSnapshotPolicyStorageRulePtrOutput() EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return o.ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(context.Background())
}

func (o EnterpriseSnapshotPolicyStorageRuleOutput) ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnterpriseSnapshotPolicyStorageRule) *EnterpriseSnapshotPolicyStorageRule {
		return &v
	}).(EnterpriseSnapshotPolicyStorageRulePtrOutput)
}

// Snapshot speed available.
func (o EnterpriseSnapshotPolicyStorageRuleOutput) EnableImmediateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnterpriseSnapshotPolicyStorageRule) *bool { return v.EnableImmediateAccess }).(pulumi.BoolPtrOutput)
}

type EnterpriseSnapshotPolicyStorageRulePtrOutput struct{ *pulumi.OutputState }

func (EnterpriseSnapshotPolicyStorageRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnterpriseSnapshotPolicyStorageRule)(nil)).Elem()
}

func (o EnterpriseSnapshotPolicyStorageRulePtrOutput) ToEnterpriseSnapshotPolicyStorageRulePtrOutput() EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicyStorageRulePtrOutput) ToEnterpriseSnapshotPolicyStorageRulePtrOutputWithContext(ctx context.Context) EnterpriseSnapshotPolicyStorageRulePtrOutput {
	return o
}

func (o EnterpriseSnapshotPolicyStorageRulePtrOutput) Elem() EnterpriseSnapshotPolicyStorageRuleOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyStorageRule) EnterpriseSnapshotPolicyStorageRule {
		if v != nil {
			return *v
		}
		var ret EnterpriseSnapshotPolicyStorageRule
		return ret
	}).(EnterpriseSnapshotPolicyStorageRuleOutput)
}

// Snapshot speed available.
func (o EnterpriseSnapshotPolicyStorageRulePtrOutput) EnableImmediateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnterpriseSnapshotPolicyStorageRule) *bool {
		if v == nil {
			return nil
		}
		return v.EnableImmediateAccess
	}).(pulumi.BoolPtrOutput)
}

type GetDedicatedBlockStorageClustersCluster struct {
	// The available capacity of the dedicated block storage cluster. Unit: GiB.
	AvailableCapacity string `pulumi:"availableCapacity"`
	// The type of cloud disk that can be created by a dedicated block storage cluster.
	Category string `pulumi:"category"`
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// The first ID of the resource
	DedicatedBlockStorageClusterId string `pulumi:"dedicatedBlockStorageClusterId"`
	// The name of the resource
	DedicatedBlockStorageClusterName string `pulumi:"dedicatedBlockStorageClusterName"`
	// Capacity to be delivered in GB.
	DeliveryCapacity string `pulumi:"deliveryCapacity"`
	// The description of the dedicated block storage cluster.
	Description string `pulumi:"description"`
	// The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
	ExpiredTime string `pulumi:"expiredTime"`
	Id          string `pulumi:"id"`
	// Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
	PerformanceLevel string `pulumi:"performanceLevel"`
	// The ID of the resource group
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The status of the resource
	Status string `pulumi:"status"`
	// This parameter is not supported.
	SupportedCategory string `pulumi:"supportedCategory"`
	// The total capacity of the dedicated block storage cluster. Unit: GiB.
	TotalCapacity string `pulumi:"totalCapacity"`
	// The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
	Type string `pulumi:"type"`
	// The used (created disk) capacity of the current cluster, in GB
	UsedCapacity string `pulumi:"usedCapacity"`
	// The zone ID  of the resource
	ZoneId string `pulumi:"zoneId"`
}

// GetDedicatedBlockStorageClustersClusterInput is an input type that accepts GetDedicatedBlockStorageClustersClusterArgs and GetDedicatedBlockStorageClustersClusterOutput values.
// You can construct a concrete instance of `GetDedicatedBlockStorageClustersClusterInput` via:
//
//	GetDedicatedBlockStorageClustersClusterArgs{...}
type GetDedicatedBlockStorageClustersClusterInput interface {
	pulumi.Input

	ToGetDedicatedBlockStorageClustersClusterOutput() GetDedicatedBlockStorageClustersClusterOutput
	ToGetDedicatedBlockStorageClustersClusterOutputWithContext(context.Context) GetDedicatedBlockStorageClustersClusterOutput
}

type GetDedicatedBlockStorageClustersClusterArgs struct {
	// The available capacity of the dedicated block storage cluster. Unit: GiB.
	AvailableCapacity pulumi.StringInput `pulumi:"availableCapacity"`
	// The type of cloud disk that can be created by a dedicated block storage cluster.
	Category pulumi.StringInput `pulumi:"category"`
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The first ID of the resource
	DedicatedBlockStorageClusterId pulumi.StringInput `pulumi:"dedicatedBlockStorageClusterId"`
	// The name of the resource
	DedicatedBlockStorageClusterName pulumi.StringInput `pulumi:"dedicatedBlockStorageClusterName"`
	// Capacity to be delivered in GB.
	DeliveryCapacity pulumi.StringInput `pulumi:"deliveryCapacity"`
	// The description of the dedicated block storage cluster.
	Description pulumi.StringInput `pulumi:"description"`
	// The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	Id          pulumi.StringInput `pulumi:"id"`
	// Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
	PerformanceLevel pulumi.StringInput `pulumi:"performanceLevel"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// This parameter is not supported.
	SupportedCategory pulumi.StringInput `pulumi:"supportedCategory"`
	// The total capacity of the dedicated block storage cluster. Unit: GiB.
	TotalCapacity pulumi.StringInput `pulumi:"totalCapacity"`
	// The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
	Type pulumi.StringInput `pulumi:"type"`
	// The used (created disk) capacity of the current cluster, in GB
	UsedCapacity pulumi.StringInput `pulumi:"usedCapacity"`
	// The zone ID  of the resource
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetDedicatedBlockStorageClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (i GetDedicatedBlockStorageClustersClusterArgs) ToGetDedicatedBlockStorageClustersClusterOutput() GetDedicatedBlockStorageClustersClusterOutput {
	return i.ToGetDedicatedBlockStorageClustersClusterOutputWithContext(context.Background())
}

func (i GetDedicatedBlockStorageClustersClusterArgs) ToGetDedicatedBlockStorageClustersClusterOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedBlockStorageClustersClusterOutput)
}

// GetDedicatedBlockStorageClustersClusterArrayInput is an input type that accepts GetDedicatedBlockStorageClustersClusterArray and GetDedicatedBlockStorageClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetDedicatedBlockStorageClustersClusterArrayInput` via:
//
//	GetDedicatedBlockStorageClustersClusterArray{ GetDedicatedBlockStorageClustersClusterArgs{...} }
type GetDedicatedBlockStorageClustersClusterArrayInput interface {
	pulumi.Input

	ToGetDedicatedBlockStorageClustersClusterArrayOutput() GetDedicatedBlockStorageClustersClusterArrayOutput
	ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(context.Context) GetDedicatedBlockStorageClustersClusterArrayOutput
}

type GetDedicatedBlockStorageClustersClusterArray []GetDedicatedBlockStorageClustersClusterInput

func (GetDedicatedBlockStorageClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (i GetDedicatedBlockStorageClustersClusterArray) ToGetDedicatedBlockStorageClustersClusterArrayOutput() GetDedicatedBlockStorageClustersClusterArrayOutput {
	return i.ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetDedicatedBlockStorageClustersClusterArray) ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedBlockStorageClustersClusterArrayOutput)
}

type GetDedicatedBlockStorageClustersClusterOutput struct{ *pulumi.OutputState }

func (GetDedicatedBlockStorageClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (o GetDedicatedBlockStorageClustersClusterOutput) ToGetDedicatedBlockStorageClustersClusterOutput() GetDedicatedBlockStorageClustersClusterOutput {
	return o
}

func (o GetDedicatedBlockStorageClustersClusterOutput) ToGetDedicatedBlockStorageClustersClusterOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterOutput {
	return o
}

// The available capacity of the dedicated block storage cluster. Unit: GiB.
func (o GetDedicatedBlockStorageClustersClusterOutput) AvailableCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.AvailableCapacity }).(pulumi.StringOutput)
}

// The type of cloud disk that can be created by a dedicated block storage cluster.
func (o GetDedicatedBlockStorageClustersClusterOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Category }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) DedicatedBlockStorageClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.DedicatedBlockStorageClusterId }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) DedicatedBlockStorageClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.DedicatedBlockStorageClusterName }).(pulumi.StringOutput)
}

// Capacity to be delivered in GB.
func (o GetDedicatedBlockStorageClustersClusterOutput) DeliveryCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.DeliveryCapacity }).(pulumi.StringOutput)
}

// The description of the dedicated block storage cluster.
func (o GetDedicatedBlockStorageClustersClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Description }).(pulumi.StringOutput)
}

// The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
func (o GetDedicatedBlockStorageClustersClusterOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

func (o GetDedicatedBlockStorageClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
func (o GetDedicatedBlockStorageClustersClusterOutput) PerformanceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.PerformanceLevel }).(pulumi.StringOutput)
}

// The ID of the resource group
func (o GetDedicatedBlockStorageClustersClusterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The status of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

// This parameter is not supported.
func (o GetDedicatedBlockStorageClustersClusterOutput) SupportedCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.SupportedCategory }).(pulumi.StringOutput)
}

// The total capacity of the dedicated block storage cluster. Unit: GiB.
func (o GetDedicatedBlockStorageClustersClusterOutput) TotalCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.TotalCapacity }).(pulumi.StringOutput)
}

// The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
func (o GetDedicatedBlockStorageClustersClusterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Type }).(pulumi.StringOutput)
}

// The used (created disk) capacity of the current cluster, in GB
func (o GetDedicatedBlockStorageClustersClusterOutput) UsedCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.UsedCapacity }).(pulumi.StringOutput)
}

// The zone ID  of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetDedicatedBlockStorageClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedBlockStorageClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (o GetDedicatedBlockStorageClustersClusterArrayOutput) ToGetDedicatedBlockStorageClustersClusterArrayOutput() GetDedicatedBlockStorageClustersClusterArrayOutput {
	return o
}

func (o GetDedicatedBlockStorageClustersClusterArrayOutput) ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterArrayOutput {
	return o
}

func (o GetDedicatedBlockStorageClustersClusterArrayOutput) Index(i pulumi.IntInput) GetDedicatedBlockStorageClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedBlockStorageClustersCluster {
		return vs[0].([]GetDedicatedBlockStorageClustersCluster)[vs[1].(int)]
	}).(GetDedicatedBlockStorageClustersClusterOutput)
}

type GetDiskReplicaGroupsGroup struct {
	// The description of the consistent replication group.
	Description string `pulumi:"description"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId string `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId string `pulumi:"destinationZoneId"`
	// Consistent replication group name.
	GroupName string `pulumi:"groupName"`
	// The ID of the Disk Replica Group.
	Id               string `pulumi:"id"`
	LastRecoverPoint string `pulumi:"lastRecoverPoint"`
	// The initial source region of the replication group.
	PrimaryRegion string `pulumi:"primaryRegion"`
	// The initial source available area of the replication group.
	PrimaryZone string `pulumi:"primaryZone"`
	// The ID of the consistent replication group.
	ReplicaGroupId string `pulumi:"replicaGroupId"`
	// The recovery point objective (RPO) of the replication pair-consistent group.
	Rpo int `pulumi:"rpo"`
	// Site information sources for replication pairs and consistent replication groups.
	Site string `pulumi:"site"`
	// The ID of the region to which the production site belongs.
	SourceRegionId string `pulumi:"sourceRegionId"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId string `pulumi:"sourceZoneId"`
	// The initial destination region of the replication group.
	StandbyRegion string `pulumi:"standbyRegion"`
	// The initial destination zone of the replication group.
	StandbyZone string `pulumi:"standbyZone"`
	// The status of the consistent replication group. Possible values:
	Status string `pulumi:"status"`
}

// GetDiskReplicaGroupsGroupInput is an input type that accepts GetDiskReplicaGroupsGroupArgs and GetDiskReplicaGroupsGroupOutput values.
// You can construct a concrete instance of `GetDiskReplicaGroupsGroupInput` via:
//
//	GetDiskReplicaGroupsGroupArgs{...}
type GetDiskReplicaGroupsGroupInput interface {
	pulumi.Input

	ToGetDiskReplicaGroupsGroupOutput() GetDiskReplicaGroupsGroupOutput
	ToGetDiskReplicaGroupsGroupOutputWithContext(context.Context) GetDiskReplicaGroupsGroupOutput
}

type GetDiskReplicaGroupsGroupArgs struct {
	// The description of the consistent replication group.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringInput `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringInput `pulumi:"destinationZoneId"`
	// Consistent replication group name.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The ID of the Disk Replica Group.
	Id               pulumi.StringInput `pulumi:"id"`
	LastRecoverPoint pulumi.StringInput `pulumi:"lastRecoverPoint"`
	// The initial source region of the replication group.
	PrimaryRegion pulumi.StringInput `pulumi:"primaryRegion"`
	// The initial source available area of the replication group.
	PrimaryZone pulumi.StringInput `pulumi:"primaryZone"`
	// The ID of the consistent replication group.
	ReplicaGroupId pulumi.StringInput `pulumi:"replicaGroupId"`
	// The recovery point objective (RPO) of the replication pair-consistent group.
	Rpo pulumi.IntInput `pulumi:"rpo"`
	// Site information sources for replication pairs and consistent replication groups.
	Site pulumi.StringInput `pulumi:"site"`
	// The ID of the region to which the production site belongs.
	SourceRegionId pulumi.StringInput `pulumi:"sourceRegionId"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringInput `pulumi:"sourceZoneId"`
	// The initial destination region of the replication group.
	StandbyRegion pulumi.StringInput `pulumi:"standbyRegion"`
	// The initial destination zone of the replication group.
	StandbyZone pulumi.StringInput `pulumi:"standbyZone"`
	// The status of the consistent replication group. Possible values:
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDiskReplicaGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (i GetDiskReplicaGroupsGroupArgs) ToGetDiskReplicaGroupsGroupOutput() GetDiskReplicaGroupsGroupOutput {
	return i.ToGetDiskReplicaGroupsGroupOutputWithContext(context.Background())
}

func (i GetDiskReplicaGroupsGroupArgs) ToGetDiskReplicaGroupsGroupOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaGroupsGroupOutput)
}

// GetDiskReplicaGroupsGroupArrayInput is an input type that accepts GetDiskReplicaGroupsGroupArray and GetDiskReplicaGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDiskReplicaGroupsGroupArrayInput` via:
//
//	GetDiskReplicaGroupsGroupArray{ GetDiskReplicaGroupsGroupArgs{...} }
type GetDiskReplicaGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDiskReplicaGroupsGroupArrayOutput() GetDiskReplicaGroupsGroupArrayOutput
	ToGetDiskReplicaGroupsGroupArrayOutputWithContext(context.Context) GetDiskReplicaGroupsGroupArrayOutput
}

type GetDiskReplicaGroupsGroupArray []GetDiskReplicaGroupsGroupInput

func (GetDiskReplicaGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (i GetDiskReplicaGroupsGroupArray) ToGetDiskReplicaGroupsGroupArrayOutput() GetDiskReplicaGroupsGroupArrayOutput {
	return i.ToGetDiskReplicaGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDiskReplicaGroupsGroupArray) ToGetDiskReplicaGroupsGroupArrayOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaGroupsGroupArrayOutput)
}

type GetDiskReplicaGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (o GetDiskReplicaGroupsGroupOutput) ToGetDiskReplicaGroupsGroupOutput() GetDiskReplicaGroupsGroupOutput {
	return o
}

func (o GetDiskReplicaGroupsGroupOutput) ToGetDiskReplicaGroupsGroupOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupOutput {
	return o
}

// The description of the consistent replication group.
func (o GetDiskReplicaGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the region to which the disaster recovery site belongs.
func (o GetDiskReplicaGroupsGroupOutput) DestinationRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.DestinationRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the disaster recovery site belongs.
func (o GetDiskReplicaGroupsGroupOutput) DestinationZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.DestinationZoneId }).(pulumi.StringOutput)
}

// Consistent replication group name.
func (o GetDiskReplicaGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// The ID of the Disk Replica Group.
func (o GetDiskReplicaGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDiskReplicaGroupsGroupOutput) LastRecoverPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.LastRecoverPoint }).(pulumi.StringOutput)
}

// The initial source region of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) PrimaryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.PrimaryRegion }).(pulumi.StringOutput)
}

// The initial source available area of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) PrimaryZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.PrimaryZone }).(pulumi.StringOutput)
}

// The ID of the consistent replication group.
func (o GetDiskReplicaGroupsGroupOutput) ReplicaGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.ReplicaGroupId }).(pulumi.StringOutput)
}

// The recovery point objective (RPO) of the replication pair-consistent group.
func (o GetDiskReplicaGroupsGroupOutput) Rpo() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) int { return v.Rpo }).(pulumi.IntOutput)
}

// Site information sources for replication pairs and consistent replication groups.
func (o GetDiskReplicaGroupsGroupOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Site }).(pulumi.StringOutput)
}

// The ID of the region to which the production site belongs.
func (o GetDiskReplicaGroupsGroupOutput) SourceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.SourceRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the production site belongs.
func (o GetDiskReplicaGroupsGroupOutput) SourceZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.SourceZoneId }).(pulumi.StringOutput)
}

// The initial destination region of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) StandbyRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.StandbyRegion }).(pulumi.StringOutput)
}

// The initial destination zone of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) StandbyZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.StandbyZone }).(pulumi.StringOutput)
}

// The status of the consistent replication group. Possible values:
func (o GetDiskReplicaGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

type GetDiskReplicaGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (o GetDiskReplicaGroupsGroupArrayOutput) ToGetDiskReplicaGroupsGroupArrayOutput() GetDiskReplicaGroupsGroupArrayOutput {
	return o
}

func (o GetDiskReplicaGroupsGroupArrayOutput) ToGetDiskReplicaGroupsGroupArrayOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupArrayOutput {
	return o
}

func (o GetDiskReplicaGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDiskReplicaGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskReplicaGroupsGroup {
		return vs[0].([]GetDiskReplicaGroupsGroup)[vs[1].(int)]
	}).(GetDiskReplicaGroupsGroupOutput)
}

type GetDiskReplicaPairsPair struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:-10240 Kbps: equal to 10 Mbps.-20480 Kbps: equal to 20 Mbps.-51200 Kbps: equal to 50 Mbps.-102400 Kbps: equal to 100 Mbps.Default value: 10240.This parameter cannot be specified when the ChargeType value is POSTPAY. The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth string `pulumi:"bandwidth"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description string `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId string `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId string `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId string `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId string `pulumi:"diskId"`
	Id     string `pulumi:"id"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	PairName string `pulumi:"pairName"`
	// The payment type of the resource.
	PaymentType string `pulumi:"paymentType"`
	// The first ID of the resource
	ReplicaPairId string `pulumi:"replicaPairId"`
	// The ID of the resource group
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo string `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId string `pulumi:"sourceZoneId"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetDiskReplicaPairsPairInput is an input type that accepts GetDiskReplicaPairsPairArgs and GetDiskReplicaPairsPairOutput values.
// You can construct a concrete instance of `GetDiskReplicaPairsPairInput` via:
//
//	GetDiskReplicaPairsPairArgs{...}
type GetDiskReplicaPairsPairInput interface {
	pulumi.Input

	ToGetDiskReplicaPairsPairOutput() GetDiskReplicaPairsPairOutput
	ToGetDiskReplicaPairsPairOutputWithContext(context.Context) GetDiskReplicaPairsPairOutput
}

type GetDiskReplicaPairsPairArgs struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:-10240 Kbps: equal to 10 Mbps.-20480 Kbps: equal to 20 Mbps.-51200 Kbps: equal to 50 Mbps.-102400 Kbps: equal to 100 Mbps.Default value: 10240.This parameter cannot be specified when the ChargeType value is POSTPAY. The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth pulumi.StringInput `pulumi:"bandwidth"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId pulumi.StringInput `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringInput `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringInput `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	Id     pulumi.StringInput `pulumi:"id"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	PairName pulumi.StringInput `pulumi:"pairName"`
	// The payment type of the resource.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The first ID of the resource
	ReplicaPairId pulumi.StringInput `pulumi:"replicaPairId"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo pulumi.StringInput `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringInput `pulumi:"sourceZoneId"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDiskReplicaPairsPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaPairsPair)(nil)).Elem()
}

func (i GetDiskReplicaPairsPairArgs) ToGetDiskReplicaPairsPairOutput() GetDiskReplicaPairsPairOutput {
	return i.ToGetDiskReplicaPairsPairOutputWithContext(context.Background())
}

func (i GetDiskReplicaPairsPairArgs) ToGetDiskReplicaPairsPairOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaPairsPairOutput)
}

// GetDiskReplicaPairsPairArrayInput is an input type that accepts GetDiskReplicaPairsPairArray and GetDiskReplicaPairsPairArrayOutput values.
// You can construct a concrete instance of `GetDiskReplicaPairsPairArrayInput` via:
//
//	GetDiskReplicaPairsPairArray{ GetDiskReplicaPairsPairArgs{...} }
type GetDiskReplicaPairsPairArrayInput interface {
	pulumi.Input

	ToGetDiskReplicaPairsPairArrayOutput() GetDiskReplicaPairsPairArrayOutput
	ToGetDiskReplicaPairsPairArrayOutputWithContext(context.Context) GetDiskReplicaPairsPairArrayOutput
}

type GetDiskReplicaPairsPairArray []GetDiskReplicaPairsPairInput

func (GetDiskReplicaPairsPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaPairsPair)(nil)).Elem()
}

func (i GetDiskReplicaPairsPairArray) ToGetDiskReplicaPairsPairArrayOutput() GetDiskReplicaPairsPairArrayOutput {
	return i.ToGetDiskReplicaPairsPairArrayOutputWithContext(context.Background())
}

func (i GetDiskReplicaPairsPairArray) ToGetDiskReplicaPairsPairArrayOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaPairsPairArrayOutput)
}

type GetDiskReplicaPairsPairOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaPairsPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaPairsPair)(nil)).Elem()
}

func (o GetDiskReplicaPairsPairOutput) ToGetDiskReplicaPairsPairOutput() GetDiskReplicaPairsPairOutput {
	return o
}

func (o GetDiskReplicaPairsPairOutput) ToGetDiskReplicaPairsPairOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairOutput {
	return o
}

// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:-10240 Kbps: equal to 10 Mbps.-20480 Kbps: equal to 20 Mbps.-51200 Kbps: equal to 50 Mbps.-102400 Kbps: equal to 100 Mbps.Default value: 10240.This parameter cannot be specified when the ChargeType value is POSTPAY. The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
func (o GetDiskReplicaPairsPairOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
func (o GetDiskReplicaPairsPairOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the standby disk.
func (o GetDiskReplicaPairsPairOutput) DestinationDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DestinationDiskId }).(pulumi.StringOutput)
}

// The ID of the region to which the disaster recovery site belongs.
func (o GetDiskReplicaPairsPairOutput) DestinationRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DestinationRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the disaster recovery site belongs.
func (o GetDiskReplicaPairsPairOutput) DestinationZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DestinationZoneId }).(pulumi.StringOutput)
}

// The ID of the primary disk.
func (o GetDiskReplicaPairsPairOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DiskId }).(pulumi.StringOutput)
}

func (o GetDiskReplicaPairsPairOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
func (o GetDiskReplicaPairsPairOutput) PairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.PairName }).(pulumi.StringOutput)
}

// The payment type of the resource.
func (o GetDiskReplicaPairsPairOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetDiskReplicaPairsPairOutput) ReplicaPairId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.ReplicaPairId }).(pulumi.StringOutput)
}

// The ID of the resource group
func (o GetDiskReplicaPairsPairOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
func (o GetDiskReplicaPairsPairOutput) Rpo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Rpo }).(pulumi.StringOutput)
}

// The ID of the zone to which the production site belongs.
func (o GetDiskReplicaPairsPairOutput) SourceZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.SourceZoneId }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetDiskReplicaPairsPairOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Status }).(pulumi.StringOutput)
}

type GetDiskReplicaPairsPairArrayOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaPairsPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaPairsPair)(nil)).Elem()
}

func (o GetDiskReplicaPairsPairArrayOutput) ToGetDiskReplicaPairsPairArrayOutput() GetDiskReplicaPairsPairArrayOutput {
	return o
}

func (o GetDiskReplicaPairsPairArrayOutput) ToGetDiskReplicaPairsPairArrayOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairArrayOutput {
	return o
}

func (o GetDiskReplicaPairsPairArrayOutput) Index(i pulumi.IntInput) GetDiskReplicaPairsPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskReplicaPairsPair {
		return vs[0].([]GetDiskReplicaPairsPair)[vs[1].(int)]
	}).(GetDiskReplicaPairsPairOutput)
}

type GetRegionsRegion struct {
	// The ID of the region.
	RegionId string `pulumi:"regionId"`
	// A list of Ebs Zones.
	Zones []GetRegionsRegionZone `pulumi:"zones"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// The ID of the region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// A list of Ebs Zones.
	Zones GetRegionsRegionZoneArrayInput `pulumi:"zones"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// The ID of the region.
func (o GetRegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

// A list of Ebs Zones.
func (o GetRegionsRegionOutput) Zones() GetRegionsRegionZoneArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []GetRegionsRegionZone { return v.Zones }).(GetRegionsRegionZoneArrayOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetRegionsRegionZone struct {
	// The ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// GetRegionsRegionZoneInput is an input type that accepts GetRegionsRegionZoneArgs and GetRegionsRegionZoneOutput values.
// You can construct a concrete instance of `GetRegionsRegionZoneInput` via:
//
//	GetRegionsRegionZoneArgs{...}
type GetRegionsRegionZoneInput interface {
	pulumi.Input

	ToGetRegionsRegionZoneOutput() GetRegionsRegionZoneOutput
	ToGetRegionsRegionZoneOutputWithContext(context.Context) GetRegionsRegionZoneOutput
}

type GetRegionsRegionZoneArgs struct {
	// The ID of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetRegionsRegionZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionZone)(nil)).Elem()
}

func (i GetRegionsRegionZoneArgs) ToGetRegionsRegionZoneOutput() GetRegionsRegionZoneOutput {
	return i.ToGetRegionsRegionZoneOutputWithContext(context.Background())
}

func (i GetRegionsRegionZoneArgs) ToGetRegionsRegionZoneOutputWithContext(ctx context.Context) GetRegionsRegionZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionZoneOutput)
}

// GetRegionsRegionZoneArrayInput is an input type that accepts GetRegionsRegionZoneArray and GetRegionsRegionZoneArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionZoneArrayInput` via:
//
//	GetRegionsRegionZoneArray{ GetRegionsRegionZoneArgs{...} }
type GetRegionsRegionZoneArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionZoneArrayOutput() GetRegionsRegionZoneArrayOutput
	ToGetRegionsRegionZoneArrayOutputWithContext(context.Context) GetRegionsRegionZoneArrayOutput
}

type GetRegionsRegionZoneArray []GetRegionsRegionZoneInput

func (GetRegionsRegionZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionZone)(nil)).Elem()
}

func (i GetRegionsRegionZoneArray) ToGetRegionsRegionZoneArrayOutput() GetRegionsRegionZoneArrayOutput {
	return i.ToGetRegionsRegionZoneArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionZoneArray) ToGetRegionsRegionZoneArrayOutputWithContext(ctx context.Context) GetRegionsRegionZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionZoneArrayOutput)
}

type GetRegionsRegionZoneOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionZone)(nil)).Elem()
}

func (o GetRegionsRegionZoneOutput) ToGetRegionsRegionZoneOutput() GetRegionsRegionZoneOutput {
	return o
}

func (o GetRegionsRegionZoneOutput) ToGetRegionsRegionZoneOutputWithContext(ctx context.Context) GetRegionsRegionZoneOutput {
	return o
}

// The ID of the zone.
func (o GetRegionsRegionZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetRegionsRegionZoneArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionZone)(nil)).Elem()
}

func (o GetRegionsRegionZoneArrayOutput) ToGetRegionsRegionZoneArrayOutput() GetRegionsRegionZoneArrayOutput {
	return o
}

func (o GetRegionsRegionZoneArrayOutput) ToGetRegionsRegionZoneArrayOutputWithContext(ctx context.Context) GetRegionsRegionZoneArrayOutput {
	return o
}

func (o GetRegionsRegionZoneArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegionZone {
		return vs[0].([]GetRegionsRegionZone)[vs[1].(int)]
	}).(GetRegionsRegionZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfoInput)(nil)).Elem(), EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrInput)(nil)).Elem(), EnterpriseSnapshotPolicyCrossRegionCopyInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionInput)(nil)).Elem(), EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayInput)(nil)).Elem(), EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyRetainRuleInput)(nil)).Elem(), EnterpriseSnapshotPolicyRetainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyRetainRulePtrInput)(nil)).Elem(), EnterpriseSnapshotPolicyRetainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyScheduleInput)(nil)).Elem(), EnterpriseSnapshotPolicyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicySchedulePtrInput)(nil)).Elem(), EnterpriseSnapshotPolicyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRulesInput)(nil)).Elem(), EnterpriseSnapshotPolicySpecialRetainRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRulesPtrInput)(nil)).Elem(), EnterpriseSnapshotPolicySpecialRetainRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRulesRuleInput)(nil)).Elem(), EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayInput)(nil)).Elem(), EnterpriseSnapshotPolicySpecialRetainRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyStorageRuleInput)(nil)).Elem(), EnterpriseSnapshotPolicyStorageRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnterpriseSnapshotPolicyStorageRulePtrInput)(nil)).Elem(), EnterpriseSnapshotPolicyStorageRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedBlockStorageClustersClusterInput)(nil)).Elem(), GetDedicatedBlockStorageClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedBlockStorageClustersClusterArrayInput)(nil)).Elem(), GetDedicatedBlockStorageClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaGroupsGroupInput)(nil)).Elem(), GetDiskReplicaGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaGroupsGroupArrayInput)(nil)).Elem(), GetDiskReplicaGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaPairsPairInput)(nil)).Elem(), GetDiskReplicaPairsPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaPairsPairArrayInput)(nil)).Elem(), GetDiskReplicaPairsPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionZoneInput)(nil)).Elem(), GetRegionsRegionZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionZoneArrayInput)(nil)).Elem(), GetRegionsRegionZoneArray{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyCrossRegionCopyInfoOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyCrossRegionCopyInfoPtrOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyCrossRegionCopyInfoRegionArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyRetainRuleOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyRetainRulePtrOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyScheduleOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicySchedulePtrOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicySpecialRetainRulesOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicySpecialRetainRulesPtrOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicySpecialRetainRulesRuleOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicySpecialRetainRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyStorageRuleOutput{})
	pulumi.RegisterOutputType(EnterpriseSnapshotPolicyStorageRulePtrOutput{})
	pulumi.RegisterOutputType(GetDedicatedBlockStorageClustersClusterOutput{})
	pulumi.RegisterOutputType(GetDedicatedBlockStorageClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaPairsPairOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaPairsPairArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionZoneOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionZoneArrayOutput{})
}
