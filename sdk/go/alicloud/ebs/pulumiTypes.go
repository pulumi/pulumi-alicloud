// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetDedicatedBlockStorageClustersCluster struct {
	// The available capacity of the dedicated block storage cluster. Unit: GiB.
	AvailableCapacity string `pulumi:"availableCapacity"`
	// The type of cloud disk that can be created by a dedicated block storage cluster.
	Category string `pulumi:"category"`
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// The first ID of the resource
	DedicatedBlockStorageClusterId string `pulumi:"dedicatedBlockStorageClusterId"`
	// The name of the resource
	DedicatedBlockStorageClusterName string `pulumi:"dedicatedBlockStorageClusterName"`
	// Capacity to be delivered in GB.
	DeliveryCapacity string `pulumi:"deliveryCapacity"`
	// The description of the dedicated block storage cluster.
	Description string `pulumi:"description"`
	// The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
	ExpiredTime string `pulumi:"expiredTime"`
	Id          string `pulumi:"id"`
	// Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
	PerformanceLevel string `pulumi:"performanceLevel"`
	// The ID of the resource group
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The status of the resource
	Status string `pulumi:"status"`
	// This parameter is not supported.
	SupportedCategory string `pulumi:"supportedCategory"`
	// The total capacity of the dedicated block storage cluster. Unit: GiB.
	TotalCapacity string `pulumi:"totalCapacity"`
	// The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
	Type string `pulumi:"type"`
	// The used (created disk) capacity of the current cluster, in GB
	UsedCapacity string `pulumi:"usedCapacity"`
	// The zone ID  of the resource
	ZoneId string `pulumi:"zoneId"`
}

// GetDedicatedBlockStorageClustersClusterInput is an input type that accepts GetDedicatedBlockStorageClustersClusterArgs and GetDedicatedBlockStorageClustersClusterOutput values.
// You can construct a concrete instance of `GetDedicatedBlockStorageClustersClusterInput` via:
//
//	GetDedicatedBlockStorageClustersClusterArgs{...}
type GetDedicatedBlockStorageClustersClusterInput interface {
	pulumi.Input

	ToGetDedicatedBlockStorageClustersClusterOutput() GetDedicatedBlockStorageClustersClusterOutput
	ToGetDedicatedBlockStorageClustersClusterOutputWithContext(context.Context) GetDedicatedBlockStorageClustersClusterOutput
}

type GetDedicatedBlockStorageClustersClusterArgs struct {
	// The available capacity of the dedicated block storage cluster. Unit: GiB.
	AvailableCapacity pulumi.StringInput `pulumi:"availableCapacity"`
	// The type of cloud disk that can be created by a dedicated block storage cluster.
	Category pulumi.StringInput `pulumi:"category"`
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The first ID of the resource
	DedicatedBlockStorageClusterId pulumi.StringInput `pulumi:"dedicatedBlockStorageClusterId"`
	// The name of the resource
	DedicatedBlockStorageClusterName pulumi.StringInput `pulumi:"dedicatedBlockStorageClusterName"`
	// Capacity to be delivered in GB.
	DeliveryCapacity pulumi.StringInput `pulumi:"deliveryCapacity"`
	// The description of the dedicated block storage cluster.
	Description pulumi.StringInput `pulumi:"description"`
	// The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	Id          pulumi.StringInput `pulumi:"id"`
	// Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
	PerformanceLevel pulumi.StringInput `pulumi:"performanceLevel"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// This parameter is not supported.
	SupportedCategory pulumi.StringInput `pulumi:"supportedCategory"`
	// The total capacity of the dedicated block storage cluster. Unit: GiB.
	TotalCapacity pulumi.StringInput `pulumi:"totalCapacity"`
	// The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
	Type pulumi.StringInput `pulumi:"type"`
	// The used (created disk) capacity of the current cluster, in GB
	UsedCapacity pulumi.StringInput `pulumi:"usedCapacity"`
	// The zone ID  of the resource
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetDedicatedBlockStorageClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (i GetDedicatedBlockStorageClustersClusterArgs) ToGetDedicatedBlockStorageClustersClusterOutput() GetDedicatedBlockStorageClustersClusterOutput {
	return i.ToGetDedicatedBlockStorageClustersClusterOutputWithContext(context.Background())
}

func (i GetDedicatedBlockStorageClustersClusterArgs) ToGetDedicatedBlockStorageClustersClusterOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedBlockStorageClustersClusterOutput)
}

// GetDedicatedBlockStorageClustersClusterArrayInput is an input type that accepts GetDedicatedBlockStorageClustersClusterArray and GetDedicatedBlockStorageClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetDedicatedBlockStorageClustersClusterArrayInput` via:
//
//	GetDedicatedBlockStorageClustersClusterArray{ GetDedicatedBlockStorageClustersClusterArgs{...} }
type GetDedicatedBlockStorageClustersClusterArrayInput interface {
	pulumi.Input

	ToGetDedicatedBlockStorageClustersClusterArrayOutput() GetDedicatedBlockStorageClustersClusterArrayOutput
	ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(context.Context) GetDedicatedBlockStorageClustersClusterArrayOutput
}

type GetDedicatedBlockStorageClustersClusterArray []GetDedicatedBlockStorageClustersClusterInput

func (GetDedicatedBlockStorageClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (i GetDedicatedBlockStorageClustersClusterArray) ToGetDedicatedBlockStorageClustersClusterArrayOutput() GetDedicatedBlockStorageClustersClusterArrayOutput {
	return i.ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetDedicatedBlockStorageClustersClusterArray) ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedBlockStorageClustersClusterArrayOutput)
}

type GetDedicatedBlockStorageClustersClusterOutput struct{ *pulumi.OutputState }

func (GetDedicatedBlockStorageClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (o GetDedicatedBlockStorageClustersClusterOutput) ToGetDedicatedBlockStorageClustersClusterOutput() GetDedicatedBlockStorageClustersClusterOutput {
	return o
}

func (o GetDedicatedBlockStorageClustersClusterOutput) ToGetDedicatedBlockStorageClustersClusterOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterOutput {
	return o
}

// The available capacity of the dedicated block storage cluster. Unit: GiB.
func (o GetDedicatedBlockStorageClustersClusterOutput) AvailableCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.AvailableCapacity }).(pulumi.StringOutput)
}

// The type of cloud disk that can be created by a dedicated block storage cluster.
func (o GetDedicatedBlockStorageClustersClusterOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Category }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) DedicatedBlockStorageClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.DedicatedBlockStorageClusterId }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) DedicatedBlockStorageClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.DedicatedBlockStorageClusterName }).(pulumi.StringOutput)
}

// Capacity to be delivered in GB.
func (o GetDedicatedBlockStorageClustersClusterOutput) DeliveryCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.DeliveryCapacity }).(pulumi.StringOutput)
}

// The description of the dedicated block storage cluster.
func (o GetDedicatedBlockStorageClustersClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Description }).(pulumi.StringOutput)
}

// The expiration time of the dedicated block storage cluster, in the Unix timestamp format, in seconds.
func (o GetDedicatedBlockStorageClustersClusterOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

func (o GetDedicatedBlockStorageClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// Cloud disk performance level, possible values:-PL0.-PL1.-PL2.-PL3.> Only valid in SupportedCategory = cloud_essd.
func (o GetDedicatedBlockStorageClustersClusterOutput) PerformanceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.PerformanceLevel }).(pulumi.StringOutput)
}

// The ID of the resource group
func (o GetDedicatedBlockStorageClustersClusterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The status of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

// This parameter is not supported.
func (o GetDedicatedBlockStorageClustersClusterOutput) SupportedCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.SupportedCategory }).(pulumi.StringOutput)
}

// The total capacity of the dedicated block storage cluster. Unit: GiB.
func (o GetDedicatedBlockStorageClustersClusterOutput) TotalCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.TotalCapacity }).(pulumi.StringOutput)
}

// The dedicated block storage cluster performance type. Possible values:-Standard: Basic type. This type of dedicated block storage cluster can create an ESSD PL0 cloud disk.-Premium: performance type. This type of dedicated block storage cluster can create an ESSD PL1 cloud disk.
func (o GetDedicatedBlockStorageClustersClusterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.Type }).(pulumi.StringOutput)
}

// The used (created disk) capacity of the current cluster, in GB
func (o GetDedicatedBlockStorageClustersClusterOutput) UsedCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.UsedCapacity }).(pulumi.StringOutput)
}

// The zone ID  of the resource
func (o GetDedicatedBlockStorageClustersClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedBlockStorageClustersCluster) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetDedicatedBlockStorageClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedBlockStorageClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedBlockStorageClustersCluster)(nil)).Elem()
}

func (o GetDedicatedBlockStorageClustersClusterArrayOutput) ToGetDedicatedBlockStorageClustersClusterArrayOutput() GetDedicatedBlockStorageClustersClusterArrayOutput {
	return o
}

func (o GetDedicatedBlockStorageClustersClusterArrayOutput) ToGetDedicatedBlockStorageClustersClusterArrayOutputWithContext(ctx context.Context) GetDedicatedBlockStorageClustersClusterArrayOutput {
	return o
}

func (o GetDedicatedBlockStorageClustersClusterArrayOutput) Index(i pulumi.IntInput) GetDedicatedBlockStorageClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedBlockStorageClustersCluster {
		return vs[0].([]GetDedicatedBlockStorageClustersCluster)[vs[1].(int)]
	}).(GetDedicatedBlockStorageClustersClusterOutput)
}

type GetDiskReplicaGroupsGroup struct {
	// The description of the consistent replication group.
	Description string `pulumi:"description"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId string `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId string `pulumi:"destinationZoneId"`
	// Consistent replication group name.
	GroupName string `pulumi:"groupName"`
	// The ID of the Disk Replica Group.
	Id               string `pulumi:"id"`
	LastRecoverPoint string `pulumi:"lastRecoverPoint"`
	// The initial source region of the replication group.
	PrimaryRegion string `pulumi:"primaryRegion"`
	// The initial source available area of the replication group.
	PrimaryZone string `pulumi:"primaryZone"`
	// The ID of the consistent replication group.
	ReplicaGroupId string `pulumi:"replicaGroupId"`
	// The recovery point objective (RPO) of the replication pair-consistent group.
	Rpo int `pulumi:"rpo"`
	// Site information sources for replication pairs and consistent replication groups.
	Site string `pulumi:"site"`
	// The ID of the region to which the production site belongs.
	SourceRegionId string `pulumi:"sourceRegionId"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId string `pulumi:"sourceZoneId"`
	// The initial destination region of the replication group.
	StandbyRegion string `pulumi:"standbyRegion"`
	// The initial destination zone of the replication group.
	StandbyZone string `pulumi:"standbyZone"`
	// The status of the consistent replication group. Possible values:
	Status string `pulumi:"status"`
}

// GetDiskReplicaGroupsGroupInput is an input type that accepts GetDiskReplicaGroupsGroupArgs and GetDiskReplicaGroupsGroupOutput values.
// You can construct a concrete instance of `GetDiskReplicaGroupsGroupInput` via:
//
//	GetDiskReplicaGroupsGroupArgs{...}
type GetDiskReplicaGroupsGroupInput interface {
	pulumi.Input

	ToGetDiskReplicaGroupsGroupOutput() GetDiskReplicaGroupsGroupOutput
	ToGetDiskReplicaGroupsGroupOutputWithContext(context.Context) GetDiskReplicaGroupsGroupOutput
}

type GetDiskReplicaGroupsGroupArgs struct {
	// The description of the consistent replication group.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringInput `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringInput `pulumi:"destinationZoneId"`
	// Consistent replication group name.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The ID of the Disk Replica Group.
	Id               pulumi.StringInput `pulumi:"id"`
	LastRecoverPoint pulumi.StringInput `pulumi:"lastRecoverPoint"`
	// The initial source region of the replication group.
	PrimaryRegion pulumi.StringInput `pulumi:"primaryRegion"`
	// The initial source available area of the replication group.
	PrimaryZone pulumi.StringInput `pulumi:"primaryZone"`
	// The ID of the consistent replication group.
	ReplicaGroupId pulumi.StringInput `pulumi:"replicaGroupId"`
	// The recovery point objective (RPO) of the replication pair-consistent group.
	Rpo pulumi.IntInput `pulumi:"rpo"`
	// Site information sources for replication pairs and consistent replication groups.
	Site pulumi.StringInput `pulumi:"site"`
	// The ID of the region to which the production site belongs.
	SourceRegionId pulumi.StringInput `pulumi:"sourceRegionId"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringInput `pulumi:"sourceZoneId"`
	// The initial destination region of the replication group.
	StandbyRegion pulumi.StringInput `pulumi:"standbyRegion"`
	// The initial destination zone of the replication group.
	StandbyZone pulumi.StringInput `pulumi:"standbyZone"`
	// The status of the consistent replication group. Possible values:
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDiskReplicaGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (i GetDiskReplicaGroupsGroupArgs) ToGetDiskReplicaGroupsGroupOutput() GetDiskReplicaGroupsGroupOutput {
	return i.ToGetDiskReplicaGroupsGroupOutputWithContext(context.Background())
}

func (i GetDiskReplicaGroupsGroupArgs) ToGetDiskReplicaGroupsGroupOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaGroupsGroupOutput)
}

// GetDiskReplicaGroupsGroupArrayInput is an input type that accepts GetDiskReplicaGroupsGroupArray and GetDiskReplicaGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDiskReplicaGroupsGroupArrayInput` via:
//
//	GetDiskReplicaGroupsGroupArray{ GetDiskReplicaGroupsGroupArgs{...} }
type GetDiskReplicaGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDiskReplicaGroupsGroupArrayOutput() GetDiskReplicaGroupsGroupArrayOutput
	ToGetDiskReplicaGroupsGroupArrayOutputWithContext(context.Context) GetDiskReplicaGroupsGroupArrayOutput
}

type GetDiskReplicaGroupsGroupArray []GetDiskReplicaGroupsGroupInput

func (GetDiskReplicaGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (i GetDiskReplicaGroupsGroupArray) ToGetDiskReplicaGroupsGroupArrayOutput() GetDiskReplicaGroupsGroupArrayOutput {
	return i.ToGetDiskReplicaGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDiskReplicaGroupsGroupArray) ToGetDiskReplicaGroupsGroupArrayOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaGroupsGroupArrayOutput)
}

type GetDiskReplicaGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (o GetDiskReplicaGroupsGroupOutput) ToGetDiskReplicaGroupsGroupOutput() GetDiskReplicaGroupsGroupOutput {
	return o
}

func (o GetDiskReplicaGroupsGroupOutput) ToGetDiskReplicaGroupsGroupOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupOutput {
	return o
}

// The description of the consistent replication group.
func (o GetDiskReplicaGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the region to which the disaster recovery site belongs.
func (o GetDiskReplicaGroupsGroupOutput) DestinationRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.DestinationRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the disaster recovery site belongs.
func (o GetDiskReplicaGroupsGroupOutput) DestinationZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.DestinationZoneId }).(pulumi.StringOutput)
}

// Consistent replication group name.
func (o GetDiskReplicaGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// The ID of the Disk Replica Group.
func (o GetDiskReplicaGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDiskReplicaGroupsGroupOutput) LastRecoverPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.LastRecoverPoint }).(pulumi.StringOutput)
}

// The initial source region of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) PrimaryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.PrimaryRegion }).(pulumi.StringOutput)
}

// The initial source available area of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) PrimaryZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.PrimaryZone }).(pulumi.StringOutput)
}

// The ID of the consistent replication group.
func (o GetDiskReplicaGroupsGroupOutput) ReplicaGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.ReplicaGroupId }).(pulumi.StringOutput)
}

// The recovery point objective (RPO) of the replication pair-consistent group.
func (o GetDiskReplicaGroupsGroupOutput) Rpo() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) int { return v.Rpo }).(pulumi.IntOutput)
}

// Site information sources for replication pairs and consistent replication groups.
func (o GetDiskReplicaGroupsGroupOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Site }).(pulumi.StringOutput)
}

// The ID of the region to which the production site belongs.
func (o GetDiskReplicaGroupsGroupOutput) SourceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.SourceRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the production site belongs.
func (o GetDiskReplicaGroupsGroupOutput) SourceZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.SourceZoneId }).(pulumi.StringOutput)
}

// The initial destination region of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) StandbyRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.StandbyRegion }).(pulumi.StringOutput)
}

// The initial destination zone of the replication group.
func (o GetDiskReplicaGroupsGroupOutput) StandbyZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.StandbyZone }).(pulumi.StringOutput)
}

// The status of the consistent replication group. Possible values:
func (o GetDiskReplicaGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

type GetDiskReplicaGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaGroupsGroup)(nil)).Elem()
}

func (o GetDiskReplicaGroupsGroupArrayOutput) ToGetDiskReplicaGroupsGroupArrayOutput() GetDiskReplicaGroupsGroupArrayOutput {
	return o
}

func (o GetDiskReplicaGroupsGroupArrayOutput) ToGetDiskReplicaGroupsGroupArrayOutputWithContext(ctx context.Context) GetDiskReplicaGroupsGroupArrayOutput {
	return o
}

func (o GetDiskReplicaGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDiskReplicaGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskReplicaGroupsGroup {
		return vs[0].([]GetDiskReplicaGroupsGroup)[vs[1].(int)]
	}).(GetDiskReplicaGroupsGroupOutput)
}

type GetDiskReplicaPairsPair struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:-10240 Kbps: equal to 10 Mbps.-20480 Kbps: equal to 20 Mbps.-51200 Kbps: equal to 50 Mbps.-102400 Kbps: equal to 100 Mbps.Default value: 10240.This parameter cannot be specified when the ChargeType value is POSTPAY. The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth string `pulumi:"bandwidth"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description string `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId string `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId string `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId string `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId string `pulumi:"diskId"`
	Id     string `pulumi:"id"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	PairName string `pulumi:"pairName"`
	// The payment type of the resource.
	PaymentType string `pulumi:"paymentType"`
	// The first ID of the resource
	ReplicaPairId string `pulumi:"replicaPairId"`
	// The ID of the resource group
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo string `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId string `pulumi:"sourceZoneId"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetDiskReplicaPairsPairInput is an input type that accepts GetDiskReplicaPairsPairArgs and GetDiskReplicaPairsPairOutput values.
// You can construct a concrete instance of `GetDiskReplicaPairsPairInput` via:
//
//	GetDiskReplicaPairsPairArgs{...}
type GetDiskReplicaPairsPairInput interface {
	pulumi.Input

	ToGetDiskReplicaPairsPairOutput() GetDiskReplicaPairsPairOutput
	ToGetDiskReplicaPairsPairOutputWithContext(context.Context) GetDiskReplicaPairsPairOutput
}

type GetDiskReplicaPairsPairArgs struct {
	// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:-10240 Kbps: equal to 10 Mbps.-20480 Kbps: equal to 20 Mbps.-51200 Kbps: equal to 50 Mbps.-102400 Kbps: equal to 100 Mbps.Default value: 10240.This parameter cannot be specified when the ChargeType value is POSTPAY. The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
	Bandwidth pulumi.StringInput `pulumi:"bandwidth"`
	// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the standby disk.
	DestinationDiskId pulumi.StringInput `pulumi:"destinationDiskId"`
	// The ID of the region to which the disaster recovery site belongs.
	DestinationRegionId pulumi.StringInput `pulumi:"destinationRegionId"`
	// The ID of the zone to which the disaster recovery site belongs.
	DestinationZoneId pulumi.StringInput `pulumi:"destinationZoneId"`
	// The ID of the primary disk.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	Id     pulumi.StringInput `pulumi:"id"`
	// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
	PairName pulumi.StringInput `pulumi:"pairName"`
	// The payment type of the resource.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The first ID of the resource
	ReplicaPairId pulumi.StringInput `pulumi:"replicaPairId"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
	Rpo pulumi.StringInput `pulumi:"rpo"`
	// The ID of the zone to which the production site belongs.
	SourceZoneId pulumi.StringInput `pulumi:"sourceZoneId"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDiskReplicaPairsPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaPairsPair)(nil)).Elem()
}

func (i GetDiskReplicaPairsPairArgs) ToGetDiskReplicaPairsPairOutput() GetDiskReplicaPairsPairOutput {
	return i.ToGetDiskReplicaPairsPairOutputWithContext(context.Background())
}

func (i GetDiskReplicaPairsPairArgs) ToGetDiskReplicaPairsPairOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaPairsPairOutput)
}

// GetDiskReplicaPairsPairArrayInput is an input type that accepts GetDiskReplicaPairsPairArray and GetDiskReplicaPairsPairArrayOutput values.
// You can construct a concrete instance of `GetDiskReplicaPairsPairArrayInput` via:
//
//	GetDiskReplicaPairsPairArray{ GetDiskReplicaPairsPairArgs{...} }
type GetDiskReplicaPairsPairArrayInput interface {
	pulumi.Input

	ToGetDiskReplicaPairsPairArrayOutput() GetDiskReplicaPairsPairArrayOutput
	ToGetDiskReplicaPairsPairArrayOutputWithContext(context.Context) GetDiskReplicaPairsPairArrayOutput
}

type GetDiskReplicaPairsPairArray []GetDiskReplicaPairsPairInput

func (GetDiskReplicaPairsPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaPairsPair)(nil)).Elem()
}

func (i GetDiskReplicaPairsPairArray) ToGetDiskReplicaPairsPairArrayOutput() GetDiskReplicaPairsPairArrayOutput {
	return i.ToGetDiskReplicaPairsPairArrayOutputWithContext(context.Background())
}

func (i GetDiskReplicaPairsPairArray) ToGetDiskReplicaPairsPairArrayOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskReplicaPairsPairArrayOutput)
}

type GetDiskReplicaPairsPairOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaPairsPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskReplicaPairsPair)(nil)).Elem()
}

func (o GetDiskReplicaPairsPairOutput) ToGetDiskReplicaPairsPairOutput() GetDiskReplicaPairsPairOutput {
	return o
}

func (o GetDiskReplicaPairsPairOutput) ToGetDiskReplicaPairsPairOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairOutput {
	return o
}

// The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:-10240 Kbps: equal to 10 Mbps.-20480 Kbps: equal to 20 Mbps.-51200 Kbps: equal to 50 Mbps.-102400 Kbps: equal to 100 Mbps.Default value: 10240.This parameter cannot be specified when the ChargeType value is POSTPAY. The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
func (o GetDiskReplicaPairsPairOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with' http:// 'or' https.
func (o GetDiskReplicaPairsPairOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the standby disk.
func (o GetDiskReplicaPairsPairOutput) DestinationDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DestinationDiskId }).(pulumi.StringOutput)
}

// The ID of the region to which the disaster recovery site belongs.
func (o GetDiskReplicaPairsPairOutput) DestinationRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DestinationRegionId }).(pulumi.StringOutput)
}

// The ID of the zone to which the disaster recovery site belongs.
func (o GetDiskReplicaPairsPairOutput) DestinationZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DestinationZoneId }).(pulumi.StringOutput)
}

// The ID of the primary disk.
func (o GetDiskReplicaPairsPairOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.DiskId }).(pulumi.StringOutput)
}

func (o GetDiskReplicaPairsPairOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
func (o GetDiskReplicaPairsPairOutput) PairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.PairName }).(pulumi.StringOutput)
}

// The payment type of the resource.
func (o GetDiskReplicaPairsPairOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetDiskReplicaPairsPairOutput) ReplicaPairId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.ReplicaPairId }).(pulumi.StringOutput)
}

// The ID of the resource group
func (o GetDiskReplicaPairsPairOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
func (o GetDiskReplicaPairsPairOutput) Rpo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Rpo }).(pulumi.StringOutput)
}

// The ID of the zone to which the production site belongs.
func (o GetDiskReplicaPairsPairOutput) SourceZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.SourceZoneId }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetDiskReplicaPairsPairOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskReplicaPairsPair) string { return v.Status }).(pulumi.StringOutput)
}

type GetDiskReplicaPairsPairArrayOutput struct{ *pulumi.OutputState }

func (GetDiskReplicaPairsPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskReplicaPairsPair)(nil)).Elem()
}

func (o GetDiskReplicaPairsPairArrayOutput) ToGetDiskReplicaPairsPairArrayOutput() GetDiskReplicaPairsPairArrayOutput {
	return o
}

func (o GetDiskReplicaPairsPairArrayOutput) ToGetDiskReplicaPairsPairArrayOutputWithContext(ctx context.Context) GetDiskReplicaPairsPairArrayOutput {
	return o
}

func (o GetDiskReplicaPairsPairArrayOutput) Index(i pulumi.IntInput) GetDiskReplicaPairsPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskReplicaPairsPair {
		return vs[0].([]GetDiskReplicaPairsPair)[vs[1].(int)]
	}).(GetDiskReplicaPairsPairOutput)
}

type GetRegionsRegion struct {
	// The ID of the region.
	RegionId string `pulumi:"regionId"`
	// A list of Ebs Zones.
	Zones []GetRegionsRegionZone `pulumi:"zones"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// The ID of the region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// A list of Ebs Zones.
	Zones GetRegionsRegionZoneArrayInput `pulumi:"zones"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// The ID of the region.
func (o GetRegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

// A list of Ebs Zones.
func (o GetRegionsRegionOutput) Zones() GetRegionsRegionZoneArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []GetRegionsRegionZone { return v.Zones }).(GetRegionsRegionZoneArrayOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetRegionsRegionZone struct {
	// The ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// GetRegionsRegionZoneInput is an input type that accepts GetRegionsRegionZoneArgs and GetRegionsRegionZoneOutput values.
// You can construct a concrete instance of `GetRegionsRegionZoneInput` via:
//
//	GetRegionsRegionZoneArgs{...}
type GetRegionsRegionZoneInput interface {
	pulumi.Input

	ToGetRegionsRegionZoneOutput() GetRegionsRegionZoneOutput
	ToGetRegionsRegionZoneOutputWithContext(context.Context) GetRegionsRegionZoneOutput
}

type GetRegionsRegionZoneArgs struct {
	// The ID of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetRegionsRegionZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionZone)(nil)).Elem()
}

func (i GetRegionsRegionZoneArgs) ToGetRegionsRegionZoneOutput() GetRegionsRegionZoneOutput {
	return i.ToGetRegionsRegionZoneOutputWithContext(context.Background())
}

func (i GetRegionsRegionZoneArgs) ToGetRegionsRegionZoneOutputWithContext(ctx context.Context) GetRegionsRegionZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionZoneOutput)
}

// GetRegionsRegionZoneArrayInput is an input type that accepts GetRegionsRegionZoneArray and GetRegionsRegionZoneArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionZoneArrayInput` via:
//
//	GetRegionsRegionZoneArray{ GetRegionsRegionZoneArgs{...} }
type GetRegionsRegionZoneArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionZoneArrayOutput() GetRegionsRegionZoneArrayOutput
	ToGetRegionsRegionZoneArrayOutputWithContext(context.Context) GetRegionsRegionZoneArrayOutput
}

type GetRegionsRegionZoneArray []GetRegionsRegionZoneInput

func (GetRegionsRegionZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionZone)(nil)).Elem()
}

func (i GetRegionsRegionZoneArray) ToGetRegionsRegionZoneArrayOutput() GetRegionsRegionZoneArrayOutput {
	return i.ToGetRegionsRegionZoneArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionZoneArray) ToGetRegionsRegionZoneArrayOutputWithContext(ctx context.Context) GetRegionsRegionZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionZoneArrayOutput)
}

type GetRegionsRegionZoneOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegionZone)(nil)).Elem()
}

func (o GetRegionsRegionZoneOutput) ToGetRegionsRegionZoneOutput() GetRegionsRegionZoneOutput {
	return o
}

func (o GetRegionsRegionZoneOutput) ToGetRegionsRegionZoneOutputWithContext(ctx context.Context) GetRegionsRegionZoneOutput {
	return o
}

// The ID of the zone.
func (o GetRegionsRegionZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegionZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetRegionsRegionZoneArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegionZone)(nil)).Elem()
}

func (o GetRegionsRegionZoneArrayOutput) ToGetRegionsRegionZoneArrayOutput() GetRegionsRegionZoneArrayOutput {
	return o
}

func (o GetRegionsRegionZoneArrayOutput) ToGetRegionsRegionZoneArrayOutputWithContext(ctx context.Context) GetRegionsRegionZoneArrayOutput {
	return o
}

func (o GetRegionsRegionZoneArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegionZone {
		return vs[0].([]GetRegionsRegionZone)[vs[1].(int)]
	}).(GetRegionsRegionZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedBlockStorageClustersClusterInput)(nil)).Elem(), GetDedicatedBlockStorageClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedBlockStorageClustersClusterArrayInput)(nil)).Elem(), GetDedicatedBlockStorageClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaGroupsGroupInput)(nil)).Elem(), GetDiskReplicaGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaGroupsGroupArrayInput)(nil)).Elem(), GetDiskReplicaGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaPairsPairInput)(nil)).Elem(), GetDiskReplicaPairsPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskReplicaPairsPairArrayInput)(nil)).Elem(), GetDiskReplicaPairsPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionZoneInput)(nil)).Elem(), GetRegionsRegionZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionZoneArrayInput)(nil)).Elem(), GetRegionsRegionZoneArray{})
	pulumi.RegisterOutputType(GetDedicatedBlockStorageClustersClusterOutput{})
	pulumi.RegisterOutputType(GetDedicatedBlockStorageClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaPairsPairOutput{})
	pulumi.RegisterOutputType(GetDiskReplicaPairsPairArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionZoneOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionZoneArrayOutput{})
}
