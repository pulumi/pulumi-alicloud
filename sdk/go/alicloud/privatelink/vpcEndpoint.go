// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Private Link Vpc Endpoint resource.
//
// For information about Private Link Vpc Endpoint and how to use it, see [What is Vpc Endpoint](https://www.alibabacloud.com/help/en/privatelink/latest/api-privatelink-2020-04-15-createvpcendpoint).
//
// > **NOTE:** Available since v1.109.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/privatelink"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			exampleVpcEndpointService, err := privatelink.NewVpcEndpointService(ctx, "exampleVpcEndpointService", &privatelink.VpcEndpointServiceArgs{
//				ServiceDescription:   pulumi.String(name),
//				ConnectBandwidth:     pulumi.Int(103),
//				AutoAcceptConnection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetwork, err := vpc.NewNetwork(ctx, "exampleNetwork", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.0.0.0/8"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSecurityGroup, err := ecs.NewSecurityGroup(ctx, "exampleSecurityGroup", &ecs.SecurityGroupArgs{
//				VpcId: exampleNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = privatelink.NewVpcEndpoint(ctx, "exampleVpcEndpoint", &privatelink.VpcEndpointArgs{
//				ServiceId: exampleVpcEndpointService.ID(),
//				SecurityGroupIds: pulumi.StringArray{
//					exampleSecurityGroup.ID(),
//				},
//				VpcId:           exampleNetwork.ID(),
//				VpcEndpointName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Private Link Vpc Endpoint can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:privatelink/vpcEndpoint:VpcEndpoint example <id>
//
// ```
type VpcEndpoint struct {
	pulumi.CustomResourceState

	// The bandwidth of the endpoint connection.  1024 to 10240. Unit: Mbit/s.Note: The bandwidth of an endpoint connection is in the range of 100 to 10,240 Mbit/s. The default bandwidth is 1,024 Mbit/s. When the endpoint is connected to the endpoint service, the default bandwidth is the minimum bandwidth. In this case, the connection bandwidth range is 1,024 to 10,240 Mbit/s.
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// The state of the endpoint connection.
	ConnectionStatus pulumi.StringOutput `pulumi:"connectionStatus"`
	// The time when the endpoint was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
	// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The service state of the endpoint.
	EndpointBusinessStatus pulumi.StringOutput `pulumi:"endpointBusinessStatus"`
	// The description of the endpoint.
	EndpointDescription pulumi.StringPtrOutput `pulumi:"endpointDescription"`
	// The domain name of the endpoint.
	EndpointDomain pulumi.StringOutput `pulumi:"endpointDomain"`
	// The endpoint type.Only the value: Interface, indicating the Interface endpoint. You can add the service resource types of Application Load Balancer (ALB), Classic Load Balancer (CLB), and Network Load Balancer (NLB).
	EndpointType pulumi.StringOutput `pulumi:"endpointType"`
	// Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:
	// - **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
	// - **false (default)**: disables user authentication.
	ProtectedEnabled pulumi.BoolPtrOutput `pulumi:"protectedEnabled"`
	// The resource group ID.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The ID of the security group that is associated with the endpoint ENI. The security group can be used to control data transfer between the VPC and the endpoint ENI.The endpoint can be associated with up to 10 security groups.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The ID of the endpoint service with which the endpoint is associated.
	ServiceId pulumi.StringPtrOutput `pulumi:"serviceId"`
	// The name of the endpoint service with which the endpoint is associated.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The state of the endpoint.
	Status pulumi.StringOutput `pulumi:"status"`
	// The list of tags.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// The name of the endpoint.
	VpcEndpointName pulumi.StringPtrOutput `pulumi:"vpcEndpointName"`
	// The ID of the VPC to which the endpoint belongs.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only 1 is returned.
	ZonePrivateIpAddressCount pulumi.IntOutput `pulumi:"zonePrivateIpAddressCount"`
}

// NewVpcEndpoint registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpoint(ctx *pulumi.Context,
	name string, args *VpcEndpointArgs, opts ...pulumi.ResourceOption) (*VpcEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpoint
	err := ctx.RegisterResource("alicloud:privatelink/vpcEndpoint:VpcEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpoint gets an existing VpcEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointState, opts ...pulumi.ResourceOption) (*VpcEndpoint, error) {
	var resource VpcEndpoint
	err := ctx.ReadResource("alicloud:privatelink/vpcEndpoint:VpcEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpoint resources.
type vpcEndpointState struct {
	// The bandwidth of the endpoint connection.  1024 to 10240. Unit: Mbit/s.Note: The bandwidth of an endpoint connection is in the range of 100 to 10,240 Mbit/s. The default bandwidth is 1,024 Mbit/s. When the endpoint is connected to the endpoint service, the default bandwidth is the minimum bandwidth. In this case, the connection bandwidth range is 1,024 to 10,240 Mbit/s.
	Bandwidth *int `pulumi:"bandwidth"`
	// The state of the endpoint connection.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// The time when the endpoint was created.
	CreateTime *string `pulumi:"createTime"`
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
	// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
	DryRun *bool `pulumi:"dryRun"`
	// The service state of the endpoint.
	EndpointBusinessStatus *string `pulumi:"endpointBusinessStatus"`
	// The description of the endpoint.
	EndpointDescription *string `pulumi:"endpointDescription"`
	// The domain name of the endpoint.
	EndpointDomain *string `pulumi:"endpointDomain"`
	// The endpoint type.Only the value: Interface, indicating the Interface endpoint. You can add the service resource types of Application Load Balancer (ALB), Classic Load Balancer (CLB), and Network Load Balancer (NLB).
	EndpointType *string `pulumi:"endpointType"`
	// Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:
	// - **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
	// - **false (default)**: disables user authentication.
	ProtectedEnabled *bool `pulumi:"protectedEnabled"`
	// The resource group ID.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the security group that is associated with the endpoint ENI. The security group can be used to control data transfer between the VPC and the endpoint ENI.The endpoint can be associated with up to 10 security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the endpoint service with which the endpoint is associated.
	ServiceId *string `pulumi:"serviceId"`
	// The name of the endpoint service with which the endpoint is associated.
	ServiceName *string `pulumi:"serviceName"`
	// The state of the endpoint.
	Status *string `pulumi:"status"`
	// The list of tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// The name of the endpoint.
	VpcEndpointName *string `pulumi:"vpcEndpointName"`
	// The ID of the VPC to which the endpoint belongs.
	VpcId *string `pulumi:"vpcId"`
	// The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only 1 is returned.
	ZonePrivateIpAddressCount *int `pulumi:"zonePrivateIpAddressCount"`
}

type VpcEndpointState struct {
	// The bandwidth of the endpoint connection.  1024 to 10240. Unit: Mbit/s.Note: The bandwidth of an endpoint connection is in the range of 100 to 10,240 Mbit/s. The default bandwidth is 1,024 Mbit/s. When the endpoint is connected to the endpoint service, the default bandwidth is the minimum bandwidth. In this case, the connection bandwidth range is 1,024 to 10,240 Mbit/s.
	Bandwidth pulumi.IntPtrInput
	// The state of the endpoint connection.
	ConnectionStatus pulumi.StringPtrInput
	// The time when the endpoint was created.
	CreateTime pulumi.StringPtrInput
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
	// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
	DryRun pulumi.BoolPtrInput
	// The service state of the endpoint.
	EndpointBusinessStatus pulumi.StringPtrInput
	// The description of the endpoint.
	EndpointDescription pulumi.StringPtrInput
	// The domain name of the endpoint.
	EndpointDomain pulumi.StringPtrInput
	// The endpoint type.Only the value: Interface, indicating the Interface endpoint. You can add the service resource types of Application Load Balancer (ALB), Classic Load Balancer (CLB), and Network Load Balancer (NLB).
	EndpointType pulumi.StringPtrInput
	// Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:
	// - **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
	// - **false (default)**: disables user authentication.
	ProtectedEnabled pulumi.BoolPtrInput
	// The resource group ID.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the security group that is associated with the endpoint ENI. The security group can be used to control data transfer between the VPC and the endpoint ENI.The endpoint can be associated with up to 10 security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// The ID of the endpoint service with which the endpoint is associated.
	ServiceId pulumi.StringPtrInput
	// The name of the endpoint service with which the endpoint is associated.
	ServiceName pulumi.StringPtrInput
	// The state of the endpoint.
	Status pulumi.StringPtrInput
	// The list of tags.
	Tags pulumi.MapInput
	// The name of the endpoint.
	VpcEndpointName pulumi.StringPtrInput
	// The ID of the VPC to which the endpoint belongs.
	VpcId pulumi.StringPtrInput
	// The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only 1 is returned.
	ZonePrivateIpAddressCount pulumi.IntPtrInput
}

func (VpcEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointState)(nil)).Elem()
}

type vpcEndpointArgs struct {
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
	// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
	DryRun *bool `pulumi:"dryRun"`
	// The description of the endpoint.
	EndpointDescription *string `pulumi:"endpointDescription"`
	// The endpoint type.Only the value: Interface, indicating the Interface endpoint. You can add the service resource types of Application Load Balancer (ALB), Classic Load Balancer (CLB), and Network Load Balancer (NLB).
	EndpointType *string `pulumi:"endpointType"`
	// Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:
	// - **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
	// - **false (default)**: disables user authentication.
	ProtectedEnabled *bool `pulumi:"protectedEnabled"`
	// The resource group ID.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the security group that is associated with the endpoint ENI. The security group can be used to control data transfer between the VPC and the endpoint ENI.The endpoint can be associated with up to 10 security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the endpoint service with which the endpoint is associated.
	ServiceId *string `pulumi:"serviceId"`
	// The name of the endpoint service with which the endpoint is associated.
	ServiceName *string `pulumi:"serviceName"`
	// The list of tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// The name of the endpoint.
	VpcEndpointName *string `pulumi:"vpcEndpointName"`
	// The ID of the VPC to which the endpoint belongs.
	VpcId string `pulumi:"vpcId"`
	// The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only 1 is returned.
	ZonePrivateIpAddressCount *int `pulumi:"zonePrivateIpAddressCount"`
}

// The set of arguments for constructing a VpcEndpoint resource.
type VpcEndpointArgs struct {
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
	// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
	DryRun pulumi.BoolPtrInput
	// The description of the endpoint.
	EndpointDescription pulumi.StringPtrInput
	// The endpoint type.Only the value: Interface, indicating the Interface endpoint. You can add the service resource types of Application Load Balancer (ALB), Classic Load Balancer (CLB), and Network Load Balancer (NLB).
	EndpointType pulumi.StringPtrInput
	// Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:
	// - **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
	// - **false (default)**: disables user authentication.
	ProtectedEnabled pulumi.BoolPtrInput
	// The resource group ID.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the security group that is associated with the endpoint ENI. The security group can be used to control data transfer between the VPC and the endpoint ENI.The endpoint can be associated with up to 10 security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// The ID of the endpoint service with which the endpoint is associated.
	ServiceId pulumi.StringPtrInput
	// The name of the endpoint service with which the endpoint is associated.
	ServiceName pulumi.StringPtrInput
	// The list of tags.
	Tags pulumi.MapInput
	// The name of the endpoint.
	VpcEndpointName pulumi.StringPtrInput
	// The ID of the VPC to which the endpoint belongs.
	VpcId pulumi.StringInput
	// The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only 1 is returned.
	ZonePrivateIpAddressCount pulumi.IntPtrInput
}

func (VpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointArgs)(nil)).Elem()
}

type VpcEndpointInput interface {
	pulumi.Input

	ToVpcEndpointOutput() VpcEndpointOutput
	ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput
}

func (*VpcEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpoint)(nil)).Elem()
}

func (i *VpcEndpoint) ToVpcEndpointOutput() VpcEndpointOutput {
	return i.ToVpcEndpointOutputWithContext(context.Background())
}

func (i *VpcEndpoint) ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointOutput)
}

// VpcEndpointArrayInput is an input type that accepts VpcEndpointArray and VpcEndpointArrayOutput values.
// You can construct a concrete instance of `VpcEndpointArrayInput` via:
//
//	VpcEndpointArray{ VpcEndpointArgs{...} }
type VpcEndpointArrayInput interface {
	pulumi.Input

	ToVpcEndpointArrayOutput() VpcEndpointArrayOutput
	ToVpcEndpointArrayOutputWithContext(context.Context) VpcEndpointArrayOutput
}

type VpcEndpointArray []VpcEndpointInput

func (VpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpoint)(nil)).Elem()
}

func (i VpcEndpointArray) ToVpcEndpointArrayOutput() VpcEndpointArrayOutput {
	return i.ToVpcEndpointArrayOutputWithContext(context.Background())
}

func (i VpcEndpointArray) ToVpcEndpointArrayOutputWithContext(ctx context.Context) VpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointArrayOutput)
}

// VpcEndpointMapInput is an input type that accepts VpcEndpointMap and VpcEndpointMapOutput values.
// You can construct a concrete instance of `VpcEndpointMapInput` via:
//
//	VpcEndpointMap{ "key": VpcEndpointArgs{...} }
type VpcEndpointMapInput interface {
	pulumi.Input

	ToVpcEndpointMapOutput() VpcEndpointMapOutput
	ToVpcEndpointMapOutputWithContext(context.Context) VpcEndpointMapOutput
}

type VpcEndpointMap map[string]VpcEndpointInput

func (VpcEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpoint)(nil)).Elem()
}

func (i VpcEndpointMap) ToVpcEndpointMapOutput() VpcEndpointMapOutput {
	return i.ToVpcEndpointMapOutputWithContext(context.Background())
}

func (i VpcEndpointMap) ToVpcEndpointMapOutputWithContext(ctx context.Context) VpcEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointMapOutput)
}

type VpcEndpointOutput struct{ *pulumi.OutputState }

func (VpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointOutput) ToVpcEndpointOutput() VpcEndpointOutput {
	return o
}

func (o VpcEndpointOutput) ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput {
	return o
}

// The bandwidth of the endpoint connection.  1024 to 10240. Unit: Mbit/s.Note: The bandwidth of an endpoint connection is in the range of 100 to 10,240 Mbit/s. The default bandwidth is 1,024 Mbit/s. When the endpoint is connected to the endpoint service, the default bandwidth is the minimum bandwidth. In this case, the connection bandwidth range is 1,024 to 10,240 Mbit/s.
func (o VpcEndpointOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

// The state of the endpoint connection.
func (o VpcEndpointOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The time when the endpoint was created.
func (o VpcEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
// - **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
// - **false (default)**: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.
func (o VpcEndpointOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The service state of the endpoint.
func (o VpcEndpointOutput) EndpointBusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.EndpointBusinessStatus }).(pulumi.StringOutput)
}

// The description of the endpoint.
func (o VpcEndpointOutput) EndpointDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringPtrOutput { return v.EndpointDescription }).(pulumi.StringPtrOutput)
}

// The domain name of the endpoint.
func (o VpcEndpointOutput) EndpointDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.EndpointDomain }).(pulumi.StringOutput)
}

// The endpoint type.Only the value: Interface, indicating the Interface endpoint. You can add the service resource types of Application Load Balancer (ALB), Classic Load Balancer (CLB), and Network Load Balancer (NLB).
func (o VpcEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.EndpointType }).(pulumi.StringOutput)
}

// Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:
// - **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
// - **false (default)**: disables user authentication.
func (o VpcEndpointOutput) ProtectedEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.BoolPtrOutput { return v.ProtectedEnabled }).(pulumi.BoolPtrOutput)
}

// The resource group ID.
func (o VpcEndpointOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The ID of the security group that is associated with the endpoint ENI. The security group can be used to control data transfer between the VPC and the endpoint ENI.The endpoint can be associated with up to 10 security groups.
func (o VpcEndpointOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the endpoint service with which the endpoint is associated.
func (o VpcEndpointOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringPtrOutput { return v.ServiceId }).(pulumi.StringPtrOutput)
}

// The name of the endpoint service with which the endpoint is associated.
func (o VpcEndpointOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The state of the endpoint.
func (o VpcEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The list of tags.
func (o VpcEndpointOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// The name of the endpoint.
func (o VpcEndpointOutput) VpcEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringPtrOutput { return v.VpcEndpointName }).(pulumi.StringPtrOutput)
}

// The ID of the VPC to which the endpoint belongs.
func (o VpcEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only 1 is returned.
func (o VpcEndpointOutput) ZonePrivateIpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.IntOutput { return v.ZonePrivateIpAddressCount }).(pulumi.IntOutput)
}

type VpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointArrayOutput) ToVpcEndpointArrayOutput() VpcEndpointArrayOutput {
	return o
}

func (o VpcEndpointArrayOutput) ToVpcEndpointArrayOutputWithContext(ctx context.Context) VpcEndpointArrayOutput {
	return o
}

func (o VpcEndpointArrayOutput) Index(i pulumi.IntInput) VpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpoint {
		return vs[0].([]*VpcEndpoint)[vs[1].(int)]
	}).(VpcEndpointOutput)
}

type VpcEndpointMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointMapOutput) ToVpcEndpointMapOutput() VpcEndpointMapOutput {
	return o
}

func (o VpcEndpointMapOutput) ToVpcEndpointMapOutputWithContext(ctx context.Context) VpcEndpointMapOutput {
	return o
}

func (o VpcEndpointMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpoint {
		return vs[0].(map[string]*VpcEndpoint)[vs[1].(string)]
	}).(VpcEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointInput)(nil)).Elem(), &VpcEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointArrayInput)(nil)).Elem(), VpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointMapInput)(nil)).Elem(), VpcEndpointMap{})
	pulumi.RegisterOutputType(VpcEndpointOutput{})
	pulumi.RegisterOutputType(VpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointMapOutput{})
}
