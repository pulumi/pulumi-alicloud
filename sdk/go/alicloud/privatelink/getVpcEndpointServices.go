// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Privatelink Vpc Endpoint Services of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.109.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/privatelink"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpcEndpointService, err := privatelink.NewVpcEndpointService(ctx, "example", &privatelink.VpcEndpointServiceArgs{
//				ServiceDescription:   pulumi.String("terraform-example"),
//				ConnectBandwidth:     pulumi.Int(103),
//				AutoAcceptConnection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			example := privatelink.GetVpcEndpointServicesOutput(ctx, privatelink.GetVpcEndpointServicesOutputArgs{
//				Ids: pulumi.StringArray{
//					exampleVpcEndpointService.ID(),
//				},
//			}, nil)
//			ctx.Export("firstPrivatelinkVpcEndpointServiceId", example.ApplyT(func(example privatelink.GetVpcEndpointServicesResult) (*string, error) {
//				return &example.Services[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetVpcEndpointServices(ctx *pulumi.Context, args *GetVpcEndpointServicesArgs, opts ...pulumi.InvokeOption) (*GetVpcEndpointServicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcEndpointServicesResult
	err := ctx.Invoke("alicloud:privatelink/getVpcEndpointServices:getVpcEndpointServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcEndpointServices.
type GetVpcEndpointServicesArgs struct {
	// Whether to automatically accept terminal node connections.
	AutoAcceptConnection *bool `pulumi:"autoAcceptConnection"`
	// A list of Vpc Endpoint Service IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Vpc Endpoint Service name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
	ServiceBusinessStatus *string `pulumi:"serviceBusinessStatus"`
	// The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
	Status *string `pulumi:"status"`
	// The tags of Vpc Endpoint Service.
	Tags map[string]string `pulumi:"tags"`
	// The name of Vpc Endpoint Service.
	VpcEndpointServiceName *string `pulumi:"vpcEndpointServiceName"`
}

// A collection of values returned by getVpcEndpointServices.
type GetVpcEndpointServicesResult struct {
	// Whether to automatically accept terminal node connections..
	AutoAcceptConnection *bool `pulumi:"autoAcceptConnection"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Vpc Endpoint Service names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The business status of the terminal node service..
	ServiceBusinessStatus *string `pulumi:"serviceBusinessStatus"`
	// A list of Privatelink Vpc Endpoint Services. Each element contains the following attributes:
	Services []GetVpcEndpointServicesService `pulumi:"services"`
	// The Status of Vpc Endpoint Service.
	Status *string `pulumi:"status"`
	// The tags of Vpc Endpoint Service.
	Tags map[string]string `pulumi:"tags"`
	// The name of Vpc Endpoint Service.
	VpcEndpointServiceName *string `pulumi:"vpcEndpointServiceName"`
}

func GetVpcEndpointServicesOutput(ctx *pulumi.Context, args GetVpcEndpointServicesOutputArgs, opts ...pulumi.InvokeOption) GetVpcEndpointServicesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVpcEndpointServicesResultOutput, error) {
			args := v.(GetVpcEndpointServicesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:privatelink/getVpcEndpointServices:getVpcEndpointServices", args, GetVpcEndpointServicesResultOutput{}, options).(GetVpcEndpointServicesResultOutput), nil
		}).(GetVpcEndpointServicesResultOutput)
}

// A collection of arguments for invoking getVpcEndpointServices.
type GetVpcEndpointServicesOutputArgs struct {
	// Whether to automatically accept terminal node connections.
	AutoAcceptConnection pulumi.BoolPtrInput `pulumi:"autoAcceptConnection"`
	// A list of Vpc Endpoint Service IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Vpc Endpoint Service name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
	ServiceBusinessStatus pulumi.StringPtrInput `pulumi:"serviceBusinessStatus"`
	// The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tags of Vpc Endpoint Service.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The name of Vpc Endpoint Service.
	VpcEndpointServiceName pulumi.StringPtrInput `pulumi:"vpcEndpointServiceName"`
}

func (GetVpcEndpointServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServicesArgs)(nil)).Elem()
}

// A collection of values returned by getVpcEndpointServices.
type GetVpcEndpointServicesResultOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServicesResult)(nil)).Elem()
}

func (o GetVpcEndpointServicesResultOutput) ToGetVpcEndpointServicesResultOutput() GetVpcEndpointServicesResultOutput {
	return o
}

func (o GetVpcEndpointServicesResultOutput) ToGetVpcEndpointServicesResultOutputWithContext(ctx context.Context) GetVpcEndpointServicesResultOutput {
	return o
}

// Whether to automatically accept terminal node connections..
func (o GetVpcEndpointServicesResultOutput) AutoAcceptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) *bool { return v.AutoAcceptConnection }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpcEndpointServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpcEndpointServicesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetVpcEndpointServicesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Vpc Endpoint Service names.
func (o GetVpcEndpointServicesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetVpcEndpointServicesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The business status of the terminal node service..
func (o GetVpcEndpointServicesResultOutput) ServiceBusinessStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) *string { return v.ServiceBusinessStatus }).(pulumi.StringPtrOutput)
}

// A list of Privatelink Vpc Endpoint Services. Each element contains the following attributes:
func (o GetVpcEndpointServicesResultOutput) Services() GetVpcEndpointServicesServiceArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) []GetVpcEndpointServicesService { return v.Services }).(GetVpcEndpointServicesServiceArrayOutput)
}

// The Status of Vpc Endpoint Service.
func (o GetVpcEndpointServicesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of Vpc Endpoint Service.
func (o GetVpcEndpointServicesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The name of Vpc Endpoint Service.
func (o GetVpcEndpointServicesResultOutput) VpcEndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpcEndpointServicesResult) *string { return v.VpcEndpointServiceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcEndpointServicesResultOutput{})
}
