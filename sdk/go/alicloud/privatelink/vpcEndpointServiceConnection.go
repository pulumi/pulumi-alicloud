// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Private Link Vpc Endpoint Connection resource.
//
// For information about Private Link Vpc Endpoint Connection and how to use it, see [What is Vpc Endpoint Connection](https://www.alibabacloud.com/help/en/privatelink/latest/api-privatelink-2020-04-15-enablevpcendpointzoneconnection).
//
// > **NOTE:** Available since v1.110.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/privatelink"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			exampleZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleVpcEndpointService, err := privatelink.NewVpcEndpointService(ctx, "exampleVpcEndpointService", &privatelink.VpcEndpointServiceArgs{
//				ServiceDescription:   pulumi.String(name),
//				ConnectBandwidth:     pulumi.Int(103),
//				AutoAcceptConnection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetwork, err := vpc.NewNetwork(ctx, "exampleNetwork", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.0.0.0/8"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSwitch, err := vpc.NewSwitch(ctx, "exampleSwitch", &vpc.SwitchArgs{
//				VswitchName: pulumi.String(name),
//				CidrBlock:   pulumi.String("10.1.0.0/16"),
//				VpcId:       exampleNetwork.ID(),
//				ZoneId:      *pulumi.String(exampleZones.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSecurityGroup, err := ecs.NewSecurityGroup(ctx, "exampleSecurityGroup", &ecs.SecurityGroupArgs{
//				VpcId: exampleNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleApplicationLoadBalancer, err := slb.NewApplicationLoadBalancer(ctx, "exampleApplicationLoadBalancer", &slb.ApplicationLoadBalancerArgs{
//				LoadBalancerName: pulumi.String(name),
//				VswitchId:        exampleSwitch.ID(),
//				LoadBalancerSpec: pulumi.String("slb.s2.small"),
//				AddressType:      pulumi.String("intranet"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVpcEndpointServiceResource, err := privatelink.NewVpcEndpointServiceResource(ctx, "exampleVpcEndpointServiceResource", &privatelink.VpcEndpointServiceResourceArgs{
//				ServiceId:    exampleVpcEndpointService.ID(),
//				ResourceId:   exampleApplicationLoadBalancer.ID(),
//				ResourceType: pulumi.String("slb"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVpcEndpoint, err := privatelink.NewVpcEndpoint(ctx, "exampleVpcEndpoint", &privatelink.VpcEndpointArgs{
//				ServiceId: exampleVpcEndpointServiceResource.ServiceId,
//				SecurityGroupIds: pulumi.StringArray{
//					exampleSecurityGroup.ID(),
//				},
//				VpcId:           exampleNetwork.ID(),
//				VpcEndpointName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = privatelink.NewVpcEndpointServiceConnection(ctx, "exampleVpcEndpointServiceConnection", &privatelink.VpcEndpointServiceConnectionArgs{
//				EndpointId: exampleVpcEndpoint.ID(),
//				ServiceId:  exampleVpcEndpoint.ServiceId,
//				Bandwidth:  pulumi.Int(1024),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Private Link Vpc Endpoint Connection can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:privatelink/vpcEndpointServiceConnection:VpcEndpointServiceConnection example <service_id>:<endpoint_id>
//
// ```
type VpcEndpointServiceConnection struct {
	pulumi.CustomResourceState

	// The Bandwidth.
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// The dry run.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// The ID of the Vpc Endpoint Service.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// The status of Vpc Endpoint Connection.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewVpcEndpointServiceConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointServiceConnection(ctx *pulumi.Context,
	name string, args *VpcEndpointServiceConnectionArgs, opts ...pulumi.ResourceOption) (*VpcEndpointServiceConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointId'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpointServiceConnection
	err := ctx.RegisterResource("alicloud:privatelink/vpcEndpointServiceConnection:VpcEndpointServiceConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointServiceConnection gets an existing VpcEndpointServiceConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointServiceConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointServiceConnectionState, opts ...pulumi.ResourceOption) (*VpcEndpointServiceConnection, error) {
	var resource VpcEndpointServiceConnection
	err := ctx.ReadResource("alicloud:privatelink/vpcEndpointServiceConnection:VpcEndpointServiceConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointServiceConnection resources.
type vpcEndpointServiceConnectionState struct {
	// The Bandwidth.
	Bandwidth *int `pulumi:"bandwidth"`
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The ID of the Vpc Endpoint Service.
	ServiceId *string `pulumi:"serviceId"`
	// The status of Vpc Endpoint Connection.
	Status *string `pulumi:"status"`
}

type VpcEndpointServiceConnectionState struct {
	// The Bandwidth.
	Bandwidth pulumi.IntPtrInput
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringPtrInput
	// The ID of the Vpc Endpoint Service.
	ServiceId pulumi.StringPtrInput
	// The status of Vpc Endpoint Connection.
	Status pulumi.StringPtrInput
}

func (VpcEndpointServiceConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceConnectionState)(nil)).Elem()
}

type vpcEndpointServiceConnectionArgs struct {
	// The Bandwidth.
	Bandwidth *int `pulumi:"bandwidth"`
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The ID of the Vpc Endpoint Service.
	ServiceId string `pulumi:"serviceId"`
}

// The set of arguments for constructing a VpcEndpointServiceConnection resource.
type VpcEndpointServiceConnectionArgs struct {
	// The Bandwidth.
	Bandwidth pulumi.IntPtrInput
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringInput
	// The ID of the Vpc Endpoint Service.
	ServiceId pulumi.StringInput
}

func (VpcEndpointServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceConnectionArgs)(nil)).Elem()
}

type VpcEndpointServiceConnectionInput interface {
	pulumi.Input

	ToVpcEndpointServiceConnectionOutput() VpcEndpointServiceConnectionOutput
	ToVpcEndpointServiceConnectionOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionOutput
}

func (*VpcEndpointServiceConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointServiceConnection)(nil)).Elem()
}

func (i *VpcEndpointServiceConnection) ToVpcEndpointServiceConnectionOutput() VpcEndpointServiceConnectionOutput {
	return i.ToVpcEndpointServiceConnectionOutputWithContext(context.Background())
}

func (i *VpcEndpointServiceConnection) ToVpcEndpointServiceConnectionOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServiceConnectionOutput)
}

func (i *VpcEndpointServiceConnection) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointServiceConnection] {
	return pulumix.Output[*VpcEndpointServiceConnection]{
		OutputState: i.ToVpcEndpointServiceConnectionOutputWithContext(ctx).OutputState,
	}
}

// VpcEndpointServiceConnectionArrayInput is an input type that accepts VpcEndpointServiceConnectionArray and VpcEndpointServiceConnectionArrayOutput values.
// You can construct a concrete instance of `VpcEndpointServiceConnectionArrayInput` via:
//
//	VpcEndpointServiceConnectionArray{ VpcEndpointServiceConnectionArgs{...} }
type VpcEndpointServiceConnectionArrayInput interface {
	pulumi.Input

	ToVpcEndpointServiceConnectionArrayOutput() VpcEndpointServiceConnectionArrayOutput
	ToVpcEndpointServiceConnectionArrayOutputWithContext(context.Context) VpcEndpointServiceConnectionArrayOutput
}

type VpcEndpointServiceConnectionArray []VpcEndpointServiceConnectionInput

func (VpcEndpointServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointServiceConnection)(nil)).Elem()
}

func (i VpcEndpointServiceConnectionArray) ToVpcEndpointServiceConnectionArrayOutput() VpcEndpointServiceConnectionArrayOutput {
	return i.ToVpcEndpointServiceConnectionArrayOutputWithContext(context.Background())
}

func (i VpcEndpointServiceConnectionArray) ToVpcEndpointServiceConnectionArrayOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServiceConnectionArrayOutput)
}

func (i VpcEndpointServiceConnectionArray) ToOutput(ctx context.Context) pulumix.Output[[]*VpcEndpointServiceConnection] {
	return pulumix.Output[[]*VpcEndpointServiceConnection]{
		OutputState: i.ToVpcEndpointServiceConnectionArrayOutputWithContext(ctx).OutputState,
	}
}

// VpcEndpointServiceConnectionMapInput is an input type that accepts VpcEndpointServiceConnectionMap and VpcEndpointServiceConnectionMapOutput values.
// You can construct a concrete instance of `VpcEndpointServiceConnectionMapInput` via:
//
//	VpcEndpointServiceConnectionMap{ "key": VpcEndpointServiceConnectionArgs{...} }
type VpcEndpointServiceConnectionMapInput interface {
	pulumi.Input

	ToVpcEndpointServiceConnectionMapOutput() VpcEndpointServiceConnectionMapOutput
	ToVpcEndpointServiceConnectionMapOutputWithContext(context.Context) VpcEndpointServiceConnectionMapOutput
}

type VpcEndpointServiceConnectionMap map[string]VpcEndpointServiceConnectionInput

func (VpcEndpointServiceConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointServiceConnection)(nil)).Elem()
}

func (i VpcEndpointServiceConnectionMap) ToVpcEndpointServiceConnectionMapOutput() VpcEndpointServiceConnectionMapOutput {
	return i.ToVpcEndpointServiceConnectionMapOutputWithContext(context.Background())
}

func (i VpcEndpointServiceConnectionMap) ToVpcEndpointServiceConnectionMapOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServiceConnectionMapOutput)
}

func (i VpcEndpointServiceConnectionMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*VpcEndpointServiceConnection] {
	return pulumix.Output[map[string]*VpcEndpointServiceConnection]{
		OutputState: i.ToVpcEndpointServiceConnectionMapOutputWithContext(ctx).OutputState,
	}
}

type VpcEndpointServiceConnectionOutput struct{ *pulumi.OutputState }

func (VpcEndpointServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointServiceConnection)(nil)).Elem()
}

func (o VpcEndpointServiceConnectionOutput) ToVpcEndpointServiceConnectionOutput() VpcEndpointServiceConnectionOutput {
	return o
}

func (o VpcEndpointServiceConnectionOutput) ToVpcEndpointServiceConnectionOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionOutput {
	return o
}

func (o VpcEndpointServiceConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointServiceConnection] {
	return pulumix.Output[*VpcEndpointServiceConnection]{
		OutputState: o.OutputState,
	}
}

// The Bandwidth.
func (o VpcEndpointServiceConnectionOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcEndpointServiceConnection) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

// The dry run.
func (o VpcEndpointServiceConnectionOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpointServiceConnection) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The ID of the Vpc Endpoint.
func (o VpcEndpointServiceConnectionOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointServiceConnection) pulumi.StringOutput { return v.EndpointId }).(pulumi.StringOutput)
}

// The ID of the Vpc Endpoint Service.
func (o VpcEndpointServiceConnectionOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointServiceConnection) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// The status of Vpc Endpoint Connection.
func (o VpcEndpointServiceConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointServiceConnection) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type VpcEndpointServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointServiceConnection)(nil)).Elem()
}

func (o VpcEndpointServiceConnectionArrayOutput) ToVpcEndpointServiceConnectionArrayOutput() VpcEndpointServiceConnectionArrayOutput {
	return o
}

func (o VpcEndpointServiceConnectionArrayOutput) ToVpcEndpointServiceConnectionArrayOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionArrayOutput {
	return o
}

func (o VpcEndpointServiceConnectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*VpcEndpointServiceConnection] {
	return pulumix.Output[[]*VpcEndpointServiceConnection]{
		OutputState: o.OutputState,
	}
}

func (o VpcEndpointServiceConnectionArrayOutput) Index(i pulumi.IntInput) VpcEndpointServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpointServiceConnection {
		return vs[0].([]*VpcEndpointServiceConnection)[vs[1].(int)]
	}).(VpcEndpointServiceConnectionOutput)
}

type VpcEndpointServiceConnectionMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointServiceConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointServiceConnection)(nil)).Elem()
}

func (o VpcEndpointServiceConnectionMapOutput) ToVpcEndpointServiceConnectionMapOutput() VpcEndpointServiceConnectionMapOutput {
	return o
}

func (o VpcEndpointServiceConnectionMapOutput) ToVpcEndpointServiceConnectionMapOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionMapOutput {
	return o
}

func (o VpcEndpointServiceConnectionMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*VpcEndpointServiceConnection] {
	return pulumix.Output[map[string]*VpcEndpointServiceConnection]{
		OutputState: o.OutputState,
	}
}

func (o VpcEndpointServiceConnectionMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointServiceConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpointServiceConnection {
		return vs[0].(map[string]*VpcEndpointServiceConnection)[vs[1].(string)]
	}).(VpcEndpointServiceConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointServiceConnectionInput)(nil)).Elem(), &VpcEndpointServiceConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointServiceConnectionArrayInput)(nil)).Elem(), VpcEndpointServiceConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointServiceConnectionMapInput)(nil)).Elem(), VpcEndpointServiceConnectionMap{})
	pulumi.RegisterOutputType(VpcEndpointServiceConnectionOutput{})
	pulumi.RegisterOutputType(VpcEndpointServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointServiceConnectionMapOutput{})
}
