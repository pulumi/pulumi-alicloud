// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Private Link Vpc Endpoint Zone resource.
//
// For information about Private Link Vpc Endpoint Zone and how to use it, see [What is Vpc Endpoint Zone](https://help.aliyun.com/document_detail/183561.html).
//
// > **NOTE:** Available in v1.111.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/privatelink"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := privatelink.NewVpcEndpointZone(ctx, "example", &privatelink.VpcEndpointZoneArgs{
// 			EndpointId: pulumi.String("ep-gw8boxxxxx"),
// 			VswitchId:  pulumi.String("vsw-rtycxxxxx"),
// 			ZoneId:     pulumi.String("eu-central-1a"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Private Link Vpc Endpoint Zone can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:privatelink/vpcEndpointZone:VpcEndpointZone example <endpoint_id>:<zone_id>
// ```
type VpcEndpointZone struct {
	pulumi.CustomResourceState

	// The dry run.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// Status.
	Status pulumi.StringOutput `pulumi:"status"`
	// The VSwitch id.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
	// The Zone Id.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewVpcEndpointZone registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointZone(ctx *pulumi.Context,
	name string, args *VpcEndpointZoneArgs, opts ...pulumi.ResourceOption) (*VpcEndpointZone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	var resource VpcEndpointZone
	err := ctx.RegisterResource("alicloud:privatelink/vpcEndpointZone:VpcEndpointZone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointZone gets an existing VpcEndpointZone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointZoneState, opts ...pulumi.ResourceOption) (*VpcEndpointZone, error) {
	var resource VpcEndpointZone
	err := ctx.ReadResource("alicloud:privatelink/vpcEndpointZone:VpcEndpointZone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointZone resources.
type vpcEndpointZoneState struct {
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// Status.
	Status *string `pulumi:"status"`
	// The VSwitch id.
	VswitchId *string `pulumi:"vswitchId"`
	// The Zone Id.
	ZoneId *string `pulumi:"zoneId"`
}

type VpcEndpointZoneState struct {
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringPtrInput
	// Status.
	Status pulumi.StringPtrInput
	// The VSwitch id.
	VswitchId pulumi.StringPtrInput
	// The Zone Id.
	ZoneId pulumi.StringPtrInput
}

func (VpcEndpointZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointZoneState)(nil)).Elem()
}

type vpcEndpointZoneArgs struct {
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The VSwitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The Zone Id.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a VpcEndpointZone resource.
type VpcEndpointZoneArgs struct {
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringInput
	// The VSwitch id.
	VswitchId pulumi.StringInput
	// The Zone Id.
	ZoneId pulumi.StringPtrInput
}

func (VpcEndpointZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointZoneArgs)(nil)).Elem()
}

type VpcEndpointZoneInput interface {
	pulumi.Input

	ToVpcEndpointZoneOutput() VpcEndpointZoneOutput
	ToVpcEndpointZoneOutputWithContext(ctx context.Context) VpcEndpointZoneOutput
}

func (*VpcEndpointZone) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointZone)(nil)).Elem()
}

func (i *VpcEndpointZone) ToVpcEndpointZoneOutput() VpcEndpointZoneOutput {
	return i.ToVpcEndpointZoneOutputWithContext(context.Background())
}

func (i *VpcEndpointZone) ToVpcEndpointZoneOutputWithContext(ctx context.Context) VpcEndpointZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointZoneOutput)
}

// VpcEndpointZoneArrayInput is an input type that accepts VpcEndpointZoneArray and VpcEndpointZoneArrayOutput values.
// You can construct a concrete instance of `VpcEndpointZoneArrayInput` via:
//
//          VpcEndpointZoneArray{ VpcEndpointZoneArgs{...} }
type VpcEndpointZoneArrayInput interface {
	pulumi.Input

	ToVpcEndpointZoneArrayOutput() VpcEndpointZoneArrayOutput
	ToVpcEndpointZoneArrayOutputWithContext(context.Context) VpcEndpointZoneArrayOutput
}

type VpcEndpointZoneArray []VpcEndpointZoneInput

func (VpcEndpointZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointZone)(nil)).Elem()
}

func (i VpcEndpointZoneArray) ToVpcEndpointZoneArrayOutput() VpcEndpointZoneArrayOutput {
	return i.ToVpcEndpointZoneArrayOutputWithContext(context.Background())
}

func (i VpcEndpointZoneArray) ToVpcEndpointZoneArrayOutputWithContext(ctx context.Context) VpcEndpointZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointZoneArrayOutput)
}

// VpcEndpointZoneMapInput is an input type that accepts VpcEndpointZoneMap and VpcEndpointZoneMapOutput values.
// You can construct a concrete instance of `VpcEndpointZoneMapInput` via:
//
//          VpcEndpointZoneMap{ "key": VpcEndpointZoneArgs{...} }
type VpcEndpointZoneMapInput interface {
	pulumi.Input

	ToVpcEndpointZoneMapOutput() VpcEndpointZoneMapOutput
	ToVpcEndpointZoneMapOutputWithContext(context.Context) VpcEndpointZoneMapOutput
}

type VpcEndpointZoneMap map[string]VpcEndpointZoneInput

func (VpcEndpointZoneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointZone)(nil)).Elem()
}

func (i VpcEndpointZoneMap) ToVpcEndpointZoneMapOutput() VpcEndpointZoneMapOutput {
	return i.ToVpcEndpointZoneMapOutputWithContext(context.Background())
}

func (i VpcEndpointZoneMap) ToVpcEndpointZoneMapOutputWithContext(ctx context.Context) VpcEndpointZoneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointZoneMapOutput)
}

type VpcEndpointZoneOutput struct{ *pulumi.OutputState }

func (VpcEndpointZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointZone)(nil)).Elem()
}

func (o VpcEndpointZoneOutput) ToVpcEndpointZoneOutput() VpcEndpointZoneOutput {
	return o
}

func (o VpcEndpointZoneOutput) ToVpcEndpointZoneOutputWithContext(ctx context.Context) VpcEndpointZoneOutput {
	return o
}

type VpcEndpointZoneArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointZone)(nil)).Elem()
}

func (o VpcEndpointZoneArrayOutput) ToVpcEndpointZoneArrayOutput() VpcEndpointZoneArrayOutput {
	return o
}

func (o VpcEndpointZoneArrayOutput) ToVpcEndpointZoneArrayOutputWithContext(ctx context.Context) VpcEndpointZoneArrayOutput {
	return o
}

func (o VpcEndpointZoneArrayOutput) Index(i pulumi.IntInput) VpcEndpointZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpointZone {
		return vs[0].([]*VpcEndpointZone)[vs[1].(int)]
	}).(VpcEndpointZoneOutput)
}

type VpcEndpointZoneMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointZoneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointZone)(nil)).Elem()
}

func (o VpcEndpointZoneMapOutput) ToVpcEndpointZoneMapOutput() VpcEndpointZoneMapOutput {
	return o
}

func (o VpcEndpointZoneMapOutput) ToVpcEndpointZoneMapOutputWithContext(ctx context.Context) VpcEndpointZoneMapOutput {
	return o
}

func (o VpcEndpointZoneMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointZoneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpointZone {
		return vs[0].(map[string]*VpcEndpointZone)[vs[1].(string)]
	}).(VpcEndpointZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointZoneInput)(nil)).Elem(), &VpcEndpointZone{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointZoneArrayInput)(nil)).Elem(), VpcEndpointZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointZoneMapInput)(nil)).Elem(), VpcEndpointZoneMap{})
	pulumi.RegisterOutputType(VpcEndpointZoneOutput{})
	pulumi.RegisterOutputType(VpcEndpointZoneArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointZoneMapOutput{})
}
