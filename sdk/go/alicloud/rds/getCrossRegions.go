// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides an available area for remote disaster recovery for RDS.
//
// > **NOTE:** Available in v1.193.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Declare the data source
//			_, err := rds.GetCrossRegions(ctx, &rds.GetCrossRegionsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("firstRdsCrossRegions", regions.Ids[0])
//			return nil
//		})
//	}
//
// ```
func GetCrossRegions(ctx *pulumi.Context, args *GetCrossRegionsArgs, opts ...pulumi.InvokeOption) (*GetCrossRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCrossRegionsResult
	err := ctx.Invoke("alicloud:rds/getCrossRegions:getCrossRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCrossRegions.
type GetCrossRegionsArgs struct {
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getCrossRegions.
type GetCrossRegionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of region IDs.
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The list of destination regions that support cross-region backup. Each element contains the following attributes:
	Regions []GetCrossRegionsRegion `pulumi:"regions"`
}

func GetCrossRegionsOutput(ctx *pulumi.Context, args GetCrossRegionsOutputArgs, opts ...pulumi.InvokeOption) GetCrossRegionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCrossRegionsResultOutput, error) {
			args := v.(GetCrossRegionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:rds/getCrossRegions:getCrossRegions", args, GetCrossRegionsResultOutput{}, options).(GetCrossRegionsResultOutput), nil
		}).(GetCrossRegionsResultOutput)
}

// A collection of arguments for invoking getCrossRegions.
type GetCrossRegionsOutputArgs struct {
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetCrossRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getCrossRegions.
type GetCrossRegionsResultOutput struct{ *pulumi.OutputState }

func (GetCrossRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossRegionsResult)(nil)).Elem()
}

func (o GetCrossRegionsResultOutput) ToGetCrossRegionsResultOutput() GetCrossRegionsResultOutput {
	return o
}

func (o GetCrossRegionsResultOutput) ToGetCrossRegionsResultOutputWithContext(ctx context.Context) GetCrossRegionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetCrossRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of region IDs.
func (o GetCrossRegionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCrossRegionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetCrossRegionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The list of destination regions that support cross-region backup. Each element contains the following attributes:
func (o GetCrossRegionsResultOutput) Regions() GetCrossRegionsRegionArrayOutput {
	return o.ApplyT(func(v GetCrossRegionsResult) []GetCrossRegionsRegion { return v.Regions }).(GetCrossRegionsRegionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCrossRegionsResultOutput{})
}
