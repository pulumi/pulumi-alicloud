// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "alicloud:rds/account:Account":
		r = &Account{}
	case "alicloud:rds/accountPrivilege:AccountPrivilege":
		r = &AccountPrivilege{}
	case "alicloud:rds/backupPolicy:BackupPolicy":
		r = &BackupPolicy{}
	case "alicloud:rds/connection:Connection":
		r = &Connection{}
	case "alicloud:rds/database:Database":
		r = &Database{}
	case "alicloud:rds/dbInstanceEndpoint:DbInstanceEndpoint":
		r = &DbInstanceEndpoint{}
	case "alicloud:rds/dbNode:DbNode":
		r = &DbNode{}
	case "alicloud:rds/ddrInstance:DdrInstance":
		r = &DdrInstance{}
	case "alicloud:rds/instance:Instance":
		r = &Instance{}
	case "alicloud:rds/rdsAccount:RdsAccount":
		r = &RdsAccount{}
	case "alicloud:rds/rdsBackup:RdsBackup":
		r = &RdsBackup{}
	case "alicloud:rds/rdsCloneDbInstance:RdsCloneDbInstance":
		r = &RdsCloneDbInstance{}
	case "alicloud:rds/rdsDbProxy:RdsDbProxy":
		r = &RdsDbProxy{}
	case "alicloud:rds/rdsInstanceCrossBackupPolicy:RdsInstanceCrossBackupPolicy":
		r = &RdsInstanceCrossBackupPolicy{}
	case "alicloud:rds/rdsParameterGroup:RdsParameterGroup":
		r = &RdsParameterGroup{}
	case "alicloud:rds/rdsServiceLinkedRole:RdsServiceLinkedRole":
		r = &RdsServiceLinkedRole{}
	case "alicloud:rds/rdsUpgradeDbInstance:RdsUpgradeDbInstance":
		r = &RdsUpgradeDbInstance{}
	case "alicloud:rds/readOnlyInstance:ReadOnlyInstance":
		r = &ReadOnlyInstance{}
	case "alicloud:rds/readWriteSplittingConnection:ReadWriteSplittingConnection":
		r = &ReadWriteSplittingConnection{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := alicloud.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/accountPrivilege",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/backupPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/connection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/database",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/dbInstanceEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/dbNode",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/ddrInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsCloneDbInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsDbProxy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsInstanceCrossBackupPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsParameterGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsServiceLinkedRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/rdsUpgradeDbInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/readOnlyInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"rds/readWriteSplittingConnection",
		&module{version},
	)
}
