// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides an RDS readonly instance resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/rds"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		creation := "Rds"
// 		if param := cfg.Get("creation"); param != "" {
// 			creation = param
// 		}
// 		name := "dbInstancevpc"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		opt0 := creation
// 		defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
// 			AvailableResourceCreation: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
// 			CidrBlock: pulumi.String("172.16.0.0/16"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
// 			VpcId:            defaultNetwork.ID(),
// 			CidrBlock:        pulumi.String("172.16.0.0/24"),
// 			AvailabilityZone: pulumi.String(defaultZones.Zones[0].Id),
// 			VswitchName:      pulumi.String(name),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultInstance, err := rds.NewInstance(ctx, "defaultInstance", &rds.InstanceArgs{
// 			Engine:             pulumi.String("MySQL"),
// 			EngineVersion:      pulumi.String("5.6"),
// 			InstanceType:       pulumi.String("rds.mysql.t1.small"),
// 			InstanceStorage:    pulumi.Int(20),
// 			InstanceChargeType: pulumi.String("Postpaid"),
// 			InstanceName:       pulumi.String(name),
// 			VswitchId:          defaultSwitch.ID(),
// 			SecurityIps: pulumi.StringArray{
// 				pulumi.String("10.168.1.12"),
// 				pulumi.String("100.69.7.112"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = rds.NewReadOnlyInstance(ctx, "defaultReadOnlyInstance", &rds.ReadOnlyInstanceArgs{
// 			MasterDbInstanceId: defaultInstance.ID(),
// 			ZoneId:             defaultInstance.ZoneId,
// 			EngineVersion:      defaultInstance.EngineVersion,
// 			InstanceType:       defaultInstance.InstanceType,
// 			InstanceStorage:    pulumi.Int(30),
// 			InstanceName:       pulumi.String(fmt.Sprintf("%v%v", name, "ro")),
// 			VswitchId:          defaultSwitch.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// RDS readonly instance can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:rds/readOnlyInstance:ReadOnlyInstance example rm-abc12345678
// ```
type ReadOnlyInstance struct {
	pulumi.CustomResourceState

	// RDS database connection string.
	ConnectionString pulumi.StringOutput `pulumi:"connectionString"`
	// Database type.
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Database version. Value options can refer to the latest docs [CreateDBInstance](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Set it to true to make some parameter efficient when modifying them. Default to false.
	ForceRestart pulumi.BoolPtrOutput `pulumi:"forceRestart"`
	// The name of DB instance. It a string of 2 to 256 characters.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// User-defined DB instance storage space. Value range: [5, 2000] for MySQL/SQL Server HA dual node edition. Increase progressively at a rate of 5 GB. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceStorage pulumi.IntOutput `pulumi:"instanceStorage"`
	// DB Instance type. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// ID of the master instance.
	MasterDbInstanceId pulumi.StringOutput `pulumi:"masterDbInstanceId"`
	// Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
	Parameters ReadOnlyInstanceParameterArrayOutput `pulumi:"parameters"`
	// RDS database connection port.
	Port pulumi.StringOutput `pulumi:"port"`
	// The ID of resource group which the DB read-only instance belongs.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// The virtual switch ID to launch DB instances in one VPC.
	VswitchId pulumi.StringPtrOutput `pulumi:"vswitchId"`
	// The Zone to launch the DB instance.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewReadOnlyInstance registers a new resource with the given unique name, arguments, and options.
func NewReadOnlyInstance(ctx *pulumi.Context,
	name string, args *ReadOnlyInstanceArgs, opts ...pulumi.ResourceOption) (*ReadOnlyInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.InstanceStorage == nil {
		return nil, errors.New("invalid value for required argument 'InstanceStorage'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.MasterDbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'MasterDbInstanceId'")
	}
	var resource ReadOnlyInstance
	err := ctx.RegisterResource("alicloud:rds/readOnlyInstance:ReadOnlyInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReadOnlyInstance gets an existing ReadOnlyInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReadOnlyInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReadOnlyInstanceState, opts ...pulumi.ResourceOption) (*ReadOnlyInstance, error) {
	var resource ReadOnlyInstance
	err := ctx.ReadResource("alicloud:rds/readOnlyInstance:ReadOnlyInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReadOnlyInstance resources.
type readOnlyInstanceState struct {
	// RDS database connection string.
	ConnectionString *string `pulumi:"connectionString"`
	// Database type.
	Engine *string `pulumi:"engine"`
	// Database version. Value options can refer to the latest docs [CreateDBInstance](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion *string `pulumi:"engineVersion"`
	// Set it to true to make some parameter efficient when modifying them. Default to false.
	ForceRestart *bool `pulumi:"forceRestart"`
	// The name of DB instance. It a string of 2 to 256 characters.
	InstanceName *string `pulumi:"instanceName"`
	// User-defined DB instance storage space. Value range: [5, 2000] for MySQL/SQL Server HA dual node edition. Increase progressively at a rate of 5 GB. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceStorage *int `pulumi:"instanceStorage"`
	// DB Instance type. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceType *string `pulumi:"instanceType"`
	// ID of the master instance.
	MasterDbInstanceId *string `pulumi:"masterDbInstanceId"`
	// Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
	Parameters []ReadOnlyInstanceParameter `pulumi:"parameters"`
	// RDS database connection port.
	Port *string `pulumi:"port"`
	// The ID of resource group which the DB read-only instance belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]interface{} `pulumi:"tags"`
	// The virtual switch ID to launch DB instances in one VPC.
	VswitchId *string `pulumi:"vswitchId"`
	// The Zone to launch the DB instance.
	ZoneId *string `pulumi:"zoneId"`
}

type ReadOnlyInstanceState struct {
	// RDS database connection string.
	ConnectionString pulumi.StringPtrInput
	// Database type.
	Engine pulumi.StringPtrInput
	// Database version. Value options can refer to the latest docs [CreateDBInstance](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion pulumi.StringPtrInput
	// Set it to true to make some parameter efficient when modifying them. Default to false.
	ForceRestart pulumi.BoolPtrInput
	// The name of DB instance. It a string of 2 to 256 characters.
	InstanceName pulumi.StringPtrInput
	// User-defined DB instance storage space. Value range: [5, 2000] for MySQL/SQL Server HA dual node edition. Increase progressively at a rate of 5 GB. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceStorage pulumi.IntPtrInput
	// DB Instance type. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceType pulumi.StringPtrInput
	// ID of the master instance.
	MasterDbInstanceId pulumi.StringPtrInput
	// Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
	Parameters ReadOnlyInstanceParameterArrayInput
	// RDS database connection port.
	Port pulumi.StringPtrInput
	// The ID of resource group which the DB read-only instance belongs.
	ResourceGroupId pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapInput
	// The virtual switch ID to launch DB instances in one VPC.
	VswitchId pulumi.StringPtrInput
	// The Zone to launch the DB instance.
	ZoneId pulumi.StringPtrInput
}

func (ReadOnlyInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*readOnlyInstanceState)(nil)).Elem()
}

type readOnlyInstanceArgs struct {
	// Database version. Value options can refer to the latest docs [CreateDBInstance](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion string `pulumi:"engineVersion"`
	// Set it to true to make some parameter efficient when modifying them. Default to false.
	ForceRestart *bool `pulumi:"forceRestart"`
	// The name of DB instance. It a string of 2 to 256 characters.
	InstanceName *string `pulumi:"instanceName"`
	// User-defined DB instance storage space. Value range: [5, 2000] for MySQL/SQL Server HA dual node edition. Increase progressively at a rate of 5 GB. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceStorage int `pulumi:"instanceStorage"`
	// DB Instance type. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceType string `pulumi:"instanceType"`
	// ID of the master instance.
	MasterDbInstanceId string `pulumi:"masterDbInstanceId"`
	// Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
	Parameters []ReadOnlyInstanceParameter `pulumi:"parameters"`
	// The ID of resource group which the DB read-only instance belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]interface{} `pulumi:"tags"`
	// The virtual switch ID to launch DB instances in one VPC.
	VswitchId *string `pulumi:"vswitchId"`
	// The Zone to launch the DB instance.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ReadOnlyInstance resource.
type ReadOnlyInstanceArgs struct {
	// Database version. Value options can refer to the latest docs [CreateDBInstance](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion pulumi.StringInput
	// Set it to true to make some parameter efficient when modifying them. Default to false.
	ForceRestart pulumi.BoolPtrInput
	// The name of DB instance. It a string of 2 to 256 characters.
	InstanceName pulumi.StringPtrInput
	// User-defined DB instance storage space. Value range: [5, 2000] for MySQL/SQL Server HA dual node edition. Increase progressively at a rate of 5 GB. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceStorage pulumi.IntInput
	// DB Instance type. For details, see [Instance type table](https://www.alibabacloud.com/help/doc-detail/26312.htm).
	InstanceType pulumi.StringInput
	// ID of the master instance.
	MasterDbInstanceId pulumi.StringInput
	// Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
	Parameters ReadOnlyInstanceParameterArrayInput
	// The ID of resource group which the DB read-only instance belongs.
	ResourceGroupId pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapInput
	// The virtual switch ID to launch DB instances in one VPC.
	VswitchId pulumi.StringPtrInput
	// The Zone to launch the DB instance.
	ZoneId pulumi.StringPtrInput
}

func (ReadOnlyInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*readOnlyInstanceArgs)(nil)).Elem()
}

type ReadOnlyInstanceInput interface {
	pulumi.Input

	ToReadOnlyInstanceOutput() ReadOnlyInstanceOutput
	ToReadOnlyInstanceOutputWithContext(ctx context.Context) ReadOnlyInstanceOutput
}

func (*ReadOnlyInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadOnlyInstance)(nil))
}

func (i *ReadOnlyInstance) ToReadOnlyInstanceOutput() ReadOnlyInstanceOutput {
	return i.ToReadOnlyInstanceOutputWithContext(context.Background())
}

func (i *ReadOnlyInstance) ToReadOnlyInstanceOutputWithContext(ctx context.Context) ReadOnlyInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstanceOutput)
}

func (i *ReadOnlyInstance) ToReadOnlyInstancePtrOutput() ReadOnlyInstancePtrOutput {
	return i.ToReadOnlyInstancePtrOutputWithContext(context.Background())
}

func (i *ReadOnlyInstance) ToReadOnlyInstancePtrOutputWithContext(ctx context.Context) ReadOnlyInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstancePtrOutput)
}

type ReadOnlyInstancePtrInput interface {
	pulumi.Input

	ToReadOnlyInstancePtrOutput() ReadOnlyInstancePtrOutput
	ToReadOnlyInstancePtrOutputWithContext(ctx context.Context) ReadOnlyInstancePtrOutput
}

type readOnlyInstancePtrType ReadOnlyInstanceArgs

func (*readOnlyInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadOnlyInstance)(nil))
}

func (i *readOnlyInstancePtrType) ToReadOnlyInstancePtrOutput() ReadOnlyInstancePtrOutput {
	return i.ToReadOnlyInstancePtrOutputWithContext(context.Background())
}

func (i *readOnlyInstancePtrType) ToReadOnlyInstancePtrOutputWithContext(ctx context.Context) ReadOnlyInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstancePtrOutput)
}

// ReadOnlyInstanceArrayInput is an input type that accepts ReadOnlyInstanceArray and ReadOnlyInstanceArrayOutput values.
// You can construct a concrete instance of `ReadOnlyInstanceArrayInput` via:
//
//          ReadOnlyInstanceArray{ ReadOnlyInstanceArgs{...} }
type ReadOnlyInstanceArrayInput interface {
	pulumi.Input

	ToReadOnlyInstanceArrayOutput() ReadOnlyInstanceArrayOutput
	ToReadOnlyInstanceArrayOutputWithContext(context.Context) ReadOnlyInstanceArrayOutput
}

type ReadOnlyInstanceArray []ReadOnlyInstanceInput

func (ReadOnlyInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*ReadOnlyInstance)(nil))
}

func (i ReadOnlyInstanceArray) ToReadOnlyInstanceArrayOutput() ReadOnlyInstanceArrayOutput {
	return i.ToReadOnlyInstanceArrayOutputWithContext(context.Background())
}

func (i ReadOnlyInstanceArray) ToReadOnlyInstanceArrayOutputWithContext(ctx context.Context) ReadOnlyInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstanceArrayOutput)
}

// ReadOnlyInstanceMapInput is an input type that accepts ReadOnlyInstanceMap and ReadOnlyInstanceMapOutput values.
// You can construct a concrete instance of `ReadOnlyInstanceMapInput` via:
//
//          ReadOnlyInstanceMap{ "key": ReadOnlyInstanceArgs{...} }
type ReadOnlyInstanceMapInput interface {
	pulumi.Input

	ToReadOnlyInstanceMapOutput() ReadOnlyInstanceMapOutput
	ToReadOnlyInstanceMapOutputWithContext(context.Context) ReadOnlyInstanceMapOutput
}

type ReadOnlyInstanceMap map[string]ReadOnlyInstanceInput

func (ReadOnlyInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*ReadOnlyInstance)(nil))
}

func (i ReadOnlyInstanceMap) ToReadOnlyInstanceMapOutput() ReadOnlyInstanceMapOutput {
	return i.ToReadOnlyInstanceMapOutputWithContext(context.Background())
}

func (i ReadOnlyInstanceMap) ToReadOnlyInstanceMapOutputWithContext(ctx context.Context) ReadOnlyInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstanceMapOutput)
}

type ReadOnlyInstanceOutput struct {
	*pulumi.OutputState
}

func (ReadOnlyInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadOnlyInstance)(nil))
}

func (o ReadOnlyInstanceOutput) ToReadOnlyInstanceOutput() ReadOnlyInstanceOutput {
	return o
}

func (o ReadOnlyInstanceOutput) ToReadOnlyInstanceOutputWithContext(ctx context.Context) ReadOnlyInstanceOutput {
	return o
}

func (o ReadOnlyInstanceOutput) ToReadOnlyInstancePtrOutput() ReadOnlyInstancePtrOutput {
	return o.ToReadOnlyInstancePtrOutputWithContext(context.Background())
}

func (o ReadOnlyInstanceOutput) ToReadOnlyInstancePtrOutputWithContext(ctx context.Context) ReadOnlyInstancePtrOutput {
	return o.ApplyT(func(v ReadOnlyInstance) *ReadOnlyInstance {
		return &v
	}).(ReadOnlyInstancePtrOutput)
}

type ReadOnlyInstancePtrOutput struct {
	*pulumi.OutputState
}

func (ReadOnlyInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadOnlyInstance)(nil))
}

func (o ReadOnlyInstancePtrOutput) ToReadOnlyInstancePtrOutput() ReadOnlyInstancePtrOutput {
	return o
}

func (o ReadOnlyInstancePtrOutput) ToReadOnlyInstancePtrOutputWithContext(ctx context.Context) ReadOnlyInstancePtrOutput {
	return o
}

type ReadOnlyInstanceArrayOutput struct{ *pulumi.OutputState }

func (ReadOnlyInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadOnlyInstance)(nil))
}

func (o ReadOnlyInstanceArrayOutput) ToReadOnlyInstanceArrayOutput() ReadOnlyInstanceArrayOutput {
	return o
}

func (o ReadOnlyInstanceArrayOutput) ToReadOnlyInstanceArrayOutputWithContext(ctx context.Context) ReadOnlyInstanceArrayOutput {
	return o
}

func (o ReadOnlyInstanceArrayOutput) Index(i pulumi.IntInput) ReadOnlyInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReadOnlyInstance {
		return vs[0].([]ReadOnlyInstance)[vs[1].(int)]
	}).(ReadOnlyInstanceOutput)
}

type ReadOnlyInstanceMapOutput struct{ *pulumi.OutputState }

func (ReadOnlyInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ReadOnlyInstance)(nil))
}

func (o ReadOnlyInstanceMapOutput) ToReadOnlyInstanceMapOutput() ReadOnlyInstanceMapOutput {
	return o
}

func (o ReadOnlyInstanceMapOutput) ToReadOnlyInstanceMapOutputWithContext(ctx context.Context) ReadOnlyInstanceMapOutput {
	return o
}

func (o ReadOnlyInstanceMapOutput) MapIndex(k pulumi.StringInput) ReadOnlyInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ReadOnlyInstance {
		return vs[0].(map[string]ReadOnlyInstance)[vs[1].(string)]
	}).(ReadOnlyInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(ReadOnlyInstanceOutput{})
	pulumi.RegisterOutputType(ReadOnlyInstancePtrOutput{})
	pulumi.RegisterOutputType(ReadOnlyInstanceArrayOutput{})
	pulumi.RegisterOutputType(ReadOnlyInstanceMapOutput{})
}
