// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a RDS Account resource.
//
// For information about RDS Account and how to use it, see [What is Account](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/api-rds-2014-08-15-createaccount).
//
// > **NOTE:** Available since v1.120.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/rds"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := rds.GetZones(ctx, &rds.GetZonesArgs{
//				Engine:        pulumi.StringRef("MySQL"),
//				EngineVersion: pulumi.StringRef("5.6"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetInstanceClasses, err := rds.GetInstanceClasses(ctx, &rds.GetInstanceClassesArgs{
//				ZoneId:        pulumi.StringRef(_default.Ids[0]),
//				Engine:        pulumi.StringRef("MySQL"),
//				EngineVersion: pulumi.StringRef("5.6"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("172.16.0.0/24"),
//				ZoneId:      pulumi.String(_default.Ids[0]),
//				VswitchName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultInstance, err := rds.NewInstance(ctx, "default", &rds.InstanceArgs{
//				Engine:          pulumi.String("MySQL"),
//				EngineVersion:   pulumi.String("5.6"),
//				InstanceType:    pulumi.String(defaultGetInstanceClasses.InstanceClasses[1].InstanceClass),
//				InstanceStorage: pulumi.Int(10),
//				VswitchId:       defaultSwitch.ID(),
//				InstanceName:    pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = rds.NewRdsAccount(ctx, "default", &rds.RdsAccountArgs{
//				DbInstanceId:    defaultInstance.ID(),
//				AccountName:     pulumi.String(name),
//				AccountPassword: pulumi.String("Example1234"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RDS Account can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:rds/rdsAccount:RdsAccount example <db_instance_id>:<account_name>
// ```
type RdsAccount struct {
	pulumi.CustomResourceState

	// The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
	//
	// > **NOTE:** The name cannot start with http:// or https://.
	AccountDescription pulumi.StringOutput `pulumi:"accountDescription"`
	// The name of the database account.
	// * The name must be unique.
	// * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
	// * The name must start with a letter and end with a letter or digit.
	// * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
	// * The length of the value must meet the following requirements:
	// * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
	// * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
	// * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
	// * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
	// * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
	// * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
	// * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// The password of the account.
	// * The value must be 8 to 32 characters in length.
	// * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
	// * Special characters include ! @ # $ % ^ & * ( ) _ + - =
	AccountPassword pulumi.StringOutput `pulumi:"accountPassword"`
	// The account type. Valid values:
	// * Normal: standard account (default).
	// * Super: privileged account.
	// * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
	//
	// > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountType pulumi.StringOutput `pulumi:"accountType"`
	// The ID of the instance.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
	//
	// Deprecated: Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
	Description pulumi.StringOutput `pulumi:"description"`
	// The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
	//
	// Deprecated: Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
	KmsEncryptedPassword pulumi.StringPtrOutput `pulumi:"kmsEncryptedPassword"`
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext pulumi.StringMapOutput `pulumi:"kmsEncryptionContext"`
	// The attribute has been deprecated from 1.120.0 and using `accountName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
	//
	// Deprecated: Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
	Password pulumi.StringOutput `pulumi:"password"`
	// Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
	ResetPermissionFlag pulumi.BoolPtrOutput `pulumi:"resetPermissionFlag"`
	// The status of the resource. Valid values: `Available`, `Unavailable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// The attribute has been deprecated from 1.120.0 and using `accountType` instead.
	//
	// > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
	//
	// Deprecated: Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRdsAccount registers a new resource with the given unique name, arguments, and options.
func NewRdsAccount(ctx *pulumi.Context,
	name string, args *RdsAccountArgs, opts ...pulumi.ResourceOption) (*RdsAccount, error) {
	if args == nil {
		args = &RdsAccountArgs{}
	}

	if args.AccountPassword != nil {
		args.AccountPassword = pulumi.ToSecret(args.AccountPassword).(pulumi.StringPtrInput)
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accountPassword",
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RdsAccount
	err := ctx.RegisterResource("alicloud:rds/rdsAccount:RdsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsAccount gets an existing RdsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsAccountState, opts ...pulumi.ResourceOption) (*RdsAccount, error) {
	var resource RdsAccount
	err := ctx.ReadResource("alicloud:rds/rdsAccount:RdsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsAccount resources.
type rdsAccountState struct {
	// The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
	//
	// > **NOTE:** The name cannot start with http:// or https://.
	AccountDescription *string `pulumi:"accountDescription"`
	// The name of the database account.
	// * The name must be unique.
	// * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
	// * The name must start with a letter and end with a letter or digit.
	// * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
	// * The length of the value must meet the following requirements:
	// * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
	// * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
	// * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
	// * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
	// * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
	// * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
	// * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountName *string `pulumi:"accountName"`
	// The password of the account.
	// * The value must be 8 to 32 characters in length.
	// * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
	// * Special characters include ! @ # $ % ^ & * ( ) _ + - =
	AccountPassword *string `pulumi:"accountPassword"`
	// The account type. Valid values:
	// * Normal: standard account (default).
	// * Super: privileged account.
	// * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
	//
	// > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountType *string `pulumi:"accountType"`
	// The ID of the instance.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
	//
	// Deprecated: Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
	Description *string `pulumi:"description"`
	// The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
	//
	// Deprecated: Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
	InstanceId *string `pulumi:"instanceId"`
	// An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
	KmsEncryptedPassword *string `pulumi:"kmsEncryptedPassword"`
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext map[string]string `pulumi:"kmsEncryptionContext"`
	// The attribute has been deprecated from 1.120.0 and using `accountName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
	Name *string `pulumi:"name"`
	// The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
	//
	// Deprecated: Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
	Password *string `pulumi:"password"`
	// Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
	ResetPermissionFlag *bool `pulumi:"resetPermissionFlag"`
	// The status of the resource. Valid values: `Available`, `Unavailable`.
	Status *string `pulumi:"status"`
	// The attribute has been deprecated from 1.120.0 and using `accountType` instead.
	//
	// > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
	//
	// Deprecated: Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
	Type *string `pulumi:"type"`
}

type RdsAccountState struct {
	// The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
	//
	// > **NOTE:** The name cannot start with http:// or https://.
	AccountDescription pulumi.StringPtrInput
	// The name of the database account.
	// * The name must be unique.
	// * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
	// * The name must start with a letter and end with a letter or digit.
	// * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
	// * The length of the value must meet the following requirements:
	// * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
	// * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
	// * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
	// * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
	// * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
	// * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
	// * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountName pulumi.StringPtrInput
	// The password of the account.
	// * The value must be 8 to 32 characters in length.
	// * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
	// * Special characters include ! @ # $ % ^ & * ( ) _ + - =
	AccountPassword pulumi.StringPtrInput
	// The account type. Valid values:
	// * Normal: standard account (default).
	// * Super: privileged account.
	// * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
	//
	// > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountType pulumi.StringPtrInput
	// The ID of the instance.
	DbInstanceId pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
	//
	// Deprecated: Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
	Description pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
	//
	// Deprecated: Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
	InstanceId pulumi.StringPtrInput
	// An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
	KmsEncryptedPassword pulumi.StringPtrInput
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext pulumi.StringMapInput
	// The attribute has been deprecated from 1.120.0 and using `accountName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
	Name pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
	//
	// Deprecated: Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
	Password pulumi.StringPtrInput
	// Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
	ResetPermissionFlag pulumi.BoolPtrInput
	// The status of the resource. Valid values: `Available`, `Unavailable`.
	Status pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `accountType` instead.
	//
	// > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
	//
	// Deprecated: Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
	Type pulumi.StringPtrInput
}

func (RdsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsAccountState)(nil)).Elem()
}

type rdsAccountArgs struct {
	// The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
	//
	// > **NOTE:** The name cannot start with http:// or https://.
	AccountDescription *string `pulumi:"accountDescription"`
	// The name of the database account.
	// * The name must be unique.
	// * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
	// * The name must start with a letter and end with a letter or digit.
	// * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
	// * The length of the value must meet the following requirements:
	// * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
	// * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
	// * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
	// * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
	// * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
	// * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
	// * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountName *string `pulumi:"accountName"`
	// The password of the account.
	// * The value must be 8 to 32 characters in length.
	// * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
	// * Special characters include ! @ # $ % ^ & * ( ) _ + - =
	AccountPassword *string `pulumi:"accountPassword"`
	// The account type. Valid values:
	// * Normal: standard account (default).
	// * Super: privileged account.
	// * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
	//
	// > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountType *string `pulumi:"accountType"`
	// The ID of the instance.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
	//
	// Deprecated: Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
	Description *string `pulumi:"description"`
	// The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
	//
	// Deprecated: Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
	InstanceId *string `pulumi:"instanceId"`
	// An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
	KmsEncryptedPassword *string `pulumi:"kmsEncryptedPassword"`
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext map[string]string `pulumi:"kmsEncryptionContext"`
	// The attribute has been deprecated from 1.120.0 and using `accountName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
	Name *string `pulumi:"name"`
	// The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
	//
	// Deprecated: Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
	Password *string `pulumi:"password"`
	// Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
	ResetPermissionFlag *bool `pulumi:"resetPermissionFlag"`
	// The attribute has been deprecated from 1.120.0 and using `accountType` instead.
	//
	// > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
	//
	// Deprecated: Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a RdsAccount resource.
type RdsAccountArgs struct {
	// The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
	//
	// > **NOTE:** The name cannot start with http:// or https://.
	AccountDescription pulumi.StringPtrInput
	// The name of the database account.
	// * The name must be unique.
	// * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
	// * The name must start with a letter and end with a letter or digit.
	// * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
	// * The length of the value must meet the following requirements:
	// * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
	// * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
	// * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
	// * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
	// * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
	// * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
	// * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountName pulumi.StringPtrInput
	// The password of the account.
	// * The value must be 8 to 32 characters in length.
	// * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
	// * Special characters include ! @ # $ % ^ & * ( ) _ + - =
	AccountPassword pulumi.StringPtrInput
	// The account type. Valid values:
	// * Normal: standard account (default).
	// * Super: privileged account.
	// * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
	//
	// > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
	AccountType pulumi.StringPtrInput
	// The ID of the instance.
	DbInstanceId pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
	//
	// Deprecated: Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
	Description pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
	//
	// Deprecated: Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
	InstanceId pulumi.StringPtrInput
	// An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
	KmsEncryptedPassword pulumi.StringPtrInput
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext pulumi.StringMapInput
	// The attribute has been deprecated from 1.120.0 and using `accountName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
	Name pulumi.StringPtrInput
	// The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
	//
	// Deprecated: Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
	Password pulumi.StringPtrInput
	// Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
	ResetPermissionFlag pulumi.BoolPtrInput
	// The attribute has been deprecated from 1.120.0 and using `accountType` instead.
	//
	// > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
	//
	// Deprecated: Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
	Type pulumi.StringPtrInput
}

func (RdsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsAccountArgs)(nil)).Elem()
}

type RdsAccountInput interface {
	pulumi.Input

	ToRdsAccountOutput() RdsAccountOutput
	ToRdsAccountOutputWithContext(ctx context.Context) RdsAccountOutput
}

func (*RdsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsAccount)(nil)).Elem()
}

func (i *RdsAccount) ToRdsAccountOutput() RdsAccountOutput {
	return i.ToRdsAccountOutputWithContext(context.Background())
}

func (i *RdsAccount) ToRdsAccountOutputWithContext(ctx context.Context) RdsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsAccountOutput)
}

// RdsAccountArrayInput is an input type that accepts RdsAccountArray and RdsAccountArrayOutput values.
// You can construct a concrete instance of `RdsAccountArrayInput` via:
//
//	RdsAccountArray{ RdsAccountArgs{...} }
type RdsAccountArrayInput interface {
	pulumi.Input

	ToRdsAccountArrayOutput() RdsAccountArrayOutput
	ToRdsAccountArrayOutputWithContext(context.Context) RdsAccountArrayOutput
}

type RdsAccountArray []RdsAccountInput

func (RdsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsAccount)(nil)).Elem()
}

func (i RdsAccountArray) ToRdsAccountArrayOutput() RdsAccountArrayOutput {
	return i.ToRdsAccountArrayOutputWithContext(context.Background())
}

func (i RdsAccountArray) ToRdsAccountArrayOutputWithContext(ctx context.Context) RdsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsAccountArrayOutput)
}

// RdsAccountMapInput is an input type that accepts RdsAccountMap and RdsAccountMapOutput values.
// You can construct a concrete instance of `RdsAccountMapInput` via:
//
//	RdsAccountMap{ "key": RdsAccountArgs{...} }
type RdsAccountMapInput interface {
	pulumi.Input

	ToRdsAccountMapOutput() RdsAccountMapOutput
	ToRdsAccountMapOutputWithContext(context.Context) RdsAccountMapOutput
}

type RdsAccountMap map[string]RdsAccountInput

func (RdsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsAccount)(nil)).Elem()
}

func (i RdsAccountMap) ToRdsAccountMapOutput() RdsAccountMapOutput {
	return i.ToRdsAccountMapOutputWithContext(context.Background())
}

func (i RdsAccountMap) ToRdsAccountMapOutputWithContext(ctx context.Context) RdsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsAccountMapOutput)
}

type RdsAccountOutput struct{ *pulumi.OutputState }

func (RdsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdsAccount)(nil)).Elem()
}

func (o RdsAccountOutput) ToRdsAccountOutput() RdsAccountOutput {
	return o
}

func (o RdsAccountOutput) ToRdsAccountOutputWithContext(ctx context.Context) RdsAccountOutput {
	return o
}

// The description of the account. The value must be 2 to 256 characters in length. The value can contain letters, digits, underscores (_), and hyphens (-), and must start with a letter.
//
// > **NOTE:** The name cannot start with http:// or https://.
func (o RdsAccountOutput) AccountDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.AccountDescription }).(pulumi.StringOutput)
}

// The name of the database account.
// * The name must be unique.
// * The name can contain lowercase letters, digits, and underscores (_). For MySQL databases, the name can contain uppercase letters.
// * The name must start with a letter and end with a letter or digit.
// * For MySQL databases, the name of the privileged account cannot be the same as that of the standard account. For example, if the name of the privileged account is Test1, the name of the standard account cannot be test1.
// * The length of the value must meet the following requirements:
// * If the instance runs MySQL 5.7 or MySQL 8.0, the value must be 2 to 32 characters in length.
// * If the instance runs MySQL 5.6, the value must be 2 to 16 characters in length.
// * If the instance runs SQL Server, the value must be 2 to 64 characters in length.
// * If the instance runs PostgreSQL with cloud disks, the value must be 2 to 63 characters in length.
// * If the instance runs PostgreSQL with local disks, the value must be 2 to 16 characters in length.
// * If the instance runs MariaDB, the value must be 2 to 16 characters in length.
// * For more information about invalid characters, See [Forbidden keywords](https://help.aliyun.com/zh/rds/developer-reference/forbidden-keywords?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
func (o RdsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// The password of the account.
// * The value must be 8 to 32 characters in length.
// * The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters.
// * Special characters include ! @ # $ % ^ & * ( ) _ + - =
func (o RdsAccountOutput) AccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.AccountPassword }).(pulumi.StringOutput)
}

// The account type. Valid values:
// * Normal: standard account (default).
// * Super: privileged account.
// * Sysadmin: system admin account. The account type is available only for ApsaraDB RDS for SQL Server instances.
//
// > **NOTE:** Before you create a system admin account, check whether the RDS instance meets all prerequisites. For more information, See [Create a system admin account](https://help.aliyun.com/zh/rds/apsaradb-rds-for-sql-server/create-a-system-admin-account-for-an-apsaradb-rds-for-sql-server-instance?spm=api-workbench.API%20Document.0.0.529e2defHKoZ3o).
func (o RdsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.AccountType }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o RdsAccountOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The attribute has been deprecated from 1.120.0 and using `accountDescription` instead.
//
// Deprecated: Field 'description' has been deprecated from provider version 1.120.0. New field 'account_description' instead.
func (o RdsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The attribute has been deprecated from 1.120.0 and using `dbInstanceId` instead.
//
// Deprecated: Field 'instance_id' has been deprecated from provider version 1.120.0. New field 'db_instance_id' instead.
func (o RdsAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// An KMS encrypts password used to a db account. If the `accountPassword` is filled in, this field will be ignored.
func (o RdsAccountOutput) KmsEncryptedPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringPtrOutput { return v.KmsEncryptedPassword }).(pulumi.StringPtrOutput)
}

// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a db account with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
func (o RdsAccountOutput) KmsEncryptionContext() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringMapOutput { return v.KmsEncryptionContext }).(pulumi.StringMapOutput)
}

// The attribute has been deprecated from 1.120.0 and using `accountName` instead.
//
// Deprecated: Field 'name' has been deprecated from provider version 1.120.0. New field 'account_name' instead.
func (o RdsAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The attribute has been deprecated from 1.120.0 and using `accountPassword` instead.
//
// Deprecated: Field 'password' has been deprecated from provider version 1.120.0. New field 'account_password' instead.
func (o RdsAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Resets permissions flag of the privileged account. Default to `false`. Set it to `true` can resets permissions of the privileged account.
func (o RdsAccountOutput) ResetPermissionFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.BoolPtrOutput { return v.ResetPermissionFlag }).(pulumi.BoolPtrOutput)
}

// The status of the resource. Valid values: `Available`, `Unavailable`.
func (o RdsAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The attribute has been deprecated from 1.120.0 and using `accountType` instead.
//
// > **NOTE**: Only MySQL engine is supported resets permissions of the privileged account.
//
// Deprecated: Field 'type' has been deprecated from provider version 1.120.0. New field 'account_type' instead.
func (o RdsAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RdsAccount) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type RdsAccountArrayOutput struct{ *pulumi.OutputState }

func (RdsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RdsAccount)(nil)).Elem()
}

func (o RdsAccountArrayOutput) ToRdsAccountArrayOutput() RdsAccountArrayOutput {
	return o
}

func (o RdsAccountArrayOutput) ToRdsAccountArrayOutputWithContext(ctx context.Context) RdsAccountArrayOutput {
	return o
}

func (o RdsAccountArrayOutput) Index(i pulumi.IntInput) RdsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RdsAccount {
		return vs[0].([]*RdsAccount)[vs[1].(int)]
	}).(RdsAccountOutput)
}

type RdsAccountMapOutput struct{ *pulumi.OutputState }

func (RdsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RdsAccount)(nil)).Elem()
}

func (o RdsAccountMapOutput) ToRdsAccountMapOutput() RdsAccountMapOutput {
	return o
}

func (o RdsAccountMapOutput) ToRdsAccountMapOutputWithContext(ctx context.Context) RdsAccountMapOutput {
	return o
}

func (o RdsAccountMapOutput) MapIndex(k pulumi.StringInput) RdsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RdsAccount {
		return vs[0].(map[string]*RdsAccount)[vs[1].(string)]
	}).(RdsAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RdsAccountInput)(nil)).Elem(), &RdsAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsAccountArrayInput)(nil)).Elem(), RdsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RdsAccountMapInput)(nil)).Elem(), RdsAccountMap{})
	pulumi.RegisterOutputType(RdsAccountOutput{})
	pulumi.RegisterOutputType(RdsAccountArrayOutput{})
	pulumi.RegisterOutputType(RdsAccountMapOutput{})
}
