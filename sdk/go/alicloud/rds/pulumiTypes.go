// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type InstanceParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// InstanceParameterInput is an input type that accepts InstanceParameterArgs and InstanceParameterOutput values.
// You can construct a concrete instance of `InstanceParameterInput` via:
//
//          InstanceParameterArgs{...}
type InstanceParameterInput interface {
	pulumi.Input

	ToInstanceParameterOutput() InstanceParameterOutput
	ToInstanceParameterOutputWithContext(context.Context) InstanceParameterOutput
}

type InstanceParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParameter)(nil)).Elem()
}

func (i InstanceParameterArgs) ToInstanceParameterOutput() InstanceParameterOutput {
	return i.ToInstanceParameterOutputWithContext(context.Background())
}

func (i InstanceParameterArgs) ToInstanceParameterOutputWithContext(ctx context.Context) InstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParameterOutput)
}

// InstanceParameterArrayInput is an input type that accepts InstanceParameterArray and InstanceParameterArrayOutput values.
// You can construct a concrete instance of `InstanceParameterArrayInput` via:
//
//          InstanceParameterArray{ InstanceParameterArgs{...} }
type InstanceParameterArrayInput interface {
	pulumi.Input

	ToInstanceParameterArrayOutput() InstanceParameterArrayOutput
	ToInstanceParameterArrayOutputWithContext(context.Context) InstanceParameterArrayOutput
}

type InstanceParameterArray []InstanceParameterInput

func (InstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParameter)(nil)).Elem()
}

func (i InstanceParameterArray) ToInstanceParameterArrayOutput() InstanceParameterArrayOutput {
	return i.ToInstanceParameterArrayOutputWithContext(context.Background())
}

func (i InstanceParameterArray) ToInstanceParameterArrayOutputWithContext(ctx context.Context) InstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParameterArrayOutput)
}

type InstanceParameterOutput struct{ *pulumi.OutputState }

func (InstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParameter)(nil)).Elem()
}

func (o InstanceParameterOutput) ToInstanceParameterOutput() InstanceParameterOutput {
	return o
}

func (o InstanceParameterOutput) ToInstanceParameterOutputWithContext(ctx context.Context) InstanceParameterOutput {
	return o
}

func (o InstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (InstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParameter)(nil)).Elem()
}

func (o InstanceParameterArrayOutput) ToInstanceParameterArrayOutput() InstanceParameterArrayOutput {
	return o
}

func (o InstanceParameterArrayOutput) ToInstanceParameterArrayOutputWithContext(ctx context.Context) InstanceParameterArrayOutput {
	return o
}

func (o InstanceParameterArrayOutput) Index(i pulumi.IntInput) InstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceParameter {
		return vs[0].([]InstanceParameter)[vs[1].(int)]
	}).(InstanceParameterOutput)
}

type RdsParameterGroupParamDetail struct {
	// The name of a parameter.
	ParamName string `pulumi:"paramName"`
	// The value of a parameter.
	ParamValue string `pulumi:"paramValue"`
}

// RdsParameterGroupParamDetailInput is an input type that accepts RdsParameterGroupParamDetailArgs and RdsParameterGroupParamDetailOutput values.
// You can construct a concrete instance of `RdsParameterGroupParamDetailInput` via:
//
//          RdsParameterGroupParamDetailArgs{...}
type RdsParameterGroupParamDetailInput interface {
	pulumi.Input

	ToRdsParameterGroupParamDetailOutput() RdsParameterGroupParamDetailOutput
	ToRdsParameterGroupParamDetailOutputWithContext(context.Context) RdsParameterGroupParamDetailOutput
}

type RdsParameterGroupParamDetailArgs struct {
	// The name of a parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The value of a parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (RdsParameterGroupParamDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsParameterGroupParamDetail)(nil)).Elem()
}

func (i RdsParameterGroupParamDetailArgs) ToRdsParameterGroupParamDetailOutput() RdsParameterGroupParamDetailOutput {
	return i.ToRdsParameterGroupParamDetailOutputWithContext(context.Background())
}

func (i RdsParameterGroupParamDetailArgs) ToRdsParameterGroupParamDetailOutputWithContext(ctx context.Context) RdsParameterGroupParamDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParameterGroupParamDetailOutput)
}

// RdsParameterGroupParamDetailArrayInput is an input type that accepts RdsParameterGroupParamDetailArray and RdsParameterGroupParamDetailArrayOutput values.
// You can construct a concrete instance of `RdsParameterGroupParamDetailArrayInput` via:
//
//          RdsParameterGroupParamDetailArray{ RdsParameterGroupParamDetailArgs{...} }
type RdsParameterGroupParamDetailArrayInput interface {
	pulumi.Input

	ToRdsParameterGroupParamDetailArrayOutput() RdsParameterGroupParamDetailArrayOutput
	ToRdsParameterGroupParamDetailArrayOutputWithContext(context.Context) RdsParameterGroupParamDetailArrayOutput
}

type RdsParameterGroupParamDetailArray []RdsParameterGroupParamDetailInput

func (RdsParameterGroupParamDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsParameterGroupParamDetail)(nil)).Elem()
}

func (i RdsParameterGroupParamDetailArray) ToRdsParameterGroupParamDetailArrayOutput() RdsParameterGroupParamDetailArrayOutput {
	return i.ToRdsParameterGroupParamDetailArrayOutputWithContext(context.Background())
}

func (i RdsParameterGroupParamDetailArray) ToRdsParameterGroupParamDetailArrayOutputWithContext(ctx context.Context) RdsParameterGroupParamDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RdsParameterGroupParamDetailArrayOutput)
}

type RdsParameterGroupParamDetailOutput struct{ *pulumi.OutputState }

func (RdsParameterGroupParamDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdsParameterGroupParamDetail)(nil)).Elem()
}

func (o RdsParameterGroupParamDetailOutput) ToRdsParameterGroupParamDetailOutput() RdsParameterGroupParamDetailOutput {
	return o
}

func (o RdsParameterGroupParamDetailOutput) ToRdsParameterGroupParamDetailOutputWithContext(ctx context.Context) RdsParameterGroupParamDetailOutput {
	return o
}

// The name of a parameter.
func (o RdsParameterGroupParamDetailOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v RdsParameterGroupParamDetail) string { return v.ParamName }).(pulumi.StringOutput)
}

// The value of a parameter.
func (o RdsParameterGroupParamDetailOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v RdsParameterGroupParamDetail) string { return v.ParamValue }).(pulumi.StringOutput)
}

type RdsParameterGroupParamDetailArrayOutput struct{ *pulumi.OutputState }

func (RdsParameterGroupParamDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RdsParameterGroupParamDetail)(nil)).Elem()
}

func (o RdsParameterGroupParamDetailArrayOutput) ToRdsParameterGroupParamDetailArrayOutput() RdsParameterGroupParamDetailArrayOutput {
	return o
}

func (o RdsParameterGroupParamDetailArrayOutput) ToRdsParameterGroupParamDetailArrayOutputWithContext(ctx context.Context) RdsParameterGroupParamDetailArrayOutput {
	return o
}

func (o RdsParameterGroupParamDetailArrayOutput) Index(i pulumi.IntInput) RdsParameterGroupParamDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RdsParameterGroupParamDetail {
		return vs[0].([]RdsParameterGroupParamDetail)[vs[1].(int)]
	}).(RdsParameterGroupParamDetailOutput)
}

type ReadOnlyInstanceParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ReadOnlyInstanceParameterInput is an input type that accepts ReadOnlyInstanceParameterArgs and ReadOnlyInstanceParameterOutput values.
// You can construct a concrete instance of `ReadOnlyInstanceParameterInput` via:
//
//          ReadOnlyInstanceParameterArgs{...}
type ReadOnlyInstanceParameterInput interface {
	pulumi.Input

	ToReadOnlyInstanceParameterOutput() ReadOnlyInstanceParameterOutput
	ToReadOnlyInstanceParameterOutputWithContext(context.Context) ReadOnlyInstanceParameterOutput
}

type ReadOnlyInstanceParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ReadOnlyInstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadOnlyInstanceParameter)(nil)).Elem()
}

func (i ReadOnlyInstanceParameterArgs) ToReadOnlyInstanceParameterOutput() ReadOnlyInstanceParameterOutput {
	return i.ToReadOnlyInstanceParameterOutputWithContext(context.Background())
}

func (i ReadOnlyInstanceParameterArgs) ToReadOnlyInstanceParameterOutputWithContext(ctx context.Context) ReadOnlyInstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstanceParameterOutput)
}

// ReadOnlyInstanceParameterArrayInput is an input type that accepts ReadOnlyInstanceParameterArray and ReadOnlyInstanceParameterArrayOutput values.
// You can construct a concrete instance of `ReadOnlyInstanceParameterArrayInput` via:
//
//          ReadOnlyInstanceParameterArray{ ReadOnlyInstanceParameterArgs{...} }
type ReadOnlyInstanceParameterArrayInput interface {
	pulumi.Input

	ToReadOnlyInstanceParameterArrayOutput() ReadOnlyInstanceParameterArrayOutput
	ToReadOnlyInstanceParameterArrayOutputWithContext(context.Context) ReadOnlyInstanceParameterArrayOutput
}

type ReadOnlyInstanceParameterArray []ReadOnlyInstanceParameterInput

func (ReadOnlyInstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadOnlyInstanceParameter)(nil)).Elem()
}

func (i ReadOnlyInstanceParameterArray) ToReadOnlyInstanceParameterArrayOutput() ReadOnlyInstanceParameterArrayOutput {
	return i.ToReadOnlyInstanceParameterArrayOutputWithContext(context.Background())
}

func (i ReadOnlyInstanceParameterArray) ToReadOnlyInstanceParameterArrayOutputWithContext(ctx context.Context) ReadOnlyInstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadOnlyInstanceParameterArrayOutput)
}

type ReadOnlyInstanceParameterOutput struct{ *pulumi.OutputState }

func (ReadOnlyInstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadOnlyInstanceParameter)(nil)).Elem()
}

func (o ReadOnlyInstanceParameterOutput) ToReadOnlyInstanceParameterOutput() ReadOnlyInstanceParameterOutput {
	return o
}

func (o ReadOnlyInstanceParameterOutput) ToReadOnlyInstanceParameterOutputWithContext(ctx context.Context) ReadOnlyInstanceParameterOutput {
	return o
}

func (o ReadOnlyInstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReadOnlyInstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReadOnlyInstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ReadOnlyInstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ReadOnlyInstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (ReadOnlyInstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadOnlyInstanceParameter)(nil)).Elem()
}

func (o ReadOnlyInstanceParameterArrayOutput) ToReadOnlyInstanceParameterArrayOutput() ReadOnlyInstanceParameterArrayOutput {
	return o
}

func (o ReadOnlyInstanceParameterArrayOutput) ToReadOnlyInstanceParameterArrayOutputWithContext(ctx context.Context) ReadOnlyInstanceParameterArrayOutput {
	return o
}

func (o ReadOnlyInstanceParameterArrayOutput) Index(i pulumi.IntInput) ReadOnlyInstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReadOnlyInstanceParameter {
		return vs[0].([]ReadOnlyInstanceParameter)[vs[1].(int)]
	}).(ReadOnlyInstanceParameterOutput)
}

type GetAccountsAccount struct {
	// Database description.
	AccountDescription string `pulumi:"accountDescription"`
	// Name of database account.
	AccountName string `pulumi:"accountName"`
	// Privilege type of account.
	AccountType string `pulumi:"accountType"`
	// A list of database permissions the account has.
	DatabasePrivileges []GetAccountsAccountDatabasePrivilege `pulumi:"databasePrivileges"`
	// The ID of the Account.
	Id string `pulumi:"id"`
	// Whether the maximum number of databases managed by the account is exceeded.
	PrivExceeded string `pulumi:"privExceeded"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//          GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// Database description.
	AccountDescription pulumi.StringInput `pulumi:"accountDescription"`
	// Name of database account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Privilege type of account.
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// A list of database permissions the account has.
	DatabasePrivileges GetAccountsAccountDatabasePrivilegeArrayInput `pulumi:"databasePrivileges"`
	// The ID of the Account.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the maximum number of databases managed by the account is exceeded.
	PrivExceeded pulumi.StringInput `pulumi:"privExceeded"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//          GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// Database description.
func (o GetAccountsAccountOutput) AccountDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountDescription }).(pulumi.StringOutput)
}

// Name of database account.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// Privilege type of account.
func (o GetAccountsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountType }).(pulumi.StringOutput)
}

// A list of database permissions the account has.
func (o GetAccountsAccountOutput) DatabasePrivileges() GetAccountsAccountDatabasePrivilegeArrayOutput {
	return o.ApplyT(func(v GetAccountsAccount) []GetAccountsAccountDatabasePrivilege { return v.DatabasePrivileges }).(GetAccountsAccountDatabasePrivilegeArrayOutput)
}

// The ID of the Account.
func (o GetAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the maximum number of databases managed by the account is exceeded.
func (o GetAccountsAccountOutput) PrivExceeded() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.PrivExceeded }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetAccountsAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetAccountsAccountDatabasePrivilege struct {
	// The type of permission for the account.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The specific permissions corresponding to the type of account permissions.
	AccountPrivilegeDetail string `pulumi:"accountPrivilegeDetail"`
	// Database name.
	DbName string `pulumi:"dbName"`
}

// GetAccountsAccountDatabasePrivilegeInput is an input type that accepts GetAccountsAccountDatabasePrivilegeArgs and GetAccountsAccountDatabasePrivilegeOutput values.
// You can construct a concrete instance of `GetAccountsAccountDatabasePrivilegeInput` via:
//
//          GetAccountsAccountDatabasePrivilegeArgs{...}
type GetAccountsAccountDatabasePrivilegeInput interface {
	pulumi.Input

	ToGetAccountsAccountDatabasePrivilegeOutput() GetAccountsAccountDatabasePrivilegeOutput
	ToGetAccountsAccountDatabasePrivilegeOutputWithContext(context.Context) GetAccountsAccountDatabasePrivilegeOutput
}

type GetAccountsAccountDatabasePrivilegeArgs struct {
	// The type of permission for the account.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The specific permissions corresponding to the type of account permissions.
	AccountPrivilegeDetail pulumi.StringInput `pulumi:"accountPrivilegeDetail"`
	// Database name.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (GetAccountsAccountDatabasePrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (i GetAccountsAccountDatabasePrivilegeArgs) ToGetAccountsAccountDatabasePrivilegeOutput() GetAccountsAccountDatabasePrivilegeOutput {
	return i.ToGetAccountsAccountDatabasePrivilegeOutputWithContext(context.Background())
}

func (i GetAccountsAccountDatabasePrivilegeArgs) ToGetAccountsAccountDatabasePrivilegeOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountDatabasePrivilegeOutput)
}

// GetAccountsAccountDatabasePrivilegeArrayInput is an input type that accepts GetAccountsAccountDatabasePrivilegeArray and GetAccountsAccountDatabasePrivilegeArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountDatabasePrivilegeArrayInput` via:
//
//          GetAccountsAccountDatabasePrivilegeArray{ GetAccountsAccountDatabasePrivilegeArgs{...} }
type GetAccountsAccountDatabasePrivilegeArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountDatabasePrivilegeArrayOutput() GetAccountsAccountDatabasePrivilegeArrayOutput
	ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(context.Context) GetAccountsAccountDatabasePrivilegeArrayOutput
}

type GetAccountsAccountDatabasePrivilegeArray []GetAccountsAccountDatabasePrivilegeInput

func (GetAccountsAccountDatabasePrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (i GetAccountsAccountDatabasePrivilegeArray) ToGetAccountsAccountDatabasePrivilegeArrayOutput() GetAccountsAccountDatabasePrivilegeArrayOutput {
	return i.ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountDatabasePrivilegeArray) ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountDatabasePrivilegeArrayOutput)
}

type GetAccountsAccountDatabasePrivilegeOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountDatabasePrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (o GetAccountsAccountDatabasePrivilegeOutput) ToGetAccountsAccountDatabasePrivilegeOutput() GetAccountsAccountDatabasePrivilegeOutput {
	return o
}

func (o GetAccountsAccountDatabasePrivilegeOutput) ToGetAccountsAccountDatabasePrivilegeOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeOutput {
	return o
}

// The type of permission for the account.
func (o GetAccountsAccountDatabasePrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountDatabasePrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The specific permissions corresponding to the type of account permissions.
func (o GetAccountsAccountDatabasePrivilegeOutput) AccountPrivilegeDetail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountDatabasePrivilege) string { return v.AccountPrivilegeDetail }).(pulumi.StringOutput)
}

// Database name.
func (o GetAccountsAccountDatabasePrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountDatabasePrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type GetAccountsAccountDatabasePrivilegeArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountDatabasePrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (o GetAccountsAccountDatabasePrivilegeArrayOutput) ToGetAccountsAccountDatabasePrivilegeArrayOutput() GetAccountsAccountDatabasePrivilegeArrayOutput {
	return o
}

func (o GetAccountsAccountDatabasePrivilegeArrayOutput) ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeArrayOutput {
	return o
}

func (o GetAccountsAccountDatabasePrivilegeArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountDatabasePrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccountDatabasePrivilege {
		return vs[0].([]GetAccountsAccountDatabasePrivilege)[vs[1].(int)]
	}).(GetAccountsAccountDatabasePrivilegeOutput)
}

type GetInstanceClassesInstanceClass struct {
	// DB Instance available class.
	InstanceClass string `pulumi:"instanceClass"`
	Price         string `pulumi:"price"`
	// DB Instance available storage range.
	StorageRange GetInstanceClassesInstanceClassStorageRange `pulumi:"storageRange"`
	// A list of Zone to launch the DB instance.
	ZoneIds []GetInstanceClassesInstanceClassZoneId `pulumi:"zoneIds"`
}

// GetInstanceClassesInstanceClassInput is an input type that accepts GetInstanceClassesInstanceClassArgs and GetInstanceClassesInstanceClassOutput values.
// You can construct a concrete instance of `GetInstanceClassesInstanceClassInput` via:
//
//          GetInstanceClassesInstanceClassArgs{...}
type GetInstanceClassesInstanceClassInput interface {
	pulumi.Input

	ToGetInstanceClassesInstanceClassOutput() GetInstanceClassesInstanceClassOutput
	ToGetInstanceClassesInstanceClassOutputWithContext(context.Context) GetInstanceClassesInstanceClassOutput
}

type GetInstanceClassesInstanceClassArgs struct {
	// DB Instance available class.
	InstanceClass pulumi.StringInput `pulumi:"instanceClass"`
	Price         pulumi.StringInput `pulumi:"price"`
	// DB Instance available storage range.
	StorageRange GetInstanceClassesInstanceClassStorageRangeInput `pulumi:"storageRange"`
	// A list of Zone to launch the DB instance.
	ZoneIds GetInstanceClassesInstanceClassZoneIdArrayInput `pulumi:"zoneIds"`
}

func (GetInstanceClassesInstanceClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceClassesInstanceClass)(nil)).Elem()
}

func (i GetInstanceClassesInstanceClassArgs) ToGetInstanceClassesInstanceClassOutput() GetInstanceClassesInstanceClassOutput {
	return i.ToGetInstanceClassesInstanceClassOutputWithContext(context.Background())
}

func (i GetInstanceClassesInstanceClassArgs) ToGetInstanceClassesInstanceClassOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClassesInstanceClassOutput)
}

// GetInstanceClassesInstanceClassArrayInput is an input type that accepts GetInstanceClassesInstanceClassArray and GetInstanceClassesInstanceClassArrayOutput values.
// You can construct a concrete instance of `GetInstanceClassesInstanceClassArrayInput` via:
//
//          GetInstanceClassesInstanceClassArray{ GetInstanceClassesInstanceClassArgs{...} }
type GetInstanceClassesInstanceClassArrayInput interface {
	pulumi.Input

	ToGetInstanceClassesInstanceClassArrayOutput() GetInstanceClassesInstanceClassArrayOutput
	ToGetInstanceClassesInstanceClassArrayOutputWithContext(context.Context) GetInstanceClassesInstanceClassArrayOutput
}

type GetInstanceClassesInstanceClassArray []GetInstanceClassesInstanceClassInput

func (GetInstanceClassesInstanceClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceClassesInstanceClass)(nil)).Elem()
}

func (i GetInstanceClassesInstanceClassArray) ToGetInstanceClassesInstanceClassArrayOutput() GetInstanceClassesInstanceClassArrayOutput {
	return i.ToGetInstanceClassesInstanceClassArrayOutputWithContext(context.Background())
}

func (i GetInstanceClassesInstanceClassArray) ToGetInstanceClassesInstanceClassArrayOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClassesInstanceClassArrayOutput)
}

type GetInstanceClassesInstanceClassOutput struct{ *pulumi.OutputState }

func (GetInstanceClassesInstanceClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceClassesInstanceClass)(nil)).Elem()
}

func (o GetInstanceClassesInstanceClassOutput) ToGetInstanceClassesInstanceClassOutput() GetInstanceClassesInstanceClassOutput {
	return o
}

func (o GetInstanceClassesInstanceClassOutput) ToGetInstanceClassesInstanceClassOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassOutput {
	return o
}

// DB Instance available class.
func (o GetInstanceClassesInstanceClassOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClass) string { return v.InstanceClass }).(pulumi.StringOutput)
}

func (o GetInstanceClassesInstanceClassOutput) Price() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClass) string { return v.Price }).(pulumi.StringOutput)
}

// DB Instance available storage range.
func (o GetInstanceClassesInstanceClassOutput) StorageRange() GetInstanceClassesInstanceClassStorageRangeOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClass) GetInstanceClassesInstanceClassStorageRange {
		return v.StorageRange
	}).(GetInstanceClassesInstanceClassStorageRangeOutput)
}

// A list of Zone to launch the DB instance.
func (o GetInstanceClassesInstanceClassOutput) ZoneIds() GetInstanceClassesInstanceClassZoneIdArrayOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClass) []GetInstanceClassesInstanceClassZoneId { return v.ZoneIds }).(GetInstanceClassesInstanceClassZoneIdArrayOutput)
}

type GetInstanceClassesInstanceClassArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceClassesInstanceClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceClassesInstanceClass)(nil)).Elem()
}

func (o GetInstanceClassesInstanceClassArrayOutput) ToGetInstanceClassesInstanceClassArrayOutput() GetInstanceClassesInstanceClassArrayOutput {
	return o
}

func (o GetInstanceClassesInstanceClassArrayOutput) ToGetInstanceClassesInstanceClassArrayOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassArrayOutput {
	return o
}

func (o GetInstanceClassesInstanceClassArrayOutput) Index(i pulumi.IntInput) GetInstanceClassesInstanceClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceClassesInstanceClass {
		return vs[0].([]GetInstanceClassesInstanceClass)[vs[1].(int)]
	}).(GetInstanceClassesInstanceClassOutput)
}

type GetInstanceClassesInstanceClassStorageRange struct {
	// DB Instance available storage max value.
	Max string `pulumi:"max"`
	// DB Instance available storage min value.
	Min string `pulumi:"min"`
	// DB Instance available storage increase step.
	Step string `pulumi:"step"`
}

// GetInstanceClassesInstanceClassStorageRangeInput is an input type that accepts GetInstanceClassesInstanceClassStorageRangeArgs and GetInstanceClassesInstanceClassStorageRangeOutput values.
// You can construct a concrete instance of `GetInstanceClassesInstanceClassStorageRangeInput` via:
//
//          GetInstanceClassesInstanceClassStorageRangeArgs{...}
type GetInstanceClassesInstanceClassStorageRangeInput interface {
	pulumi.Input

	ToGetInstanceClassesInstanceClassStorageRangeOutput() GetInstanceClassesInstanceClassStorageRangeOutput
	ToGetInstanceClassesInstanceClassStorageRangeOutputWithContext(context.Context) GetInstanceClassesInstanceClassStorageRangeOutput
}

type GetInstanceClassesInstanceClassStorageRangeArgs struct {
	// DB Instance available storage max value.
	Max pulumi.StringInput `pulumi:"max"`
	// DB Instance available storage min value.
	Min pulumi.StringInput `pulumi:"min"`
	// DB Instance available storage increase step.
	Step pulumi.StringInput `pulumi:"step"`
}

func (GetInstanceClassesInstanceClassStorageRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceClassesInstanceClassStorageRange)(nil)).Elem()
}

func (i GetInstanceClassesInstanceClassStorageRangeArgs) ToGetInstanceClassesInstanceClassStorageRangeOutput() GetInstanceClassesInstanceClassStorageRangeOutput {
	return i.ToGetInstanceClassesInstanceClassStorageRangeOutputWithContext(context.Background())
}

func (i GetInstanceClassesInstanceClassStorageRangeArgs) ToGetInstanceClassesInstanceClassStorageRangeOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassStorageRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClassesInstanceClassStorageRangeOutput)
}

type GetInstanceClassesInstanceClassStorageRangeOutput struct{ *pulumi.OutputState }

func (GetInstanceClassesInstanceClassStorageRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceClassesInstanceClassStorageRange)(nil)).Elem()
}

func (o GetInstanceClassesInstanceClassStorageRangeOutput) ToGetInstanceClassesInstanceClassStorageRangeOutput() GetInstanceClassesInstanceClassStorageRangeOutput {
	return o
}

func (o GetInstanceClassesInstanceClassStorageRangeOutput) ToGetInstanceClassesInstanceClassStorageRangeOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassStorageRangeOutput {
	return o
}

// DB Instance available storage max value.
func (o GetInstanceClassesInstanceClassStorageRangeOutput) Max() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClassStorageRange) string { return v.Max }).(pulumi.StringOutput)
}

// DB Instance available storage min value.
func (o GetInstanceClassesInstanceClassStorageRangeOutput) Min() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClassStorageRange) string { return v.Min }).(pulumi.StringOutput)
}

// DB Instance available storage increase step.
func (o GetInstanceClassesInstanceClassStorageRangeOutput) Step() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClassStorageRange) string { return v.Step }).(pulumi.StringOutput)
}

type GetInstanceClassesInstanceClassZoneId struct {
	// The Zone to launch the DB instance
	Id string `pulumi:"id"`
	// A list of sub zone ids which in the id - e.g If `id` is `cn-beijing-MAZ5(a,b)`, `subZoneIds` will be `["cn-beijing-a", "cn-beijing-b"]`.
	SubZoneIds []string `pulumi:"subZoneIds"`
}

// GetInstanceClassesInstanceClassZoneIdInput is an input type that accepts GetInstanceClassesInstanceClassZoneIdArgs and GetInstanceClassesInstanceClassZoneIdOutput values.
// You can construct a concrete instance of `GetInstanceClassesInstanceClassZoneIdInput` via:
//
//          GetInstanceClassesInstanceClassZoneIdArgs{...}
type GetInstanceClassesInstanceClassZoneIdInput interface {
	pulumi.Input

	ToGetInstanceClassesInstanceClassZoneIdOutput() GetInstanceClassesInstanceClassZoneIdOutput
	ToGetInstanceClassesInstanceClassZoneIdOutputWithContext(context.Context) GetInstanceClassesInstanceClassZoneIdOutput
}

type GetInstanceClassesInstanceClassZoneIdArgs struct {
	// The Zone to launch the DB instance
	Id pulumi.StringInput `pulumi:"id"`
	// A list of sub zone ids which in the id - e.g If `id` is `cn-beijing-MAZ5(a,b)`, `subZoneIds` will be `["cn-beijing-a", "cn-beijing-b"]`.
	SubZoneIds pulumi.StringArrayInput `pulumi:"subZoneIds"`
}

func (GetInstanceClassesInstanceClassZoneIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceClassesInstanceClassZoneId)(nil)).Elem()
}

func (i GetInstanceClassesInstanceClassZoneIdArgs) ToGetInstanceClassesInstanceClassZoneIdOutput() GetInstanceClassesInstanceClassZoneIdOutput {
	return i.ToGetInstanceClassesInstanceClassZoneIdOutputWithContext(context.Background())
}

func (i GetInstanceClassesInstanceClassZoneIdArgs) ToGetInstanceClassesInstanceClassZoneIdOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassZoneIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClassesInstanceClassZoneIdOutput)
}

// GetInstanceClassesInstanceClassZoneIdArrayInput is an input type that accepts GetInstanceClassesInstanceClassZoneIdArray and GetInstanceClassesInstanceClassZoneIdArrayOutput values.
// You can construct a concrete instance of `GetInstanceClassesInstanceClassZoneIdArrayInput` via:
//
//          GetInstanceClassesInstanceClassZoneIdArray{ GetInstanceClassesInstanceClassZoneIdArgs{...} }
type GetInstanceClassesInstanceClassZoneIdArrayInput interface {
	pulumi.Input

	ToGetInstanceClassesInstanceClassZoneIdArrayOutput() GetInstanceClassesInstanceClassZoneIdArrayOutput
	ToGetInstanceClassesInstanceClassZoneIdArrayOutputWithContext(context.Context) GetInstanceClassesInstanceClassZoneIdArrayOutput
}

type GetInstanceClassesInstanceClassZoneIdArray []GetInstanceClassesInstanceClassZoneIdInput

func (GetInstanceClassesInstanceClassZoneIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceClassesInstanceClassZoneId)(nil)).Elem()
}

func (i GetInstanceClassesInstanceClassZoneIdArray) ToGetInstanceClassesInstanceClassZoneIdArrayOutput() GetInstanceClassesInstanceClassZoneIdArrayOutput {
	return i.ToGetInstanceClassesInstanceClassZoneIdArrayOutputWithContext(context.Background())
}

func (i GetInstanceClassesInstanceClassZoneIdArray) ToGetInstanceClassesInstanceClassZoneIdArrayOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassZoneIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClassesInstanceClassZoneIdArrayOutput)
}

type GetInstanceClassesInstanceClassZoneIdOutput struct{ *pulumi.OutputState }

func (GetInstanceClassesInstanceClassZoneIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceClassesInstanceClassZoneId)(nil)).Elem()
}

func (o GetInstanceClassesInstanceClassZoneIdOutput) ToGetInstanceClassesInstanceClassZoneIdOutput() GetInstanceClassesInstanceClassZoneIdOutput {
	return o
}

func (o GetInstanceClassesInstanceClassZoneIdOutput) ToGetInstanceClassesInstanceClassZoneIdOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassZoneIdOutput {
	return o
}

// The Zone to launch the DB instance
func (o GetInstanceClassesInstanceClassZoneIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClassZoneId) string { return v.Id }).(pulumi.StringOutput)
}

// A list of sub zone ids which in the id - e.g If `id` is `cn-beijing-MAZ5(a,b)`, `subZoneIds` will be `["cn-beijing-a", "cn-beijing-b"]`.
func (o GetInstanceClassesInstanceClassZoneIdOutput) SubZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceClassesInstanceClassZoneId) []string { return v.SubZoneIds }).(pulumi.StringArrayOutput)
}

type GetInstanceClassesInstanceClassZoneIdArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceClassesInstanceClassZoneIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceClassesInstanceClassZoneId)(nil)).Elem()
}

func (o GetInstanceClassesInstanceClassZoneIdArrayOutput) ToGetInstanceClassesInstanceClassZoneIdArrayOutput() GetInstanceClassesInstanceClassZoneIdArrayOutput {
	return o
}

func (o GetInstanceClassesInstanceClassZoneIdArrayOutput) ToGetInstanceClassesInstanceClassZoneIdArrayOutputWithContext(ctx context.Context) GetInstanceClassesInstanceClassZoneIdArrayOutput {
	return o
}

func (o GetInstanceClassesInstanceClassZoneIdArrayOutput) Index(i pulumi.IntInput) GetInstanceClassesInstanceClassZoneIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceClassesInstanceClassZoneId {
		return vs[0].([]GetInstanceClassesInstanceClassZoneId)[vs[1].(int)]
	}).(GetInstanceClassesInstanceClassZoneIdOutput)
}

type GetInstanceEnginesInstanceEngine struct {
	// DB Instance category.
	Category string `pulumi:"category"`
	// Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL` and `PPAS`. If no value is specified, all types are returned.
	Engine string `pulumi:"engine"`
	// Database version required by the user. Value options can refer to the latest docs [detail info](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion string `pulumi:"engineVersion"`
	// A list of Zone to launch the DB instance.
	ZoneIds []GetInstanceEnginesInstanceEngineZoneId `pulumi:"zoneIds"`
}

// GetInstanceEnginesInstanceEngineInput is an input type that accepts GetInstanceEnginesInstanceEngineArgs and GetInstanceEnginesInstanceEngineOutput values.
// You can construct a concrete instance of `GetInstanceEnginesInstanceEngineInput` via:
//
//          GetInstanceEnginesInstanceEngineArgs{...}
type GetInstanceEnginesInstanceEngineInput interface {
	pulumi.Input

	ToGetInstanceEnginesInstanceEngineOutput() GetInstanceEnginesInstanceEngineOutput
	ToGetInstanceEnginesInstanceEngineOutputWithContext(context.Context) GetInstanceEnginesInstanceEngineOutput
}

type GetInstanceEnginesInstanceEngineArgs struct {
	// DB Instance category.
	Category pulumi.StringInput `pulumi:"category"`
	// Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL` and `PPAS`. If no value is specified, all types are returned.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Database version required by the user. Value options can refer to the latest docs [detail info](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// A list of Zone to launch the DB instance.
	ZoneIds GetInstanceEnginesInstanceEngineZoneIdArrayInput `pulumi:"zoneIds"`
}

func (GetInstanceEnginesInstanceEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnginesInstanceEngine)(nil)).Elem()
}

func (i GetInstanceEnginesInstanceEngineArgs) ToGetInstanceEnginesInstanceEngineOutput() GetInstanceEnginesInstanceEngineOutput {
	return i.ToGetInstanceEnginesInstanceEngineOutputWithContext(context.Background())
}

func (i GetInstanceEnginesInstanceEngineArgs) ToGetInstanceEnginesInstanceEngineOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnginesInstanceEngineOutput)
}

// GetInstanceEnginesInstanceEngineArrayInput is an input type that accepts GetInstanceEnginesInstanceEngineArray and GetInstanceEnginesInstanceEngineArrayOutput values.
// You can construct a concrete instance of `GetInstanceEnginesInstanceEngineArrayInput` via:
//
//          GetInstanceEnginesInstanceEngineArray{ GetInstanceEnginesInstanceEngineArgs{...} }
type GetInstanceEnginesInstanceEngineArrayInput interface {
	pulumi.Input

	ToGetInstanceEnginesInstanceEngineArrayOutput() GetInstanceEnginesInstanceEngineArrayOutput
	ToGetInstanceEnginesInstanceEngineArrayOutputWithContext(context.Context) GetInstanceEnginesInstanceEngineArrayOutput
}

type GetInstanceEnginesInstanceEngineArray []GetInstanceEnginesInstanceEngineInput

func (GetInstanceEnginesInstanceEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnginesInstanceEngine)(nil)).Elem()
}

func (i GetInstanceEnginesInstanceEngineArray) ToGetInstanceEnginesInstanceEngineArrayOutput() GetInstanceEnginesInstanceEngineArrayOutput {
	return i.ToGetInstanceEnginesInstanceEngineArrayOutputWithContext(context.Background())
}

func (i GetInstanceEnginesInstanceEngineArray) ToGetInstanceEnginesInstanceEngineArrayOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnginesInstanceEngineArrayOutput)
}

type GetInstanceEnginesInstanceEngineOutput struct{ *pulumi.OutputState }

func (GetInstanceEnginesInstanceEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnginesInstanceEngine)(nil)).Elem()
}

func (o GetInstanceEnginesInstanceEngineOutput) ToGetInstanceEnginesInstanceEngineOutput() GetInstanceEnginesInstanceEngineOutput {
	return o
}

func (o GetInstanceEnginesInstanceEngineOutput) ToGetInstanceEnginesInstanceEngineOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineOutput {
	return o
}

// DB Instance category.
func (o GetInstanceEnginesInstanceEngineOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnginesInstanceEngine) string { return v.Category }).(pulumi.StringOutput)
}

// Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL` and `PPAS`. If no value is specified, all types are returned.
func (o GetInstanceEnginesInstanceEngineOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnginesInstanceEngine) string { return v.Engine }).(pulumi.StringOutput)
}

// Database version required by the user. Value options can refer to the latest docs [detail info](https://www.alibabacloud.com/help/doc-detail/26228.htm) `EngineVersion`.
func (o GetInstanceEnginesInstanceEngineOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnginesInstanceEngine) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// A list of Zone to launch the DB instance.
func (o GetInstanceEnginesInstanceEngineOutput) ZoneIds() GetInstanceEnginesInstanceEngineZoneIdArrayOutput {
	return o.ApplyT(func(v GetInstanceEnginesInstanceEngine) []GetInstanceEnginesInstanceEngineZoneId { return v.ZoneIds }).(GetInstanceEnginesInstanceEngineZoneIdArrayOutput)
}

type GetInstanceEnginesInstanceEngineArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEnginesInstanceEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnginesInstanceEngine)(nil)).Elem()
}

func (o GetInstanceEnginesInstanceEngineArrayOutput) ToGetInstanceEnginesInstanceEngineArrayOutput() GetInstanceEnginesInstanceEngineArrayOutput {
	return o
}

func (o GetInstanceEnginesInstanceEngineArrayOutput) ToGetInstanceEnginesInstanceEngineArrayOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineArrayOutput {
	return o
}

func (o GetInstanceEnginesInstanceEngineArrayOutput) Index(i pulumi.IntInput) GetInstanceEnginesInstanceEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEnginesInstanceEngine {
		return vs[0].([]GetInstanceEnginesInstanceEngine)[vs[1].(int)]
	}).(GetInstanceEnginesInstanceEngineOutput)
}

type GetInstanceEnginesInstanceEngineZoneId struct {
	// The Zone to launch the DB instance
	Id string `pulumi:"id"`
	// A list of sub zone ids which in the id - e.g If `id` is `cn-beijing-MAZ5(a,b)`, `subZoneIds` will be `["cn-beijing-a", "cn-beijing-b"]`.
	SubZoneIds []string `pulumi:"subZoneIds"`
}

// GetInstanceEnginesInstanceEngineZoneIdInput is an input type that accepts GetInstanceEnginesInstanceEngineZoneIdArgs and GetInstanceEnginesInstanceEngineZoneIdOutput values.
// You can construct a concrete instance of `GetInstanceEnginesInstanceEngineZoneIdInput` via:
//
//          GetInstanceEnginesInstanceEngineZoneIdArgs{...}
type GetInstanceEnginesInstanceEngineZoneIdInput interface {
	pulumi.Input

	ToGetInstanceEnginesInstanceEngineZoneIdOutput() GetInstanceEnginesInstanceEngineZoneIdOutput
	ToGetInstanceEnginesInstanceEngineZoneIdOutputWithContext(context.Context) GetInstanceEnginesInstanceEngineZoneIdOutput
}

type GetInstanceEnginesInstanceEngineZoneIdArgs struct {
	// The Zone to launch the DB instance
	Id pulumi.StringInput `pulumi:"id"`
	// A list of sub zone ids which in the id - e.g If `id` is `cn-beijing-MAZ5(a,b)`, `subZoneIds` will be `["cn-beijing-a", "cn-beijing-b"]`.
	SubZoneIds pulumi.StringArrayInput `pulumi:"subZoneIds"`
}

func (GetInstanceEnginesInstanceEngineZoneIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnginesInstanceEngineZoneId)(nil)).Elem()
}

func (i GetInstanceEnginesInstanceEngineZoneIdArgs) ToGetInstanceEnginesInstanceEngineZoneIdOutput() GetInstanceEnginesInstanceEngineZoneIdOutput {
	return i.ToGetInstanceEnginesInstanceEngineZoneIdOutputWithContext(context.Background())
}

func (i GetInstanceEnginesInstanceEngineZoneIdArgs) ToGetInstanceEnginesInstanceEngineZoneIdOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineZoneIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnginesInstanceEngineZoneIdOutput)
}

// GetInstanceEnginesInstanceEngineZoneIdArrayInput is an input type that accepts GetInstanceEnginesInstanceEngineZoneIdArray and GetInstanceEnginesInstanceEngineZoneIdArrayOutput values.
// You can construct a concrete instance of `GetInstanceEnginesInstanceEngineZoneIdArrayInput` via:
//
//          GetInstanceEnginesInstanceEngineZoneIdArray{ GetInstanceEnginesInstanceEngineZoneIdArgs{...} }
type GetInstanceEnginesInstanceEngineZoneIdArrayInput interface {
	pulumi.Input

	ToGetInstanceEnginesInstanceEngineZoneIdArrayOutput() GetInstanceEnginesInstanceEngineZoneIdArrayOutput
	ToGetInstanceEnginesInstanceEngineZoneIdArrayOutputWithContext(context.Context) GetInstanceEnginesInstanceEngineZoneIdArrayOutput
}

type GetInstanceEnginesInstanceEngineZoneIdArray []GetInstanceEnginesInstanceEngineZoneIdInput

func (GetInstanceEnginesInstanceEngineZoneIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnginesInstanceEngineZoneId)(nil)).Elem()
}

func (i GetInstanceEnginesInstanceEngineZoneIdArray) ToGetInstanceEnginesInstanceEngineZoneIdArrayOutput() GetInstanceEnginesInstanceEngineZoneIdArrayOutput {
	return i.ToGetInstanceEnginesInstanceEngineZoneIdArrayOutputWithContext(context.Background())
}

func (i GetInstanceEnginesInstanceEngineZoneIdArray) ToGetInstanceEnginesInstanceEngineZoneIdArrayOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineZoneIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnginesInstanceEngineZoneIdArrayOutput)
}

type GetInstanceEnginesInstanceEngineZoneIdOutput struct{ *pulumi.OutputState }

func (GetInstanceEnginesInstanceEngineZoneIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnginesInstanceEngineZoneId)(nil)).Elem()
}

func (o GetInstanceEnginesInstanceEngineZoneIdOutput) ToGetInstanceEnginesInstanceEngineZoneIdOutput() GetInstanceEnginesInstanceEngineZoneIdOutput {
	return o
}

func (o GetInstanceEnginesInstanceEngineZoneIdOutput) ToGetInstanceEnginesInstanceEngineZoneIdOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineZoneIdOutput {
	return o
}

// The Zone to launch the DB instance
func (o GetInstanceEnginesInstanceEngineZoneIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEnginesInstanceEngineZoneId) string { return v.Id }).(pulumi.StringOutput)
}

// A list of sub zone ids which in the id - e.g If `id` is `cn-beijing-MAZ5(a,b)`, `subZoneIds` will be `["cn-beijing-a", "cn-beijing-b"]`.
func (o GetInstanceEnginesInstanceEngineZoneIdOutput) SubZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceEnginesInstanceEngineZoneId) []string { return v.SubZoneIds }).(pulumi.StringArrayOutput)
}

type GetInstanceEnginesInstanceEngineZoneIdArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEnginesInstanceEngineZoneIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEnginesInstanceEngineZoneId)(nil)).Elem()
}

func (o GetInstanceEnginesInstanceEngineZoneIdArrayOutput) ToGetInstanceEnginesInstanceEngineZoneIdArrayOutput() GetInstanceEnginesInstanceEngineZoneIdArrayOutput {
	return o
}

func (o GetInstanceEnginesInstanceEngineZoneIdArrayOutput) ToGetInstanceEnginesInstanceEngineZoneIdArrayOutputWithContext(ctx context.Context) GetInstanceEnginesInstanceEngineZoneIdArrayOutput {
	return o
}

func (o GetInstanceEnginesInstanceEngineZoneIdArrayOutput) Index(i pulumi.IntInput) GetInstanceEnginesInstanceEngineZoneIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEnginesInstanceEngineZoneId {
		return vs[0].([]GetInstanceEnginesInstanceEngineZoneId)[vs[1].(int)]
	}).(GetInstanceEnginesInstanceEngineZoneIdOutput)
}

type GetInstancesInstance struct {
	// Availability zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Billing method. Value options: `Postpaid` for Pay-As-You-Go and `Prepaid` for subscription.
	ChargeType string `pulumi:"chargeType"`
	// `Standard` for standard access mode and `Safe` for high security access mode.
	ConnectionMode string `pulumi:"connectionMode"`
	// (Available in 1.70.3+) RDS database connection string.
	ConnectionString string `pulumi:"connectionString"`
	// Creation time of the instance.
	CreateTime string `pulumi:"createTime"`
	// (Available in 1.70.3+) The storage type of the instance.
	DbInstanceStorageType string `pulumi:"dbInstanceStorageType"`
	// `Primary` for primary instance, `Readonly` for read-only instance, `Guard` for disaster recovery instance, and `Temp` for temporary instance.
	DbType string `pulumi:"dbType"`
	// Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL` and `PPAS`. If no value is specified, all types are returned.
	Engine string `pulumi:"engine"`
	// Database version.
	EngineVersion string `pulumi:"engineVersion"`
	// Expiration time. Pay-As-You-Go instances never expire.
	ExpireTime string `pulumi:"expireTime"`
	// If a disaster recovery instance is attached to the current instance, the ID of the disaster recovery instance applies.
	GuardInstanceId string `pulumi:"guardInstanceId"`
	// The ID of the RDS instance.
	Id string `pulumi:"id"`
	// (Available in 1.70.3+) User-defined DB instance storage space.
	InstanceStorage int `pulumi:"instanceStorage"`
	// Sizing of the RDS instance.
	InstanceType string `pulumi:"instanceType"`
	// ID of the primary instance. If this parameter is not returned, the current instance is a primary instance.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// (Available in 1.101.0+) The master zone of the instance.
	MasterZone string `pulumi:"masterZone"`
	// The name of the RDS instance.
	Name string `pulumi:"name"`
	// `Internet` for public network or `Intranet` for private network.
	NetType string `pulumi:"netType"`
	// (Available in 1.70.3+) RDS database connection port.
	Port string `pulumi:"port"`
	// A list of IDs of read-only instances attached to the primary instance.
	ReadonlyInstanceIds []string `pulumi:"readonlyInstanceIds"`
	// Region ID the instance belongs to.
	RegionId string `pulumi:"regionId"`
	// Status of the instance.
	Status string `pulumi:"status"`
	// If a temporary instance is attached to the current instance, the ID of the temporary instance applies.
	TempInstanceId string `pulumi:"tempInstanceId"`
	// Used to retrieve instances belong to specified VPC.
	VpcId string `pulumi:"vpcId"`
	// Used to retrieve instances belong to specified `vswitch` resources.
	VswitchId string `pulumi:"vswitchId"`
	// (Available in 1.101.0+) The region ID of the secondary instance if you create a secondary instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
	ZoneIdSlaveA string `pulumi:"zoneIdSlaveA"`
	// (Available in 1.101.0+) The region ID of the log instance if you create a log instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
	ZoneIdSlaveB string `pulumi:"zoneIdSlaveB"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Availability zone.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Billing method. Value options: `Postpaid` for Pay-As-You-Go and `Prepaid` for subscription.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// `Standard` for standard access mode and `Safe` for high security access mode.
	ConnectionMode pulumi.StringInput `pulumi:"connectionMode"`
	// (Available in 1.70.3+) RDS database connection string.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// Creation time of the instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// (Available in 1.70.3+) The storage type of the instance.
	DbInstanceStorageType pulumi.StringInput `pulumi:"dbInstanceStorageType"`
	// `Primary` for primary instance, `Readonly` for read-only instance, `Guard` for disaster recovery instance, and `Temp` for temporary instance.
	DbType pulumi.StringInput `pulumi:"dbType"`
	// Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL` and `PPAS`. If no value is specified, all types are returned.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Database version.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expiration time. Pay-As-You-Go instances never expire.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// If a disaster recovery instance is attached to the current instance, the ID of the disaster recovery instance applies.
	GuardInstanceId pulumi.StringInput `pulumi:"guardInstanceId"`
	// The ID of the RDS instance.
	Id pulumi.StringInput `pulumi:"id"`
	// (Available in 1.70.3+) User-defined DB instance storage space.
	InstanceStorage pulumi.IntInput `pulumi:"instanceStorage"`
	// Sizing of the RDS instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// ID of the primary instance. If this parameter is not returned, the current instance is a primary instance.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// (Available in 1.101.0+) The master zone of the instance.
	MasterZone pulumi.StringInput `pulumi:"masterZone"`
	// The name of the RDS instance.
	Name pulumi.StringInput `pulumi:"name"`
	// `Internet` for public network or `Intranet` for private network.
	NetType pulumi.StringInput `pulumi:"netType"`
	// (Available in 1.70.3+) RDS database connection port.
	Port pulumi.StringInput `pulumi:"port"`
	// A list of IDs of read-only instances attached to the primary instance.
	ReadonlyInstanceIds pulumi.StringArrayInput `pulumi:"readonlyInstanceIds"`
	// Region ID the instance belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Status of the instance.
	Status pulumi.StringInput `pulumi:"status"`
	// If a temporary instance is attached to the current instance, the ID of the temporary instance applies.
	TempInstanceId pulumi.StringInput `pulumi:"tempInstanceId"`
	// Used to retrieve instances belong to specified VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Used to retrieve instances belong to specified `vswitch` resources.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// (Available in 1.101.0+) The region ID of the secondary instance if you create a secondary instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
	ZoneIdSlaveA pulumi.StringInput `pulumi:"zoneIdSlaveA"`
	// (Available in 1.101.0+) The region ID of the log instance if you create a log instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
	ZoneIdSlaveB pulumi.StringInput `pulumi:"zoneIdSlaveB"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Availability zone.
func (o GetInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Billing method. Value options: `Postpaid` for Pay-As-You-Go and `Prepaid` for subscription.
func (o GetInstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// `Standard` for standard access mode and `Safe` for high security access mode.
func (o GetInstancesInstanceOutput) ConnectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ConnectionMode }).(pulumi.StringOutput)
}

// (Available in 1.70.3+) RDS database connection string.
func (o GetInstancesInstanceOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Creation time of the instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// (Available in 1.70.3+) The storage type of the instance.
func (o GetInstancesInstanceOutput) DbInstanceStorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbInstanceStorageType }).(pulumi.StringOutput)
}

// `Primary` for primary instance, `Readonly` for read-only instance, `Guard` for disaster recovery instance, and `Temp` for temporary instance.
func (o GetInstancesInstanceOutput) DbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbType }).(pulumi.StringOutput)
}

// Database type. Options are `MySQL`, `SQLServer`, `PostgreSQL` and `PPAS`. If no value is specified, all types are returned.
func (o GetInstancesInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Engine }).(pulumi.StringOutput)
}

// Database version.
func (o GetInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expiration time. Pay-As-You-Go instances never expire.
func (o GetInstancesInstanceOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// If a disaster recovery instance is attached to the current instance, the ID of the disaster recovery instance applies.
func (o GetInstancesInstanceOutput) GuardInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.GuardInstanceId }).(pulumi.StringOutput)
}

// The ID of the RDS instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// (Available in 1.70.3+) User-defined DB instance storage space.
func (o GetInstancesInstanceOutput) InstanceStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.InstanceStorage }).(pulumi.IntOutput)
}

// Sizing of the RDS instance.
func (o GetInstancesInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// ID of the primary instance. If this parameter is not returned, the current instance is a primary instance.
func (o GetInstancesInstanceOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// (Available in 1.101.0+) The master zone of the instance.
func (o GetInstancesInstanceOutput) MasterZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MasterZone }).(pulumi.StringOutput)
}

// The name of the RDS instance.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// `Internet` for public network or `Intranet` for private network.
func (o GetInstancesInstanceOutput) NetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.NetType }).(pulumi.StringOutput)
}

// (Available in 1.70.3+) RDS database connection port.
func (o GetInstancesInstanceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Port }).(pulumi.StringOutput)
}

// A list of IDs of read-only instances attached to the primary instance.
func (o GetInstancesInstanceOutput) ReadonlyInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.ReadonlyInstanceIds }).(pulumi.StringArrayOutput)
}

// Region ID the instance belongs to.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// Status of the instance.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// If a temporary instance is attached to the current instance, the ID of the temporary instance applies.
func (o GetInstancesInstanceOutput) TempInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TempInstanceId }).(pulumi.StringOutput)
}

// Used to retrieve instances belong to specified VPC.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// Used to retrieve instances belong to specified `vswitch` resources.
func (o GetInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

// (Available in 1.101.0+) The region ID of the secondary instance if you create a secondary instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
func (o GetInstancesInstanceOutput) ZoneIdSlaveA() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneIdSlaveA }).(pulumi.StringOutput)
}

// (Available in 1.101.0+) The region ID of the log instance if you create a log instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
func (o GetInstancesInstanceOutput) ZoneIdSlaveB() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneIdSlaveB }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetRdsParameterGroupsGroup struct {
	Engine             string                                  `pulumi:"engine"`
	EngineVersion      string                                  `pulumi:"engineVersion"`
	ForceRestart       int                                     `pulumi:"forceRestart"`
	Id                 string                                  `pulumi:"id"`
	ParamCounts        int                                     `pulumi:"paramCounts"`
	ParamDetails       []GetRdsParameterGroupsGroupParamDetail `pulumi:"paramDetails"`
	ParameterGroupDesc string                                  `pulumi:"parameterGroupDesc"`
	ParameterGroupId   string                                  `pulumi:"parameterGroupId"`
	ParameterGroupName string                                  `pulumi:"parameterGroupName"`
	ParameterGroupType int                                     `pulumi:"parameterGroupType"`
}

// GetRdsParameterGroupsGroupInput is an input type that accepts GetRdsParameterGroupsGroupArgs and GetRdsParameterGroupsGroupOutput values.
// You can construct a concrete instance of `GetRdsParameterGroupsGroupInput` via:
//
//          GetRdsParameterGroupsGroupArgs{...}
type GetRdsParameterGroupsGroupInput interface {
	pulumi.Input

	ToGetRdsParameterGroupsGroupOutput() GetRdsParameterGroupsGroupOutput
	ToGetRdsParameterGroupsGroupOutputWithContext(context.Context) GetRdsParameterGroupsGroupOutput
}

type GetRdsParameterGroupsGroupArgs struct {
	Engine             pulumi.StringInput                              `pulumi:"engine"`
	EngineVersion      pulumi.StringInput                              `pulumi:"engineVersion"`
	ForceRestart       pulumi.IntInput                                 `pulumi:"forceRestart"`
	Id                 pulumi.StringInput                              `pulumi:"id"`
	ParamCounts        pulumi.IntInput                                 `pulumi:"paramCounts"`
	ParamDetails       GetRdsParameterGroupsGroupParamDetailArrayInput `pulumi:"paramDetails"`
	ParameterGroupDesc pulumi.StringInput                              `pulumi:"parameterGroupDesc"`
	ParameterGroupId   pulumi.StringInput                              `pulumi:"parameterGroupId"`
	ParameterGroupName pulumi.StringInput                              `pulumi:"parameterGroupName"`
	ParameterGroupType pulumi.IntInput                                 `pulumi:"parameterGroupType"`
}

func (GetRdsParameterGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsParameterGroupsGroup)(nil)).Elem()
}

func (i GetRdsParameterGroupsGroupArgs) ToGetRdsParameterGroupsGroupOutput() GetRdsParameterGroupsGroupOutput {
	return i.ToGetRdsParameterGroupsGroupOutputWithContext(context.Background())
}

func (i GetRdsParameterGroupsGroupArgs) ToGetRdsParameterGroupsGroupOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsParameterGroupsGroupOutput)
}

// GetRdsParameterGroupsGroupArrayInput is an input type that accepts GetRdsParameterGroupsGroupArray and GetRdsParameterGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetRdsParameterGroupsGroupArrayInput` via:
//
//          GetRdsParameterGroupsGroupArray{ GetRdsParameterGroupsGroupArgs{...} }
type GetRdsParameterGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetRdsParameterGroupsGroupArrayOutput() GetRdsParameterGroupsGroupArrayOutput
	ToGetRdsParameterGroupsGroupArrayOutputWithContext(context.Context) GetRdsParameterGroupsGroupArrayOutput
}

type GetRdsParameterGroupsGroupArray []GetRdsParameterGroupsGroupInput

func (GetRdsParameterGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsParameterGroupsGroup)(nil)).Elem()
}

func (i GetRdsParameterGroupsGroupArray) ToGetRdsParameterGroupsGroupArrayOutput() GetRdsParameterGroupsGroupArrayOutput {
	return i.ToGetRdsParameterGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetRdsParameterGroupsGroupArray) ToGetRdsParameterGroupsGroupArrayOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsParameterGroupsGroupArrayOutput)
}

type GetRdsParameterGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetRdsParameterGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsParameterGroupsGroup)(nil)).Elem()
}

func (o GetRdsParameterGroupsGroupOutput) ToGetRdsParameterGroupsGroupOutput() GetRdsParameterGroupsGroupOutput {
	return o
}

func (o GetRdsParameterGroupsGroupOutput) ToGetRdsParameterGroupsGroupOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupOutput {
	return o
}

func (o GetRdsParameterGroupsGroupOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) string { return v.Engine }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ForceRestart() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) int { return v.ForceRestart }).(pulumi.IntOutput)
}

func (o GetRdsParameterGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ParamCounts() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) int { return v.ParamCounts }).(pulumi.IntOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ParamDetails() GetRdsParameterGroupsGroupParamDetailArrayOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) []GetRdsParameterGroupsGroupParamDetail { return v.ParamDetails }).(GetRdsParameterGroupsGroupParamDetailArrayOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ParameterGroupDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) string { return v.ParameterGroupDesc }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ParameterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) string { return v.ParameterGroupId }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ParameterGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) string { return v.ParameterGroupName }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupOutput) ParameterGroupType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroup) int { return v.ParameterGroupType }).(pulumi.IntOutput)
}

type GetRdsParameterGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetRdsParameterGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsParameterGroupsGroup)(nil)).Elem()
}

func (o GetRdsParameterGroupsGroupArrayOutput) ToGetRdsParameterGroupsGroupArrayOutput() GetRdsParameterGroupsGroupArrayOutput {
	return o
}

func (o GetRdsParameterGroupsGroupArrayOutput) ToGetRdsParameterGroupsGroupArrayOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupArrayOutput {
	return o
}

func (o GetRdsParameterGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetRdsParameterGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsParameterGroupsGroup {
		return vs[0].([]GetRdsParameterGroupsGroup)[vs[1].(int)]
	}).(GetRdsParameterGroupsGroupOutput)
}

type GetRdsParameterGroupsGroupParamDetail struct {
	ParamName  string `pulumi:"paramName"`
	ParamValue string `pulumi:"paramValue"`
}

// GetRdsParameterGroupsGroupParamDetailInput is an input type that accepts GetRdsParameterGroupsGroupParamDetailArgs and GetRdsParameterGroupsGroupParamDetailOutput values.
// You can construct a concrete instance of `GetRdsParameterGroupsGroupParamDetailInput` via:
//
//          GetRdsParameterGroupsGroupParamDetailArgs{...}
type GetRdsParameterGroupsGroupParamDetailInput interface {
	pulumi.Input

	ToGetRdsParameterGroupsGroupParamDetailOutput() GetRdsParameterGroupsGroupParamDetailOutput
	ToGetRdsParameterGroupsGroupParamDetailOutputWithContext(context.Context) GetRdsParameterGroupsGroupParamDetailOutput
}

type GetRdsParameterGroupsGroupParamDetailArgs struct {
	ParamName  pulumi.StringInput `pulumi:"paramName"`
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetRdsParameterGroupsGroupParamDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsParameterGroupsGroupParamDetail)(nil)).Elem()
}

func (i GetRdsParameterGroupsGroupParamDetailArgs) ToGetRdsParameterGroupsGroupParamDetailOutput() GetRdsParameterGroupsGroupParamDetailOutput {
	return i.ToGetRdsParameterGroupsGroupParamDetailOutputWithContext(context.Background())
}

func (i GetRdsParameterGroupsGroupParamDetailArgs) ToGetRdsParameterGroupsGroupParamDetailOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupParamDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsParameterGroupsGroupParamDetailOutput)
}

// GetRdsParameterGroupsGroupParamDetailArrayInput is an input type that accepts GetRdsParameterGroupsGroupParamDetailArray and GetRdsParameterGroupsGroupParamDetailArrayOutput values.
// You can construct a concrete instance of `GetRdsParameterGroupsGroupParamDetailArrayInput` via:
//
//          GetRdsParameterGroupsGroupParamDetailArray{ GetRdsParameterGroupsGroupParamDetailArgs{...} }
type GetRdsParameterGroupsGroupParamDetailArrayInput interface {
	pulumi.Input

	ToGetRdsParameterGroupsGroupParamDetailArrayOutput() GetRdsParameterGroupsGroupParamDetailArrayOutput
	ToGetRdsParameterGroupsGroupParamDetailArrayOutputWithContext(context.Context) GetRdsParameterGroupsGroupParamDetailArrayOutput
}

type GetRdsParameterGroupsGroupParamDetailArray []GetRdsParameterGroupsGroupParamDetailInput

func (GetRdsParameterGroupsGroupParamDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsParameterGroupsGroupParamDetail)(nil)).Elem()
}

func (i GetRdsParameterGroupsGroupParamDetailArray) ToGetRdsParameterGroupsGroupParamDetailArrayOutput() GetRdsParameterGroupsGroupParamDetailArrayOutput {
	return i.ToGetRdsParameterGroupsGroupParamDetailArrayOutputWithContext(context.Background())
}

func (i GetRdsParameterGroupsGroupParamDetailArray) ToGetRdsParameterGroupsGroupParamDetailArrayOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupParamDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRdsParameterGroupsGroupParamDetailArrayOutput)
}

type GetRdsParameterGroupsGroupParamDetailOutput struct{ *pulumi.OutputState }

func (GetRdsParameterGroupsGroupParamDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsParameterGroupsGroupParamDetail)(nil)).Elem()
}

func (o GetRdsParameterGroupsGroupParamDetailOutput) ToGetRdsParameterGroupsGroupParamDetailOutput() GetRdsParameterGroupsGroupParamDetailOutput {
	return o
}

func (o GetRdsParameterGroupsGroupParamDetailOutput) ToGetRdsParameterGroupsGroupParamDetailOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupParamDetailOutput {
	return o
}

func (o GetRdsParameterGroupsGroupParamDetailOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroupParamDetail) string { return v.ParamName }).(pulumi.StringOutput)
}

func (o GetRdsParameterGroupsGroupParamDetailOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsParameterGroupsGroupParamDetail) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetRdsParameterGroupsGroupParamDetailArrayOutput struct{ *pulumi.OutputState }

func (GetRdsParameterGroupsGroupParamDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRdsParameterGroupsGroupParamDetail)(nil)).Elem()
}

func (o GetRdsParameterGroupsGroupParamDetailArrayOutput) ToGetRdsParameterGroupsGroupParamDetailArrayOutput() GetRdsParameterGroupsGroupParamDetailArrayOutput {
	return o
}

func (o GetRdsParameterGroupsGroupParamDetailArrayOutput) ToGetRdsParameterGroupsGroupParamDetailArrayOutputWithContext(ctx context.Context) GetRdsParameterGroupsGroupParamDetailArrayOutput {
	return o
}

func (o GetRdsParameterGroupsGroupParamDetailArrayOutput) Index(i pulumi.IntInput) GetRdsParameterGroupsGroupParamDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRdsParameterGroupsGroupParamDetail {
		return vs[0].([]GetRdsParameterGroupsGroupParamDetail)[vs[1].(int)]
	}).(GetRdsParameterGroupsGroupParamDetailOutput)
}

type GetZonesZone struct {
	// ID of the zone.
	Id string `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds []string `pulumi:"multiZoneIds"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// ID of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds pulumi.StringArrayInput `pulumi:"multiZoneIds"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// ID of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// A list of zone ids in which the multi zone.
func (o GetZonesZoneOutput) MultiZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.MultiZoneIds }).(pulumi.StringArrayOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceParameterOutput{})
	pulumi.RegisterOutputType(InstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(RdsParameterGroupParamDetailOutput{})
	pulumi.RegisterOutputType(RdsParameterGroupParamDetailArrayOutput{})
	pulumi.RegisterOutputType(ReadOnlyInstanceParameterOutput{})
	pulumi.RegisterOutputType(ReadOnlyInstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountDatabasePrivilegeOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountDatabasePrivilegeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceClassesInstanceClassOutput{})
	pulumi.RegisterOutputType(GetInstanceClassesInstanceClassArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceClassesInstanceClassStorageRangeOutput{})
	pulumi.RegisterOutputType(GetInstanceClassesInstanceClassZoneIdOutput{})
	pulumi.RegisterOutputType(GetInstanceClassesInstanceClassZoneIdArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEnginesInstanceEngineOutput{})
	pulumi.RegisterOutputType(GetInstanceEnginesInstanceEngineArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEnginesInstanceEngineZoneIdOutput{})
	pulumi.RegisterOutputType(GetInstanceEnginesInstanceEngineZoneIdArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetRdsParameterGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetRdsParameterGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetRdsParameterGroupsGroupParamDetailOutput{})
	pulumi.RegisterOutputType(GetRdsParameterGroupsGroupParamDetailArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
