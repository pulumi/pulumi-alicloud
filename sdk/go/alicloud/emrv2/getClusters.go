// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emrv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Emr Clusters of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.199.0.
func GetClusters(ctx *pulumi.Context, args *GetClustersArgs, opts ...pulumi.InvokeOption) (*GetClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClustersResult
	err := ctx.Invoke("alicloud:emrv2/getClusters:getClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusters.
type GetClustersArgs struct {
	// The cluster name.
	ClusterName *string `pulumi:"clusterName"`
	// The cluster states.
	ClusterStates []string `pulumi:"clusterStates"`
	// The cluster types.
	ClusterTypes []string `pulumi:"clusterTypes"`
	// A list of Cluster IDs.
	Ids []string `pulumi:"ids"`
	// The max results is used to list clusters for next page.
	MaxResults *int `pulumi:"maxResults"`
	// A regex string to filter results by Cluster name.
	NameRegex *string `pulumi:"nameRegex"`
	// The next token is used to list clusters for next page.
	NextToken *string `pulumi:"nextToken"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The cluster payment types.
	PaymentTypes []string `pulumi:"paymentTypes"`
	// The Resource Group ID.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getClusters.
type GetClustersResult struct {
	// The name of the emr cluster.
	ClusterName   *string  `pulumi:"clusterName"`
	ClusterStates []string `pulumi:"clusterStates"`
	ClusterTypes  []string `pulumi:"clusterTypes"`
	// A list of Emr Clusters. Each element contains the following attributes:
	Clusters []GetClustersCluster `pulumi:"clusters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Cluster IDS.
	Ids        []string `pulumi:"ids"`
	MaxResults *int     `pulumi:"maxResults"`
	NameRegex  *string  `pulumi:"nameRegex"`
	// A list of Cluster names.
	Names        []string `pulumi:"names"`
	NextToken    *string  `pulumi:"nextToken"`
	OutputFile   *string  `pulumi:"outputFile"`
	PaymentTypes []string `pulumi:"paymentTypes"`
	// The resource group id of the resource.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The total count of list clusters.
	TotalCount int `pulumi:"totalCount"`
}

func GetClustersOutput(ctx *pulumi.Context, args GetClustersOutputArgs, opts ...pulumi.InvokeOption) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetClustersResultOutput, error) {
			args := v.(GetClustersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:emrv2/getClusters:getClusters", args, GetClustersResultOutput{}, options).(GetClustersResultOutput), nil
		}).(GetClustersResultOutput)
}

// A collection of arguments for invoking getClusters.
type GetClustersOutputArgs struct {
	// The cluster name.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// The cluster states.
	ClusterStates pulumi.StringArrayInput `pulumi:"clusterStates"`
	// The cluster types.
	ClusterTypes pulumi.StringArrayInput `pulumi:"clusterTypes"`
	// A list of Cluster IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The max results is used to list clusters for next page.
	MaxResults pulumi.IntPtrInput `pulumi:"maxResults"`
	// A regex string to filter results by Cluster name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The next token is used to list clusters for next page.
	NextToken pulumi.StringPtrInput `pulumi:"nextToken"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The cluster payment types.
	PaymentTypes pulumi.StringArrayInput `pulumi:"paymentTypes"`
	// The Resource Group ID.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersArgs)(nil)).Elem()
}

// A collection of values returned by getClusters.
type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

// The name of the emr cluster.
func (o GetClustersResultOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) ClusterStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.ClusterStates }).(pulumi.StringArrayOutput)
}

func (o GetClustersResultOutput) ClusterTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.ClusterTypes }).(pulumi.StringArrayOutput)
}

// A list of Emr Clusters. Each element contains the following attributes:
func (o GetClustersResultOutput) Clusters() GetClustersClusterArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersCluster { return v.Clusters }).(GetClustersClusterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Cluster IDS.
func (o GetClustersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetClustersResultOutput) MaxResults() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *int { return v.MaxResults }).(pulumi.IntPtrOutput)
}

func (o GetClustersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Cluster names.
func (o GetClustersResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetClustersResultOutput) NextToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.NextToken }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) PaymentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.PaymentTypes }).(pulumi.StringArrayOutput)
}

// The resource group id of the resource.
func (o GetClustersResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o GetClustersResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClustersResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The total count of list clusters.
func (o GetClustersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersResultOutput{})
}
