// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package starrocks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceBackendNodeGroup struct {
	// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
	Cu *int `pulumi:"cu"`
	// The number of disks.
	DiskNumber *int `pulumi:"diskNumber"`
	// Local SSD instance specifications.
	LocalStorageInstanceType *string `pulumi:"localStorageInstanceType"`
	// Resident node number of node group.
	ResidentNodeNumber *int `pulumi:"residentNodeNumber"`
	// Compute group specification types include the following:
	// - standard
	// - localSSD
	// - bigData
	// - ramEnhanced
	// - networkEnhanced
	SpecType *string `pulumi:"specType"`
	// Performance levels of cloud disks include the following values:
	// - pl0: Maximum random read/write IOPS per disk is 10,000.
	// - pl1: Maximum random read/write IOPS per disk is 50,000.
	// - pl2: Maximum random read/write IOPS per disk is 100,000.
	// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
	StoragePerformanceLevel *string `pulumi:"storagePerformanceLevel"`
	// Storage size, measured in GiB.
	StorageSize *int `pulumi:"storageSize"`
	// Zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// InstanceBackendNodeGroupInput is an input type that accepts InstanceBackendNodeGroupArgs and InstanceBackendNodeGroupOutput values.
// You can construct a concrete instance of `InstanceBackendNodeGroupInput` via:
//
//	InstanceBackendNodeGroupArgs{...}
type InstanceBackendNodeGroupInput interface {
	pulumi.Input

	ToInstanceBackendNodeGroupOutput() InstanceBackendNodeGroupOutput
	ToInstanceBackendNodeGroupOutputWithContext(context.Context) InstanceBackendNodeGroupOutput
}

type InstanceBackendNodeGroupArgs struct {
	// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
	Cu pulumi.IntPtrInput `pulumi:"cu"`
	// The number of disks.
	DiskNumber pulumi.IntPtrInput `pulumi:"diskNumber"`
	// Local SSD instance specifications.
	LocalStorageInstanceType pulumi.StringPtrInput `pulumi:"localStorageInstanceType"`
	// Resident node number of node group.
	ResidentNodeNumber pulumi.IntPtrInput `pulumi:"residentNodeNumber"`
	// Compute group specification types include the following:
	// - standard
	// - localSSD
	// - bigData
	// - ramEnhanced
	// - networkEnhanced
	SpecType pulumi.StringPtrInput `pulumi:"specType"`
	// Performance levels of cloud disks include the following values:
	// - pl0: Maximum random read/write IOPS per disk is 10,000.
	// - pl1: Maximum random read/write IOPS per disk is 50,000.
	// - pl2: Maximum random read/write IOPS per disk is 100,000.
	// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
	StoragePerformanceLevel pulumi.StringPtrInput `pulumi:"storagePerformanceLevel"`
	// Storage size, measured in GiB.
	StorageSize pulumi.IntPtrInput `pulumi:"storageSize"`
	// Zone ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (InstanceBackendNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackendNodeGroup)(nil)).Elem()
}

func (i InstanceBackendNodeGroupArgs) ToInstanceBackendNodeGroupOutput() InstanceBackendNodeGroupOutput {
	return i.ToInstanceBackendNodeGroupOutputWithContext(context.Background())
}

func (i InstanceBackendNodeGroupArgs) ToInstanceBackendNodeGroupOutputWithContext(ctx context.Context) InstanceBackendNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackendNodeGroupOutput)
}

// InstanceBackendNodeGroupArrayInput is an input type that accepts InstanceBackendNodeGroupArray and InstanceBackendNodeGroupArrayOutput values.
// You can construct a concrete instance of `InstanceBackendNodeGroupArrayInput` via:
//
//	InstanceBackendNodeGroupArray{ InstanceBackendNodeGroupArgs{...} }
type InstanceBackendNodeGroupArrayInput interface {
	pulumi.Input

	ToInstanceBackendNodeGroupArrayOutput() InstanceBackendNodeGroupArrayOutput
	ToInstanceBackendNodeGroupArrayOutputWithContext(context.Context) InstanceBackendNodeGroupArrayOutput
}

type InstanceBackendNodeGroupArray []InstanceBackendNodeGroupInput

func (InstanceBackendNodeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceBackendNodeGroup)(nil)).Elem()
}

func (i InstanceBackendNodeGroupArray) ToInstanceBackendNodeGroupArrayOutput() InstanceBackendNodeGroupArrayOutput {
	return i.ToInstanceBackendNodeGroupArrayOutputWithContext(context.Background())
}

func (i InstanceBackendNodeGroupArray) ToInstanceBackendNodeGroupArrayOutputWithContext(ctx context.Context) InstanceBackendNodeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackendNodeGroupArrayOutput)
}

type InstanceBackendNodeGroupOutput struct{ *pulumi.OutputState }

func (InstanceBackendNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackendNodeGroup)(nil)).Elem()
}

func (o InstanceBackendNodeGroupOutput) ToInstanceBackendNodeGroupOutput() InstanceBackendNodeGroupOutput {
	return o
}

func (o InstanceBackendNodeGroupOutput) ToInstanceBackendNodeGroupOutputWithContext(ctx context.Context) InstanceBackendNodeGroupOutput {
	return o
}

// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
func (o InstanceBackendNodeGroupOutput) Cu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *int { return v.Cu }).(pulumi.IntPtrOutput)
}

// The number of disks.
func (o InstanceBackendNodeGroupOutput) DiskNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *int { return v.DiskNumber }).(pulumi.IntPtrOutput)
}

// Local SSD instance specifications.
func (o InstanceBackendNodeGroupOutput) LocalStorageInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *string { return v.LocalStorageInstanceType }).(pulumi.StringPtrOutput)
}

// Resident node number of node group.
func (o InstanceBackendNodeGroupOutput) ResidentNodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *int { return v.ResidentNodeNumber }).(pulumi.IntPtrOutput)
}

// Compute group specification types include the following:
// - standard
// - localSSD
// - bigData
// - ramEnhanced
// - networkEnhanced
func (o InstanceBackendNodeGroupOutput) SpecType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *string { return v.SpecType }).(pulumi.StringPtrOutput)
}

// Performance levels of cloud disks include the following values:
// - pl0: Maximum random read/write IOPS per disk is 10,000.
// - pl1: Maximum random read/write IOPS per disk is 50,000.
// - pl2: Maximum random read/write IOPS per disk is 100,000.
// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
func (o InstanceBackendNodeGroupOutput) StoragePerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *string { return v.StoragePerformanceLevel }).(pulumi.StringPtrOutput)
}

// Storage size, measured in GiB.
func (o InstanceBackendNodeGroupOutput) StorageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *int { return v.StorageSize }).(pulumi.IntPtrOutput)
}

// Zone ID.
func (o InstanceBackendNodeGroupOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackendNodeGroup) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type InstanceBackendNodeGroupArrayOutput struct{ *pulumi.OutputState }

func (InstanceBackendNodeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceBackendNodeGroup)(nil)).Elem()
}

func (o InstanceBackendNodeGroupArrayOutput) ToInstanceBackendNodeGroupArrayOutput() InstanceBackendNodeGroupArrayOutput {
	return o
}

func (o InstanceBackendNodeGroupArrayOutput) ToInstanceBackendNodeGroupArrayOutputWithContext(ctx context.Context) InstanceBackendNodeGroupArrayOutput {
	return o
}

func (o InstanceBackendNodeGroupArrayOutput) Index(i pulumi.IntInput) InstanceBackendNodeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceBackendNodeGroup {
		return vs[0].([]InstanceBackendNodeGroup)[vs[1].(int)]
	}).(InstanceBackendNodeGroupOutput)
}

type InstanceFrontendNodeGroup struct {
	// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
	Cu *int `pulumi:"cu"`
	// DiskNumber
	DiskNumber *int `pulumi:"diskNumber"`
	// Local SSD instance specifications.
	LocalStorageInstanceType *string `pulumi:"localStorageInstanceType"`
	// Resident node number of node group.
	ResidentNodeNumber *int `pulumi:"residentNodeNumber"`
	// Compute group specification types include the following:
	// - standard
	// - ramEnhanced
	SpecType *string `pulumi:"specType"`
	// Performance levels of cloud disks include the following values:
	// - pl0: Maximum random read/write IOPS per disk is 10,000.
	// - pl1: Maximum random read/write IOPS per disk is 50,000.
	// - pl2: Maximum random read/write IOPS per disk is 100,000.
	// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
	StoragePerformanceLevel *string `pulumi:"storagePerformanceLevel"`
	// Storage size, measured in GiB.
	StorageSize *int `pulumi:"storageSize"`
	// Zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// InstanceFrontendNodeGroupInput is an input type that accepts InstanceFrontendNodeGroupArgs and InstanceFrontendNodeGroupOutput values.
// You can construct a concrete instance of `InstanceFrontendNodeGroupInput` via:
//
//	InstanceFrontendNodeGroupArgs{...}
type InstanceFrontendNodeGroupInput interface {
	pulumi.Input

	ToInstanceFrontendNodeGroupOutput() InstanceFrontendNodeGroupOutput
	ToInstanceFrontendNodeGroupOutputWithContext(context.Context) InstanceFrontendNodeGroupOutput
}

type InstanceFrontendNodeGroupArgs struct {
	// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
	Cu pulumi.IntPtrInput `pulumi:"cu"`
	// DiskNumber
	DiskNumber pulumi.IntPtrInput `pulumi:"diskNumber"`
	// Local SSD instance specifications.
	LocalStorageInstanceType pulumi.StringPtrInput `pulumi:"localStorageInstanceType"`
	// Resident node number of node group.
	ResidentNodeNumber pulumi.IntPtrInput `pulumi:"residentNodeNumber"`
	// Compute group specification types include the following:
	// - standard
	// - ramEnhanced
	SpecType pulumi.StringPtrInput `pulumi:"specType"`
	// Performance levels of cloud disks include the following values:
	// - pl0: Maximum random read/write IOPS per disk is 10,000.
	// - pl1: Maximum random read/write IOPS per disk is 50,000.
	// - pl2: Maximum random read/write IOPS per disk is 100,000.
	// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
	StoragePerformanceLevel pulumi.StringPtrInput `pulumi:"storagePerformanceLevel"`
	// Storage size, measured in GiB.
	StorageSize pulumi.IntPtrInput `pulumi:"storageSize"`
	// Zone ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (InstanceFrontendNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFrontendNodeGroup)(nil)).Elem()
}

func (i InstanceFrontendNodeGroupArgs) ToInstanceFrontendNodeGroupOutput() InstanceFrontendNodeGroupOutput {
	return i.ToInstanceFrontendNodeGroupOutputWithContext(context.Background())
}

func (i InstanceFrontendNodeGroupArgs) ToInstanceFrontendNodeGroupOutputWithContext(ctx context.Context) InstanceFrontendNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFrontendNodeGroupOutput)
}

// InstanceFrontendNodeGroupArrayInput is an input type that accepts InstanceFrontendNodeGroupArray and InstanceFrontendNodeGroupArrayOutput values.
// You can construct a concrete instance of `InstanceFrontendNodeGroupArrayInput` via:
//
//	InstanceFrontendNodeGroupArray{ InstanceFrontendNodeGroupArgs{...} }
type InstanceFrontendNodeGroupArrayInput interface {
	pulumi.Input

	ToInstanceFrontendNodeGroupArrayOutput() InstanceFrontendNodeGroupArrayOutput
	ToInstanceFrontendNodeGroupArrayOutputWithContext(context.Context) InstanceFrontendNodeGroupArrayOutput
}

type InstanceFrontendNodeGroupArray []InstanceFrontendNodeGroupInput

func (InstanceFrontendNodeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFrontendNodeGroup)(nil)).Elem()
}

func (i InstanceFrontendNodeGroupArray) ToInstanceFrontendNodeGroupArrayOutput() InstanceFrontendNodeGroupArrayOutput {
	return i.ToInstanceFrontendNodeGroupArrayOutputWithContext(context.Background())
}

func (i InstanceFrontendNodeGroupArray) ToInstanceFrontendNodeGroupArrayOutputWithContext(ctx context.Context) InstanceFrontendNodeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFrontendNodeGroupArrayOutput)
}

type InstanceFrontendNodeGroupOutput struct{ *pulumi.OutputState }

func (InstanceFrontendNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFrontendNodeGroup)(nil)).Elem()
}

func (o InstanceFrontendNodeGroupOutput) ToInstanceFrontendNodeGroupOutput() InstanceFrontendNodeGroupOutput {
	return o
}

func (o InstanceFrontendNodeGroupOutput) ToInstanceFrontendNodeGroupOutputWithContext(ctx context.Context) InstanceFrontendNodeGroupOutput {
	return o
}

// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
func (o InstanceFrontendNodeGroupOutput) Cu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *int { return v.Cu }).(pulumi.IntPtrOutput)
}

// DiskNumber
func (o InstanceFrontendNodeGroupOutput) DiskNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *int { return v.DiskNumber }).(pulumi.IntPtrOutput)
}

// Local SSD instance specifications.
func (o InstanceFrontendNodeGroupOutput) LocalStorageInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *string { return v.LocalStorageInstanceType }).(pulumi.StringPtrOutput)
}

// Resident node number of node group.
func (o InstanceFrontendNodeGroupOutput) ResidentNodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *int { return v.ResidentNodeNumber }).(pulumi.IntPtrOutput)
}

// Compute group specification types include the following:
// - standard
// - ramEnhanced
func (o InstanceFrontendNodeGroupOutput) SpecType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *string { return v.SpecType }).(pulumi.StringPtrOutput)
}

// Performance levels of cloud disks include the following values:
// - pl0: Maximum random read/write IOPS per disk is 10,000.
// - pl1: Maximum random read/write IOPS per disk is 50,000.
// - pl2: Maximum random read/write IOPS per disk is 100,000.
// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
func (o InstanceFrontendNodeGroupOutput) StoragePerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *string { return v.StoragePerformanceLevel }).(pulumi.StringPtrOutput)
}

// Storage size, measured in GiB.
func (o InstanceFrontendNodeGroupOutput) StorageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *int { return v.StorageSize }).(pulumi.IntPtrOutput)
}

// Zone ID.
func (o InstanceFrontendNodeGroupOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceFrontendNodeGroup) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type InstanceFrontendNodeGroupArrayOutput struct{ *pulumi.OutputState }

func (InstanceFrontendNodeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFrontendNodeGroup)(nil)).Elem()
}

func (o InstanceFrontendNodeGroupArrayOutput) ToInstanceFrontendNodeGroupArrayOutput() InstanceFrontendNodeGroupArrayOutput {
	return o
}

func (o InstanceFrontendNodeGroupArrayOutput) ToInstanceFrontendNodeGroupArrayOutputWithContext(ctx context.Context) InstanceFrontendNodeGroupArrayOutput {
	return o
}

func (o InstanceFrontendNodeGroupArrayOutput) Index(i pulumi.IntInput) InstanceFrontendNodeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceFrontendNodeGroup {
		return vs[0].([]InstanceFrontendNodeGroup)[vs[1].(int)]
	}).(InstanceFrontendNodeGroupOutput)
}

type InstanceObserverNodeGroup struct {
	// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
	Cu *int `pulumi:"cu"`
	// DiskNumber
	DiskNumber *int `pulumi:"diskNumber"`
	// Local SSD instance specifications.
	LocalStorageInstanceType *string `pulumi:"localStorageInstanceType"`
	// Resident node number of node group.
	ResidentNodeNumber *int `pulumi:"residentNodeNumber"`
	// Compute group specification types include the following:
	// - standard
	SpecType *string `pulumi:"specType"`
	// Performance levels of cloud disks include the following values:
	// - pl0: Maximum random read/write IOPS per disk is 10,000.
	// - pl1: Maximum random read/write IOPS per disk is 50,000.
	// - pl2: Maximum random read/write IOPS per disk is 100,000.
	// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
	StoragePerformanceLevel *string `pulumi:"storagePerformanceLevel"`
	// Storage size, measured in GiB.
	StorageSize *int `pulumi:"storageSize"`
	// Zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// InstanceObserverNodeGroupInput is an input type that accepts InstanceObserverNodeGroupArgs and InstanceObserverNodeGroupOutput values.
// You can construct a concrete instance of `InstanceObserverNodeGroupInput` via:
//
//	InstanceObserverNodeGroupArgs{...}
type InstanceObserverNodeGroupInput interface {
	pulumi.Input

	ToInstanceObserverNodeGroupOutput() InstanceObserverNodeGroupOutput
	ToInstanceObserverNodeGroupOutputWithContext(context.Context) InstanceObserverNodeGroupOutput
}

type InstanceObserverNodeGroupArgs struct {
	// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
	Cu pulumi.IntPtrInput `pulumi:"cu"`
	// DiskNumber
	DiskNumber pulumi.IntPtrInput `pulumi:"diskNumber"`
	// Local SSD instance specifications.
	LocalStorageInstanceType pulumi.StringPtrInput `pulumi:"localStorageInstanceType"`
	// Resident node number of node group.
	ResidentNodeNumber pulumi.IntPtrInput `pulumi:"residentNodeNumber"`
	// Compute group specification types include the following:
	// - standard
	SpecType pulumi.StringPtrInput `pulumi:"specType"`
	// Performance levels of cloud disks include the following values:
	// - pl0: Maximum random read/write IOPS per disk is 10,000.
	// - pl1: Maximum random read/write IOPS per disk is 50,000.
	// - pl2: Maximum random read/write IOPS per disk is 100,000.
	// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
	StoragePerformanceLevel pulumi.StringPtrInput `pulumi:"storagePerformanceLevel"`
	// Storage size, measured in GiB.
	StorageSize pulumi.IntPtrInput `pulumi:"storageSize"`
	// Zone ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (InstanceObserverNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceObserverNodeGroup)(nil)).Elem()
}

func (i InstanceObserverNodeGroupArgs) ToInstanceObserverNodeGroupOutput() InstanceObserverNodeGroupOutput {
	return i.ToInstanceObserverNodeGroupOutputWithContext(context.Background())
}

func (i InstanceObserverNodeGroupArgs) ToInstanceObserverNodeGroupOutputWithContext(ctx context.Context) InstanceObserverNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceObserverNodeGroupOutput)
}

// InstanceObserverNodeGroupArrayInput is an input type that accepts InstanceObserverNodeGroupArray and InstanceObserverNodeGroupArrayOutput values.
// You can construct a concrete instance of `InstanceObserverNodeGroupArrayInput` via:
//
//	InstanceObserverNodeGroupArray{ InstanceObserverNodeGroupArgs{...} }
type InstanceObserverNodeGroupArrayInput interface {
	pulumi.Input

	ToInstanceObserverNodeGroupArrayOutput() InstanceObserverNodeGroupArrayOutput
	ToInstanceObserverNodeGroupArrayOutputWithContext(context.Context) InstanceObserverNodeGroupArrayOutput
}

type InstanceObserverNodeGroupArray []InstanceObserverNodeGroupInput

func (InstanceObserverNodeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceObserverNodeGroup)(nil)).Elem()
}

func (i InstanceObserverNodeGroupArray) ToInstanceObserverNodeGroupArrayOutput() InstanceObserverNodeGroupArrayOutput {
	return i.ToInstanceObserverNodeGroupArrayOutputWithContext(context.Background())
}

func (i InstanceObserverNodeGroupArray) ToInstanceObserverNodeGroupArrayOutputWithContext(ctx context.Context) InstanceObserverNodeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceObserverNodeGroupArrayOutput)
}

type InstanceObserverNodeGroupOutput struct{ *pulumi.OutputState }

func (InstanceObserverNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceObserverNodeGroup)(nil)).Elem()
}

func (o InstanceObserverNodeGroupOutput) ToInstanceObserverNodeGroupOutput() InstanceObserverNodeGroupOutput {
	return o
}

func (o InstanceObserverNodeGroupOutput) ToInstanceObserverNodeGroupOutputWithContext(ctx context.Context) InstanceObserverNodeGroupOutput {
	return o
}

// Number of CUs. CU (Compute Unit) is the basic measurement unit of the service, where 1 CU = 1 CPU core + 4 GiB memory.
func (o InstanceObserverNodeGroupOutput) Cu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *int { return v.Cu }).(pulumi.IntPtrOutput)
}

// DiskNumber
func (o InstanceObserverNodeGroupOutput) DiskNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *int { return v.DiskNumber }).(pulumi.IntPtrOutput)
}

// Local SSD instance specifications.
func (o InstanceObserverNodeGroupOutput) LocalStorageInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *string { return v.LocalStorageInstanceType }).(pulumi.StringPtrOutput)
}

// Resident node number of node group.
func (o InstanceObserverNodeGroupOutput) ResidentNodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *int { return v.ResidentNodeNumber }).(pulumi.IntPtrOutput)
}

// Compute group specification types include the following:
// - standard
func (o InstanceObserverNodeGroupOutput) SpecType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *string { return v.SpecType }).(pulumi.StringPtrOutput)
}

// Performance levels of cloud disks include the following values:
// - pl0: Maximum random read/write IOPS per disk is 10,000.
// - pl1: Maximum random read/write IOPS per disk is 50,000.
// - pl2: Maximum random read/write IOPS per disk is 100,000.
// - pl3: Maximum random read/write IOPS per disk is 1,000,000.
func (o InstanceObserverNodeGroupOutput) StoragePerformanceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *string { return v.StoragePerformanceLevel }).(pulumi.StringPtrOutput)
}

// Storage size, measured in GiB.
func (o InstanceObserverNodeGroupOutput) StorageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *int { return v.StorageSize }).(pulumi.IntPtrOutput)
}

// Zone ID.
func (o InstanceObserverNodeGroupOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceObserverNodeGroup) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type InstanceObserverNodeGroupArrayOutput struct{ *pulumi.OutputState }

func (InstanceObserverNodeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceObserverNodeGroup)(nil)).Elem()
}

func (o InstanceObserverNodeGroupArrayOutput) ToInstanceObserverNodeGroupArrayOutput() InstanceObserverNodeGroupArrayOutput {
	return o
}

func (o InstanceObserverNodeGroupArrayOutput) ToInstanceObserverNodeGroupArrayOutputWithContext(ctx context.Context) InstanceObserverNodeGroupArrayOutput {
	return o
}

func (o InstanceObserverNodeGroupArrayOutput) Index(i pulumi.IntInput) InstanceObserverNodeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceObserverNodeGroup {
		return vs[0].([]InstanceObserverNodeGroup)[vs[1].(int)]
	}).(InstanceObserverNodeGroupOutput)
}

type InstanceVswitch struct {
	// ID of VSwitch.
	VswitchId string `pulumi:"vswitchId"`
	// Zone ID of VSwitch.
	ZoneId *string `pulumi:"zoneId"`
}

// InstanceVswitchInput is an input type that accepts InstanceVswitchArgs and InstanceVswitchOutput values.
// You can construct a concrete instance of `InstanceVswitchInput` via:
//
//	InstanceVswitchArgs{...}
type InstanceVswitchInput interface {
	pulumi.Input

	ToInstanceVswitchOutput() InstanceVswitchOutput
	ToInstanceVswitchOutputWithContext(context.Context) InstanceVswitchOutput
}

type InstanceVswitchArgs struct {
	// ID of VSwitch.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// Zone ID of VSwitch.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (InstanceVswitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVswitch)(nil)).Elem()
}

func (i InstanceVswitchArgs) ToInstanceVswitchOutput() InstanceVswitchOutput {
	return i.ToInstanceVswitchOutputWithContext(context.Background())
}

func (i InstanceVswitchArgs) ToInstanceVswitchOutputWithContext(ctx context.Context) InstanceVswitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVswitchOutput)
}

// InstanceVswitchArrayInput is an input type that accepts InstanceVswitchArray and InstanceVswitchArrayOutput values.
// You can construct a concrete instance of `InstanceVswitchArrayInput` via:
//
//	InstanceVswitchArray{ InstanceVswitchArgs{...} }
type InstanceVswitchArrayInput interface {
	pulumi.Input

	ToInstanceVswitchArrayOutput() InstanceVswitchArrayOutput
	ToInstanceVswitchArrayOutputWithContext(context.Context) InstanceVswitchArrayOutput
}

type InstanceVswitchArray []InstanceVswitchInput

func (InstanceVswitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceVswitch)(nil)).Elem()
}

func (i InstanceVswitchArray) ToInstanceVswitchArrayOutput() InstanceVswitchArrayOutput {
	return i.ToInstanceVswitchArrayOutputWithContext(context.Background())
}

func (i InstanceVswitchArray) ToInstanceVswitchArrayOutputWithContext(ctx context.Context) InstanceVswitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVswitchArrayOutput)
}

type InstanceVswitchOutput struct{ *pulumi.OutputState }

func (InstanceVswitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVswitch)(nil)).Elem()
}

func (o InstanceVswitchOutput) ToInstanceVswitchOutput() InstanceVswitchOutput {
	return o
}

func (o InstanceVswitchOutput) ToInstanceVswitchOutputWithContext(ctx context.Context) InstanceVswitchOutput {
	return o
}

// ID of VSwitch.
func (o InstanceVswitchOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceVswitch) string { return v.VswitchId }).(pulumi.StringOutput)
}

// Zone ID of VSwitch.
func (o InstanceVswitchOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceVswitch) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type InstanceVswitchArrayOutput struct{ *pulumi.OutputState }

func (InstanceVswitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceVswitch)(nil)).Elem()
}

func (o InstanceVswitchArrayOutput) ToInstanceVswitchArrayOutput() InstanceVswitchArrayOutput {
	return o
}

func (o InstanceVswitchArrayOutput) ToInstanceVswitchArrayOutputWithContext(ctx context.Context) InstanceVswitchArrayOutput {
	return o
}

func (o InstanceVswitchArrayOutput) Index(i pulumi.IntInput) InstanceVswitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceVswitch {
		return vs[0].([]InstanceVswitch)[vs[1].(int)]
	}).(InstanceVswitchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackendNodeGroupInput)(nil)).Elem(), InstanceBackendNodeGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackendNodeGroupArrayInput)(nil)).Elem(), InstanceBackendNodeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceFrontendNodeGroupInput)(nil)).Elem(), InstanceFrontendNodeGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceFrontendNodeGroupArrayInput)(nil)).Elem(), InstanceFrontendNodeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceObserverNodeGroupInput)(nil)).Elem(), InstanceObserverNodeGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceObserverNodeGroupArrayInput)(nil)).Elem(), InstanceObserverNodeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceVswitchInput)(nil)).Elem(), InstanceVswitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceVswitchArrayInput)(nil)).Elem(), InstanceVswitchArray{})
	pulumi.RegisterOutputType(InstanceBackendNodeGroupOutput{})
	pulumi.RegisterOutputType(InstanceBackendNodeGroupArrayOutput{})
	pulumi.RegisterOutputType(InstanceFrontendNodeGroupOutput{})
	pulumi.RegisterOutputType(InstanceFrontendNodeGroupArrayOutput{})
	pulumi.RegisterOutputType(InstanceObserverNodeGroupOutput{})
	pulumi.RegisterOutputType(InstanceObserverNodeGroupArrayOutput{})
	pulumi.RegisterOutputType(InstanceVswitchOutput{})
	pulumi.RegisterOutputType(InstanceVswitchArrayOutput{})
}
