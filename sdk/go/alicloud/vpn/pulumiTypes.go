// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectionBgpConfig struct {
	// specifies whether to enable BGP. Valid values: true and false (default).
	Enable *bool `pulumi:"enable"`
	// the autonomous system number (ASN) on the Alibaba Cloud side.
	// Valid values: 1 to 4294967295. Default value: 45104. You can enter a value in two segments separated by a period (.).
	// Each segment is 16 bits in length. Enter the number in each segment in decimal format.
	// For example, if you enter 123.456, the ASN is 8061384. The ASN is calculated by using the following formula: 123 × 65536 + 456 = 8061384.
	LocalAsn *string `pulumi:"localAsn"`
	// the BGP address on the Alibaba Cloud side. It must be an IP address that falls within the CIDR block of the IPsec tunnel.
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// The negotiation status of Tunnel.
	Status *string `pulumi:"status"`
	// The CIDR block of the IPsec tunnel. The CIDR block must belong to 169.254.0.0/16 and the subnet mask is 30 bits in length.
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// ConnectionBgpConfigInput is an input type that accepts ConnectionBgpConfigArgs and ConnectionBgpConfigOutput values.
// You can construct a concrete instance of `ConnectionBgpConfigInput` via:
//
//	ConnectionBgpConfigArgs{...}
type ConnectionBgpConfigInput interface {
	pulumi.Input

	ToConnectionBgpConfigOutput() ConnectionBgpConfigOutput
	ToConnectionBgpConfigOutputWithContext(context.Context) ConnectionBgpConfigOutput
}

type ConnectionBgpConfigArgs struct {
	// specifies whether to enable BGP. Valid values: true and false (default).
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// the autonomous system number (ASN) on the Alibaba Cloud side.
	// Valid values: 1 to 4294967295. Default value: 45104. You can enter a value in two segments separated by a period (.).
	// Each segment is 16 bits in length. Enter the number in each segment in decimal format.
	// For example, if you enter 123.456, the ASN is 8061384. The ASN is calculated by using the following formula: 123 × 65536 + 456 = 8061384.
	LocalAsn pulumi.StringPtrInput `pulumi:"localAsn"`
	// the BGP address on the Alibaba Cloud side. It must be an IP address that falls within the CIDR block of the IPsec tunnel.
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// The negotiation status of Tunnel.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The CIDR block of the IPsec tunnel. The CIDR block must belong to 169.254.0.0/16 and the subnet mask is 30 bits in length.
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (ConnectionBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionBgpConfig)(nil)).Elem()
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigOutput() ConnectionBgpConfigOutput {
	return i.ToConnectionBgpConfigOutputWithContext(context.Background())
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigOutputWithContext(ctx context.Context) ConnectionBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBgpConfigOutput)
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return i.ToConnectionBgpConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBgpConfigOutput).ToConnectionBgpConfigPtrOutputWithContext(ctx)
}

// ConnectionBgpConfigPtrInput is an input type that accepts ConnectionBgpConfigArgs, ConnectionBgpConfigPtr and ConnectionBgpConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionBgpConfigPtrInput` via:
//
//	        ConnectionBgpConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionBgpConfigPtrInput interface {
	pulumi.Input

	ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput
	ToConnectionBgpConfigPtrOutputWithContext(context.Context) ConnectionBgpConfigPtrOutput
}

type connectionBgpConfigPtrType ConnectionBgpConfigArgs

func ConnectionBgpConfigPtr(v *ConnectionBgpConfigArgs) ConnectionBgpConfigPtrInput {
	return (*connectionBgpConfigPtrType)(v)
}

func (*connectionBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionBgpConfig)(nil)).Elem()
}

func (i *connectionBgpConfigPtrType) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return i.ToConnectionBgpConfigPtrOutputWithContext(context.Background())
}

func (i *connectionBgpConfigPtrType) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBgpConfigPtrOutput)
}

type ConnectionBgpConfigOutput struct{ *pulumi.OutputState }

func (ConnectionBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionBgpConfig)(nil)).Elem()
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigOutput() ConnectionBgpConfigOutput {
	return o
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigOutputWithContext(ctx context.Context) ConnectionBgpConfigOutput {
	return o
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return o.ToConnectionBgpConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionBgpConfig) *ConnectionBgpConfig {
		return &v
	}).(ConnectionBgpConfigPtrOutput)
}

// specifies whether to enable BGP. Valid values: true and false (default).
func (o ConnectionBgpConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// the autonomous system number (ASN) on the Alibaba Cloud side.
// Valid values: 1 to 4294967295. Default value: 45104. You can enter a value in two segments separated by a period (.).
// Each segment is 16 bits in length. Enter the number in each segment in decimal format.
// For example, if you enter 123.456, the ASN is 8061384. The ASN is calculated by using the following formula: 123 × 65536 + 456 = 8061384.
func (o ConnectionBgpConfigOutput) LocalAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.LocalAsn }).(pulumi.StringPtrOutput)
}

// the BGP address on the Alibaba Cloud side. It must be an IP address that falls within the CIDR block of the IPsec tunnel.
func (o ConnectionBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o ConnectionBgpConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block must belong to 169.254.0.0/16 and the subnet mask is 30 bits in length.
func (o ConnectionBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type ConnectionBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionBgpConfig)(nil)).Elem()
}

func (o ConnectionBgpConfigPtrOutput) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return o
}

func (o ConnectionBgpConfigPtrOutput) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return o
}

func (o ConnectionBgpConfigPtrOutput) Elem() ConnectionBgpConfigOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) ConnectionBgpConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionBgpConfig
		return ret
	}).(ConnectionBgpConfigOutput)
}

// specifies whether to enable BGP. Valid values: true and false (default).
func (o ConnectionBgpConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// the autonomous system number (ASN) on the Alibaba Cloud side.
// Valid values: 1 to 4294967295. Default value: 45104. You can enter a value in two segments separated by a period (.).
// Each segment is 16 bits in length. Enter the number in each segment in decimal format.
// For example, if you enter 123.456, the ASN is 8061384. The ASN is calculated by using the following formula: 123 × 65536 + 456 = 8061384.
func (o ConnectionBgpConfigPtrOutput) LocalAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalAsn
	}).(pulumi.StringPtrOutput)
}

// the BGP address on the Alibaba Cloud side. It must be an IP address that falls within the CIDR block of the IPsec tunnel.
func (o ConnectionBgpConfigPtrOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalBgpIp
	}).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o ConnectionBgpConfigPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block must belong to 169.254.0.0/16 and the subnet mask is 30 bits in length.
func (o ConnectionBgpConfigPtrOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.TunnelCidr
	}).(pulumi.StringPtrOutput)
}

type ConnectionHealthCheckConfig struct {
	// the destination IP address configured for health checks.
	Dip *string `pulumi:"dip"`
	// specifies whether to enable health checks. Valid values: true and false. Default value: false.
	Enable *bool `pulumi:"enable"`
	// the time interval of health check retries. Unit: seconds. Default value: 3.
	Interval *int `pulumi:"interval"`
	// the maximum number of health check retries. Default value: 3.
	Retry *int `pulumi:"retry"`
	// the source IP address that is used for health checks.
	Sip *string `pulumi:"sip"`
}

// ConnectionHealthCheckConfigInput is an input type that accepts ConnectionHealthCheckConfigArgs and ConnectionHealthCheckConfigOutput values.
// You can construct a concrete instance of `ConnectionHealthCheckConfigInput` via:
//
//	ConnectionHealthCheckConfigArgs{...}
type ConnectionHealthCheckConfigInput interface {
	pulumi.Input

	ToConnectionHealthCheckConfigOutput() ConnectionHealthCheckConfigOutput
	ToConnectionHealthCheckConfigOutputWithContext(context.Context) ConnectionHealthCheckConfigOutput
}

type ConnectionHealthCheckConfigArgs struct {
	// the destination IP address configured for health checks.
	Dip pulumi.StringPtrInput `pulumi:"dip"`
	// specifies whether to enable health checks. Valid values: true and false. Default value: false.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// the time interval of health check retries. Unit: seconds. Default value: 3.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// the maximum number of health check retries. Default value: 3.
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// the source IP address that is used for health checks.
	Sip pulumi.StringPtrInput `pulumi:"sip"`
}

func (ConnectionHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionHealthCheckConfig)(nil)).Elem()
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigOutput() ConnectionHealthCheckConfigOutput {
	return i.ToConnectionHealthCheckConfigOutputWithContext(context.Background())
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHealthCheckConfigOutput)
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return i.ToConnectionHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHealthCheckConfigOutput).ToConnectionHealthCheckConfigPtrOutputWithContext(ctx)
}

// ConnectionHealthCheckConfigPtrInput is an input type that accepts ConnectionHealthCheckConfigArgs, ConnectionHealthCheckConfigPtr and ConnectionHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionHealthCheckConfigPtrInput` via:
//
//	        ConnectionHealthCheckConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput
	ToConnectionHealthCheckConfigPtrOutputWithContext(context.Context) ConnectionHealthCheckConfigPtrOutput
}

type connectionHealthCheckConfigPtrType ConnectionHealthCheckConfigArgs

func ConnectionHealthCheckConfigPtr(v *ConnectionHealthCheckConfigArgs) ConnectionHealthCheckConfigPtrInput {
	return (*connectionHealthCheckConfigPtrType)(v)
}

func (*connectionHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionHealthCheckConfig)(nil)).Elem()
}

func (i *connectionHealthCheckConfigPtrType) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return i.ToConnectionHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *connectionHealthCheckConfigPtrType) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHealthCheckConfigPtrOutput)
}

type ConnectionHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (ConnectionHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionHealthCheckConfig)(nil)).Elem()
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigOutput() ConnectionHealthCheckConfigOutput {
	return o
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigOutput {
	return o
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return o.ToConnectionHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionHealthCheckConfig) *ConnectionHealthCheckConfig {
		return &v
	}).(ConnectionHealthCheckConfigPtrOutput)
}

// the destination IP address configured for health checks.
func (o ConnectionHealthCheckConfigOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *string { return v.Dip }).(pulumi.StringPtrOutput)
}

// specifies whether to enable health checks. Valid values: true and false. Default value: false.
func (o ConnectionHealthCheckConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// the time interval of health check retries. Unit: seconds. Default value: 3.
func (o ConnectionHealthCheckConfigOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// the maximum number of health check retries. Default value: 3.
func (o ConnectionHealthCheckConfigOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// the source IP address that is used for health checks.
func (o ConnectionHealthCheckConfigOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *string { return v.Sip }).(pulumi.StringPtrOutput)
}

type ConnectionHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionHealthCheckConfig)(nil)).Elem()
}

func (o ConnectionHealthCheckConfigPtrOutput) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return o
}

func (o ConnectionHealthCheckConfigPtrOutput) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return o
}

func (o ConnectionHealthCheckConfigPtrOutput) Elem() ConnectionHealthCheckConfigOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) ConnectionHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionHealthCheckConfig
		return ret
	}).(ConnectionHealthCheckConfigOutput)
}

// the destination IP address configured for health checks.
func (o ConnectionHealthCheckConfigPtrOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Dip
	}).(pulumi.StringPtrOutput)
}

// specifies whether to enable health checks. Valid values: true and false. Default value: false.
func (o ConnectionHealthCheckConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// the time interval of health check retries. Unit: seconds. Default value: 3.
func (o ConnectionHealthCheckConfigPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// the maximum number of health check retries. Default value: 3.
func (o ConnectionHealthCheckConfigPtrOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.IntPtrOutput)
}

// the source IP address that is used for health checks.
func (o ConnectionHealthCheckConfigPtrOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Sip
	}).(pulumi.StringPtrOutput)
}

type ConnectionIkeConfig struct {
	// the authentication algorithm that is used in Phase 1 negotiations. Valid values: md5, sha1, sha2
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// the encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// the SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// the identifier of the VPN gateway. It can contain at most 100 characters. The default value is the IP address of the VPN gateway.
	IkeLocalId *string `pulumi:"ikeLocalId"`
	// the negotiation mode of IKE. Valid values: main and aggressive. Default value: main.
	// - main: This mode offers higher security during negotiations.
	// - aggressive: This mode supports faster negotiations and a higher success rate.
	IkeMode *string `pulumi:"ikeMode"`
	// the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Valid values: group1, group2, group5, and group14. Default value: group2.
	IkePfs *string `pulumi:"ikePfs"`
	// the identifier of the customer gateway. It can contain at most 100 characters. The default value is the IP address of the customer gateway.
	IkeRemoteId *string `pulumi:"ikeRemoteId"`
	// the version of the Internet Key Exchange (IKE) protocol. Valid values: ikev1 and ikev2. Default value: ikev1.
	// Compared with IKEv1, IKEv2 simplifies the security association (SA) negotiation process and provides better support for scenarios with multiple CIDR blocks.
	IkeVersion *string `pulumi:"ikeVersion"`
	// the pre-shared key that is used for identity authentication between the VPN gateway and the on-premises data center. The key must be 1 to 100 characters in length and can contain digits, letters, and the following special characters: ~!\`@#$%^&*()_-+={}[]|;:',.<>/? If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. You can call the DescribeVpnConnection operation to query the pre-shared key that is automatically generated by the system.
	Psk *string `pulumi:"psk"`
}

// ConnectionIkeConfigInput is an input type that accepts ConnectionIkeConfigArgs and ConnectionIkeConfigOutput values.
// You can construct a concrete instance of `ConnectionIkeConfigInput` via:
//
//	ConnectionIkeConfigArgs{...}
type ConnectionIkeConfigInput interface {
	pulumi.Input

	ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput
	ToConnectionIkeConfigOutputWithContext(context.Context) ConnectionIkeConfigOutput
}

type ConnectionIkeConfigArgs struct {
	// the authentication algorithm that is used in Phase 1 negotiations. Valid values: md5, sha1, sha2
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// the encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// the SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// the identifier of the VPN gateway. It can contain at most 100 characters. The default value is the IP address of the VPN gateway.
	IkeLocalId pulumi.StringPtrInput `pulumi:"ikeLocalId"`
	// the negotiation mode of IKE. Valid values: main and aggressive. Default value: main.
	// - main: This mode offers higher security during negotiations.
	// - aggressive: This mode supports faster negotiations and a higher success rate.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Valid values: group1, group2, group5, and group14. Default value: group2.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// the identifier of the customer gateway. It can contain at most 100 characters. The default value is the IP address of the customer gateway.
	IkeRemoteId pulumi.StringPtrInput `pulumi:"ikeRemoteId"`
	// the version of the Internet Key Exchange (IKE) protocol. Valid values: ikev1 and ikev2. Default value: ikev1.
	// Compared with IKEv1, IKEv2 simplifies the security association (SA) negotiation process and provides better support for scenarios with multiple CIDR blocks.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// the pre-shared key that is used for identity authentication between the VPN gateway and the on-premises data center. The key must be 1 to 100 characters in length and can contain digits, letters, and the following special characters: ~!\`@#$%^&*()_-+={}[]|;:',.<>/? If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. You can call the DescribeVpnConnection operation to query the pre-shared key that is automatically generated by the system.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
}

func (ConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIkeConfig)(nil)).Elem()
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput {
	return i.ToConnectionIkeConfigOutputWithContext(context.Background())
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigOutputWithContext(ctx context.Context) ConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigOutput)
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return i.ToConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigOutput).ToConnectionIkeConfigPtrOutputWithContext(ctx)
}

// ConnectionIkeConfigPtrInput is an input type that accepts ConnectionIkeConfigArgs, ConnectionIkeConfigPtr and ConnectionIkeConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionIkeConfigPtrInput` via:
//
//	        ConnectionIkeConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionIkeConfigPtrInput interface {
	pulumi.Input

	ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput
	ToConnectionIkeConfigPtrOutputWithContext(context.Context) ConnectionIkeConfigPtrOutput
}

type connectionIkeConfigPtrType ConnectionIkeConfigArgs

func ConnectionIkeConfigPtr(v *ConnectionIkeConfigArgs) ConnectionIkeConfigPtrInput {
	return (*connectionIkeConfigPtrType)(v)
}

func (*connectionIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIkeConfig)(nil)).Elem()
}

func (i *connectionIkeConfigPtrType) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return i.ToConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i *connectionIkeConfigPtrType) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigPtrOutput)
}

type ConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (ConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIkeConfig)(nil)).Elem()
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput {
	return o
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigOutputWithContext(ctx context.Context) ConnectionIkeConfigOutput {
	return o
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return o.ToConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionIkeConfig) *ConnectionIkeConfig {
		return &v
	}).(ConnectionIkeConfigPtrOutput)
}

// the authentication algorithm that is used in Phase 1 negotiations. Valid values: md5, sha1, sha2
func (o ConnectionIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// the encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
func (o ConnectionIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// the SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
func (o ConnectionIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// the identifier of the VPN gateway. It can contain at most 100 characters. The default value is the IP address of the VPN gateway.
func (o ConnectionIkeConfigOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeLocalId }).(pulumi.StringPtrOutput)
}

// the negotiation mode of IKE. Valid values: main and aggressive. Default value: main.
// - main: This mode offers higher security during negotiations.
// - aggressive: This mode supports faster negotiations and a higher success rate.
func (o ConnectionIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Valid values: group1, group2, group5, and group14. Default value: group2.
func (o ConnectionIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// the identifier of the customer gateway. It can contain at most 100 characters. The default value is the IP address of the customer gateway.
func (o ConnectionIkeConfigOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeRemoteId }).(pulumi.StringPtrOutput)
}

// the version of the Internet Key Exchange (IKE) protocol. Valid values: ikev1 and ikev2. Default value: ikev1.
// Compared with IKEv1, IKEv2 simplifies the security association (SA) negotiation process and provides better support for scenarios with multiple CIDR blocks.
func (o ConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// the pre-shared key that is used for identity authentication between the VPN gateway and the on-premises data center. The key must be 1 to 100 characters in length and can contain digits, letters, and the following special characters: ~!\`@#$%^&*()_-+={}[]|;:',.<>/? If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. You can call the DescribeVpnConnection operation to query the pre-shared key that is automatically generated by the system.
func (o ConnectionIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

type ConnectionIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIkeConfig)(nil)).Elem()
}

func (o ConnectionIkeConfigPtrOutput) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return o
}

func (o ConnectionIkeConfigPtrOutput) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return o
}

func (o ConnectionIkeConfigPtrOutput) Elem() ConnectionIkeConfigOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) ConnectionIkeConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionIkeConfig
		return ret
	}).(ConnectionIkeConfigOutput)
}

// the authentication algorithm that is used in Phase 1 negotiations. Valid values: md5, sha1, sha2
func (o ConnectionIkeConfigPtrOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlg
	}).(pulumi.StringPtrOutput)
}

// the encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
func (o ConnectionIkeConfigPtrOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeEncAlg
	}).(pulumi.StringPtrOutput)
}

// the SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
func (o ConnectionIkeConfigPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// the identifier of the VPN gateway. It can contain at most 100 characters. The default value is the IP address of the VPN gateway.
func (o ConnectionIkeConfigPtrOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeLocalId
	}).(pulumi.StringPtrOutput)
}

// the negotiation mode of IKE. Valid values: main and aggressive. Default value: main.
// - main: This mode offers higher security during negotiations.
// - aggressive: This mode supports faster negotiations and a higher success rate.
func (o ConnectionIkeConfigPtrOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeMode
	}).(pulumi.StringPtrOutput)
}

// the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Valid values: group1, group2, group5, and group14. Default value: group2.
func (o ConnectionIkeConfigPtrOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkePfs
	}).(pulumi.StringPtrOutput)
}

// the identifier of the customer gateway. It can contain at most 100 characters. The default value is the IP address of the customer gateway.
func (o ConnectionIkeConfigPtrOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeRemoteId
	}).(pulumi.StringPtrOutput)
}

// the version of the Internet Key Exchange (IKE) protocol. Valid values: ikev1 and ikev2. Default value: ikev1.
// Compared with IKEv1, IKEv2 simplifies the security association (SA) negotiation process and provides better support for scenarios with multiple CIDR blocks.
func (o ConnectionIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// the pre-shared key that is used for identity authentication between the VPN gateway and the on-premises data center. The key must be 1 to 100 characters in length and can contain digits, letters, and the following special characters: ~!\`@#$%^&*()_-+={}[]|;:',.<>/? If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. You can call the DescribeVpnConnection operation to query the pre-shared key that is automatically generated by the system.
func (o ConnectionIkeConfigPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

type ConnectionIpsecConfig struct {
	// the authentication algorithm that is used in Phase 2 negotiations. Valid values: md5, sha1, sha256, sha384, and sha512. Default value: md5.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// the encryption algorithm that is used in Phase 2 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// the SA lifetime that is determined by Phase 2 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// the DH key exchange algorithm that is used in Phase 2 negotiations. Valid values: disabled, group1, group2, group5, and group14. Default value: group2.
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// ConnectionIpsecConfigInput is an input type that accepts ConnectionIpsecConfigArgs and ConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `ConnectionIpsecConfigInput` via:
//
//	ConnectionIpsecConfigArgs{...}
type ConnectionIpsecConfigInput interface {
	pulumi.Input

	ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput
	ToConnectionIpsecConfigOutputWithContext(context.Context) ConnectionIpsecConfigOutput
}

type ConnectionIpsecConfigArgs struct {
	// the authentication algorithm that is used in Phase 2 negotiations. Valid values: md5, sha1, sha256, sha384, and sha512. Default value: md5.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// the encryption algorithm that is used in Phase 2 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// the SA lifetime that is determined by Phase 2 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// the DH key exchange algorithm that is used in Phase 2 negotiations. Valid values: disabled, group1, group2, group5, and group14. Default value: group2.
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (ConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIpsecConfig)(nil)).Elem()
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput {
	return i.ToConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigOutputWithContext(ctx context.Context) ConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigOutput)
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return i.ToConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigOutput).ToConnectionIpsecConfigPtrOutputWithContext(ctx)
}

// ConnectionIpsecConfigPtrInput is an input type that accepts ConnectionIpsecConfigArgs, ConnectionIpsecConfigPtr and ConnectionIpsecConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionIpsecConfigPtrInput` via:
//
//	        ConnectionIpsecConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionIpsecConfigPtrInput interface {
	pulumi.Input

	ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput
	ToConnectionIpsecConfigPtrOutputWithContext(context.Context) ConnectionIpsecConfigPtrOutput
}

type connectionIpsecConfigPtrType ConnectionIpsecConfigArgs

func ConnectionIpsecConfigPtr(v *ConnectionIpsecConfigArgs) ConnectionIpsecConfigPtrInput {
	return (*connectionIpsecConfigPtrType)(v)
}

func (*connectionIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIpsecConfig)(nil)).Elem()
}

func (i *connectionIpsecConfigPtrType) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return i.ToConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *connectionIpsecConfigPtrType) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigPtrOutput)
}

type ConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (ConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIpsecConfig)(nil)).Elem()
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput {
	return o
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigOutputWithContext(ctx context.Context) ConnectionIpsecConfigOutput {
	return o
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return o.ToConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionIpsecConfig) *ConnectionIpsecConfig {
		return &v
	}).(ConnectionIpsecConfigPtrOutput)
}

// the authentication algorithm that is used in Phase 2 negotiations. Valid values: md5, sha1, sha256, sha384, and sha512. Default value: md5.
func (o ConnectionIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// the encryption algorithm that is used in Phase 2 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
func (o ConnectionIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// the SA lifetime that is determined by Phase 2 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
func (o ConnectionIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// the DH key exchange algorithm that is used in Phase 2 negotiations. Valid values: disabled, group1, group2, group5, and group14. Default value: group2.
func (o ConnectionIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type ConnectionIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIpsecConfig)(nil)).Elem()
}

func (o ConnectionIpsecConfigPtrOutput) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return o
}

func (o ConnectionIpsecConfigPtrOutput) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return o
}

func (o ConnectionIpsecConfigPtrOutput) Elem() ConnectionIpsecConfigOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) ConnectionIpsecConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionIpsecConfig
		return ret
	}).(ConnectionIpsecConfigOutput)
}

// the authentication algorithm that is used in Phase 2 negotiations. Valid values: md5, sha1, sha256, sha384, and sha512. Default value: md5.
func (o ConnectionIpsecConfigPtrOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecAuthAlg
	}).(pulumi.StringPtrOutput)
}

// the encryption algorithm that is used in Phase 2 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
func (o ConnectionIpsecConfigPtrOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecEncAlg
	}).(pulumi.StringPtrOutput)
}

// the SA lifetime that is determined by Phase 2 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
func (o ConnectionIpsecConfigPtrOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.IpsecLifetime
	}).(pulumi.IntPtrOutput)
}

// the DH key exchange algorithm that is used in Phase 2 negotiations. Valid values: disabled, group1, group2, group5, and group14. Default value: group2.
func (o ConnectionIpsecConfigPtrOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecPfs
	}).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecification struct {
	// The ID of the customer gateway in Tunnel.
	CustomerGatewayId *string `pulumi:"customerGatewayId"`
	// Wether enable Dpd detection.
	EnableDpd *bool `pulumi:"enableDpd"`
	// enable nat traversal.
	EnableNatTraversal *bool `pulumi:"enableNatTraversal"`
	// The local internet IP in Tunnel.
	InternetIp *string `pulumi:"internetIp"`
	// The role of Tunnel.
	Role *string `pulumi:"role"`
	// The state of Tunnel.
	State *string `pulumi:"state"`
	// The negotiation status of Tunnel.
	Status *string `pulumi:"status"`
	// The bgp config of Tunnel. See `tunnelBgpConfig` below.
	TunnelBgpConfig *ConnectionTunnelOptionsSpecificationTunnelBgpConfig `pulumi:"tunnelBgpConfig"`
	// The tunnel ID of IPsec-VPN connection.
	TunnelId *string `pulumi:"tunnelId"`
	// The configuration of Phase 1 negotiations in Tunnel. See `tunnelIkeConfig` below.
	TunnelIkeConfig *ConnectionTunnelOptionsSpecificationTunnelIkeConfig `pulumi:"tunnelIkeConfig"`
	// IPsec configuration in Tunnel. See `tunnelIpsecConfig` below.
	TunnelIpsecConfig *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig `pulumi:"tunnelIpsecConfig"`
	// The zoneNo of tunnel.
	ZoneNo *string `pulumi:"zoneNo"`
}

// ConnectionTunnelOptionsSpecificationInput is an input type that accepts ConnectionTunnelOptionsSpecificationArgs and ConnectionTunnelOptionsSpecificationOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationInput` via:
//
//	ConnectionTunnelOptionsSpecificationArgs{...}
type ConnectionTunnelOptionsSpecificationInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationOutput() ConnectionTunnelOptionsSpecificationOutput
	ToConnectionTunnelOptionsSpecificationOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationOutput
}

type ConnectionTunnelOptionsSpecificationArgs struct {
	// The ID of the customer gateway in Tunnel.
	CustomerGatewayId pulumi.StringPtrInput `pulumi:"customerGatewayId"`
	// Wether enable Dpd detection.
	EnableDpd pulumi.BoolPtrInput `pulumi:"enableDpd"`
	// enable nat traversal.
	EnableNatTraversal pulumi.BoolPtrInput `pulumi:"enableNatTraversal"`
	// The local internet IP in Tunnel.
	InternetIp pulumi.StringPtrInput `pulumi:"internetIp"`
	// The role of Tunnel.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The state of Tunnel.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The negotiation status of Tunnel.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The bgp config of Tunnel. See `tunnelBgpConfig` below.
	TunnelBgpConfig ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrInput `pulumi:"tunnelBgpConfig"`
	// The tunnel ID of IPsec-VPN connection.
	TunnelId pulumi.StringPtrInput `pulumi:"tunnelId"`
	// The configuration of Phase 1 negotiations in Tunnel. See `tunnelIkeConfig` below.
	TunnelIkeConfig ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrInput `pulumi:"tunnelIkeConfig"`
	// IPsec configuration in Tunnel. See `tunnelIpsecConfig` below.
	TunnelIpsecConfig ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrInput `pulumi:"tunnelIpsecConfig"`
	// The zoneNo of tunnel.
	ZoneNo pulumi.StringPtrInput `pulumi:"zoneNo"`
}

func (ConnectionTunnelOptionsSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (i ConnectionTunnelOptionsSpecificationArgs) ToConnectionTunnelOptionsSpecificationOutput() ConnectionTunnelOptionsSpecificationOutput {
	return i.ToConnectionTunnelOptionsSpecificationOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationArgs) ToConnectionTunnelOptionsSpecificationOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationOutput)
}

// ConnectionTunnelOptionsSpecificationArrayInput is an input type that accepts ConnectionTunnelOptionsSpecificationArray and ConnectionTunnelOptionsSpecificationArrayOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationArrayInput` via:
//
//	ConnectionTunnelOptionsSpecificationArray{ ConnectionTunnelOptionsSpecificationArgs{...} }
type ConnectionTunnelOptionsSpecificationArrayInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationArrayOutput() ConnectionTunnelOptionsSpecificationArrayOutput
	ToConnectionTunnelOptionsSpecificationArrayOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationArrayOutput
}

type ConnectionTunnelOptionsSpecificationArray []ConnectionTunnelOptionsSpecificationInput

func (ConnectionTunnelOptionsSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (i ConnectionTunnelOptionsSpecificationArray) ToConnectionTunnelOptionsSpecificationArrayOutput() ConnectionTunnelOptionsSpecificationArrayOutput {
	return i.ToConnectionTunnelOptionsSpecificationArrayOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationArray) ToConnectionTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationArrayOutput)
}

type ConnectionTunnelOptionsSpecificationOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationOutput) ToConnectionTunnelOptionsSpecificationOutput() ConnectionTunnelOptionsSpecificationOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationOutput) ToConnectionTunnelOptionsSpecificationOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationOutput {
	return o
}

// The ID of the customer gateway in Tunnel.
func (o ConnectionTunnelOptionsSpecificationOutput) CustomerGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.CustomerGatewayId }).(pulumi.StringPtrOutput)
}

// Wether enable Dpd detection.
func (o ConnectionTunnelOptionsSpecificationOutput) EnableDpd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *bool { return v.EnableDpd }).(pulumi.BoolPtrOutput)
}

// enable nat traversal.
func (o ConnectionTunnelOptionsSpecificationOutput) EnableNatTraversal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *bool { return v.EnableNatTraversal }).(pulumi.BoolPtrOutput)
}

// The local internet IP in Tunnel.
func (o ConnectionTunnelOptionsSpecificationOutput) InternetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.InternetIp }).(pulumi.StringPtrOutput)
}

// The role of Tunnel.
func (o ConnectionTunnelOptionsSpecificationOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The state of Tunnel.
func (o ConnectionTunnelOptionsSpecificationOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o ConnectionTunnelOptionsSpecificationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The bgp config of Tunnel. See `tunnelBgpConfig` below.
func (o ConnectionTunnelOptionsSpecificationOutput) TunnelBgpConfig() ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *ConnectionTunnelOptionsSpecificationTunnelBgpConfig {
		return v.TunnelBgpConfig
	}).(ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput)
}

// The tunnel ID of IPsec-VPN connection.
func (o ConnectionTunnelOptionsSpecificationOutput) TunnelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.TunnelId }).(pulumi.StringPtrOutput)
}

// The configuration of Phase 1 negotiations in Tunnel. See `tunnelIkeConfig` below.
func (o ConnectionTunnelOptionsSpecificationOutput) TunnelIkeConfig() ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *ConnectionTunnelOptionsSpecificationTunnelIkeConfig {
		return v.TunnelIkeConfig
	}).(ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput)
}

// IPsec configuration in Tunnel. See `tunnelIpsecConfig` below.
func (o ConnectionTunnelOptionsSpecificationOutput) TunnelIpsecConfig() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig {
		return v.TunnelIpsecConfig
	}).(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput)
}

// The zoneNo of tunnel.
func (o ConnectionTunnelOptionsSpecificationOutput) ZoneNo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecification) *string { return v.ZoneNo }).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecificationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationArrayOutput) ToConnectionTunnelOptionsSpecificationArrayOutput() ConnectionTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationArrayOutput) ToConnectionTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationArrayOutput) Index(i pulumi.IntInput) ConnectionTunnelOptionsSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionTunnelOptionsSpecification {
		return vs[0].([]ConnectionTunnelOptionsSpecification)[vs[1].(int)]
	}).(ConnectionTunnelOptionsSpecificationOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelBgpConfig struct {
	// Whether BGP function is turned on.
	BgpStatus  *string `pulumi:"bgpStatus"`
	LocalAsn   *string `pulumi:"localAsn"`
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// Peer asn.
	PeerAsn *string `pulumi:"peerAsn"`
	// Peer bgp ip.
	PeerBgpIp  *string `pulumi:"peerBgpIp"`
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// ConnectionTunnelOptionsSpecificationTunnelBgpConfigInput is an input type that accepts ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs and ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationTunnelBgpConfigInput` via:
//
//	ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs{...}
type ConnectionTunnelOptionsSpecificationTunnelBgpConfigInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput
	ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput
}

type ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs struct {
	// Whether BGP function is turned on.
	BgpStatus  pulumi.StringPtrInput `pulumi:"bgpStatus"`
	LocalAsn   pulumi.StringPtrInput `pulumi:"localAsn"`
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// Peer asn.
	PeerAsn pulumi.StringPtrInput `pulumi:"peerAsn"`
	// Peer bgp ip.
	PeerBgpIp  pulumi.StringPtrInput `pulumi:"peerBgpIp"`
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (i ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

func (i ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput).ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx)
}

// ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrInput is an input type that accepts ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs, ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtr and ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrInput` via:
//
//	        ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput
	ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput
}

type connectionTunnelOptionsSpecificationTunnelBgpConfigPtrType ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs

func ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtr(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrInput {
	return (*connectionTunnelOptionsSpecificationTunnelBgpConfigPtrType)(v)
}

func (*connectionTunnelOptionsSpecificationTunnelBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (i *connectionTunnelOptionsSpecificationTunnelBgpConfigPtrType) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Background())
}

func (i *connectionTunnelOptionsSpecificationTunnelBgpConfigPtrType) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o.ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *ConnectionTunnelOptionsSpecificationTunnelBgpConfig {
		return &v
	}).(ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput)
}

// Whether BGP function is turned on.
func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) BgpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.BgpStatus }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.LocalAsn }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// Peer asn.
func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.PeerAsn }).(pulumi.StringPtrOutput)
}

// Peer bgp ip.
func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.PeerBgpIp }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) ToConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) Elem() ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) ConnectionTunnelOptionsSpecificationTunnelBgpConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionTunnelOptionsSpecificationTunnelBgpConfig
		return ret
	}).(ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

// Whether BGP function is turned on.
func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) BgpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.BgpStatus
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) LocalAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalAsn
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalBgpIp
	}).(pulumi.StringPtrOutput)
}

// Peer asn.
func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) PeerAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PeerAsn
	}).(pulumi.StringPtrOutput)
}

// Peer bgp ip.
func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) PeerBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PeerBgpIp
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.TunnelCidr
	}).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelIkeConfig struct {
	IkeAuthAlg  *string `pulumi:"ikeAuthAlg"`
	IkeEncAlg   *string `pulumi:"ikeEncAlg"`
	IkeLifetime *int    `pulumi:"ikeLifetime"`
	IkeMode     *string `pulumi:"ikeMode"`
	IkePfs      *string `pulumi:"ikePfs"`
	IkeVersion  *string `pulumi:"ikeVersion"`
	// The identifier of the tunnel on the Alibaba Cloud side, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the tunnel.
	// LocalId supports fully qualified domain names (FQDNs). If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
	LocalId *string `pulumi:"localId"`
	Psk     *string `pulumi:"psk"`
	// The identifier of the tunnel peer, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the customer gateway that is associated with the tunnel.
	// RemoteId supports FQDNs. If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
	RemoteId *string `pulumi:"remoteId"`
}

// ConnectionTunnelOptionsSpecificationTunnelIkeConfigInput is an input type that accepts ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs and ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationTunnelIkeConfigInput` via:
//
//	ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs{...}
type ConnectionTunnelOptionsSpecificationTunnelIkeConfigInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput
	ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput
}

type ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs struct {
	IkeAuthAlg  pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	IkeEncAlg   pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	IkeLifetime pulumi.IntPtrInput    `pulumi:"ikeLifetime"`
	IkeMode     pulumi.StringPtrInput `pulumi:"ikeMode"`
	IkePfs      pulumi.StringPtrInput `pulumi:"ikePfs"`
	IkeVersion  pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The identifier of the tunnel on the Alibaba Cloud side, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the tunnel.
	// LocalId supports fully qualified domain names (FQDNs). If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	Psk     pulumi.StringPtrInput `pulumi:"psk"`
	// The identifier of the tunnel peer, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the customer gateway that is associated with the tunnel.
	// RemoteId supports FQDNs. If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
}

func (ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (i ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

func (i ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput).ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx)
}

// ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrInput is an input type that accepts ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs, ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtr and ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrInput` via:
//
//	        ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput
	ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput
}

type connectionTunnelOptionsSpecificationTunnelIkeConfigPtrType ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs

func ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtr(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrInput {
	return (*connectionTunnelOptionsSpecificationTunnelIkeConfigPtrType)(v)
}

func (*connectionTunnelOptionsSpecificationTunnelIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (i *connectionTunnelOptionsSpecificationTunnelIkeConfigPtrType) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Background())
}

func (i *connectionTunnelOptionsSpecificationTunnelIkeConfigPtrType) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o.ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *ConnectionTunnelOptionsSpecificationTunnelIkeConfig {
		return &v
	}).(ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identifier of the tunnel on the Alibaba Cloud side, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the tunnel.
// LocalId supports fully qualified domain names (FQDNs). If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

// The identifier of the tunnel peer, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the customer gateway that is associated with the tunnel.
// RemoteId supports FQDNs. If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) ToConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) Elem() ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) ConnectionTunnelOptionsSpecificationTunnelIkeConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionTunnelOptionsSpecificationTunnelIkeConfig
		return ret
	}).(ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlg
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeEncAlg
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeMode
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkePfs
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// The identifier of the tunnel on the Alibaba Cloud side, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the tunnel.
// LocalId supports fully qualified domain names (FQDNs). If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

// The identifier of the tunnel peer, which is used in Phase 1 negotiations. It can contain at most 100 characters. The default value is the IP address of the customer gateway that is associated with the tunnel.
// RemoteId supports FQDNs. If you use an FQDN, we recommend that you set the negotiation mode to aggressive.
func (o ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteId
	}).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelIpsecConfig struct {
	IpsecAuthAlg  *string `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg   *string `pulumi:"ipsecEncAlg"`
	IpsecLifetime *int    `pulumi:"ipsecLifetime"`
	IpsecPfs      *string `pulumi:"ipsecPfs"`
}

// ConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput is an input type that accepts ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs and ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput` via:
//
//	ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs{...}
type ConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput
	ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput
}

type ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs struct {
	IpsecAuthAlg  pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg   pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	IpsecLifetime pulumi.IntPtrInput    `pulumi:"ipsecLifetime"`
	IpsecPfs      pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (i ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

func (i ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput).ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx)
}

// ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrInput is an input type that accepts ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs, ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtr and ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrInput` via:
//
//	        ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrInput interface {
	pulumi.Input

	ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput
	ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput
}

type connectionTunnelOptionsSpecificationTunnelIpsecConfigPtrType ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs

func ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtr(v *ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrInput {
	return (*connectionTunnelOptionsSpecificationTunnelIpsecConfigPtrType)(v)
}

func (*connectionTunnelOptionsSpecificationTunnelIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (i *connectionTunnelOptionsSpecificationTunnelIpsecConfigPtrType) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return i.ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *connectionTunnelOptionsSpecificationTunnelIpsecConfigPtrType) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o.ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig {
		return &v
	}).(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) ToConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) Elem() ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) ConnectionTunnelOptionsSpecificationTunnelIpsecConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionTunnelOptionsSpecificationTunnelIpsecConfig
		return ret
	}).(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecAuthAlg
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecEncAlg
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.IpsecLifetime
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTunnelOptionsSpecificationTunnelIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecPfs
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentBgpConfig struct {
	// Whether to enable the BGP function. Valid values: true or false (default).
	Enable *bool `pulumi:"enable"`
	// The autonomous system number on the Alibaba Cloud side. The value range of autonomous system number is 1~4294967295. Default value: 45104
	LocalAsn *int `pulumi:"localAsn"`
	// The BGP address on the Alibaba Cloud side. This address is an IP address in the IPsec tunnel network segment.
	// - Before adding the BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function. For more information, see BGP Dynamic Routing Bulletin.
	// - We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. Please refer to the documentation for the private number range of the autonomous system number.
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// The negotiation status of Tunnel.
	Status *string `pulumi:"status"`
	// IPsec tunnel network segment. This network segment must be a network segment with a mask length of 30 within 169.254.0.0/16
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// GatewayVpnAttachmentBgpConfigInput is an input type that accepts GatewayVpnAttachmentBgpConfigArgs and GatewayVpnAttachmentBgpConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentBgpConfigInput` via:
//
//	GatewayVpnAttachmentBgpConfigArgs{...}
type GatewayVpnAttachmentBgpConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentBgpConfigOutput() GatewayVpnAttachmentBgpConfigOutput
	ToGatewayVpnAttachmentBgpConfigOutputWithContext(context.Context) GatewayVpnAttachmentBgpConfigOutput
}

type GatewayVpnAttachmentBgpConfigArgs struct {
	// Whether to enable the BGP function. Valid values: true or false (default).
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The autonomous system number on the Alibaba Cloud side. The value range of autonomous system number is 1~4294967295. Default value: 45104
	LocalAsn pulumi.IntPtrInput `pulumi:"localAsn"`
	// The BGP address on the Alibaba Cloud side. This address is an IP address in the IPsec tunnel network segment.
	// - Before adding the BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function. For more information, see BGP Dynamic Routing Bulletin.
	// - We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. Please refer to the documentation for the private number range of the autonomous system number.
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// The negotiation status of Tunnel.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// IPsec tunnel network segment. This network segment must be a network segment with a mask length of 30 within 169.254.0.0/16
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (GatewayVpnAttachmentBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigOutput() GatewayVpnAttachmentBgpConfigOutput {
	return i.ToGatewayVpnAttachmentBgpConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentBgpConfigOutput)
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return i.ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentBgpConfigOutput).ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentBgpConfigPtrInput is an input type that accepts GatewayVpnAttachmentBgpConfigArgs, GatewayVpnAttachmentBgpConfigPtr and GatewayVpnAttachmentBgpConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentBgpConfigPtrInput` via:
//
//	        GatewayVpnAttachmentBgpConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentBgpConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput
	ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentBgpConfigPtrOutput
}

type gatewayVpnAttachmentBgpConfigPtrType GatewayVpnAttachmentBgpConfigArgs

func GatewayVpnAttachmentBgpConfigPtr(v *GatewayVpnAttachmentBgpConfigArgs) GatewayVpnAttachmentBgpConfigPtrInput {
	return (*gatewayVpnAttachmentBgpConfigPtrType)(v)
}

func (*gatewayVpnAttachmentBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentBgpConfigPtrType) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return i.ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentBgpConfigPtrType) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentBgpConfigPtrOutput)
}

type GatewayVpnAttachmentBgpConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigOutput() GatewayVpnAttachmentBgpConfigOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return o.ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentBgpConfig) *GatewayVpnAttachmentBgpConfig {
		return &v
	}).(GatewayVpnAttachmentBgpConfigPtrOutput)
}

// Whether to enable the BGP function. Valid values: true or false (default).
func (o GatewayVpnAttachmentBgpConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The autonomous system number on the Alibaba Cloud side. The value range of autonomous system number is 1~4294967295. Default value: 45104
func (o GatewayVpnAttachmentBgpConfigOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *int { return v.LocalAsn }).(pulumi.IntPtrOutput)
}

// The BGP address on the Alibaba Cloud side. This address is an IP address in the IPsec tunnel network segment.
// - Before adding the BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function. For more information, see BGP Dynamic Routing Bulletin.
// - We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. Please refer to the documentation for the private number range of the autonomous system number.
func (o GatewayVpnAttachmentBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o GatewayVpnAttachmentBgpConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// IPsec tunnel network segment. This network segment must be a network segment with a mask length of 30 within 169.254.0.0/16
func (o GatewayVpnAttachmentBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentBgpConfigPtrOutput) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigPtrOutput) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigPtrOutput) Elem() GatewayVpnAttachmentBgpConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) GatewayVpnAttachmentBgpConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentBgpConfig
		return ret
	}).(GatewayVpnAttachmentBgpConfigOutput)
}

// Whether to enable the BGP function. Valid values: true or false (default).
func (o GatewayVpnAttachmentBgpConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The autonomous system number on the Alibaba Cloud side. The value range of autonomous system number is 1~4294967295. Default value: 45104
func (o GatewayVpnAttachmentBgpConfigPtrOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalAsn
	}).(pulumi.IntPtrOutput)
}

// The BGP address on the Alibaba Cloud side. This address is an IP address in the IPsec tunnel network segment.
// - Before adding the BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function. For more information, see BGP Dynamic Routing Bulletin.
// - We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. Please refer to the documentation for the private number range of the autonomous system number.
func (o GatewayVpnAttachmentBgpConfigPtrOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalBgpIp
	}).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o GatewayVpnAttachmentBgpConfigPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// IPsec tunnel network segment. This network segment must be a network segment with a mask length of 30 within 169.254.0.0/16
func (o GatewayVpnAttachmentBgpConfigPtrOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.TunnelCidr
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentHealthCheckConfig struct {
	// Target IP.
	Dip *string `pulumi:"dip"`
	// Whether health check is enabled:-`false`: not enabled. - `true`: enabled.
	Enable *bool `pulumi:"enable"`
	// The health check retry interval, in seconds.
	Interval *int `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails
	Policy *string `pulumi:"policy"`
	// Number of retries for health check.
	Retry *int `pulumi:"retry"`
	// SOURCE IP.
	Sip *string `pulumi:"sip"`
	// The negotiation status of Tunnel.
	Status *string `pulumi:"status"`
}

// GatewayVpnAttachmentHealthCheckConfigInput is an input type that accepts GatewayVpnAttachmentHealthCheckConfigArgs and GatewayVpnAttachmentHealthCheckConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentHealthCheckConfigInput` via:
//
//	GatewayVpnAttachmentHealthCheckConfigArgs{...}
type GatewayVpnAttachmentHealthCheckConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentHealthCheckConfigOutput() GatewayVpnAttachmentHealthCheckConfigOutput
	ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(context.Context) GatewayVpnAttachmentHealthCheckConfigOutput
}

type GatewayVpnAttachmentHealthCheckConfigArgs struct {
	// Target IP.
	Dip pulumi.StringPtrInput `pulumi:"dip"`
	// Whether health check is enabled:-`false`: not enabled. - `true`: enabled.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The health check retry interval, in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Number of retries for health check.
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// SOURCE IP.
	Sip pulumi.StringPtrInput `pulumi:"sip"`
	// The negotiation status of Tunnel.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GatewayVpnAttachmentHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigOutput() GatewayVpnAttachmentHealthCheckConfigOutput {
	return i.ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentHealthCheckConfigOutput)
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return i.ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentHealthCheckConfigOutput).ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentHealthCheckConfigPtrInput is an input type that accepts GatewayVpnAttachmentHealthCheckConfigArgs, GatewayVpnAttachmentHealthCheckConfigPtr and GatewayVpnAttachmentHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentHealthCheckConfigPtrInput` via:
//
//	        GatewayVpnAttachmentHealthCheckConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput
	ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput
}

type gatewayVpnAttachmentHealthCheckConfigPtrType GatewayVpnAttachmentHealthCheckConfigArgs

func GatewayVpnAttachmentHealthCheckConfigPtr(v *GatewayVpnAttachmentHealthCheckConfigArgs) GatewayVpnAttachmentHealthCheckConfigPtrInput {
	return (*gatewayVpnAttachmentHealthCheckConfigPtrType)(v)
}

func (*gatewayVpnAttachmentHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentHealthCheckConfigPtrType) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return i.ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentHealthCheckConfigPtrType) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentHealthCheckConfigPtrOutput)
}

type GatewayVpnAttachmentHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigOutput() GatewayVpnAttachmentHealthCheckConfigOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o.ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentHealthCheckConfig) *GatewayVpnAttachmentHealthCheckConfig {
		return &v
	}).(GatewayVpnAttachmentHealthCheckConfigPtrOutput)
}

// Target IP.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Dip }).(pulumi.StringPtrOutput)
}

// Whether health check is enabled:-`false`: not enabled. - `true`: enabled.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The health check retry interval, in seconds.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Whether to revoke the published route when the health check fails
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Number of retries for health check.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// SOURCE IP.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Sip }).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Elem() GatewayVpnAttachmentHealthCheckConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) GatewayVpnAttachmentHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentHealthCheckConfig
		return ret
	}).(GatewayVpnAttachmentHealthCheckConfigOutput)
}

// Target IP.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Dip
	}).(pulumi.StringPtrOutput)
}

// Whether health check is enabled:-`false`: not enabled. - `true`: enabled.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The health check retry interval, in seconds.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Whether to revoke the published route when the health check fails
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Number of retries for health check.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.IntPtrOutput)
}

// SOURCE IP.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Sip
	}).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIkeConfig struct {
	// The authentication algorithm negotiated in the first stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: md5.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// The SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// IKE mode, the negotiation mode. Valid values: main and aggressive. Default value: main.
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used in the first stage negotiation. Valid values: group1, group2, group5, or group14. Default value: group2.
	IkePfs *string `pulumi:"ikePfs"`
	// The version of the IKE protocol. Value: ikev1 or ikev2. Default value: ikev1.
	IkeVersion *string `pulumi:"ikeVersion"`
	// The identifier on the Alibaba Cloud side of the IPsec connection. The length is limited to 100 characters. The default value is leftId-not-exist
	LocalId *string `pulumi:"localId"`
	// A pre-shared key for authentication between the VPN gateway and the local data center. The key length is 1~100 characters.
	// - If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key.
	// - The pre-shared key of the IPsec-VPN connection must be the same as the authentication key of the on-premises data center. Otherwise, connections between the on-premises data center and the VPN gateway cannot be established.
	Psk *string `pulumi:"psk"`
	// The identifier of the IPsec connection to the local data center. The length is limited to 100 characters. The default value is the IP address of the user gateway.
	RemoteId *string `pulumi:"remoteId"`
}

// GatewayVpnAttachmentIkeConfigInput is an input type that accepts GatewayVpnAttachmentIkeConfigArgs and GatewayVpnAttachmentIkeConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIkeConfigInput` via:
//
//	GatewayVpnAttachmentIkeConfigArgs{...}
type GatewayVpnAttachmentIkeConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIkeConfigOutput() GatewayVpnAttachmentIkeConfigOutput
	ToGatewayVpnAttachmentIkeConfigOutputWithContext(context.Context) GatewayVpnAttachmentIkeConfigOutput
}

type GatewayVpnAttachmentIkeConfigArgs struct {
	// The authentication algorithm negotiated in the first stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: md5.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// The SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// IKE mode, the negotiation mode. Valid values: main and aggressive. Default value: main.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used in the first stage negotiation. Valid values: group1, group2, group5, or group14. Default value: group2.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The version of the IKE protocol. Value: ikev1 or ikev2. Default value: ikev1.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The identifier on the Alibaba Cloud side of the IPsec connection. The length is limited to 100 characters. The default value is leftId-not-exist
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// A pre-shared key for authentication between the VPN gateway and the local data center. The key length is 1~100 characters.
	// - If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key.
	// - The pre-shared key of the IPsec-VPN connection must be the same as the authentication key of the on-premises data center. Otherwise, connections between the on-premises data center and the VPN gateway cannot be established.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
	// The identifier of the IPsec connection to the local data center. The length is limited to 100 characters. The default value is the IP address of the user gateway.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
}

func (GatewayVpnAttachmentIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigOutput() GatewayVpnAttachmentIkeConfigOutput {
	return i.ToGatewayVpnAttachmentIkeConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIkeConfigOutput)
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIkeConfigOutput).ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentIkeConfigPtrInput is an input type that accepts GatewayVpnAttachmentIkeConfigArgs, GatewayVpnAttachmentIkeConfigPtr and GatewayVpnAttachmentIkeConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIkeConfigPtrInput` via:
//
//	        GatewayVpnAttachmentIkeConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentIkeConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput
	ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentIkeConfigPtrOutput
}

type gatewayVpnAttachmentIkeConfigPtrType GatewayVpnAttachmentIkeConfigArgs

func GatewayVpnAttachmentIkeConfigPtr(v *GatewayVpnAttachmentIkeConfigArgs) GatewayVpnAttachmentIkeConfigPtrInput {
	return (*gatewayVpnAttachmentIkeConfigPtrType)(v)
}

func (*gatewayVpnAttachmentIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentIkeConfigPtrType) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentIkeConfigPtrType) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIkeConfigPtrOutput)
}

type GatewayVpnAttachmentIkeConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigOutput() GatewayVpnAttachmentIkeConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return o.ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentIkeConfig) *GatewayVpnAttachmentIkeConfig {
		return &v
	}).(GatewayVpnAttachmentIkeConfigPtrOutput)
}

// The authentication algorithm negotiated in the first stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: md5.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// IKE mode, the negotiation mode. Valid values: main and aggressive. Default value: main.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used in the first stage negotiation. Valid values: group1, group2, group5, or group14. Default value: group2.
func (o GatewayVpnAttachmentIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Value: ikev1 or ikev2. Default value: ikev1.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identifier on the Alibaba Cloud side of the IPsec connection. The length is limited to 100 characters. The default value is leftId-not-exist
func (o GatewayVpnAttachmentIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// A pre-shared key for authentication between the VPN gateway and the local data center. The key length is 1~100 characters.
// - If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key.
// - The pre-shared key of the IPsec-VPN connection must be the same as the authentication key of the on-premises data center. Otherwise, connections between the on-premises data center and the VPN gateway cannot be established.
func (o GatewayVpnAttachmentIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

// The identifier of the IPsec connection to the local data center. The length is limited to 100 characters. The default value is the IP address of the user gateway.
func (o GatewayVpnAttachmentIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIkeConfigPtrOutput) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigPtrOutput) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigPtrOutput) Elem() GatewayVpnAttachmentIkeConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) GatewayVpnAttachmentIkeConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentIkeConfig
		return ret
	}).(GatewayVpnAttachmentIkeConfigOutput)
}

// The authentication algorithm negotiated in the first stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: md5.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlg
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm that is used in Phase 1 negotiations. Valid values: aes, aes192, aes256, des, and 3des. Default value: aes.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeEncAlg
	}).(pulumi.StringPtrOutput)
}

// The SA lifetime as a result of Phase 1 negotiations. Unit: seconds. Valid values: 0 to 86400. Default value: 86400.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// IKE mode, the negotiation mode. Valid values: main and aggressive. Default value: main.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeMode
	}).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used in the first stage negotiation. Valid values: group1, group2, group5, or group14. Default value: group2.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkePfs
	}).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Value: ikev1 or ikev2. Default value: ikev1.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// The identifier on the Alibaba Cloud side of the IPsec connection. The length is limited to 100 characters. The default value is leftId-not-exist
func (o GatewayVpnAttachmentIkeConfigPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalId
	}).(pulumi.StringPtrOutput)
}

// A pre-shared key for authentication between the VPN gateway and the local data center. The key length is 1~100 characters.
// - If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key.
// - The pre-shared key of the IPsec-VPN connection must be the same as the authentication key of the on-premises data center. Otherwise, connections between the on-premises data center and the VPN gateway cannot be established.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

// The identifier of the IPsec connection to the local data center. The length is limited to 100 characters. The default value is the IP address of the user gateway.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteId
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIpsecConfig struct {
	// The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// GatewayVpnAttachmentIpsecConfigInput is an input type that accepts GatewayVpnAttachmentIpsecConfigArgs and GatewayVpnAttachmentIpsecConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIpsecConfigInput` via:
//
//	GatewayVpnAttachmentIpsecConfigArgs{...}
type GatewayVpnAttachmentIpsecConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIpsecConfigOutput() GatewayVpnAttachmentIpsecConfigOutput
	ToGatewayVpnAttachmentIpsecConfigOutputWithContext(context.Context) GatewayVpnAttachmentIpsecConfigOutput
}

type GatewayVpnAttachmentIpsecConfigArgs struct {
	// The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (GatewayVpnAttachmentIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigOutput() GatewayVpnAttachmentIpsecConfigOutput {
	return i.ToGatewayVpnAttachmentIpsecConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIpsecConfigOutput)
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIpsecConfigOutput).ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentIpsecConfigPtrInput is an input type that accepts GatewayVpnAttachmentIpsecConfigArgs, GatewayVpnAttachmentIpsecConfigPtr and GatewayVpnAttachmentIpsecConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIpsecConfigPtrInput` via:
//
//	        GatewayVpnAttachmentIpsecConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentIpsecConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput
	ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput
}

type gatewayVpnAttachmentIpsecConfigPtrType GatewayVpnAttachmentIpsecConfigArgs

func GatewayVpnAttachmentIpsecConfigPtr(v *GatewayVpnAttachmentIpsecConfigArgs) GatewayVpnAttachmentIpsecConfigPtrInput {
	return (*gatewayVpnAttachmentIpsecConfigPtrType)(v)
}

func (*gatewayVpnAttachmentIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentIpsecConfigPtrType) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentIpsecConfigPtrType) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIpsecConfigPtrOutput)
}

type GatewayVpnAttachmentIpsecConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigOutput() GatewayVpnAttachmentIpsecConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o.ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentIpsecConfig) *GatewayVpnAttachmentIpsecConfig {
		return &v
	}).(GatewayVpnAttachmentIpsecConfigPtrOutput)
}

// The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIpsecConfigPtrOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigPtrOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigPtrOutput) Elem() GatewayVpnAttachmentIpsecConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) GatewayVpnAttachmentIpsecConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentIpsecConfig
		return ret
	}).(GatewayVpnAttachmentIpsecConfigOutput)
}

// The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecAuthAlg
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecEncAlg
	}).(pulumi.StringPtrOutput)
}

// The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.IpsecLifetime
	}).(pulumi.IntPtrOutput)
}

// Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecPfs
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecification struct {
	// The ID of the user gateway associated with the tunnel.
	//
	// > **NOTE:**  This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:
	EnableDpd *bool `pulumi:"enableDpd"`
	// Whether the NAT crossing function is enabled for the tunnel. Value:
	EnableNatTraversal *bool `pulumi:"enableNatTraversal"`
	// The local internet IP in Tunnel.
	InternetIp *string `pulumi:"internetIp"`
	// The role of Tunnel.
	Role *string `pulumi:"role"`
	// The state of Tunnel.
	State *string `pulumi:"state"`
	// The negotiation status of Tunnel.
	Status *string `pulumi:"status"`
	// Add the BGP configuration for the tunnel.
	//
	// > **NOTE:**  After you enable the BGP function for IPsec connections (that is, specify `EnableTunnelsBgp` as `true`), you must configure this parameter.
	// See `tunnelBgpConfig` below.
	TunnelBgpConfig *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig `pulumi:"tunnelBgpConfig"`
	// The tunnel ID of IPsec-VPN connection.
	TunnelId *string `pulumi:"tunnelId"`
	// Configuration information for the first phase negotiation. See `tunnelIkeConfig` below.
	TunnelIkeConfig *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig `pulumi:"tunnelIkeConfig"`
	// The order in which the tunnel was created.
	TunnelIndex int `pulumi:"tunnelIndex"`
	// Configuration information for the second-stage negotiation. See `tunnelIpsecConfig` below.
	TunnelIpsecConfig *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig `pulumi:"tunnelIpsecConfig"`
	// The zoneNo of tunnel.
	ZoneNo *string `pulumi:"zoneNo"`
}

// GatewayVpnAttachmentTunnelOptionsSpecificationInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationArgs and GatewayVpnAttachmentTunnelOptionsSpecificationOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationInput` via:
//
//	GatewayVpnAttachmentTunnelOptionsSpecificationArgs{...}
type GatewayVpnAttachmentTunnelOptionsSpecificationInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationOutput() GatewayVpnAttachmentTunnelOptionsSpecificationOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationOutput
}

type GatewayVpnAttachmentTunnelOptionsSpecificationArgs struct {
	// The ID of the user gateway associated with the tunnel.
	//
	// > **NOTE:**  This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:
	EnableDpd pulumi.BoolPtrInput `pulumi:"enableDpd"`
	// Whether the NAT crossing function is enabled for the tunnel. Value:
	EnableNatTraversal pulumi.BoolPtrInput `pulumi:"enableNatTraversal"`
	// The local internet IP in Tunnel.
	InternetIp pulumi.StringPtrInput `pulumi:"internetIp"`
	// The role of Tunnel.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The state of Tunnel.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The negotiation status of Tunnel.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Add the BGP configuration for the tunnel.
	//
	// > **NOTE:**  After you enable the BGP function for IPsec connections (that is, specify `EnableTunnelsBgp` as `true`), you must configure this parameter.
	// See `tunnelBgpConfig` below.
	TunnelBgpConfig GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrInput `pulumi:"tunnelBgpConfig"`
	// The tunnel ID of IPsec-VPN connection.
	TunnelId pulumi.StringPtrInput `pulumi:"tunnelId"`
	// Configuration information for the first phase negotiation. See `tunnelIkeConfig` below.
	TunnelIkeConfig GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrInput `pulumi:"tunnelIkeConfig"`
	// The order in which the tunnel was created.
	TunnelIndex pulumi.IntInput `pulumi:"tunnelIndex"`
	// Configuration information for the second-stage negotiation. See `tunnelIpsecConfig` below.
	TunnelIpsecConfig GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrInput `pulumi:"tunnelIpsecConfig"`
	// The zoneNo of tunnel.
	ZoneNo pulumi.StringPtrInput `pulumi:"zoneNo"`
}

func (GatewayVpnAttachmentTunnelOptionsSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationOutput() GatewayVpnAttachmentTunnelOptionsSpecificationOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationOutput)
}

// GatewayVpnAttachmentTunnelOptionsSpecificationArrayInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationArray and GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationArrayInput` via:
//
//	GatewayVpnAttachmentTunnelOptionsSpecificationArray{ GatewayVpnAttachmentTunnelOptionsSpecificationArgs{...} }
type GatewayVpnAttachmentTunnelOptionsSpecificationArrayInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput() GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput
}

type GatewayVpnAttachmentTunnelOptionsSpecificationArray []GatewayVpnAttachmentTunnelOptionsSpecificationInput

func (GatewayVpnAttachmentTunnelOptionsSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayVpnAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationArray) ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput() GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationArray) ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationOutput() GatewayVpnAttachmentTunnelOptionsSpecificationOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationOutput {
	return o
}

// The ID of the user gateway associated with the tunnel.
//
// > **NOTE:**  This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) EnableDpd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *bool { return v.EnableDpd }).(pulumi.BoolPtrOutput)
}

// Whether the NAT crossing function is enabled for the tunnel. Value:
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) EnableNatTraversal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *bool { return v.EnableNatTraversal }).(pulumi.BoolPtrOutput)
}

// The local internet IP in Tunnel.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) InternetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *string { return v.InternetIp }).(pulumi.StringPtrOutput)
}

// The role of Tunnel.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The state of Tunnel.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The negotiation status of Tunnel.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Add the BGP configuration for the tunnel.
//
// > **NOTE:**  After you enable the BGP function for IPsec connections (that is, specify `EnableTunnelsBgp` as `true`), you must configure this parameter.
// See `tunnelBgpConfig` below.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) TunnelBgpConfig() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig {
		return v.TunnelBgpConfig
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput)
}

// The tunnel ID of IPsec-VPN connection.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) TunnelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *string { return v.TunnelId }).(pulumi.StringPtrOutput)
}

// Configuration information for the first phase negotiation. See `tunnelIkeConfig` below.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) TunnelIkeConfig() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig {
		return v.TunnelIkeConfig
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput)
}

// The order in which the tunnel was created.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) TunnelIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) int { return v.TunnelIndex }).(pulumi.IntOutput)
}

// Configuration information for the second-stage negotiation. See `tunnelIpsecConfig` below.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) TunnelIpsecConfig() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig {
		return v.TunnelIpsecConfig
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput)
}

// The zoneNo of tunnel.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationOutput) ZoneNo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecification) *string { return v.ZoneNo }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayVpnAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput() GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput) Index(i pulumi.IntInput) GatewayVpnAttachmentTunnelOptionsSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayVpnAttachmentTunnelOptionsSpecification {
		return vs[0].([]GatewayVpnAttachmentTunnelOptionsSpecification)[vs[1].(int)]
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig struct {
	// BGP status.
	BgpStatus  *string `pulumi:"bgpStatus"`
	LocalAsn   *int    `pulumi:"localAsn"`
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// Peer asn.
	PeerAsn *string `pulumi:"peerAsn"`
	// Peer bgp ip.
	PeerBgpIp  *string `pulumi:"peerBgpIp"`
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs and GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput` via:
//
//	GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs{...}
type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs struct {
	// BGP status.
	BgpStatus  pulumi.StringPtrInput `pulumi:"bgpStatus"`
	LocalAsn   pulumi.IntPtrInput    `pulumi:"localAsn"`
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// Peer asn.
	PeerAsn pulumi.StringPtrInput `pulumi:"peerAsn"`
	// Peer bgp ip.
	PeerBgpIp  pulumi.StringPtrInput `pulumi:"peerBgpIp"`
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput).ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs, GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtr and GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrInput` via:
//
//	        GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput
}

type gatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrType GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs

func GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtr(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrInput {
	return (*gatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrType)(v)
}

func (*gatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrType) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrType) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig {
		return &v
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput)
}

// BGP status.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) BgpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.BgpStatus }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *int { return v.LocalAsn }).(pulumi.IntPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// Peer asn.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.PeerAsn }).(pulumi.StringPtrOutput)
}

// Peer bgp ip.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.PeerBgpIp }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) Elem() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig
		return ret
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

// BGP status.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) BgpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.BgpStatus
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalAsn
	}).(pulumi.IntPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalBgpIp
	}).(pulumi.StringPtrOutput)
}

// Peer asn.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) PeerAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PeerAsn
	}).(pulumi.StringPtrOutput)
}

// Peer bgp ip.
func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) PeerBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PeerBgpIp
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.TunnelCidr
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig struct {
	IkeAuthAlg  *string `pulumi:"ikeAuthAlg"`
	IkeEncAlg   *string `pulumi:"ikeEncAlg"`
	IkeLifetime *int    `pulumi:"ikeLifetime"`
	IkeMode     *string `pulumi:"ikeMode"`
	IkePfs      *string `pulumi:"ikePfs"`
	IkeVersion  *string `pulumi:"ikeVersion"`
	LocalId     *string `pulumi:"localId"`
	Psk         *string `pulumi:"psk"`
	RemoteId    *string `pulumi:"remoteId"`
}

// GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs and GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput` via:
//
//	GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{...}
type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs struct {
	IkeAuthAlg  pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	IkeEncAlg   pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	IkeLifetime pulumi.IntPtrInput    `pulumi:"ikeLifetime"`
	IkeMode     pulumi.StringPtrInput `pulumi:"ikeMode"`
	IkePfs      pulumi.StringPtrInput `pulumi:"ikePfs"`
	IkeVersion  pulumi.StringPtrInput `pulumi:"ikeVersion"`
	LocalId     pulumi.StringPtrInput `pulumi:"localId"`
	Psk         pulumi.StringPtrInput `pulumi:"psk"`
	RemoteId    pulumi.StringPtrInput `pulumi:"remoteId"`
}

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput).ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs, GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtr and GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrInput` via:
//
//	        GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput
}

type gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrType GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs

func GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtr(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrInput {
	return (*gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrType)(v)
}

func (*gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrType) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrType) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig {
		return &v
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) Elem() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig
		return ret
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlg
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeEncAlg
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeMode
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkePfs
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalId
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteId
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig struct {
	IpsecAuthAlg  *string `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg   *string `pulumi:"ipsecEncAlg"`
	IpsecLifetime *int    `pulumi:"ipsecLifetime"`
	IpsecPfs      *string `pulumi:"ipsecPfs"`
}

// GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs and GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput` via:
//
//	GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{...}
type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs struct {
	IpsecAuthAlg  pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg   pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	IpsecLifetime pulumi.IntPtrInput    `pulumi:"ipsecLifetime"`
	IpsecPfs      pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput).ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrInput is an input type that accepts GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs, GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtr and GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrInput` via:
//
//	        GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput
	ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput
}

type gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrType GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs

func GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtr(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrInput {
	return (*gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrType)(v)
}

func (*gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrType) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return i.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrType) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o.ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig {
		return &v
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) ToGatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) Elem() GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig
		return ret
	}).(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecAuthAlg
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecEncAlg
	}).(pulumi.StringPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.IpsecLifetime
	}).(pulumi.IntPtrOutput)
}

func (o GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecPfs
	}).(pulumi.StringPtrOutput)
}

type IpsecServerIkeConfig struct {
	// The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The IKE negotiation mode. Default value: `main`.
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
	IkePfs *string `pulumi:"ikePfs"`
	// The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
	IkeVersion *string `pulumi:"ikeVersion"`
	// The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
	LocalId *string `pulumi:"localId"`
	// The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
	RemoteId *string `pulumi:"remoteId"`
}

// IpsecServerIkeConfigInput is an input type that accepts IpsecServerIkeConfigArgs and IpsecServerIkeConfigOutput values.
// You can construct a concrete instance of `IpsecServerIkeConfigInput` via:
//
//	IpsecServerIkeConfigArgs{...}
type IpsecServerIkeConfigInput interface {
	pulumi.Input

	ToIpsecServerIkeConfigOutput() IpsecServerIkeConfigOutput
	ToIpsecServerIkeConfigOutputWithContext(context.Context) IpsecServerIkeConfigOutput
}

type IpsecServerIkeConfigArgs struct {
	// The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The IKE negotiation mode. Default value: `main`.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
}

func (IpsecServerIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIkeConfig)(nil)).Elem()
}

func (i IpsecServerIkeConfigArgs) ToIpsecServerIkeConfigOutput() IpsecServerIkeConfigOutput {
	return i.ToIpsecServerIkeConfigOutputWithContext(context.Background())
}

func (i IpsecServerIkeConfigArgs) ToIpsecServerIkeConfigOutputWithContext(ctx context.Context) IpsecServerIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIkeConfigOutput)
}

// IpsecServerIkeConfigArrayInput is an input type that accepts IpsecServerIkeConfigArray and IpsecServerIkeConfigArrayOutput values.
// You can construct a concrete instance of `IpsecServerIkeConfigArrayInput` via:
//
//	IpsecServerIkeConfigArray{ IpsecServerIkeConfigArgs{...} }
type IpsecServerIkeConfigArrayInput interface {
	pulumi.Input

	ToIpsecServerIkeConfigArrayOutput() IpsecServerIkeConfigArrayOutput
	ToIpsecServerIkeConfigArrayOutputWithContext(context.Context) IpsecServerIkeConfigArrayOutput
}

type IpsecServerIkeConfigArray []IpsecServerIkeConfigInput

func (IpsecServerIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIkeConfig)(nil)).Elem()
}

func (i IpsecServerIkeConfigArray) ToIpsecServerIkeConfigArrayOutput() IpsecServerIkeConfigArrayOutput {
	return i.ToIpsecServerIkeConfigArrayOutputWithContext(context.Background())
}

func (i IpsecServerIkeConfigArray) ToIpsecServerIkeConfigArrayOutputWithContext(ctx context.Context) IpsecServerIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIkeConfigArrayOutput)
}

type IpsecServerIkeConfigOutput struct{ *pulumi.OutputState }

func (IpsecServerIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIkeConfig)(nil)).Elem()
}

func (o IpsecServerIkeConfigOutput) ToIpsecServerIkeConfigOutput() IpsecServerIkeConfigOutput {
	return o
}

func (o IpsecServerIkeConfigOutput) ToIpsecServerIkeConfigOutputWithContext(ctx context.Context) IpsecServerIkeConfigOutput {
	return o
}

// The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
func (o IpsecServerIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
func (o IpsecServerIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
func (o IpsecServerIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The IKE negotiation mode. Default value: `main`.
func (o IpsecServerIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
func (o IpsecServerIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
func (o IpsecServerIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
func (o IpsecServerIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
func (o IpsecServerIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

type IpsecServerIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (IpsecServerIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIkeConfig)(nil)).Elem()
}

func (o IpsecServerIkeConfigArrayOutput) ToIpsecServerIkeConfigArrayOutput() IpsecServerIkeConfigArrayOutput {
	return o
}

func (o IpsecServerIkeConfigArrayOutput) ToIpsecServerIkeConfigArrayOutputWithContext(ctx context.Context) IpsecServerIkeConfigArrayOutput {
	return o
}

func (o IpsecServerIkeConfigArrayOutput) Index(i pulumi.IntInput) IpsecServerIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecServerIkeConfig {
		return vs[0].([]IpsecServerIkeConfig)[vs[1].(int)]
	}).(IpsecServerIkeConfigOutput)
}

type IpsecServerIpsecConfig struct {
	// The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// IpsecServerIpsecConfigInput is an input type that accepts IpsecServerIpsecConfigArgs and IpsecServerIpsecConfigOutput values.
// You can construct a concrete instance of `IpsecServerIpsecConfigInput` via:
//
//	IpsecServerIpsecConfigArgs{...}
type IpsecServerIpsecConfigInput interface {
	pulumi.Input

	ToIpsecServerIpsecConfigOutput() IpsecServerIpsecConfigOutput
	ToIpsecServerIpsecConfigOutputWithContext(context.Context) IpsecServerIpsecConfigOutput
}

type IpsecServerIpsecConfigArgs struct {
	// The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (IpsecServerIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIpsecConfig)(nil)).Elem()
}

func (i IpsecServerIpsecConfigArgs) ToIpsecServerIpsecConfigOutput() IpsecServerIpsecConfigOutput {
	return i.ToIpsecServerIpsecConfigOutputWithContext(context.Background())
}

func (i IpsecServerIpsecConfigArgs) ToIpsecServerIpsecConfigOutputWithContext(ctx context.Context) IpsecServerIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIpsecConfigOutput)
}

// IpsecServerIpsecConfigArrayInput is an input type that accepts IpsecServerIpsecConfigArray and IpsecServerIpsecConfigArrayOutput values.
// You can construct a concrete instance of `IpsecServerIpsecConfigArrayInput` via:
//
//	IpsecServerIpsecConfigArray{ IpsecServerIpsecConfigArgs{...} }
type IpsecServerIpsecConfigArrayInput interface {
	pulumi.Input

	ToIpsecServerIpsecConfigArrayOutput() IpsecServerIpsecConfigArrayOutput
	ToIpsecServerIpsecConfigArrayOutputWithContext(context.Context) IpsecServerIpsecConfigArrayOutput
}

type IpsecServerIpsecConfigArray []IpsecServerIpsecConfigInput

func (IpsecServerIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIpsecConfig)(nil)).Elem()
}

func (i IpsecServerIpsecConfigArray) ToIpsecServerIpsecConfigArrayOutput() IpsecServerIpsecConfigArrayOutput {
	return i.ToIpsecServerIpsecConfigArrayOutputWithContext(context.Background())
}

func (i IpsecServerIpsecConfigArray) ToIpsecServerIpsecConfigArrayOutputWithContext(ctx context.Context) IpsecServerIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIpsecConfigArrayOutput)
}

type IpsecServerIpsecConfigOutput struct{ *pulumi.OutputState }

func (IpsecServerIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIpsecConfig)(nil)).Elem()
}

func (o IpsecServerIpsecConfigOutput) ToIpsecServerIpsecConfigOutput() IpsecServerIpsecConfigOutput {
	return o
}

func (o IpsecServerIpsecConfigOutput) ToIpsecServerIpsecConfigOutputWithContext(ctx context.Context) IpsecServerIpsecConfigOutput {
	return o
}

// The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
func (o IpsecServerIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
func (o IpsecServerIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
func (o IpsecServerIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
func (o IpsecServerIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type IpsecServerIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (IpsecServerIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIpsecConfig)(nil)).Elem()
}

func (o IpsecServerIpsecConfigArrayOutput) ToIpsecServerIpsecConfigArrayOutput() IpsecServerIpsecConfigArrayOutput {
	return o
}

func (o IpsecServerIpsecConfigArrayOutput) ToIpsecServerIpsecConfigArrayOutputWithContext(ctx context.Context) IpsecServerIpsecConfigArrayOutput {
	return o
}

func (o IpsecServerIpsecConfigArrayOutput) Index(i pulumi.IntInput) IpsecServerIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecServerIpsecConfig {
		return vs[0].([]IpsecServerIpsecConfig)[vs[1].(int)]
	}).(IpsecServerIpsecConfigOutput)
}

type GetConnectionsConnection struct {
	CreateTime string `pulumi:"createTime"`
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	EffectImmediately bool   `pulumi:"effectImmediately"`
	// Wether enable Dpd detection.
	EnableDpd bool `pulumi:"enableDpd"`
	// enable nat traversal.
	EnableNatTraversal bool `pulumi:"enableNatTraversal"`
	// Enable tunnel bgp.
	EnableTunnelsBgp bool `pulumi:"enableTunnelsBgp"`
	// ID of the VPN connection.
	Id string `pulumi:"id"`
	// The ikeConfig mapping supports the following:
	IkeConfigs []GetConnectionsConnectionIkeConfig `pulumi:"ikeConfigs"`
	// The ipsecConfig mapping supports the following:
	IpsecConfigs []GetConnectionsConnectionIpsecConfig `pulumi:"ipsecConfigs"`
	// The local subnet of the VPN connection.
	LocalSubnet string `pulumi:"localSubnet"`
	// The name of the VPN connection.
	Name string `pulumi:"name"`
	// The remote subnet of the VPN connection.
	RemoteSubnet string `pulumi:"remoteSubnet"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status string `pulumi:"status"`
	// The tunnelOptionsSpecification supports the following:
	TunnelOptionsSpecifications []GetConnectionsConnectionTunnelOptionsSpecification `pulumi:"tunnelOptionsSpecifications"`
	VcoHealthChecks             []GetConnectionsConnectionVcoHealthCheck             `pulumi:"vcoHealthChecks"`
	// The vpnBgpConfig mapping supports the following:
	VpnBgpConfigs []GetConnectionsConnectionVpnBgpConfig `pulumi:"vpnBgpConfigs"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// GetConnectionsConnectionInput is an input type that accepts GetConnectionsConnectionArgs and GetConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionInput` via:
//
//	GetConnectionsConnectionArgs{...}
type GetConnectionsConnectionInput interface {
	pulumi.Input

	ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput
	ToGetConnectionsConnectionOutputWithContext(context.Context) GetConnectionsConnectionOutput
}

type GetConnectionsConnectionArgs struct {
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	EffectImmediately pulumi.BoolInput   `pulumi:"effectImmediately"`
	// Wether enable Dpd detection.
	EnableDpd pulumi.BoolInput `pulumi:"enableDpd"`
	// enable nat traversal.
	EnableNatTraversal pulumi.BoolInput `pulumi:"enableNatTraversal"`
	// Enable tunnel bgp.
	EnableTunnelsBgp pulumi.BoolInput `pulumi:"enableTunnelsBgp"`
	// ID of the VPN connection.
	Id pulumi.StringInput `pulumi:"id"`
	// The ikeConfig mapping supports the following:
	IkeConfigs GetConnectionsConnectionIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// The ipsecConfig mapping supports the following:
	IpsecConfigs GetConnectionsConnectionIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The local subnet of the VPN connection.
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// The name of the VPN connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The remote subnet of the VPN connection.
	RemoteSubnet pulumi.StringInput `pulumi:"remoteSubnet"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status pulumi.StringInput `pulumi:"status"`
	// The tunnelOptionsSpecification supports the following:
	TunnelOptionsSpecifications GetConnectionsConnectionTunnelOptionsSpecificationArrayInput `pulumi:"tunnelOptionsSpecifications"`
	VcoHealthChecks             GetConnectionsConnectionVcoHealthCheckArrayInput             `pulumi:"vcoHealthChecks"`
	// The vpnBgpConfig mapping supports the following:
	VpnBgpConfigs GetConnectionsConnectionVpnBgpConfigArrayInput `pulumi:"vpnBgpConfigs"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (GetConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnection)(nil)).Elem()
}

func (i GetConnectionsConnectionArgs) ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput {
	return i.ToGetConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionArgs) ToGetConnectionsConnectionOutputWithContext(ctx context.Context) GetConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionOutput)
}

// GetConnectionsConnectionArrayInput is an input type that accepts GetConnectionsConnectionArray and GetConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionArrayInput` via:
//
//	GetConnectionsConnectionArray{ GetConnectionsConnectionArgs{...} }
type GetConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput
	ToGetConnectionsConnectionArrayOutputWithContext(context.Context) GetConnectionsConnectionArrayOutput
}

type GetConnectionsConnectionArray []GetConnectionsConnectionInput

func (GetConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnection)(nil)).Elem()
}

func (i GetConnectionsConnectionArray) ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput {
	return i.ToGetConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionArray) ToGetConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionArrayOutput)
}

type GetConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnection)(nil)).Elem()
}

func (o GetConnectionsConnectionOutput) ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput {
	return o
}

func (o GetConnectionsConnectionOutput) ToGetConnectionsConnectionOutputWithContext(ctx context.Context) GetConnectionsConnectionOutput {
	return o
}

func (o GetConnectionsConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Use the VPN customer gateway ID as the search key.
func (o GetConnectionsConnectionOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

func (o GetConnectionsConnectionOutput) EffectImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EffectImmediately }).(pulumi.BoolOutput)
}

// Wether enable Dpd detection.
func (o GetConnectionsConnectionOutput) EnableDpd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EnableDpd }).(pulumi.BoolOutput)
}

// enable nat traversal.
func (o GetConnectionsConnectionOutput) EnableNatTraversal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EnableNatTraversal }).(pulumi.BoolOutput)
}

// Enable tunnel bgp.
func (o GetConnectionsConnectionOutput) EnableTunnelsBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EnableTunnelsBgp }).(pulumi.BoolOutput)
}

// ID of the VPN connection.
func (o GetConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// The ikeConfig mapping supports the following:
func (o GetConnectionsConnectionOutput) IkeConfigs() GetConnectionsConnectionIkeConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionIkeConfig { return v.IkeConfigs }).(GetConnectionsConnectionIkeConfigArrayOutput)
}

// The ipsecConfig mapping supports the following:
func (o GetConnectionsConnectionOutput) IpsecConfigs() GetConnectionsConnectionIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionIpsecConfig { return v.IpsecConfigs }).(GetConnectionsConnectionIpsecConfigArrayOutput)
}

// The local subnet of the VPN connection.
func (o GetConnectionsConnectionOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// The name of the VPN connection.
func (o GetConnectionsConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The remote subnet of the VPN connection.
func (o GetConnectionsConnectionOutput) RemoteSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.RemoteSubnet }).(pulumi.StringOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

// The tunnelOptionsSpecification supports the following:
func (o GetConnectionsConnectionOutput) TunnelOptionsSpecifications() GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionTunnelOptionsSpecification {
		return v.TunnelOptionsSpecifications
	}).(GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput)
}

func (o GetConnectionsConnectionOutput) VcoHealthChecks() GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionVcoHealthCheck { return v.VcoHealthChecks }).(GetConnectionsConnectionVcoHealthCheckArrayOutput)
}

// The vpnBgpConfig mapping supports the following:
func (o GetConnectionsConnectionOutput) VpnBgpConfigs() GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionVpnBgpConfig { return v.VpnBgpConfigs }).(GetConnectionsConnectionVpnBgpConfigArrayOutput)
}

// Use the VPN gateway ID as the search key.
func (o GetConnectionsConnectionOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type GetConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnection)(nil)).Elem()
}

func (o GetConnectionsConnectionArrayOutput) ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput {
	return o
}

func (o GetConnectionsConnectionArrayOutput) ToGetConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionArrayOutput {
	return o
}

func (o GetConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnection {
		return vs[0].([]GetConnectionsConnection)[vs[1].(int)]
	}).(GetConnectionsConnectionOutput)
}

type GetConnectionsConnectionIkeConfig struct {
	// IKE auth Algorithm.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// IKE encript algorithm.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// IKE lifetime.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId *string `pulumi:"ikeLocalId"`
	// IKE Mode.
	IkeMode *string `pulumi:"ikeMode"`
	// DH Group.
	IkePfs *string `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId *string `pulumi:"ikeRemoteId"`
	// IKE Version.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Preshared secret key.
	Psk *string `pulumi:"psk"`
}

// GetConnectionsConnectionIkeConfigInput is an input type that accepts GetConnectionsConnectionIkeConfigArgs and GetConnectionsConnectionIkeConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIkeConfigInput` via:
//
//	GetConnectionsConnectionIkeConfigArgs{...}
type GetConnectionsConnectionIkeConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput
	ToGetConnectionsConnectionIkeConfigOutputWithContext(context.Context) GetConnectionsConnectionIkeConfigOutput
}

type GetConnectionsConnectionIkeConfigArgs struct {
	// IKE auth Algorithm.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// IKE encript algorithm.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// IKE lifetime.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId pulumi.StringPtrInput `pulumi:"ikeLocalId"`
	// IKE Mode.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// DH Group.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId pulumi.StringPtrInput `pulumi:"ikeRemoteId"`
	// IKE Version.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Preshared secret key.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
}

func (GetConnectionsConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIkeConfigArgs) ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput {
	return i.ToGetConnectionsConnectionIkeConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIkeConfigArgs) ToGetConnectionsConnectionIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIkeConfigOutput)
}

// GetConnectionsConnectionIkeConfigArrayInput is an input type that accepts GetConnectionsConnectionIkeConfigArray and GetConnectionsConnectionIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIkeConfigArrayInput` via:
//
//	GetConnectionsConnectionIkeConfigArray{ GetConnectionsConnectionIkeConfigArgs{...} }
type GetConnectionsConnectionIkeConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput
	ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionIkeConfigArrayOutput
}

type GetConnectionsConnectionIkeConfigArray []GetConnectionsConnectionIkeConfigInput

func (GetConnectionsConnectionIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIkeConfigArray) ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput {
	return i.ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIkeConfigArray) ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIkeConfigArrayOutput)
}

type GetConnectionsConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIkeConfigOutput) ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigOutput) ToGetConnectionsConnectionIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigOutput {
	return o
}

// IKE auth Algorithm.
func (o GetConnectionsConnectionIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// IKE encript algorithm.
func (o GetConnectionsConnectionIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// IKE lifetime.
func (o GetConnectionsConnectionIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The identification of the VPN gateway.
func (o GetConnectionsConnectionIkeConfigOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeLocalId }).(pulumi.StringPtrOutput)
}

// IKE Mode.
func (o GetConnectionsConnectionIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// DH Group.
func (o GetConnectionsConnectionIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The identification of the customer gateway.
func (o GetConnectionsConnectionIkeConfigOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeRemoteId }).(pulumi.StringPtrOutput)
}

// IKE Version.
func (o GetConnectionsConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Preshared secret key.
func (o GetConnectionsConnectionIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionIkeConfig {
		return vs[0].([]GetConnectionsConnectionIkeConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionIkeConfigOutput)
}

type GetConnectionsConnectionIpsecConfig struct {
	// IPsec Auth algorithm.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// IPsec Encript algorithm.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// IPsec lifetime.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// DH Group.
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// GetConnectionsConnectionIpsecConfigInput is an input type that accepts GetConnectionsConnectionIpsecConfigArgs and GetConnectionsConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIpsecConfigInput` via:
//
//	GetConnectionsConnectionIpsecConfigArgs{...}
type GetConnectionsConnectionIpsecConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput
	ToGetConnectionsConnectionIpsecConfigOutputWithContext(context.Context) GetConnectionsConnectionIpsecConfigOutput
}

type GetConnectionsConnectionIpsecConfigArgs struct {
	// IPsec Auth algorithm.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// IPsec Encript algorithm.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// IPsec lifetime.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// DH Group.
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (GetConnectionsConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIpsecConfigArgs) ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput {
	return i.ToGetConnectionsConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIpsecConfigArgs) ToGetConnectionsConnectionIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIpsecConfigOutput)
}

// GetConnectionsConnectionIpsecConfigArrayInput is an input type that accepts GetConnectionsConnectionIpsecConfigArray and GetConnectionsConnectionIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIpsecConfigArrayInput` via:
//
//	GetConnectionsConnectionIpsecConfigArray{ GetConnectionsConnectionIpsecConfigArgs{...} }
type GetConnectionsConnectionIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput
	ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionIpsecConfigArrayOutput
}

type GetConnectionsConnectionIpsecConfigArray []GetConnectionsConnectionIpsecConfigInput

func (GetConnectionsConnectionIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIpsecConfigArray) ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput {
	return i.ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIpsecConfigArray) ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIpsecConfigArrayOutput)
}

type GetConnectionsConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIpsecConfigOutput) ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigOutput) ToGetConnectionsConnectionIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigOutput {
	return o
}

// IPsec Auth algorithm.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// IPsec Encript algorithm.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// IPsec lifetime.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// DH Group.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionIpsecConfig {
		return vs[0].([]GetConnectionsConnectionIpsecConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionIpsecConfigOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecification struct {
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// Wether enable Dpd detection.
	EnableDpd bool `pulumi:"enableDpd"`
	// enable nat traversal.
	EnableNatTraversal bool   `pulumi:"enableNatTraversal"`
	InternetIp         string `pulumi:"internetIp"`
	// The role of Tunnel.
	Role  string `pulumi:"role"`
	State string `pulumi:"state"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status string `pulumi:"status"`
	// The bgp config of Tunnel.
	TunnelBgpConfig GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig `pulumi:"tunnelBgpConfig"`
	TunnelId        string                                                            `pulumi:"tunnelId"`
	// The configuration of Phase 1 negotiations in Tunnel.
	TunnelIkeConfig GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig `pulumi:"tunnelIkeConfig"`
	// IPsec configuration in Tunnel.
	TunnelIpsecConfig GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig `pulumi:"tunnelIpsecConfig"`
	ZoneNo            string                                                              `pulumi:"zoneNo"`
}

// GetConnectionsConnectionTunnelOptionsSpecificationInput is an input type that accepts GetConnectionsConnectionTunnelOptionsSpecificationArgs and GetConnectionsConnectionTunnelOptionsSpecificationOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionTunnelOptionsSpecificationInput` via:
//
//	GetConnectionsConnectionTunnelOptionsSpecificationArgs{...}
type GetConnectionsConnectionTunnelOptionsSpecificationInput interface {
	pulumi.Input

	ToGetConnectionsConnectionTunnelOptionsSpecificationOutput() GetConnectionsConnectionTunnelOptionsSpecificationOutput
	ToGetConnectionsConnectionTunnelOptionsSpecificationOutputWithContext(context.Context) GetConnectionsConnectionTunnelOptionsSpecificationOutput
}

type GetConnectionsConnectionTunnelOptionsSpecificationArgs struct {
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// Wether enable Dpd detection.
	EnableDpd pulumi.BoolInput `pulumi:"enableDpd"`
	// enable nat traversal.
	EnableNatTraversal pulumi.BoolInput   `pulumi:"enableNatTraversal"`
	InternetIp         pulumi.StringInput `pulumi:"internetIp"`
	// The role of Tunnel.
	Role  pulumi.StringInput `pulumi:"role"`
	State pulumi.StringInput `pulumi:"state"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status pulumi.StringInput `pulumi:"status"`
	// The bgp config of Tunnel.
	TunnelBgpConfig GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigInput `pulumi:"tunnelBgpConfig"`
	TunnelId        pulumi.StringInput                                                     `pulumi:"tunnelId"`
	// The configuration of Phase 1 negotiations in Tunnel.
	TunnelIkeConfig GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigInput `pulumi:"tunnelIkeConfig"`
	// IPsec configuration in Tunnel.
	TunnelIpsecConfig GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput `pulumi:"tunnelIpsecConfig"`
	ZoneNo            pulumi.StringInput                                                       `pulumi:"zoneNo"`
}

func (GetConnectionsConnectionTunnelOptionsSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationOutput() GetConnectionsConnectionTunnelOptionsSpecificationOutput {
	return i.ToGetConnectionsConnectionTunnelOptionsSpecificationOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionTunnelOptionsSpecificationOutput)
}

// GetConnectionsConnectionTunnelOptionsSpecificationArrayInput is an input type that accepts GetConnectionsConnectionTunnelOptionsSpecificationArray and GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionTunnelOptionsSpecificationArrayInput` via:
//
//	GetConnectionsConnectionTunnelOptionsSpecificationArray{ GetConnectionsConnectionTunnelOptionsSpecificationArgs{...} }
type GetConnectionsConnectionTunnelOptionsSpecificationArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutput() GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput
	ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutputWithContext(context.Context) GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput
}

type GetConnectionsConnectionTunnelOptionsSpecificationArray []GetConnectionsConnectionTunnelOptionsSpecificationInput

func (GetConnectionsConnectionTunnelOptionsSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationArray) ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutput() GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput {
	return i.ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationArray) ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionTunnelOptionsSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationOutput() GetConnectionsConnectionTunnelOptionsSpecificationOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationOutput {
	return o
}

// Use the VPN customer gateway ID as the search key.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

// Wether enable Dpd detection.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) EnableDpd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) bool { return v.EnableDpd }).(pulumi.BoolOutput)
}

// enable nat traversal.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) EnableNatTraversal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) bool { return v.EnableNatTraversal }).(pulumi.BoolOutput)
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The role of Tunnel.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.State }).(pulumi.StringOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.Status }).(pulumi.StringOutput)
}

// The bgp config of Tunnel.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) TunnelBgpConfig() GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig {
		return v.TunnelBgpConfig
	}).(GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.TunnelId }).(pulumi.StringOutput)
}

// The configuration of Phase 1 negotiations in Tunnel.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) TunnelIkeConfig() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig {
		return v.TunnelIkeConfig
	}).(GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

// IPsec configuration in Tunnel.
func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) TunnelIpsecConfig() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig {
		return v.TunnelIpsecConfig
	}).(GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationOutput) ZoneNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecification) string { return v.ZoneNo }).(pulumi.StringOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionTunnelOptionsSpecification)(nil)).Elem()
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutput() GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionTunnelOptionsSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionTunnelOptionsSpecification {
		return vs[0].([]GetConnectionsConnectionTunnelOptionsSpecification)[vs[1].(int)]
	}).(GetConnectionsConnectionTunnelOptionsSpecificationOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig struct {
	BgpStatus string `pulumi:"bgpStatus"`
	// Local asn.
	LocalAsn string `pulumi:"localAsn"`
	// Local bgp IP.
	LocalBgpIp string `pulumi:"localBgpIp"`
	// The counterpart autonomous system number.
	PeerAsn string `pulumi:"peerAsn"`
	// The BGP address on the other side.
	PeerBgpIp string `pulumi:"peerBgpIp"`
	// BGP Tunnel CIDR.
	TunnelCidr string `pulumi:"tunnelCidr"`
}

// GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigInput is an input type that accepts GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs and GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigInput` via:
//
//	GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs{...}
type GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput
	ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs struct {
	BgpStatus pulumi.StringInput `pulumi:"bgpStatus"`
	// Local asn.
	LocalAsn pulumi.StringInput `pulumi:"localAsn"`
	// Local bgp IP.
	LocalBgpIp pulumi.StringInput `pulumi:"localBgpIp"`
	// The counterpart autonomous system number.
	PeerAsn pulumi.StringInput `pulumi:"peerAsn"`
	// The BGP address on the other side.
	PeerBgpIp pulumi.StringInput `pulumi:"peerBgpIp"`
	// BGP Tunnel CIDR.
	TunnelCidr pulumi.StringInput `pulumi:"tunnelCidr"`
}

func (GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return i.ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) BgpStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig) string { return v.BgpStatus }).(pulumi.StringOutput)
}

// Local asn.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalAsn() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig) string { return v.LocalAsn }).(pulumi.StringOutput)
}

// Local bgp IP.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalBgpIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig) string { return v.LocalBgpIp }).(pulumi.StringOutput)
}

// The counterpart autonomous system number.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerAsn() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig) string { return v.PeerAsn }).(pulumi.StringOutput)
}

// The BGP address on the other side.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerBgpIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig) string { return v.PeerBgpIp }).(pulumi.StringOutput)
}

// BGP Tunnel CIDR.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput) TunnelCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig) string { return v.TunnelCidr }).(pulumi.StringOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig struct {
	// IKE auth Algorithm.
	IkeAuthAlg string `pulumi:"ikeAuthAlg"`
	// IKE encript algorithm.
	IkeEncAlg string `pulumi:"ikeEncAlg"`
	// IKE lifetime.
	IkeLifetime int `pulumi:"ikeLifetime"`
	// IKE Mode.
	IkeMode string `pulumi:"ikeMode"`
	// DH Group.
	IkePfs string `pulumi:"ikePfs"`
	// IKE Version.
	IkeVersion string `pulumi:"ikeVersion"`
	// The local Id.
	LocalId string `pulumi:"localId"`
	// Preshared secret key.
	Psk string `pulumi:"psk"`
	// Remote ID.
	RemoteId string `pulumi:"remoteId"`
}

// GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigInput is an input type that accepts GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs and GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigInput` via:
//
//	GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs{...}
type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput
	ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs struct {
	// IKE auth Algorithm.
	IkeAuthAlg pulumi.StringInput `pulumi:"ikeAuthAlg"`
	// IKE encript algorithm.
	IkeEncAlg pulumi.StringInput `pulumi:"ikeEncAlg"`
	// IKE lifetime.
	IkeLifetime pulumi.IntInput `pulumi:"ikeLifetime"`
	// IKE Mode.
	IkeMode pulumi.StringInput `pulumi:"ikeMode"`
	// DH Group.
	IkePfs pulumi.StringInput `pulumi:"ikePfs"`
	// IKE Version.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// The local Id.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// Preshared secret key.
	Psk pulumi.StringInput `pulumi:"psk"`
	// Remote ID.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
}

func (GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return i.ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

// IKE auth Algorithm.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.IkeAuthAlg }).(pulumi.StringOutput)
}

// IKE encript algorithm.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.IkeEncAlg }).(pulumi.StringOutput)
}

// IKE lifetime.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) int { return v.IkeLifetime }).(pulumi.IntOutput)
}

// IKE Mode.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.IkeMode }).(pulumi.StringOutput)
}

// DH Group.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkePfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.IkePfs }).(pulumi.StringOutput)
}

// IKE Version.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// The local Id.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.LocalId }).(pulumi.StringOutput)
}

// Preshared secret key.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) Psk() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.Psk }).(pulumi.StringOutput)
}

// Remote ID.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfig) string { return v.RemoteId }).(pulumi.StringOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig struct {
	// IPsec Auth algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// IPsec Encript algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec lifetime.
	IpsecLifetime int `pulumi:"ipsecLifetime"`
	// DH Group.
	IpsecPfs string `pulumi:"ipsecPfs"`
}

// GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput is an input type that accepts GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs and GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput` via:
//
//	GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs{...}
type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput
	ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs struct {
	// IPsec Auth algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// IPsec Encript algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec lifetime.
	IpsecLifetime pulumi.IntInput `pulumi:"ipsecLifetime"`
	// DH Group.
	IpsecPfs pulumi.StringInput `pulumi:"ipsecPfs"`
}

func (GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return i.ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

type GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput() GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

// IPsec Auth algorithm.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig) string {
		return v.IpsecAuthAlg
	}).(pulumi.StringOutput)
}

// IPsec Encript algorithm.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig) string {
		return v.IpsecEncAlg
	}).(pulumi.StringOutput)
}

// IPsec lifetime.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig) int {
		return v.IpsecLifetime
	}).(pulumi.IntOutput)
}

// DH Group.
func (o GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecPfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfig) string { return v.IpsecPfs }).(pulumi.StringOutput)
}

type GetConnectionsConnectionVcoHealthCheck struct {
	// The destination ip address.
	Dip *string `pulumi:"dip"`
	// The health check on status. Valid values: `true`, `false`.
	Enable *string `pulumi:"enable"`
	// The time interval between health checks.
	Interval *int `pulumi:"interval"`
	// The number of retries for health checks issued.
	Retry *int `pulumi:"retry"`
	// The source ip address.
	Sip *string `pulumi:"sip"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status *string `pulumi:"status"`
}

// GetConnectionsConnectionVcoHealthCheckInput is an input type that accepts GetConnectionsConnectionVcoHealthCheckArgs and GetConnectionsConnectionVcoHealthCheckOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVcoHealthCheckInput` via:
//
//	GetConnectionsConnectionVcoHealthCheckArgs{...}
type GetConnectionsConnectionVcoHealthCheckInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVcoHealthCheckOutput() GetConnectionsConnectionVcoHealthCheckOutput
	ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(context.Context) GetConnectionsConnectionVcoHealthCheckOutput
}

type GetConnectionsConnectionVcoHealthCheckArgs struct {
	// The destination ip address.
	Dip pulumi.StringPtrInput `pulumi:"dip"`
	// The health check on status. Valid values: `true`, `false`.
	Enable pulumi.StringPtrInput `pulumi:"enable"`
	// The time interval between health checks.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The number of retries for health checks issued.
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// The source ip address.
	Sip pulumi.StringPtrInput `pulumi:"sip"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetConnectionsConnectionVcoHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (i GetConnectionsConnectionVcoHealthCheckArgs) ToGetConnectionsConnectionVcoHealthCheckOutput() GetConnectionsConnectionVcoHealthCheckOutput {
	return i.ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVcoHealthCheckArgs) ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVcoHealthCheckOutput)
}

// GetConnectionsConnectionVcoHealthCheckArrayInput is an input type that accepts GetConnectionsConnectionVcoHealthCheckArray and GetConnectionsConnectionVcoHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVcoHealthCheckArrayInput` via:
//
//	GetConnectionsConnectionVcoHealthCheckArray{ GetConnectionsConnectionVcoHealthCheckArgs{...} }
type GetConnectionsConnectionVcoHealthCheckArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVcoHealthCheckArrayOutput() GetConnectionsConnectionVcoHealthCheckArrayOutput
	ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(context.Context) GetConnectionsConnectionVcoHealthCheckArrayOutput
}

type GetConnectionsConnectionVcoHealthCheckArray []GetConnectionsConnectionVcoHealthCheckInput

func (GetConnectionsConnectionVcoHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (i GetConnectionsConnectionVcoHealthCheckArray) ToGetConnectionsConnectionVcoHealthCheckArrayOutput() GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return i.ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVcoHealthCheckArray) ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVcoHealthCheckArrayOutput)
}

type GetConnectionsConnectionVcoHealthCheckOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVcoHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (o GetConnectionsConnectionVcoHealthCheckOutput) ToGetConnectionsConnectionVcoHealthCheckOutput() GetConnectionsConnectionVcoHealthCheckOutput {
	return o
}

func (o GetConnectionsConnectionVcoHealthCheckOutput) ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckOutput {
	return o
}

// The destination ip address.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Dip }).(pulumi.StringPtrOutput)
}

// The health check on status. Valid values: `true`, `false`.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Enable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Enable }).(pulumi.StringPtrOutput)
}

// The time interval between health checks.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The number of retries for health checks issued.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// The source ip address.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Sip }).(pulumi.StringPtrOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionVcoHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVcoHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (o GetConnectionsConnectionVcoHealthCheckArrayOutput) ToGetConnectionsConnectionVcoHealthCheckArrayOutput() GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return o
}

func (o GetConnectionsConnectionVcoHealthCheckArrayOutput) ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return o
}

func (o GetConnectionsConnectionVcoHealthCheckArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionVcoHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionVcoHealthCheck {
		return vs[0].([]GetConnectionsConnectionVcoHealthCheck)[vs[1].(int)]
	}).(GetConnectionsConnectionVcoHealthCheckOutput)
}

type GetConnectionsConnectionVpnBgpConfig struct {
	// The authentication keys for BGP routing protocols.
	AuthKey *string `pulumi:"authKey"`
	// Local asn.
	LocalAsn *int `pulumi:"localAsn"`
	// Local bgp IP.
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// The counterpart autonomous system number.
	PeerAsn *int `pulumi:"peerAsn"`
	// The BGP address on the other side.
	PeerBgpIp *string `pulumi:"peerBgpIp"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status *string `pulumi:"status"`
	// BGP Tunnel CIDR.
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// GetConnectionsConnectionVpnBgpConfigInput is an input type that accepts GetConnectionsConnectionVpnBgpConfigArgs and GetConnectionsConnectionVpnBgpConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVpnBgpConfigInput` via:
//
//	GetConnectionsConnectionVpnBgpConfigArgs{...}
type GetConnectionsConnectionVpnBgpConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVpnBgpConfigOutput() GetConnectionsConnectionVpnBgpConfigOutput
	ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(context.Context) GetConnectionsConnectionVpnBgpConfigOutput
}

type GetConnectionsConnectionVpnBgpConfigArgs struct {
	// The authentication keys for BGP routing protocols.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// Local asn.
	LocalAsn pulumi.IntPtrInput `pulumi:"localAsn"`
	// Local bgp IP.
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// The counterpart autonomous system number.
	PeerAsn pulumi.IntPtrInput `pulumi:"peerAsn"`
	// The BGP address on the other side.
	PeerBgpIp pulumi.StringPtrInput `pulumi:"peerBgpIp"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// BGP Tunnel CIDR.
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (GetConnectionsConnectionVpnBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionVpnBgpConfigArgs) ToGetConnectionsConnectionVpnBgpConfigOutput() GetConnectionsConnectionVpnBgpConfigOutput {
	return i.ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVpnBgpConfigArgs) ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVpnBgpConfigOutput)
}

// GetConnectionsConnectionVpnBgpConfigArrayInput is an input type that accepts GetConnectionsConnectionVpnBgpConfigArray and GetConnectionsConnectionVpnBgpConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVpnBgpConfigArrayInput` via:
//
//	GetConnectionsConnectionVpnBgpConfigArray{ GetConnectionsConnectionVpnBgpConfigArgs{...} }
type GetConnectionsConnectionVpnBgpConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVpnBgpConfigArrayOutput() GetConnectionsConnectionVpnBgpConfigArrayOutput
	ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionVpnBgpConfigArrayOutput
}

type GetConnectionsConnectionVpnBgpConfigArray []GetConnectionsConnectionVpnBgpConfigInput

func (GetConnectionsConnectionVpnBgpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionVpnBgpConfigArray) ToGetConnectionsConnectionVpnBgpConfigArrayOutput() GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return i.ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVpnBgpConfigArray) ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVpnBgpConfigArrayOutput)
}

type GetConnectionsConnectionVpnBgpConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVpnBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionVpnBgpConfigOutput) ToGetConnectionsConnectionVpnBgpConfigOutput() GetConnectionsConnectionVpnBgpConfigOutput {
	return o
}

func (o GetConnectionsConnectionVpnBgpConfigOutput) ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigOutput {
	return o
}

// The authentication keys for BGP routing protocols.
func (o GetConnectionsConnectionVpnBgpConfigOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// Local asn.
func (o GetConnectionsConnectionVpnBgpConfigOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *int { return v.LocalAsn }).(pulumi.IntPtrOutput)
}

// Local bgp IP.
func (o GetConnectionsConnectionVpnBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// The counterpart autonomous system number.
func (o GetConnectionsConnectionVpnBgpConfigOutput) PeerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *int { return v.PeerAsn }).(pulumi.IntPtrOutput)
}

// The BGP address on the other side.
func (o GetConnectionsConnectionVpnBgpConfigOutput) PeerBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.PeerBgpIp }).(pulumi.StringPtrOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionVpnBgpConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// BGP Tunnel CIDR.
func (o GetConnectionsConnectionVpnBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionVpnBgpConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVpnBgpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionVpnBgpConfigArrayOutput) ToGetConnectionsConnectionVpnBgpConfigArrayOutput() GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionVpnBgpConfigArrayOutput) ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionVpnBgpConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionVpnBgpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionVpnBgpConfig {
		return vs[0].([]GetConnectionsConnectionVpnBgpConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionVpnBgpConfigOutput)
}

type GetCustomerGatewaysGateway struct {
	// The autonomous system number of the local data center gateway device of the VPN customer gateway.
	Asn int `pulumi:"asn"`
	// The creation time of the VPN customer gateway.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPN customer gateway.
	Description string `pulumi:"description"`
	// ID of the VPN customer gateway .
	Id string `pulumi:"id"`
	// The ip address of the VPN customer gateway.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the VPN customer gateway.
	Name string `pulumi:"name"`
}

// GetCustomerGatewaysGatewayInput is an input type that accepts GetCustomerGatewaysGatewayArgs and GetCustomerGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetCustomerGatewaysGatewayInput` via:
//
//	GetCustomerGatewaysGatewayArgs{...}
type GetCustomerGatewaysGatewayInput interface {
	pulumi.Input

	ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput
	ToGetCustomerGatewaysGatewayOutputWithContext(context.Context) GetCustomerGatewaysGatewayOutput
}

type GetCustomerGatewaysGatewayArgs struct {
	// The autonomous system number of the local data center gateway device of the VPN customer gateway.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The creation time of the VPN customer gateway.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPN customer gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the VPN customer gateway .
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of the VPN customer gateway.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the VPN customer gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCustomerGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewaysGateway)(nil)).Elem()
}

func (i GetCustomerGatewaysGatewayArgs) ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput {
	return i.ToGetCustomerGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetCustomerGatewaysGatewayArgs) ToGetCustomerGatewaysGatewayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewaysGatewayOutput)
}

// GetCustomerGatewaysGatewayArrayInput is an input type that accepts GetCustomerGatewaysGatewayArray and GetCustomerGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetCustomerGatewaysGatewayArrayInput` via:
//
//	GetCustomerGatewaysGatewayArray{ GetCustomerGatewaysGatewayArgs{...} }
type GetCustomerGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput
	ToGetCustomerGatewaysGatewayArrayOutputWithContext(context.Context) GetCustomerGatewaysGatewayArrayOutput
}

type GetCustomerGatewaysGatewayArray []GetCustomerGatewaysGatewayInput

func (GetCustomerGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewaysGateway)(nil)).Elem()
}

func (i GetCustomerGatewaysGatewayArray) ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput {
	return i.ToGetCustomerGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetCustomerGatewaysGatewayArray) ToGetCustomerGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewaysGatewayArrayOutput)
}

type GetCustomerGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewaysGateway)(nil)).Elem()
}

func (o GetCustomerGatewaysGatewayOutput) ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayOutput) ToGetCustomerGatewaysGatewayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayOutput {
	return o
}

// The autonomous system number of the local data center gateway device of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) int { return v.Asn }).(pulumi.IntOutput)
}

// The creation time of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the VPN customer gateway .
func (o GetCustomerGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

type GetCustomerGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewaysGateway)(nil)).Elem()
}

func (o GetCustomerGatewaysGatewayArrayOutput) ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayArrayOutput) ToGetCustomerGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayArrayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetCustomerGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomerGatewaysGateway {
		return vs[0].([]GetCustomerGatewaysGateway)[vs[1].(int)]
	}).(GetCustomerGatewaysGatewayOutput)
}

type GetGatewayVcoRoutesRoute struct {
	// List of autonomous system numbers through which BGP routing entries pass.
	AsPath string `pulumi:"asPath"`
	// The creation time of the VPN destination route.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Vpn Gateway Vco Routes.
	Id string `pulumi:"id"`
	// The next hop of the destination route.
	NextHop string `pulumi:"nextHop"`
	// The destination network segment of the destination route.
	RouteDest string `pulumi:"routeDest"`
	// The source CIDR block of the destination route.
	Source string `pulumi:"source"`
	// The status of the vpn route entry. Valid values: `normal`, `published`.
	Status string `pulumi:"status"`
	// The id of the vpn connection.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The weight value of the destination route.
	Weight int `pulumi:"weight"`
}

// GetGatewayVcoRoutesRouteInput is an input type that accepts GetGatewayVcoRoutesRouteArgs and GetGatewayVcoRoutesRouteOutput values.
// You can construct a concrete instance of `GetGatewayVcoRoutesRouteInput` via:
//
//	GetGatewayVcoRoutesRouteArgs{...}
type GetGatewayVcoRoutesRouteInput interface {
	pulumi.Input

	ToGetGatewayVcoRoutesRouteOutput() GetGatewayVcoRoutesRouteOutput
	ToGetGatewayVcoRoutesRouteOutputWithContext(context.Context) GetGatewayVcoRoutesRouteOutput
}

type GetGatewayVcoRoutesRouteArgs struct {
	// List of autonomous system numbers through which BGP routing entries pass.
	AsPath pulumi.StringInput `pulumi:"asPath"`
	// The creation time of the VPN destination route.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Vpn Gateway Vco Routes.
	Id pulumi.StringInput `pulumi:"id"`
	// The next hop of the destination route.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The destination network segment of the destination route.
	RouteDest pulumi.StringInput `pulumi:"routeDest"`
	// The source CIDR block of the destination route.
	Source pulumi.StringInput `pulumi:"source"`
	// The status of the vpn route entry. Valid values: `normal`, `published`.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the vpn connection.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
	// The weight value of the destination route.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetGatewayVcoRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (i GetGatewayVcoRoutesRouteArgs) ToGetGatewayVcoRoutesRouteOutput() GetGatewayVcoRoutesRouteOutput {
	return i.ToGetGatewayVcoRoutesRouteOutputWithContext(context.Background())
}

func (i GetGatewayVcoRoutesRouteArgs) ToGetGatewayVcoRoutesRouteOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVcoRoutesRouteOutput)
}

// GetGatewayVcoRoutesRouteArrayInput is an input type that accepts GetGatewayVcoRoutesRouteArray and GetGatewayVcoRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetGatewayVcoRoutesRouteArrayInput` via:
//
//	GetGatewayVcoRoutesRouteArray{ GetGatewayVcoRoutesRouteArgs{...} }
type GetGatewayVcoRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetGatewayVcoRoutesRouteArrayOutput() GetGatewayVcoRoutesRouteArrayOutput
	ToGetGatewayVcoRoutesRouteArrayOutputWithContext(context.Context) GetGatewayVcoRoutesRouteArrayOutput
}

type GetGatewayVcoRoutesRouteArray []GetGatewayVcoRoutesRouteInput

func (GetGatewayVcoRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (i GetGatewayVcoRoutesRouteArray) ToGetGatewayVcoRoutesRouteArrayOutput() GetGatewayVcoRoutesRouteArrayOutput {
	return i.ToGetGatewayVcoRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetGatewayVcoRoutesRouteArray) ToGetGatewayVcoRoutesRouteArrayOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVcoRoutesRouteArrayOutput)
}

type GetGatewayVcoRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetGatewayVcoRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (o GetGatewayVcoRoutesRouteOutput) ToGetGatewayVcoRoutesRouteOutput() GetGatewayVcoRoutesRouteOutput {
	return o
}

func (o GetGatewayVcoRoutesRouteOutput) ToGetGatewayVcoRoutesRouteOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteOutput {
	return o
}

// List of autonomous system numbers through which BGP routing entries pass.
func (o GetGatewayVcoRoutesRouteOutput) AsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.AsPath }).(pulumi.StringOutput)
}

// The creation time of the VPN destination route.
func (o GetGatewayVcoRoutesRouteOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Vpn Gateway Vco Routes.
func (o GetGatewayVcoRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

// The next hop of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

// The destination network segment of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) RouteDest() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.RouteDest }).(pulumi.StringOutput)
}

// The source CIDR block of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.Source }).(pulumi.StringOutput)
}

// The status of the vpn route entry. Valid values: `normal`, `published`.
func (o GetGatewayVcoRoutesRouteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the vpn connection.
func (o GetGatewayVcoRoutesRouteOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The weight value of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) int { return v.Weight }).(pulumi.IntOutput)
}

type GetGatewayVcoRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVcoRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (o GetGatewayVcoRoutesRouteArrayOutput) ToGetGatewayVcoRoutesRouteArrayOutput() GetGatewayVcoRoutesRouteArrayOutput {
	return o
}

func (o GetGatewayVcoRoutesRouteArrayOutput) ToGetGatewayVcoRoutesRouteArrayOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteArrayOutput {
	return o
}

func (o GetGatewayVcoRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetGatewayVcoRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVcoRoutesRoute {
		return vs[0].([]GetGatewayVcoRoutesRoute)[vs[1].(int)]
	}).(GetGatewayVcoRoutesRouteOutput)
}

type GetGatewayVpnAttachmentsAttachment struct {
	// attach type- **CEN**: indicates that the IPsec-VPN connection is associated with a transit router of a Cloud Enterprise Network (CEN) instance.- **NO_ASSOCIATED**: indicates that the IPsec-VPN connection is not associated with any resource.
	AttachType string `pulumi:"attachType"`
	// Bgp configuration information.- This parameter is supported when you create an vpn attachment in single-tunnel mode.
	BgpConfigs []GetGatewayVpnAttachmentsAttachmentBgpConfig `pulumi:"bgpConfigs"`
	// IPsec connection status- **ike_sa_not_established**: Phase 1 negotiations failed.- **ike_sa_established**: Phase 1 negotiations succeeded.- **ipsec_sa_not_established**: Phase 2 negotiations failed.- **ipsec_sa_established**: Phase 2 negotiations succeeded.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// The ID of the user gateway associated with the tunnel.> This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// Specifies whether to immediately start IPsec negotiations after the configuration takes effect. Valid values:- **true**: immediately starts IPsec negotiations after the configuration is complete.- **false** (default): starts IPsec negotiations when inbound traffic is received.
	EffectImmediately bool `pulumi:"effectImmediately"`
	// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:-**true** (default): enable the DPD function. IPsec initiator will send DPD message to check whether the peer device is alive. If the peer device does not receive a correct response within the set time, it is considered that the peer has been disconnected. IPsec will delete ISAKMP SA and the corresponding IPsec SA, and the security tunnel will also be deleted.-**false**: If the DPD function is disabled, the IPsec initiator does not send DPD detection packets.
	EnableDpd bool `pulumi:"enableDpd"`
	// Whether the NAT crossing function is enabled for the tunnel. Value:-**true** (default): Enables the NAT Traversal function. When enabled, the IKE negotiation process deletes the verification process of the UDP port number and realizes the discovery function of the NAT gateway device in the tunnel.-**false**: does not enable the NAT Traversal function.
	EnableNatTraversal bool `pulumi:"enableNatTraversal"`
	// You can configure this parameter when you create a vpn attachment in dual-tunnel mode.Whether to enable the BGP function for the tunnel. Value: **true** or **false** (default).> before adding BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function.
	EnableTunnelsBgp bool `pulumi:"enableTunnelsBgp"`
	// This parameter is supported if you create an vpn attachment in single-tunnel mode.Health check configuration information.
	HealthCheckConfigs []GetGatewayVpnAttachmentsAttachmentHealthCheckConfig `pulumi:"healthCheckConfigs"`
	// The ID of the resource supplied above.
	Id string `pulumi:"id"`
	// The configurations of Phase 1 negotiations. - This parameter is supported if you create an vpn attachment in single-tunnel mode.
	IkeConfigs []GetGatewayVpnAttachmentsAttachmentIkeConfig `pulumi:"ikeConfigs"`
	// The local internet IP in Tunnel.
	InternetIp string `pulumi:"internetIp"`
	// Configuration negotiated in the second stage. - This parameter is supported if you create an vpn attachment in single-tunnel mode.
	IpsecConfigs []GetGatewayVpnAttachmentsAttachmentIpsecConfig `pulumi:"ipsecConfigs"`
	// The CIDR block on the VPC side. The CIDR block is used in Phase 2 negotiations.Separate multiple CIDR blocks with commas (,). Example: 192.168.1.0/24,192.168.2.0/24.The following routing modes are supported:- If you set LocalSubnet and RemoteSubnet to 0.0.0.0/0, the routing mode of the IPsec-VPN connection is set to Destination Routing Mode.- If you set LocalSubnet and RemoteSubnet to specific CIDR blocks, the routing mode of the IPsec-VPN connection is set to Protected Data Flows.
	LocalSubnet string `pulumi:"localSubnet"`
	// network type- **public** (default)- **private**
	NetworkType string `pulumi:"networkType"`
	// The CIDR block on the data center side. This CIDR block is used in Phase 2 negotiations.Separate multiple CIDR blocks with commas (,). Example: 192.168.3.0/24,192.168.4.0/24.The following routing modes are supported:- If you set LocalSubnet and RemoteSubnet to 0.0.0.0/0, the routing mode of the IPsec-VPN connection is set to Destination Routing Mode.- If you set LocalSubnet and RemoteSubnet to specific CIDR blocks, the routing mode of the IPsec-VPN connection is set to Protected Data Flows.
	RemoteSubnet string `pulumi:"remoteSubnet"`
	// The ID of the resource group
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status string `pulumi:"status"`
	// Tags
	Tags map[string]string `pulumi:"tags"`
	// Configure the tunnel.-You can configure parameters in the **tunnel_options_specification** array when you create a vpn attachment in dual-tunnel mode.-When creating a vpn attachment in dual-tunnel mode, you must add both tunnels for the vpn attachment to ensure that the vpn attachment has link redundancy. Only two tunnels can be added to a vpn attachment.
	TunnelOptionsSpecifications []GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification `pulumi:"tunnelOptionsSpecifications"`
	// vpn attachment name
	VpnAttachmentName string `pulumi:"vpnAttachmentName"`
	// The first ID of the resource
	VpnConnectionId string `pulumi:"vpnConnectionId"`
}

// GetGatewayVpnAttachmentsAttachmentInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentArgs and GetGatewayVpnAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentArgs{...}
type GetGatewayVpnAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentOutput() GetGatewayVpnAttachmentsAttachmentOutput
	ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentOutput
}

type GetGatewayVpnAttachmentsAttachmentArgs struct {
	// attach type- **CEN**: indicates that the IPsec-VPN connection is associated with a transit router of a Cloud Enterprise Network (CEN) instance.- **NO_ASSOCIATED**: indicates that the IPsec-VPN connection is not associated with any resource.
	AttachType pulumi.StringInput `pulumi:"attachType"`
	// Bgp configuration information.- This parameter is supported when you create an vpn attachment in single-tunnel mode.
	BgpConfigs GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput `pulumi:"bgpConfigs"`
	// IPsec connection status- **ike_sa_not_established**: Phase 1 negotiations failed.- **ike_sa_established**: Phase 1 negotiations succeeded.- **ipsec_sa_not_established**: Phase 2 negotiations failed.- **ipsec_sa_established**: Phase 2 negotiations succeeded.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the user gateway associated with the tunnel.> This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// Specifies whether to immediately start IPsec negotiations after the configuration takes effect. Valid values:- **true**: immediately starts IPsec negotiations after the configuration is complete.- **false** (default): starts IPsec negotiations when inbound traffic is received.
	EffectImmediately pulumi.BoolInput `pulumi:"effectImmediately"`
	// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:-**true** (default): enable the DPD function. IPsec initiator will send DPD message to check whether the peer device is alive. If the peer device does not receive a correct response within the set time, it is considered that the peer has been disconnected. IPsec will delete ISAKMP SA and the corresponding IPsec SA, and the security tunnel will also be deleted.-**false**: If the DPD function is disabled, the IPsec initiator does not send DPD detection packets.
	EnableDpd pulumi.BoolInput `pulumi:"enableDpd"`
	// Whether the NAT crossing function is enabled for the tunnel. Value:-**true** (default): Enables the NAT Traversal function. When enabled, the IKE negotiation process deletes the verification process of the UDP port number and realizes the discovery function of the NAT gateway device in the tunnel.-**false**: does not enable the NAT Traversal function.
	EnableNatTraversal pulumi.BoolInput `pulumi:"enableNatTraversal"`
	// You can configure this parameter when you create a vpn attachment in dual-tunnel mode.Whether to enable the BGP function for the tunnel. Value: **true** or **false** (default).> before adding BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function.
	EnableTunnelsBgp pulumi.BoolInput `pulumi:"enableTunnelsBgp"`
	// This parameter is supported if you create an vpn attachment in single-tunnel mode.Health check configuration information.
	HealthCheckConfigs GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput `pulumi:"healthCheckConfigs"`
	// The ID of the resource supplied above.
	Id pulumi.StringInput `pulumi:"id"`
	// The configurations of Phase 1 negotiations. - This parameter is supported if you create an vpn attachment in single-tunnel mode.
	IkeConfigs GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// The local internet IP in Tunnel.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// Configuration negotiated in the second stage. - This parameter is supported if you create an vpn attachment in single-tunnel mode.
	IpsecConfigs GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The CIDR block on the VPC side. The CIDR block is used in Phase 2 negotiations.Separate multiple CIDR blocks with commas (,). Example: 192.168.1.0/24,192.168.2.0/24.The following routing modes are supported:- If you set LocalSubnet and RemoteSubnet to 0.0.0.0/0, the routing mode of the IPsec-VPN connection is set to Destination Routing Mode.- If you set LocalSubnet and RemoteSubnet to specific CIDR blocks, the routing mode of the IPsec-VPN connection is set to Protected Data Flows.
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// network type- **public** (default)- **private**
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The CIDR block on the data center side. This CIDR block is used in Phase 2 negotiations.Separate multiple CIDR blocks with commas (,). Example: 192.168.3.0/24,192.168.4.0/24.The following routing modes are supported:- If you set LocalSubnet and RemoteSubnet to 0.0.0.0/0, the routing mode of the IPsec-VPN connection is set to Destination Routing Mode.- If you set LocalSubnet and RemoteSubnet to specific CIDR blocks, the routing mode of the IPsec-VPN connection is set to Protected Data Flows.
	RemoteSubnet pulumi.StringInput `pulumi:"remoteSubnet"`
	// The ID of the resource group
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Configure the tunnel.-You can configure parameters in the **tunnel_options_specification** array when you create a vpn attachment in dual-tunnel mode.-When creating a vpn attachment in dual-tunnel mode, you must add both tunnels for the vpn attachment to ensure that the vpn attachment has link redundancy. Only two tunnels can be added to a vpn attachment.
	TunnelOptionsSpecifications GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayInput `pulumi:"tunnelOptionsSpecifications"`
	// vpn attachment name
	VpnAttachmentName pulumi.StringInput `pulumi:"vpnAttachmentName"`
	// The first ID of the resource
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
}

func (GetGatewayVpnAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentArgs) ToGetGatewayVpnAttachmentsAttachmentOutput() GetGatewayVpnAttachmentsAttachmentOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentArgs) ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentOutput)
}

// GetGatewayVpnAttachmentsAttachmentArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentArray and GetGatewayVpnAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentArray{ GetGatewayVpnAttachmentsAttachmentArgs{...} }
type GetGatewayVpnAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentArrayOutput() GetGatewayVpnAttachmentsAttachmentArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentArray []GetGatewayVpnAttachmentsAttachmentInput

func (GetGatewayVpnAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentArray) ToGetGatewayVpnAttachmentsAttachmentArrayOutput() GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentArray) ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentOutput) ToGetGatewayVpnAttachmentsAttachmentOutput() GetGatewayVpnAttachmentsAttachmentOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentOutput) ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentOutput {
	return o
}

// attach type- **CEN**: indicates that the IPsec-VPN connection is associated with a transit router of a Cloud Enterprise Network (CEN) instance.- **NO_ASSOCIATED**: indicates that the IPsec-VPN connection is not associated with any resource.
func (o GetGatewayVpnAttachmentsAttachmentOutput) AttachType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.AttachType }).(pulumi.StringOutput)
}

// Bgp configuration information.- This parameter is supported when you create an vpn attachment in single-tunnel mode.
func (o GetGatewayVpnAttachmentsAttachmentOutput) BgpConfigs() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentBgpConfig {
		return v.BgpConfigs
	}).(GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput)
}

// IPsec connection status- **ike_sa_not_established**: Phase 1 negotiations failed.- **ike_sa_established**: Phase 1 negotiations succeeded.- **ipsec_sa_not_established**: Phase 2 negotiations failed.- **ipsec_sa_established**: Phase 2 negotiations succeeded.
func (o GetGatewayVpnAttachmentsAttachmentOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o GetGatewayVpnAttachmentsAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the user gateway associated with the tunnel.> This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
func (o GetGatewayVpnAttachmentsAttachmentOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

// Specifies whether to immediately start IPsec negotiations after the configuration takes effect. Valid values:- **true**: immediately starts IPsec negotiations after the configuration is complete.- **false** (default): starts IPsec negotiations when inbound traffic is received.
func (o GetGatewayVpnAttachmentsAttachmentOutput) EffectImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) bool { return v.EffectImmediately }).(pulumi.BoolOutput)
}

// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:-**true** (default): enable the DPD function. IPsec initiator will send DPD message to check whether the peer device is alive. If the peer device does not receive a correct response within the set time, it is considered that the peer has been disconnected. IPsec will delete ISAKMP SA and the corresponding IPsec SA, and the security tunnel will also be deleted.-**false**: If the DPD function is disabled, the IPsec initiator does not send DPD detection packets.
func (o GetGatewayVpnAttachmentsAttachmentOutput) EnableDpd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) bool { return v.EnableDpd }).(pulumi.BoolOutput)
}

// Whether the NAT crossing function is enabled for the tunnel. Value:-**true** (default): Enables the NAT Traversal function. When enabled, the IKE negotiation process deletes the verification process of the UDP port number and realizes the discovery function of the NAT gateway device in the tunnel.-**false**: does not enable the NAT Traversal function.
func (o GetGatewayVpnAttachmentsAttachmentOutput) EnableNatTraversal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) bool { return v.EnableNatTraversal }).(pulumi.BoolOutput)
}

// You can configure this parameter when you create a vpn attachment in dual-tunnel mode.Whether to enable the BGP function for the tunnel. Value: **true** or **false** (default).> before adding BGP configuration, we recommend that you understand the working mechanism and usage restrictions of the BGP dynamic routing function.
func (o GetGatewayVpnAttachmentsAttachmentOutput) EnableTunnelsBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) bool { return v.EnableTunnelsBgp }).(pulumi.BoolOutput)
}

// This parameter is supported if you create an vpn attachment in single-tunnel mode.Health check configuration information.
func (o GetGatewayVpnAttachmentsAttachmentOutput) HealthCheckConfigs() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentHealthCheckConfig {
		return v.HealthCheckConfigs
	}).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput)
}

// The ID of the resource supplied above.
func (o GetGatewayVpnAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The configurations of Phase 1 negotiations. - This parameter is supported if you create an vpn attachment in single-tunnel mode.
func (o GetGatewayVpnAttachmentsAttachmentOutput) IkeConfigs() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentIkeConfig {
		return v.IkeConfigs
	}).(GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput)
}

// The local internet IP in Tunnel.
func (o GetGatewayVpnAttachmentsAttachmentOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.InternetIp }).(pulumi.StringOutput)
}

// Configuration negotiated in the second stage. - This parameter is supported if you create an vpn attachment in single-tunnel mode.
func (o GetGatewayVpnAttachmentsAttachmentOutput) IpsecConfigs() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentIpsecConfig {
		return v.IpsecConfigs
	}).(GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput)
}

// The CIDR block on the VPC side. The CIDR block is used in Phase 2 negotiations.Separate multiple CIDR blocks with commas (,). Example: 192.168.1.0/24,192.168.2.0/24.The following routing modes are supported:- If you set LocalSubnet and RemoteSubnet to 0.0.0.0/0, the routing mode of the IPsec-VPN connection is set to Destination Routing Mode.- If you set LocalSubnet and RemoteSubnet to specific CIDR blocks, the routing mode of the IPsec-VPN connection is set to Protected Data Flows.
func (o GetGatewayVpnAttachmentsAttachmentOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// network type- **public** (default)- **private**
func (o GetGatewayVpnAttachmentsAttachmentOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The CIDR block on the data center side. This CIDR block is used in Phase 2 negotiations.Separate multiple CIDR blocks with commas (,). Example: 192.168.3.0/24,192.168.4.0/24.The following routing modes are supported:- If you set LocalSubnet and RemoteSubnet to 0.0.0.0/0, the routing mode of the IPsec-VPN connection is set to Destination Routing Mode.- If you set LocalSubnet and RemoteSubnet to specific CIDR blocks, the routing mode of the IPsec-VPN connection is set to Protected Data Flows.
func (o GetGatewayVpnAttachmentsAttachmentOutput) RemoteSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.RemoteSubnet }).(pulumi.StringOutput)
}

// The ID of the resource group
func (o GetGatewayVpnAttachmentsAttachmentOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
func (o GetGatewayVpnAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// Tags
func (o GetGatewayVpnAttachmentsAttachmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Configure the tunnel.-You can configure parameters in the **tunnel_options_specification** array when you create a vpn attachment in dual-tunnel mode.-When creating a vpn attachment in dual-tunnel mode, you must add both tunnels for the vpn attachment to ensure that the vpn attachment has link redundancy. Only two tunnels can be added to a vpn attachment.
func (o GetGatewayVpnAttachmentsAttachmentOutput) TunnelOptionsSpecifications() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification {
		return v.TunnelOptionsSpecifications
	}).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput)
}

// vpn attachment name
func (o GetGatewayVpnAttachmentsAttachmentOutput) VpnAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.VpnAttachmentName }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetGatewayVpnAttachmentsAttachmentOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentArrayOutput) ToGetGatewayVpnAttachmentsAttachmentArrayOutput() GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentArrayOutput) ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachment {
		return vs[0].([]GetGatewayVpnAttachmentsAttachment)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentOutput)
}

type GetGatewayVpnAttachmentsAttachmentBgpConfig struct {
	// The number of the local (Alibaba Cloud) autonomous system of the tunnel. The value range of the autonomous system number is **1** to **4294967295**. Default value: **45104**.> We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. The private number range of the autonomous system number please consult the document yourself.
	LocalAsn int `pulumi:"localAsn"`
	// The local BGP address of the tunnel (on the Alibaba Cloud side). This address is an IP address in the BGP network segment.
	LocalBgpIp string `pulumi:"localBgpIp"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status string `pulumi:"status"`
	// The BGP network segment of the tunnel. The network segment must be a network segment with a mask length of 30 in 169.254.0.0/16, and cannot be 169.254.0.0/30, 169.254.1.0/30, 169.254.2.0/30, 169.254.3.0/30, 169.254.4.0/30, 169.254.5.0/30, 169.254.6.0/30, and 169.254.169.252/30.> the network segments of two tunnels under an IPsec connection cannot be the same.
	TunnelCidr string `pulumi:"tunnelCidr"`
}

// GetGatewayVpnAttachmentsAttachmentBgpConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentBgpConfigArgs and GetGatewayVpnAttachmentsAttachmentBgpConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentBgpConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentBgpConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentBgpConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigArgs struct {
	// The number of the local (Alibaba Cloud) autonomous system of the tunnel. The value range of the autonomous system number is **1** to **4294967295**. Default value: **45104**.> We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. The private number range of the autonomous system number please consult the document yourself.
	LocalAsn pulumi.IntInput `pulumi:"localAsn"`
	// The local BGP address of the tunnel (on the Alibaba Cloud side). This address is an IP address in the BGP network segment.
	LocalBgpIp pulumi.StringInput `pulumi:"localBgpIp"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status pulumi.StringInput `pulumi:"status"`
	// The BGP network segment of the tunnel. The network segment must be a network segment with a mask length of 30 in 169.254.0.0/16, and cannot be 169.254.0.0/30, 169.254.1.0/30, 169.254.2.0/30, 169.254.3.0/30, 169.254.4.0/30, 169.254.5.0/30, 169.254.6.0/30, and 169.254.169.252/30.> the network segments of two tunnels under an IPsec connection cannot be the same.
	TunnelCidr pulumi.StringInput `pulumi:"tunnelCidr"`
}

func (GetGatewayVpnAttachmentsAttachmentBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArgs) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArgs) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentBgpConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentBgpConfigArray and GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentBgpConfigArray{ GetGatewayVpnAttachmentsAttachmentBgpConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigArray []GetGatewayVpnAttachmentsAttachmentBgpConfigInput

func (GetGatewayVpnAttachmentsAttachmentBgpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArray) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArray) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return o
}

// The number of the local (Alibaba Cloud) autonomous system of the tunnel. The value range of the autonomous system number is **1** to **4294967295**. Default value: **45104**.> We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. The private number range of the autonomous system number please consult the document yourself.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) LocalAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) int { return v.LocalAsn }).(pulumi.IntOutput)
}

// The local BGP address of the tunnel (on the Alibaba Cloud side). This address is an IP address in the BGP network segment.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) LocalBgpIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.LocalBgpIp }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.Status }).(pulumi.StringOutput)
}

// The BGP network segment of the tunnel. The network segment must be a network segment with a mask length of 30 in 169.254.0.0/16, and cannot be 169.254.0.0/30, 169.254.1.0/30, 169.254.2.0/30, 169.254.3.0/30, 169.254.4.0/30, 169.254.5.0/30, 169.254.6.0/30, and 169.254.169.252/30.> the network segments of two tunnels under an IPsec connection cannot be the same.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) TunnelCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.TunnelCidr }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentBgpConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentBgpConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentBgpConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfig struct {
	// Target IP.
	Dip string `pulumi:"dip"`
	// Whether health check is enabled:-**false**: not enabled. -**true**: enabled.
	Enable bool `pulumi:"enable"`
	// The health check retry interval, in seconds.
	Interval int `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails- **revoke_route**(default): withdraws published routes.- **reserve_route**: does not withdraw published routes.
	Policy string `pulumi:"policy"`
	// Number of retries for health check.
	Retry int `pulumi:"retry"`
	// SOURCE IP.
	Sip string `pulumi:"sip"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status string `pulumi:"status"`
}

// GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs and GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs struct {
	// Target IP.
	Dip pulumi.StringInput `pulumi:"dip"`
	// Whether health check is enabled:-**false**: not enabled. -**true**: enabled.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The health check retry interval, in seconds.
	Interval pulumi.IntInput `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails- **revoke_route**(default): withdraws published routes.- **reserve_route**: does not withdraw published routes.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Number of retries for health check.
	Retry pulumi.IntInput `pulumi:"retry"`
	// SOURCE IP.
	Sip pulumi.StringInput `pulumi:"sip"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray and GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray{ GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray []GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return o
}

// Target IP.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Dip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Dip }).(pulumi.StringOutput)
}

// Whether health check is enabled:-**false**: not enabled. -**true**: enabled.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The health check retry interval, in seconds.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) int { return v.Interval }).(pulumi.IntOutput)
}

// Whether to revoke the published route when the health check fails- **revoke_route**(default): withdraws published routes.- **reserve_route**: does not withdraw published routes.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Policy }).(pulumi.StringOutput)
}

// Number of retries for health check.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Retry() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) int { return v.Retry }).(pulumi.IntOutput)
}

// SOURCE IP.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Sip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Sip }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentHealthCheckConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentIkeConfig struct {
	// The authentication algorithm negotiated in the first stage. Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IkeAuthAlg string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm negotiated in the first stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IkeEncAlg string `pulumi:"ikeEncAlg"`
	// The life cycle of SA negotiated in the first stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IkeLifetime int `pulumi:"ikeLifetime"`
	// IKE version of the negotiation mode. Value: **main** or **aggressive**. Default value: **main**.-**main**: main mode, high security during negotiation.-**aggressive**: Savage mode, fast negotiation and high negotiation success rate.
	IkeMode string `pulumi:"ikeMode"`
	// The first stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **group1**, **group2**, **group5**, **group14**.
	IkePfs string `pulumi:"ikePfs"`
	// Version of the IKE protocol. Value: **ikev1** or **ikev2**. Default value: **ikev2**.Compared with IKEv1, IKEv2 simplifies the SA negotiation process and provides better support for multiple network segments.
	IkeVersion string `pulumi:"ikeVersion"`
	// The identifier of the local end of the tunnel (Alibaba Cloud side), which is used for the first phase of negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the tunnel.**LocalId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	LocalId string `pulumi:"localId"`
	// The pre-shared key is used for identity authentication between the tunnel and the tunnel peer.-The key can be 1 to 100 characters in length. It supports numbers, upper and lower case English letters, and characters on the right. It cannot contain spaces. '''~! \'@#$%^& *()_-+ ={}[]|;:',./? '''-If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. > The pre-shared key of the tunnel and the tunnel peer must be the same, otherwise the system cannot establish the tunnel normally.
	Psk string `pulumi:"psk"`
	// Identifier of the tunnel peer, which is used for the first-stage negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the user gateway associated with the tunnel.- **RemoteId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	RemoteId string `pulumi:"remoteId"`
}

// GetGatewayVpnAttachmentsAttachmentIkeConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIkeConfigArgs and GetGatewayVpnAttachmentsAttachmentIkeConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIkeConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIkeConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentIkeConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigArgs struct {
	// The authentication algorithm negotiated in the first stage. Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IkeAuthAlg pulumi.StringInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm negotiated in the first stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IkeEncAlg pulumi.StringInput `pulumi:"ikeEncAlg"`
	// The life cycle of SA negotiated in the first stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IkeLifetime pulumi.IntInput `pulumi:"ikeLifetime"`
	// IKE version of the negotiation mode. Value: **main** or **aggressive**. Default value: **main**.-**main**: main mode, high security during negotiation.-**aggressive**: Savage mode, fast negotiation and high negotiation success rate.
	IkeMode pulumi.StringInput `pulumi:"ikeMode"`
	// The first stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **group1**, **group2**, **group5**, **group14**.
	IkePfs pulumi.StringInput `pulumi:"ikePfs"`
	// Version of the IKE protocol. Value: **ikev1** or **ikev2**. Default value: **ikev2**.Compared with IKEv1, IKEv2 simplifies the SA negotiation process and provides better support for multiple network segments.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// The identifier of the local end of the tunnel (Alibaba Cloud side), which is used for the first phase of negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the tunnel.**LocalId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The pre-shared key is used for identity authentication between the tunnel and the tunnel peer.-The key can be 1 to 100 characters in length. It supports numbers, upper and lower case English letters, and characters on the right. It cannot contain spaces. '''~! \'@#$%^& *()_-+ ={}[]|;:',./? '''-If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. > The pre-shared key of the tunnel and the tunnel peer must be the same, otherwise the system cannot establish the tunnel normally.
	Psk pulumi.StringInput `pulumi:"psk"`
	// Identifier of the tunnel peer, which is used for the first-stage negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the user gateway associated with the tunnel.- **RemoteId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
}

func (GetGatewayVpnAttachmentsAttachmentIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIkeConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIkeConfigArray and GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIkeConfigArray{ GetGatewayVpnAttachmentsAttachmentIkeConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigArray []GetGatewayVpnAttachmentsAttachmentIkeConfigInput

func (GetGatewayVpnAttachmentsAttachmentIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArray) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArray) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return o
}

// The authentication algorithm negotiated in the first stage. Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeAuthAlg }).(pulumi.StringOutput)
}

// The encryption algorithm negotiated in the first stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeEncAlg }).(pulumi.StringOutput)
}

// The life cycle of SA negotiated in the first stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) int { return v.IkeLifetime }).(pulumi.IntOutput)
}

// IKE version of the negotiation mode. Value: **main** or **aggressive**. Default value: **main**.-**main**: main mode, high security during negotiation.-**aggressive**: Savage mode, fast negotiation and high negotiation success rate.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeMode }).(pulumi.StringOutput)
}

// The first stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **group1**, **group2**, **group5**, **group14**.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkePfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkePfs }).(pulumi.StringOutput)
}

// Version of the IKE protocol. Value: **ikev1** or **ikev2**. Default value: **ikev2**.Compared with IKEv1, IKEv2 simplifies the SA negotiation process and provides better support for multiple network segments.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// The identifier of the local end of the tunnel (Alibaba Cloud side), which is used for the first phase of negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the tunnel.**LocalId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.LocalId }).(pulumi.StringOutput)
}

// The pre-shared key is used for identity authentication between the tunnel and the tunnel peer.-The key can be 1 to 100 characters in length. It supports numbers, upper and lower case English letters, and characters on the right. It cannot contain spaces. ”'~! \'@#$%^& *()_-+ ={}[]|;:',./? ”'-If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. > The pre-shared key of the tunnel and the tunnel peer must be the same, otherwise the system cannot establish the tunnel normally.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) Psk() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.Psk }).(pulumi.StringOutput)
}

// Identifier of the tunnel peer, which is used for the first-stage negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the user gateway associated with the tunnel.- **RemoteId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.RemoteId }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentIkeConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentIkeConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentIkeConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfig struct {
	// The second stage negotiated authentication algorithm.Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm negotiated in the second stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// The life cycle of SA negotiated in the second stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IpsecLifetime int `pulumi:"ipsecLifetime"`
	// The second stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **disabled**, **group1**, **group2**, **group5**, **group14**.
	IpsecPfs string `pulumi:"ipsecPfs"`
}

// GetGatewayVpnAttachmentsAttachmentIpsecConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs and GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIpsecConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentIpsecConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs struct {
	// The second stage negotiated authentication algorithm.Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm negotiated in the second stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// The life cycle of SA negotiated in the second stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IpsecLifetime pulumi.IntInput `pulumi:"ipsecLifetime"`
	// The second stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **disabled**, **group1**, **group2**, **group5**, **group14**.
	IpsecPfs pulumi.StringInput `pulumi:"ipsecPfs"`
}

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIpsecConfigArray and GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIpsecConfigArray{ GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigArray []GetGatewayVpnAttachmentsAttachmentIpsecConfigInput

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArray) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArray) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return o
}

// The second stage negotiated authentication algorithm.Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// The encryption algorithm negotiated in the second stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// The life cycle of SA negotiated in the second stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) int { return v.IpsecLifetime }).(pulumi.IntOutput)
}

// The second stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **disabled**, **group1**, **group2**, **group5**, **group14**.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecPfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecPfs }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentIpsecConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentIpsecConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification struct {
	// The ID of the user gateway associated with the tunnel.> This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:-**true** (default): enable the DPD function. IPsec initiator will send DPD message to check whether the peer device is alive. If the peer device does not receive a correct response within the set time, it is considered that the peer has been disconnected. IPsec will delete ISAKMP SA and the corresponding IPsec SA, and the security tunnel will also be deleted.-**false**: If the DPD function is disabled, the IPsec initiator does not send DPD detection packets.
	EnableDpd bool `pulumi:"enableDpd"`
	// Whether the NAT crossing function is enabled for the tunnel. Value:-**true** (default): Enables the NAT Traversal function. When enabled, the IKE negotiation process deletes the verification process of the UDP port number and realizes the discovery function of the NAT gateway device in the tunnel.-**false**: does not enable the NAT Traversal function.
	EnableNatTraversal bool `pulumi:"enableNatTraversal"`
	// The local internet IP in Tunnel.
	InternetIp string `pulumi:"internetIp"`
	// The role of Tunnel.
	Role string `pulumi:"role"`
	// The state of Tunnel.
	State string `pulumi:"state"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status string `pulumi:"status"`
	// Add the BGP configuration for the tunnel.> After you enable the BGP function for IPsec connections (that is, specify **EnableTunnelsBgp** as **true**), you must configure this parameter.
	TunnelBgpConfig GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig `pulumi:"tunnelBgpConfig"`
	// The tunnel ID of IPsec-VPN connection.
	TunnelId string `pulumi:"tunnelId"`
	// Configuration information for the first phase negotiation.
	TunnelIkeConfig GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig `pulumi:"tunnelIkeConfig"`
	// The order in which the tunnel was created.-**1**: First tunnel.-**2**: The second tunnel.
	TunnelIndex int `pulumi:"tunnelIndex"`
	// Configuration information for the second-stage negotiation.
	TunnelIpsecConfig GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig `pulumi:"tunnelIpsecConfig"`
	// The zoneNo of tunnel.
	ZoneNo string `pulumi:"zoneNo"`
}

// GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs and GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs{...}
type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput
	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs struct {
	// The ID of the user gateway associated with the tunnel.> This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:-**true** (default): enable the DPD function. IPsec initiator will send DPD message to check whether the peer device is alive. If the peer device does not receive a correct response within the set time, it is considered that the peer has been disconnected. IPsec will delete ISAKMP SA and the corresponding IPsec SA, and the security tunnel will also be deleted.-**false**: If the DPD function is disabled, the IPsec initiator does not send DPD detection packets.
	EnableDpd pulumi.BoolInput `pulumi:"enableDpd"`
	// Whether the NAT crossing function is enabled for the tunnel. Value:-**true** (default): Enables the NAT Traversal function. When enabled, the IKE negotiation process deletes the verification process of the UDP port number and realizes the discovery function of the NAT gateway device in the tunnel.-**false**: does not enable the NAT Traversal function.
	EnableNatTraversal pulumi.BoolInput `pulumi:"enableNatTraversal"`
	// The local internet IP in Tunnel.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The role of Tunnel.
	Role pulumi.StringInput `pulumi:"role"`
	// The state of Tunnel.
	State pulumi.StringInput `pulumi:"state"`
	// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
	Status pulumi.StringInput `pulumi:"status"`
	// Add the BGP configuration for the tunnel.> After you enable the BGP function for IPsec connections (that is, specify **EnableTunnelsBgp** as **true**), you must configure this parameter.
	TunnelBgpConfig GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput `pulumi:"tunnelBgpConfig"`
	// The tunnel ID of IPsec-VPN connection.
	TunnelId pulumi.StringInput `pulumi:"tunnelId"`
	// Configuration information for the first phase negotiation.
	TunnelIkeConfig GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput `pulumi:"tunnelIkeConfig"`
	// The order in which the tunnel was created.-**1**: First tunnel.-**2**: The second tunnel.
	TunnelIndex pulumi.IntInput `pulumi:"tunnelIndex"`
	// Configuration information for the second-stage negotiation.
	TunnelIpsecConfig GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput `pulumi:"tunnelIpsecConfig"`
	// The zoneNo of tunnel.
	ZoneNo pulumi.StringInput `pulumi:"zoneNo"`
}

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput)
}

// GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray and GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray{ GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs{...} }
type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray []GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationInput

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput {
	return o
}

// The ID of the user gateway associated with the tunnel.> This parameter is required when creating a dual-tunnel mode IPsec-VPN connection.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string {
		return v.CustomerGatewayId
	}).(pulumi.StringOutput)
}

// Whether the DPD (peer alive detection) function is enabled for the tunnel. Value:-**true** (default): enable the DPD function. IPsec initiator will send DPD message to check whether the peer device is alive. If the peer device does not receive a correct response within the set time, it is considered that the peer has been disconnected. IPsec will delete ISAKMP SA and the corresponding IPsec SA, and the security tunnel will also be deleted.-**false**: If the DPD function is disabled, the IPsec initiator does not send DPD detection packets.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) EnableDpd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) bool { return v.EnableDpd }).(pulumi.BoolOutput)
}

// Whether the NAT crossing function is enabled for the tunnel. Value:-**true** (default): Enables the NAT Traversal function. When enabled, the IKE negotiation process deletes the verification process of the UDP port number and realizes the discovery function of the NAT gateway device in the tunnel.-**false**: does not enable the NAT Traversal function.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) EnableNatTraversal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) bool { return v.EnableNatTraversal }).(pulumi.BoolOutput)
}

// The local internet IP in Tunnel.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The role of Tunnel.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string { return v.Role }).(pulumi.StringOutput)
}

// The state of Tunnel.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string { return v.State }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `init`, `active`, `attaching`, `attached`, `detaching`, `financialLocked`, `provisioning`, `updating`, `upgrading`, `deleted`.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string { return v.Status }).(pulumi.StringOutput)
}

// Add the BGP configuration for the tunnel.> After you enable the BGP function for IPsec connections (that is, specify **EnableTunnelsBgp** as **true**), you must configure this parameter.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) TunnelBgpConfig() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig {
		return v.TunnelBgpConfig
	}).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

// The tunnel ID of IPsec-VPN connection.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string { return v.TunnelId }).(pulumi.StringOutput)
}

// Configuration information for the first phase negotiation.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) TunnelIkeConfig() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig {
		return v.TunnelIkeConfig
	}).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

// The order in which the tunnel was created.-**1**: First tunnel.-**2**: The second tunnel.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) TunnelIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) int { return v.TunnelIndex }).(pulumi.IntOutput)
}

// Configuration information for the second-stage negotiation.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) TunnelIpsecConfig() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig {
		return v.TunnelIpsecConfig
	}).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

// The zoneNo of tunnel.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput) ZoneNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification) string { return v.ZoneNo }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecification)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig struct {
	// BGP status.
	BgpStatus string `pulumi:"bgpStatus"`
	// The number of the local (Alibaba Cloud) autonomous system of the tunnel. The value range of the autonomous system number is **1** to **4294967295**. Default value: **45104**.> We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. The private number range of the autonomous system number please consult the document yourself.
	LocalAsn int `pulumi:"localAsn"`
	// The local BGP address of the tunnel (on the Alibaba Cloud side). This address is an IP address in the BGP network segment.
	LocalBgpIp string `pulumi:"localBgpIp"`
	// Peer asn.
	PeerAsn string `pulumi:"peerAsn"`
	// Peer bgp ip.
	PeerBgpIp string `pulumi:"peerBgpIp"`
	// The BGP network segment of the tunnel. The network segment must be a network segment with a mask length of 30 in 169.254.0.0/16, and cannot be 169.254.0.0/30, 169.254.1.0/30, 169.254.2.0/30, 169.254.3.0/30, 169.254.4.0/30, 169.254.5.0/30, 169.254.6.0/30, and 169.254.169.252/30.> the network segments of two tunnels under an IPsec connection cannot be the same.
	TunnelCidr string `pulumi:"tunnelCidr"`
}

// GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs and GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs struct {
	// BGP status.
	BgpStatus pulumi.StringInput `pulumi:"bgpStatus"`
	// The number of the local (Alibaba Cloud) autonomous system of the tunnel. The value range of the autonomous system number is **1** to **4294967295**. Default value: **45104**.> We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. The private number range of the autonomous system number please consult the document yourself.
	LocalAsn pulumi.IntInput `pulumi:"localAsn"`
	// The local BGP address of the tunnel (on the Alibaba Cloud side). This address is an IP address in the BGP network segment.
	LocalBgpIp pulumi.StringInput `pulumi:"localBgpIp"`
	// Peer asn.
	PeerAsn pulumi.StringInput `pulumi:"peerAsn"`
	// Peer bgp ip.
	PeerBgpIp pulumi.StringInput `pulumi:"peerBgpIp"`
	// The BGP network segment of the tunnel. The network segment must be a network segment with a mask length of 30 in 169.254.0.0/16, and cannot be 169.254.0.0/30, 169.254.1.0/30, 169.254.2.0/30, 169.254.3.0/30, 169.254.4.0/30, 169.254.5.0/30, 169.254.6.0/30, and 169.254.169.252/30.> the network segments of two tunnels under an IPsec connection cannot be the same.
	TunnelCidr pulumi.StringInput `pulumi:"tunnelCidr"`
}

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput {
	return o
}

// BGP status.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) BgpStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig) string {
		return v.BgpStatus
	}).(pulumi.StringOutput)
}

// The number of the local (Alibaba Cloud) autonomous system of the tunnel. The value range of the autonomous system number is **1** to **4294967295**. Default value: **45104**.> We recommend that you use the private number of the autonomous system number to establish a BGP connection with Alibaba Cloud. The private number range of the autonomous system number please consult the document yourself.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig) int {
		return v.LocalAsn
	}).(pulumi.IntOutput)
}

// The local BGP address of the tunnel (on the Alibaba Cloud side). This address is an IP address in the BGP network segment.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) LocalBgpIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig) string {
		return v.LocalBgpIp
	}).(pulumi.StringOutput)
}

// Peer asn.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerAsn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig) string {
		return v.PeerAsn
	}).(pulumi.StringOutput)
}

// Peer bgp ip.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) PeerBgpIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig) string {
		return v.PeerBgpIp
	}).(pulumi.StringOutput)
}

// The BGP network segment of the tunnel. The network segment must be a network segment with a mask length of 30 in 169.254.0.0/16, and cannot be 169.254.0.0/30, 169.254.1.0/30, 169.254.2.0/30, 169.254.3.0/30, 169.254.4.0/30, 169.254.5.0/30, 169.254.6.0/30, and 169.254.169.252/30.> the network segments of two tunnels under an IPsec connection cannot be the same.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput) TunnelCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfig) string {
		return v.TunnelCidr
	}).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig struct {
	// The authentication algorithm negotiated in the first stage. Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IkeAuthAlg string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm negotiated in the first stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IkeEncAlg string `pulumi:"ikeEncAlg"`
	// The life cycle of SA negotiated in the first stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IkeLifetime int `pulumi:"ikeLifetime"`
	// IKE version of the negotiation mode. Value: **main** or **aggressive**. Default value: **main**.-**main**: main mode, high security during negotiation.-**aggressive**: Savage mode, fast negotiation and high negotiation success rate.
	IkeMode string `pulumi:"ikeMode"`
	// The first stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **group1**, **group2**, **group5**, **group14**.
	IkePfs string `pulumi:"ikePfs"`
	// Version of the IKE protocol. Value: **ikev1** or **ikev2**. Default value: **ikev2**.Compared with IKEv1, IKEv2 simplifies the SA negotiation process and provides better support for multiple network segments.
	IkeVersion string `pulumi:"ikeVersion"`
	// The identifier of the local end of the tunnel (Alibaba Cloud side), which is used for the first phase of negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the tunnel.**LocalId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	LocalId string `pulumi:"localId"`
	// The pre-shared key is used for identity authentication between the tunnel and the tunnel peer.-The key can be 1 to 100 characters in length. It supports numbers, upper and lower case English letters, and characters on the right. It cannot contain spaces. '''~! \'@#$%^& *()_-+ ={}[]|;:',./? '''-If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. > The pre-shared key of the tunnel and the tunnel peer must be the same, otherwise the system cannot establish the tunnel normally.
	Psk string `pulumi:"psk"`
	// Identifier of the tunnel peer, which is used for the first-stage negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the user gateway associated with the tunnel.- **RemoteId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	RemoteId string `pulumi:"remoteId"`
}

// GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs and GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs struct {
	// The authentication algorithm negotiated in the first stage. Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IkeAuthAlg pulumi.StringInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm negotiated in the first stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IkeEncAlg pulumi.StringInput `pulumi:"ikeEncAlg"`
	// The life cycle of SA negotiated in the first stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IkeLifetime pulumi.IntInput `pulumi:"ikeLifetime"`
	// IKE version of the negotiation mode. Value: **main** or **aggressive**. Default value: **main**.-**main**: main mode, high security during negotiation.-**aggressive**: Savage mode, fast negotiation and high negotiation success rate.
	IkeMode pulumi.StringInput `pulumi:"ikeMode"`
	// The first stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **group1**, **group2**, **group5**, **group14**.
	IkePfs pulumi.StringInput `pulumi:"ikePfs"`
	// Version of the IKE protocol. Value: **ikev1** or **ikev2**. Default value: **ikev2**.Compared with IKEv1, IKEv2 simplifies the SA negotiation process and provides better support for multiple network segments.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// The identifier of the local end of the tunnel (Alibaba Cloud side), which is used for the first phase of negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the tunnel.**LocalId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The pre-shared key is used for identity authentication between the tunnel and the tunnel peer.-The key can be 1 to 100 characters in length. It supports numbers, upper and lower case English letters, and characters on the right. It cannot contain spaces. '''~! \'@#$%^& *()_-+ ={}[]|;:',./? '''-If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. > The pre-shared key of the tunnel and the tunnel peer must be the same, otherwise the system cannot establish the tunnel normally.
	Psk pulumi.StringInput `pulumi:"psk"`
	// Identifier of the tunnel peer, which is used for the first-stage negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the user gateway associated with the tunnel.- **RemoteId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
}

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput {
	return o
}

// The authentication algorithm negotiated in the first stage. Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.IkeAuthAlg
	}).(pulumi.StringOutput)
}

// The encryption algorithm negotiated in the first stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.IkeEncAlg
	}).(pulumi.StringOutput)
}

// The life cycle of SA negotiated in the first stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) int {
		return v.IkeLifetime
	}).(pulumi.IntOutput)
}

// IKE version of the negotiation mode. Value: **main** or **aggressive**. Default value: **main**.-**main**: main mode, high security during negotiation.-**aggressive**: Savage mode, fast negotiation and high negotiation success rate.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.IkeMode
	}).(pulumi.StringOutput)
}

// The first stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **group1**, **group2**, **group5**, **group14**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkePfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.IkePfs
	}).(pulumi.StringOutput)
}

// Version of the IKE protocol. Value: **ikev1** or **ikev2**. Default value: **ikev2**.Compared with IKEv1, IKEv2 simplifies the SA negotiation process and provides better support for multiple network segments.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.IkeVersion
	}).(pulumi.StringOutput)
}

// The identifier of the local end of the tunnel (Alibaba Cloud side), which is used for the first phase of negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the tunnel.**LocalId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.LocalId
	}).(pulumi.StringOutput)
}

// The pre-shared key is used for identity authentication between the tunnel and the tunnel peer.-The key can be 1 to 100 characters in length. It supports numbers, upper and lower case English letters, and characters on the right. It cannot contain spaces. ”'~! \'@#$%^& *()_-+ ={}[]|;:',./? ”'-If you do not specify a pre-shared key, the system randomly generates a 16-bit string as the pre-shared key. > The pre-shared key of the tunnel and the tunnel peer must be the same, otherwise the system cannot establish the tunnel normally.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) Psk() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.Psk
	}).(pulumi.StringOutput)
}

// Identifier of the tunnel peer, which is used for the first-stage negotiation. The length is limited to 100 characters and cannot contain spaces. The default value is the IP address of the user gateway associated with the tunnel.- **RemoteId** supports the FQDN format. If you use the FQDN format, we recommend that you select **aggressive** (barbaric mode) as the negotiation mode.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfig) string {
		return v.RemoteId
	}).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig struct {
	// The second stage negotiated authentication algorithm.Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm negotiated in the second stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// The life cycle of SA negotiated in the second stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IpsecLifetime int `pulumi:"ipsecLifetime"`
	// The second stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **disabled**, **group1**, **group2**, **group5**, **group14**.
	IpsecPfs string `pulumi:"ipsecPfs"`
}

// GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs and GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs struct {
	// The second stage negotiated authentication algorithm.Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm negotiated in the second stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// The life cycle of SA negotiated in the second stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
	IpsecLifetime pulumi.IntInput `pulumi:"ipsecLifetime"`
	// The second stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **disabled**, **group1**, **group2**, **group5**, **group14**.
	IpsecPfs pulumi.StringInput `pulumi:"ipsecPfs"`
}

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) ToGetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput {
	return o
}

// The second stage negotiated authentication algorithm.Values: **md5**, **sha1**, **sha256**, **sha384**, **sha512**. Default value: **sha1**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) string {
		return v.IpsecAuthAlg
	}).(pulumi.StringOutput)
}

// The encryption algorithm negotiated in the second stage. Value: **aes**, **aes192**, **aes256**, **des**, or **3des**. Default value: **aes**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) string {
		return v.IpsecEncAlg
	}).(pulumi.StringOutput)
}

// The life cycle of SA negotiated in the second stage. Unit: seconds.Value range: **0** to **86400**. Default value: **86400**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) int {
		return v.IpsecLifetime
	}).(pulumi.IntOutput)
}

// The second stage negotiates the Diffie-Hellman key exchange algorithm used. Default value: **group2**.Values: **disabled**, **group1**, **group2**, **group5**, **group14**.
func (o GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput) IpsecPfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfig) string {
		return v.IpsecPfs
	}).(pulumi.StringOutput)
}

type GetGatewayZonesZone struct {
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
	// The zone name.
	ZoneName string `pulumi:"zoneName"`
}

// GetGatewayZonesZoneInput is an input type that accepts GetGatewayZonesZoneArgs and GetGatewayZonesZoneOutput values.
// You can construct a concrete instance of `GetGatewayZonesZoneInput` via:
//
//	GetGatewayZonesZoneArgs{...}
type GetGatewayZonesZoneInput interface {
	pulumi.Input

	ToGetGatewayZonesZoneOutput() GetGatewayZonesZoneOutput
	ToGetGatewayZonesZoneOutputWithContext(context.Context) GetGatewayZonesZoneOutput
}

type GetGatewayZonesZoneArgs struct {
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The zone name.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetGatewayZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayZonesZone)(nil)).Elem()
}

func (i GetGatewayZonesZoneArgs) ToGetGatewayZonesZoneOutput() GetGatewayZonesZoneOutput {
	return i.ToGetGatewayZonesZoneOutputWithContext(context.Background())
}

func (i GetGatewayZonesZoneArgs) ToGetGatewayZonesZoneOutputWithContext(ctx context.Context) GetGatewayZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayZonesZoneOutput)
}

// GetGatewayZonesZoneArrayInput is an input type that accepts GetGatewayZonesZoneArray and GetGatewayZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetGatewayZonesZoneArrayInput` via:
//
//	GetGatewayZonesZoneArray{ GetGatewayZonesZoneArgs{...} }
type GetGatewayZonesZoneArrayInput interface {
	pulumi.Input

	ToGetGatewayZonesZoneArrayOutput() GetGatewayZonesZoneArrayOutput
	ToGetGatewayZonesZoneArrayOutputWithContext(context.Context) GetGatewayZonesZoneArrayOutput
}

type GetGatewayZonesZoneArray []GetGatewayZonesZoneInput

func (GetGatewayZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayZonesZone)(nil)).Elem()
}

func (i GetGatewayZonesZoneArray) ToGetGatewayZonesZoneArrayOutput() GetGatewayZonesZoneArrayOutput {
	return i.ToGetGatewayZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetGatewayZonesZoneArray) ToGetGatewayZonesZoneArrayOutputWithContext(ctx context.Context) GetGatewayZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayZonesZoneArrayOutput)
}

type GetGatewayZonesZoneOutput struct{ *pulumi.OutputState }

func (GetGatewayZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayZonesZone)(nil)).Elem()
}

func (o GetGatewayZonesZoneOutput) ToGetGatewayZonesZoneOutput() GetGatewayZonesZoneOutput {
	return o
}

func (o GetGatewayZonesZoneOutput) ToGetGatewayZonesZoneOutputWithContext(ctx context.Context) GetGatewayZonesZoneOutput {
	return o
}

// The zone ID.
func (o GetGatewayZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The zone name.
func (o GetGatewayZonesZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayZonesZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetGatewayZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayZonesZone)(nil)).Elem()
}

func (o GetGatewayZonesZoneArrayOutput) ToGetGatewayZonesZoneArrayOutput() GetGatewayZonesZoneArrayOutput {
	return o
}

func (o GetGatewayZonesZoneArrayOutput) ToGetGatewayZonesZoneArrayOutputWithContext(ctx context.Context) GetGatewayZonesZoneArrayOutput {
	return o
}

func (o GetGatewayZonesZoneArrayOutput) Index(i pulumi.IntInput) GetGatewayZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayZonesZone {
		return vs[0].([]GetGatewayZonesZone)[vs[1].(int)]
	}).(GetGatewayZonesZoneOutput)
}

type GetGatewaysGateway struct {
	// Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
	AutoPropagate string `pulumi:"autoPropagate"`
	// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
	BusinessStatus string `pulumi:"businessStatus"`
	// The creation time of the VPN gateway.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPN
	Description string `pulumi:"description"`
	// The backup public IP address of the VPN gateway. The second IP address assigned by the system to create an IPsec-VPN connection. This parameter is returned only when the VPN gateway supports the dual-tunnel mode.
	DisasterRecoveryInternetIp string `pulumi:"disasterRecoveryInternetIp"`
	// - The ID of the backup vSwitch to which the VPN gateway is attached.
	DisasterRecoveryVswitchId string `pulumi:"disasterRecoveryVswitchId"`
	// Indicates whether the IPsec-VPN feature is enabled.
	EnableIpsec string `pulumi:"enableIpsec"`
	// Whether the ssl function is enabled. It has been deprecated from provider version 1.243.0, and using `sslVpn` instead.
	EnableSsl string `pulumi:"enableSsl"`
	// The expiration time of the VPN gateway.
	EndTime string `pulumi:"endTime"`
	// ID of the VPN.
	Id string `pulumi:"id"`
	// The charge type of the VPN gateway.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// The internet ip of the VPN.
	InternetIp string `pulumi:"internetIp"`
	// The name of the VPN.
	Name string `pulumi:"name"`
	// The network type of the VPN gateway.
	NetworkType string `pulumi:"networkType"`
	// The ID of the resource group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The Specification of the VPN
	Specification string `pulumi:"specification"`
	// Total count of ssl vpn connections.
	SslConnections int `pulumi:"sslConnections"`
	// Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
	SslVpn string `pulumi:"sslVpn"`
	// The IP address of the SSL-VPN connection. This parameter is returned only when the VPN gateway is a public VPN gateway and supports only the single-tunnel mode. In addition, the VPN gateway must have the SSL-VPN feature enabled.
	SslVpnInternetIp string `pulumi:"sslVpnInternetIp"`
	// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
	Status string `pulumi:"status"`
	// The Tag of.
	Tags map[string]string `pulumi:"tags"`
	// Use the VPC ID as the search key.
	VpcId string `pulumi:"vpcId"`
	// - The VPN gateway type. Value:  Normal (default): Normal type. NationalStandard: National Secret type.
	VpnType string `pulumi:"vpnType"`
	// - The ID of the vSwitch to which the VPN gateway is attached.
	VswitchId string `pulumi:"vswitchId"`
}

// GetGatewaysGatewayInput is an input type that accepts GetGatewaysGatewayArgs and GetGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetGatewaysGatewayInput` via:
//
//	GetGatewaysGatewayArgs{...}
type GetGatewaysGatewayInput interface {
	pulumi.Input

	ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput
	ToGetGatewaysGatewayOutputWithContext(context.Context) GetGatewaysGatewayOutput
}

type GetGatewaysGatewayArgs struct {
	// Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
	AutoPropagate pulumi.StringInput `pulumi:"autoPropagate"`
	// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The creation time of the VPN gateway.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPN
	Description pulumi.StringInput `pulumi:"description"`
	// The backup public IP address of the VPN gateway. The second IP address assigned by the system to create an IPsec-VPN connection. This parameter is returned only when the VPN gateway supports the dual-tunnel mode.
	DisasterRecoveryInternetIp pulumi.StringInput `pulumi:"disasterRecoveryInternetIp"`
	// - The ID of the backup vSwitch to which the VPN gateway is attached.
	DisasterRecoveryVswitchId pulumi.StringInput `pulumi:"disasterRecoveryVswitchId"`
	// Indicates whether the IPsec-VPN feature is enabled.
	EnableIpsec pulumi.StringInput `pulumi:"enableIpsec"`
	// Whether the ssl function is enabled. It has been deprecated from provider version 1.243.0, and using `sslVpn` instead.
	EnableSsl pulumi.StringInput `pulumi:"enableSsl"`
	// The expiration time of the VPN gateway.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// ID of the VPN.
	Id pulumi.StringInput `pulumi:"id"`
	// The charge type of the VPN gateway.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// The internet ip of the VPN.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The name of the VPN.
	Name pulumi.StringInput `pulumi:"name"`
	// The network type of the VPN gateway.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The Specification of the VPN
	Specification pulumi.StringInput `pulumi:"specification"`
	// Total count of ssl vpn connections.
	SslConnections pulumi.IntInput `pulumi:"sslConnections"`
	// Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
	SslVpn pulumi.StringInput `pulumi:"sslVpn"`
	// The IP address of the SSL-VPN connection. This parameter is returned only when the VPN gateway is a public VPN gateway and supports only the single-tunnel mode. In addition, the VPN gateway must have the SSL-VPN feature enabled.
	SslVpnInternetIp pulumi.StringInput `pulumi:"sslVpnInternetIp"`
	// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
	Status pulumi.StringInput `pulumi:"status"`
	// The Tag of.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Use the VPC ID as the search key.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// - The VPN gateway type. Value:  Normal (default): Normal type. NationalStandard: National Secret type.
	VpnType pulumi.StringInput `pulumi:"vpnType"`
	// - The ID of the vSwitch to which the VPN gateway is attached.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysGateway)(nil)).Elem()
}

func (i GetGatewaysGatewayArgs) ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput {
	return i.ToGetGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetGatewaysGatewayArgs) ToGetGatewaysGatewayOutputWithContext(ctx context.Context) GetGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewaysGatewayOutput)
}

// GetGatewaysGatewayArrayInput is an input type that accepts GetGatewaysGatewayArray and GetGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewaysGatewayArrayInput` via:
//
//	GetGatewaysGatewayArray{ GetGatewaysGatewayArgs{...} }
type GetGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput
	ToGetGatewaysGatewayArrayOutputWithContext(context.Context) GetGatewaysGatewayArrayOutput
}

type GetGatewaysGatewayArray []GetGatewaysGatewayInput

func (GetGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewaysGateway)(nil)).Elem()
}

func (i GetGatewaysGatewayArray) ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput {
	return i.ToGetGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewaysGatewayArray) ToGetGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewaysGatewayArrayOutput)
}

type GetGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysGateway)(nil)).Elem()
}

func (o GetGatewaysGatewayOutput) ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput {
	return o
}

func (o GetGatewaysGatewayOutput) ToGetGatewaysGatewayOutputWithContext(ctx context.Context) GetGatewaysGatewayOutput {
	return o
}

// Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
func (o GetGatewaysGatewayOutput) AutoPropagate() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.AutoPropagate }).(pulumi.StringOutput)
}

// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
func (o GetGatewaysGatewayOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The creation time of the VPN gateway.
func (o GetGatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPN
func (o GetGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// The backup public IP address of the VPN gateway. The second IP address assigned by the system to create an IPsec-VPN connection. This parameter is returned only when the VPN gateway supports the dual-tunnel mode.
func (o GetGatewaysGatewayOutput) DisasterRecoveryInternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.DisasterRecoveryInternetIp }).(pulumi.StringOutput)
}

// - The ID of the backup vSwitch to which the VPN gateway is attached.
func (o GetGatewaysGatewayOutput) DisasterRecoveryVswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.DisasterRecoveryVswitchId }).(pulumi.StringOutput)
}

// Indicates whether the IPsec-VPN feature is enabled.
func (o GetGatewaysGatewayOutput) EnableIpsec() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EnableIpsec }).(pulumi.StringOutput)
}

// Whether the ssl function is enabled. It has been deprecated from provider version 1.243.0, and using `sslVpn` instead.
func (o GetGatewaysGatewayOutput) EnableSsl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EnableSsl }).(pulumi.StringOutput)
}

// The expiration time of the VPN gateway.
func (o GetGatewaysGatewayOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EndTime }).(pulumi.StringOutput)
}

// ID of the VPN.
func (o GetGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The charge type of the VPN gateway.
func (o GetGatewaysGatewayOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The internet ip of the VPN.
func (o GetGatewaysGatewayOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The name of the VPN.
func (o GetGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The network type of the VPN gateway.
func (o GetGatewaysGatewayOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o GetGatewaysGatewayOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The Specification of the VPN
func (o GetGatewaysGatewayOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Specification }).(pulumi.StringOutput)
}

// Total count of ssl vpn connections.
func (o GetGatewaysGatewayOutput) SslConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewaysGateway) int { return v.SslConnections }).(pulumi.IntOutput)
}

// Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
func (o GetGatewaysGatewayOutput) SslVpn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.SslVpn }).(pulumi.StringOutput)
}

// The IP address of the SSL-VPN connection. This parameter is returned only when the VPN gateway is a public VPN gateway and supports only the single-tunnel mode. In addition, the VPN gateway must have the SSL-VPN feature enabled.
func (o GetGatewaysGatewayOutput) SslVpnInternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.SslVpnInternetIp }).(pulumi.StringOutput)
}

// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
func (o GetGatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// The Tag of.
func (o GetGatewaysGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGatewaysGateway) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Use the VPC ID as the search key.
func (o GetGatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

// - The VPN gateway type. Value:  Normal (default): Normal type. NationalStandard: National Secret type.
func (o GetGatewaysGatewayOutput) VpnType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.VpnType }).(pulumi.StringOutput)
}

// - The ID of the vSwitch to which the VPN gateway is attached.
func (o GetGatewaysGatewayOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewaysGateway)(nil)).Elem()
}

func (o GetGatewaysGatewayArrayOutput) ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput {
	return o
}

func (o GetGatewaysGatewayArrayOutput) ToGetGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetGatewaysGatewayArrayOutput {
	return o
}

func (o GetGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewaysGateway {
		return vs[0].([]GetGatewaysGateway)[vs[1].(int)]
	}).(GetGatewaysGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionBgpConfigInput)(nil)).Elem(), ConnectionBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionBgpConfigPtrInput)(nil)).Elem(), ConnectionBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionHealthCheckConfigInput)(nil)).Elem(), ConnectionHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionHealthCheckConfigPtrInput)(nil)).Elem(), ConnectionHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIkeConfigInput)(nil)).Elem(), ConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIkeConfigPtrInput)(nil)).Elem(), ConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIpsecConfigInput)(nil)).Elem(), ConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIpsecConfigPtrInput)(nil)).Elem(), ConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationArrayInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelBgpConfigInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIkeConfigInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrInput)(nil)).Elem(), ConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentBgpConfigInput)(nil)).Elem(), GatewayVpnAttachmentBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentBgpConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfigInput)(nil)).Elem(), GatewayVpnAttachmentHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIkeConfigInput)(nil)).Elem(), GatewayVpnAttachmentIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIkeConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIpsecConfigInput)(nil)).Elem(), GatewayVpnAttachmentIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIpsecConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationArrayInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIkeConfigInput)(nil)).Elem(), IpsecServerIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIkeConfigArrayInput)(nil)).Elem(), IpsecServerIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIpsecConfigInput)(nil)).Elem(), IpsecServerIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIpsecConfigArrayInput)(nil)).Elem(), IpsecServerIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionInput)(nil)).Elem(), GetConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionArrayInput)(nil)).Elem(), GetConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIkeConfigInput)(nil)).Elem(), GetConnectionsConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIkeConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIpsecConfigInput)(nil)).Elem(), GetConnectionsConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIpsecConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationInput)(nil)).Elem(), GetConnectionsConnectionTunnelOptionsSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationArrayInput)(nil)).Elem(), GetConnectionsConnectionTunnelOptionsSpecificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigInput)(nil)).Elem(), GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigInput)(nil)).Elem(), GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigInput)(nil)).Elem(), GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheckInput)(nil)).Elem(), GetConnectionsConnectionVcoHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheckArrayInput)(nil)).Elem(), GetConnectionsConnectionVcoHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfigInput)(nil)).Elem(), GetConnectionsConnectionVpnBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionVpnBgpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomerGatewaysGatewayInput)(nil)).Elem(), GetCustomerGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomerGatewaysGatewayArrayInput)(nil)).Elem(), GetCustomerGatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVcoRoutesRouteInput)(nil)).Elem(), GetGatewayVcoRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVcoRoutesRouteArrayInput)(nil)).Elem(), GetGatewayVcoRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentBgpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayZonesZoneInput)(nil)).Elem(), GetGatewayZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayZonesZoneArrayInput)(nil)).Elem(), GetGatewayZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewaysGatewayInput)(nil)).Elem(), GetGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewaysGatewayArrayInput)(nil)).Elem(), GetGatewaysGatewayArray{})
	pulumi.RegisterOutputType(ConnectionBgpConfigOutput{})
	pulumi.RegisterOutputType(ConnectionBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(ConnectionHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(ConnectionIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(ConnectionIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationArrayOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationTunnelBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationTunnelIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput{})
	pulumi.RegisterOutputType(ConnectionTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentBgpConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIkeConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIpsecConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentTunnelOptionsSpecificationTunnelIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(IpsecServerIkeConfigOutput{})
	pulumi.RegisterOutputType(IpsecServerIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(IpsecServerIpsecConfigOutput{})
	pulumi.RegisterOutputType(IpsecServerIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionTunnelOptionsSpecificationOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionTunnelOptionsSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionTunnelOptionsSpecificationTunnelIkeConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionTunnelOptionsSpecificationTunnelIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVcoHealthCheckOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVcoHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVpnBgpConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVpnBgpConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVcoRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetGatewayVcoRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentBgpConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIkeConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelBgpConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIkeConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentTunnelOptionsSpecificationTunnelIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayZonesZoneOutput{})
	pulumi.RegisterOutputType(GetGatewayZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewaysGatewayArrayOutput{})
}
