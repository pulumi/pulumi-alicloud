// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectionIkeConfig struct {
	// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId *string `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
	IkePfs *string `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId *string `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
	IkeVersion *string `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk *string `pulumi:"psk"`
}

// ConnectionIkeConfigInput is an input type that accepts ConnectionIkeConfigArgs and ConnectionIkeConfigOutput values.
// You can construct a concrete instance of `ConnectionIkeConfigInput` via:
//
//          ConnectionIkeConfigArgs{...}
type ConnectionIkeConfigInput interface {
	pulumi.Input

	ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput
	ToConnectionIkeConfigOutputWithContext(context.Context) ConnectionIkeConfigOutput
}

type ConnectionIkeConfigArgs struct {
	// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId pulumi.StringPtrInput `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId pulumi.StringPtrInput `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
}

func (ConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIkeConfig)(nil)).Elem()
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput {
	return i.ToConnectionIkeConfigOutputWithContext(context.Background())
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigOutputWithContext(ctx context.Context) ConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigOutput)
}

// ConnectionIkeConfigArrayInput is an input type that accepts ConnectionIkeConfigArray and ConnectionIkeConfigArrayOutput values.
// You can construct a concrete instance of `ConnectionIkeConfigArrayInput` via:
//
//          ConnectionIkeConfigArray{ ConnectionIkeConfigArgs{...} }
type ConnectionIkeConfigArrayInput interface {
	pulumi.Input

	ToConnectionIkeConfigArrayOutput() ConnectionIkeConfigArrayOutput
	ToConnectionIkeConfigArrayOutputWithContext(context.Context) ConnectionIkeConfigArrayOutput
}

type ConnectionIkeConfigArray []ConnectionIkeConfigInput

func (ConnectionIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionIkeConfig)(nil)).Elem()
}

func (i ConnectionIkeConfigArray) ToConnectionIkeConfigArrayOutput() ConnectionIkeConfigArrayOutput {
	return i.ToConnectionIkeConfigArrayOutputWithContext(context.Background())
}

func (i ConnectionIkeConfigArray) ToConnectionIkeConfigArrayOutputWithContext(ctx context.Context) ConnectionIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigArrayOutput)
}

type ConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (ConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIkeConfig)(nil)).Elem()
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput {
	return o
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigOutputWithContext(ctx context.Context) ConnectionIkeConfigOutput {
	return o
}

// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
func (o ConnectionIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
func (o ConnectionIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
func (o ConnectionIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The identification of the VPN gateway.
func (o ConnectionIkeConfigOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeLocalId }).(pulumi.StringPtrOutput)
}

// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
func (o ConnectionIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
func (o ConnectionIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The identification of the customer gateway.
func (o ConnectionIkeConfigOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeRemoteId }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
func (o ConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o ConnectionIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

type ConnectionIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (ConnectionIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionIkeConfig)(nil)).Elem()
}

func (o ConnectionIkeConfigArrayOutput) ToConnectionIkeConfigArrayOutput() ConnectionIkeConfigArrayOutput {
	return o
}

func (o ConnectionIkeConfigArrayOutput) ToConnectionIkeConfigArrayOutputWithContext(ctx context.Context) ConnectionIkeConfigArrayOutput {
	return o
}

func (o ConnectionIkeConfigArrayOutput) Index(i pulumi.IntInput) ConnectionIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionIkeConfig {
		return vs[0].([]ConnectionIkeConfig)[vs[1].(int)]
	}).(ConnectionIkeConfigOutput)
}

type ConnectionIpsecConfig struct {
	// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// ConnectionIpsecConfigInput is an input type that accepts ConnectionIpsecConfigArgs and ConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `ConnectionIpsecConfigInput` via:
//
//          ConnectionIpsecConfigArgs{...}
type ConnectionIpsecConfigInput interface {
	pulumi.Input

	ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput
	ToConnectionIpsecConfigOutputWithContext(context.Context) ConnectionIpsecConfigOutput
}

type ConnectionIpsecConfigArgs struct {
	// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (ConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIpsecConfig)(nil)).Elem()
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput {
	return i.ToConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigOutputWithContext(ctx context.Context) ConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigOutput)
}

// ConnectionIpsecConfigArrayInput is an input type that accepts ConnectionIpsecConfigArray and ConnectionIpsecConfigArrayOutput values.
// You can construct a concrete instance of `ConnectionIpsecConfigArrayInput` via:
//
//          ConnectionIpsecConfigArray{ ConnectionIpsecConfigArgs{...} }
type ConnectionIpsecConfigArrayInput interface {
	pulumi.Input

	ToConnectionIpsecConfigArrayOutput() ConnectionIpsecConfigArrayOutput
	ToConnectionIpsecConfigArrayOutputWithContext(context.Context) ConnectionIpsecConfigArrayOutput
}

type ConnectionIpsecConfigArray []ConnectionIpsecConfigInput

func (ConnectionIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionIpsecConfig)(nil)).Elem()
}

func (i ConnectionIpsecConfigArray) ToConnectionIpsecConfigArrayOutput() ConnectionIpsecConfigArrayOutput {
	return i.ToConnectionIpsecConfigArrayOutputWithContext(context.Background())
}

func (i ConnectionIpsecConfigArray) ToConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) ConnectionIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigArrayOutput)
}

type ConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (ConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIpsecConfig)(nil)).Elem()
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput {
	return o
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigOutputWithContext(ctx context.Context) ConnectionIpsecConfigOutput {
	return o
}

// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
func (o ConnectionIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
func (o ConnectionIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
func (o ConnectionIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
func (o ConnectionIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type ConnectionIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (ConnectionIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionIpsecConfig)(nil)).Elem()
}

func (o ConnectionIpsecConfigArrayOutput) ToConnectionIpsecConfigArrayOutput() ConnectionIpsecConfigArrayOutput {
	return o
}

func (o ConnectionIpsecConfigArrayOutput) ToConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) ConnectionIpsecConfigArrayOutput {
	return o
}

func (o ConnectionIpsecConfigArrayOutput) Index(i pulumi.IntInput) ConnectionIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionIpsecConfig {
		return vs[0].([]ConnectionIpsecConfig)[vs[1].(int)]
	}).(ConnectionIpsecConfigOutput)
}

type GetConnectionsConnection struct {
	CreateTime string `pulumi:"createTime"`
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	EffectImmediately bool   `pulumi:"effectImmediately"`
	// ID of the VPN connection.
	Id string `pulumi:"id"`
	// The configurations of phase-one negotiation.
	IkeConfigs []GetConnectionsConnectionIkeConfig `pulumi:"ikeConfigs"`
	// The configurations of phase-two negotiation.
	IpsecConfigs []GetConnectionsConnectionIpsecConfig `pulumi:"ipsecConfigs"`
	// The local subnet of the VPN connection.
	LocalSubnet string `pulumi:"localSubnet"`
	// The name of the VPN connection.
	Name string `pulumi:"name"`
	// The remote subnet of the VPN connection.
	RemoteSubnet string `pulumi:"remoteSubnet"`
	// The status of the VPN connection, valid value:ike_sa_not_established, ike_sa_established, ipsec_sa_not_established, ipsec_sa_established.
	Status string `pulumi:"status"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// GetConnectionsConnectionInput is an input type that accepts GetConnectionsConnectionArgs and GetConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionInput` via:
//
//          GetConnectionsConnectionArgs{...}
type GetConnectionsConnectionInput interface {
	pulumi.Input

	ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput
	ToGetConnectionsConnectionOutputWithContext(context.Context) GetConnectionsConnectionOutput
}

type GetConnectionsConnectionArgs struct {
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	EffectImmediately pulumi.BoolInput   `pulumi:"effectImmediately"`
	// ID of the VPN connection.
	Id pulumi.StringInput `pulumi:"id"`
	// The configurations of phase-one negotiation.
	IkeConfigs GetConnectionsConnectionIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// The configurations of phase-two negotiation.
	IpsecConfigs GetConnectionsConnectionIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The local subnet of the VPN connection.
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// The name of the VPN connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The remote subnet of the VPN connection.
	RemoteSubnet pulumi.StringInput `pulumi:"remoteSubnet"`
	// The status of the VPN connection, valid value:ike_sa_not_established, ike_sa_established, ipsec_sa_not_established, ipsec_sa_established.
	Status pulumi.StringInput `pulumi:"status"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (GetConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnection)(nil)).Elem()
}

func (i GetConnectionsConnectionArgs) ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput {
	return i.ToGetConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionArgs) ToGetConnectionsConnectionOutputWithContext(ctx context.Context) GetConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionOutput)
}

// GetConnectionsConnectionArrayInput is an input type that accepts GetConnectionsConnectionArray and GetConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionArrayInput` via:
//
//          GetConnectionsConnectionArray{ GetConnectionsConnectionArgs{...} }
type GetConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput
	ToGetConnectionsConnectionArrayOutputWithContext(context.Context) GetConnectionsConnectionArrayOutput
}

type GetConnectionsConnectionArray []GetConnectionsConnectionInput

func (GetConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnection)(nil)).Elem()
}

func (i GetConnectionsConnectionArray) ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput {
	return i.ToGetConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionArray) ToGetConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionArrayOutput)
}

type GetConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnection)(nil)).Elem()
}

func (o GetConnectionsConnectionOutput) ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput {
	return o
}

func (o GetConnectionsConnectionOutput) ToGetConnectionsConnectionOutputWithContext(ctx context.Context) GetConnectionsConnectionOutput {
	return o
}

func (o GetConnectionsConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Use the VPN customer gateway ID as the search key.
func (o GetConnectionsConnectionOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

func (o GetConnectionsConnectionOutput) EffectImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EffectImmediately }).(pulumi.BoolOutput)
}

// ID of the VPN connection.
func (o GetConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// The configurations of phase-one negotiation.
func (o GetConnectionsConnectionOutput) IkeConfigs() GetConnectionsConnectionIkeConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionIkeConfig { return v.IkeConfigs }).(GetConnectionsConnectionIkeConfigArrayOutput)
}

// The configurations of phase-two negotiation.
func (o GetConnectionsConnectionOutput) IpsecConfigs() GetConnectionsConnectionIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionIpsecConfig { return v.IpsecConfigs }).(GetConnectionsConnectionIpsecConfigArrayOutput)
}

// The local subnet of the VPN connection.
func (o GetConnectionsConnectionOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// The name of the VPN connection.
func (o GetConnectionsConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The remote subnet of the VPN connection.
func (o GetConnectionsConnectionOutput) RemoteSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.RemoteSubnet }).(pulumi.StringOutput)
}

// The status of the VPN connection, valid value:ike_sa_not_established, ike_sa_established, ipsec_sa_not_established, ipsec_sa_established.
func (o GetConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

// Use the VPN gateway ID as the search key.
func (o GetConnectionsConnectionOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type GetConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnection)(nil)).Elem()
}

func (o GetConnectionsConnectionArrayOutput) ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput {
	return o
}

func (o GetConnectionsConnectionArrayOutput) ToGetConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionArrayOutput {
	return o
}

func (o GetConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnection {
		return vs[0].([]GetConnectionsConnection)[vs[1].(int)]
	}).(GetConnectionsConnectionOutput)
}

type GetConnectionsConnectionIkeConfig struct {
	// The authentication algorithm of phase-one negotiation.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId *string `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE phase-one.
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation.
	IkePfs *string `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId *string `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk *string `pulumi:"psk"`
}

// GetConnectionsConnectionIkeConfigInput is an input type that accepts GetConnectionsConnectionIkeConfigArgs and GetConnectionsConnectionIkeConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIkeConfigInput` via:
//
//          GetConnectionsConnectionIkeConfigArgs{...}
type GetConnectionsConnectionIkeConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput
	ToGetConnectionsConnectionIkeConfigOutputWithContext(context.Context) GetConnectionsConnectionIkeConfigOutput
}

type GetConnectionsConnectionIkeConfigArgs struct {
	// The authentication algorithm of phase-one negotiation.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId pulumi.StringPtrInput `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE phase-one.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId pulumi.StringPtrInput `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
}

func (GetConnectionsConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIkeConfigArgs) ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput {
	return i.ToGetConnectionsConnectionIkeConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIkeConfigArgs) ToGetConnectionsConnectionIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIkeConfigOutput)
}

// GetConnectionsConnectionIkeConfigArrayInput is an input type that accepts GetConnectionsConnectionIkeConfigArray and GetConnectionsConnectionIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIkeConfigArrayInput` via:
//
//          GetConnectionsConnectionIkeConfigArray{ GetConnectionsConnectionIkeConfigArgs{...} }
type GetConnectionsConnectionIkeConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput
	ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionIkeConfigArrayOutput
}

type GetConnectionsConnectionIkeConfigArray []GetConnectionsConnectionIkeConfigInput

func (GetConnectionsConnectionIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIkeConfigArray) ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput {
	return i.ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIkeConfigArray) ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIkeConfigArrayOutput)
}

type GetConnectionsConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIkeConfigOutput) ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigOutput) ToGetConnectionsConnectionIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigOutput {
	return o
}

// The authentication algorithm of phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The identification of the VPN gateway.
func (o GetConnectionsConnectionIkeConfigOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeLocalId }).(pulumi.StringPtrOutput)
}

// The negotiation mode of IKE phase-one.
func (o GetConnectionsConnectionIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The identification of the customer gateway.
func (o GetConnectionsConnectionIkeConfigOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeRemoteId }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol.
func (o GetConnectionsConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o GetConnectionsConnectionIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionIkeConfig {
		return vs[0].([]GetConnectionsConnectionIkeConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionIkeConfigOutput)
}

type GetConnectionsConnectionIpsecConfig struct {
	// The authentication algorithm of phase-two negotiation.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation.
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// GetConnectionsConnectionIpsecConfigInput is an input type that accepts GetConnectionsConnectionIpsecConfigArgs and GetConnectionsConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIpsecConfigInput` via:
//
//          GetConnectionsConnectionIpsecConfigArgs{...}
type GetConnectionsConnectionIpsecConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput
	ToGetConnectionsConnectionIpsecConfigOutputWithContext(context.Context) GetConnectionsConnectionIpsecConfigOutput
}

type GetConnectionsConnectionIpsecConfigArgs struct {
	// The authentication algorithm of phase-two negotiation.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation.
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (GetConnectionsConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIpsecConfigArgs) ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput {
	return i.ToGetConnectionsConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIpsecConfigArgs) ToGetConnectionsConnectionIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIpsecConfigOutput)
}

// GetConnectionsConnectionIpsecConfigArrayInput is an input type that accepts GetConnectionsConnectionIpsecConfigArray and GetConnectionsConnectionIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIpsecConfigArrayInput` via:
//
//          GetConnectionsConnectionIpsecConfigArray{ GetConnectionsConnectionIpsecConfigArgs{...} }
type GetConnectionsConnectionIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput
	ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionIpsecConfigArrayOutput
}

type GetConnectionsConnectionIpsecConfigArray []GetConnectionsConnectionIpsecConfigInput

func (GetConnectionsConnectionIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIpsecConfigArray) ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput {
	return i.ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIpsecConfigArray) ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIpsecConfigArrayOutput)
}

type GetConnectionsConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIpsecConfigOutput) ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigOutput) ToGetConnectionsConnectionIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigOutput {
	return o
}

// The authentication algorithm of phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionIpsecConfig {
		return vs[0].([]GetConnectionsConnectionIpsecConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionIpsecConfigOutput)
}

type GetCustomerGatewaysGateway struct {
	// The creation time of the VPN customer gateway.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPN customer gateway.
	Description string `pulumi:"description"`
	// ID of the VPN customer gateway .
	Id string `pulumi:"id"`
	// The ip address of the VPN customer gateway.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the VPN customer gateway.
	Name string `pulumi:"name"`
}

// GetCustomerGatewaysGatewayInput is an input type that accepts GetCustomerGatewaysGatewayArgs and GetCustomerGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetCustomerGatewaysGatewayInput` via:
//
//          GetCustomerGatewaysGatewayArgs{...}
type GetCustomerGatewaysGatewayInput interface {
	pulumi.Input

	ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput
	ToGetCustomerGatewaysGatewayOutputWithContext(context.Context) GetCustomerGatewaysGatewayOutput
}

type GetCustomerGatewaysGatewayArgs struct {
	// The creation time of the VPN customer gateway.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPN customer gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the VPN customer gateway .
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of the VPN customer gateway.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the VPN customer gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCustomerGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewaysGateway)(nil)).Elem()
}

func (i GetCustomerGatewaysGatewayArgs) ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput {
	return i.ToGetCustomerGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetCustomerGatewaysGatewayArgs) ToGetCustomerGatewaysGatewayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewaysGatewayOutput)
}

// GetCustomerGatewaysGatewayArrayInput is an input type that accepts GetCustomerGatewaysGatewayArray and GetCustomerGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetCustomerGatewaysGatewayArrayInput` via:
//
//          GetCustomerGatewaysGatewayArray{ GetCustomerGatewaysGatewayArgs{...} }
type GetCustomerGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput
	ToGetCustomerGatewaysGatewayArrayOutputWithContext(context.Context) GetCustomerGatewaysGatewayArrayOutput
}

type GetCustomerGatewaysGatewayArray []GetCustomerGatewaysGatewayInput

func (GetCustomerGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewaysGateway)(nil)).Elem()
}

func (i GetCustomerGatewaysGatewayArray) ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput {
	return i.ToGetCustomerGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetCustomerGatewaysGatewayArray) ToGetCustomerGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewaysGatewayArrayOutput)
}

type GetCustomerGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewaysGateway)(nil)).Elem()
}

func (o GetCustomerGatewaysGatewayOutput) ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayOutput) ToGetCustomerGatewaysGatewayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayOutput {
	return o
}

// The creation time of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the VPN customer gateway .
func (o GetCustomerGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

type GetCustomerGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewaysGateway)(nil)).Elem()
}

func (o GetCustomerGatewaysGatewayArrayOutput) ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayArrayOutput) ToGetCustomerGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayArrayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetCustomerGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomerGatewaysGateway {
		return vs[0].([]GetCustomerGatewaysGateway)[vs[1].(int)]
	}).(GetCustomerGatewaysGatewayOutput)
}

type GetGatewaysGateway struct {
	// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
	BusinessStatus string `pulumi:"businessStatus"`
	// The creation time of the VPN gateway.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPN
	Description string `pulumi:"description"`
	// Whether the ipsec function is enabled.
	EnableIpsec string `pulumi:"enableIpsec"`
	// Whether the ssl function is enabled.
	EnableSsl string `pulumi:"enableSsl"`
	// The expiration time of the VPN gateway.
	EndTime string `pulumi:"endTime"`
	// ID of the VPN.
	Id string `pulumi:"id"`
	// The charge type of the VPN gateway.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// The internet ip of the VPN.
	InternetIp string `pulumi:"internetIp"`
	// The name of the VPN.
	Name string `pulumi:"name"`
	// The Specification of the VPN
	Specification string `pulumi:"specification"`
	// Total count of ssl vpn connections.
	SslConnections int `pulumi:"sslConnections"`
	// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
	Status string `pulumi:"status"`
	// Use the VPC ID as the search key.
	VpcId string `pulumi:"vpcId"`
}

// GetGatewaysGatewayInput is an input type that accepts GetGatewaysGatewayArgs and GetGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetGatewaysGatewayInput` via:
//
//          GetGatewaysGatewayArgs{...}
type GetGatewaysGatewayInput interface {
	pulumi.Input

	ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput
	ToGetGatewaysGatewayOutputWithContext(context.Context) GetGatewaysGatewayOutput
}

type GetGatewaysGatewayArgs struct {
	// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The creation time of the VPN gateway.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPN
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the ipsec function is enabled.
	EnableIpsec pulumi.StringInput `pulumi:"enableIpsec"`
	// Whether the ssl function is enabled.
	EnableSsl pulumi.StringInput `pulumi:"enableSsl"`
	// The expiration time of the VPN gateway.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// ID of the VPN.
	Id pulumi.StringInput `pulumi:"id"`
	// The charge type of the VPN gateway.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// The internet ip of the VPN.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The name of the VPN.
	Name pulumi.StringInput `pulumi:"name"`
	// The Specification of the VPN
	Specification pulumi.StringInput `pulumi:"specification"`
	// Total count of ssl vpn connections.
	SslConnections pulumi.IntInput `pulumi:"sslConnections"`
	// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
	Status pulumi.StringInput `pulumi:"status"`
	// Use the VPC ID as the search key.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysGateway)(nil)).Elem()
}

func (i GetGatewaysGatewayArgs) ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput {
	return i.ToGetGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetGatewaysGatewayArgs) ToGetGatewaysGatewayOutputWithContext(ctx context.Context) GetGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewaysGatewayOutput)
}

// GetGatewaysGatewayArrayInput is an input type that accepts GetGatewaysGatewayArray and GetGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewaysGatewayArrayInput` via:
//
//          GetGatewaysGatewayArray{ GetGatewaysGatewayArgs{...} }
type GetGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput
	ToGetGatewaysGatewayArrayOutputWithContext(context.Context) GetGatewaysGatewayArrayOutput
}

type GetGatewaysGatewayArray []GetGatewaysGatewayInput

func (GetGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewaysGateway)(nil)).Elem()
}

func (i GetGatewaysGatewayArray) ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput {
	return i.ToGetGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewaysGatewayArray) ToGetGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewaysGatewayArrayOutput)
}

type GetGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysGateway)(nil)).Elem()
}

func (o GetGatewaysGatewayOutput) ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput {
	return o
}

func (o GetGatewaysGatewayOutput) ToGetGatewaysGatewayOutputWithContext(ctx context.Context) GetGatewaysGatewayOutput {
	return o
}

// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
func (o GetGatewaysGatewayOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The creation time of the VPN gateway.
func (o GetGatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPN
func (o GetGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the ipsec function is enabled.
func (o GetGatewaysGatewayOutput) EnableIpsec() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EnableIpsec }).(pulumi.StringOutput)
}

// Whether the ssl function is enabled.
func (o GetGatewaysGatewayOutput) EnableSsl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EnableSsl }).(pulumi.StringOutput)
}

// The expiration time of the VPN gateway.
func (o GetGatewaysGatewayOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EndTime }).(pulumi.StringOutput)
}

// ID of the VPN.
func (o GetGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The charge type of the VPN gateway.
func (o GetGatewaysGatewayOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The internet ip of the VPN.
func (o GetGatewaysGatewayOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The name of the VPN.
func (o GetGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The Specification of the VPN
func (o GetGatewaysGatewayOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Specification }).(pulumi.StringOutput)
}

// Total count of ssl vpn connections.
func (o GetGatewaysGatewayOutput) SslConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewaysGateway) int { return v.SslConnections }).(pulumi.IntOutput)
}

// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
func (o GetGatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// Use the VPC ID as the search key.
func (o GetGatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewaysGateway)(nil)).Elem()
}

func (o GetGatewaysGatewayArrayOutput) ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput {
	return o
}

func (o GetGatewaysGatewayArrayOutput) ToGetGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetGatewaysGatewayArrayOutput {
	return o
}

func (o GetGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewaysGateway {
		return vs[0].([]GetGatewaysGateway)[vs[1].(int)]
	}).(GetGatewaysGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIkeConfigInput)(nil)).Elem(), ConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIkeConfigArrayInput)(nil)).Elem(), ConnectionIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIpsecConfigInput)(nil)).Elem(), ConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIpsecConfigArrayInput)(nil)).Elem(), ConnectionIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionInput)(nil)).Elem(), GetConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionArrayInput)(nil)).Elem(), GetConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIkeConfigInput)(nil)).Elem(), GetConnectionsConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIkeConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIpsecConfigInput)(nil)).Elem(), GetConnectionsConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIpsecConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomerGatewaysGatewayInput)(nil)).Elem(), GetCustomerGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomerGatewaysGatewayArrayInput)(nil)).Elem(), GetCustomerGatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewaysGatewayInput)(nil)).Elem(), GetGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewaysGatewayArrayInput)(nil)).Elem(), GetGatewaysGatewayArray{})
	pulumi.RegisterOutputType(ConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(ConnectionIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(ConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(ConnectionIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewaysGatewayArrayOutput{})
}
