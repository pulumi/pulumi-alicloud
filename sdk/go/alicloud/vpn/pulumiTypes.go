// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectionBgpConfig struct {
	// Whether to enable Health Check.
	Enable *bool `pulumi:"enable"`
	// The ASN on the Alibaba Cloud side.
	LocalAsn *string `pulumi:"localAsn"`
	// The BGP IP address on the Alibaba Cloud side.
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// ConnectionBgpConfigInput is an input type that accepts ConnectionBgpConfigArgs and ConnectionBgpConfigOutput values.
// You can construct a concrete instance of `ConnectionBgpConfigInput` via:
//
//	ConnectionBgpConfigArgs{...}
type ConnectionBgpConfigInput interface {
	pulumi.Input

	ToConnectionBgpConfigOutput() ConnectionBgpConfigOutput
	ToConnectionBgpConfigOutputWithContext(context.Context) ConnectionBgpConfigOutput
}

type ConnectionBgpConfigArgs struct {
	// Whether to enable Health Check.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The ASN on the Alibaba Cloud side.
	LocalAsn pulumi.StringPtrInput `pulumi:"localAsn"`
	// The BGP IP address on the Alibaba Cloud side.
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (ConnectionBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionBgpConfig)(nil)).Elem()
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigOutput() ConnectionBgpConfigOutput {
	return i.ToConnectionBgpConfigOutputWithContext(context.Background())
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigOutputWithContext(ctx context.Context) ConnectionBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBgpConfigOutput)
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return i.ToConnectionBgpConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionBgpConfigArgs) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBgpConfigOutput).ToConnectionBgpConfigPtrOutputWithContext(ctx)
}

// ConnectionBgpConfigPtrInput is an input type that accepts ConnectionBgpConfigArgs, ConnectionBgpConfigPtr and ConnectionBgpConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionBgpConfigPtrInput` via:
//
//	        ConnectionBgpConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionBgpConfigPtrInput interface {
	pulumi.Input

	ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput
	ToConnectionBgpConfigPtrOutputWithContext(context.Context) ConnectionBgpConfigPtrOutput
}

type connectionBgpConfigPtrType ConnectionBgpConfigArgs

func ConnectionBgpConfigPtr(v *ConnectionBgpConfigArgs) ConnectionBgpConfigPtrInput {
	return (*connectionBgpConfigPtrType)(v)
}

func (*connectionBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionBgpConfig)(nil)).Elem()
}

func (i *connectionBgpConfigPtrType) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return i.ToConnectionBgpConfigPtrOutputWithContext(context.Background())
}

func (i *connectionBgpConfigPtrType) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBgpConfigPtrOutput)
}

type ConnectionBgpConfigOutput struct{ *pulumi.OutputState }

func (ConnectionBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionBgpConfig)(nil)).Elem()
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigOutput() ConnectionBgpConfigOutput {
	return o
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigOutputWithContext(ctx context.Context) ConnectionBgpConfigOutput {
	return o
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return o.ToConnectionBgpConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionBgpConfigOutput) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionBgpConfig) *ConnectionBgpConfig {
		return &v
	}).(ConnectionBgpConfigPtrOutput)
}

// Whether to enable Health Check.
func (o ConnectionBgpConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The ASN on the Alibaba Cloud side.
func (o ConnectionBgpConfigOutput) LocalAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.LocalAsn }).(pulumi.StringPtrOutput)
}

// The BGP IP address on the Alibaba Cloud side.
func (o ConnectionBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
func (o ConnectionBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type ConnectionBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionBgpConfig)(nil)).Elem()
}

func (o ConnectionBgpConfigPtrOutput) ToConnectionBgpConfigPtrOutput() ConnectionBgpConfigPtrOutput {
	return o
}

func (o ConnectionBgpConfigPtrOutput) ToConnectionBgpConfigPtrOutputWithContext(ctx context.Context) ConnectionBgpConfigPtrOutput {
	return o
}

func (o ConnectionBgpConfigPtrOutput) Elem() ConnectionBgpConfigOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) ConnectionBgpConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionBgpConfig
		return ret
	}).(ConnectionBgpConfigOutput)
}

// Whether to enable Health Check.
func (o ConnectionBgpConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The ASN on the Alibaba Cloud side.
func (o ConnectionBgpConfigPtrOutput) LocalAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalAsn
	}).(pulumi.StringPtrOutput)
}

// The BGP IP address on the Alibaba Cloud side.
func (o ConnectionBgpConfigPtrOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalBgpIp
	}).(pulumi.StringPtrOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
func (o ConnectionBgpConfigPtrOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.TunnelCidr
	}).(pulumi.StringPtrOutput)
}

type ConnectionHealthCheckConfig struct {
	// The destination IP address.
	Dip *string `pulumi:"dip"`
	// Whether to enable Health Check.
	Enable *bool `pulumi:"enable"`
	// The interval between two consecutive health checks. Unit: seconds.
	Interval *int `pulumi:"interval"`
	// The maximum number of health check retries.
	Retry *int `pulumi:"retry"`
	// The source IP address.
	Sip *string `pulumi:"sip"`
}

// ConnectionHealthCheckConfigInput is an input type that accepts ConnectionHealthCheckConfigArgs and ConnectionHealthCheckConfigOutput values.
// You can construct a concrete instance of `ConnectionHealthCheckConfigInput` via:
//
//	ConnectionHealthCheckConfigArgs{...}
type ConnectionHealthCheckConfigInput interface {
	pulumi.Input

	ToConnectionHealthCheckConfigOutput() ConnectionHealthCheckConfigOutput
	ToConnectionHealthCheckConfigOutputWithContext(context.Context) ConnectionHealthCheckConfigOutput
}

type ConnectionHealthCheckConfigArgs struct {
	// The destination IP address.
	Dip pulumi.StringPtrInput `pulumi:"dip"`
	// Whether to enable Health Check.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The interval between two consecutive health checks. Unit: seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The maximum number of health check retries.
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// The source IP address.
	Sip pulumi.StringPtrInput `pulumi:"sip"`
}

func (ConnectionHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionHealthCheckConfig)(nil)).Elem()
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigOutput() ConnectionHealthCheckConfigOutput {
	return i.ToConnectionHealthCheckConfigOutputWithContext(context.Background())
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHealthCheckConfigOutput)
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return i.ToConnectionHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionHealthCheckConfigArgs) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHealthCheckConfigOutput).ToConnectionHealthCheckConfigPtrOutputWithContext(ctx)
}

// ConnectionHealthCheckConfigPtrInput is an input type that accepts ConnectionHealthCheckConfigArgs, ConnectionHealthCheckConfigPtr and ConnectionHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionHealthCheckConfigPtrInput` via:
//
//	        ConnectionHealthCheckConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput
	ToConnectionHealthCheckConfigPtrOutputWithContext(context.Context) ConnectionHealthCheckConfigPtrOutput
}

type connectionHealthCheckConfigPtrType ConnectionHealthCheckConfigArgs

func ConnectionHealthCheckConfigPtr(v *ConnectionHealthCheckConfigArgs) ConnectionHealthCheckConfigPtrInput {
	return (*connectionHealthCheckConfigPtrType)(v)
}

func (*connectionHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionHealthCheckConfig)(nil)).Elem()
}

func (i *connectionHealthCheckConfigPtrType) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return i.ToConnectionHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *connectionHealthCheckConfigPtrType) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHealthCheckConfigPtrOutput)
}

type ConnectionHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (ConnectionHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionHealthCheckConfig)(nil)).Elem()
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigOutput() ConnectionHealthCheckConfigOutput {
	return o
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigOutput {
	return o
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return o.ToConnectionHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionHealthCheckConfigOutput) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionHealthCheckConfig) *ConnectionHealthCheckConfig {
		return &v
	}).(ConnectionHealthCheckConfigPtrOutput)
}

// The destination IP address.
func (o ConnectionHealthCheckConfigOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *string { return v.Dip }).(pulumi.StringPtrOutput)
}

// Whether to enable Health Check.
func (o ConnectionHealthCheckConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o ConnectionHealthCheckConfigOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The maximum number of health check retries.
func (o ConnectionHealthCheckConfigOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// The source IP address.
func (o ConnectionHealthCheckConfigOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionHealthCheckConfig) *string { return v.Sip }).(pulumi.StringPtrOutput)
}

type ConnectionHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionHealthCheckConfig)(nil)).Elem()
}

func (o ConnectionHealthCheckConfigPtrOutput) ToConnectionHealthCheckConfigPtrOutput() ConnectionHealthCheckConfigPtrOutput {
	return o
}

func (o ConnectionHealthCheckConfigPtrOutput) ToConnectionHealthCheckConfigPtrOutputWithContext(ctx context.Context) ConnectionHealthCheckConfigPtrOutput {
	return o
}

func (o ConnectionHealthCheckConfigPtrOutput) Elem() ConnectionHealthCheckConfigOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) ConnectionHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionHealthCheckConfig
		return ret
	}).(ConnectionHealthCheckConfigOutput)
}

// The destination IP address.
func (o ConnectionHealthCheckConfigPtrOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Dip
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Health Check.
func (o ConnectionHealthCheckConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o ConnectionHealthCheckConfigPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The maximum number of health check retries.
func (o ConnectionHealthCheckConfigPtrOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.IntPtrOutput)
}

// The source IP address.
func (o ConnectionHealthCheckConfigPtrOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Sip
	}).(pulumi.StringPtrOutput)
}

type ConnectionIkeConfig struct {
	// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId *string `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
	IkePfs *string `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId *string `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
	IkeVersion *string `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk *string `pulumi:"psk"`
}

// ConnectionIkeConfigInput is an input type that accepts ConnectionIkeConfigArgs and ConnectionIkeConfigOutput values.
// You can construct a concrete instance of `ConnectionIkeConfigInput` via:
//
//	ConnectionIkeConfigArgs{...}
type ConnectionIkeConfigInput interface {
	pulumi.Input

	ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput
	ToConnectionIkeConfigOutputWithContext(context.Context) ConnectionIkeConfigOutput
}

type ConnectionIkeConfigArgs struct {
	// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId pulumi.StringPtrInput `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId pulumi.StringPtrInput `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
}

func (ConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIkeConfig)(nil)).Elem()
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput {
	return i.ToConnectionIkeConfigOutputWithContext(context.Background())
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigOutputWithContext(ctx context.Context) ConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigOutput)
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return i.ToConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionIkeConfigArgs) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigOutput).ToConnectionIkeConfigPtrOutputWithContext(ctx)
}

// ConnectionIkeConfigPtrInput is an input type that accepts ConnectionIkeConfigArgs, ConnectionIkeConfigPtr and ConnectionIkeConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionIkeConfigPtrInput` via:
//
//	        ConnectionIkeConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionIkeConfigPtrInput interface {
	pulumi.Input

	ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput
	ToConnectionIkeConfigPtrOutputWithContext(context.Context) ConnectionIkeConfigPtrOutput
}

type connectionIkeConfigPtrType ConnectionIkeConfigArgs

func ConnectionIkeConfigPtr(v *ConnectionIkeConfigArgs) ConnectionIkeConfigPtrInput {
	return (*connectionIkeConfigPtrType)(v)
}

func (*connectionIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIkeConfig)(nil)).Elem()
}

func (i *connectionIkeConfigPtrType) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return i.ToConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i *connectionIkeConfigPtrType) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIkeConfigPtrOutput)
}

type ConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (ConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIkeConfig)(nil)).Elem()
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigOutput() ConnectionIkeConfigOutput {
	return o
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigOutputWithContext(ctx context.Context) ConnectionIkeConfigOutput {
	return o
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return o.ToConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionIkeConfigOutput) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionIkeConfig) *ConnectionIkeConfig {
		return &v
	}).(ConnectionIkeConfigPtrOutput)
}

// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
func (o ConnectionIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
func (o ConnectionIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
func (o ConnectionIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The identification of the VPN gateway.
func (o ConnectionIkeConfigOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeLocalId }).(pulumi.StringPtrOutput)
}

// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
func (o ConnectionIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
func (o ConnectionIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The identification of the customer gateway.
func (o ConnectionIkeConfigOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeRemoteId }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
func (o ConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o ConnectionIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

type ConnectionIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIkeConfig)(nil)).Elem()
}

func (o ConnectionIkeConfigPtrOutput) ToConnectionIkeConfigPtrOutput() ConnectionIkeConfigPtrOutput {
	return o
}

func (o ConnectionIkeConfigPtrOutput) ToConnectionIkeConfigPtrOutputWithContext(ctx context.Context) ConnectionIkeConfigPtrOutput {
	return o
}

func (o ConnectionIkeConfigPtrOutput) Elem() ConnectionIkeConfigOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) ConnectionIkeConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionIkeConfig
		return ret
	}).(ConnectionIkeConfigOutput)
}

// The authentication algorithm of phase-one negotiation. Valid value: md5 | sha1 . Default value: md5
func (o ConnectionIkeConfigPtrOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlg
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes
func (o ConnectionIkeConfigPtrOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeEncAlg
	}).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
func (o ConnectionIkeConfigPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// The identification of the VPN gateway.
func (o ConnectionIkeConfigPtrOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeLocalId
	}).(pulumi.StringPtrOutput)
}

// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: main
func (o ConnectionIkeConfigPtrOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeMode
	}).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
func (o ConnectionIkeConfigPtrOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkePfs
	}).(pulumi.StringPtrOutput)
}

// The identification of the customer gateway.
func (o ConnectionIkeConfigPtrOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeRemoteId
	}).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Valid value: ikev1 | ikev2. Default value: ikev1
func (o ConnectionIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o ConnectionIkeConfigPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

type ConnectionIpsecConfig struct {
	// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// ConnectionIpsecConfigInput is an input type that accepts ConnectionIpsecConfigArgs and ConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `ConnectionIpsecConfigInput` via:
//
//	ConnectionIpsecConfigArgs{...}
type ConnectionIpsecConfigInput interface {
	pulumi.Input

	ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput
	ToConnectionIpsecConfigOutputWithContext(context.Context) ConnectionIpsecConfigOutput
}

type ConnectionIpsecConfigArgs struct {
	// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (ConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIpsecConfig)(nil)).Elem()
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput {
	return i.ToConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigOutputWithContext(ctx context.Context) ConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigOutput)
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return i.ToConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionIpsecConfigArgs) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigOutput).ToConnectionIpsecConfigPtrOutputWithContext(ctx)
}

// ConnectionIpsecConfigPtrInput is an input type that accepts ConnectionIpsecConfigArgs, ConnectionIpsecConfigPtr and ConnectionIpsecConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionIpsecConfigPtrInput` via:
//
//	        ConnectionIpsecConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionIpsecConfigPtrInput interface {
	pulumi.Input

	ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput
	ToConnectionIpsecConfigPtrOutputWithContext(context.Context) ConnectionIpsecConfigPtrOutput
}

type connectionIpsecConfigPtrType ConnectionIpsecConfigArgs

func ConnectionIpsecConfigPtr(v *ConnectionIpsecConfigArgs) ConnectionIpsecConfigPtrInput {
	return (*connectionIpsecConfigPtrType)(v)
}

func (*connectionIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIpsecConfig)(nil)).Elem()
}

func (i *connectionIpsecConfigPtrType) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return i.ToConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *connectionIpsecConfigPtrType) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionIpsecConfigPtrOutput)
}

type ConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (ConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionIpsecConfig)(nil)).Elem()
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigOutput() ConnectionIpsecConfigOutput {
	return o
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigOutputWithContext(ctx context.Context) ConnectionIpsecConfigOutput {
	return o
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return o.ToConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionIpsecConfigOutput) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionIpsecConfig) *ConnectionIpsecConfig {
		return &v
	}).(ConnectionIpsecConfigPtrOutput)
}

// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
func (o ConnectionIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
func (o ConnectionIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
func (o ConnectionIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
func (o ConnectionIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type ConnectionIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionIpsecConfig)(nil)).Elem()
}

func (o ConnectionIpsecConfigPtrOutput) ToConnectionIpsecConfigPtrOutput() ConnectionIpsecConfigPtrOutput {
	return o
}

func (o ConnectionIpsecConfigPtrOutput) ToConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) ConnectionIpsecConfigPtrOutput {
	return o
}

func (o ConnectionIpsecConfigPtrOutput) Elem() ConnectionIpsecConfigOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) ConnectionIpsecConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionIpsecConfig
		return ret
	}).(ConnectionIpsecConfigOutput)
}

// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
func (o ConnectionIpsecConfigPtrOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecAuthAlg
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
func (o ConnectionIpsecConfigPtrOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecEncAlg
	}).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
func (o ConnectionIpsecConfigPtrOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.IpsecLifetime
	}).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
func (o ConnectionIpsecConfigPtrOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecPfs
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentBgpConfig struct {
	// Specifies whether to enable health checks.
	Enable *bool `pulumi:"enable"`
	// The ASN on the Alibaba Cloud side.
	LocalAsn *int `pulumi:"localAsn"`
	// The BGP IP address on the Alibaba Cloud side.
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// GatewayVpnAttachmentBgpConfigInput is an input type that accepts GatewayVpnAttachmentBgpConfigArgs and GatewayVpnAttachmentBgpConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentBgpConfigInput` via:
//
//	GatewayVpnAttachmentBgpConfigArgs{...}
type GatewayVpnAttachmentBgpConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentBgpConfigOutput() GatewayVpnAttachmentBgpConfigOutput
	ToGatewayVpnAttachmentBgpConfigOutputWithContext(context.Context) GatewayVpnAttachmentBgpConfigOutput
}

type GatewayVpnAttachmentBgpConfigArgs struct {
	// Specifies whether to enable health checks.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The ASN on the Alibaba Cloud side.
	LocalAsn pulumi.IntPtrInput `pulumi:"localAsn"`
	// The BGP IP address on the Alibaba Cloud side.
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (GatewayVpnAttachmentBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigOutput() GatewayVpnAttachmentBgpConfigOutput {
	return i.ToGatewayVpnAttachmentBgpConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentBgpConfigOutput)
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return i.ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentBgpConfigArgs) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentBgpConfigOutput).ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentBgpConfigPtrInput is an input type that accepts GatewayVpnAttachmentBgpConfigArgs, GatewayVpnAttachmentBgpConfigPtr and GatewayVpnAttachmentBgpConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentBgpConfigPtrInput` via:
//
//	        GatewayVpnAttachmentBgpConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentBgpConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput
	ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentBgpConfigPtrOutput
}

type gatewayVpnAttachmentBgpConfigPtrType GatewayVpnAttachmentBgpConfigArgs

func GatewayVpnAttachmentBgpConfigPtr(v *GatewayVpnAttachmentBgpConfigArgs) GatewayVpnAttachmentBgpConfigPtrInput {
	return (*gatewayVpnAttachmentBgpConfigPtrType)(v)
}

func (*gatewayVpnAttachmentBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentBgpConfigPtrType) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return i.ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentBgpConfigPtrType) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentBgpConfigPtrOutput)
}

type GatewayVpnAttachmentBgpConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigOutput() GatewayVpnAttachmentBgpConfigOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return o.ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentBgpConfigOutput) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentBgpConfig) *GatewayVpnAttachmentBgpConfig {
		return &v
	}).(GatewayVpnAttachmentBgpConfigPtrOutput)
}

// Specifies whether to enable health checks.
func (o GatewayVpnAttachmentBgpConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The ASN on the Alibaba Cloud side.
func (o GatewayVpnAttachmentBgpConfigOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *int { return v.LocalAsn }).(pulumi.IntPtrOutput)
}

// The BGP IP address on the Alibaba Cloud side.
func (o GatewayVpnAttachmentBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
func (o GatewayVpnAttachmentBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentBgpConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentBgpConfigPtrOutput) ToGatewayVpnAttachmentBgpConfigPtrOutput() GatewayVpnAttachmentBgpConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigPtrOutput) ToGatewayVpnAttachmentBgpConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentBgpConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentBgpConfigPtrOutput) Elem() GatewayVpnAttachmentBgpConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) GatewayVpnAttachmentBgpConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentBgpConfig
		return ret
	}).(GatewayVpnAttachmentBgpConfigOutput)
}

// Specifies whether to enable health checks.
func (o GatewayVpnAttachmentBgpConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The ASN on the Alibaba Cloud side.
func (o GatewayVpnAttachmentBgpConfigPtrOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalAsn
	}).(pulumi.IntPtrOutput)
}

// The BGP IP address on the Alibaba Cloud side.
func (o GatewayVpnAttachmentBgpConfigPtrOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalBgpIp
	}).(pulumi.StringPtrOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
func (o GatewayVpnAttachmentBgpConfigPtrOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.TunnelCidr
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentHealthCheckConfig struct {
	// The destination IP address that is used for health checks.
	Dip *string `pulumi:"dip"`
	// Specifies whether to enable health checks.
	Enable *bool `pulumi:"enable"`
	// The interval between two consecutive health checks. Unit: seconds.
	Interval *int `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails. Valid values: `revokeRoute` or `reserveRoute`.
	Policy *string `pulumi:"policy"`
	// The maximum number of health check retries.
	Retry *int `pulumi:"retry"`
	// The source IP address that is used for health checks.
	Sip *string `pulumi:"sip"`
}

// GatewayVpnAttachmentHealthCheckConfigInput is an input type that accepts GatewayVpnAttachmentHealthCheckConfigArgs and GatewayVpnAttachmentHealthCheckConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentHealthCheckConfigInput` via:
//
//	GatewayVpnAttachmentHealthCheckConfigArgs{...}
type GatewayVpnAttachmentHealthCheckConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentHealthCheckConfigOutput() GatewayVpnAttachmentHealthCheckConfigOutput
	ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(context.Context) GatewayVpnAttachmentHealthCheckConfigOutput
}

type GatewayVpnAttachmentHealthCheckConfigArgs struct {
	// The destination IP address that is used for health checks.
	Dip pulumi.StringPtrInput `pulumi:"dip"`
	// Specifies whether to enable health checks.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// The interval between two consecutive health checks. Unit: seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails. Valid values: `revokeRoute` or `reserveRoute`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The maximum number of health check retries.
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// The source IP address that is used for health checks.
	Sip pulumi.StringPtrInput `pulumi:"sip"`
}

func (GatewayVpnAttachmentHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigOutput() GatewayVpnAttachmentHealthCheckConfigOutput {
	return i.ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentHealthCheckConfigOutput)
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return i.ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentHealthCheckConfigArgs) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentHealthCheckConfigOutput).ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentHealthCheckConfigPtrInput is an input type that accepts GatewayVpnAttachmentHealthCheckConfigArgs, GatewayVpnAttachmentHealthCheckConfigPtr and GatewayVpnAttachmentHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentHealthCheckConfigPtrInput` via:
//
//	        GatewayVpnAttachmentHealthCheckConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput
	ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput
}

type gatewayVpnAttachmentHealthCheckConfigPtrType GatewayVpnAttachmentHealthCheckConfigArgs

func GatewayVpnAttachmentHealthCheckConfigPtr(v *GatewayVpnAttachmentHealthCheckConfigArgs) GatewayVpnAttachmentHealthCheckConfigPtrInput {
	return (*gatewayVpnAttachmentHealthCheckConfigPtrType)(v)
}

func (*gatewayVpnAttachmentHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentHealthCheckConfigPtrType) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return i.ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentHealthCheckConfigPtrType) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentHealthCheckConfigPtrOutput)
}

type GatewayVpnAttachmentHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigOutput() GatewayVpnAttachmentHealthCheckConfigOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o.ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentHealthCheckConfigOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentHealthCheckConfig) *GatewayVpnAttachmentHealthCheckConfig {
		return &v
	}).(GatewayVpnAttachmentHealthCheckConfigPtrOutput)
}

// The destination IP address that is used for health checks.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Dip }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable health checks.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Whether to revoke the published route when the health check fails. Valid values: `revokeRoute` or `reserveRoute`.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The maximum number of health check retries.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// The source IP address that is used for health checks.
func (o GatewayVpnAttachmentHealthCheckConfigOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentHealthCheckConfig) *string { return v.Sip }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutput() GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) ToGatewayVpnAttachmentHealthCheckConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentHealthCheckConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Elem() GatewayVpnAttachmentHealthCheckConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) GatewayVpnAttachmentHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentHealthCheckConfig
		return ret
	}).(GatewayVpnAttachmentHealthCheckConfigOutput)
}

// The destination IP address that is used for health checks.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Dip
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to enable health checks.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Whether to revoke the published route when the health check fails. Valid values: `revokeRoute` or `reserveRoute`.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of health check retries.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(pulumi.IntPtrOutput)
}

// The source IP address that is used for health checks.
func (o GatewayVpnAttachmentHealthCheckConfigPtrOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Sip
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIkeConfig struct {
	// IKE authentication algorithm supports sha1 and MD5.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: `main`.
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
	IkePfs *string `pulumi:"ikePfs"`
	// The version of the IKE protocol. Valid value: `ikev1`, `ikev2`. Default value: `ikev1`.
	IkeVersion *string `pulumi:"ikeVersion"`
	// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
	LocalId *string `pulumi:"localId"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk *string `pulumi:"psk"`
	// The peer ID, which supports FQDN and IP formats. By default, the IP address of the currently selected user gateway.
	RemoteId *string `pulumi:"remoteId"`
}

// GatewayVpnAttachmentIkeConfigInput is an input type that accepts GatewayVpnAttachmentIkeConfigArgs and GatewayVpnAttachmentIkeConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIkeConfigInput` via:
//
//	GatewayVpnAttachmentIkeConfigArgs{...}
type GatewayVpnAttachmentIkeConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIkeConfigOutput() GatewayVpnAttachmentIkeConfigOutput
	ToGatewayVpnAttachmentIkeConfigOutputWithContext(context.Context) GatewayVpnAttachmentIkeConfigOutput
}

type GatewayVpnAttachmentIkeConfigArgs struct {
	// IKE authentication algorithm supports sha1 and MD5.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: `main`.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The version of the IKE protocol. Valid value: `ikev1`, `ikev2`. Default value: `ikev1`.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
	// The peer ID, which supports FQDN and IP formats. By default, the IP address of the currently selected user gateway.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
}

func (GatewayVpnAttachmentIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigOutput() GatewayVpnAttachmentIkeConfigOutput {
	return i.ToGatewayVpnAttachmentIkeConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIkeConfigOutput)
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIkeConfigArgs) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIkeConfigOutput).ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentIkeConfigPtrInput is an input type that accepts GatewayVpnAttachmentIkeConfigArgs, GatewayVpnAttachmentIkeConfigPtr and GatewayVpnAttachmentIkeConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIkeConfigPtrInput` via:
//
//	        GatewayVpnAttachmentIkeConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentIkeConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput
	ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentIkeConfigPtrOutput
}

type gatewayVpnAttachmentIkeConfigPtrType GatewayVpnAttachmentIkeConfigArgs

func GatewayVpnAttachmentIkeConfigPtr(v *GatewayVpnAttachmentIkeConfigArgs) GatewayVpnAttachmentIkeConfigPtrInput {
	return (*gatewayVpnAttachmentIkeConfigPtrType)(v)
}

func (*gatewayVpnAttachmentIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentIkeConfigPtrType) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentIkeConfigPtrType) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIkeConfigPtrOutput)
}

type GatewayVpnAttachmentIkeConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigOutput() GatewayVpnAttachmentIkeConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return o.ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentIkeConfigOutput) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentIkeConfig) *GatewayVpnAttachmentIkeConfig {
		return &v
	}).(GatewayVpnAttachmentIkeConfigPtrOutput)
}

// IKE authentication algorithm supports sha1 and MD5.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: `main`.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
func (o GatewayVpnAttachmentIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Valid value: `ikev1`, `ikev2`. Default value: `ikev1`.
func (o GatewayVpnAttachmentIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
func (o GatewayVpnAttachmentIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o GatewayVpnAttachmentIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

// The peer ID, which supports FQDN and IP formats. By default, the IP address of the currently selected user gateway.
func (o GatewayVpnAttachmentIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIkeConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIkeConfigPtrOutput) ToGatewayVpnAttachmentIkeConfigPtrOutput() GatewayVpnAttachmentIkeConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigPtrOutput) ToGatewayVpnAttachmentIkeConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIkeConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIkeConfigPtrOutput) Elem() GatewayVpnAttachmentIkeConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) GatewayVpnAttachmentIkeConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentIkeConfig
		return ret
	}).(GatewayVpnAttachmentIkeConfigOutput)
}

// IKE authentication algorithm supports sha1 and MD5.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeAuthAlg
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default Valid value: aes.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeEncAlg
	}).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation. The valid value of n is [0, 86400], the unit is second and the default value is 86400.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// The negotiation mode of IKE V1. Valid value: main (main mode) | aggressive (aggressive mode). Default value: `main`.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeMode
	}).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1 | group2 | group5 | group14 | group24. Default value: group2
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkePfs
	}).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol. Valid value: `ikev1`, `ikev2`. Default value: `ikev1`.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalId
	}).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Psk
	}).(pulumi.StringPtrOutput)
}

// The peer ID, which supports FQDN and IP formats. By default, the IP address of the currently selected user gateway.
func (o GatewayVpnAttachmentIkeConfigPtrOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteId
	}).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIpsecConfig struct {
	// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// GatewayVpnAttachmentIpsecConfigInput is an input type that accepts GatewayVpnAttachmentIpsecConfigArgs and GatewayVpnAttachmentIpsecConfigOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIpsecConfigInput` via:
//
//	GatewayVpnAttachmentIpsecConfigArgs{...}
type GatewayVpnAttachmentIpsecConfigInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIpsecConfigOutput() GatewayVpnAttachmentIpsecConfigOutput
	ToGatewayVpnAttachmentIpsecConfigOutputWithContext(context.Context) GatewayVpnAttachmentIpsecConfigOutput
}

type GatewayVpnAttachmentIpsecConfigArgs struct {
	// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (GatewayVpnAttachmentIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigOutput() GatewayVpnAttachmentIpsecConfigOutput {
	return i.ToGatewayVpnAttachmentIpsecConfigOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIpsecConfigOutput)
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Background())
}

func (i GatewayVpnAttachmentIpsecConfigArgs) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIpsecConfigOutput).ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx)
}

// GatewayVpnAttachmentIpsecConfigPtrInput is an input type that accepts GatewayVpnAttachmentIpsecConfigArgs, GatewayVpnAttachmentIpsecConfigPtr and GatewayVpnAttachmentIpsecConfigPtrOutput values.
// You can construct a concrete instance of `GatewayVpnAttachmentIpsecConfigPtrInput` via:
//
//	        GatewayVpnAttachmentIpsecConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayVpnAttachmentIpsecConfigPtrInput interface {
	pulumi.Input

	ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput
	ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput
}

type gatewayVpnAttachmentIpsecConfigPtrType GatewayVpnAttachmentIpsecConfigArgs

func GatewayVpnAttachmentIpsecConfigPtr(v *GatewayVpnAttachmentIpsecConfigArgs) GatewayVpnAttachmentIpsecConfigPtrInput {
	return (*gatewayVpnAttachmentIpsecConfigPtrType)(v)
}

func (*gatewayVpnAttachmentIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (i *gatewayVpnAttachmentIpsecConfigPtrType) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return i.ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayVpnAttachmentIpsecConfigPtrType) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpnAttachmentIpsecConfigPtrOutput)
}

type GatewayVpnAttachmentIpsecConfigOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigOutput() GatewayVpnAttachmentIpsecConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o.ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(context.Background())
}

func (o GatewayVpnAttachmentIpsecConfigOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpnAttachmentIpsecConfig) *GatewayVpnAttachmentIpsecConfig {
		return &v
	}).(GatewayVpnAttachmentIpsecConfigPtrOutput)
}

// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
func (o GatewayVpnAttachmentIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpnAttachmentIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type GatewayVpnAttachmentIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpnAttachmentIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpnAttachmentIpsecConfig)(nil)).Elem()
}

func (o GatewayVpnAttachmentIpsecConfigPtrOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutput() GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigPtrOutput) ToGatewayVpnAttachmentIpsecConfigPtrOutputWithContext(ctx context.Context) GatewayVpnAttachmentIpsecConfigPtrOutput {
	return o
}

func (o GatewayVpnAttachmentIpsecConfigPtrOutput) Elem() GatewayVpnAttachmentIpsecConfigOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) GatewayVpnAttachmentIpsecConfig {
		if v != nil {
			return *v
		}
		var ret GatewayVpnAttachmentIpsecConfig
		return ret
	}).(GatewayVpnAttachmentIpsecConfigOutput)
}

// The authentication algorithm of phase-two negotiation. Valid value: md5 | sha1 | sha256 | sha384 | sha512 |. Default value: sha1
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecAuthAlg
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation. Valid value: aes | aes192 | aes256 | des | 3des. Default value: aes
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecEncAlg
	}).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation. The valid value is [0, 86400], the unit is second and the default value is 86400.
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.IpsecLifetime
	}).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1 | group2 | group5 | group14 | group24| disabled. Default value: group2
func (o GatewayVpnAttachmentIpsecConfigPtrOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpnAttachmentIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpsecPfs
	}).(pulumi.StringPtrOutput)
}

type IpsecServerIkeConfig struct {
	// The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The IKE negotiation mode. Default value: `main`.
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
	IkePfs *string `pulumi:"ikePfs"`
	// The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
	IkeVersion *string `pulumi:"ikeVersion"`
	// The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
	LocalId *string `pulumi:"localId"`
	// The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
	RemoteId *string `pulumi:"remoteId"`
}

// IpsecServerIkeConfigInput is an input type that accepts IpsecServerIkeConfigArgs and IpsecServerIkeConfigOutput values.
// You can construct a concrete instance of `IpsecServerIkeConfigInput` via:
//
//	IpsecServerIkeConfigArgs{...}
type IpsecServerIkeConfigInput interface {
	pulumi.Input

	ToIpsecServerIkeConfigOutput() IpsecServerIkeConfigOutput
	ToIpsecServerIkeConfigOutputWithContext(context.Context) IpsecServerIkeConfigOutput
}

type IpsecServerIkeConfigArgs struct {
	// The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The IKE negotiation mode. Default value: `main`.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
}

func (IpsecServerIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIkeConfig)(nil)).Elem()
}

func (i IpsecServerIkeConfigArgs) ToIpsecServerIkeConfigOutput() IpsecServerIkeConfigOutput {
	return i.ToIpsecServerIkeConfigOutputWithContext(context.Background())
}

func (i IpsecServerIkeConfigArgs) ToIpsecServerIkeConfigOutputWithContext(ctx context.Context) IpsecServerIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIkeConfigOutput)
}

// IpsecServerIkeConfigArrayInput is an input type that accepts IpsecServerIkeConfigArray and IpsecServerIkeConfigArrayOutput values.
// You can construct a concrete instance of `IpsecServerIkeConfigArrayInput` via:
//
//	IpsecServerIkeConfigArray{ IpsecServerIkeConfigArgs{...} }
type IpsecServerIkeConfigArrayInput interface {
	pulumi.Input

	ToIpsecServerIkeConfigArrayOutput() IpsecServerIkeConfigArrayOutput
	ToIpsecServerIkeConfigArrayOutputWithContext(context.Context) IpsecServerIkeConfigArrayOutput
}

type IpsecServerIkeConfigArray []IpsecServerIkeConfigInput

func (IpsecServerIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIkeConfig)(nil)).Elem()
}

func (i IpsecServerIkeConfigArray) ToIpsecServerIkeConfigArrayOutput() IpsecServerIkeConfigArrayOutput {
	return i.ToIpsecServerIkeConfigArrayOutputWithContext(context.Background())
}

func (i IpsecServerIkeConfigArray) ToIpsecServerIkeConfigArrayOutputWithContext(ctx context.Context) IpsecServerIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIkeConfigArrayOutput)
}

type IpsecServerIkeConfigOutput struct{ *pulumi.OutputState }

func (IpsecServerIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIkeConfig)(nil)).Elem()
}

func (o IpsecServerIkeConfigOutput) ToIpsecServerIkeConfigOutput() IpsecServerIkeConfigOutput {
	return o
}

func (o IpsecServerIkeConfigOutput) ToIpsecServerIkeConfigOutputWithContext(ctx context.Context) IpsecServerIkeConfigOutput {
	return o
}

// The authentication algorithm that is used in Phase 1 negotiations. Default value: `sha1`.
func (o IpsecServerIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm that is used in Phase 1 negotiations. Default value: `aes`.
func (o IpsecServerIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// IkeLifetime: the SA lifetime determined by Phase 1 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
func (o IpsecServerIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The IKE negotiation mode. Default value: `main`.
func (o IpsecServerIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiations. Default value: `group2`.
func (o IpsecServerIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The IKE version. Valid values: `ikev1` and `ikev2`. Default value: `ikev2`.
func (o IpsecServerIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.
func (o IpsecServerIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The identifier of the customer gateway. The value can be an FQDN or an IP address. By default, this parameter is not specified.
func (o IpsecServerIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

type IpsecServerIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (IpsecServerIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIkeConfig)(nil)).Elem()
}

func (o IpsecServerIkeConfigArrayOutput) ToIpsecServerIkeConfigArrayOutput() IpsecServerIkeConfigArrayOutput {
	return o
}

func (o IpsecServerIkeConfigArrayOutput) ToIpsecServerIkeConfigArrayOutputWithContext(ctx context.Context) IpsecServerIkeConfigArrayOutput {
	return o
}

func (o IpsecServerIkeConfigArrayOutput) Index(i pulumi.IntInput) IpsecServerIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecServerIkeConfig {
		return vs[0].([]IpsecServerIkeConfig)[vs[1].(int)]
	}).(IpsecServerIkeConfigOutput)
}

type IpsecServerIpsecConfig struct {
	// The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// IpsecServerIpsecConfigInput is an input type that accepts IpsecServerIpsecConfigArgs and IpsecServerIpsecConfigOutput values.
// You can construct a concrete instance of `IpsecServerIpsecConfigInput` via:
//
//	IpsecServerIpsecConfigArgs{...}
type IpsecServerIpsecConfigInput interface {
	pulumi.Input

	ToIpsecServerIpsecConfigOutput() IpsecServerIpsecConfigOutput
	ToIpsecServerIpsecConfigOutputWithContext(context.Context) IpsecServerIpsecConfigOutput
}

type IpsecServerIpsecConfigArgs struct {
	// The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (IpsecServerIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIpsecConfig)(nil)).Elem()
}

func (i IpsecServerIpsecConfigArgs) ToIpsecServerIpsecConfigOutput() IpsecServerIpsecConfigOutput {
	return i.ToIpsecServerIpsecConfigOutputWithContext(context.Background())
}

func (i IpsecServerIpsecConfigArgs) ToIpsecServerIpsecConfigOutputWithContext(ctx context.Context) IpsecServerIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIpsecConfigOutput)
}

// IpsecServerIpsecConfigArrayInput is an input type that accepts IpsecServerIpsecConfigArray and IpsecServerIpsecConfigArrayOutput values.
// You can construct a concrete instance of `IpsecServerIpsecConfigArrayInput` via:
//
//	IpsecServerIpsecConfigArray{ IpsecServerIpsecConfigArgs{...} }
type IpsecServerIpsecConfigArrayInput interface {
	pulumi.Input

	ToIpsecServerIpsecConfigArrayOutput() IpsecServerIpsecConfigArrayOutput
	ToIpsecServerIpsecConfigArrayOutputWithContext(context.Context) IpsecServerIpsecConfigArrayOutput
}

type IpsecServerIpsecConfigArray []IpsecServerIpsecConfigInput

func (IpsecServerIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIpsecConfig)(nil)).Elem()
}

func (i IpsecServerIpsecConfigArray) ToIpsecServerIpsecConfigArrayOutput() IpsecServerIpsecConfigArrayOutput {
	return i.ToIpsecServerIpsecConfigArrayOutputWithContext(context.Background())
}

func (i IpsecServerIpsecConfigArray) ToIpsecServerIpsecConfigArrayOutputWithContext(ctx context.Context) IpsecServerIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecServerIpsecConfigArrayOutput)
}

type IpsecServerIpsecConfigOutput struct{ *pulumi.OutputState }

func (IpsecServerIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecServerIpsecConfig)(nil)).Elem()
}

func (o IpsecServerIpsecConfigOutput) ToIpsecServerIpsecConfigOutput() IpsecServerIpsecConfigOutput {
	return o
}

func (o IpsecServerIpsecConfigOutput) ToIpsecServerIpsecConfigOutputWithContext(ctx context.Context) IpsecServerIpsecConfigOutput {
	return o
}

// The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
func (o IpsecServerIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
func (o IpsecServerIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
func (o IpsecServerIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
func (o IpsecServerIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpsecServerIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type IpsecServerIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (IpsecServerIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecServerIpsecConfig)(nil)).Elem()
}

func (o IpsecServerIpsecConfigArrayOutput) ToIpsecServerIpsecConfigArrayOutput() IpsecServerIpsecConfigArrayOutput {
	return o
}

func (o IpsecServerIpsecConfigArrayOutput) ToIpsecServerIpsecConfigArrayOutputWithContext(ctx context.Context) IpsecServerIpsecConfigArrayOutput {
	return o
}

func (o IpsecServerIpsecConfigArrayOutput) Index(i pulumi.IntInput) IpsecServerIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecServerIpsecConfig {
		return vs[0].([]IpsecServerIpsecConfig)[vs[1].(int)]
	}).(IpsecServerIpsecConfigOutput)
}

type GetConnectionsConnection struct {
	CreateTime string `pulumi:"createTime"`
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	EffectImmediately bool   `pulumi:"effectImmediately"`
	// Specifies whether to enable the dead peer detection (DPD) feature.
	EnableDpd bool `pulumi:"enableDpd"`
	// Specifies whether to enable NAT traversal.
	EnableNatTraversal bool `pulumi:"enableNatTraversal"`
	// ID of the VPN connection.
	Id string `pulumi:"id"`
	// The configurations of phase-one negotiation.
	IkeConfigs []GetConnectionsConnectionIkeConfig `pulumi:"ikeConfigs"`
	// The configurations of phase-two negotiation.
	IpsecConfigs []GetConnectionsConnectionIpsecConfig `pulumi:"ipsecConfigs"`
	// The local subnet of the VPN connection.
	LocalSubnet string `pulumi:"localSubnet"`
	// The name of the VPN connection.
	Name string `pulumi:"name"`
	// The remote subnet of the VPN connection.
	RemoteSubnet string `pulumi:"remoteSubnet"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status          string                                   `pulumi:"status"`
	VcoHealthChecks []GetConnectionsConnectionVcoHealthCheck `pulumi:"vcoHealthChecks"`
	// The configuration information for BGP.
	VpnBgpConfigs []GetConnectionsConnectionVpnBgpConfig `pulumi:"vpnBgpConfigs"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// GetConnectionsConnectionInput is an input type that accepts GetConnectionsConnectionArgs and GetConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionInput` via:
//
//	GetConnectionsConnectionArgs{...}
type GetConnectionsConnectionInput interface {
	pulumi.Input

	ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput
	ToGetConnectionsConnectionOutputWithContext(context.Context) GetConnectionsConnectionOutput
}

type GetConnectionsConnectionArgs struct {
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Use the VPN customer gateway ID as the search key.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	EffectImmediately pulumi.BoolInput   `pulumi:"effectImmediately"`
	// Specifies whether to enable the dead peer detection (DPD) feature.
	EnableDpd pulumi.BoolInput `pulumi:"enableDpd"`
	// Specifies whether to enable NAT traversal.
	EnableNatTraversal pulumi.BoolInput `pulumi:"enableNatTraversal"`
	// ID of the VPN connection.
	Id pulumi.StringInput `pulumi:"id"`
	// The configurations of phase-one negotiation.
	IkeConfigs GetConnectionsConnectionIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// The configurations of phase-two negotiation.
	IpsecConfigs GetConnectionsConnectionIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The local subnet of the VPN connection.
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// The name of the VPN connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The remote subnet of the VPN connection.
	RemoteSubnet pulumi.StringInput `pulumi:"remoteSubnet"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status          pulumi.StringInput                               `pulumi:"status"`
	VcoHealthChecks GetConnectionsConnectionVcoHealthCheckArrayInput `pulumi:"vcoHealthChecks"`
	// The configuration information for BGP.
	VpnBgpConfigs GetConnectionsConnectionVpnBgpConfigArrayInput `pulumi:"vpnBgpConfigs"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (GetConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnection)(nil)).Elem()
}

func (i GetConnectionsConnectionArgs) ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput {
	return i.ToGetConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionArgs) ToGetConnectionsConnectionOutputWithContext(ctx context.Context) GetConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionOutput)
}

// GetConnectionsConnectionArrayInput is an input type that accepts GetConnectionsConnectionArray and GetConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionArrayInput` via:
//
//	GetConnectionsConnectionArray{ GetConnectionsConnectionArgs{...} }
type GetConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput
	ToGetConnectionsConnectionArrayOutputWithContext(context.Context) GetConnectionsConnectionArrayOutput
}

type GetConnectionsConnectionArray []GetConnectionsConnectionInput

func (GetConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnection)(nil)).Elem()
}

func (i GetConnectionsConnectionArray) ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput {
	return i.ToGetConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionArray) ToGetConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionArrayOutput)
}

type GetConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnection)(nil)).Elem()
}

func (o GetConnectionsConnectionOutput) ToGetConnectionsConnectionOutput() GetConnectionsConnectionOutput {
	return o
}

func (o GetConnectionsConnectionOutput) ToGetConnectionsConnectionOutputWithContext(ctx context.Context) GetConnectionsConnectionOutput {
	return o
}

func (o GetConnectionsConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Use the VPN customer gateway ID as the search key.
func (o GetConnectionsConnectionOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

func (o GetConnectionsConnectionOutput) EffectImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EffectImmediately }).(pulumi.BoolOutput)
}

// Specifies whether to enable the dead peer detection (DPD) feature.
func (o GetConnectionsConnectionOutput) EnableDpd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EnableDpd }).(pulumi.BoolOutput)
}

// Specifies whether to enable NAT traversal.
func (o GetConnectionsConnectionOutput) EnableNatTraversal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionsConnection) bool { return v.EnableNatTraversal }).(pulumi.BoolOutput)
}

// ID of the VPN connection.
func (o GetConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// The configurations of phase-one negotiation.
func (o GetConnectionsConnectionOutput) IkeConfigs() GetConnectionsConnectionIkeConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionIkeConfig { return v.IkeConfigs }).(GetConnectionsConnectionIkeConfigArrayOutput)
}

// The configurations of phase-two negotiation.
func (o GetConnectionsConnectionOutput) IpsecConfigs() GetConnectionsConnectionIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionIpsecConfig { return v.IpsecConfigs }).(GetConnectionsConnectionIpsecConfigArrayOutput)
}

// The local subnet of the VPN connection.
func (o GetConnectionsConnectionOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// The name of the VPN connection.
func (o GetConnectionsConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The remote subnet of the VPN connection.
func (o GetConnectionsConnectionOutput) RemoteSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.RemoteSubnet }).(pulumi.StringOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetConnectionsConnectionOutput) VcoHealthChecks() GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionVcoHealthCheck { return v.VcoHealthChecks }).(GetConnectionsConnectionVcoHealthCheckArrayOutput)
}

// The configuration information for BGP.
func (o GetConnectionsConnectionOutput) VpnBgpConfigs() GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return o.ApplyT(func(v GetConnectionsConnection) []GetConnectionsConnectionVpnBgpConfig { return v.VpnBgpConfigs }).(GetConnectionsConnectionVpnBgpConfigArrayOutput)
}

// Use the VPN gateway ID as the search key.
func (o GetConnectionsConnectionOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsConnection) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type GetConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnection)(nil)).Elem()
}

func (o GetConnectionsConnectionArrayOutput) ToGetConnectionsConnectionArrayOutput() GetConnectionsConnectionArrayOutput {
	return o
}

func (o GetConnectionsConnectionArrayOutput) ToGetConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionArrayOutput {
	return o
}

func (o GetConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnection {
		return vs[0].([]GetConnectionsConnection)[vs[1].(int)]
	}).(GetConnectionsConnectionOutput)
}

type GetConnectionsConnectionIkeConfig struct {
	// The authentication algorithm of phase-one negotiation.
	IkeAuthAlg *string `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation.
	IkeEncAlg *string `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId *string `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE phase-one.
	IkeMode *string `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation.
	IkePfs *string `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId *string `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk *string `pulumi:"psk"`
}

// GetConnectionsConnectionIkeConfigInput is an input type that accepts GetConnectionsConnectionIkeConfigArgs and GetConnectionsConnectionIkeConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIkeConfigInput` via:
//
//	GetConnectionsConnectionIkeConfigArgs{...}
type GetConnectionsConnectionIkeConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput
	ToGetConnectionsConnectionIkeConfigOutputWithContext(context.Context) GetConnectionsConnectionIkeConfigOutput
}

type GetConnectionsConnectionIkeConfigArgs struct {
	// The authentication algorithm of phase-one negotiation.
	IkeAuthAlg pulumi.StringPtrInput `pulumi:"ikeAuthAlg"`
	// The encryption algorithm of phase-one negotiation.
	IkeEncAlg pulumi.StringPtrInput `pulumi:"ikeEncAlg"`
	// The SA lifecycle as the result of phase-one negotiation.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// The identification of the VPN gateway.
	IkeLocalId pulumi.StringPtrInput `pulumi:"ikeLocalId"`
	// The negotiation mode of IKE phase-one.
	IkeMode pulumi.StringPtrInput `pulumi:"ikeMode"`
	// The Diffie-Hellman key exchange algorithm used by phase-one negotiation.
	IkePfs pulumi.StringPtrInput `pulumi:"ikePfs"`
	// The identification of the customer gateway.
	IkeRemoteId pulumi.StringPtrInput `pulumi:"ikeRemoteId"`
	// The version of the IKE protocol.
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// Used for authentication between the IPsec VPN gateway and the customer gateway.
	Psk pulumi.StringPtrInput `pulumi:"psk"`
}

func (GetConnectionsConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIkeConfigArgs) ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput {
	return i.ToGetConnectionsConnectionIkeConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIkeConfigArgs) ToGetConnectionsConnectionIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIkeConfigOutput)
}

// GetConnectionsConnectionIkeConfigArrayInput is an input type that accepts GetConnectionsConnectionIkeConfigArray and GetConnectionsConnectionIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIkeConfigArrayInput` via:
//
//	GetConnectionsConnectionIkeConfigArray{ GetConnectionsConnectionIkeConfigArgs{...} }
type GetConnectionsConnectionIkeConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput
	ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionIkeConfigArrayOutput
}

type GetConnectionsConnectionIkeConfigArray []GetConnectionsConnectionIkeConfigInput

func (GetConnectionsConnectionIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIkeConfigArray) ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput {
	return i.ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIkeConfigArray) ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIkeConfigArrayOutput)
}

type GetConnectionsConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIkeConfigOutput) ToGetConnectionsConnectionIkeConfigOutput() GetConnectionsConnectionIkeConfigOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigOutput) ToGetConnectionsConnectionIkeConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigOutput {
	return o
}

// The authentication algorithm of phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkeAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkeEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// The identification of the VPN gateway.
func (o GetConnectionsConnectionIkeConfigOutput) IkeLocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeLocalId }).(pulumi.StringPtrOutput)
}

// The negotiation mode of IKE phase-one.
func (o GetConnectionsConnectionIkeConfigOutput) IkeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeMode }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-one negotiation.
func (o GetConnectionsConnectionIkeConfigOutput) IkePfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkePfs }).(pulumi.StringPtrOutput)
}

// The identification of the customer gateway.
func (o GetConnectionsConnectionIkeConfigOutput) IkeRemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeRemoteId }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol.
func (o GetConnectionsConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// Used for authentication between the IPsec VPN gateway and the customer gateway.
func (o GetConnectionsConnectionIkeConfigOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIkeConfig) *string { return v.Psk }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIkeConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) ToGetConnectionsConnectionIkeConfigArrayOutput() GetConnectionsConnectionIkeConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) ToGetConnectionsConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIkeConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIkeConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionIkeConfig {
		return vs[0].([]GetConnectionsConnectionIkeConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionIkeConfigOutput)
}

type GetConnectionsConnectionIpsecConfig struct {
	// The authentication algorithm of phase-two negotiation.
	IpsecAuthAlg *string `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation.
	IpsecEncAlg *string `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation.
	IpsecLifetime *int `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation.
	IpsecPfs *string `pulumi:"ipsecPfs"`
}

// GetConnectionsConnectionIpsecConfigInput is an input type that accepts GetConnectionsConnectionIpsecConfigArgs and GetConnectionsConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIpsecConfigInput` via:
//
//	GetConnectionsConnectionIpsecConfigArgs{...}
type GetConnectionsConnectionIpsecConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput
	ToGetConnectionsConnectionIpsecConfigOutputWithContext(context.Context) GetConnectionsConnectionIpsecConfigOutput
}

type GetConnectionsConnectionIpsecConfigArgs struct {
	// The authentication algorithm of phase-two negotiation.
	IpsecAuthAlg pulumi.StringPtrInput `pulumi:"ipsecAuthAlg"`
	// The encryption algorithm of phase-two negotiation.
	IpsecEncAlg pulumi.StringPtrInput `pulumi:"ipsecEncAlg"`
	// The SA lifecycle as the result of phase-two negotiation.
	IpsecLifetime pulumi.IntPtrInput `pulumi:"ipsecLifetime"`
	// The Diffie-Hellman key exchange algorithm used by phase-two negotiation.
	IpsecPfs pulumi.StringPtrInput `pulumi:"ipsecPfs"`
}

func (GetConnectionsConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIpsecConfigArgs) ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput {
	return i.ToGetConnectionsConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIpsecConfigArgs) ToGetConnectionsConnectionIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIpsecConfigOutput)
}

// GetConnectionsConnectionIpsecConfigArrayInput is an input type that accepts GetConnectionsConnectionIpsecConfigArray and GetConnectionsConnectionIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionIpsecConfigArrayInput` via:
//
//	GetConnectionsConnectionIpsecConfigArray{ GetConnectionsConnectionIpsecConfigArgs{...} }
type GetConnectionsConnectionIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput
	ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionIpsecConfigArrayOutput
}

type GetConnectionsConnectionIpsecConfigArray []GetConnectionsConnectionIpsecConfigInput

func (GetConnectionsConnectionIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionIpsecConfigArray) ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput {
	return i.ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionIpsecConfigArray) ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionIpsecConfigArrayOutput)
}

type GetConnectionsConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIpsecConfigOutput) ToGetConnectionsConnectionIpsecConfigOutput() GetConnectionsConnectionIpsecConfigOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigOutput) ToGetConnectionsConnectionIpsecConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigOutput {
	return o
}

// The authentication algorithm of phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

// The SA lifecycle as the result of phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *int { return v.IpsecLifetime }).(pulumi.IntPtrOutput)
}

// The Diffie-Hellman key exchange algorithm used by phase-two negotiation.
func (o GetConnectionsConnectionIpsecConfigOutput) IpsecPfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionIpsecConfig) *string { return v.IpsecPfs }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionIpsecConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) ToGetConnectionsConnectionIpsecConfigArrayOutput() GetConnectionsConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) ToGetConnectionsConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionIpsecConfig {
		return vs[0].([]GetConnectionsConnectionIpsecConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionIpsecConfigOutput)
}

type GetConnectionsConnectionVcoHealthCheck struct {
	// The destination ip address.
	Dip *string `pulumi:"dip"`
	// The health check on status. Valid values: `true`, `false`.
	Enable *string `pulumi:"enable"`
	// The time interval between health checks.
	Interval *int `pulumi:"interval"`
	// The number of retries for health checks issued.
	Retry *int `pulumi:"retry"`
	// The source ip address.
	Sip *string `pulumi:"sip"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status *string `pulumi:"status"`
}

// GetConnectionsConnectionVcoHealthCheckInput is an input type that accepts GetConnectionsConnectionVcoHealthCheckArgs and GetConnectionsConnectionVcoHealthCheckOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVcoHealthCheckInput` via:
//
//	GetConnectionsConnectionVcoHealthCheckArgs{...}
type GetConnectionsConnectionVcoHealthCheckInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVcoHealthCheckOutput() GetConnectionsConnectionVcoHealthCheckOutput
	ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(context.Context) GetConnectionsConnectionVcoHealthCheckOutput
}

type GetConnectionsConnectionVcoHealthCheckArgs struct {
	// The destination ip address.
	Dip pulumi.StringPtrInput `pulumi:"dip"`
	// The health check on status. Valid values: `true`, `false`.
	Enable pulumi.StringPtrInput `pulumi:"enable"`
	// The time interval between health checks.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The number of retries for health checks issued.
	Retry pulumi.IntPtrInput `pulumi:"retry"`
	// The source ip address.
	Sip pulumi.StringPtrInput `pulumi:"sip"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetConnectionsConnectionVcoHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (i GetConnectionsConnectionVcoHealthCheckArgs) ToGetConnectionsConnectionVcoHealthCheckOutput() GetConnectionsConnectionVcoHealthCheckOutput {
	return i.ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVcoHealthCheckArgs) ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVcoHealthCheckOutput)
}

// GetConnectionsConnectionVcoHealthCheckArrayInput is an input type that accepts GetConnectionsConnectionVcoHealthCheckArray and GetConnectionsConnectionVcoHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVcoHealthCheckArrayInput` via:
//
//	GetConnectionsConnectionVcoHealthCheckArray{ GetConnectionsConnectionVcoHealthCheckArgs{...} }
type GetConnectionsConnectionVcoHealthCheckArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVcoHealthCheckArrayOutput() GetConnectionsConnectionVcoHealthCheckArrayOutput
	ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(context.Context) GetConnectionsConnectionVcoHealthCheckArrayOutput
}

type GetConnectionsConnectionVcoHealthCheckArray []GetConnectionsConnectionVcoHealthCheckInput

func (GetConnectionsConnectionVcoHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (i GetConnectionsConnectionVcoHealthCheckArray) ToGetConnectionsConnectionVcoHealthCheckArrayOutput() GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return i.ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVcoHealthCheckArray) ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVcoHealthCheckArrayOutput)
}

type GetConnectionsConnectionVcoHealthCheckOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVcoHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (o GetConnectionsConnectionVcoHealthCheckOutput) ToGetConnectionsConnectionVcoHealthCheckOutput() GetConnectionsConnectionVcoHealthCheckOutput {
	return o
}

func (o GetConnectionsConnectionVcoHealthCheckOutput) ToGetConnectionsConnectionVcoHealthCheckOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckOutput {
	return o
}

// The destination ip address.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Dip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Dip }).(pulumi.StringPtrOutput)
}

// The health check on status. Valid values: `true`, `false`.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Enable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Enable }).(pulumi.StringPtrOutput)
}

// The time interval between health checks.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The number of retries for health checks issued.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *int { return v.Retry }).(pulumi.IntPtrOutput)
}

// The source ip address.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Sip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Sip }).(pulumi.StringPtrOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionVcoHealthCheckOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVcoHealthCheck) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionVcoHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVcoHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVcoHealthCheck)(nil)).Elem()
}

func (o GetConnectionsConnectionVcoHealthCheckArrayOutput) ToGetConnectionsConnectionVcoHealthCheckArrayOutput() GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return o
}

func (o GetConnectionsConnectionVcoHealthCheckArrayOutput) ToGetConnectionsConnectionVcoHealthCheckArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVcoHealthCheckArrayOutput {
	return o
}

func (o GetConnectionsConnectionVcoHealthCheckArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionVcoHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionVcoHealthCheck {
		return vs[0].([]GetConnectionsConnectionVcoHealthCheck)[vs[1].(int)]
	}).(GetConnectionsConnectionVcoHealthCheckOutput)
}

type GetConnectionsConnectionVpnBgpConfig struct {
	// The authentication keys for BGP routing protocols.
	AuthKey *string `pulumi:"authKey"`
	// The ali cloud side autonomous system.
	LocalAsn *int `pulumi:"localAsn"`
	// The ali cloud side BGP address.
	LocalBgpIp *string `pulumi:"localBgpIp"`
	// The counterpart autonomous system number.
	PeerAsn *int `pulumi:"peerAsn"`
	// The BGP address on the other side.
	PeerBgpIp *string `pulumi:"peerBgpIp"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status *string `pulumi:"status"`
	// The ipsec tunnel segments.
	TunnelCidr *string `pulumi:"tunnelCidr"`
}

// GetConnectionsConnectionVpnBgpConfigInput is an input type that accepts GetConnectionsConnectionVpnBgpConfigArgs and GetConnectionsConnectionVpnBgpConfigOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVpnBgpConfigInput` via:
//
//	GetConnectionsConnectionVpnBgpConfigArgs{...}
type GetConnectionsConnectionVpnBgpConfigInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVpnBgpConfigOutput() GetConnectionsConnectionVpnBgpConfigOutput
	ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(context.Context) GetConnectionsConnectionVpnBgpConfigOutput
}

type GetConnectionsConnectionVpnBgpConfigArgs struct {
	// The authentication keys for BGP routing protocols.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// The ali cloud side autonomous system.
	LocalAsn pulumi.IntPtrInput `pulumi:"localAsn"`
	// The ali cloud side BGP address.
	LocalBgpIp pulumi.StringPtrInput `pulumi:"localBgpIp"`
	// The counterpart autonomous system number.
	PeerAsn pulumi.IntPtrInput `pulumi:"peerAsn"`
	// The BGP address on the other side.
	PeerBgpIp pulumi.StringPtrInput `pulumi:"peerBgpIp"`
	// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The ipsec tunnel segments.
	TunnelCidr pulumi.StringPtrInput `pulumi:"tunnelCidr"`
}

func (GetConnectionsConnectionVpnBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionVpnBgpConfigArgs) ToGetConnectionsConnectionVpnBgpConfigOutput() GetConnectionsConnectionVpnBgpConfigOutput {
	return i.ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVpnBgpConfigArgs) ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVpnBgpConfigOutput)
}

// GetConnectionsConnectionVpnBgpConfigArrayInput is an input type that accepts GetConnectionsConnectionVpnBgpConfigArray and GetConnectionsConnectionVpnBgpConfigArrayOutput values.
// You can construct a concrete instance of `GetConnectionsConnectionVpnBgpConfigArrayInput` via:
//
//	GetConnectionsConnectionVpnBgpConfigArray{ GetConnectionsConnectionVpnBgpConfigArgs{...} }
type GetConnectionsConnectionVpnBgpConfigArrayInput interface {
	pulumi.Input

	ToGetConnectionsConnectionVpnBgpConfigArrayOutput() GetConnectionsConnectionVpnBgpConfigArrayOutput
	ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(context.Context) GetConnectionsConnectionVpnBgpConfigArrayOutput
}

type GetConnectionsConnectionVpnBgpConfigArray []GetConnectionsConnectionVpnBgpConfigInput

func (GetConnectionsConnectionVpnBgpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (i GetConnectionsConnectionVpnBgpConfigArray) ToGetConnectionsConnectionVpnBgpConfigArrayOutput() GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return i.ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(context.Background())
}

func (i GetConnectionsConnectionVpnBgpConfigArray) ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionsConnectionVpnBgpConfigArrayOutput)
}

type GetConnectionsConnectionVpnBgpConfigOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVpnBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionVpnBgpConfigOutput) ToGetConnectionsConnectionVpnBgpConfigOutput() GetConnectionsConnectionVpnBgpConfigOutput {
	return o
}

func (o GetConnectionsConnectionVpnBgpConfigOutput) ToGetConnectionsConnectionVpnBgpConfigOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigOutput {
	return o
}

// The authentication keys for BGP routing protocols.
func (o GetConnectionsConnectionVpnBgpConfigOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// The ali cloud side autonomous system.
func (o GetConnectionsConnectionVpnBgpConfigOutput) LocalAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *int { return v.LocalAsn }).(pulumi.IntPtrOutput)
}

// The ali cloud side BGP address.
func (o GetConnectionsConnectionVpnBgpConfigOutput) LocalBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.LocalBgpIp }).(pulumi.StringPtrOutput)
}

// The counterpart autonomous system number.
func (o GetConnectionsConnectionVpnBgpConfigOutput) PeerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *int { return v.PeerAsn }).(pulumi.IntPtrOutput)
}

// The BGP address on the other side.
func (o GetConnectionsConnectionVpnBgpConfigOutput) PeerBgpIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.PeerBgpIp }).(pulumi.StringPtrOutput)
}

// The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
func (o GetConnectionsConnectionVpnBgpConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The ipsec tunnel segments.
func (o GetConnectionsConnectionVpnBgpConfigOutput) TunnelCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsConnectionVpnBgpConfig) *string { return v.TunnelCidr }).(pulumi.StringPtrOutput)
}

type GetConnectionsConnectionVpnBgpConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionsConnectionVpnBgpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionsConnectionVpnBgpConfig)(nil)).Elem()
}

func (o GetConnectionsConnectionVpnBgpConfigArrayOutput) ToGetConnectionsConnectionVpnBgpConfigArrayOutput() GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionVpnBgpConfigArrayOutput) ToGetConnectionsConnectionVpnBgpConfigArrayOutputWithContext(ctx context.Context) GetConnectionsConnectionVpnBgpConfigArrayOutput {
	return o
}

func (o GetConnectionsConnectionVpnBgpConfigArrayOutput) Index(i pulumi.IntInput) GetConnectionsConnectionVpnBgpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionsConnectionVpnBgpConfig {
		return vs[0].([]GetConnectionsConnectionVpnBgpConfig)[vs[1].(int)]
	}).(GetConnectionsConnectionVpnBgpConfigOutput)
}

type GetCustomerGatewaysGateway struct {
	// The autonomous system number of the local data center gateway device of the VPN customer gateway.
	Asn int `pulumi:"asn"`
	// The creation time of the VPN customer gateway.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPN customer gateway.
	Description string `pulumi:"description"`
	// ID of the VPN customer gateway .
	Id string `pulumi:"id"`
	// The ip address of the VPN customer gateway.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the VPN customer gateway.
	Name string `pulumi:"name"`
}

// GetCustomerGatewaysGatewayInput is an input type that accepts GetCustomerGatewaysGatewayArgs and GetCustomerGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetCustomerGatewaysGatewayInput` via:
//
//	GetCustomerGatewaysGatewayArgs{...}
type GetCustomerGatewaysGatewayInput interface {
	pulumi.Input

	ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput
	ToGetCustomerGatewaysGatewayOutputWithContext(context.Context) GetCustomerGatewaysGatewayOutput
}

type GetCustomerGatewaysGatewayArgs struct {
	// The autonomous system number of the local data center gateway device of the VPN customer gateway.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The creation time of the VPN customer gateway.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPN customer gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the VPN customer gateway .
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of the VPN customer gateway.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the VPN customer gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCustomerGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewaysGateway)(nil)).Elem()
}

func (i GetCustomerGatewaysGatewayArgs) ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput {
	return i.ToGetCustomerGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetCustomerGatewaysGatewayArgs) ToGetCustomerGatewaysGatewayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewaysGatewayOutput)
}

// GetCustomerGatewaysGatewayArrayInput is an input type that accepts GetCustomerGatewaysGatewayArray and GetCustomerGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetCustomerGatewaysGatewayArrayInput` via:
//
//	GetCustomerGatewaysGatewayArray{ GetCustomerGatewaysGatewayArgs{...} }
type GetCustomerGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput
	ToGetCustomerGatewaysGatewayArrayOutputWithContext(context.Context) GetCustomerGatewaysGatewayArrayOutput
}

type GetCustomerGatewaysGatewayArray []GetCustomerGatewaysGatewayInput

func (GetCustomerGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewaysGateway)(nil)).Elem()
}

func (i GetCustomerGatewaysGatewayArray) ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput {
	return i.ToGetCustomerGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetCustomerGatewaysGatewayArray) ToGetCustomerGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewaysGatewayArrayOutput)
}

type GetCustomerGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewaysGateway)(nil)).Elem()
}

func (o GetCustomerGatewaysGatewayOutput) ToGetCustomerGatewaysGatewayOutput() GetCustomerGatewaysGatewayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayOutput) ToGetCustomerGatewaysGatewayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayOutput {
	return o
}

// The autonomous system number of the local data center gateway device of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) int { return v.Asn }).(pulumi.IntOutput)
}

// The creation time of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the VPN customer gateway .
func (o GetCustomerGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the VPN customer gateway.
func (o GetCustomerGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

type GetCustomerGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewaysGateway)(nil)).Elem()
}

func (o GetCustomerGatewaysGatewayArrayOutput) ToGetCustomerGatewaysGatewayArrayOutput() GetCustomerGatewaysGatewayArrayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayArrayOutput) ToGetCustomerGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetCustomerGatewaysGatewayArrayOutput {
	return o
}

func (o GetCustomerGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetCustomerGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomerGatewaysGateway {
		return vs[0].([]GetCustomerGatewaysGateway)[vs[1].(int)]
	}).(GetCustomerGatewaysGatewayOutput)
}

type GetGatewayVcoRoutesRoute struct {
	// List of autonomous system numbers through which BGP routing entries pass.
	AsPath string `pulumi:"asPath"`
	// The creation time of the VPN destination route.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Vpn Gateway Vco Routes.
	Id string `pulumi:"id"`
	// The next hop of the destination route.
	NextHop string `pulumi:"nextHop"`
	// The destination network segment of the destination route.
	RouteDest string `pulumi:"routeDest"`
	// The source CIDR block of the destination route.
	Source string `pulumi:"source"`
	// The status of the vpn route entry.
	Status string `pulumi:"status"`
	// The id of the vpn connection.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The weight value of the destination route.
	Weight int `pulumi:"weight"`
}

// GetGatewayVcoRoutesRouteInput is an input type that accepts GetGatewayVcoRoutesRouteArgs and GetGatewayVcoRoutesRouteOutput values.
// You can construct a concrete instance of `GetGatewayVcoRoutesRouteInput` via:
//
//	GetGatewayVcoRoutesRouteArgs{...}
type GetGatewayVcoRoutesRouteInput interface {
	pulumi.Input

	ToGetGatewayVcoRoutesRouteOutput() GetGatewayVcoRoutesRouteOutput
	ToGetGatewayVcoRoutesRouteOutputWithContext(context.Context) GetGatewayVcoRoutesRouteOutput
}

type GetGatewayVcoRoutesRouteArgs struct {
	// List of autonomous system numbers through which BGP routing entries pass.
	AsPath pulumi.StringInput `pulumi:"asPath"`
	// The creation time of the VPN destination route.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Vpn Gateway Vco Routes.
	Id pulumi.StringInput `pulumi:"id"`
	// The next hop of the destination route.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The destination network segment of the destination route.
	RouteDest pulumi.StringInput `pulumi:"routeDest"`
	// The source CIDR block of the destination route.
	Source pulumi.StringInput `pulumi:"source"`
	// The status of the vpn route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the vpn connection.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
	// The weight value of the destination route.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetGatewayVcoRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (i GetGatewayVcoRoutesRouteArgs) ToGetGatewayVcoRoutesRouteOutput() GetGatewayVcoRoutesRouteOutput {
	return i.ToGetGatewayVcoRoutesRouteOutputWithContext(context.Background())
}

func (i GetGatewayVcoRoutesRouteArgs) ToGetGatewayVcoRoutesRouteOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVcoRoutesRouteOutput)
}

// GetGatewayVcoRoutesRouteArrayInput is an input type that accepts GetGatewayVcoRoutesRouteArray and GetGatewayVcoRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetGatewayVcoRoutesRouteArrayInput` via:
//
//	GetGatewayVcoRoutesRouteArray{ GetGatewayVcoRoutesRouteArgs{...} }
type GetGatewayVcoRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetGatewayVcoRoutesRouteArrayOutput() GetGatewayVcoRoutesRouteArrayOutput
	ToGetGatewayVcoRoutesRouteArrayOutputWithContext(context.Context) GetGatewayVcoRoutesRouteArrayOutput
}

type GetGatewayVcoRoutesRouteArray []GetGatewayVcoRoutesRouteInput

func (GetGatewayVcoRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (i GetGatewayVcoRoutesRouteArray) ToGetGatewayVcoRoutesRouteArrayOutput() GetGatewayVcoRoutesRouteArrayOutput {
	return i.ToGetGatewayVcoRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetGatewayVcoRoutesRouteArray) ToGetGatewayVcoRoutesRouteArrayOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVcoRoutesRouteArrayOutput)
}

type GetGatewayVcoRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetGatewayVcoRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (o GetGatewayVcoRoutesRouteOutput) ToGetGatewayVcoRoutesRouteOutput() GetGatewayVcoRoutesRouteOutput {
	return o
}

func (o GetGatewayVcoRoutesRouteOutput) ToGetGatewayVcoRoutesRouteOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteOutput {
	return o
}

// List of autonomous system numbers through which BGP routing entries pass.
func (o GetGatewayVcoRoutesRouteOutput) AsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.AsPath }).(pulumi.StringOutput)
}

// The creation time of the VPN destination route.
func (o GetGatewayVcoRoutesRouteOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Vpn Gateway Vco Routes.
func (o GetGatewayVcoRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

// The next hop of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

// The destination network segment of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) RouteDest() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.RouteDest }).(pulumi.StringOutput)
}

// The source CIDR block of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.Source }).(pulumi.StringOutput)
}

// The status of the vpn route entry.
func (o GetGatewayVcoRoutesRouteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the vpn connection.
func (o GetGatewayVcoRoutesRouteOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The weight value of the destination route.
func (o GetGatewayVcoRoutesRouteOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesRoute) int { return v.Weight }).(pulumi.IntOutput)
}

type GetGatewayVcoRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVcoRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVcoRoutesRoute)(nil)).Elem()
}

func (o GetGatewayVcoRoutesRouteArrayOutput) ToGetGatewayVcoRoutesRouteArrayOutput() GetGatewayVcoRoutesRouteArrayOutput {
	return o
}

func (o GetGatewayVcoRoutesRouteArrayOutput) ToGetGatewayVcoRoutesRouteArrayOutputWithContext(ctx context.Context) GetGatewayVcoRoutesRouteArrayOutput {
	return o
}

func (o GetGatewayVcoRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetGatewayVcoRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVcoRoutesRoute {
		return vs[0].([]GetGatewayVcoRoutesRoute)[vs[1].(int)]
	}).(GetGatewayVcoRoutesRouteOutput)
}

type GetGatewayVpnAttachmentsAttachment struct {
	// The configurations of the BGP routing protocol.
	BgpConfigs []GetGatewayVpnAttachmentsAttachmentBgpConfig `pulumi:"bgpConfigs"`
	// The status of the IPsec-VPN connection.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The ID of the customer gateway.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
	EffectImmediately bool `pulumi:"effectImmediately"`
	// The health check configurations.
	HealthCheckConfigs []GetGatewayVpnAttachmentsAttachmentHealthCheckConfig `pulumi:"healthCheckConfigs"`
	// The ID of the Vpn Attachment.
	Id string `pulumi:"id"`
	// Configuration negotiated in the second stage.
	IkeConfigs []GetGatewayVpnAttachmentsAttachmentIkeConfig `pulumi:"ikeConfigs"`
	// The internet ip of the resource. The cen.TransitRouterVpnAttachment resource will not have a value until after it is created.
	InternetIp string `pulumi:"internetIp"`
	// The configuration of Phase 2 negotiations.
	IpsecConfigs []GetGatewayVpnAttachmentsAttachmentIpsecConfig `pulumi:"ipsecConfigs"`
	// The CIDR block of the virtual private cloud (VPC).
	LocalSubnet string `pulumi:"localSubnet"`
	// The network type.
	NetworkType string `pulumi:"networkType"`
	// The CIDR block of the on-premises data center.
	RemoteSubnet string `pulumi:"remoteSubnet"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The name of the IPsec-VPN connection.
	VpnAttachmentName string `pulumi:"vpnAttachmentName"`
	// The first ID of the resource.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
}

// GetGatewayVpnAttachmentsAttachmentInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentArgs and GetGatewayVpnAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentArgs{...}
type GetGatewayVpnAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentOutput() GetGatewayVpnAttachmentsAttachmentOutput
	ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentOutput
}

type GetGatewayVpnAttachmentsAttachmentArgs struct {
	// The configurations of the BGP routing protocol.
	BgpConfigs GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput `pulumi:"bgpConfigs"`
	// The status of the IPsec-VPN connection.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the customer gateway.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
	EffectImmediately pulumi.BoolInput `pulumi:"effectImmediately"`
	// The health check configurations.
	HealthCheckConfigs GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput `pulumi:"healthCheckConfigs"`
	// The ID of the Vpn Attachment.
	Id pulumi.StringInput `pulumi:"id"`
	// Configuration negotiated in the second stage.
	IkeConfigs GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// The internet ip of the resource. The cen.TransitRouterVpnAttachment resource will not have a value until after it is created.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The configuration of Phase 2 negotiations.
	IpsecConfigs GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The CIDR block of the virtual private cloud (VPC).
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// The network type.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The CIDR block of the on-premises data center.
	RemoteSubnet pulumi.StringInput `pulumi:"remoteSubnet"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the IPsec-VPN connection.
	VpnAttachmentName pulumi.StringInput `pulumi:"vpnAttachmentName"`
	// The first ID of the resource.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
}

func (GetGatewayVpnAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentArgs) ToGetGatewayVpnAttachmentsAttachmentOutput() GetGatewayVpnAttachmentsAttachmentOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentArgs) ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentOutput)
}

// GetGatewayVpnAttachmentsAttachmentArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentArray and GetGatewayVpnAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentArray{ GetGatewayVpnAttachmentsAttachmentArgs{...} }
type GetGatewayVpnAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentArrayOutput() GetGatewayVpnAttachmentsAttachmentArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentArray []GetGatewayVpnAttachmentsAttachmentInput

func (GetGatewayVpnAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentArray) ToGetGatewayVpnAttachmentsAttachmentArrayOutput() GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentArray) ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentOutput) ToGetGatewayVpnAttachmentsAttachmentOutput() GetGatewayVpnAttachmentsAttachmentOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentOutput) ToGetGatewayVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentOutput {
	return o
}

// The configurations of the BGP routing protocol.
func (o GetGatewayVpnAttachmentsAttachmentOutput) BgpConfigs() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentBgpConfig {
		return v.BgpConfigs
	}).(GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput)
}

// The status of the IPsec-VPN connection.
func (o GetGatewayVpnAttachmentsAttachmentOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o GetGatewayVpnAttachmentsAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the customer gateway.
func (o GetGatewayVpnAttachmentsAttachmentOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

// Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
func (o GetGatewayVpnAttachmentsAttachmentOutput) EffectImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) bool { return v.EffectImmediately }).(pulumi.BoolOutput)
}

// The health check configurations.
func (o GetGatewayVpnAttachmentsAttachmentOutput) HealthCheckConfigs() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentHealthCheckConfig {
		return v.HealthCheckConfigs
	}).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput)
}

// The ID of the Vpn Attachment.
func (o GetGatewayVpnAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// Configuration negotiated in the second stage.
func (o GetGatewayVpnAttachmentsAttachmentOutput) IkeConfigs() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentIkeConfig {
		return v.IkeConfigs
	}).(GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput)
}

// The internet ip of the resource. The cen.TransitRouterVpnAttachment resource will not have a value until after it is created.
func (o GetGatewayVpnAttachmentsAttachmentOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The configuration of Phase 2 negotiations.
func (o GetGatewayVpnAttachmentsAttachmentOutput) IpsecConfigs() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) []GetGatewayVpnAttachmentsAttachmentIpsecConfig {
		return v.IpsecConfigs
	}).(GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput)
}

// The CIDR block of the virtual private cloud (VPC).
func (o GetGatewayVpnAttachmentsAttachmentOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// The network type.
func (o GetGatewayVpnAttachmentsAttachmentOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The CIDR block of the on-premises data center.
func (o GetGatewayVpnAttachmentsAttachmentOutput) RemoteSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.RemoteSubnet }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetGatewayVpnAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the IPsec-VPN connection.
func (o GetGatewayVpnAttachmentsAttachmentOutput) VpnAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.VpnAttachmentName }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetGatewayVpnAttachmentsAttachmentOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachment) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachment)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentArrayOutput) ToGetGatewayVpnAttachmentsAttachmentArrayOutput() GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentArrayOutput) ToGetGatewayVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachment {
		return vs[0].([]GetGatewayVpnAttachmentsAttachment)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentOutput)
}

type GetGatewayVpnAttachmentsAttachmentBgpConfig struct {
	// The ASN on the Alibaba Cloud side.
	LocalAsn string `pulumi:"localAsn"`
	// The BGP IP address on the Alibaba Cloud side.
	LocalBgpIp string `pulumi:"localBgpIp"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
	TunnelCidr string `pulumi:"tunnelCidr"`
}

// GetGatewayVpnAttachmentsAttachmentBgpConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentBgpConfigArgs and GetGatewayVpnAttachmentsAttachmentBgpConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentBgpConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentBgpConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentBgpConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigArgs struct {
	// The ASN on the Alibaba Cloud side.
	LocalAsn pulumi.StringInput `pulumi:"localAsn"`
	// The BGP IP address on the Alibaba Cloud side.
	LocalBgpIp pulumi.StringInput `pulumi:"localBgpIp"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
	TunnelCidr pulumi.StringInput `pulumi:"tunnelCidr"`
}

func (GetGatewayVpnAttachmentsAttachmentBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArgs) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArgs) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentBgpConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentBgpConfigArray and GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentBgpConfigArray{ GetGatewayVpnAttachmentsAttachmentBgpConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigArray []GetGatewayVpnAttachmentsAttachmentBgpConfigInput

func (GetGatewayVpnAttachmentsAttachmentBgpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArray) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentBgpConfigArray) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return o
}

// The ASN on the Alibaba Cloud side.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) LocalAsn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.LocalAsn }).(pulumi.StringOutput)
}

// The BGP IP address on the Alibaba Cloud side.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) LocalBgpIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.LocalBgpIp }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.Status }).(pulumi.StringOutput)
}

// The CIDR block of the IPsec tunnel. The CIDR block belongs to 169.254.0.0/16. The mask of the CIDR block is 30 bits in length.
func (o GetGatewayVpnAttachmentsAttachmentBgpConfigOutput) TunnelCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentBgpConfig) string { return v.TunnelCidr }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentBgpConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentBgpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentBgpConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentBgpConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentBgpConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfig struct {
	// The destination IP address.
	Dip string `pulumi:"dip"`
	// Specifies whether to enable health checks.
	Enable bool `pulumi:"enable"`
	// The interval between two consecutive health checks. Unit: seconds.
	Interval int `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails.
	Policy string `pulumi:"policy"`
	// The maximum number of health check retries.
	Retry int `pulumi:"retry"`
	// The source IP address.
	Sip string `pulumi:"sip"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs and GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs struct {
	// The destination IP address.
	Dip pulumi.StringInput `pulumi:"dip"`
	// Specifies whether to enable health checks.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The interval between two consecutive health checks. Unit: seconds.
	Interval pulumi.IntInput `pulumi:"interval"`
	// Whether to revoke the published route when the health check fails.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The maximum number of health check retries.
	Retry pulumi.IntInput `pulumi:"retry"`
	// The source IP address.
	Sip pulumi.StringInput `pulumi:"sip"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray and GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray{ GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray []GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return o
}

// The destination IP address.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Dip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Dip }).(pulumi.StringOutput)
}

// Specifies whether to enable health checks.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) int { return v.Interval }).(pulumi.IntOutput)
}

// Whether to revoke the published route when the health check fails.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Policy }).(pulumi.StringOutput)
}

// The maximum number of health check retries.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Retry() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) int { return v.Retry }).(pulumi.IntOutput)
}

// The source IP address.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Sip() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Sip }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentHealthCheckConfig) string { return v.Status }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentHealthCheckConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentHealthCheckConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentIkeConfig struct {
	// The IKE authentication algorithm.
	IkeAuthAlg string `pulumi:"ikeAuthAlg"`
	// The IKE encryption algorithm.
	IkeEncAlg string `pulumi:"ikeEncAlg"`
	// The IKE lifetime. Unit: seconds.
	IkeLifetime string `pulumi:"ikeLifetime"`
	// The IKE negotiation mode.
	IkeMode string `pulumi:"ikeMode"`
	// The DH group.
	IkePfs string `pulumi:"ikePfs"`
	// The version of the IKE protocol.
	IkeVersion string `pulumi:"ikeVersion"`
	// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default. The cen.TransitRouterVpnAttachment resource will not have a value until after it is created.
	LocalId string `pulumi:"localId"`
	// The pre-shared key.
	Psk string `pulumi:"psk"`
	// The identifier of the peer. The default value is the IP address of the VPN gateway. The value can be a fully qualified domain name (FQDN) or an IP address.
	RemoteId string `pulumi:"remoteId"`
}

// GetGatewayVpnAttachmentsAttachmentIkeConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIkeConfigArgs and GetGatewayVpnAttachmentsAttachmentIkeConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIkeConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIkeConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentIkeConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigArgs struct {
	// The IKE authentication algorithm.
	IkeAuthAlg pulumi.StringInput `pulumi:"ikeAuthAlg"`
	// The IKE encryption algorithm.
	IkeEncAlg pulumi.StringInput `pulumi:"ikeEncAlg"`
	// The IKE lifetime. Unit: seconds.
	IkeLifetime pulumi.StringInput `pulumi:"ikeLifetime"`
	// The IKE negotiation mode.
	IkeMode pulumi.StringInput `pulumi:"ikeMode"`
	// The DH group.
	IkePfs pulumi.StringInput `pulumi:"ikePfs"`
	// The version of the IKE protocol.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default. The cen.TransitRouterVpnAttachment resource will not have a value until after it is created.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The pre-shared key.
	Psk pulumi.StringInput `pulumi:"psk"`
	// The identifier of the peer. The default value is the IP address of the VPN gateway. The value can be a fully qualified domain name (FQDN) or an IP address.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
}

func (GetGatewayVpnAttachmentsAttachmentIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIkeConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIkeConfigArray and GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIkeConfigArray{ GetGatewayVpnAttachmentsAttachmentIkeConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigArray []GetGatewayVpnAttachmentsAttachmentIkeConfigInput

func (GetGatewayVpnAttachmentsAttachmentIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArray) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIkeConfigArray) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return o
}

// The IKE authentication algorithm.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeAuthAlg }).(pulumi.StringOutput)
}

// The IKE encryption algorithm.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeEncAlg }).(pulumi.StringOutput)
}

// The IKE lifetime. Unit: seconds.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeLifetime }).(pulumi.StringOutput)
}

// The IKE negotiation mode.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeMode }).(pulumi.StringOutput)
}

// The DH group.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkePfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkePfs }).(pulumi.StringOutput)
}

// The version of the IKE protocol.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default. The cen.TransitRouterVpnAttachment resource will not have a value until after it is created.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.LocalId }).(pulumi.StringOutput)
}

// The pre-shared key.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) Psk() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.Psk }).(pulumi.StringOutput)
}

// The identifier of the peer. The default value is the IP address of the VPN gateway. The value can be a fully qualified domain name (FQDN) or an IP address.
func (o GetGatewayVpnAttachmentsAttachmentIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIkeConfig) string { return v.RemoteId }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIkeConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentIkeConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentIkeConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentIkeConfigOutput)
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfig struct {
	// The IPsec authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// The IPsec encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// The IPsec lifetime. Unit: seconds.
	IpsecLifetime string `pulumi:"ipsecLifetime"`
	// The DH group.
	IpsecPfs string `pulumi:"ipsecPfs"`
}

// GetGatewayVpnAttachmentsAttachmentIpsecConfigInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs and GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIpsecConfigInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs{...}
type GetGatewayVpnAttachmentsAttachmentIpsecConfigInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput
	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs struct {
	// The IPsec authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// The IPsec encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// The IPsec lifetime. Unit: seconds.
	IpsecLifetime pulumi.StringInput `pulumi:"ipsecLifetime"`
	// The DH group.
	IpsecPfs pulumi.StringInput `pulumi:"ipsecPfs"`
}

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput)
}

// GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput is an input type that accepts GetGatewayVpnAttachmentsAttachmentIpsecConfigArray and GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput` via:
//
//	GetGatewayVpnAttachmentsAttachmentIpsecConfigArray{ GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs{...} }
type GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput
	ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigArray []GetGatewayVpnAttachmentsAttachmentIpsecConfigInput

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArray) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return i.ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayVpnAttachmentsAttachmentIpsecConfigArray) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput)
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return o
}

// The IPsec authentication algorithm.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// The IPsec encryption algorithm.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// The IPsec lifetime. Unit: seconds.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecLifetime }).(pulumi.StringOutput)
}

// The DH group.
func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput) IpsecPfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVpnAttachmentsAttachmentIpsecConfig) string { return v.IpsecPfs }).(pulumi.StringOutput)
}

type GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayVpnAttachmentsAttachmentIpsecConfig)(nil)).Elem()
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput() GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) ToGetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutputWithContext(ctx context.Context) GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput {
	return o
}

func (o GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayVpnAttachmentsAttachmentIpsecConfig {
		return vs[0].([]GetGatewayVpnAttachmentsAttachmentIpsecConfig)[vs[1].(int)]
	}).(GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput)
}

type GetGatewaysGateway struct {
	// Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
	AutoPropagate string `pulumi:"autoPropagate"`
	// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
	BusinessStatus string `pulumi:"businessStatus"`
	// The creation time of the VPN gateway.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPN
	Description string `pulumi:"description"`
	// Indicates whether the IPsec-VPN feature is enabled.
	EnableIpsec string `pulumi:"enableIpsec"`
	// Whether the ssl function is enabled.
	EnableSsl string `pulumi:"enableSsl"`
	// The expiration time of the VPN gateway.
	EndTime string `pulumi:"endTime"`
	// ID of the VPN.
	Id string `pulumi:"id"`
	// The charge type of the VPN gateway.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// The internet ip of the VPN.
	InternetIp string `pulumi:"internetIp"`
	// The name of the VPN.
	Name string `pulumi:"name"`
	// The network type of the VPN gateway.
	NetworkType string `pulumi:"networkType"`
	// The Specification of the VPN
	Specification string `pulumi:"specification"`
	// Total count of ssl vpn connections.
	SslConnections int `pulumi:"sslConnections"`
	// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
	Status string `pulumi:"status"`
	// Use the VPC ID as the search key.
	VpcId string `pulumi:"vpcId"`
}

// GetGatewaysGatewayInput is an input type that accepts GetGatewaysGatewayArgs and GetGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetGatewaysGatewayInput` via:
//
//	GetGatewaysGatewayArgs{...}
type GetGatewaysGatewayInput interface {
	pulumi.Input

	ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput
	ToGetGatewaysGatewayOutputWithContext(context.Context) GetGatewaysGatewayOutput
}

type GetGatewaysGatewayArgs struct {
	// Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
	AutoPropagate pulumi.StringInput `pulumi:"autoPropagate"`
	// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The creation time of the VPN gateway.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPN
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates whether the IPsec-VPN feature is enabled.
	EnableIpsec pulumi.StringInput `pulumi:"enableIpsec"`
	// Whether the ssl function is enabled.
	EnableSsl pulumi.StringInput `pulumi:"enableSsl"`
	// The expiration time of the VPN gateway.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// ID of the VPN.
	Id pulumi.StringInput `pulumi:"id"`
	// The charge type of the VPN gateway.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// The internet ip of the VPN.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The name of the VPN.
	Name pulumi.StringInput `pulumi:"name"`
	// The network type of the VPN gateway.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The Specification of the VPN
	Specification pulumi.StringInput `pulumi:"specification"`
	// Total count of ssl vpn connections.
	SslConnections pulumi.IntInput `pulumi:"sslConnections"`
	// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
	Status pulumi.StringInput `pulumi:"status"`
	// Use the VPC ID as the search key.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysGateway)(nil)).Elem()
}

func (i GetGatewaysGatewayArgs) ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput {
	return i.ToGetGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetGatewaysGatewayArgs) ToGetGatewaysGatewayOutputWithContext(ctx context.Context) GetGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewaysGatewayOutput)
}

// GetGatewaysGatewayArrayInput is an input type that accepts GetGatewaysGatewayArray and GetGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewaysGatewayArrayInput` via:
//
//	GetGatewaysGatewayArray{ GetGatewaysGatewayArgs{...} }
type GetGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput
	ToGetGatewaysGatewayArrayOutputWithContext(context.Context) GetGatewaysGatewayArrayOutput
}

type GetGatewaysGatewayArray []GetGatewaysGatewayInput

func (GetGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewaysGateway)(nil)).Elem()
}

func (i GetGatewaysGatewayArray) ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput {
	return i.ToGetGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewaysGatewayArray) ToGetGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewaysGatewayArrayOutput)
}

type GetGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysGateway)(nil)).Elem()
}

func (o GetGatewaysGatewayOutput) ToGetGatewaysGatewayOutput() GetGatewaysGatewayOutput {
	return o
}

func (o GetGatewaysGatewayOutput) ToGetGatewaysGatewayOutputWithContext(ctx context.Context) GetGatewaysGatewayOutput {
	return o
}

// Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
func (o GetGatewaysGatewayOutput) AutoPropagate() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.AutoPropagate }).(pulumi.StringOutput)
}

// Limit search to specific business status - valid value is "Normal", "FinancialLocked".
func (o GetGatewaysGatewayOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The creation time of the VPN gateway.
func (o GetGatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPN
func (o GetGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the IPsec-VPN feature is enabled.
func (o GetGatewaysGatewayOutput) EnableIpsec() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EnableIpsec }).(pulumi.StringOutput)
}

// Whether the ssl function is enabled.
func (o GetGatewaysGatewayOutput) EnableSsl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EnableSsl }).(pulumi.StringOutput)
}

// The expiration time of the VPN gateway.
func (o GetGatewaysGatewayOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.EndTime }).(pulumi.StringOutput)
}

// ID of the VPN.
func (o GetGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The charge type of the VPN gateway.
func (o GetGatewaysGatewayOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The internet ip of the VPN.
func (o GetGatewaysGatewayOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The name of the VPN.
func (o GetGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The network type of the VPN gateway.
func (o GetGatewaysGatewayOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The Specification of the VPN
func (o GetGatewaysGatewayOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Specification }).(pulumi.StringOutput)
}

// Total count of ssl vpn connections.
func (o GetGatewaysGatewayOutput) SslConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewaysGateway) int { return v.SslConnections }).(pulumi.IntOutput)
}

// Limit search to specific status - valid value is "Init", "Provisioning", "Active", "Updating", "Deleting".
func (o GetGatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// Use the VPC ID as the search key.
func (o GetGatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewaysGateway)(nil)).Elem()
}

func (o GetGatewaysGatewayArrayOutput) ToGetGatewaysGatewayArrayOutput() GetGatewaysGatewayArrayOutput {
	return o
}

func (o GetGatewaysGatewayArrayOutput) ToGetGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetGatewaysGatewayArrayOutput {
	return o
}

func (o GetGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewaysGateway {
		return vs[0].([]GetGatewaysGateway)[vs[1].(int)]
	}).(GetGatewaysGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionBgpConfigInput)(nil)).Elem(), ConnectionBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionBgpConfigPtrInput)(nil)).Elem(), ConnectionBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionHealthCheckConfigInput)(nil)).Elem(), ConnectionHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionHealthCheckConfigPtrInput)(nil)).Elem(), ConnectionHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIkeConfigInput)(nil)).Elem(), ConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIkeConfigPtrInput)(nil)).Elem(), ConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIpsecConfigInput)(nil)).Elem(), ConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionIpsecConfigPtrInput)(nil)).Elem(), ConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentBgpConfigInput)(nil)).Elem(), GatewayVpnAttachmentBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentBgpConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfigInput)(nil)).Elem(), GatewayVpnAttachmentHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentHealthCheckConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIkeConfigInput)(nil)).Elem(), GatewayVpnAttachmentIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIkeConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIpsecConfigInput)(nil)).Elem(), GatewayVpnAttachmentIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpnAttachmentIpsecConfigPtrInput)(nil)).Elem(), GatewayVpnAttachmentIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIkeConfigInput)(nil)).Elem(), IpsecServerIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIkeConfigArrayInput)(nil)).Elem(), IpsecServerIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIpsecConfigInput)(nil)).Elem(), IpsecServerIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecServerIpsecConfigArrayInput)(nil)).Elem(), IpsecServerIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionInput)(nil)).Elem(), GetConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionArrayInput)(nil)).Elem(), GetConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIkeConfigInput)(nil)).Elem(), GetConnectionsConnectionIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIkeConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIpsecConfigInput)(nil)).Elem(), GetConnectionsConnectionIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionIpsecConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheckInput)(nil)).Elem(), GetConnectionsConnectionVcoHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVcoHealthCheckArrayInput)(nil)).Elem(), GetConnectionsConnectionVcoHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfigInput)(nil)).Elem(), GetConnectionsConnectionVpnBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionsConnectionVpnBgpConfigArrayInput)(nil)).Elem(), GetConnectionsConnectionVpnBgpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomerGatewaysGatewayInput)(nil)).Elem(), GetCustomerGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomerGatewaysGatewayArrayInput)(nil)).Elem(), GetCustomerGatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVcoRoutesRouteInput)(nil)).Elem(), GetGatewayVcoRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVcoRoutesRouteArrayInput)(nil)).Elem(), GetGatewayVcoRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentBgpConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentBgpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIkeConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfigInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayInput)(nil)).Elem(), GetGatewayVpnAttachmentsAttachmentIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewaysGatewayInput)(nil)).Elem(), GetGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewaysGatewayArrayInput)(nil)).Elem(), GetGatewaysGatewayArray{})
	pulumi.RegisterOutputType(ConnectionBgpConfigOutput{})
	pulumi.RegisterOutputType(ConnectionBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(ConnectionHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(ConnectionIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(ConnectionIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentBgpConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIkeConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIpsecConfigOutput{})
	pulumi.RegisterOutputType(GatewayVpnAttachmentIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(IpsecServerIkeConfigOutput{})
	pulumi.RegisterOutputType(IpsecServerIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(IpsecServerIpsecConfigOutput{})
	pulumi.RegisterOutputType(IpsecServerIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVcoHealthCheckOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVcoHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVpnBgpConfigOutput{})
	pulumi.RegisterOutputType(GetConnectionsConnectionVpnBgpConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVcoRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetGatewayVcoRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentBgpConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentBgpConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentHealthCheckConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIkeConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayVpnAttachmentsAttachmentIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewaysGatewayArrayOutput{})
}
