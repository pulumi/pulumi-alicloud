// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Vpn Gateway Vco Routes of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.183.0+.
func GetGatewayVcoRoutes(ctx *pulumi.Context, args *GetGatewayVcoRoutesArgs, opts ...pulumi.InvokeOption) (*GetGatewayVcoRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGatewayVcoRoutesResult
	err := ctx.Invoke("alicloud:vpn/getGatewayVcoRoutes:getGatewayVcoRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayVcoRoutes.
type GetGatewayVcoRoutesArgs struct {
	// A list of Vco Route IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The Routing input type. Valid values: `custom`, `bgp`.
	RouteEntryType *string `pulumi:"routeEntryType"`
	// The status of the vpn route entry.
	Status *string `pulumi:"status"`
	// The id of the vpn connection.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
}

// A collection of values returned by getGatewayVcoRoutes.
type GetGatewayVcoRoutesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string                     `pulumi:"id"`
	Ids             []string                   `pulumi:"ids"`
	OutputFile      *string                    `pulumi:"outputFile"`
	PageNumber      *int                       `pulumi:"pageNumber"`
	PageSize        *int                       `pulumi:"pageSize"`
	RouteEntryType  *string                    `pulumi:"routeEntryType"`
	Routes          []GetGatewayVcoRoutesRoute `pulumi:"routes"`
	Status          *string                    `pulumi:"status"`
	VpnConnectionId string                     `pulumi:"vpnConnectionId"`
}

func GetGatewayVcoRoutesOutput(ctx *pulumi.Context, args GetGatewayVcoRoutesOutputArgs, opts ...pulumi.InvokeOption) GetGatewayVcoRoutesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGatewayVcoRoutesResult, error) {
			args := v.(GetGatewayVcoRoutesArgs)
			r, err := GetGatewayVcoRoutes(ctx, &args, opts...)
			var s GetGatewayVcoRoutesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGatewayVcoRoutesResultOutput)
}

// A collection of arguments for invoking getGatewayVcoRoutes.
type GetGatewayVcoRoutesOutputArgs struct {
	// A list of Vco Route IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The Routing input type. Valid values: `custom`, `bgp`.
	RouteEntryType pulumi.StringPtrInput `pulumi:"routeEntryType"`
	// The status of the vpn route entry.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The id of the vpn connection.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
}

func (GetGatewayVcoRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVcoRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayVcoRoutes.
type GetGatewayVcoRoutesResultOutput struct{ *pulumi.OutputState }

func (GetGatewayVcoRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayVcoRoutesResult)(nil)).Elem()
}

func (o GetGatewayVcoRoutesResultOutput) ToGetGatewayVcoRoutesResultOutput() GetGatewayVcoRoutesResultOutput {
	return o
}

func (o GetGatewayVcoRoutesResultOutput) ToGetGatewayVcoRoutesResultOutputWithContext(ctx context.Context) GetGatewayVcoRoutesResultOutput {
	return o
}

func (o GetGatewayVcoRoutesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetGatewayVcoRoutesResult] {
	return pulumix.Output[GetGatewayVcoRoutesResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetGatewayVcoRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGatewayVcoRoutesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetGatewayVcoRoutesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetGatewayVcoRoutesResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetGatewayVcoRoutesResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

func (o GetGatewayVcoRoutesResultOutput) RouteEntryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) *string { return v.RouteEntryType }).(pulumi.StringPtrOutput)
}

func (o GetGatewayVcoRoutesResultOutput) Routes() GetGatewayVcoRoutesRouteArrayOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) []GetGatewayVcoRoutesRoute { return v.Routes }).(GetGatewayVcoRoutesRouteArrayOutput)
}

func (o GetGatewayVcoRoutesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetGatewayVcoRoutesResultOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayVcoRoutesResult) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGatewayVcoRoutesResultOutput{})
}
