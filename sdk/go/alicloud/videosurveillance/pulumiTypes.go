// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package videosurveillance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetSystemGroupsGroup struct {
	// The App Name of Group.
	App string `pulumi:"app"`
	// The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
	Callback string `pulumi:"callback"`
	// The creation time of the Group.
	CreateTime string `pulumi:"createTime"`
	// The description of the Group.
	Description string `pulumi:"description"`
	// Whether to open Group.
	Enabled bool `pulumi:"enabled"`
	// Space of national standard ID. **NOTE:** Available only in the national standard access space.
	GbId string `pulumi:"gbId"`
	// Space of national standard signaling server address. **NOTE:** Available only in the national standard access space.
	GbIp string `pulumi:"gbIp"`
	// The ID of Group.
	GroupId string `pulumi:"groupId"`
	// The name of Group.
	GroupName string `pulumi:"groupName"`
	// The ID of the Group.
	Id string `pulumi:"id"`
	// The use of the access protocol support `gb28181`,`rtmp`(Real Time Messaging Protocol).
	InProtocol string `pulumi:"inProtocol"`
	// The use of space play Protocol multi-valued separate them with commas (,). Valid values: `flv`,`hls`, `rtmp`(Real Time Messaging Protocol).
	OutProtocol string `pulumi:"outProtocol"`
	// -The domain name of plan streaming used by the group.
	PlayDomain string `pulumi:"playDomain"`
	// The domain name of push streaming used by the group.
	PushDomain string `pulumi:"pushDomain"`
	// The Device statistics of Group.
	Stats []GetSystemGroupsGroupStat `pulumi:"stats"`
}

// GetSystemGroupsGroupInput is an input type that accepts GetSystemGroupsGroupArgs and GetSystemGroupsGroupOutput values.
// You can construct a concrete instance of `GetSystemGroupsGroupInput` via:
//
//          GetSystemGroupsGroupArgs{...}
type GetSystemGroupsGroupInput interface {
	pulumi.Input

	ToGetSystemGroupsGroupOutput() GetSystemGroupsGroupOutput
	ToGetSystemGroupsGroupOutputWithContext(context.Context) GetSystemGroupsGroupOutput
}

type GetSystemGroupsGroupArgs struct {
	// The App Name of Group.
	App pulumi.StringInput `pulumi:"app"`
	// The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
	Callback pulumi.StringInput `pulumi:"callback"`
	// The creation time of the Group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Group.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to open Group.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Space of national standard ID. **NOTE:** Available only in the national standard access space.
	GbId pulumi.StringInput `pulumi:"gbId"`
	// Space of national standard signaling server address. **NOTE:** Available only in the national standard access space.
	GbIp pulumi.StringInput `pulumi:"gbIp"`
	// The ID of Group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of Group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The ID of the Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The use of the access protocol support `gb28181`,`rtmp`(Real Time Messaging Protocol).
	InProtocol pulumi.StringInput `pulumi:"inProtocol"`
	// The use of space play Protocol multi-valued separate them with commas (,). Valid values: `flv`,`hls`, `rtmp`(Real Time Messaging Protocol).
	OutProtocol pulumi.StringInput `pulumi:"outProtocol"`
	// -The domain name of plan streaming used by the group.
	PlayDomain pulumi.StringInput `pulumi:"playDomain"`
	// The domain name of push streaming used by the group.
	PushDomain pulumi.StringInput `pulumi:"pushDomain"`
	// The Device statistics of Group.
	Stats GetSystemGroupsGroupStatArrayInput `pulumi:"stats"`
}

func (GetSystemGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemGroupsGroup)(nil)).Elem()
}

func (i GetSystemGroupsGroupArgs) ToGetSystemGroupsGroupOutput() GetSystemGroupsGroupOutput {
	return i.ToGetSystemGroupsGroupOutputWithContext(context.Background())
}

func (i GetSystemGroupsGroupArgs) ToGetSystemGroupsGroupOutputWithContext(ctx context.Context) GetSystemGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemGroupsGroupOutput)
}

// GetSystemGroupsGroupArrayInput is an input type that accepts GetSystemGroupsGroupArray and GetSystemGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetSystemGroupsGroupArrayInput` via:
//
//          GetSystemGroupsGroupArray{ GetSystemGroupsGroupArgs{...} }
type GetSystemGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetSystemGroupsGroupArrayOutput() GetSystemGroupsGroupArrayOutput
	ToGetSystemGroupsGroupArrayOutputWithContext(context.Context) GetSystemGroupsGroupArrayOutput
}

type GetSystemGroupsGroupArray []GetSystemGroupsGroupInput

func (GetSystemGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemGroupsGroup)(nil)).Elem()
}

func (i GetSystemGroupsGroupArray) ToGetSystemGroupsGroupArrayOutput() GetSystemGroupsGroupArrayOutput {
	return i.ToGetSystemGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetSystemGroupsGroupArray) ToGetSystemGroupsGroupArrayOutputWithContext(ctx context.Context) GetSystemGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemGroupsGroupArrayOutput)
}

type GetSystemGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetSystemGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemGroupsGroup)(nil)).Elem()
}

func (o GetSystemGroupsGroupOutput) ToGetSystemGroupsGroupOutput() GetSystemGroupsGroupOutput {
	return o
}

func (o GetSystemGroupsGroupOutput) ToGetSystemGroupsGroupOutputWithContext(ctx context.Context) GetSystemGroupsGroupOutput {
	return o
}

// The App Name of Group.
func (o GetSystemGroupsGroupOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.App }).(pulumi.StringOutput)
}

// The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
func (o GetSystemGroupsGroupOutput) Callback() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.Callback }).(pulumi.StringOutput)
}

// The creation time of the Group.
func (o GetSystemGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Group.
func (o GetSystemGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to open Group.
func (o GetSystemGroupsGroupOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Space of national standard ID. **NOTE:** Available only in the national standard access space.
func (o GetSystemGroupsGroupOutput) GbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.GbId }).(pulumi.StringOutput)
}

// Space of national standard signaling server address. **NOTE:** Available only in the national standard access space.
func (o GetSystemGroupsGroupOutput) GbIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.GbIp }).(pulumi.StringOutput)
}

// The ID of Group.
func (o GetSystemGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of Group.
func (o GetSystemGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// The ID of the Group.
func (o GetSystemGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The use of the access protocol support `gb28181`,`rtmp`(Real Time Messaging Protocol).
func (o GetSystemGroupsGroupOutput) InProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.InProtocol }).(pulumi.StringOutput)
}

// The use of space play Protocol multi-valued separate them with commas (,). Valid values: `flv`,`hls`, `rtmp`(Real Time Messaging Protocol).
func (o GetSystemGroupsGroupOutput) OutProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.OutProtocol }).(pulumi.StringOutput)
}

// -The domain name of plan streaming used by the group.
func (o GetSystemGroupsGroupOutput) PlayDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.PlayDomain }).(pulumi.StringOutput)
}

// The domain name of push streaming used by the group.
func (o GetSystemGroupsGroupOutput) PushDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) string { return v.PushDomain }).(pulumi.StringOutput)
}

// The Device statistics of Group.
func (o GetSystemGroupsGroupOutput) Stats() GetSystemGroupsGroupStatArrayOutput {
	return o.ApplyT(func(v GetSystemGroupsGroup) []GetSystemGroupsGroupStat { return v.Stats }).(GetSystemGroupsGroupStatArrayOutput)
}

type GetSystemGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetSystemGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemGroupsGroup)(nil)).Elem()
}

func (o GetSystemGroupsGroupArrayOutput) ToGetSystemGroupsGroupArrayOutput() GetSystemGroupsGroupArrayOutput {
	return o
}

func (o GetSystemGroupsGroupArrayOutput) ToGetSystemGroupsGroupArrayOutputWithContext(ctx context.Context) GetSystemGroupsGroupArrayOutput {
	return o
}

func (o GetSystemGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetSystemGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSystemGroupsGroup {
		return vs[0].([]GetSystemGroupsGroup)[vs[1].(int)]
	}).(GetSystemGroupsGroupOutput)
}

type GetSystemGroupsGroupStat struct {
	// The total number of devices in the group.
	DeviceNum string `pulumi:"deviceNum"`
	// The total number of smart devices in the group.
	IedNum string `pulumi:"iedNum"`
	// The total number of cameras in the group.
	IpcNum string `pulumi:"ipcNum"`
	// The total number of platforms in the group.
	PlatformNum string `pulumi:"platformNum"`
}

// GetSystemGroupsGroupStatInput is an input type that accepts GetSystemGroupsGroupStatArgs and GetSystemGroupsGroupStatOutput values.
// You can construct a concrete instance of `GetSystemGroupsGroupStatInput` via:
//
//          GetSystemGroupsGroupStatArgs{...}
type GetSystemGroupsGroupStatInput interface {
	pulumi.Input

	ToGetSystemGroupsGroupStatOutput() GetSystemGroupsGroupStatOutput
	ToGetSystemGroupsGroupStatOutputWithContext(context.Context) GetSystemGroupsGroupStatOutput
}

type GetSystemGroupsGroupStatArgs struct {
	// The total number of devices in the group.
	DeviceNum pulumi.StringInput `pulumi:"deviceNum"`
	// The total number of smart devices in the group.
	IedNum pulumi.StringInput `pulumi:"iedNum"`
	// The total number of cameras in the group.
	IpcNum pulumi.StringInput `pulumi:"ipcNum"`
	// The total number of platforms in the group.
	PlatformNum pulumi.StringInput `pulumi:"platformNum"`
}

func (GetSystemGroupsGroupStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemGroupsGroupStat)(nil)).Elem()
}

func (i GetSystemGroupsGroupStatArgs) ToGetSystemGroupsGroupStatOutput() GetSystemGroupsGroupStatOutput {
	return i.ToGetSystemGroupsGroupStatOutputWithContext(context.Background())
}

func (i GetSystemGroupsGroupStatArgs) ToGetSystemGroupsGroupStatOutputWithContext(ctx context.Context) GetSystemGroupsGroupStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemGroupsGroupStatOutput)
}

// GetSystemGroupsGroupStatArrayInput is an input type that accepts GetSystemGroupsGroupStatArray and GetSystemGroupsGroupStatArrayOutput values.
// You can construct a concrete instance of `GetSystemGroupsGroupStatArrayInput` via:
//
//          GetSystemGroupsGroupStatArray{ GetSystemGroupsGroupStatArgs{...} }
type GetSystemGroupsGroupStatArrayInput interface {
	pulumi.Input

	ToGetSystemGroupsGroupStatArrayOutput() GetSystemGroupsGroupStatArrayOutput
	ToGetSystemGroupsGroupStatArrayOutputWithContext(context.Context) GetSystemGroupsGroupStatArrayOutput
}

type GetSystemGroupsGroupStatArray []GetSystemGroupsGroupStatInput

func (GetSystemGroupsGroupStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemGroupsGroupStat)(nil)).Elem()
}

func (i GetSystemGroupsGroupStatArray) ToGetSystemGroupsGroupStatArrayOutput() GetSystemGroupsGroupStatArrayOutput {
	return i.ToGetSystemGroupsGroupStatArrayOutputWithContext(context.Background())
}

func (i GetSystemGroupsGroupStatArray) ToGetSystemGroupsGroupStatArrayOutputWithContext(ctx context.Context) GetSystemGroupsGroupStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemGroupsGroupStatArrayOutput)
}

type GetSystemGroupsGroupStatOutput struct{ *pulumi.OutputState }

func (GetSystemGroupsGroupStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemGroupsGroupStat)(nil)).Elem()
}

func (o GetSystemGroupsGroupStatOutput) ToGetSystemGroupsGroupStatOutput() GetSystemGroupsGroupStatOutput {
	return o
}

func (o GetSystemGroupsGroupStatOutput) ToGetSystemGroupsGroupStatOutputWithContext(ctx context.Context) GetSystemGroupsGroupStatOutput {
	return o
}

// The total number of devices in the group.
func (o GetSystemGroupsGroupStatOutput) DeviceNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroupStat) string { return v.DeviceNum }).(pulumi.StringOutput)
}

// The total number of smart devices in the group.
func (o GetSystemGroupsGroupStatOutput) IedNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroupStat) string { return v.IedNum }).(pulumi.StringOutput)
}

// The total number of cameras in the group.
func (o GetSystemGroupsGroupStatOutput) IpcNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroupStat) string { return v.IpcNum }).(pulumi.StringOutput)
}

// The total number of platforms in the group.
func (o GetSystemGroupsGroupStatOutput) PlatformNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGroupsGroupStat) string { return v.PlatformNum }).(pulumi.StringOutput)
}

type GetSystemGroupsGroupStatArrayOutput struct{ *pulumi.OutputState }

func (GetSystemGroupsGroupStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSystemGroupsGroupStat)(nil)).Elem()
}

func (o GetSystemGroupsGroupStatArrayOutput) ToGetSystemGroupsGroupStatArrayOutput() GetSystemGroupsGroupStatArrayOutput {
	return o
}

func (o GetSystemGroupsGroupStatArrayOutput) ToGetSystemGroupsGroupStatArrayOutputWithContext(ctx context.Context) GetSystemGroupsGroupStatArrayOutput {
	return o
}

func (o GetSystemGroupsGroupStatArrayOutput) Index(i pulumi.IntInput) GetSystemGroupsGroupStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSystemGroupsGroupStat {
		return vs[0].([]GetSystemGroupsGroupStat)[vs[1].(int)]
	}).(GetSystemGroupsGroupStatOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemGroupsGroupInput)(nil)).Elem(), GetSystemGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemGroupsGroupArrayInput)(nil)).Elem(), GetSystemGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemGroupsGroupStatInput)(nil)).Elem(), GetSystemGroupsGroupStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSystemGroupsGroupStatArrayInput)(nil)).Elem(), GetSystemGroupsGroupStatArray{})
	pulumi.RegisterOutputType(GetSystemGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetSystemGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetSystemGroupsGroupStatOutput{})
	pulumi.RegisterOutputType(GetSystemGroupsGroupStatArrayOutput{})
}
